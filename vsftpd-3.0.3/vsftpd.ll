; ModuleID = 'vsftpd.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.vsf_session = type { %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr*, i8*, i32, i32, i32, %struct.vsf_sysutil_sockaddr*, i32, i32, i32, i64, i64, i32, i32, %struct.mystr, %struct.mystr, i64, i32, %struct.mystr, i32, i32, i32, %struct.mystr, %struct.mystr_list*, i32, i32, i32, %struct.mystr, %struct.mystr, %struct.mystr, %struct.mystr, i32, i32, i32, %struct.mystr, i64, i64, i64, %struct.mystr, i64, %struct.mystr, %struct.mystr, i32, i32, i32, i32, %struct.mystr, i32, i32, i8*, i8*, i8*, %struct.mystr, i32, i32, i32, i32 }
%struct.vsf_sysutil_sockaddr = type { %union.anon.114 }
%union.anon.114 = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%struct.mystr_list = type { i32, i32, %struct.mystr_list_node* }
%struct.mystr_list_node = type { %struct.mystr, %struct.mystr }
%struct.mystr = type { i8*, i32, i32 }
%struct.vsf_sysutil_statbuf = type opaque
%struct.parseconf_str_setting = type { i8*, i8** }
%struct.parseconf_bool_setting = type { i8*, i32* }
%struct.hash = type { i32, i32, i32, i32 (i32, i8*)*, %struct.hash_node** }
%struct.hash_node = type { i8*, i8*, %struct.hash_node*, %struct.hash_node* }
%struct.vsf_sysutil_sig_details = type { void (i8*)*, i8*, i32, i32, i32 }
%struct.timespec = type { i64, i64 }
%struct.pam_conv = type { i32 (i32, %struct.pam_message**, %struct.pam_response**, i8*)*, i8* }
%struct.pam_message = type { i32, i8* }
%struct.pam_response = type { i8*, i32 }
%struct.pam_handle = type opaque
%struct.utmpx = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.__exit_status, i32, %struct.vsf_client_launch, [4 x i32], [20 x i8] }
%struct.__exit_status = type { i16, i16 }
%struct.vsf_client_launch = type { i32, i32 }
%struct.vsf_sysutil_user = type opaque
%struct.vsf_transfer_ret = type { i32, i64 }
%struct.str_locate_result = type { i32, i32, i8 }
%struct.vsf_sysutil_dir = type opaque
%struct.ascii_to_bin_ret = type { i32, i32, i8* }
%struct.vsf_sysutil_group = type opaque
%struct.pt_sandbox = type opaque
%struct.vsf_sysutil_ipaddr = type opaque
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sigaction = type { %union.anon.1, %struct.__sigset_t, i32, void ()* }
%union.anon.1 = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.flock = type { i16, i16, i64, i64, i32 }
%struct.hostent = type { i8*, i8**, i32, i32, i8** }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct._cap_struct = type opaque
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.iovec = type { i8*, i64 }
%struct.cmsghdr = type { i64, i32, i32, [0 x i8] }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.sock_fprog = type { i16, %struct.sock_filter* }

@main.the_session = private unnamed_addr constant %struct.vsf_session { %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr* null, i8* null, i32 0, i32 0, i32 -1, %struct.vsf_sysutil_sockaddr* null, i32 -1, i32 0, i32 0, i64 0, i64 0, i32 1, i32 0, %struct.mystr zeroinitializer, %struct.mystr zeroinitializer, i64 0, i32 1, %struct.mystr zeroinitializer, i32 0, i32 0, i32 0, %struct.mystr zeroinitializer, %struct.mystr_list* null, i32 -1, i32 -1, i32 -1, %struct.mystr zeroinitializer, %struct.mystr zeroinitializer, %struct.mystr zeroinitializer, %struct.mystr zeroinitializer, i32 1, i32 -1, i32 -1, %struct.mystr zeroinitializer, i64 0, i64 0, i64 0, %struct.mystr zeroinitializer, i64 0, %struct.mystr zeroinitializer, %struct.mystr zeroinitializer, i32 -1, i32 -1, i32 0, i32 0, %struct.mystr zeroinitializer, i32 0, i32 0, i8* null, i8* null, i8* null, %struct.mystr zeroinitializer, i32 0, i32 -1, i32 -1, i32 0 }, align 8
@.str = private unnamed_addr constant [24 x i8] c"vsftpd: missing argv[0]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"vsftpd: version 3.0.3\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"unrecognise option: \00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"/etc/vsftpd.conf\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"VSFTPD_LOAD_CONF\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"connected\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"cannot read anon e-mail list file:\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"cannot read banner file:\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"cannot read email passwords file:\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"should not get here: main\00", align 1
@.str.17 = private unnamed_addr constant [56 x i8] c"vsftpd: cannot locate user specified in 'ftp_username':\00", align 1
@.str.18 = private unnamed_addr constant [58 x i8] c"vsftpd: cannot locate user specified in 'guest_username':\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"vsftpd: cannot locate user specified in 'chown_username':\00", align 1
@.str.11 = private unnamed_addr constant [66 x i8] c"vsftpd: not configured for standalone, must be started from inetd\00", align 1
@.str.12 = private unnamed_addr constant [56 x i8] c"vsftpd: security: 'one_process_model' is anonymous only\00", align 1
@.str.13 = private unnamed_addr constant [56 x i8] c"vsftpd: security: 'one_process_model' needs a better OS\00", align 1
@.str.14 = private unnamed_addr constant [50 x i8] c"vsftpd: both local and anonymous access disabled!\00", align 1
@.str.15 = private unnamed_addr constant [36 x i8] c"vsftpd: both FTP and HTTP disabled!\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"vsftpd: HTTP needs 'one_process_model' for now\00", align 1
@.str.10 = private unnamed_addr constant [67 x i8] c"vsftpd: must be started as root (see run_as_launching_user option)\00", align 1
@.str.1.5 = private unnamed_addr constant [11 x i8] c"500 OOPS: \00", align 1
@.str.2.6 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"not logged in\00", align 1
@.str.9.24 = private unnamed_addr constant [5 x i8] c"USER\00", align 1
@.str.10.25 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.11.26 = private unnamed_addr constant [5 x i8] c"QUIT\00", align 1
@.str.12.27 = private unnamed_addr constant [9 x i8] c"Goodbye.\00", align 1
@.str.13.28 = private unnamed_addr constant [5 x i8] c"FEAT\00", align 1
@.str.14.29 = private unnamed_addr constant [5 x i8] c"OPTS\00", align 1
@.str.15.30 = private unnamed_addr constant [5 x i8] c"AUTH\00", align 1
@.str.16.31 = private unnamed_addr constant [5 x i8] c"PBSZ\00", align 1
@.str.17.32 = private unnamed_addr constant [5 x i8] c"PROT\00", align 1
@.str.18.33 = private unnamed_addr constant [33 x i8] c"Please login with USER and PASS.\00", align 1
@.str.19.34 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.20.35 = private unnamed_addr constant [15 x i8] c"Bad HTTP verb.\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"FTP\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"<http>\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"Login with USER first.\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"Login incorrect.\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"ANONYMOUS\00", align 1
@.str.23.36 = private unnamed_addr constant [35 x i8] c"This FTP server is anonymous only.\00", align 1
@.str.24 = private unnamed_addr constant [43 x i8] c"Anonymous sessions may not use encryption.\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"Non-anonymous sessions must use encryption.\00", align 1
@.str.26 = private unnamed_addr constant [40 x i8] c"Anonymous sessions must use encryption.\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"Permission denied.\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"<no password>\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"Please specify the password.\00", align 1
@.str.7.37 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8.38 = private unnamed_addr constant [15 x i8] c"(vsFTPd 3.0.3)\00", align 1
@.str.1.39 = private unnamed_addr constant [39 x i8] c"Connection refused: too many sessions.\00", align 1
@.str.2.40 = private unnamed_addr constant [54 x i8] c"There are too many connected users, please try later.\00", align 1
@.str.3.41 = private unnamed_addr constant [56 x i8] c"Connection refused: too many sessions for this address.\00", align 1
@.str.4.42 = private unnamed_addr constant [59 x i8] c"There are too many connections from your internet address.\00", align 1
@.str.5.43 = private unnamed_addr constant [41 x i8] c"Connection refused: tcp_wrappers denial.\00", align 1
@.str.6.44 = private unnamed_addr constant [23 x i8] c"Service not available.\00", align 1
@ftp_write_text_common.s_the_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !0
@ftp_write_str_common.s_write_buf_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !135
@ftp_write_str_common.s_text_mangle_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !142
@.str.4.49 = private unnamed_addr constant [2 x i8] c"\FF\00", align 1
@.str.5.50 = private unnamed_addr constant [3 x i8] c"\FF\FF\00", align 1
@.str.6.51 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7.52 = private unnamed_addr constant [10 x i8] c"ftp_write\00", align 1
@vsf_cmdio_write_raw.s_the_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !123
@.str.53 = private unnamed_addr constant [14 x i8] c"ftp_write_str\00", align 1
@.str.1.60 = private unnamed_addr constant [9 x i8] c"Timeout.\00", align 1
@.str.2.61 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@vsf_cmdio_get_cmd_and_arg.s_log_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !129
@.str.3.62 = private unnamed_addr constant [16 x i8] c"PASS <password>\00", align 1
@.str.8.63 = private unnamed_addr constant [21 x i8] c"Input line too long.\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"should not be reached\00", align 1
@.str.1.65 = private unnamed_addr constant [18 x i8] c"Login successful.\00", align 1
@.str.2.66 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@process_post_login.s_src_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !144
@process_post_login.s_rhs_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !227
@process_post_login.s_src_str.3 = internal global %struct.mystr zeroinitializer, align 8, !dbg !229
@process_post_login.s_rhs_str.4 = internal global %struct.mystr zeroinitializer, align 8, !dbg !231
@.str.5.67 = private unnamed_addr constant [19 x i8] c"Permission denied.\00", align 1
@.str.6.68 = private unnamed_addr constant [5 x i8] c"QUIT\00", align 1
@.str.7.69 = private unnamed_addr constant [9 x i8] c"Goodbye.\00", align 1
@.str.8.70 = private unnamed_addr constant [4 x i8] c"PWD\00", align 1
@.str.9.71 = private unnamed_addr constant [5 x i8] c"XPWD\00", align 1
@.str.10.72 = private unnamed_addr constant [4 x i8] c"CWD\00", align 1
@.str.11.73 = private unnamed_addr constant [5 x i8] c"XCWD\00", align 1
@.str.12.74 = private unnamed_addr constant [5 x i8] c"CDUP\00", align 1
@.str.13.75 = private unnamed_addr constant [5 x i8] c"XCUP\00", align 1
@.str.14.76 = private unnamed_addr constant [5 x i8] c"PASV\00", align 1
@.str.15.77 = private unnamed_addr constant [5 x i8] c"P@SW\00", align 1
@.str.16.78 = private unnamed_addr constant [5 x i8] c"EPSV\00", align 1
@.str.17.79 = private unnamed_addr constant [5 x i8] c"RETR\00", align 1
@.str.18.80 = private unnamed_addr constant [5 x i8] c"NOOP\00", align 1
@.str.19.81 = private unnamed_addr constant [9 x i8] c"NOOP ok.\00", align 1
@.str.20.82 = private unnamed_addr constant [5 x i8] c"SYST\00", align 1
@.str.21.83 = private unnamed_addr constant [14 x i8] c"UNIX Type: L8\00", align 1
@.str.22.84 = private unnamed_addr constant [5 x i8] c"HELP\00", align 1
@.str.23.85 = private unnamed_addr constant [5 x i8] c"LIST\00", align 1
@.str.24.86 = private unnamed_addr constant [5 x i8] c"TYPE\00", align 1
@.str.25.87 = private unnamed_addr constant [5 x i8] c"PORT\00", align 1
@.str.26.88 = private unnamed_addr constant [5 x i8] c"STOR\00", align 1
@.str.27.89 = private unnamed_addr constant [4 x i8] c"MKD\00", align 1
@.str.28.90 = private unnamed_addr constant [5 x i8] c"XMKD\00", align 1
@.str.29.91 = private unnamed_addr constant [4 x i8] c"RMD\00", align 1
@.str.30.92 = private unnamed_addr constant [5 x i8] c"XRMD\00", align 1
@.str.31.93 = private unnamed_addr constant [5 x i8] c"DELE\00", align 1
@.str.32.94 = private unnamed_addr constant [5 x i8] c"REST\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"RNFR\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"RNTO\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"NLST\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"SIZE\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"SITE\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"ABOR\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"\FF\F4\FF\F2ABOR\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"No transfer to ABOR.\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"APPE\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"MDTM\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"EPRT\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"STRU\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.46 = private unnamed_addr constant [20 x i8] c"Structure set to F.\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"Bad STRU command.\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"MODE\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"Mode set to S.\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"Bad MODE command.\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"STOU\00", align 1
@.str.53.95 = private unnamed_addr constant [5 x i8] c"ALLO\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"ALLO command ignored.\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"REIN\00", align 1
@.str.56 = private unnamed_addr constant [22 x i8] c"REIN not implemented.\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"ACCT\00", align 1
@.str.58 = private unnamed_addr constant [22 x i8] c"ACCT not implemented.\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"SMNT\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"SMNT not implemented.\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"FEAT\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"OPTS\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"STAT\00", align 1
@.str.64.96 = private unnamed_addr constant [5 x i8] c"PBSZ\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"PROT\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"USER\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.68 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"OPTIONS\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"CONNECT\00", align 1
@.str.73 = private unnamed_addr constant [36 x i8] c"HTTP protocol commands not allowed.\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"Unknown command.\00", align 1
@.str.75 = private unnamed_addr constant [32 x i8] c"Data timeout. Reconnect. Sorry.\00", align 1
@.str.187 = private unnamed_addr constant [19 x i8] c"Already logged in.\00", align 1
@.str.184 = private unnamed_addr constant [30 x i8] c"Can't change from guest user.\00", align 1
@.str.185 = private unnamed_addr constant [22 x i8] c"Any password will do.\00", align 1
@.str.186 = private unnamed_addr constant [30 x i8] c"Can't change to another user.\00", align 1
@handle_dir_common.s_option_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !265
@handle_dir_common.s_filter_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !270
@handle_dir_common.s_dir_name_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !272
@.str.109 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.110 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.111 = private unnamed_addr constant [16 x i8] c"Status follows:\00", align 1
@.str.112 = private unnamed_addr constant [34 x i8] c"Here comes the directory listing.\00", align 1
@handle_dir_common.s_p_dirstat = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !274
@.str.113 = private unnamed_addr constant [14 x i8] c"End of status\00", align 1
@.str.101 = private unnamed_addr constant [32 x i8] c"Failure writing network stream.\00", align 1
@.str.114 = private unnamed_addr constant [46 x i8] c"Transfer done (but failed to open directory).\00", align 1
@.str.115 = private unnamed_addr constant [19 x i8] c"Directory send OK.\00", align 1
@.str.108 = private unnamed_addr constant [17 x i8] c"ABOR successful.\00", align 1
@.str.107 = private unnamed_addr constant [55 x i8] c"neither PORT nor PASV active in get_remote_transfer_fd\00", align 1
@.str.106 = private unnamed_addr constant [26 x i8] c"port and pasv both active\00", align 1
@.str.105 = private unnamed_addr constant [26 x i8] c"pasv and port both active\00", align 1
@resolve_tilde.s_rhs_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !238
@resolve_tilde.s_user_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !244
@.str.103 = private unnamed_addr constant [24 x i8] c"Use PORT or PASV first.\00", align 1
@.str.104 = private unnamed_addr constant [36 x i8] c"Data connections must be encrypted.\00", align 1
@.str.167 = private unnamed_addr constant [19 x i8] c"FTP server status:\00", align 1
@.str.168 = private unnamed_addr constant [19 x i8] c"     Connected to \00", align 1
@.str.169 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.170 = private unnamed_addr constant [19 x i8] c"     Logged in as \00", align 1
@.str.171 = private unnamed_addr constant [12 x i8] c"     TYPE: \00", align 1
@.str.172 = private unnamed_addr constant [8 x i8] c"ASCII\0D\0A\00", align 1
@.str.173 = private unnamed_addr constant [9 x i8] c"BINARY\0D\0A\00", align 1
@.str.174 = private unnamed_addr constant [34 x i8] c"     No session bandwidth limit\0D\0A\00", align 1
@.str.175 = private unnamed_addr constant [43 x i8] c"     Session bandwidth limit in byte/s is \00", align 1
@.str.176 = private unnamed_addr constant [26 x i8] c"     No session timeout\0D\0A\00", align 1
@.str.177 = private unnamed_addr constant [36 x i8] c"     Session timeout in seconds is \00", align 1
@.str.178 = private unnamed_addr constant [39 x i8] c"     Control connection is encrypted\0D\0A\00", align 1
@.str.179 = private unnamed_addr constant [40 x i8] c"     Control connection is plain text\0D\0A\00", align 1
@.str.180 = private unnamed_addr constant [42 x i8] c"     Data connections will be encrypted\0D\0A\00", align 1
@.str.181 = private unnamed_addr constant [43 x i8] c"     Data connections will be plain text\0D\0A\00", align 1
@.str.182 = private unnamed_addr constant [43 x i8] c"     At session startup, client count was \00", align 1
@.str.183 = private unnamed_addr constant [43 x i8] c"     vsFTPd 3.0.3 - secure, fast, stable\0D\0A\00", align 1
@handle_upload_common.s_filename = internal global %struct.mystr zeroinitializer, align 8, !dbg !279
@.str.126 = private unnamed_addr constant [23 x i8] c"Could not create file.\00", align 1
@handle_upload_common.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !276
@.str.127 = private unnamed_addr constant [7 x i8] c"FILE: \00", align 1
@.str.128 = private unnamed_addr constant [17 x i8] c"Ok to send data.\00", align 1
@.str.129 = private unnamed_addr constant [31 x i8] c"Failure writing to local file.\00", align 1
@.str.130 = private unnamed_addr constant [32 x i8] c"Failure reading network stream.\00", align 1
@.str.102 = private unnamed_addr constant [19 x i8] c"Transfer complete.\00", align 1
@prepend_path_to_filename.s_tmp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !260
@get_unique_filename.s_stou_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !288
@get_unique_filename.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !281
@handle_eprt.s_part1_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !327
@handle_eprt.s_part2_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !330
@.str.157 = private unnamed_addr constant [19 x i8] c"Bad EPRT protocol.\00", align 1
@handle_eprt.s_scopeid_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !332
@.str.158 = private unnamed_addr constant [22 x i8] c"Illegal EPRT command.\00", align 1
@.str.159 = private unnamed_addr constant [46 x i8] c"EPRT command successful. Consider using EPSV.\00", align 1
@.str.160 = private unnamed_addr constant [18 x i8] c"Bad EPRT command.\00", align 1
@handle_mdtm.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !323
@handle_mdtm.s_filename_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !320
@.str.154 = private unnamed_addr constant [38 x i8] c"Could not set file modification time.\00", align 1
@.str.155 = private unnamed_addr constant [28 x i8] c"File modification time set.\00", align 1
@.str.156 = private unnamed_addr constant [38 x i8] c"Could not get file modification time.\00", align 1
@handle_mdtm.s_mdtm_res_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !325
@handle_site.s_site_args_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !309
@.str.144 = private unnamed_addr constant [6 x i8] c"CHMOD\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"UMASK\00", align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"CHMOD UMASK HELP\00", align 1
@.str.147 = private unnamed_addr constant [11 x i8] c"UMASK HELP\00", align 1
@.str.148 = private unnamed_addr constant [22 x i8] c"Unknown SITE command.\00", align 1
@handle_site_umask.s_umask_resp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !317
@.str.152 = private unnamed_addr constant [23 x i8] c"Your current UMASK is \00", align 1
@.str.153 = private unnamed_addr constant [14 x i8] c"UMASK set to \00", align 1
@.str.149 = private unnamed_addr constant [30 x i8] c"SITE CHMOD needs 2 arguments.\00", align 1
@handle_site_chmod.s_chmod_file_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !312
@.str.150 = private unnamed_addr constant [27 x i8] c"SITE CHMOD command failed.\00", align 1
@.str.151 = private unnamed_addr constant [23 x i8] c"SITE CHMOD command ok.\00", align 1
@handle_size.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !304
@.str.143 = private unnamed_addr constant [25 x i8] c"Could not get file size.\00", align 1
@handle_size.s_size_res_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !307
@.str.140 = private unnamed_addr constant [21 x i8] c"RNFR required first.\00", align 1
@handle_rnto.s_tmp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !301
@.str.141 = private unnamed_addr constant [19 x i8] c"Rename successful.\00", align 1
@.str.142 = private unnamed_addr constant [15 x i8] c"Rename failed.\00", align 1
@handle_rnfr.p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !298
@.str.138 = private unnamed_addr constant [16 x i8] c"Ready for RNTO.\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"RNFR command failed.\00", align 1
@handle_rest.s_rest_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !295
@.str.137 = private unnamed_addr constant [28 x i8] c"Restart position accepted (\00", align 1
@.str.91 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.135 = private unnamed_addr constant [25 x i8] c"Delete operation failed.\00", align 1
@.str.136 = private unnamed_addr constant [29 x i8] c"Delete operation successful.\00", align 1
@.str.133 = private unnamed_addr constant [35 x i8] c"Remove directory operation failed.\00", align 1
@.str.134 = private unnamed_addr constant [39 x i8] c"Remove directory operation successful.\00", align 1
@.str.131 = private unnamed_addr constant [35 x i8] c"Create directory operation failed.\00", align 1
@handle_mkd.s_tmp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !293
@.str.76 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"\22\22\00", align 1
@handle_mkd.s_mkd_res = internal global %struct.mystr zeroinitializer, align 8, !dbg !290
@.str.132 = private unnamed_addr constant [10 x i8] c"\22 created\00", align 1
@.str.124 = private unnamed_addr constant [22 x i8] c"Illegal PORT command.\00", align 1
@.str.125 = private unnamed_addr constant [46 x i8] c"PORT command successful. Consider using PASV.\00", align 1
@.str.116 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.117 = private unnamed_addr constant [3 x i8] c"L8\00", align 1
@.str.118 = private unnamed_addr constant [4 x i8] c"L 8\00", align 1
@.str.119 = private unnamed_addr constant [26 x i8] c"Switching to Binary mode.\00", align 1
@.str.120 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.121 = private unnamed_addr constant [4 x i8] c"A N\00", align 1
@.str.122 = private unnamed_addr constant [25 x i8] c"Switching to ASCII mode.\00", align 1
@.str.123 = private unnamed_addr constant [27 x i8] c"Unrecognised TYPE command.\00", align 1
@.str.161 = private unnamed_addr constant [39 x i8] c"The following commands are recognized.\00", align 1
@.str.162 = private unnamed_addr constant [72 x i8] c" ABOR ACCT ALLO APPE CDUP CWD  DELE EPRT EPSV FEAT HELP LIST MDTM MKD\0D\0A\00", align 1
@.str.163 = private unnamed_addr constant [73 x i8] c" MODE NLST NOOP OPTS PASS PASV PORT PWD  QUIT REIN REST RETR RMD  RNFR\0D\0A\00", align 1
@.str.164 = private unnamed_addr constant [73 x i8] c" RNTO SITE SIZE SMNT STAT STOR STOU STRU SYST TYPE USER XCUP XCWD XMKD\0D\0A\00", align 1
@.str.165 = private unnamed_addr constant [13 x i8] c" XPWD XRMD\0D\0A\00", align 1
@.str.166 = private unnamed_addr constant [9 x i8] c"Help OK.\00", align 1
@.str.92 = private unnamed_addr constant [41 x i8] c"No support for resume of ASCII transfer.\00", align 1
@.str.93 = private unnamed_addr constant [21 x i8] c"Failed to open file.\00", align 1
@handle_retr.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !256
@handle_retr.s_mark_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !253
@.str.94 = private unnamed_addr constant [9 x i8] c"Opening \00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"BINARY\00", align 1
@.str.97 = private unnamed_addr constant [27 x i8] c" mode data connection for \00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c" bytes).\00", align 1
@.str.100 = private unnamed_addr constant [28 x i8] c"Failure reading local file.\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c"EPSV ALL ok.\00", align 1
@.str.84 = private unnamed_addr constant [22 x i8] c"Bad network protocol.\00", align 1
@handle_pasv.s_pasv_res_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !246
@.str.85 = private unnamed_addr constant [36 x i8] c"Entering Extended Passive Mode (|||\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"|)\00", align 1
@handle_pasv.s_p_sockaddr = internal global %struct.vsf_sysutil_sockaddr* null, align 8, !dbg !251
@.str.87 = private unnamed_addr constant [21 x i8] c"invalid pasv_address\00", align 1
@.str.88 = private unnamed_addr constant [24 x i8] c"Entering Passive Mode (\00", align 1
@.str.89 = private unnamed_addr constant [8 x i8] c"0,0,0,0\00", align 1
@.str.90 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.79 = private unnamed_addr constant [32 x i8] c"Directory successfully changed.\00", align 1
@.str.80 = private unnamed_addr constant [28 x i8] c"Failed to change directory.\00", align 1
@handle_pwd.s_cwd_buf_mangle_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !233
@handle_pwd.s_pwd_res_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !236
@.str.78 = private unnamed_addr constant [27 x i8] c"\22 is the current directory\00", align 1
@.str.188 = private unnamed_addr constant [38 x i8] c"HTTP needs download - fix your config\00", align 1
@.str.189 = private unnamed_addr constant [18 x i8] c"HTTP/1.1 200 OK\0D\0A\00", align 1
@.str.190 = private unnamed_addr constant [17 x i8] c"Server: vsftpd\0D\0A\00", align 1
@.str.191 = private unnamed_addr constant [20 x i8] c"Connection: close\0D\0A\00", align 1
@.str.192 = private unnamed_addr constant [30 x i8] c"X-Frame-Options: SAMEORIGIN\0D\0A\00", align 1
@.str.193 = private unnamed_addr constant [34 x i8] c"X-Content-Type-Options: nosniff\0D\0A\00", align 1
@.str.194 = private unnamed_addr constant [5 x i8] c"HTML\00", align 1
@.str.195 = private unnamed_addr constant [4 x i8] c"HTM\00", align 1
@.str.196 = private unnamed_addr constant [26 x i8] c"Content-Type: text/html\0D\0A\00", align 1
@.str.197 = private unnamed_addr constant [22 x i8] c"Content-Type: dunno\0D\0A\00", align 1
@.str.198 = private unnamed_addr constant [17 x i8] c"parent_fd active\00", align 1
@.str.1.199 = private unnamed_addr constant [16 x i8] c"child_fd active\00", align 1
@.str.2.200 = private unnamed_addr constant [20 x i8] c"child_fd not active\00", align 1
@.str.3.201 = private unnamed_addr constant [21 x i8] c"parent_fd not active\00", align 1
@.str.4.202 = private unnamed_addr constant [19 x i8] c"priv_sock_send_cmd\00", align 1
@.str.13.203 = private unnamed_addr constant [19 x i8] c"priv_sock_send_int\00", align 1
@.str.5.204 = private unnamed_addr constant [19 x i8] c"priv_sock_send_buf\00", align 1
@.str.6.205 = private unnamed_addr constant [28 x i8] c"recv_len bigger than buffer\00", align 1
@.str.7.206 = private unnamed_addr constant [19 x i8] c"priv_sock_recv_buf\00", align 1
@.str.14.207 = private unnamed_addr constant [18 x i8] c"priv_sock_get_int\00", align 1
@.str.8.208 = private unnamed_addr constant [21 x i8] c"priv_sock_get_result\00", align 1
@.str.9.209 = private unnamed_addr constant [18 x i8] c"priv_sock_get_cmd\00", align 1
@.str.10.210 = private unnamed_addr constant [27 x i8] c"priv_sock_get_str: too big\00", align 1
@.str.11.211 = private unnamed_addr constant [30 x i8] c"priv_sock_get_str: read error\00", align 1
@.str.12.212 = private unnamed_addr constant [22 x i8] c"priv_sock_send_result\00", align 1
@tunable_anonymous_enable = common global i32 0, align 4, !dbg !334
@tunable_local_enable = common global i32 0, align 4, !dbg !340
@tunable_pasv_enable = common global i32 0, align 4, !dbg !342
@tunable_port_enable = common global i32 0, align 4, !dbg !344
@tunable_chroot_local_user = common global i32 0, align 4, !dbg !346
@tunable_write_enable = common global i32 0, align 4, !dbg !348
@tunable_anon_upload_enable = common global i32 0, align 4, !dbg !350
@tunable_anon_mkdir_write_enable = common global i32 0, align 4, !dbg !352
@tunable_anon_other_write_enable = common global i32 0, align 4, !dbg !354
@tunable_chown_uploads = common global i32 0, align 4, !dbg !356
@tunable_connect_from_port_20 = common global i32 0, align 4, !dbg !358
@tunable_xferlog_enable = common global i32 0, align 4, !dbg !360
@tunable_dirmessage_enable = common global i32 0, align 4, !dbg !362
@tunable_anon_world_readable_only = common global i32 0, align 4, !dbg !364
@tunable_async_abor_enable = common global i32 0, align 4, !dbg !366
@tunable_ascii_upload_enable = common global i32 0, align 4, !dbg !368
@tunable_ascii_download_enable = common global i32 0, align 4, !dbg !370
@tunable_one_process_model = common global i32 0, align 4, !dbg !372
@tunable_xferlog_std_format = common global i32 0, align 4, !dbg !374
@tunable_pasv_promiscuous = common global i32 0, align 4, !dbg !376
@tunable_deny_email_enable = common global i32 0, align 4, !dbg !378
@tunable_chroot_list_enable = common global i32 0, align 4, !dbg !380
@tunable_setproctitle_enable = common global i32 0, align 4, !dbg !382
@tunable_text_userdb_names = common global i32 0, align 4, !dbg !384
@tunable_ls_recurse_enable = common global i32 0, align 4, !dbg !386
@tunable_log_ftp_protocol = common global i32 0, align 4, !dbg !388
@tunable_guest_enable = common global i32 0, align 4, !dbg !390
@tunable_userlist_enable = common global i32 0, align 4, !dbg !392
@tunable_userlist_deny = common global i32 0, align 4, !dbg !394
@tunable_use_localtime = common global i32 0, align 4, !dbg !396
@tunable_check_shell = common global i32 0, align 4, !dbg !398
@tunable_hide_ids = common global i32 0, align 4, !dbg !400
@tunable_listen = common global i32 0, align 4, !dbg !402
@tunable_port_promiscuous = common global i32 0, align 4, !dbg !404
@tunable_passwd_chroot_enable = common global i32 0, align 4, !dbg !406
@tunable_no_anon_password = common global i32 0, align 4, !dbg !408
@tunable_tcp_wrappers = common global i32 0, align 4, !dbg !410
@tunable_use_sendfile = common global i32 0, align 4, !dbg !412
@tunable_force_dot_files = common global i32 0, align 4, !dbg !414
@tunable_listen_ipv6 = common global i32 0, align 4, !dbg !416
@tunable_dual_log_enable = common global i32 0, align 4, !dbg !418
@tunable_syslog_enable = common global i32 0, align 4, !dbg !420
@tunable_background = common global i32 0, align 4, !dbg !422
@tunable_virtual_use_local_privs = common global i32 0, align 4, !dbg !424
@tunable_session_support = common global i32 0, align 4, !dbg !426
@tunable_download_enable = common global i32 0, align 4, !dbg !428
@tunable_dirlist_enable = common global i32 0, align 4, !dbg !430
@tunable_chmod_enable = common global i32 0, align 4, !dbg !432
@tunable_secure_email_list_enable = common global i32 0, align 4, !dbg !434
@tunable_run_as_launching_user = common global i32 0, align 4, !dbg !436
@tunable_no_log_lock = common global i32 0, align 4, !dbg !438
@tunable_ssl_enable = common global i32 0, align 4, !dbg !440
@tunable_allow_anon_ssl = common global i32 0, align 4, !dbg !442
@tunable_force_local_logins_ssl = common global i32 0, align 4, !dbg !444
@tunable_force_local_data_ssl = common global i32 0, align 4, !dbg !446
@tunable_sslv2 = common global i32 0, align 4, !dbg !448
@tunable_sslv3 = common global i32 0, align 4, !dbg !450
@tunable_tlsv1 = common global i32 0, align 4, !dbg !452
@tunable_tilde_user_enable = common global i32 0, align 4, !dbg !454
@tunable_force_anon_logins_ssl = common global i32 0, align 4, !dbg !456
@tunable_force_anon_data_ssl = common global i32 0, align 4, !dbg !458
@tunable_mdtm_write = common global i32 0, align 4, !dbg !460
@tunable_lock_upload_files = common global i32 0, align 4, !dbg !462
@tunable_pasv_addr_resolve = common global i32 0, align 4, !dbg !464
@tunable_debug_ssl = common global i32 0, align 4, !dbg !466
@tunable_require_cert = common global i32 0, align 4, !dbg !468
@tunable_validate_cert = common global i32 0, align 4, !dbg !470
@tunable_strict_ssl_read_eof = common global i32 0, align 4, !dbg !472
@tunable_strict_ssl_write_shutdown = common global i32 0, align 4, !dbg !474
@tunable_ssl_request_cert = common global i32 0, align 4, !dbg !476
@tunable_delete_failed_uploads = common global i32 0, align 4, !dbg !478
@tunable_implicit_ssl = common global i32 0, align 4, !dbg !480
@tunable_ptrace_sandbox = common global i32 0, align 4, !dbg !482
@tunable_require_ssl_reuse = common global i32 0, align 4, !dbg !484
@tunable_isolate = common global i32 0, align 4, !dbg !486
@tunable_isolate_network = common global i32 0, align 4, !dbg !488
@tunable_ftp_enable = common global i32 0, align 4, !dbg !490
@tunable_http_enable = common global i32 0, align 4, !dbg !492
@tunable_seccomp_sandbox = common global i32 0, align 4, !dbg !494
@tunable_allow_writeable_chroot = common global i32 0, align 4, !dbg !496
@tunable_accept_timeout = common global i32 0, align 4, !dbg !498
@tunable_connect_timeout = common global i32 0, align 4, !dbg !500
@tunable_local_umask = common global i32 0, align 4, !dbg !502
@tunable_anon_umask = common global i32 0, align 4, !dbg !504
@tunable_ftp_data_port = common global i32 0, align 4, !dbg !506
@tunable_idle_session_timeout = common global i32 0, align 4, !dbg !508
@tunable_data_connection_timeout = common global i32 0, align 4, !dbg !510
@tunable_pasv_min_port = common global i32 0, align 4, !dbg !512
@tunable_pasv_max_port = common global i32 0, align 4, !dbg !514
@tunable_anon_max_rate = common global i32 0, align 4, !dbg !516
@tunable_local_max_rate = common global i32 0, align 4, !dbg !518
@tunable_listen_port = common global i32 0, align 4, !dbg !520
@tunable_max_clients = common global i32 0, align 4, !dbg !522
@tunable_file_open_mode = common global i32 0, align 4, !dbg !524
@tunable_max_per_ip = common global i32 0, align 4, !dbg !526
@tunable_trans_chunk_size = common global i32 0, align 4, !dbg !528
@tunable_delay_failed_login = common global i32 0, align 4, !dbg !530
@tunable_delay_successful_login = common global i32 0, align 4, !dbg !532
@tunable_max_login_fails = common global i32 0, align 4, !dbg !534
@tunable_chown_upload_mode = common global i32 0, align 4, !dbg !536
@tunable_secure_chroot_dir = common global i8* null, align 8, !dbg !538
@tunable_ftp_username = common global i8* null, align 8, !dbg !540
@tunable_chown_username = common global i8* null, align 8, !dbg !542
@tunable_xferlog_file = common global i8* null, align 8, !dbg !544
@tunable_vsftpd_log_file = common global i8* null, align 8, !dbg !546
@tunable_message_file = common global i8* null, align 8, !dbg !548
@tunable_nopriv_user = common global i8* null, align 8, !dbg !550
@tunable_ftpd_banner = common global i8* null, align 8, !dbg !552
@tunable_banned_email_file = common global i8* null, align 8, !dbg !554
@tunable_chroot_list_file = common global i8* null, align 8, !dbg !556
@tunable_pam_service_name = common global i8* null, align 8, !dbg !558
@tunable_guest_username = common global i8* null, align 8, !dbg !560
@tunable_userlist_file = common global i8* null, align 8, !dbg !562
@tunable_anon_root = common global i8* null, align 8, !dbg !564
@tunable_local_root = common global i8* null, align 8, !dbg !566
@tunable_banner_file = common global i8* null, align 8, !dbg !568
@tunable_pasv_address = common global i8* null, align 8, !dbg !570
@tunable_listen_address = common global i8* null, align 8, !dbg !572
@tunable_user_config_dir = common global i8* null, align 8, !dbg !574
@tunable_listen_address6 = common global i8* null, align 8, !dbg !576
@tunable_cmds_allowed = common global i8* null, align 8, !dbg !578
@tunable_cmds_denied = common global i8* null, align 8, !dbg !580
@tunable_hide_file = common global i8* null, align 8, !dbg !582
@tunable_deny_file = common global i8* null, align 8, !dbg !584
@tunable_user_sub_token = common global i8* null, align 8, !dbg !586
@tunable_email_password_file = common global i8* null, align 8, !dbg !588
@tunable_rsa_cert_file = common global i8* null, align 8, !dbg !590
@tunable_dsa_cert_file = common global i8* null, align 8, !dbg !592
@tunable_ssl_ciphers = common global i8* null, align 8, !dbg !594
@tunable_rsa_private_key_file = common global i8* null, align 8, !dbg !596
@tunable_dsa_private_key_file = common global i8* null, align 8, !dbg !598
@tunable_ca_certs_file = common global i8* null, align 8, !dbg !600
@.str.349 = private unnamed_addr constant [17 x i8] c"/usr/share/empty\00", align 1
@.str.1.350 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.2.351 = private unnamed_addr constant [5 x i8] c"root\00", align 1
@.str.3.352 = private unnamed_addr constant [17 x i8] c"/var/log/xferlog\00", align 1
@.str.4.353 = private unnamed_addr constant [20 x i8] c"/var/log/vsftpd.log\00", align 1
@.str.5.354 = private unnamed_addr constant [9 x i8] c".message\00", align 1
@.str.6.355 = private unnamed_addr constant [7 x i8] c"nobody\00", align 1
@.str.7.356 = private unnamed_addr constant [26 x i8] c"/etc/vsftpd.banned_emails\00", align 1
@.str.8.357 = private unnamed_addr constant [24 x i8] c"/etc/vsftpd.chroot_list\00", align 1
@.str.9.358 = private unnamed_addr constant [22 x i8] c"/etc/vsftpd.user_list\00", align 1
@.str.10.359 = private unnamed_addr constant [28 x i8] c"/etc/vsftpd.email_passwords\00", align 1
@.str.11.360 = private unnamed_addr constant [32 x i8] c"/usr/share/ssl/certs/vsftpd.pem\00", align 1
@.str.12.361 = private unnamed_addr constant [28 x i8] c"ECDHE-RSA-AES256-GCM-SHA384\00", align 1
@.str.364 = private unnamed_addr constant [56 x i8] c"no data descriptor in vsf_ftpdataio_dispose_transfer_fd\00", align 1
@.str.1.367 = private unnamed_addr constant [32 x i8] c"Failed to establish connection.\00", align 1
@.str.2.368 = private unnamed_addr constant [29 x i8] c"Security: Bad IP connecting.\00", align 1
@.str.5.369 = private unnamed_addr constant [55 x i8] c"data descriptor still present in init_data_sock_params\00", align 1
@.str.3.374 = private unnamed_addr constant [46 x i8] c"SSL connection failed: session reuse required\00", align 1
@.str.4.375 = private unnamed_addr constant [22 x i8] c"SSL connection failed\00", align 1
@.str.6.378 = private unnamed_addr constant [4 x i8] c":\0D\0A\00", align 1
@.str.7.379 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.8.380 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.9.381 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@do_file_recv.p_recvbuf = internal global i8* null, align 8, !dbg !602
@calc_num_send.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !699
@.str.10.384 = private unnamed_addr constant [50 x i8] c"calc_num_send: negative file offset or send count\00", align 1
@do_file_send_rwloop.p_readbuf = internal global i8* null, align 8, !dbg !694
@do_file_send_rwloop.p_asciibuf = internal global i8* null, align 8, !dbg !697
@.str.389 = private unnamed_addr constant [2 x i8] c".\00", align 1
@vsf_ls_populate_dir_list.s_next_filename_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !706
@vsf_ls_populate_dir_list.s_next_path_and_filename_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !731
@vsf_ls_populate_dir_list.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !733
@vsf_ls_populate_dir_list.s_final_file_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !735
@vsf_ls_populate_dir_list.s_temp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !737
@.str.1.390 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.2.391 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@vsf_ls_populate_dir_list.s_temp_str.3 = internal global %struct.mystr zeroinitializer, align 8, !dbg !739
@build_dir_line.s_tmp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !747
@.str.5.392 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.4.393 = private unnamed_addr constant [4 x i8] c"*?{\00", align 1
@vsf_filename_passes_filter.s_match_needed_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !741
@.str.394 = private unnamed_addr constant [38 x i8] c"bad request in process_post_login_req\00", align 1
@.str.397 = private unnamed_addr constant [33 x i8] c"failed to open xferlog log file:\00", align 1
@.str.1.398 = private unnamed_addr constant [32 x i8] c"failed to open vsftpd log file:\00", align 1
@.str.2.401 = private unnamed_addr constant [41 x i8] c"non null log_type in vsf_log_start_entry\00", align 1
@vsf_log_common.s_log_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !755
@.str.11.404 = private unnamed_addr constant [7 x i8] c" [pid \00", align 1
@.str.12.405 = private unnamed_addr constant [3 x i8] c"] \00", align 1
@.str.13.406 = private unnamed_addr constant [4 x i8] c"OK \00", align 1
@.str.14.407 = private unnamed_addr constant [6 x i8] c"FAIL \00", align 1
@.str.15.408 = private unnamed_addr constant [9 x i8] c"DOWNLOAD\00", align 1
@.str.16.409 = private unnamed_addr constant [7 x i8] c"UPLOAD\00", align 1
@.str.17.410 = private unnamed_addr constant [6 x i8] c"MKDIR\00", align 1
@.str.18.411 = private unnamed_addr constant [6 x i8] c"LOGIN\00", align 1
@.str.19.412 = private unnamed_addr constant [12 x i8] c"FTP command\00", align 1
@.str.20.413 = private unnamed_addr constant [13 x i8] c"FTP response\00", align 1
@.str.21.414 = private unnamed_addr constant [8 x i8] c"CONNECT\00", align 1
@.str.22.415 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@.str.23.416 = private unnamed_addr constant [7 x i8] c"RENAME\00", align 1
@.str.24.417 = private unnamed_addr constant [6 x i8] c"RMDIR\00", align 1
@.str.25.418 = private unnamed_addr constant [6 x i8] c"CHMOD\00", align 1
@.str.26.419 = private unnamed_addr constant [6 x i8] c"DEBUG\00", align 1
@.str.27.420 = private unnamed_addr constant [33 x i8] c"bad entry_type in vsf_log_do_log\00", align 1
@.str.28.421 = private unnamed_addr constant [11 x i8] c": Client \22\00", align 1
@.str.29.422 = private unnamed_addr constant [18 x i8] c", anon password \22\00", align 1
@.str.30.423 = private unnamed_addr constant [4 x i8] c", \22\00", align 1
@.str.31.424 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.32.425 = private unnamed_addr constant [7 x i8] c" bytes\00", align 1
@.str.33.426 = private unnamed_addr constant [10 x i8] c"Kbyte/sec\00", align 1
@vsf_log_do_log_wuftpd_format.s_filename_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !832
@.str.3.427 = private unnamed_addr constant [3 x i8] c"a \00", align 1
@.str.4.428 = private unnamed_addr constant [3 x i8] c"b \00", align 1
@.str.5.429 = private unnamed_addr constant [3 x i8] c"_ \00", align 1
@.str.6.430 = private unnamed_addr constant [3 x i8] c"i \00", align 1
@.str.7.431 = private unnamed_addr constant [3 x i8] c"o \00", align 1
@.str.8.432 = private unnamed_addr constant [3 x i8] c"g \00", align 1
@.str.9.433 = private unnamed_addr constant [3 x i8] c"r \00", align 1
@.str.10.434 = private unnamed_addr constant [9 x i8] c"ftp 0 * \00", align 1
@.str.441 = private unnamed_addr constant [17 x i8] c"integer overflow\00", align 1
@.str.8.444 = private unnamed_addr constant [31 x i8] c"p_buf not NULL when setting it\00", align 1
@.str.2.451 = private unnamed_addr constant [53 x i8] c"p_buf NULL and len or alloc_bytes != 0 in str_getbuf\00", align 1
@.str.1.460 = private unnamed_addr constant [52 x i8] c"trunc_len not smaller than alloc_bytes in str_trunc\00", align 1
@str_lpad.s_tmp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !838
@str_replace_text.s_lhs_chunk_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !854
@str_replace_text.s_rhs_chunk_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !859
@.str.9.493 = private unnamed_addr constant [33 x i8] c"indexx invalid in str_split_text\00", align 1
@.str.3.506 = private unnamed_addr constant [26 x i8] c"chars invalid in str_left\00", align 1
@.str.4.509 = private unnamed_addr constant [27 x i8] c"chars invalid in str_right\00", align 1
@.str.5.512 = private unnamed_addr constant [33 x i8] c"invalid indexx in str_mid_to_end\00", align 1
@.str.6.515 = private unnamed_addr constant [30 x i8] c"bad indexx in str_get_char_at\00", align 1
@.str.7.522 = private unnamed_addr constant [34 x i8] c"p_pos out of range in str_getline\00", align 1
@str_contains_line.s_curr_line_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !861
@.str.527 = private unnamed_addr constant [42 x i8] c"poor buffer accounting in str_netfd_alloc\00", align 1
@.str.1.528 = private unnamed_addr constant [22 x i8] c"vsf_sysutil_recv_peek\00", align 1
@.str.2.529 = private unnamed_addr constant [22 x i8] c"vsf_sysutil_read_loop\00", align 1
@.str.3.530 = private unnamed_addr constant [38 x i8] c"missing terminator in str_netfd_alloc\00", align 1
@.str.4.531 = private unnamed_addr constant [37 x i8] c"bytes_read > left in str_netfd_alloc\00", align 1
@.str.5.534 = private unnamed_addr constant [32 x i8] c"zero str_len in str_netfd_write\00", align 1
@str_getcwd.p_getcwd_buf = internal global i8* null, align 8, !dbg !868
@.str.553 = private unnamed_addr constant [31 x i8] c"unknown mode value in str_open\00", align 1
@str_readlink.p_readlink_buf = internal global i8* null, align 8, !dbg !888
@.str.582 = private unnamed_addr constant [18 x i8] c"excessive strlist\00", align 1
@s_null_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !895
@.str.1.587 = private unnamed_addr constant [40 x i8] c"indexx out of range in str_list_get_str\00", align 1
@.str.594 = private unnamed_addr constant [19 x i8] c"read size mismatch\00", align 1
@s_p_saved_filename = internal global i8* null, align 8, !dbg !914
@.str.597 = private unnamed_addr constant [41 x i8] c"null filename in vsf_parseconf_load_file\00", align 1
@.str.1.598 = private unnamed_addr constant [26 x i8] c"cannot read config file: \00", align 1
@.str.2.599 = private unnamed_addr constant [53 x i8] c"config file not owned by correct user, or not a file\00", align 1
@vsf_parseconf_load_setting.s_setting_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !920
@vsf_parseconf_load_setting.s_value_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !930
@parseconf_str_array = internal global [33 x %struct.parseconf_str_setting] [%struct.parseconf_str_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.711, i32 0, i32 0), i8** @tunable_secure_chroot_dir }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13.712, i32 0, i32 0), i8** @tunable_ftp_username }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14.713, i32 0, i32 0), i8** @tunable_chown_username }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.714, i32 0, i32 0), i8** @tunable_xferlog_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.715, i32 0, i32 0), i8** @tunable_vsftpd_log_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17.716, i32 0, i32 0), i8** @tunable_message_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18.717, i32 0, i32 0), i8** @tunable_nopriv_user }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.718, i32 0, i32 0), i8** @tunable_ftpd_banner }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20.719, i32 0, i32 0), i8** @tunable_banned_email_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21.720, i32 0, i32 0), i8** @tunable_chroot_list_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22.721, i32 0, i32 0), i8** @tunable_pam_service_name }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.722, i32 0, i32 0), i8** @tunable_guest_username }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24.723, i32 0, i32 0), i8** @tunable_userlist_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25.724, i32 0, i32 0), i8** @tunable_anon_root }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26.725, i32 0, i32 0), i8** @tunable_local_root }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27.726, i32 0, i32 0), i8** @tunable_banner_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28.727, i32 0, i32 0), i8** @tunable_pasv_address }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29.728, i32 0, i32 0), i8** @tunable_listen_address }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30.729, i32 0, i32 0), i8** @tunable_user_config_dir }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31.730, i32 0, i32 0), i8** @tunable_listen_address6 }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32.731, i32 0, i32 0), i8** @tunable_cmds_allowed }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.732, i32 0, i32 0), i8** @tunable_hide_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34.733, i32 0, i32 0), i8** @tunable_deny_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.734, i32 0, i32 0), i8** @tunable_user_sub_token }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36.735, i32 0, i32 0), i8** @tunable_email_password_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37.736, i32 0, i32 0), i8** @tunable_rsa_cert_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38.737, i32 0, i32 0), i8** @tunable_dsa_cert_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39.738, i32 0, i32 0), i8** @tunable_ssl_ciphers }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40.739, i32 0, i32 0), i8** @tunable_rsa_private_key_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41.740, i32 0, i32 0), i8** @tunable_dsa_private_key_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42.741, i32 0, i32 0), i8** @tunable_ca_certs_file }, %struct.parseconf_str_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43.742, i32 0, i32 0), i8** @tunable_cmds_denied }, %struct.parseconf_str_setting zeroinitializer], align 16, !dbg !932
@.str.3.602 = private unnamed_addr constant [35 x i8] c"missing value in config file for: \00", align 1
@parseconf_bool_array = internal global [81 x %struct.parseconf_bool_setting] [%struct.parseconf_bool_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44.631, i32 0, i32 0), i32* @tunable_anonymous_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45.632, i32 0, i32 0), i32* @tunable_local_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46.633, i32 0, i32 0), i32* @tunable_pasv_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47.634, i32 0, i32 0), i32* @tunable_port_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48.635, i32 0, i32 0), i32* @tunable_chroot_local_user }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49.636, i32 0, i32 0), i32* @tunable_write_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50.637, i32 0, i32 0), i32* @tunable_anon_upload_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51.638, i32 0, i32 0), i32* @tunable_anon_mkdir_write_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52.639, i32 0, i32 0), i32* @tunable_anon_other_write_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53.640, i32 0, i32 0), i32* @tunable_chown_uploads }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54.641, i32 0, i32 0), i32* @tunable_connect_from_port_20 }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55.642, i32 0, i32 0), i32* @tunable_xferlog_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56.643, i32 0, i32 0), i32* @tunable_dirmessage_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.57.644, i32 0, i32 0), i32* @tunable_anon_world_readable_only }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58.645, i32 0, i32 0), i32* @tunable_async_abor_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59.646, i32 0, i32 0), i32* @tunable_ascii_upload_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60.647, i32 0, i32 0), i32* @tunable_ascii_download_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.648, i32 0, i32 0), i32* @tunable_one_process_model }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62.649, i32 0, i32 0), i32* @tunable_xferlog_std_format }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63.650, i32 0, i32 0), i32* @tunable_pasv_promiscuous }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64.651, i32 0, i32 0), i32* @tunable_deny_email_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65.652, i32 0, i32 0), i32* @tunable_chroot_list_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.653, i32 0, i32 0), i32* @tunable_setproctitle_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67.654, i32 0, i32 0), i32* @tunable_text_userdb_names }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68.655, i32 0, i32 0), i32* @tunable_ls_recurse_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.69.656, i32 0, i32 0), i32* @tunable_log_ftp_protocol }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70.657, i32 0, i32 0), i32* @tunable_guest_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71.658, i32 0, i32 0), i32* @tunable_userlist_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72.659, i32 0, i32 0), i32* @tunable_userlist_deny }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73.660, i32 0, i32 0), i32* @tunable_use_localtime }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74.661, i32 0, i32 0), i32* @tunable_check_shell }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75.662, i32 0, i32 0), i32* @tunable_hide_ids }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76.663, i32 0, i32 0), i32* @tunable_listen }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77.664, i32 0, i32 0), i32* @tunable_port_promiscuous }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.78.665, i32 0, i32 0), i32* @tunable_passwd_chroot_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.79.666, i32 0, i32 0), i32* @tunable_no_anon_password }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80.667, i32 0, i32 0), i32* @tunable_tcp_wrappers }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81.668, i32 0, i32 0), i32* @tunable_use_sendfile }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82.669, i32 0, i32 0), i32* @tunable_force_dot_files }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83.670, i32 0, i32 0), i32* @tunable_listen_ipv6 }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84.671, i32 0, i32 0), i32* @tunable_dual_log_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.85.672, i32 0, i32 0), i32* @tunable_syslog_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86.673, i32 0, i32 0), i32* @tunable_background }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.87.674, i32 0, i32 0), i32* @tunable_virtual_use_local_privs }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88.675, i32 0, i32 0), i32* @tunable_session_support }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89.676, i32 0, i32 0), i32* @tunable_download_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90.677, i32 0, i32 0), i32* @tunable_dirlist_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91.678, i32 0, i32 0), i32* @tunable_chmod_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92.679, i32 0, i32 0), i32* @tunable_secure_email_list_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.93.680, i32 0, i32 0), i32* @tunable_run_as_launching_user }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94.681, i32 0, i32 0), i32* @tunable_no_log_lock }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95.682, i32 0, i32 0), i32* @tunable_ssl_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96.683, i32 0, i32 0), i32* @tunable_allow_anon_ssl }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.97.684, i32 0, i32 0), i32* @tunable_force_local_logins_ssl }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98.685, i32 0, i32 0), i32* @tunable_force_local_data_ssl }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99.686, i32 0, i32 0), i32* @tunable_sslv2 }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100.687, i32 0, i32 0), i32* @tunable_sslv3 }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101.688, i32 0, i32 0), i32* @tunable_tlsv1 }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.102.689, i32 0, i32 0), i32* @tunable_tilde_user_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.103.690, i32 0, i32 0), i32* @tunable_force_anon_logins_ssl }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.104.691, i32 0, i32 0), i32* @tunable_force_anon_data_ssl }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.105.692, i32 0, i32 0), i32* @tunable_mdtm_write }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.106.693, i32 0, i32 0), i32* @tunable_lock_upload_files }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.107.694, i32 0, i32 0), i32* @tunable_pasv_addr_resolve }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108.695, i32 0, i32 0), i32* @tunable_debug_ssl }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109.696, i32 0, i32 0), i32* @tunable_require_cert }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110.697, i32 0, i32 0), i32* @tunable_validate_cert }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.111.698, i32 0, i32 0), i32* @tunable_strict_ssl_read_eof }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.112.699, i32 0, i32 0), i32* @tunable_strict_ssl_write_shutdown }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.113.700, i32 0, i32 0), i32* @tunable_ssl_request_cert }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.114.701, i32 0, i32 0), i32* @tunable_delete_failed_uploads }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115.702, i32 0, i32 0), i32* @tunable_implicit_ssl }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116.703, i32 0, i32 0), i32* @tunable_ptrace_sandbox }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.117.704, i32 0, i32 0), i32* @tunable_require_ssl_reuse }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118.705, i32 0, i32 0), i32* @tunable_isolate }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.119.706, i32 0, i32 0), i32* @tunable_isolate_network }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120.707, i32 0, i32 0), i32* @tunable_ftp_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121.708, i32 0, i32 0), i32* @tunable_http_enable }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122.709, i32 0, i32 0), i32* @tunable_seccomp_sandbox }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.123.710, i32 0, i32 0), i32* @tunable_allow_writeable_chroot }, %struct.parseconf_bool_setting zeroinitializer], align 16, !dbg !942
@.str.4.603 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@.str.5.604 = private unnamed_addr constant [5 x i8] c"TRUE\00", align 1
@.str.6.605 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.7.606 = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@.str.8.607 = private unnamed_addr constant [6 x i8] c"FALSE\00", align 1
@.str.9.608 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.10.609 = private unnamed_addr constant [36 x i8] c"bad bool value in config file for: \00", align 1
@parseconf_uint_array = internal global [21 x %struct.parseconf_bool_setting] [%struct.parseconf_bool_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124.611, i32 0, i32 0), i32* @tunable_accept_timeout }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.125.612, i32 0, i32 0), i32* @tunable_connect_timeout }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.126.613, i32 0, i32 0), i32* @tunable_local_umask }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127.614, i32 0, i32 0), i32* @tunable_anon_umask }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128.615, i32 0, i32 0), i32* @tunable_ftp_data_port }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129.616, i32 0, i32 0), i32* @tunable_idle_session_timeout }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.130.617, i32 0, i32 0), i32* @tunable_data_connection_timeout }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.618, i32 0, i32 0), i32* @tunable_pasv_min_port }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132.619, i32 0, i32 0), i32* @tunable_pasv_max_port }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.133.620, i32 0, i32 0), i32* @tunable_anon_max_rate }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.134.621, i32 0, i32 0), i32* @tunable_local_max_rate }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.135.622, i32 0, i32 0), i32* @tunable_listen_port }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.136.623, i32 0, i32 0), i32* @tunable_max_clients }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137.624, i32 0, i32 0), i32* @tunable_file_open_mode }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138.625, i32 0, i32 0), i32* @tunable_max_per_ip }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.139.626, i32 0, i32 0), i32* @tunable_trans_chunk_size }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.140.627, i32 0, i32 0), i32* @tunable_delay_failed_login }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.141.628, i32 0, i32 0), i32* @tunable_delay_successful_login }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.142.629, i32 0, i32 0), i32* @tunable_max_login_fails }, %struct.parseconf_bool_setting { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.143.630, i32 0, i32 0), i32* @tunable_chown_upload_mode }, %struct.parseconf_bool_setting zeroinitializer], align 16, !dbg !952
@.str.11.610 = private unnamed_addr constant [39 x i8] c"unrecognised variable in config file: \00", align 1
@.str.124.611 = private unnamed_addr constant [15 x i8] c"accept_timeout\00", align 1
@.str.125.612 = private unnamed_addr constant [16 x i8] c"connect_timeout\00", align 1
@.str.126.613 = private unnamed_addr constant [12 x i8] c"local_umask\00", align 1
@.str.127.614 = private unnamed_addr constant [11 x i8] c"anon_umask\00", align 1
@.str.128.615 = private unnamed_addr constant [14 x i8] c"ftp_data_port\00", align 1
@.str.129.616 = private unnamed_addr constant [21 x i8] c"idle_session_timeout\00", align 1
@.str.130.617 = private unnamed_addr constant [24 x i8] c"data_connection_timeout\00", align 1
@.str.131.618 = private unnamed_addr constant [14 x i8] c"pasv_min_port\00", align 1
@.str.132.619 = private unnamed_addr constant [14 x i8] c"pasv_max_port\00", align 1
@.str.133.620 = private unnamed_addr constant [14 x i8] c"anon_max_rate\00", align 1
@.str.134.621 = private unnamed_addr constant [15 x i8] c"local_max_rate\00", align 1
@.str.135.622 = private unnamed_addr constant [12 x i8] c"listen_port\00", align 1
@.str.136.623 = private unnamed_addr constant [12 x i8] c"max_clients\00", align 1
@.str.137.624 = private unnamed_addr constant [15 x i8] c"file_open_mode\00", align 1
@.str.138.625 = private unnamed_addr constant [11 x i8] c"max_per_ip\00", align 1
@.str.139.626 = private unnamed_addr constant [17 x i8] c"trans_chunk_size\00", align 1
@.str.140.627 = private unnamed_addr constant [19 x i8] c"delay_failed_login\00", align 1
@.str.141.628 = private unnamed_addr constant [23 x i8] c"delay_successful_login\00", align 1
@.str.142.629 = private unnamed_addr constant [16 x i8] c"max_login_fails\00", align 1
@.str.143.630 = private unnamed_addr constant [18 x i8] c"chown_upload_mode\00", align 1
@.str.44.631 = private unnamed_addr constant [17 x i8] c"anonymous_enable\00", align 1
@.str.45.632 = private unnamed_addr constant [13 x i8] c"local_enable\00", align 1
@.str.46.633 = private unnamed_addr constant [12 x i8] c"pasv_enable\00", align 1
@.str.47.634 = private unnamed_addr constant [12 x i8] c"port_enable\00", align 1
@.str.48.635 = private unnamed_addr constant [18 x i8] c"chroot_local_user\00", align 1
@.str.49.636 = private unnamed_addr constant [13 x i8] c"write_enable\00", align 1
@.str.50.637 = private unnamed_addr constant [19 x i8] c"anon_upload_enable\00", align 1
@.str.51.638 = private unnamed_addr constant [24 x i8] c"anon_mkdir_write_enable\00", align 1
@.str.52.639 = private unnamed_addr constant [24 x i8] c"anon_other_write_enable\00", align 1
@.str.53.640 = private unnamed_addr constant [14 x i8] c"chown_uploads\00", align 1
@.str.54.641 = private unnamed_addr constant [21 x i8] c"connect_from_port_20\00", align 1
@.str.55.642 = private unnamed_addr constant [15 x i8] c"xferlog_enable\00", align 1
@.str.56.643 = private unnamed_addr constant [18 x i8] c"dirmessage_enable\00", align 1
@.str.57.644 = private unnamed_addr constant [25 x i8] c"anon_world_readable_only\00", align 1
@.str.58.645 = private unnamed_addr constant [18 x i8] c"async_abor_enable\00", align 1
@.str.59.646 = private unnamed_addr constant [20 x i8] c"ascii_upload_enable\00", align 1
@.str.60.647 = private unnamed_addr constant [22 x i8] c"ascii_download_enable\00", align 1
@.str.61.648 = private unnamed_addr constant [18 x i8] c"one_process_model\00", align 1
@.str.62.649 = private unnamed_addr constant [19 x i8] c"xferlog_std_format\00", align 1
@.str.63.650 = private unnamed_addr constant [17 x i8] c"pasv_promiscuous\00", align 1
@.str.64.651 = private unnamed_addr constant [18 x i8] c"deny_email_enable\00", align 1
@.str.65.652 = private unnamed_addr constant [19 x i8] c"chroot_list_enable\00", align 1
@.str.66.653 = private unnamed_addr constant [20 x i8] c"setproctitle_enable\00", align 1
@.str.67.654 = private unnamed_addr constant [18 x i8] c"text_userdb_names\00", align 1
@.str.68.655 = private unnamed_addr constant [18 x i8] c"ls_recurse_enable\00", align 1
@.str.69.656 = private unnamed_addr constant [17 x i8] c"log_ftp_protocol\00", align 1
@.str.70.657 = private unnamed_addr constant [13 x i8] c"guest_enable\00", align 1
@.str.71.658 = private unnamed_addr constant [16 x i8] c"userlist_enable\00", align 1
@.str.72.659 = private unnamed_addr constant [14 x i8] c"userlist_deny\00", align 1
@.str.73.660 = private unnamed_addr constant [14 x i8] c"use_localtime\00", align 1
@.str.74.661 = private unnamed_addr constant [12 x i8] c"check_shell\00", align 1
@.str.75.662 = private unnamed_addr constant [9 x i8] c"hide_ids\00", align 1
@.str.76.663 = private unnamed_addr constant [7 x i8] c"listen\00", align 1
@.str.77.664 = private unnamed_addr constant [17 x i8] c"port_promiscuous\00", align 1
@.str.78.665 = private unnamed_addr constant [21 x i8] c"passwd_chroot_enable\00", align 1
@.str.79.666 = private unnamed_addr constant [17 x i8] c"no_anon_password\00", align 1
@.str.80.667 = private unnamed_addr constant [13 x i8] c"tcp_wrappers\00", align 1
@.str.81.668 = private unnamed_addr constant [13 x i8] c"use_sendfile\00", align 1
@.str.82.669 = private unnamed_addr constant [16 x i8] c"force_dot_files\00", align 1
@.str.83.670 = private unnamed_addr constant [12 x i8] c"listen_ipv6\00", align 1
@.str.84.671 = private unnamed_addr constant [16 x i8] c"dual_log_enable\00", align 1
@.str.85.672 = private unnamed_addr constant [14 x i8] c"syslog_enable\00", align 1
@.str.86.673 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@.str.87.674 = private unnamed_addr constant [24 x i8] c"virtual_use_local_privs\00", align 1
@.str.88.675 = private unnamed_addr constant [16 x i8] c"session_support\00", align 1
@.str.89.676 = private unnamed_addr constant [16 x i8] c"download_enable\00", align 1
@.str.90.677 = private unnamed_addr constant [15 x i8] c"dirlist_enable\00", align 1
@.str.91.678 = private unnamed_addr constant [13 x i8] c"chmod_enable\00", align 1
@.str.92.679 = private unnamed_addr constant [25 x i8] c"secure_email_list_enable\00", align 1
@.str.93.680 = private unnamed_addr constant [22 x i8] c"run_as_launching_user\00", align 1
@.str.94.681 = private unnamed_addr constant [12 x i8] c"no_log_lock\00", align 1
@.str.95.682 = private unnamed_addr constant [11 x i8] c"ssl_enable\00", align 1
@.str.96.683 = private unnamed_addr constant [15 x i8] c"allow_anon_ssl\00", align 1
@.str.97.684 = private unnamed_addr constant [23 x i8] c"force_local_logins_ssl\00", align 1
@.str.98.685 = private unnamed_addr constant [21 x i8] c"force_local_data_ssl\00", align 1
@.str.99.686 = private unnamed_addr constant [10 x i8] c"ssl_sslv2\00", align 1
@.str.100.687 = private unnamed_addr constant [10 x i8] c"ssl_sslv3\00", align 1
@.str.101.688 = private unnamed_addr constant [10 x i8] c"ssl_tlsv1\00", align 1
@.str.102.689 = private unnamed_addr constant [18 x i8] c"tilde_user_enable\00", align 1
@.str.103.690 = private unnamed_addr constant [22 x i8] c"force_anon_logins_ssl\00", align 1
@.str.104.691 = private unnamed_addr constant [20 x i8] c"force_anon_data_ssl\00", align 1
@.str.105.692 = private unnamed_addr constant [11 x i8] c"mdtm_write\00", align 1
@.str.106.693 = private unnamed_addr constant [18 x i8] c"lock_upload_files\00", align 1
@.str.107.694 = private unnamed_addr constant [18 x i8] c"pasv_addr_resolve\00", align 1
@.str.108.695 = private unnamed_addr constant [10 x i8] c"debug_ssl\00", align 1
@.str.109.696 = private unnamed_addr constant [13 x i8] c"require_cert\00", align 1
@.str.110.697 = private unnamed_addr constant [14 x i8] c"validate_cert\00", align 1
@.str.111.698 = private unnamed_addr constant [20 x i8] c"strict_ssl_read_eof\00", align 1
@.str.112.699 = private unnamed_addr constant [26 x i8] c"strict_ssl_write_shutdown\00", align 1
@.str.113.700 = private unnamed_addr constant [17 x i8] c"ssl_request_cert\00", align 1
@.str.114.701 = private unnamed_addr constant [22 x i8] c"delete_failed_uploads\00", align 1
@.str.115.702 = private unnamed_addr constant [13 x i8] c"implicit_ssl\00", align 1
@.str.116.703 = private unnamed_addr constant [15 x i8] c"ptrace_sandbox\00", align 1
@.str.117.704 = private unnamed_addr constant [18 x i8] c"require_ssl_reuse\00", align 1
@.str.118.705 = private unnamed_addr constant [8 x i8] c"isolate\00", align 1
@.str.119.706 = private unnamed_addr constant [16 x i8] c"isolate_network\00", align 1
@.str.120.707 = private unnamed_addr constant [11 x i8] c"ftp_enable\00", align 1
@.str.121.708 = private unnamed_addr constant [12 x i8] c"http_enable\00", align 1
@.str.122.709 = private unnamed_addr constant [16 x i8] c"seccomp_sandbox\00", align 1
@.str.123.710 = private unnamed_addr constant [23 x i8] c"allow_writeable_chroot\00", align 1
@.str.12.711 = private unnamed_addr constant [18 x i8] c"secure_chroot_dir\00", align 1
@.str.13.712 = private unnamed_addr constant [13 x i8] c"ftp_username\00", align 1
@.str.14.713 = private unnamed_addr constant [15 x i8] c"chown_username\00", align 1
@.str.15.714 = private unnamed_addr constant [13 x i8] c"xferlog_file\00", align 1
@.str.16.715 = private unnamed_addr constant [16 x i8] c"vsftpd_log_file\00", align 1
@.str.17.716 = private unnamed_addr constant [13 x i8] c"message_file\00", align 1
@.str.18.717 = private unnamed_addr constant [12 x i8] c"nopriv_user\00", align 1
@.str.19.718 = private unnamed_addr constant [12 x i8] c"ftpd_banner\00", align 1
@.str.20.719 = private unnamed_addr constant [18 x i8] c"banned_email_file\00", align 1
@.str.21.720 = private unnamed_addr constant [17 x i8] c"chroot_list_file\00", align 1
@.str.22.721 = private unnamed_addr constant [17 x i8] c"pam_service_name\00", align 1
@.str.23.722 = private unnamed_addr constant [15 x i8] c"guest_username\00", align 1
@.str.24.723 = private unnamed_addr constant [14 x i8] c"userlist_file\00", align 1
@.str.25.724 = private unnamed_addr constant [10 x i8] c"anon_root\00", align 1
@.str.26.725 = private unnamed_addr constant [11 x i8] c"local_root\00", align 1
@.str.27.726 = private unnamed_addr constant [12 x i8] c"banner_file\00", align 1
@.str.28.727 = private unnamed_addr constant [13 x i8] c"pasv_address\00", align 1
@.str.29.728 = private unnamed_addr constant [15 x i8] c"listen_address\00", align 1
@.str.30.729 = private unnamed_addr constant [16 x i8] c"user_config_dir\00", align 1
@.str.31.730 = private unnamed_addr constant [16 x i8] c"listen_address6\00", align 1
@.str.32.731 = private unnamed_addr constant [13 x i8] c"cmds_allowed\00", align 1
@.str.33.732 = private unnamed_addr constant [10 x i8] c"hide_file\00", align 1
@.str.34.733 = private unnamed_addr constant [10 x i8] c"deny_file\00", align 1
@.str.35.734 = private unnamed_addr constant [15 x i8] c"user_sub_token\00", align 1
@.str.36.735 = private unnamed_addr constant [20 x i8] c"email_password_file\00", align 1
@.str.37.736 = private unnamed_addr constant [14 x i8] c"rsa_cert_file\00", align 1
@.str.38.737 = private unnamed_addr constant [14 x i8] c"dsa_cert_file\00", align 1
@.str.39.738 = private unnamed_addr constant [12 x i8] c"ssl_ciphers\00", align 1
@.str.40.739 = private unnamed_addr constant [21 x i8] c"rsa_private_key_file\00", align 1
@.str.41.740 = private unnamed_addr constant [21 x i8] c"dsa_private_key_file\00", align 1
@.str.42.741 = private unnamed_addr constant [14 x i8] c"ca_certs_file\00", align 1
@.str.43.742 = private unnamed_addr constant [12 x i8] c"cmds_denied\00", align 1
@.str.745 = private unnamed_addr constant [52 x i8] c"vsf_secutil_change_credentials: not running as root\00", align 1
@.str.1.746 = private unnamed_addr constant [26 x i8] c"cannot locate user entry:\00", align 1
@.str.2.747 = private unnamed_addr constant [25 x i8] c"cannot change directory:\00", align 1
@.str.3.748 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.4.749 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.5.750 = private unnamed_addr constant [59 x i8] c"vsftpd: refusing to run with writable root inside chroot()\00", align 1
@.str.757 = private unnamed_addr constant [58 x i8] c"could not allocate sandbox (only works for 32-bit builds)\00", align 1
@.str.1.758 = private unnamed_addr constant [33 x i8] c"could not launch sandboxed child\00", align 1
@.str.2.761 = private unnamed_addr constant [35 x i8] c"bad state in vsf_one_process_login\00", align 1
@.str.776 = private unnamed_addr constant [28 x i8] c"cannot read user list file:\00", align 1
@.str.8.777 = private unnamed_addr constant [59 x i8] c"vsftpd: not found: directory given in 'secure_chroot_dir':\00", align 1
@.str.9.778 = private unnamed_addr constant [12 x i8] c"bad request\00", align 1
@.str.10.779 = private unnamed_addr constant [35 x i8] c"could not read chroot() list file:\00", align 1
@.str.11.780 = private unnamed_addr constant [37 x i8] c"weird state in process_login_request\00", align 1
@.str.12.781 = private unnamed_addr constant [37 x i8] c"should not get here: common_do_login\00", align 1
@.str.13.782 = private unnamed_addr constant [39 x i8] c"should not get here in common_do_login\00", align 1
@.str.15.783 = private unnamed_addr constant [26 x i8] c"cannot locate user entry:\00", align 1
@.str.16.784 = private unnamed_addr constant [4 x i8] c"/./\00", align 1
@.str.14.785 = private unnamed_addr constant [35 x i8] c"error opening per-user config file\00", align 1
@.str.6.786 = private unnamed_addr constant [18 x i8] c"waiting for child\00", align 1
@.str.7.787 = private unnamed_addr constant [11 x i8] c"child died\00", align 1
@.str.1.790 = private unnamed_addr constant [21 x i8] c"priv_sock_get_result\00", align 1
@.str.2.793 = private unnamed_addr constant [32 x i8] c"could not get privileged socket\00", align 1
@.str.3.796 = private unnamed_addr constant [26 x i8] c"could not clean up socket\00", align 1
@.str.4.803 = private unnamed_addr constant [37 x i8] c"could not accept on listening socket\00", align 1
@.str.5.806 = private unnamed_addr constant [51 x i8] c"unexpected failure in vsf_two_process_chown_upload\00", align 1
@.str.809 = private unnamed_addr constant [21 x i8] c"listed fd is active?\00", align 1
@.str.1.810 = private unnamed_addr constant [21 x i8] c"Illegal port request\00", align 1
@vsf_privop_get_ftp_port_sock.p_sockaddr = internal global %struct.vsf_sysutil_sockaddr* null, align 8, !dbg !961
@.str.2.811 = private unnamed_addr constant [17 x i8] c"vsf_sysutil_bind\00", align 1
@.str.3.818 = private unnamed_addr constant [25 x i8] c"listed fd already active\00", align 1
@vsf_privop_pasv_listen.s_p_sockaddr = internal global %struct.vsf_sysutil_sockaddr* null, align 8, !dbg !1053
@.str.4.819 = private unnamed_addr constant [26 x i8] c"vsf_sysutil_bind / listen\00", align 1
@.str.5.822 = private unnamed_addr constant [21 x i8] c"listed fd not active\00", align 1
@vsf_privop_do_file_chown.s_p_statbuf = internal global %struct.vsf_sysutil_statbuf* null, align 8, !dbg !1058
@.str.6.825 = private unnamed_addr constant [32 x i8] c"invalid fd in cmd_process_chown\00", align 1
@.str.7.828 = private unnamed_addr constant [4 x i8] c"FTP\00", align 1
@.str.8.829 = private unnamed_addr constant [10 x i8] c"ANONYMOUS\00", align 1
@.str.9.830 = private unnamed_addr constant [39 x i8] c"unexpected local login in handle_login\00", align 1
@.str.10.831 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@s_ipaddr_size = internal global i32 0, align 4, !dbg !1063
@.str.834 = private unnamed_addr constant [43 x i8] c"run two copies of vsftpd for IPv4 and IPv6\00", align 1
@s_p_ip_count_hash = internal global %struct.hash* null, align 8, !dbg !1080
@s_p_pid_ip_hash = internal global %struct.hash* null, align 8, !dbg !1085
@.str.1.835 = private unnamed_addr constant [9 x i8] c"LISTENER\00", align 1
@.str.2.837 = private unnamed_addr constant [21 x i8] c"bad listen_address: \00", align 1
@.str.3.838 = private unnamed_addr constant [37 x i8] c"could not bind listening IPv4 socket\00", align 1
@.str.4.839 = private unnamed_addr constant [22 x i8] c"bad listen_address6: \00", align 1
@.str.5.840 = private unnamed_addr constant [37 x i8] c"could not bind listening IPv6 socket\00", align 1
@.str.6.841 = private unnamed_addr constant [17 x i8] c"could not listen\00", align 1
@s_children = internal global i32 0, align 4, !dbg !1078
@.str.7.842 = private unnamed_addr constant [29 x i8] c"IP address missing from hash\00", align 1
@.str.8.843 = private unnamed_addr constant [26 x i8] c"zero count for IP address\00", align 1
@.str.2.848 = private unnamed_addr constant [18 x i8] c"bad bucket lookup\00", align 1
@.str.851 = private unnamed_addr constant [19 x i8] c"duplicate hash key\00", align 1
@.str.1.854 = private unnamed_addr constant [20 x i8] c"hash node not found\00", align 1
@.str.857 = private unnamed_addr constant [66 x i8] c"tcp_wrappers is set to YES but no tcp wrapper support compiled in\00", align 1
@vsf_sysutil_parse_ipv6.s_ret = internal global %struct.mystr zeroinitializer, align 8, !dbg !1087
@vsf_sysutil_parse_ipv6.s_rhs_ret = internal global %struct.mystr zeroinitializer, align 8, !dbg !1103
@vsf_sysutil_parse_ipv6.s_lhs_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1105
@vsf_sysutil_parse_ipv6.s_rhs_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1107
@.str.860 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@ipv6_parse_main.s_lhs_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1123
@ipv6_parse_main.s_rhs_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1129
@vsf_sysutil_parse_ipv4.items = internal global [4 x i8] zeroinitializer, align 1, !dbg !1109
@vsf_sysutil_parse_uchar_string_sep.s_tmp_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1115
@vsf_sysutil_parse_uchar_string_sep.s_rhs_sep_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1121
@vsf_access_check_file.s_access_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1131
@vsf_access_check_file_visible.s_access_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1146
@.str.871 = private unnamed_addr constant [10 x i8] c"Features:\00", align 1
@.str.1.872 = private unnamed_addr constant [12 x i8] c" AUTH SSL\0D\0A\00", align 1
@.str.2.873 = private unnamed_addr constant [12 x i8] c" AUTH TLS\0D\0A\00", align 1
@.str.3.874 = private unnamed_addr constant [8 x i8] c" EPRT\0D\0A\00", align 1
@.str.4.875 = private unnamed_addr constant [8 x i8] c" EPSV\0D\0A\00", align 1
@.str.5.876 = private unnamed_addr constant [8 x i8] c" MDTM\0D\0A\00", align 1
@.str.6.877 = private unnamed_addr constant [8 x i8] c" PASV\0D\0A\00", align 1
@.str.7.878 = private unnamed_addr constant [8 x i8] c" PBSZ\0D\0A\00", align 1
@.str.8.879 = private unnamed_addr constant [8 x i8] c" PROT\0D\0A\00", align 1
@.str.9.880 = private unnamed_addr constant [15 x i8] c" REST STREAM\0D\0A\00", align 1
@.str.10.881 = private unnamed_addr constant [8 x i8] c" SIZE\0D\0A\00", align 1
@.str.11.882 = private unnamed_addr constant [8 x i8] c" TVFS\0D\0A\00", align 1
@.str.12.883 = private unnamed_addr constant [8 x i8] c" UTF8\0D\0A\00", align 1
@.str.13.884 = private unnamed_addr constant [4 x i8] c"End\00", align 1
@.str.895 = private unnamed_addr constant [8 x i8] c"UTF8 ON\00", align 1
@.str.1.896 = private unnamed_addr constant [21 x i8] c"Always in UTF8 mode.\00", align 1
@.str.2.897 = private unnamed_addr constant [23 x i8] c"Option not understood.\00", align 1
@.str.900 = private unnamed_addr constant [55 x i8] c"SSL: ssl_enable is set but SSL support not compiled in\00", align 1
@.str.931 = private unnamed_addr constant [12 x i8] c"SSL handler\00", align 1
@.str.1.932 = private unnamed_addr constant [16 x i8] c"state not clean\00", align 1
@.str.2.933 = private unnamed_addr constant [9 x i8] c"bad size\00", align 1
@.str.3.934 = private unnamed_addr constant [14 x i8] c"invalid state\00", align 1
@.str.4.935 = private unnamed_addr constant [37 x i8] c"bad request in process_ssl_slave_req\00", align 1
@connect_validator.p_sockptr = internal global %struct.vsf_sysutil_sockaddr* null, align 8, !dbg !1149
@s_io_handler = internal global void (i32, i32, i8*)* null, align 8, !dbg !1323
@s_io_handler_running = internal global i32 0, align 4, !dbg !1665
@s_p_io_handler_private = internal global i8* null, align 8, !dbg !1663
@s_sig_details = internal global [65 x %struct.vsf_sysutil_sig_details] zeroinitializer, align 16, !dbg !1645
@.str.85.954 = private unnamed_addr constant [11 x i8] c"sigfillset\00", align 1
@.str.86.955 = private unnamed_addr constant [10 x i8] c"sigaction\00", align 1
@.str.83.956 = private unnamed_addr constant [44 x i8] c"unknown signal in vsf_sysutil_translate_sig\00", align 1
@.str.84.957 = private unnamed_addr constant [49 x i8] c"signal out of range in vsf_sysutil_translate_sig\00", align 1
@.str.960 = private unnamed_addr constant [12 x i8] c"sigemptyset\00", align 1
@.str.1.961 = private unnamed_addr constant [10 x i8] c"sigaddset\00", align 1
@.str.2.962 = private unnamed_addr constant [12 x i8] c"sigprocmask\00", align 1
@.str.3.965 = private unnamed_addr constant [31 x i8] c"double register of i/o handler\00", align 1
@.str.4.968 = private unnamed_addr constant [30 x i8] c"no i/o handler to unregister!\00", align 1
@.str.5.977 = private unnamed_addr constant [38 x i8] c"size too big in vsf_sysutil_read_loop\00", align 1
@.str.6.978 = private unnamed_addr constant [40 x i8] c"retval too big in vsf_sysutil_read_loop\00", align 1
@.str.7.981 = private unnamed_addr constant [39 x i8] c"size too big in vsf_sysutil_write_loop\00", align 1
@.str.8.982 = private unnamed_addr constant [41 x i8] c"retval too big in vsf_sysutil_write_loop\00", align 1
@.str.9.985 = private unnamed_addr constant [6 x i8] c"lseek\00", align 1
@.str.10.988 = private unnamed_addr constant [42 x i8] c"negative seek_pos in vsf_sysutil_lseek_to\00", align 1
@.str.11.993 = private unnamed_addr constant [39 x i8] c"zero or big size in vsf_sysutil_malloc\00", align 1
@.str.12.994 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@.str.13.997 = private unnamed_addr constant [40 x i8] c"zero or big size in vsf_sysutil_realloc\00", align 1
@.str.14.998 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@.str.15.1001 = private unnamed_addr constant [36 x i8] c"vsf_sysutil_free got a null pointer\00", align 1
@s_current_pid = internal global i32 -1, align 4, !dbg !1667
@.str.16.1008 = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@s_exit_func = internal global void ()* null, align 8, !dbg !1639
@.str.17.1015 = private unnamed_addr constant [8 x i8] c"waitpid\00", align 1
@.str.18.1020 = private unnamed_addr constant [51 x i8] c"not a normal exit in vsf_sysutil_wait_get_exitcode\00", align 1
@.str.19.1023 = private unnamed_addr constant [22 x i8] c"setsockopt: keepalive\00", align 1
@.str.20.1026 = private unnamed_addr constant [22 x i8] c"setsockopt: reuseaddr\00", align 1
@.str.21.1029 = private unnamed_addr constant [20 x i8] c"setsockopt: nodelay\00", align 1
@.str.22.1032 = private unnamed_addr constant [6 x i8] c"fcntl\00", align 1
@.str.23.1035 = private unnamed_addr constant [22 x i8] c"setsockopt: oobinline\00", align 1
@.str.24.1040 = private unnamed_addr constant [19 x i8] c"setsockopt: linger\00", align 1
@.str.30.1057 = private unnamed_addr constant [25 x i8] c"string suspiciously long\00", align 1
@vsf_sysutil_ulong_to_str.ulong_buf = internal global [32 x i8] zeroinitializer, align 16, !dbg !1494
@.str.25.1060 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@vsf_sysutil_filesize_t_to_str.filesize_buf = internal global [32 x i8] zeroinitializer, align 16, !dbg !1502
@.str.26.1063 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@vsf_sysutil_double_to_str.double_buf = internal global [32 x i8] zeroinitializer, align 16, !dbg !1507
@.str.27.1066 = private unnamed_addr constant [5 x i8] c"%.2f\00", align 1
@vsf_sysutil_uint_to_octal.octal_buf = internal global [32 x i8] zeroinitializer, align 16, !dbg !1512
@.str.28.1069 = private unnamed_addr constant [4 x i8] c"0%o\00", align 1
@.str.29.1096 = private unnamed_addr constant [9 x i8] c"closedir\00", align 1
@.str.31.1103 = private unnamed_addr constant [35 x i8] c"possible negative value to memcpy?\00", align 1
@vsf_sysutil_getpagesize.s_page_size = internal global i32 0, align 4, !dbg !1517
@.str.32.1108 = private unnamed_addr constant [12 x i8] c"getpagesize\00", align 1
@.str.33.1111 = private unnamed_addr constant [9 x i8] c"mprotect\00", align 1
@.str.87.1112 = private unnamed_addr constant [43 x i8] c"bad value in vsf_sysutil_translate_memprot\00", align 1
@.str.34.1115 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1
@.str.88.1118 = private unnamed_addr constant [43 x i8] c"bad mode in vsf_sysutil_translate_openmode\00", align 1
@.str.35.1127 = private unnamed_addr constant [5 x i8] c"dup2\00", align 1
@.str.36.1130 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.37.1139 = private unnamed_addr constant [6 x i8] c"fstat\00", align 1
@vsf_sysutil_statbuf_get_perms.perms = internal global [11 x i8] zeroinitializer, align 1, !dbg !1522
@.str.38.1158 = private unnamed_addr constant [12 x i8] c"%b %d %H:%M\00", align 1
@.str.39.1159 = private unnamed_addr constant [10 x i8] c"%b %d  %Y\00", align 1
@vsf_sysutil_statbuf_get_date.datebuf = internal global [64 x i8] zeroinitializer, align 16, !dbg !1532
@.str.40.1160 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@vsf_sysutil_statbuf_get_numeric_date.datebuf = internal global [15 x i8] zeroinitializer, align 1, !dbg !1540
@.str.41.1163 = private unnamed_addr constant [13 x i8] c"%Y%m%d%H%M%S\00", align 1
@.str.42.1166 = private unnamed_addr constant [51 x i8] c"invalid inode size in vsf_sysutil_statbuf_get_size\00", align 1
@vsf_sysutil_statbuf_get_sortkey_mtime.intbuf = internal global [32 x i8] zeroinitializer, align 16, !dbg !1548
@.str.43.1177 = private unnamed_addr constant [7 x i8] c"%030ld\00", align 1
@.str.44.1180 = private unnamed_addr constant [7 x i8] c"fchown\00", align 1
@.str.45.1183 = private unnamed_addr constant [7 x i8] c"fchmod\00", align 1
@.str.46.1198 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.47.1203 = private unnamed_addr constant [11 x i8] c"socketpair\00", align 1
@.str.48.1206 = private unnamed_addr constant [41 x i8] c"can only support ipv4 and ipv6 currently\00", align 1
@.str.49.1209 = private unnamed_addr constant [7 x i8] c"listen\00", align 1
@.str.50.1214 = private unnamed_addr constant [11 x i8] c"getsockopt\00", align 1
@.str.51.1219 = private unnamed_addr constant [12 x i8] c"getsockname\00", align 1
@.str.52.1224 = private unnamed_addr constant [12 x i8] c"getpeername\00", align 1
@vsf_sysutil_sockaddr_ipv6_v4.pattern = internal global [12 x i8] c"\00\00\00\00\00\00\00\00\00\00\FF\FF", align 1, !dbg !1590
@vsf_sysutil_sockaddr_set_ipv4addr.s_p_sockaddr = internal global %struct.vsf_sysutil_sockaddr* null, align 8, !dbg !1551
@.str.53.1243 = private unnamed_addr constant [11 x i8] c"bad family\00", align 1
@vsf_sysutil_sockaddr_ipv4_v6.ret = internal global [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\FF\FF\00\00\00\00", align 16, !dbg !1602
@vsf_sysutil_inet_ntop.inaddr_buf = internal global [64 x i8] zeroinitializer, align 16, !dbg !1606
@.str.54.1268 = private unnamed_addr constant [21 x i8] c"cannot resolve host:\00", align 1
@.str.55.1269 = private unnamed_addr constant [39 x i8] c"gethostbyname(): neither IPv4 nor IPv6\00", align 1
@.str.56.1272 = private unnamed_addr constant [37 x i8] c"negative uid in vsf_sysutil_getpwuid\00", align 1
@.str.57.1283 = private unnamed_addr constant [37 x i8] c"negative gid in vsf_sysutil_getgrgid\00", align 1
@vsf_sysutil_get_random_byte.seeded = internal global i32 0, align 4, !dbg !1611
@.str.58.1288 = private unnamed_addr constant [13 x i8] c"gettimeofday\00", align 1
@.str.59.1293 = private unnamed_addr constant [7 x i8] c"setuid\00", align 1
@.str.60.1296 = private unnamed_addr constant [7 x i8] c"setgid\00", align 1
@.str.61.1299 = private unnamed_addr constant [8 x i8] c"geteuid\00", align 1
@.str.62.1302 = private unnamed_addr constant [8 x i8] c"getegid\00", align 1
@.str.63.1307 = private unnamed_addr constant [8 x i8] c"seteuid\00", align 1
@.str.64.1312 = private unnamed_addr constant [8 x i8] c"setegid\00", align 1
@.str.65.1315 = private unnamed_addr constant [10 x i8] c"setgroups\00", align 1
@.str.66.1318 = private unnamed_addr constant [11 x i8] c"initgroups\00", align 1
@.str.67.1321 = private unnamed_addr constant [7 x i8] c"chroot\00", align 1
@s_current_umask = internal global i32 0, align 4, !dbg !1629
@.str.68.1328 = private unnamed_addr constant [19 x i8] c"not session leader\00", align 1
@.str.69.1331 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.70.1332 = private unnamed_addr constant [56 x i8] c"reopening standard file descriptors to /dev/null failed\00", align 1
@.str.71.1335 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.72.1336 = private unnamed_addr constant [3 x i8] c"%z\00", align 1
@vsf_sysutil_tzset.envtz = internal global [13 x i8] zeroinitializer, align 1, !dbg !1616
@.str.73.1337 = private unnamed_addr constant [9 x i8] c"TZ=UTC%s\00", align 1
@s_timezone = internal global i64 0, align 8, !dbg !1643
@.str.74.1338 = private unnamed_addr constant [13 x i8] c"localtime #2\00", align 1
@.str.75.1339 = private unnamed_addr constant [7 x i8] c"gmtime\00", align 1
@vsf_sysutil_get_current_date.datebuf = internal global [64 x i8] zeroinitializer, align 16, !dbg !1624
@.str.76.1344 = private unnamed_addr constant [21 x i8] c"%a %b!%d %H:%M:%S %Y\00", align 1
@s_current_time = internal global %struct.timespec zeroinitializer, align 8, !dbg !1631
@.str.77.1355 = private unnamed_addr constant [7 x i8] c"vsftpd\00", align 1
@.str.78.1358 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.79.1365 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.80.1370 = private unnamed_addr constant [10 x i8] c"setrlimit\00", align 1
@.str.81.1373 = private unnamed_addr constant [17 x i8] c"setrlimit NOFILE\00", align 1
@.str.82.1376 = private unnamed_addr constant [16 x i8] c"setrlimit NPROC\00", align 1
@vsf_sysdep_check_auth.the_conv = private unnamed_addr constant %struct.pam_conv { i32 (i32, %struct.pam_message**, %struct.pam_response**, i8*)* @pam_conv_func, i8* null }, align 8
@s_pamh = internal global %struct.pam_handle* null, align 8, !dbg !1673
@.str.1379 = private unnamed_addr constant [22 x i8] c"vsf_sysdep_check_auth\00", align 1
@s_pword_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1738
@.str.1.1380 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.16.1381 = private unnamed_addr constant [18 x i8] c"vsf_auth_shutdown\00", align 1
@s_uwtmp_inserted = internal global i32 0, align 4, !dbg !1740
@s_utent = internal global %struct.utmpx zeroinitializer, align 4, !dbg !1742
@.str.15.1382 = private unnamed_addr constant [14 x i8] c"/var/log/wtmp\00", align 1
@.str.13.1383 = private unnamed_addr constant [17 x i8] c"vsf_insert_uwtmp\00", align 1
@.str.14.1384 = private unnamed_addr constant [8 x i8] c"vsftpd:\00", align 1
@.str.17.1385 = private unnamed_addr constant [28 x i8] c"dodgy nmsg in pam_conv_func\00", align 1
@.str.2.1390 = private unnamed_addr constant [50 x i8] c"asked to keep capabilities, but no support exists\00", align 1
@.str.3.1391 = private unnamed_addr constant [6 x i8] c"prctl\00", align 1
@vsf_sysdep_has_capabilities_as_non_root.s_prctl_checked = internal global i32 0, align 4, !dbg !1710
@vsf_sysdep_has_capabilities_as_non_root.s_runtime_prctl_works = internal global i32 0, align 4, !dbg !1715
@vsf_sysdep_has_capabilities.s_caps_checked = internal global i32 0, align 4, !dbg !1717
@vsf_sysdep_has_capabilities.s_runtime_has_caps = internal global i32 0, align 4, !dbg !1720
@.str.4.1396 = private unnamed_addr constant [13 x i8] c"cap_set_proc\00", align 1
@.str.5.1399 = private unnamed_addr constant [53 x i8] c"invalid offset or send count in vsf_sysutil_sendfile\00", align 1
@do_sendfile.s_sendfile_checked = internal global i32 0, align 4, !dbg !1783
@do_sendfile.s_runtime_sendfile_works = internal global i32 0, align 4, !dbg !1785
@do_sendfile.p_recvbuf = internal global i8* null, align 8, !dbg !1777
@.str.18.1400 = private unnamed_addr constant [48 x i8] c"num_written bigger than num_send in do_sendfile\00", align 1
@s_proctitle_prefix_str = internal global %struct.mystr zeroinitializer, align 8, !dbg !1731
@.str.6.1407 = private unnamed_addr constant [3 x i8] c": \00", align 1
@s_proctitle_inited = internal global i32 0, align 4, !dbg !1787
@.str.19.1408 = private unnamed_addr constant [42 x i8] c"vsf_sysutil_setproctitle: not initialized\00", align 1
@s_p_proctitle = internal global i8* null, align 8, !dbg !1791
@s_proctitle_space = internal global i32 0, align 4, !dbg !1789
@.str.20.1409 = private unnamed_addr constant [9 x i8] c"vsftpd: \00", align 1
@environ = external global i8**, align 8
@.str.7.1412 = private unnamed_addr constant [43 x i8] c"vsf_sysutil_setproctitle_init called twice\00", align 1
@.str.8.1413 = private unnamed_addr constant [44 x i8] c"no argv[0] in vsf_sysutil_setproctitle_init\00", align 1
@.str.9.1418 = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@.str.10.1421 = private unnamed_addr constant [8 x i8] c"sendmsg\00", align 1
@.str.11.1424 = private unnamed_addr constant [8 x i8] c"recvmsg\00", align 1
@.str.12.1425 = private unnamed_addr constant [13 x i8] c"no passed fd\00", align 1
@vsf_sysutil_fork_isolate_all_failok.cloneflags_work = internal global i32 1, align 4, !dbg !1722
@vsf_sysutil_fork_isolate_failok.cloneflags_work = internal global i32 1, align 4, !dbg !1725
@vsf_sysutil_fork_newnet.cloneflags_work = internal global i32 1, align 4, !dbg !1728
@s_syscall_index = internal global i64 0, align 8, !dbg !1797
@.str.1440 = private unnamed_addr constant [34 x i8] c"bad state in seccomp_sandbox_init\00", align 1
@.str.3.1443 = private unnamed_addr constant [21 x i8] c"out of syscall space\00", align 1
@.str.4.1444 = private unnamed_addr constant [17 x i8] c"negative syscall\00", align 1
@.str.8.1445 = private unnamed_addr constant [12 x i8] c"bad errcode\00", align 1
@s_errnos = internal global [100 x i32] zeroinitializer, align 16, !dbg !1816
@s_syscalls = internal global [100 x i32] zeroinitializer, align 16, !dbg !1811
@.str.6.1446 = private unnamed_addr constant [18 x i8] c"arg1 out of range\00", align 1
@.str.7.1447 = private unnamed_addr constant [18 x i8] c"arg2 out of range\00", align 1
@s_args_1 = internal global [100 x i32] zeroinitializer, align 16, !dbg !1818
@s_vals_1 = internal global [100 x i32] zeroinitializer, align 16, !dbg !1820
@s_args_2 = internal global [100 x i32] zeroinitializer, align 16, !dbg !1822
@s_vals_2 = internal global [100 x i32] zeroinitializer, align 16, !dbg !1824
@s_2_arg_validations = internal global i64 0, align 8, !dbg !1807
@.str.5.1448 = private unnamed_addr constant [17 x i8] c"arg out of range\00", align 1
@s_1_arg_validations = internal global i64 0, align 8, !dbg !1805
@.str.9.1451 = private unnamed_addr constant [18 x i8] c"arg3 out of range\00", align 1
@s_args_3 = internal global [100 x i32] zeroinitializer, align 16, !dbg !1826
@s_vals_3 = internal global [100 x i32] zeroinitializer, align 16, !dbg !1828
@s_3_arg_validations = internal global i64 0, align 8, !dbg !1809
@.str.1.1456 = private unnamed_addr constant [26 x i8] c"prctl PR_SET_NO_NEW_PRIVS\00", align 1
@.str.2.1457 = private unnamed_addr constant [28 x i8] c"prctl PR_SET_SECCOMP failed\00", align 1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @main(i32, i8**) #0 !dbg !1956 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.vsf_session, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.vsf_client_launch, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1959, metadata !DIExpression()), !dbg !1960
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1961, metadata !DIExpression()), !dbg !1962
  call void @llvm.dbg.declare(metadata %struct.vsf_session* %6, metadata !1963, metadata !DIExpression()), !dbg !2028
  %19 = bitcast %struct.vsf_session* %6 to i8*, !dbg !2028
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 bitcast (%struct.vsf_session* @main.the_session to i8*), i64 480, i1 false), !dbg !2028
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2029, metadata !DIExpression()), !dbg !2030
  store i32 0, i32* %7, align 4, !dbg !2030
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2031, metadata !DIExpression()), !dbg !2032
  call void (...) bitcast (void ()* @tunables_load_defaults to void (...)*)(), !dbg !2033
  call void @vsf_sysutil_map_anon_pages_init(), !dbg !2034
  %20 = load i32, i32* %4, align 4, !dbg !2035
  %21 = icmp eq i32 %20, 0, !dbg !2037
  br i1 %21, label %22, label %23, !dbg !2038

22:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i32 0, i32 0)), !dbg !2039
  br label %23, !dbg !2041

23:                                               ; preds = %22, %2
  store i32 1, i32* %8, align 4, !dbg !2042
  br label %24, !dbg !2044

24:                                               ; preds = %62, %23
  %25 = load i32, i32* %8, align 4, !dbg !2045
  %26 = load i32, i32* %4, align 4, !dbg !2047
  %27 = icmp slt i32 %25, %26, !dbg !2048
  br i1 %27, label %28, label %65, !dbg !2049

28:                                               ; preds = %24
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2050, metadata !DIExpression()), !dbg !2052
  %29 = load i8**, i8*** %5, align 8, !dbg !2053
  %30 = load i32, i32* %8, align 4, !dbg !2054
  %31 = sext i32 %30 to i64, !dbg !2053
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31, !dbg !2053
  %33 = load i8*, i8** %32, align 8, !dbg !2053
  store i8* %33, i8** %9, align 8, !dbg !2052
  %34 = load i8*, i8** %9, align 8, !dbg !2055
  %35 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !2055
  %36 = load i8, i8* %35, align 1, !dbg !2055
  %37 = sext i8 %36 to i32, !dbg !2055
  %38 = icmp ne i32 %37, 45, !dbg !2057
  br i1 %38, label %39, label %41, !dbg !2058

39:                                               ; preds = %28
  store i32 1, i32* %7, align 4, !dbg !2059
  %40 = load i8*, i8** %9, align 8, !dbg !2061
  call void @vsf_parseconf_load_file(i8* %40, i32 1), !dbg !2062
  br label %61, !dbg !2063

41:                                               ; preds = %28
  %42 = load i8*, i8** %9, align 8, !dbg !2064
  %43 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !2064
  %44 = load i8, i8* %43, align 1, !dbg !2064
  %45 = sext i8 %44 to i32, !dbg !2064
  %46 = icmp eq i32 %45, 118, !dbg !2067
  br i1 %46, label %47, label %48, !dbg !2068

47:                                               ; preds = %41
  call void @vsf_exit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0)), !dbg !2069
  br label %60, !dbg !2071

48:                                               ; preds = %41
  %49 = load i8*, i8** %9, align 8, !dbg !2072
  %50 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !2072
  %51 = load i8, i8* %50, align 1, !dbg !2072
  %52 = sext i8 %51 to i32, !dbg !2072
  %53 = icmp eq i32 %52, 111, !dbg !2074
  br i1 %53, label %54, label %57, !dbg !2075

54:                                               ; preds = %48
  %55 = load i8*, i8** %9, align 8, !dbg !2076
  %56 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !2076
  call void @vsf_parseconf_load_setting(i8* %56, i32 1), !dbg !2078
  br label %59, !dbg !2079

57:                                               ; preds = %48
  %58 = load i8*, i8** %9, align 8, !dbg !2080
  call void @die2(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i8* %58), !dbg !2082
  br label %59

59:                                               ; preds = %57, %54
  br label %60

60:                                               ; preds = %59, %47
  br label %61

61:                                               ; preds = %60, %39
  br label %62, !dbg !2083

62:                                               ; preds = %61
  %63 = load i32, i32* %8, align 4, !dbg !2084
  %64 = add nsw i32 %63, 1, !dbg !2084
  store i32 %64, i32* %8, align 4, !dbg !2084
  br label %24, !dbg !2085, !llvm.loop !2086

65:                                               ; preds = %24
  %66 = load i32, i32* %7, align 4, !dbg !2088
  %67 = icmp ne i32 %66, 0, !dbg !2088
  br i1 %67, label %77, label %68, !dbg !2090

68:                                               ; preds = %65
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %10, metadata !2091, metadata !DIExpression()), !dbg !2093
  store %struct.vsf_sysutil_statbuf* null, %struct.vsf_sysutil_statbuf** %10, align 8, !dbg !2093
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2094, metadata !DIExpression()), !dbg !2095
  %69 = call i32 @vsf_sysutil_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i32 0, i32 0), %struct.vsf_sysutil_statbuf** %10), !dbg !2096
  store i32 %69, i32* %11, align 4, !dbg !2095
  %70 = load i32, i32* %11, align 4, !dbg !2097
  %71 = call i32 @vsf_sysutil_retval_is_error(i32 %70), !dbg !2099
  %72 = icmp ne i32 %71, 0, !dbg !2099
  br i1 %72, label %74, label %73, !dbg !2100

73:                                               ; preds = %68
  call void @vsf_parseconf_load_file(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i32 0, i32 0), i32 1), !dbg !2101
  br label %74, !dbg !2103

74:                                               ; preds = %73, %68
  %75 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %10, align 8, !dbg !2104
  %76 = bitcast %struct.vsf_sysutil_statbuf* %75 to i8*, !dbg !2104
  call void @vsf_sysutil_free(i8* %76), !dbg !2105
  br label %77, !dbg !2106

77:                                               ; preds = %74, %65
  %78 = load i8*, i8** @tunable_pasv_address, align 8, !dbg !2107
  %79 = icmp ne i8* %78, null, !dbg !2107
  br i1 %79, label %80, label %92, !dbg !2109

80:                                               ; preds = %77
  %81 = load i32, i32* @tunable_pasv_addr_resolve, align 4, !dbg !2110
  %82 = icmp ne i32 %81, 0, !dbg !2110
  br i1 %82, label %83, label %92, !dbg !2111

83:                                               ; preds = %80
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %12, metadata !2112, metadata !DIExpression()), !dbg !2114
  store %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr** %12, align 8, !dbg !2114
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2115, metadata !DIExpression()), !dbg !2116
  %84 = load i8*, i8** @tunable_pasv_address, align 8, !dbg !2117
  call void @vsf_sysutil_dns_resolve(%struct.vsf_sysutil_sockaddr** %12, i8* %84), !dbg !2118
  %85 = load i8*, i8** @tunable_pasv_address, align 8, !dbg !2119
  call void @vsf_sysutil_free(i8* %85), !dbg !2120
  %86 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %12, align 8, !dbg !2121
  %87 = call i8* @vsf_sysutil_inet_ntop(%struct.vsf_sysutil_sockaddr* %86), !dbg !2122
  store i8* %87, i8** %13, align 8, !dbg !2123
  %88 = load i8*, i8** %13, align 8, !dbg !2124
  %89 = call i8* @vsf_sysutil_strdup(i8* %88), !dbg !2125
  store i8* %89, i8** @tunable_pasv_address, align 8, !dbg !2126
  %90 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %12, align 8, !dbg !2127
  %91 = bitcast %struct.vsf_sysutil_sockaddr* %90 to i8*, !dbg !2127
  call void @vsf_sysutil_free(i8* %91), !dbg !2128
  br label %92, !dbg !2129

92:                                               ; preds = %83, %80, %77
  %93 = load i32, i32* @tunable_run_as_launching_user, align 4, !dbg !2130
  %94 = icmp ne i32 %93, 0, !dbg !2130
  br i1 %94, label %96, label %95, !dbg !2132

95:                                               ; preds = %92
  call void @die_unless_privileged(), !dbg !2133
  br label %96, !dbg !2135

96:                                               ; preds = %95, %92
  %97 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !2136
  %98 = icmp ne i32 %97, 0, !dbg !2136
  br i1 %98, label %99, label %102, !dbg !2138

99:                                               ; preds = %96
  %100 = load i32, i32* %4, align 4, !dbg !2139
  %101 = load i8**, i8*** %5, align 8, !dbg !2141
  call void @vsf_sysutil_setproctitle_init(i32 %100, i8** %101), !dbg !2142
  br label %102, !dbg !2143

102:                                              ; preds = %99, %96
  %103 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2144
  %104 = icmp ne i32 %103, 0, !dbg !2144
  br i1 %104, label %105, label %106, !dbg !2146

105:                                              ; preds = %102
  call void @ssl_init(%struct.vsf_session* %6), !dbg !2147
  br label %106, !dbg !2149

106:                                              ; preds = %105, %102
  %107 = load i32, i32* @tunable_listen, align 4, !dbg !2150
  %108 = icmp ne i32 %107, 0, !dbg !2150
  br i1 %108, label %112, label %109, !dbg !2152

109:                                              ; preds = %106
  %110 = load i32, i32* @tunable_listen_ipv6, align 4, !dbg !2153
  %111 = icmp ne i32 %110, 0, !dbg !2153
  br i1 %111, label %112, label %121, !dbg !2154

112:                                              ; preds = %109, %106
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %14, metadata !2155, metadata !DIExpression()), !dbg !2162
  %113 = call i64 @vsf_standalone_main(), !dbg !2163
  %114 = bitcast %struct.vsf_client_launch* %14 to i64*, !dbg !2163
  store i64 %113, i64* %114, align 4, !dbg !2163
  %115 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %14, i32 0, i32 0, !dbg !2164
  %116 = load i32, i32* %115, align 4, !dbg !2164
  %117 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 44, !dbg !2165
  store i32 %116, i32* %117, align 8, !dbg !2166
  %118 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %14, i32 0, i32 1, !dbg !2167
  %119 = load i32, i32* %118, align 4, !dbg !2167
  %120 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 45, !dbg !2168
  store i32 %119, i32* %120, align 4, !dbg !2169
  br label %121, !dbg !2170

121:                                              ; preds = %112, %109
  %122 = load i32, i32* @tunable_tcp_wrappers, align 4, !dbg !2171
  %123 = icmp ne i32 %122, 0, !dbg !2171
  br i1 %123, label %124, label %127, !dbg !2173

124:                                              ; preds = %121
  %125 = call i32 @vsf_tcp_wrapper_ok(i32 0), !dbg !2174
  %126 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 31, !dbg !2176
  store i32 %125, i32* %126, align 8, !dbg !2177
  br label %127, !dbg !2178

127:                                              ; preds = %124, %121
  call void @llvm.dbg.declare(metadata i8** %15, metadata !2179, metadata !DIExpression()), !dbg !2181
  %128 = call i8* @vsf_sysutil_getenv(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0)), !dbg !2182
  store i8* %128, i8** %15, align 8, !dbg !2181
  %129 = load i8*, i8** %15, align 8, !dbg !2183
  %130 = icmp ne i8* %129, null, !dbg !2183
  br i1 %130, label %131, label %133, !dbg !2185

131:                                              ; preds = %127
  %132 = load i8*, i8** %15, align 8, !dbg !2186
  call void @vsf_parseconf_load_file(i8* %132, i32 1), !dbg !2188
  br label %133, !dbg !2189

133:                                              ; preds = %131, %127
  call void @do_sanity_checks(), !dbg !2190
  call void @session_init(%struct.vsf_session* %6), !dbg !2191
  call void @env_init(), !dbg !2192
  call void @limits_init(), !dbg !2193
  call void @vsf_log_init(%struct.vsf_session* %6), !dbg !2194
  %134 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 34, !dbg !2195
  %135 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 1, !dbg !2196
  %136 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %135, align 8, !dbg !2196
  %137 = call i8* @vsf_sysutil_inet_ntop(%struct.vsf_sysutil_sockaddr* %136), !dbg !2197
  call void @str_alloc_text(%struct.mystr* %134, i8* %137), !dbg !2198
  call void @vsf_cmdio_sock_setup(), !dbg !2199
  %138 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !2200
  %139 = icmp ne i32 %138, 0, !dbg !2200
  br i1 %139, label %140, label %142, !dbg !2202

140:                                              ; preds = %133
  %141 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 34, !dbg !2203
  call void @vsf_sysutil_set_proctitle_prefix(%struct.mystr* %141), !dbg !2205
  call void @vsf_sysutil_setproctitle(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0)), !dbg !2206
  br label %142, !dbg !2207

142:                                              ; preds = %140, %133
  %143 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2208
  %144 = icmp ne i32 %143, 0, !dbg !2208
  br i1 %144, label %145, label %146, !dbg !2210

145:                                              ; preds = %142
  call void @ssl_init(%struct.vsf_session* %6), !dbg !2211
  call void @ssl_add_entropy(%struct.vsf_session* %6), !dbg !2213
  br label %146, !dbg !2214

146:                                              ; preds = %145, %142
  %147 = load i32, i32* @tunable_deny_email_enable, align 4, !dbg !2215
  %148 = icmp ne i32 %147, 0, !dbg !2215
  br i1 %148, label %149, label %163, !dbg !2217

149:                                              ; preds = %146
  call void @llvm.dbg.declare(metadata i32* %16, metadata !2218, metadata !DIExpression()), !dbg !2220
  store i32 -1, i32* %16, align 4, !dbg !2220
  %150 = load i8*, i8** @tunable_banned_email_file, align 8, !dbg !2221
  %151 = icmp ne i8* %150, null, !dbg !2221
  br i1 %151, label %152, label %156, !dbg !2223

152:                                              ; preds = %149
  %153 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 27, !dbg !2224
  %154 = load i8*, i8** @tunable_banned_email_file, align 8, !dbg !2226
  %155 = call i32 @str_fileread(%struct.mystr* %153, i8* %154, i32 100000), !dbg !2227
  store i32 %155, i32* %16, align 4, !dbg !2228
  br label %156, !dbg !2229

156:                                              ; preds = %152, %149
  %157 = load i32, i32* %16, align 4, !dbg !2230
  %158 = call i32 @vsf_sysutil_retval_is_error(i32 %157), !dbg !2232
  %159 = icmp ne i32 %158, 0, !dbg !2232
  br i1 %159, label %160, label %162, !dbg !2233

160:                                              ; preds = %156
  %161 = load i8*, i8** @tunable_banned_email_file, align 8, !dbg !2234
  call void @die2(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i32 0, i32 0), i8* %161), !dbg !2236
  br label %162, !dbg !2237

162:                                              ; preds = %160, %156
  br label %163, !dbg !2238

163:                                              ; preds = %162, %146
  %164 = load i8*, i8** @tunable_banner_file, align 8, !dbg !2239
  %165 = icmp ne i8* %164, null, !dbg !2239
  br i1 %165, label %166, label %176, !dbg !2241

166:                                              ; preds = %163
  call void @llvm.dbg.declare(metadata i32* %17, metadata !2242, metadata !DIExpression()), !dbg !2244
  %167 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 30, !dbg !2245
  %168 = load i8*, i8** @tunable_banner_file, align 8, !dbg !2246
  %169 = call i32 @str_fileread(%struct.mystr* %167, i8* %168, i32 100000), !dbg !2247
  store i32 %169, i32* %17, align 4, !dbg !2244
  %170 = load i32, i32* %17, align 4, !dbg !2248
  %171 = call i32 @vsf_sysutil_retval_is_error(i32 %170), !dbg !2250
  %172 = icmp ne i32 %171, 0, !dbg !2250
  br i1 %172, label %173, label %175, !dbg !2251

173:                                              ; preds = %166
  %174 = load i8*, i8** @tunable_banner_file, align 8, !dbg !2252
  call void @die2(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i32 0, i32 0), i8* %174), !dbg !2254
  br label %175, !dbg !2255

175:                                              ; preds = %173, %166
  br label %176, !dbg !2256

176:                                              ; preds = %175, %163
  %177 = load i32, i32* @tunable_secure_email_list_enable, align 4, !dbg !2257
  %178 = icmp ne i32 %177, 0, !dbg !2257
  br i1 %178, label %179, label %193, !dbg !2259

179:                                              ; preds = %176
  call void @llvm.dbg.declare(metadata i32* %18, metadata !2260, metadata !DIExpression()), !dbg !2262
  store i32 -1, i32* %18, align 4, !dbg !2262
  %180 = load i8*, i8** @tunable_email_password_file, align 8, !dbg !2263
  %181 = icmp ne i8* %180, null, !dbg !2263
  br i1 %181, label %182, label %186, !dbg !2265

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 28, !dbg !2266
  %184 = load i8*, i8** @tunable_email_password_file, align 8, !dbg !2268
  %185 = call i32 @str_fileread(%struct.mystr* %183, i8* %184, i32 100000), !dbg !2269
  store i32 %185, i32* %18, align 4, !dbg !2270
  br label %186, !dbg !2271

186:                                              ; preds = %182, %179
  %187 = load i32, i32* %18, align 4, !dbg !2272
  %188 = call i32 @vsf_sysutil_retval_is_error(i32 %187), !dbg !2274
  %189 = icmp ne i32 %188, 0, !dbg !2274
  br i1 %189, label %190, label %192, !dbg !2275

190:                                              ; preds = %186
  %191 = load i8*, i8** @tunable_email_password_file, align 8, !dbg !2276
  call void @die2(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i32 0, i32 0), i8* %191), !dbg !2278
  br label %192, !dbg !2279

192:                                              ; preds = %190, %186
  br label %193, !dbg !2280

193:                                              ; preds = %192, %176
  %194 = load i32, i32* @tunable_run_as_launching_user, align 4, !dbg !2281
  %195 = icmp ne i32 %194, 0, !dbg !2281
  br i1 %195, label %196, label %201, !dbg !2283

196:                                              ; preds = %193
  store i32 1, i32* @tunable_one_process_model, align 4, !dbg !2284
  %197 = call i32 @vsf_sysutil_running_as_root(), !dbg !2286
  %198 = icmp ne i32 %197, 0, !dbg !2286
  br i1 %198, label %200, label %199, !dbg !2288

199:                                              ; preds = %196
  store i32 0, i32* @tunable_connect_from_port_20, align 4, !dbg !2289
  store i32 0, i32* @tunable_chown_uploads, align 4, !dbg !2291
  br label %200, !dbg !2292

200:                                              ; preds = %199, %196
  br label %201, !dbg !2293

201:                                              ; preds = %200, %193
  %202 = load i32, i32* @tunable_one_process_model, align 4, !dbg !2294
  %203 = icmp ne i32 %202, 0, !dbg !2294
  br i1 %203, label %204, label %205, !dbg !2296

204:                                              ; preds = %201
  call void @vsf_one_process_start(%struct.vsf_session* %6), !dbg !2297
  br label %206, !dbg !2299

205:                                              ; preds = %201
  call void @vsf_two_process_start(%struct.vsf_session* %6), !dbg !2300
  br label %206

206:                                              ; preds = %205, %204
  call void @bug(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0)), !dbg !2302
  ret i32 1, !dbg !2303
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @die_unless_privileged() #0 !dbg !2304 {
  %1 = call i32 @vsf_sysutil_running_as_root(), !dbg !2305
  %2 = icmp ne i32 %1, 0, !dbg !2305
  br i1 %2, label %4, label %3, !dbg !2307

3:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.10, i32 0, i32 0)), !dbg !2308
  br label %4, !dbg !2310

4:                                                ; preds = %3, %0
  ret void, !dbg !2311
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @do_sanity_checks() #0 !dbg !2312 {
  %1 = alloca %struct.vsf_sysutil_statbuf*, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %1, metadata !2313, metadata !DIExpression()), !dbg !2315
  store %struct.vsf_sysutil_statbuf* null, %struct.vsf_sysutil_statbuf** %1, align 8, !dbg !2315
  call void @vsf_sysutil_fstat(i32 0, %struct.vsf_sysutil_statbuf** %1), !dbg !2316
  %2 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %1, align 8, !dbg !2317
  %3 = call i32 @vsf_sysutil_statbuf_is_socket(%struct.vsf_sysutil_statbuf* %2), !dbg !2319
  %4 = icmp ne i32 %3, 0, !dbg !2319
  br i1 %4, label %6, label %5, !dbg !2320

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11, i32 0, i32 0)), !dbg !2321
  br label %6, !dbg !2323

6:                                                ; preds = %5, %0
  %7 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %1, align 8, !dbg !2324
  %8 = bitcast %struct.vsf_sysutil_statbuf* %7 to i8*, !dbg !2324
  call void @vsf_sysutil_free(i8* %8), !dbg !2325
  %9 = load i32, i32* @tunable_one_process_model, align 4, !dbg !2326
  %10 = icmp ne i32 %9, 0, !dbg !2326
  br i1 %10, label %11, label %20, !dbg !2328

11:                                               ; preds = %6
  %12 = load i32, i32* @tunable_local_enable, align 4, !dbg !2329
  %13 = icmp ne i32 %12, 0, !dbg !2329
  br i1 %13, label %14, label %15, !dbg !2332

14:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.12, i32 0, i32 0)), !dbg !2333
  br label %15, !dbg !2335

15:                                               ; preds = %14, %11
  %16 = call i32 @vsf_sysdep_has_capabilities_as_non_root(), !dbg !2336
  %17 = icmp ne i32 %16, 0, !dbg !2336
  br i1 %17, label %19, label %18, !dbg !2338

18:                                               ; preds = %15
  call void @die(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.13, i32 0, i32 0)), !dbg !2339
  br label %19, !dbg !2341

19:                                               ; preds = %18, %15
  br label %20, !dbg !2342

20:                                               ; preds = %19, %6
  %21 = load i32, i32* @tunable_local_enable, align 4, !dbg !2343
  %22 = icmp ne i32 %21, 0, !dbg !2343
  br i1 %22, label %27, label %23, !dbg !2345

23:                                               ; preds = %20
  %24 = load i32, i32* @tunable_anonymous_enable, align 4, !dbg !2346
  %25 = icmp ne i32 %24, 0, !dbg !2346
  br i1 %25, label %27, label %26, !dbg !2347

26:                                               ; preds = %23
  call void @die(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14, i32 0, i32 0)), !dbg !2348
  br label %27, !dbg !2350

27:                                               ; preds = %26, %23, %20
  %28 = load i32, i32* @tunable_ftp_enable, align 4, !dbg !2351
  %29 = icmp ne i32 %28, 0, !dbg !2351
  br i1 %29, label %34, label %30, !dbg !2353

30:                                               ; preds = %27
  %31 = load i32, i32* @tunable_http_enable, align 4, !dbg !2354
  %32 = icmp ne i32 %31, 0, !dbg !2354
  br i1 %32, label %34, label %33, !dbg !2355

33:                                               ; preds = %30
  call void @die(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i32 0, i32 0)), !dbg !2356
  br label %34, !dbg !2358

34:                                               ; preds = %33, %30, %27
  %35 = load i32, i32* @tunable_http_enable, align 4, !dbg !2359
  %36 = icmp ne i32 %35, 0, !dbg !2359
  br i1 %36, label %37, label %41, !dbg !2361

37:                                               ; preds = %34
  %38 = load i32, i32* @tunable_one_process_model, align 4, !dbg !2362
  %39 = icmp ne i32 %38, 0, !dbg !2362
  br i1 %39, label %41, label %40, !dbg !2363

40:                                               ; preds = %37
  call void @die(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i32 0, i32 0)), !dbg !2364
  br label %41, !dbg !2366

41:                                               ; preds = %40, %37, %34
  ret void, !dbg !2367
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @session_init(%struct.vsf_session*) #0 !dbg !2368 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca %struct.vsf_sysutil_user*, align 8
  %4 = alloca %struct.vsf_sysutil_user*, align 8
  %5 = alloca %struct.vsf_sysutil_user*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !2372, metadata !DIExpression()), !dbg !2373
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2374
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 1, !dbg !2375
  call void @vsf_sysutil_getpeername(i32 0, %struct.vsf_sysutil_sockaddr** %7), !dbg !2376
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2377
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 0, !dbg !2378
  call void @vsf_sysutil_getsockname(i32 0, %struct.vsf_sysutil_sockaddr** %9), !dbg !2379
  %10 = load i32, i32* @tunable_anonymous_enable, align 4, !dbg !2380
  %11 = icmp ne i32 %10, 0, !dbg !2380
  br i1 %11, label %12, label %28, !dbg !2382

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %3, metadata !2383, metadata !DIExpression()), !dbg !2387
  store %struct.vsf_sysutil_user* null, %struct.vsf_sysutil_user** %3, align 8, !dbg !2387
  %13 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !2388
  %14 = icmp ne i8* %13, null, !dbg !2388
  br i1 %14, label %15, label %18, !dbg !2390

15:                                               ; preds = %12
  %16 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !2391
  %17 = call %struct.vsf_sysutil_user* @vsf_sysutil_getpwnam(i8* %16), !dbg !2393
  store %struct.vsf_sysutil_user* %17, %struct.vsf_sysutil_user** %3, align 8, !dbg !2394
  br label %18, !dbg !2395

18:                                               ; preds = %15, %12
  %19 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %3, align 8, !dbg !2396
  %20 = icmp eq %struct.vsf_sysutil_user* %19, null, !dbg !2398
  br i1 %20, label %21, label %23, !dbg !2399

21:                                               ; preds = %18
  %22 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !2400
  call void @die2(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17, i32 0, i32 0), i8* %22), !dbg !2402
  br label %23, !dbg !2403

23:                                               ; preds = %21, %18
  %24 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %3, align 8, !dbg !2404
  %25 = call i32 @vsf_sysutil_user_getuid(%struct.vsf_sysutil_user* %24), !dbg !2405
  %26 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2406
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 24, !dbg !2407
  store i32 %25, i32* %27, align 8, !dbg !2408
  br label %28, !dbg !2409

28:                                               ; preds = %23, %1
  %29 = load i32, i32* @tunable_guest_enable, align 4, !dbg !2410
  %30 = icmp ne i32 %29, 0, !dbg !2410
  br i1 %30, label %31, label %47, !dbg !2412

31:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %4, metadata !2413, metadata !DIExpression()), !dbg !2415
  store %struct.vsf_sysutil_user* null, %struct.vsf_sysutil_user** %4, align 8, !dbg !2415
  %32 = load i8*, i8** @tunable_guest_username, align 8, !dbg !2416
  %33 = icmp ne i8* %32, null, !dbg !2416
  br i1 %33, label %34, label %37, !dbg !2418

34:                                               ; preds = %31
  %35 = load i8*, i8** @tunable_guest_username, align 8, !dbg !2419
  %36 = call %struct.vsf_sysutil_user* @vsf_sysutil_getpwnam(i8* %35), !dbg !2421
  store %struct.vsf_sysutil_user* %36, %struct.vsf_sysutil_user** %4, align 8, !dbg !2422
  br label %37, !dbg !2423

37:                                               ; preds = %34, %31
  %38 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %4, align 8, !dbg !2424
  %39 = icmp eq %struct.vsf_sysutil_user* %38, null, !dbg !2426
  br i1 %39, label %40, label %42, !dbg !2427

40:                                               ; preds = %37
  %41 = load i8*, i8** @tunable_guest_username, align 8, !dbg !2428
  call void @die2(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.18, i32 0, i32 0), i8* %41), !dbg !2430
  br label %42, !dbg !2431

42:                                               ; preds = %40, %37
  %43 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %4, align 8, !dbg !2432
  %44 = call i32 @vsf_sysutil_user_getuid(%struct.vsf_sysutil_user* %43), !dbg !2433
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2434
  %46 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %45, i32 0, i32 25, !dbg !2435
  store i32 %44, i32* %46, align 4, !dbg !2436
  br label %47, !dbg !2437

47:                                               ; preds = %42, %28
  %48 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !2438
  %49 = icmp ne i32 %48, 0, !dbg !2438
  br i1 %49, label %50, label %66, !dbg !2440

50:                                               ; preds = %47
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %5, metadata !2441, metadata !DIExpression()), !dbg !2443
  store %struct.vsf_sysutil_user* null, %struct.vsf_sysutil_user** %5, align 8, !dbg !2443
  %51 = load i8*, i8** @tunable_chown_username, align 8, !dbg !2444
  %52 = icmp ne i8* %51, null, !dbg !2444
  br i1 %52, label %53, label %56, !dbg !2446

53:                                               ; preds = %50
  %54 = load i8*, i8** @tunable_chown_username, align 8, !dbg !2447
  %55 = call %struct.vsf_sysutil_user* @vsf_sysutil_getpwnam(i8* %54), !dbg !2449
  store %struct.vsf_sysutil_user* %55, %struct.vsf_sysutil_user** %5, align 8, !dbg !2450
  br label %56, !dbg !2451

56:                                               ; preds = %53, %50
  %57 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %5, align 8, !dbg !2452
  %58 = icmp eq %struct.vsf_sysutil_user* %57, null, !dbg !2454
  br i1 %58, label %59, label %61, !dbg !2455

59:                                               ; preds = %56
  %60 = load i8*, i8** @tunable_chown_username, align 8, !dbg !2456
  call void @die2(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i32 0, i32 0), i8* %60), !dbg !2458
  br label %61, !dbg !2459

61:                                               ; preds = %59, %56
  %62 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %5, align 8, !dbg !2460
  %63 = call i32 @vsf_sysutil_user_getuid(%struct.vsf_sysutil_user* %62), !dbg !2461
  %64 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2462
  %65 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %64, i32 0, i32 26, !dbg !2463
  store i32 %63, i32* %65, align 8, !dbg !2464
  br label %66, !dbg !2465

66:                                               ; preds = %61, %47
  ret void, !dbg !2466
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @env_init() #0 !dbg !2467 {
  call void @vsf_sysutil_make_session_leader(), !dbg !2468
  call void @vsf_sysutil_set_umask(i32 63), !dbg !2469
  call void @vsf_sysutil_tzset(), !dbg !2470
  call void @vsf_sysutil_install_null_sighandler(i32 4), !dbg !2471
  ret void, !dbg !2472
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @limits_init() #0 !dbg !2473 {
  %1 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %1, metadata !2474, metadata !DIExpression()), !dbg !2475
  store i64 209715200, i64* %1, align 8, !dbg !2475
  %2 = load i32, i32* @tunable_text_userdb_names, align 4, !dbg !2476
  %3 = icmp ne i32 %2, 0, !dbg !2476
  br i1 %3, label %4, label %7, !dbg !2478

4:                                                ; preds = %0
  %5 = load i64, i64* %1, align 8, !dbg !2479
  %6 = mul i64 %5, 3, !dbg !2479
  store i64 %6, i64* %1, align 8, !dbg !2479
  br label %7, !dbg !2481

7:                                                ; preds = %4, %0
  %8 = load i64, i64* %1, align 8, !dbg !2482
  call void @vsf_sysutil_set_address_space_limit(i64 %8), !dbg !2483
  ret void, !dbg !2484
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @die(i8*) #0 !dbg !2485 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2488, metadata !DIExpression()), !dbg !2489
  %3 = load i8*, i8** %2, align 8, !dbg !2490
  call void @bug(i8* %3), !dbg !2491
  call void @vsf_sysutil_exit(i32 2), !dbg !2492
  ret void, !dbg !2493
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @bug(i8*) #0 !dbg !2494 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2495, metadata !DIExpression()), !dbg !2496
  call void @vsf_sysutil_activate_noblock(i32 0), !dbg !2497
  %3 = call i32 @vsf_sysutil_write_loop(i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.5, i32 0, i32 0), i32 10), !dbg !2498
  %4 = load i8*, i8** %2, align 8, !dbg !2499
  %5 = load i8*, i8** %2, align 8, !dbg !2500
  %6 = call i32 @vsf_sysutil_strlen(i8* %5), !dbg !2501
  %7 = call i32 @vsf_sysutil_write_loop(i32 0, i8* %4, i32 %6), !dbg !2502
  %8 = call i32 @vsf_sysutil_write_loop(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.6, i32 0, i32 0), i32 2), !dbg !2503
  call void @vsf_sysutil_exit(i32 2), !dbg !2504
  ret void, !dbg !2505
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @die2(i8*, i8*) #0 !dbg !2506 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.mystr, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2509, metadata !DIExpression()), !dbg !2510
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2511, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !2513, metadata !DIExpression()), !dbg !2519
  %6 = bitcast %struct.mystr* %5 to i8*, !dbg !2519
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false), !dbg !2519
  %7 = load i8*, i8** %3, align 8, !dbg !2520
  call void @str_alloc_text(%struct.mystr* %5, i8* %7), !dbg !2521
  %8 = load i8*, i8** %4, align 8, !dbg !2522
  %9 = icmp ne i8* %8, null, !dbg !2522
  br i1 %9, label %10, label %12, !dbg !2524

10:                                               ; preds = %2
  %11 = load i8*, i8** %4, align 8, !dbg !2525
  call void @str_append_text(%struct.mystr* %5, i8* %11), !dbg !2527
  br label %13, !dbg !2528

12:                                               ; preds = %2
  call void @str_append_text(%struct.mystr* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0)), !dbg !2529
  br label %13

13:                                               ; preds = %12, %10
  %14 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !2531
  call void @die(i8* %14), !dbg !2532
  ret void, !dbg !2533
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_exit(i8*) #0 !dbg !2534 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2535, metadata !DIExpression()), !dbg !2536
  %3 = load i8*, i8** %2, align 8, !dbg !2537
  %4 = load i8*, i8** %2, align 8, !dbg !2538
  %5 = call i32 @vsf_sysutil_strlen(i8* %4), !dbg !2539
  %6 = call i32 @vsf_sysutil_write_loop(i32 0, i8* %3, i32 %5), !dbg !2540
  call void @vsf_sysutil_exit(i32 0), !dbg !2541
  ret void, !dbg !2542
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @init_connection(%struct.vsf_session*) #0 !dbg !2543 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !2611, metadata !DIExpression()), !dbg !2612
  %3 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !2613
  %4 = icmp ne i32 %3, 0, !dbg !2613
  br i1 %4, label %5, label %6, !dbg !2615

5:                                                ; preds = %1
  call void @vsf_sysutil_setproctitle(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0)), !dbg !2616
  br label %6, !dbg !2618

6:                                                ; preds = %5, %1
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2619
  call void @vsf_cmdio_set_alarm(%struct.vsf_session* %7), !dbg !2620
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2621
  call void @check_limits(%struct.vsf_session* %8), !dbg !2622
  %9 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2623
  %10 = icmp ne i32 %9, 0, !dbg !2623
  br i1 %10, label %11, label %16, !dbg !2625

11:                                               ; preds = %6
  %12 = load i32, i32* @tunable_implicit_ssl, align 4, !dbg !2626
  %13 = icmp ne i32 %12, 0, !dbg !2626
  br i1 %13, label %14, label %16, !dbg !2627

14:                                               ; preds = %11
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2628
  call void @ssl_control_handshake(%struct.vsf_session* %15), !dbg !2630
  br label %16, !dbg !2631

16:                                               ; preds = %14, %11, %6
  %17 = load i32, i32* @tunable_ftp_enable, align 4, !dbg !2632
  %18 = icmp ne i32 %17, 0, !dbg !2632
  br i1 %18, label %19, label %21, !dbg !2634

19:                                               ; preds = %16
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2635
  call void @emit_greeting(%struct.vsf_session* %20), !dbg !2637
  br label %21, !dbg !2638

21:                                               ; preds = %19, %16
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2639
  call void @parse_username_password(%struct.vsf_session* %22), !dbg !2640
  ret void, !dbg !2641
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @check_limits(%struct.vsf_session*) #0 !dbg !2642 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca %struct.mystr, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !2643, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.declare(metadata %struct.mystr* %3, metadata !2645, metadata !DIExpression()), !dbg !2646
  %4 = bitcast %struct.mystr* %3 to i8*, !dbg !2646
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false), !dbg !2646
  %5 = load i32, i32* @tunable_max_clients, align 4, !dbg !2647
  %6 = icmp ugt i32 %5, 0, !dbg !2649
  br i1 %6, label %7, label %16, !dbg !2650

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2651
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 44, !dbg !2652
  %10 = load i32, i32* %9, align 8, !dbg !2652
  %11 = load i32, i32* @tunable_max_clients, align 4, !dbg !2653
  %12 = icmp ugt i32 %10, %11, !dbg !2654
  br i1 %12, label %13, label %16, !dbg !2655

13:                                               ; preds = %7
  call void @str_alloc_text(%struct.mystr* %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.39, i32 0, i32 0)), !dbg !2656
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2658
  call void @vsf_log_line(%struct.vsf_session* %14, i32 8, %struct.mystr* %3), !dbg !2659
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2660
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %15, i32 421, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2.40, i32 0, i32 0), i32 1), !dbg !2661
  br label %16, !dbg !2662

16:                                               ; preds = %13, %7, %1
  %17 = load i32, i32* @tunable_max_per_ip, align 4, !dbg !2663
  %18 = icmp ugt i32 %17, 0, !dbg !2665
  br i1 %18, label %19, label %28, !dbg !2666

19:                                               ; preds = %16
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2667
  %21 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %20, i32 0, i32 45, !dbg !2668
  %22 = load i32, i32* %21, align 4, !dbg !2668
  %23 = load i32, i32* @tunable_max_per_ip, align 4, !dbg !2669
  %24 = icmp ugt i32 %22, %23, !dbg !2670
  br i1 %24, label %25, label %28, !dbg !2671

25:                                               ; preds = %19
  call void @str_alloc_text(%struct.mystr* %3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.41, i32 0, i32 0)), !dbg !2672
  %26 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2674
  call void @vsf_log_line(%struct.vsf_session* %26, i32 8, %struct.mystr* %3), !dbg !2675
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2676
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %27, i32 421, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4.42, i32 0, i32 0), i32 1), !dbg !2677
  br label %28, !dbg !2678

28:                                               ; preds = %25, %19, %16
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2679
  %30 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %29, i32 0, i32 31, !dbg !2681
  %31 = load i32, i32* %30, align 8, !dbg !2681
  %32 = icmp ne i32 %31, 0, !dbg !2679
  br i1 %32, label %36, label %33, !dbg !2682

33:                                               ; preds = %28
  call void @str_alloc_text(%struct.mystr* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5.43, i32 0, i32 0)), !dbg !2683
  %34 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2685
  call void @vsf_log_line(%struct.vsf_session* %34, i32 8, %struct.mystr* %3), !dbg !2686
  %35 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2687
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %35, i32 421, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6.44, i32 0, i32 0), i32 1), !dbg !2688
  br label %36, !dbg !2689

36:                                               ; preds = %33, %28
  %37 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2690
  call void @vsf_log_line(%struct.vsf_session* %37, i32 8, %struct.mystr* %3), !dbg !2691
  ret void, !dbg !2692
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @emit_greeting(%struct.vsf_session*) #0 !dbg !2693 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !2694, metadata !DIExpression()), !dbg !2695
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2696
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 30, !dbg !2698
  %5 = call i32 @str_isempty(%struct.mystr* %4), !dbg !2699
  %6 = icmp ne i32 %5, 0, !dbg !2699
  br i1 %6, label %14, label %7, !dbg !2700

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2701
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2703
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 30, !dbg !2704
  call void @vsf_banner_write(%struct.vsf_session* %8, %struct.mystr* %10, i32 220), !dbg !2705
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2706
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 30, !dbg !2707
  call void @str_free(%struct.mystr* %12), !dbg !2708
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2709
  call void @vsf_cmdio_write(%struct.vsf_session* %13, i32 220, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.37, i32 0, i32 0)), !dbg !2710
  br label %23, !dbg !2711

14:                                               ; preds = %1
  %15 = load i8*, i8** @tunable_ftpd_banner, align 8, !dbg !2712
  %16 = icmp eq i8* %15, null, !dbg !2714
  br i1 %16, label %17, label %19, !dbg !2715

17:                                               ; preds = %14
  %18 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2716
  call void @vsf_cmdio_write(%struct.vsf_session* %18, i32 220, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8.38, i32 0, i32 0)), !dbg !2718
  br label %22, !dbg !2719

19:                                               ; preds = %14
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2720
  %21 = load i8*, i8** @tunable_ftpd_banner, align 8, !dbg !2722
  call void @vsf_cmdio_write(%struct.vsf_session* %20, i32 220, i8* %21), !dbg !2723
  br label %22

22:                                               ; preds = %19, %17
  br label %23

23:                                               ; preds = %22, %7
  ret void, !dbg !2724
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @parse_username_password(%struct.vsf_session*) #0 !dbg !2725 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !2726, metadata !DIExpression()), !dbg !2727
  br label %3, !dbg !2728

3:                                                ; preds = %1, %117
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2729
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2731
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 40, !dbg !2732
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2733
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 41, !dbg !2734
  call void @vsf_cmdio_get_cmd_and_arg(%struct.vsf_session* %4, %struct.mystr* %6, %struct.mystr* %8, i32 1), !dbg !2735
  %9 = load i32, i32* @tunable_ftp_enable, align 4, !dbg !2736
  %10 = icmp ne i32 %9, 0, !dbg !2736
  br i1 %10, label %11, label %103, !dbg !2738

11:                                               ; preds = %3
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2739
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 40, !dbg !2742
  %14 = call i32 @str_equal_text(%struct.mystr* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.24, i32 0, i32 0)), !dbg !2743
  %15 = icmp ne i32 %14, 0, !dbg !2743
  br i1 %15, label %16, label %18, !dbg !2744

16:                                               ; preds = %11
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2745
  call void @handle_user_command(%struct.vsf_session* %17), !dbg !2747
  br label %102, !dbg !2748

18:                                               ; preds = %11
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2749
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 40, !dbg !2751
  %21 = call i32 @str_equal_text(%struct.mystr* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.25, i32 0, i32 0)), !dbg !2752
  %22 = icmp ne i32 %21, 0, !dbg !2752
  br i1 %22, label %23, label %25, !dbg !2753

23:                                               ; preds = %18
  %24 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2754
  call void @handle_pass_command(%struct.vsf_session* %24), !dbg !2756
  br label %101, !dbg !2757

25:                                               ; preds = %18
  %26 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2758
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 40, !dbg !2760
  %28 = call i32 @str_equal_text(%struct.mystr* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.26, i32 0, i32 0)), !dbg !2761
  %29 = icmp ne i32 %28, 0, !dbg !2761
  br i1 %29, label %30, label %32, !dbg !2762

30:                                               ; preds = %25
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2763
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %31, i32 221, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12.27, i32 0, i32 0), i32 0), !dbg !2765
  br label %100, !dbg !2766

32:                                               ; preds = %25
  %33 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2767
  %34 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %33, i32 0, i32 40, !dbg !2769
  %35 = call i32 @str_equal_text(%struct.mystr* %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.28, i32 0, i32 0)), !dbg !2770
  %36 = icmp ne i32 %35, 0, !dbg !2770
  br i1 %36, label %37, label %39, !dbg !2771

37:                                               ; preds = %32
  %38 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2772
  call void @handle_feat(%struct.vsf_session* %38), !dbg !2774
  br label %99, !dbg !2775

39:                                               ; preds = %32
  %40 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2776
  %41 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %40, i32 0, i32 40, !dbg !2778
  %42 = call i32 @str_equal_text(%struct.mystr* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.29, i32 0, i32 0)), !dbg !2779
  %43 = icmp ne i32 %42, 0, !dbg !2779
  br i1 %43, label %44, label %46, !dbg !2780

44:                                               ; preds = %39
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2781
  call void @handle_opts(%struct.vsf_session* %45), !dbg !2783
  br label %98, !dbg !2784

46:                                               ; preds = %39
  %47 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2785
  %48 = icmp ne i32 %47, 0, !dbg !2785
  br i1 %48, label %49, label %61, !dbg !2787

49:                                               ; preds = %46
  %50 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2788
  %51 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %50, i32 0, i32 40, !dbg !2789
  %52 = call i32 @str_equal_text(%struct.mystr* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.30, i32 0, i32 0)), !dbg !2790
  %53 = icmp ne i32 %52, 0, !dbg !2790
  br i1 %53, label %54, label %61, !dbg !2791

54:                                               ; preds = %49
  %55 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2792
  %56 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %55, i32 0, i32 47, !dbg !2793
  %57 = load i32, i32* %56, align 8, !dbg !2793
  %58 = icmp ne i32 %57, 0, !dbg !2792
  br i1 %58, label %61, label %59, !dbg !2794

59:                                               ; preds = %54
  %60 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2795
  call void @handle_auth(%struct.vsf_session* %60), !dbg !2797
  br label %97, !dbg !2798

61:                                               ; preds = %54, %49, %46
  %62 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2799
  %63 = icmp ne i32 %62, 0, !dbg !2799
  br i1 %63, label %64, label %71, !dbg !2801

64:                                               ; preds = %61
  %65 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2802
  %66 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %65, i32 0, i32 40, !dbg !2803
  %67 = call i32 @str_equal_text(%struct.mystr* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.31, i32 0, i32 0)), !dbg !2804
  %68 = icmp ne i32 %67, 0, !dbg !2804
  br i1 %68, label %69, label %71, !dbg !2805

69:                                               ; preds = %64
  %70 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2806
  call void @handle_pbsz(%struct.vsf_session* %70), !dbg !2808
  br label %96, !dbg !2809

71:                                               ; preds = %64, %61
  %72 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2810
  %73 = icmp ne i32 %72, 0, !dbg !2810
  br i1 %73, label %74, label %81, !dbg !2812

74:                                               ; preds = %71
  %75 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2813
  %76 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %75, i32 0, i32 40, !dbg !2814
  %77 = call i32 @str_equal_text(%struct.mystr* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.32, i32 0, i32 0)), !dbg !2815
  %78 = icmp ne i32 %77, 0, !dbg !2815
  br i1 %78, label %79, label %81, !dbg !2816

79:                                               ; preds = %74
  %80 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2817
  call void @handle_prot(%struct.vsf_session* %80), !dbg !2819
  br label %95, !dbg !2820

81:                                               ; preds = %74, %71
  %82 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2821
  %83 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %82, i32 0, i32 40, !dbg !2823
  %84 = call i32 @str_isempty(%struct.mystr* %83), !dbg !2824
  %85 = icmp ne i32 %84, 0, !dbg !2824
  br i1 %85, label %86, label %92, !dbg !2825

86:                                               ; preds = %81
  %87 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2826
  %88 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %87, i32 0, i32 41, !dbg !2827
  %89 = call i32 @str_isempty(%struct.mystr* %88), !dbg !2828
  %90 = icmp ne i32 %89, 0, !dbg !2828
  br i1 %90, label %91, label %92, !dbg !2829

91:                                               ; preds = %86
  br label %94, !dbg !2830

92:                                               ; preds = %86, %81
  %93 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2832
  call void @vsf_cmdio_write(%struct.vsf_session* %93, i32 530, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18.33, i32 0, i32 0)), !dbg !2834
  br label %94

94:                                               ; preds = %92, %91
  br label %95

95:                                               ; preds = %94, %79
  br label %96

96:                                               ; preds = %95, %69
  br label %97

97:                                               ; preds = %96, %59
  br label %98

98:                                               ; preds = %97, %44
  br label %99

99:                                               ; preds = %98, %37
  br label %100

100:                                              ; preds = %99, %30
  br label %101

101:                                              ; preds = %100, %23
  br label %102

102:                                              ; preds = %101, %16
  br label %117, !dbg !2835

103:                                              ; preds = %3
  %104 = load i32, i32* @tunable_http_enable, align 4, !dbg !2836
  %105 = icmp ne i32 %104, 0, !dbg !2836
  br i1 %105, label %106, label %116, !dbg !2838

106:                                              ; preds = %103
  %107 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2839
  %108 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %107, i32 0, i32 40, !dbg !2842
  %109 = call i32 @str_equal_text(%struct.mystr* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.34, i32 0, i32 0)), !dbg !2843
  %110 = icmp ne i32 %109, 0, !dbg !2843
  br i1 %110, label %111, label %113, !dbg !2844

111:                                              ; preds = %106
  %112 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2845
  call void @handle_get(%struct.vsf_session* %112), !dbg !2847
  br label %115, !dbg !2848

113:                                              ; preds = %106
  %114 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2849
  call void @vsf_cmdio_write(%struct.vsf_session* %114, i32 530, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20.35, i32 0, i32 0)), !dbg !2851
  br label %115

115:                                              ; preds = %113, %111
  call void @vsf_sysutil_exit(i32 0), !dbg !2852
  br label %116, !dbg !2853

116:                                              ; preds = %115, %103
  br label %117

117:                                              ; preds = %116, %102
  br label %3, !dbg !2728, !llvm.loop !2854

118:                                              ; No predecessors!
  ret void, !dbg !2856
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_user_command(%struct.vsf_session*) #0 !dbg !2857 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !2858, metadata !DIExpression()), !dbg !2859
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2860, metadata !DIExpression()), !dbg !2861
  store i32 1, i32* %3, align 4, !dbg !2861
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2862
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 14, !dbg !2863
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2864
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 41, !dbg !2865
  call void @str_copy(%struct.mystr* %6, %struct.mystr* %8), !dbg !2866
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2867
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 41, !dbg !2868
  call void @str_upper(%struct.mystr* %10), !dbg !2869
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2870
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 41, !dbg !2872
  %13 = call i32 @str_equal_text(%struct.mystr* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0)), !dbg !2873
  %14 = icmp ne i32 %13, 0, !dbg !2873
  br i1 %14, label %21, label %15, !dbg !2874

15:                                               ; preds = %1
  %16 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2875
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 41, !dbg !2876
  %18 = call i32 @str_equal_text(%struct.mystr* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0)), !dbg !2877
  %19 = icmp ne i32 %18, 0, !dbg !2877
  br i1 %19, label %21, label %20, !dbg !2878

20:                                               ; preds = %15
  store i32 0, i32* %3, align 4, !dbg !2879
  br label %21, !dbg !2881

21:                                               ; preds = %20, %15, %1
  %22 = load i32, i32* @tunable_local_enable, align 4, !dbg !2882
  %23 = icmp ne i32 %22, 0, !dbg !2882
  br i1 %23, label %31, label %24, !dbg !2884

24:                                               ; preds = %21
  %25 = load i32, i32* %3, align 4, !dbg !2885
  %26 = icmp ne i32 %25, 0, !dbg !2885
  br i1 %26, label %31, label %27, !dbg !2886

27:                                               ; preds = %24
  %28 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2887
  call void @vsf_cmdio_write(%struct.vsf_session* %28, i32 530, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23.36, i32 0, i32 0)), !dbg !2889
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2890
  %30 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %29, i32 0, i32 14, !dbg !2891
  call void @str_empty(%struct.mystr* %30), !dbg !2892
  br label %119, !dbg !2893

31:                                               ; preds = %24, %21
  %32 = load i32, i32* %3, align 4, !dbg !2894
  %33 = icmp ne i32 %32, 0, !dbg !2894
  br i1 %33, label %34, label %49, !dbg !2896

34:                                               ; preds = %31
  %35 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2897
  %36 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %35, i32 0, i32 47, !dbg !2898
  %37 = load i32, i32* %36, align 8, !dbg !2898
  %38 = icmp ne i32 %37, 0, !dbg !2897
  br i1 %38, label %39, label %49, !dbg !2899

39:                                               ; preds = %34
  %40 = load i32, i32* @tunable_allow_anon_ssl, align 4, !dbg !2900
  %41 = icmp ne i32 %40, 0, !dbg !2900
  br i1 %41, label %49, label %42, !dbg !2901

42:                                               ; preds = %39
  %43 = load i32, i32* @tunable_force_anon_logins_ssl, align 4, !dbg !2902
  %44 = icmp ne i32 %43, 0, !dbg !2902
  br i1 %44, label %49, label %45, !dbg !2903

45:                                               ; preds = %42
  %46 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2904
  call void @vsf_cmdio_write(%struct.vsf_session* %46, i32 530, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i32 0, i32 0)), !dbg !2906
  %47 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2907
  %48 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %47, i32 0, i32 14, !dbg !2908
  call void @str_empty(%struct.mystr* %48), !dbg !2909
  br label %119, !dbg !2910

49:                                               ; preds = %42, %39, %34, %31
  %50 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2911
  %51 = icmp ne i32 %50, 0, !dbg !2911
  br i1 %51, label %52, label %65, !dbg !2913

52:                                               ; preds = %49
  %53 = load i32, i32* %3, align 4, !dbg !2914
  %54 = icmp ne i32 %53, 0, !dbg !2914
  br i1 %54, label %65, label %55, !dbg !2915

55:                                               ; preds = %52
  %56 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2916
  %57 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %56, i32 0, i32 47, !dbg !2917
  %58 = load i32, i32* %57, align 8, !dbg !2917
  %59 = icmp ne i32 %58, 0, !dbg !2916
  br i1 %59, label %65, label %60, !dbg !2918

60:                                               ; preds = %55
  %61 = load i32, i32* @tunable_force_local_logins_ssl, align 4, !dbg !2919
  %62 = icmp ne i32 %61, 0, !dbg !2919
  br i1 %62, label %63, label %65, !dbg !2920

63:                                               ; preds = %60
  %64 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2921
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %64, i32 530, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i32 0, i32 0), i32 1), !dbg !2923
  br label %65, !dbg !2924

65:                                               ; preds = %63, %60, %55, %52, %49
  %66 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !2925
  %67 = icmp ne i32 %66, 0, !dbg !2925
  br i1 %67, label %68, label %81, !dbg !2927

68:                                               ; preds = %65
  %69 = load i32, i32* %3, align 4, !dbg !2928
  %70 = icmp ne i32 %69, 0, !dbg !2928
  br i1 %70, label %71, label %81, !dbg !2929

71:                                               ; preds = %68
  %72 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2930
  %73 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %72, i32 0, i32 47, !dbg !2931
  %74 = load i32, i32* %73, align 8, !dbg !2931
  %75 = icmp ne i32 %74, 0, !dbg !2930
  br i1 %75, label %81, label %76, !dbg !2932

76:                                               ; preds = %71
  %77 = load i32, i32* @tunable_force_anon_logins_ssl, align 4, !dbg !2933
  %78 = icmp ne i32 %77, 0, !dbg !2933
  br i1 %78, label %79, label %81, !dbg !2934

79:                                               ; preds = %76
  %80 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2935
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %80, i32 530, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i32 0, i32 0), i32 1), !dbg !2937
  br label %81, !dbg !2938

81:                                               ; preds = %79, %76, %71, %68, %65
  %82 = load i32, i32* @tunable_userlist_enable, align 4, !dbg !2939
  %83 = icmp ne i32 %82, 0, !dbg !2939
  br i1 %83, label %84, label %107, !dbg !2941

84:                                               ; preds = %81
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2942, metadata !DIExpression()), !dbg !2944
  %85 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2945
  %86 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %85, i32 0, i32 29, !dbg !2946
  %87 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2947
  %88 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %87, i32 0, i32 14, !dbg !2948
  %89 = call i32 @str_contains_line(%struct.mystr* %86, %struct.mystr* %88), !dbg !2949
  store i32 %89, i32* %4, align 4, !dbg !2944
  %90 = load i32, i32* %4, align 4, !dbg !2950
  %91 = icmp ne i32 %90, 0, !dbg !2950
  br i1 %91, label %92, label %95, !dbg !2952

92:                                               ; preds = %84
  %93 = load i32, i32* @tunable_userlist_deny, align 4, !dbg !2953
  %94 = icmp ne i32 %93, 0, !dbg !2953
  br i1 %94, label %101, label %95, !dbg !2954

95:                                               ; preds = %92, %84
  %96 = load i32, i32* %4, align 4, !dbg !2955
  %97 = icmp ne i32 %96, 0, !dbg !2955
  br i1 %97, label %106, label %98, !dbg !2956

98:                                               ; preds = %95
  %99 = load i32, i32* @tunable_userlist_deny, align 4, !dbg !2957
  %100 = icmp ne i32 %99, 0, !dbg !2957
  br i1 %100, label %106, label %101, !dbg !2958

101:                                              ; preds = %98, %92
  call void @check_login_delay(), !dbg !2959
  %102 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2961
  call void @vsf_cmdio_write(%struct.vsf_session* %102, i32 530, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i32 0, i32 0)), !dbg !2962
  %103 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2963
  call void @check_login_fails(%struct.vsf_session* %103), !dbg !2964
  %104 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2965
  %105 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %104, i32 0, i32 14, !dbg !2966
  call void @str_empty(%struct.mystr* %105), !dbg !2967
  br label %119, !dbg !2968

106:                                              ; preds = %98, %95
  br label %107, !dbg !2969

107:                                              ; preds = %106, %81
  %108 = load i32, i32* %3, align 4, !dbg !2970
  %109 = icmp ne i32 %108, 0, !dbg !2970
  br i1 %109, label %110, label %117, !dbg !2972

110:                                              ; preds = %107
  %111 = load i32, i32* @tunable_no_anon_password, align 4, !dbg !2973
  %112 = icmp ne i32 %111, 0, !dbg !2973
  br i1 %112, label %113, label %117, !dbg !2974

113:                                              ; preds = %110
  %114 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2975
  %115 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %114, i32 0, i32 41, !dbg !2977
  call void @str_alloc_text(%struct.mystr* %115, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i32 0, i32 0)), !dbg !2978
  %116 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2979
  call void @handle_pass_command(%struct.vsf_session* %116), !dbg !2980
  br label %119, !dbg !2981

117:                                              ; preds = %110, %107
  %118 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2982
  call void @vsf_cmdio_write(%struct.vsf_session* %118, i32 331, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i32 0, i32 0)), !dbg !2984
  br label %119

119:                                              ; preds = %27, %45, %101, %117, %113
  ret void, !dbg !2985
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_pass_command(%struct.vsf_session*) #0 !dbg !2986 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !2987, metadata !DIExpression()), !dbg !2988
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2989
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 14, !dbg !2991
  %5 = call i32 @str_isempty(%struct.mystr* %4), !dbg !2992
  %6 = icmp ne i32 %5, 0, !dbg !2992
  br i1 %6, label %7, label %9, !dbg !2993

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !2994
  call void @vsf_cmdio_write(%struct.vsf_session* %8, i32 503, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i32 0, i32 0)), !dbg !2996
  br label %25, !dbg !2997

9:                                                ; preds = %1
  %10 = load i32, i32* @tunable_one_process_model, align 4, !dbg !2998
  %11 = icmp ne i32 %10, 0, !dbg !2998
  br i1 %11, label %12, label %16, !dbg !3000

12:                                               ; preds = %9
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3001
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3003
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 41, !dbg !3004
  call void @vsf_one_process_login(%struct.vsf_session* %13, %struct.mystr* %15), !dbg !3005
  br label %20, !dbg !3006

16:                                               ; preds = %9
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3007
  %18 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3009
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 41, !dbg !3010
  call void @vsf_two_process_login(%struct.vsf_session* %17, %struct.mystr* %19), !dbg !3011
  br label %20

20:                                               ; preds = %16, %12
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3012
  call void @vsf_cmdio_write(%struct.vsf_session* %21, i32 530, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0)), !dbg !3013
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3014
  call void @check_login_fails(%struct.vsf_session* %22), !dbg !3015
  %23 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3016
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 14, !dbg !3017
  call void @str_empty(%struct.mystr* %24), !dbg !3018
  br label %25, !dbg !3019

25:                                               ; preds = %20, %7
  ret void, !dbg !3019
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_get(%struct.vsf_session*) #0 !dbg !3020 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !3021, metadata !DIExpression()), !dbg !3022
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3023
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 21, !dbg !3024
  store i32 1, i32* %4, align 8, !dbg !3025
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3026
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 22, !dbg !3027
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3028
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 41, !dbg !3029
  call void @str_copy(%struct.mystr* %6, %struct.mystr* %8), !dbg !3030
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3031
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 14, !dbg !3032
  call void @str_alloc_text(%struct.mystr* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0)), !dbg !3033
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3034
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 41, !dbg !3035
  call void @str_alloc_text(%struct.mystr* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0)), !dbg !3036
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3037
  call void @handle_pass_command(%struct.vsf_session* %13), !dbg !3038
  ret void, !dbg !3039
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @check_login_fails(%struct.vsf_session*) #0 !dbg !3040 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !3041, metadata !DIExpression()), !dbg !3042
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3043
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 56, !dbg !3045
  %5 = load i32, i32* %4, align 4, !dbg !3046
  %6 = add i32 %5, 1, !dbg !3046
  store i32 %6, i32* %4, align 4, !dbg !3046
  %7 = load i32, i32* @tunable_max_login_fails, align 4, !dbg !3047
  %8 = icmp uge i32 %6, %7, !dbg !3048
  br i1 %8, label %9, label %10, !dbg !3049

9:                                                ; preds = %1
  call void @vsf_sysutil_shutdown_failok(i32 0), !dbg !3050
  call void @vsf_sysutil_exit(i32 1), !dbg !3052
  br label %10, !dbg !3053

10:                                               ; preds = %9, %1
  ret void, !dbg !3054
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @check_login_delay() #0 !dbg !3055 {
  %1 = load i32, i32* @tunable_delay_failed_login, align 4, !dbg !3056
  %2 = icmp ne i32 %1, 0, !dbg !3056
  br i1 %2, label %3, label %6, !dbg !3058

3:                                                ; preds = %0
  %4 = load i32, i32* @tunable_delay_failed_login, align 4, !dbg !3059
  %5 = uitofp i32 %4 to double, !dbg !3061
  call void @vsf_sysutil_sleep(double %5), !dbg !3062
  br label %6, !dbg !3063

6:                                                ; preds = %3, %0
  ret void, !dbg !3064
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_sock_setup() #0 !dbg !3065 {
  call void @vsf_sysutil_activate_keepalive(i32 0), !dbg !3066
  call void @vsf_sysutil_set_nodelay(i32 0), !dbg !3067
  call void @vsf_sysutil_activate_oobinline(i32 0), !dbg !3068
  ret void, !dbg !3069
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_write(%struct.vsf_session*, i32, i8*) #0 !dbg !3070 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !3073, metadata !DIExpression()), !dbg !3074
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3075, metadata !DIExpression()), !dbg !3076
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3077, metadata !DIExpression()), !dbg !3078
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !3079
  %8 = load i32, i32* %5, align 4, !dbg !3080
  %9 = load i8*, i8** %6, align 8, !dbg !3081
  call void @ftp_write_text_common(%struct.vsf_session* %7, i32 %8, i8* %9, i8 signext 32), !dbg !3082
  ret void, !dbg !3083
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @ftp_write_text_common(%struct.vsf_session*, i32, i8*, i8 signext) #0 !dbg !2 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !3084, metadata !DIExpression()), !dbg !3085
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3086, metadata !DIExpression()), !dbg !3087
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3088, metadata !DIExpression()), !dbg !3089
  store i8 %3, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !3090, metadata !DIExpression()), !dbg !3091
  %9 = load i8*, i8** %7, align 8, !dbg !3092
  call void @str_alloc_text(%struct.mystr* @ftp_write_text_common.s_the_str, i8* %9), !dbg !3093
  %10 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3094
  %11 = load i32, i32* %6, align 4, !dbg !3095
  %12 = load i8, i8* %8, align 1, !dbg !3096
  call void @ftp_write_str_common(%struct.vsf_session* %10, i32 %11, i8 signext %12, %struct.mystr* @ftp_write_text_common.s_the_str), !dbg !3097
  ret void, !dbg !3098
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @ftp_write_str_common(%struct.vsf_session*, i32, i8 signext, %struct.mystr*) #0 !dbg !137 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca %struct.mystr*, align 8
  %9 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !3099, metadata !DIExpression()), !dbg !3100
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3101, metadata !DIExpression()), !dbg !3102
  store i8 %2, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3103, metadata !DIExpression()), !dbg !3104
  store %struct.mystr* %3, %struct.mystr** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %8, metadata !3105, metadata !DIExpression()), !dbg !3106
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3107, metadata !DIExpression()), !dbg !3108
  %10 = load i32, i32* @tunable_log_ftp_protocol, align 4, !dbg !3109
  %11 = icmp ne i32 %10, 0, !dbg !3109
  br i1 %11, label %12, label %18, !dbg !3111

12:                                               ; preds = %4
  %13 = load i32, i32* %6, align 4, !dbg !3112
  %14 = sext i32 %13 to i64, !dbg !3114
  call void @str_alloc_ulong(%struct.mystr* @ftp_write_str_common.s_write_buf_str, i64 %14), !dbg !3115
  %15 = load i8, i8* %7, align 1, !dbg !3116
  call void @str_append_char(%struct.mystr* @ftp_write_str_common.s_write_buf_str, i8 signext %15), !dbg !3117
  %16 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !3118
  call void @str_append_str(%struct.mystr* @ftp_write_str_common.s_write_buf_str, %struct.mystr* %16), !dbg !3119
  %17 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3120
  call void @vsf_log_line(%struct.vsf_session* %17, i32 7, %struct.mystr* @ftp_write_str_common.s_write_buf_str), !dbg !3121
  br label %18, !dbg !3122

18:                                               ; preds = %12, %4
  %19 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !3123
  call void @str_copy(%struct.mystr* @ftp_write_str_common.s_text_mangle_str, %struct.mystr* %19), !dbg !3124
  call void @str_replace_text(%struct.mystr* @ftp_write_str_common.s_text_mangle_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.49, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.50, i32 0, i32 0)), !dbg !3125
  call void @str_replace_char(%struct.mystr* @ftp_write_str_common.s_text_mangle_str, i8 signext 10, i8 signext 0), !dbg !3126
  %20 = load i32, i32* %6, align 4, !dbg !3127
  %21 = sext i32 %20 to i64, !dbg !3128
  call void @str_alloc_ulong(%struct.mystr* @ftp_write_str_common.s_write_buf_str, i64 %21), !dbg !3129
  %22 = load i8, i8* %7, align 1, !dbg !3130
  call void @str_append_char(%struct.mystr* @ftp_write_str_common.s_write_buf_str, i8 signext %22), !dbg !3131
  call void @str_append_str(%struct.mystr* @ftp_write_str_common.s_write_buf_str, %struct.mystr* @ftp_write_str_common.s_text_mangle_str), !dbg !3132
  call void @str_append_text(%struct.mystr* @ftp_write_str_common.s_write_buf_str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.51, i32 0, i32 0)), !dbg !3133
  %23 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3134
  %24 = call i32 @ftp_write_str(%struct.vsf_session* %23, %struct.mystr* @ftp_write_str_common.s_write_buf_str, i32 1), !dbg !3135
  store i32 %24, i32* %9, align 4, !dbg !3136
  %25 = load i32, i32* %9, align 4, !dbg !3137
  %26 = icmp ne i32 %25, 0, !dbg !3139
  br i1 %26, label %27, label %28, !dbg !3140

27:                                               ; preds = %18
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.52, i32 0, i32 0)), !dbg !3141
  br label %28, !dbg !3143

28:                                               ; preds = %27, %18
  ret void, !dbg !3144
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_write_hyphen(%struct.vsf_session*, i32, i8*) #0 !dbg !3145 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !3146, metadata !DIExpression()), !dbg !3147
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3148, metadata !DIExpression()), !dbg !3149
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3150, metadata !DIExpression()), !dbg !3151
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !3152
  %8 = load i32, i32* %5, align 4, !dbg !3153
  %9 = load i8*, i8** %6, align 8, !dbg !3154
  call void @ftp_write_text_common(%struct.vsf_session* %7, i32 %8, i8* %9, i8 signext 45), !dbg !3155
  ret void, !dbg !3156
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_write_raw(%struct.vsf_session*, i8*) #0 !dbg !125 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !3157, metadata !DIExpression()), !dbg !3158
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3159, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3161, metadata !DIExpression()), !dbg !3162
  %6 = load i8*, i8** %4, align 8, !dbg !3163
  call void @str_alloc_text(%struct.mystr* @vsf_cmdio_write_raw.s_the_str, i8* %6), !dbg !3164
  %7 = load i32, i32* @tunable_log_ftp_protocol, align 4, !dbg !3165
  %8 = icmp ne i32 %7, 0, !dbg !3165
  br i1 %8, label %9, label %11, !dbg !3167

9:                                                ; preds = %2
  %10 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !3168
  call void @vsf_log_line(%struct.vsf_session* %10, i32 7, %struct.mystr* @vsf_cmdio_write_raw.s_the_str), !dbg !3170
  br label %11, !dbg !3171

11:                                               ; preds = %9, %2
  %12 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !3172
  %13 = call i32 @ftp_write_str(%struct.vsf_session* %12, %struct.mystr* @vsf_cmdio_write_raw.s_the_str, i32 1), !dbg !3173
  store i32 %13, i32* %5, align 4, !dbg !3174
  %14 = load i32, i32* %5, align 4, !dbg !3175
  %15 = icmp ne i32 %14, 0, !dbg !3177
  br i1 %15, label %16, label %17, !dbg !3178

16:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0)), !dbg !3179
  br label %17, !dbg !3181

17:                                               ; preds = %16, %11
  ret void, !dbg !3182
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_write_exit(%struct.vsf_session*, i32, i8*, i32) #0 !dbg !3183 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !3186, metadata !DIExpression()), !dbg !3187
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3188, metadata !DIExpression()), !dbg !3189
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3190, metadata !DIExpression()), !dbg !3191
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3192, metadata !DIExpression()), !dbg !3193
  call void @vsf_sysutil_activate_noblock(i32 0), !dbg !3194
  call void @vsf_sysutil_shutdown_read_failok(i32 0), !dbg !3195
  %9 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3196
  %10 = load i32, i32* %6, align 4, !dbg !3197
  %11 = load i8*, i8** %7, align 8, !dbg !3198
  call void @vsf_cmdio_write(%struct.vsf_session* %9, i32 %10, i8* %11), !dbg !3199
  call void @vsf_sysutil_shutdown_failok(i32 0), !dbg !3200
  %12 = load i32, i32* %8, align 4, !dbg !3201
  call void @vsf_sysutil_exit(i32 %12), !dbg !3202
  ret void, !dbg !3203
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_write_str_hyphen(%struct.vsf_session*, i32, %struct.mystr*) #0 !dbg !3204 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mystr*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !3207, metadata !DIExpression()), !dbg !3208
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3209, metadata !DIExpression()), !dbg !3210
  store %struct.mystr* %2, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !3211, metadata !DIExpression()), !dbg !3212
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !3213
  %8 = load i32, i32* %5, align 4, !dbg !3214
  %9 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3215
  call void @ftp_write_str_common(%struct.vsf_session* %7, i32 %8, i8 signext 45, %struct.mystr* %9), !dbg !3216
  ret void, !dbg !3217
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_write_str(%struct.vsf_session*, i32, %struct.mystr*) #0 !dbg !3218 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mystr*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !3219, metadata !DIExpression()), !dbg !3220
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3221, metadata !DIExpression()), !dbg !3222
  store %struct.mystr* %2, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !3223, metadata !DIExpression()), !dbg !3224
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !3225
  %8 = load i32, i32* %5, align 4, !dbg !3226
  %9 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3227
  call void @ftp_write_str_common(%struct.vsf_session* %7, i32 %8, i8 signext 32, %struct.mystr* %9), !dbg !3228
  ret void, !dbg !3229
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_set_alarm(%struct.vsf_session*) #0 !dbg !3230 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !3233, metadata !DIExpression()), !dbg !3234
  %3 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !3235
  %4 = icmp ugt i32 %3, 0, !dbg !3237
  br i1 %4, label %5, label %9, !dbg !3238

5:                                                ; preds = %1
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3239
  %7 = bitcast %struct.vsf_session* %6 to i8*, !dbg !3239
  call void @vsf_sysutil_install_sighandler(i32 1, void (i8*)* @handle_alarm_timeout, i8* %7, i32 1), !dbg !3241
  %8 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !3242
  call void @vsf_sysutil_set_alarm(i32 %8), !dbg !3243
  br label %9, !dbg !3244

9:                                                ; preds = %5, %1
  ret void, !dbg !3245
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_alarm_timeout(i8*) #0 !dbg !3246 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_session*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3247, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !3249, metadata !DIExpression()), !dbg !3250
  %4 = load i8*, i8** %2, align 8, !dbg !3251
  %5 = bitcast i8* %4 to %struct.vsf_session*, !dbg !3252
  store %struct.vsf_session* %5, %struct.vsf_session** %3, align 8, !dbg !3250
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !3253
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 3, !dbg !3254
  store i32 1, i32* %7, align 8, !dbg !3255
  call void @vsf_sysutil_activate_noblock(i32 0), !dbg !3256
  call void @vsf_sysutil_shutdown_read_failok(i32 0), !dbg !3257
  ret void, !dbg !3258
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_cmdio_get_cmd_and_arg(%struct.vsf_session*, %struct.mystr*, %struct.mystr*, i32) #0 !dbg !131 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca %struct.mystr*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !3259, metadata !DIExpression()), !dbg !3260
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !3261, metadata !DIExpression()), !dbg !3262
  store %struct.mystr* %2, %struct.mystr** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %7, metadata !3263, metadata !DIExpression()), !dbg !3264
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3265, metadata !DIExpression()), !dbg !3266
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3267, metadata !DIExpression()), !dbg !3268
  %10 = load i32, i32* %8, align 4, !dbg !3269
  %11 = icmp ne i32 %10, 0, !dbg !3269
  br i1 %11, label %12, label %14, !dbg !3271

12:                                               ; preds = %4
  %13 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3272
  call void @vsf_cmdio_set_alarm(%struct.vsf_session* %13), !dbg !3274
  br label %14, !dbg !3275

14:                                               ; preds = %12, %4
  %15 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3276
  %16 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3277
  %17 = call i32 @control_getline(%struct.mystr* %15, %struct.vsf_session* %16), !dbg !3278
  store i32 %17, i32* %9, align 4, !dbg !3279
  %18 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3280
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 3, !dbg !3282
  %20 = load i32, i32* %19, align 8, !dbg !3282
  %21 = icmp ne i32 %20, 0, !dbg !3280
  br i1 %21, label %22, label %24, !dbg !3283

22:                                               ; preds = %14
  %23 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3284
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %23, i32 421, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.60, i32 0, i32 0), i32 1), !dbg !3286
  br label %24, !dbg !3287

24:                                               ; preds = %22, %14
  %25 = load i32, i32* %9, align 4, !dbg !3288
  %26 = icmp eq i32 %25, 0, !dbg !3290
  br i1 %26, label %27, label %28, !dbg !3291

27:                                               ; preds = %24
  call void @vsf_sysutil_shutdown_failok(i32 0), !dbg !3292
  call void @vsf_sysutil_exit(i32 1), !dbg !3294
  br label %28, !dbg !3295

28:                                               ; preds = %27, %24
  %29 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3296
  %30 = call i32 @str_getlen(%struct.mystr* %29), !dbg !3298
  %31 = icmp eq i32 %30, 1, !dbg !3299
  br i1 %31, label %32, label %39, !dbg !3300

32:                                               ; preds = %28
  %33 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3301
  %34 = call signext i8 @str_get_char_at(%struct.mystr* %33, i32 0), !dbg !3302
  %35 = sext i8 %34 to i32, !dbg !3302
  %36 = icmp eq i32 %35, 32, !dbg !3303
  br i1 %36, label %37, label %39, !dbg !3304

37:                                               ; preds = %32
  %38 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !3305
  call void @str_empty(%struct.mystr* %38), !dbg !3307
  br label %42, !dbg !3308

39:                                               ; preds = %32, %28
  %40 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3309
  %41 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !3311
  call void @str_split_char(%struct.mystr* %40, %struct.mystr* %41, i8 signext 32), !dbg !3312
  br label %42

42:                                               ; preds = %39, %37
  %43 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3313
  call void @str_upper(%struct.mystr* %43), !dbg !3314
  %44 = load i32, i32* @tunable_log_ftp_protocol, align 4, !dbg !3315
  %45 = icmp ne i32 %44, 0, !dbg !3315
  br i1 %45, label %46, label %61, !dbg !3317

46:                                               ; preds = %42
  %47 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3318
  %48 = call i32 @str_equal_text(%struct.mystr* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.61, i32 0, i32 0)), !dbg !3321
  %49 = icmp ne i32 %48, 0, !dbg !3321
  br i1 %49, label %50, label %51, !dbg !3322

50:                                               ; preds = %46
  call void @str_alloc_text(%struct.mystr* @vsf_cmdio_get_cmd_and_arg.s_log_str, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.62, i32 0, i32 0)), !dbg !3323
  br label %59, !dbg !3325

51:                                               ; preds = %46
  %52 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !3326
  call void @str_copy(%struct.mystr* @vsf_cmdio_get_cmd_and_arg.s_log_str, %struct.mystr* %52), !dbg !3328
  %53 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !3329
  %54 = call i32 @str_isempty(%struct.mystr* %53), !dbg !3331
  %55 = icmp ne i32 %54, 0, !dbg !3331
  br i1 %55, label %58, label %56, !dbg !3332

56:                                               ; preds = %51
  call void @str_append_char(%struct.mystr* @vsf_cmdio_get_cmd_and_arg.s_log_str, i8 signext 32), !dbg !3333
  %57 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !3335
  call void @str_append_str(%struct.mystr* @vsf_cmdio_get_cmd_and_arg.s_log_str, %struct.mystr* %57), !dbg !3336
  br label %58, !dbg !3337

58:                                               ; preds = %56, %51
  br label %59

59:                                               ; preds = %58, %50
  %60 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3338
  call void @vsf_log_line(%struct.vsf_session* %60, i32 6, %struct.mystr* @vsf_cmdio_get_cmd_and_arg.s_log_str), !dbg !3339
  br label %61, !dbg !3340

61:                                               ; preds = %59, %42
  ret void, !dbg !3341
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @control_getline(%struct.mystr*, %struct.vsf_session*) #0 !dbg !3342 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !3345, metadata !DIExpression()), !dbg !3346
  store %struct.vsf_session* %1, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !3347, metadata !DIExpression()), !dbg !3348
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3349, metadata !DIExpression()), !dbg !3350
  %8 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3351
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 2, !dbg !3353
  %10 = load i8*, i8** %9, align 8, !dbg !3353
  %11 = icmp eq i8* %10, null, !dbg !3354
  br i1 %11, label %12, label %15, !dbg !3355

12:                                               ; preds = %2
  %13 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3356
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 2, !dbg !3358
  call void @vsf_secbuf_alloc(i8** %14, i32 4096), !dbg !3359
  br label %15, !dbg !3360

15:                                               ; preds = %12, %2
  %16 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3361
  %17 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !3362
  %18 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3363
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 2, !dbg !3364
  %20 = load i8*, i8** %19, align 8, !dbg !3364
  %21 = call i32 @ftp_getline(%struct.vsf_session* %16, %struct.mystr* %17, i8* %20), !dbg !3365
  store i32 %21, i32* %6, align 4, !dbg !3366
  %22 = load i32, i32* %6, align 4, !dbg !3367
  %23 = icmp eq i32 %22, 0, !dbg !3369
  br i1 %23, label %24, label %26, !dbg !3370

24:                                               ; preds = %15
  %25 = load i32, i32* %6, align 4, !dbg !3371
  store i32 %25, i32* %3, align 4, !dbg !3373
  br label %55, !dbg !3373

26:                                               ; preds = %15
  %27 = load i32, i32* %6, align 4, !dbg !3374
  %28 = icmp slt i32 %27, 0, !dbg !3376
  br i1 %28, label %29, label %31, !dbg !3377

29:                                               ; preds = %26
  %30 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !3378
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %30, i32 500, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.63, i32 0, i32 0), i32 1), !dbg !3380
  br label %31, !dbg !3381

31:                                               ; preds = %29, %26
  br label %32

32:                                               ; preds = %31
  %33 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !3382
  call void @str_replace_char(%struct.mystr* %33, i8 signext 0, i8 signext 10), !dbg !3383
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3384, metadata !DIExpression()), !dbg !3386
  %34 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !3387
  %35 = call i32 @str_getlen(%struct.mystr* %34), !dbg !3388
  store i32 %35, i32* %7, align 4, !dbg !3386
  br label %36, !dbg !3389

36:                                               ; preds = %48, %32
  %37 = load i32, i32* %7, align 4, !dbg !3390
  %38 = icmp ugt i32 %37, 0, !dbg !3391
  br i1 %38, label %39, label %46, !dbg !3392

39:                                               ; preds = %36
  %40 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !3393
  %41 = load i32, i32* %7, align 4, !dbg !3394
  %42 = sub i32 %41, 1, !dbg !3395
  %43 = call signext i8 @str_get_char_at(%struct.mystr* %40, i32 %42), !dbg !3396
  %44 = sext i8 %43 to i32, !dbg !3396
  %45 = icmp eq i32 %44, 13, !dbg !3397
  br label %46

46:                                               ; preds = %39, %36
  %47 = phi i1 [ false, %36 ], [ %45, %39 ]
  br i1 %47, label %48, label %54, !dbg !3389

48:                                               ; preds = %46
  %49 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !3398
  %50 = load i32, i32* %7, align 4, !dbg !3400
  %51 = sub i32 %50, 1, !dbg !3401
  call void @str_trunc(%struct.mystr* %49, i32 %51), !dbg !3402
  %52 = load i32, i32* %7, align 4, !dbg !3403
  %53 = add i32 %52, -1, !dbg !3403
  store i32 %53, i32* %7, align 4, !dbg !3403
  br label %36, !dbg !3389, !llvm.loop !3404

54:                                               ; preds = %46
  store i32 1, i32* %3, align 4, !dbg !3406
  br label %55, !dbg !3406

55:                                               ; preds = %54, %24
  %56 = load i32, i32* %3, align 4, !dbg !3407
  ret i32 %56, !dbg !3407
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @process_post_login(%struct.vsf_session*) #0 !dbg !146 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !3408, metadata !DIExpression()), !dbg !3409
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3410
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 46, !dbg !3411
  call void @str_getcwd(%struct.mystr* %6), !dbg !3412
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3413
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 12, !dbg !3415
  %9 = load i32, i32* %8, align 8, !dbg !3415
  %10 = icmp ne i32 %9, 0, !dbg !3413
  br i1 %10, label %11, label %16, !dbg !3416

11:                                               ; preds = %1
  %12 = load i32, i32* @tunable_anon_umask, align 4, !dbg !3417
  call void @vsf_sysutil_set_umask(i32 %12), !dbg !3419
  %13 = load i32, i32* @tunable_anon_max_rate, align 4, !dbg !3420
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3421
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 9, !dbg !3422
  store i32 %13, i32* %15, align 8, !dbg !3423
  br label %21, !dbg !3424

16:                                               ; preds = %1
  %17 = load i32, i32* @tunable_local_umask, align 4, !dbg !3425
  call void @vsf_sysutil_set_umask(i32 %17), !dbg !3427
  %18 = load i32, i32* @tunable_local_max_rate, align 4, !dbg !3428
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3429
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 9, !dbg !3430
  store i32 %18, i32* %20, align 8, !dbg !3431
  br label %21

21:                                               ; preds = %16, %11
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3432
  %23 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %22, i32 0, i32 21, !dbg !3434
  %24 = load i32, i32* %23, align 8, !dbg !3434
  %25 = icmp ne i32 %24, 0, !dbg !3432
  br i1 %25, label %26, label %28, !dbg !3435

26:                                               ; preds = %21
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3436
  call void @handle_http(%struct.vsf_session* %27), !dbg !3438
  call void @bug(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i32 0, i32 0)), !dbg !3439
  br label %28, !dbg !3440

28:                                               ; preds = %26, %21
  %29 = load i32, i32* @tunable_async_abor_enable, align 4, !dbg !3441
  %30 = icmp ne i32 %29, 0, !dbg !3441
  br i1 %30, label %31, label %39, !dbg !3443

31:                                               ; preds = %28
  %32 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3444
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 47, !dbg !3445
  %34 = load i32, i32* %33, align 8, !dbg !3445
  %35 = icmp ne i32 %34, 0, !dbg !3444
  br i1 %35, label %39, label %36, !dbg !3446

36:                                               ; preds = %31
  %37 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3447
  %38 = bitcast %struct.vsf_session* %37 to i8*, !dbg !3447
  call void @vsf_sysutil_install_sighandler(i32 5, void (i8*)* @handle_sigurg, i8* %38, i32 0), !dbg !3449
  call void @vsf_sysutil_activate_sigurg(i32 0), !dbg !3450
  br label %39, !dbg !3451

39:                                               ; preds = %36, %31, %28
  %40 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3452
  call void @vsf_banner_dir_changed(%struct.vsf_session* %40, i32 230), !dbg !3453
  %41 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3454
  call void @vsf_cmdio_write(%struct.vsf_session* %41, i32 230, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.65, i32 0, i32 0)), !dbg !3455
  br label %42, !dbg !3456

42:                                               ; preds = %39, %829
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3457, metadata !DIExpression()), !dbg !3459
  store i32 1, i32* %3, align 4, !dbg !3459
  %43 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !3460
  %44 = icmp ne i32 %43, 0, !dbg !3460
  br i1 %44, label %45, label %46, !dbg !3462

45:                                               ; preds = %42
  call void @vsf_sysutil_setproctitle(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.66, i32 0, i32 0)), !dbg !3463
  br label %46, !dbg !3465

46:                                               ; preds = %45, %42
  %47 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3466
  %48 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3467
  %49 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %48, i32 0, i32 40, !dbg !3468
  %50 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3469
  %51 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %50, i32 0, i32 41, !dbg !3470
  call void @vsf_cmdio_get_cmd_and_arg(%struct.vsf_session* %47, %struct.mystr* %49, %struct.mystr* %51, i32 1), !dbg !3471
  %52 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !3472
  %53 = icmp ne i32 %52, 0, !dbg !3472
  br i1 %53, label %54, label %66, !dbg !3474

54:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata %struct.mystr* %4, metadata !3475, metadata !DIExpression()), !dbg !3477
  %55 = bitcast %struct.mystr* %4 to i8*, !dbg !3477
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false), !dbg !3477
  %56 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3478
  %57 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %56, i32 0, i32 40, !dbg !3479
  call void @str_copy(%struct.mystr* %4, %struct.mystr* %57), !dbg !3480
  %58 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3481
  %59 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %58, i32 0, i32 41, !dbg !3483
  %60 = call i32 @str_isempty(%struct.mystr* %59), !dbg !3484
  %61 = icmp ne i32 %60, 0, !dbg !3484
  br i1 %61, label %65, label %62, !dbg !3485

62:                                               ; preds = %54
  call void @str_append_char(%struct.mystr* %4, i8 signext 32), !dbg !3486
  %63 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3488
  %64 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %63, i32 0, i32 41, !dbg !3489
  call void @str_append_str(%struct.mystr* %4, %struct.mystr* %64), !dbg !3490
  br label %65, !dbg !3491

65:                                               ; preds = %62, %54
  call void @str_replace_unprintable(%struct.mystr* %4, i8 signext 63), !dbg !3492
  call void @vsf_sysutil_setproctitle_str(%struct.mystr* %4), !dbg !3493
  call void @str_free(%struct.mystr* %4), !dbg !3494
  br label %66, !dbg !3495

66:                                               ; preds = %65, %46
  %67 = load i8*, i8** @tunable_cmds_allowed, align 8, !dbg !3496
  %68 = icmp ne i8* %67, null, !dbg !3496
  br i1 %68, label %69, label %84, !dbg !3498

69:                                               ; preds = %66
  %70 = load i8*, i8** @tunable_cmds_allowed, align 8, !dbg !3499
  call void @str_alloc_text(%struct.mystr* @process_post_login.s_src_str, i8* %70), !dbg !3501
  br label %71, !dbg !3502

71:                                               ; preds = %69, %82
  call void @str_split_char(%struct.mystr* @process_post_login.s_src_str, %struct.mystr* @process_post_login.s_rhs_str, i8 signext 44), !dbg !3503
  %72 = call i32 @str_isempty(%struct.mystr* @process_post_login.s_src_str), !dbg !3505
  %73 = icmp ne i32 %72, 0, !dbg !3505
  br i1 %73, label %74, label %75, !dbg !3507

74:                                               ; preds = %71
  store i32 0, i32* %3, align 4, !dbg !3508
  br label %83, !dbg !3510

75:                                               ; preds = %71
  %76 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3511
  %77 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %76, i32 0, i32 40, !dbg !3513
  %78 = call i32 @str_equal(%struct.mystr* @process_post_login.s_src_str, %struct.mystr* %77), !dbg !3514
  %79 = icmp ne i32 %78, 0, !dbg !3514
  br i1 %79, label %80, label %81, !dbg !3515

80:                                               ; preds = %75
  br label %83, !dbg !3516

81:                                               ; preds = %75
  br label %82

82:                                               ; preds = %81
  call void @str_copy(%struct.mystr* @process_post_login.s_src_str, %struct.mystr* @process_post_login.s_rhs_str), !dbg !3518
  br label %71, !dbg !3502, !llvm.loop !3519

83:                                               ; preds = %80, %74
  br label %84, !dbg !3521

84:                                               ; preds = %83, %66
  %85 = load i8*, i8** @tunable_cmds_denied, align 8, !dbg !3522
  %86 = icmp ne i8* %85, null, !dbg !3522
  br i1 %86, label %87, label %102, !dbg !3524

87:                                               ; preds = %84
  %88 = load i8*, i8** @tunable_cmds_denied, align 8, !dbg !3525
  call void @str_alloc_text(%struct.mystr* @process_post_login.s_src_str.3, i8* %88), !dbg !3527
  br label %89, !dbg !3528

89:                                               ; preds = %87, %100
  call void @str_split_char(%struct.mystr* @process_post_login.s_src_str.3, %struct.mystr* @process_post_login.s_rhs_str.4, i8 signext 44), !dbg !3529
  %90 = call i32 @str_isempty(%struct.mystr* @process_post_login.s_src_str.3), !dbg !3531
  %91 = icmp ne i32 %90, 0, !dbg !3531
  br i1 %91, label %92, label %93, !dbg !3533

92:                                               ; preds = %89
  br label %101, !dbg !3534

93:                                               ; preds = %89
  %94 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3536
  %95 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %94, i32 0, i32 40, !dbg !3538
  %96 = call i32 @str_equal(%struct.mystr* @process_post_login.s_src_str.3, %struct.mystr* %95), !dbg !3539
  %97 = icmp ne i32 %96, 0, !dbg !3539
  br i1 %97, label %98, label %99, !dbg !3540

98:                                               ; preds = %93
  store i32 0, i32* %3, align 4, !dbg !3541
  br label %101, !dbg !3543

99:                                               ; preds = %93
  br label %100

100:                                              ; preds = %99
  call void @str_copy(%struct.mystr* @process_post_login.s_src_str.3, %struct.mystr* @process_post_login.s_rhs_str.4), !dbg !3544
  br label %89, !dbg !3528, !llvm.loop !3545

101:                                              ; preds = %98, %92
  br label %102, !dbg !3547

102:                                              ; preds = %101, %84
  %103 = load i32, i32* %3, align 4, !dbg !3548
  %104 = icmp ne i32 %103, 0, !dbg !3548
  br i1 %104, label %107, label %105, !dbg !3550

105:                                              ; preds = %102
  %106 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3551
  call void @vsf_cmdio_write(%struct.vsf_session* %106, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !3553
  br label %816, !dbg !3554

107:                                              ; preds = %102
  %108 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3555
  %109 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %108, i32 0, i32 40, !dbg !3557
  %110 = call i32 @str_equal_text(%struct.mystr* %109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.68, i32 0, i32 0)), !dbg !3558
  %111 = icmp ne i32 %110, 0, !dbg !3558
  br i1 %111, label %112, label %114, !dbg !3559

112:                                              ; preds = %107
  %113 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3560
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %113, i32 221, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.69, i32 0, i32 0), i32 0), !dbg !3562
  br label %815, !dbg !3563

114:                                              ; preds = %107
  %115 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3564
  %116 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %115, i32 0, i32 40, !dbg !3566
  %117 = call i32 @str_equal_text(%struct.mystr* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.70, i32 0, i32 0)), !dbg !3567
  %118 = icmp ne i32 %117, 0, !dbg !3567
  br i1 %118, label %124, label %119, !dbg !3568

119:                                              ; preds = %114
  %120 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3569
  %121 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %120, i32 0, i32 40, !dbg !3570
  %122 = call i32 @str_equal_text(%struct.mystr* %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.71, i32 0, i32 0)), !dbg !3571
  %123 = icmp ne i32 %122, 0, !dbg !3571
  br i1 %123, label %124, label %126, !dbg !3572

124:                                              ; preds = %119, %114
  %125 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3573
  call void @handle_pwd(%struct.vsf_session* %125), !dbg !3575
  br label %814, !dbg !3576

126:                                              ; preds = %119
  %127 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3577
  %128 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %127, i32 0, i32 40, !dbg !3579
  %129 = call i32 @str_equal_text(%struct.mystr* %128, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.72, i32 0, i32 0)), !dbg !3580
  %130 = icmp ne i32 %129, 0, !dbg !3580
  br i1 %130, label %136, label %131, !dbg !3581

131:                                              ; preds = %126
  %132 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3582
  %133 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %132, i32 0, i32 40, !dbg !3583
  %134 = call i32 @str_equal_text(%struct.mystr* %133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.73, i32 0, i32 0)), !dbg !3584
  %135 = icmp ne i32 %134, 0, !dbg !3584
  br i1 %135, label %136, label %138, !dbg !3585

136:                                              ; preds = %131, %126
  %137 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3586
  call void @handle_cwd(%struct.vsf_session* %137), !dbg !3588
  br label %813, !dbg !3589

138:                                              ; preds = %131
  %139 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3590
  %140 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %139, i32 0, i32 40, !dbg !3592
  %141 = call i32 @str_equal_text(%struct.mystr* %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.74, i32 0, i32 0)), !dbg !3593
  %142 = icmp ne i32 %141, 0, !dbg !3593
  br i1 %142, label %148, label %143, !dbg !3594

143:                                              ; preds = %138
  %144 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3595
  %145 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %144, i32 0, i32 40, !dbg !3596
  %146 = call i32 @str_equal_text(%struct.mystr* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.75, i32 0, i32 0)), !dbg !3597
  %147 = icmp ne i32 %146, 0, !dbg !3597
  br i1 %147, label %148, label %150, !dbg !3598

148:                                              ; preds = %143, %138
  %149 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3599
  call void @handle_cdup(%struct.vsf_session* %149), !dbg !3601
  br label %812, !dbg !3602

150:                                              ; preds = %143
  %151 = load i32, i32* @tunable_pasv_enable, align 4, !dbg !3603
  %152 = icmp ne i32 %151, 0, !dbg !3603
  br i1 %152, label %153, label %170, !dbg !3605

153:                                              ; preds = %150
  %154 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3606
  %155 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %154, i32 0, i32 20, !dbg !3607
  %156 = load i32, i32* %155, align 4, !dbg !3607
  %157 = icmp ne i32 %156, 0, !dbg !3606
  br i1 %157, label %170, label %158, !dbg !3608

158:                                              ; preds = %153
  %159 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3609
  %160 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %159, i32 0, i32 40, !dbg !3610
  %161 = call i32 @str_equal_text(%struct.mystr* %160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.76, i32 0, i32 0)), !dbg !3611
  %162 = icmp ne i32 %161, 0, !dbg !3611
  br i1 %162, label %168, label %163, !dbg !3612

163:                                              ; preds = %158
  %164 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3613
  %165 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %164, i32 0, i32 40, !dbg !3614
  %166 = call i32 @str_equal_text(%struct.mystr* %165, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.77, i32 0, i32 0)), !dbg !3615
  %167 = icmp ne i32 %166, 0, !dbg !3615
  br i1 %167, label %168, label %170, !dbg !3616

168:                                              ; preds = %163, %158
  %169 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3617
  call void @handle_pasv(%struct.vsf_session* %169, i32 0), !dbg !3619
  br label %811, !dbg !3620

170:                                              ; preds = %163, %153, %150
  %171 = load i32, i32* @tunable_pasv_enable, align 4, !dbg !3621
  %172 = icmp ne i32 %171, 0, !dbg !3621
  br i1 %172, label %173, label %180, !dbg !3623

173:                                              ; preds = %170
  %174 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3624
  %175 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %174, i32 0, i32 40, !dbg !3625
  %176 = call i32 @str_equal_text(%struct.mystr* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.78, i32 0, i32 0)), !dbg !3626
  %177 = icmp ne i32 %176, 0, !dbg !3626
  br i1 %177, label %178, label %180, !dbg !3627

178:                                              ; preds = %173
  %179 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3628
  call void @handle_pasv(%struct.vsf_session* %179, i32 1), !dbg !3630
  br label %810, !dbg !3631

180:                                              ; preds = %173, %170
  %181 = load i32, i32* @tunable_download_enable, align 4, !dbg !3632
  %182 = icmp ne i32 %181, 0, !dbg !3632
  br i1 %182, label %183, label %190, !dbg !3634

183:                                              ; preds = %180
  %184 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3635
  %185 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %184, i32 0, i32 40, !dbg !3636
  %186 = call i32 @str_equal_text(%struct.mystr* %185, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.79, i32 0, i32 0)), !dbg !3637
  %187 = icmp ne i32 %186, 0, !dbg !3637
  br i1 %187, label %188, label %190, !dbg !3638

188:                                              ; preds = %183
  %189 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3639
  call void @handle_retr(%struct.vsf_session* %189, i32 0), !dbg !3641
  br label %809, !dbg !3642

190:                                              ; preds = %183, %180
  %191 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3643
  %192 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %191, i32 0, i32 40, !dbg !3645
  %193 = call i32 @str_equal_text(%struct.mystr* %192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.80, i32 0, i32 0)), !dbg !3646
  %194 = icmp ne i32 %193, 0, !dbg !3646
  br i1 %194, label %195, label %197, !dbg !3647

195:                                              ; preds = %190
  %196 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3648
  call void @vsf_cmdio_write(%struct.vsf_session* %196, i32 200, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19.81, i32 0, i32 0)), !dbg !3650
  br label %808, !dbg !3651

197:                                              ; preds = %190
  %198 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3652
  %199 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %198, i32 0, i32 40, !dbg !3654
  %200 = call i32 @str_equal_text(%struct.mystr* %199, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.82, i32 0, i32 0)), !dbg !3655
  %201 = icmp ne i32 %200, 0, !dbg !3655
  br i1 %201, label %202, label %204, !dbg !3656

202:                                              ; preds = %197
  %203 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3657
  call void @vsf_cmdio_write(%struct.vsf_session* %203, i32 215, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21.83, i32 0, i32 0)), !dbg !3659
  br label %807, !dbg !3660

204:                                              ; preds = %197
  %205 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3661
  %206 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %205, i32 0, i32 40, !dbg !3663
  %207 = call i32 @str_equal_text(%struct.mystr* %206, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.84, i32 0, i32 0)), !dbg !3664
  %208 = icmp ne i32 %207, 0, !dbg !3664
  br i1 %208, label %209, label %211, !dbg !3665

209:                                              ; preds = %204
  %210 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3666
  call void @handle_help(%struct.vsf_session* %210), !dbg !3668
  br label %806, !dbg !3669

211:                                              ; preds = %204
  %212 = load i32, i32* @tunable_dirlist_enable, align 4, !dbg !3670
  %213 = icmp ne i32 %212, 0, !dbg !3670
  br i1 %213, label %214, label %221, !dbg !3672

214:                                              ; preds = %211
  %215 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3673
  %216 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %215, i32 0, i32 40, !dbg !3674
  %217 = call i32 @str_equal_text(%struct.mystr* %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.85, i32 0, i32 0)), !dbg !3675
  %218 = icmp ne i32 %217, 0, !dbg !3675
  br i1 %218, label %219, label %221, !dbg !3676

219:                                              ; preds = %214
  %220 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3677
  call void @handle_list(%struct.vsf_session* %220), !dbg !3679
  br label %805, !dbg !3680

221:                                              ; preds = %214, %211
  %222 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3681
  %223 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %222, i32 0, i32 40, !dbg !3683
  %224 = call i32 @str_equal_text(%struct.mystr* %223, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.86, i32 0, i32 0)), !dbg !3684
  %225 = icmp ne i32 %224, 0, !dbg !3684
  br i1 %225, label %226, label %228, !dbg !3685

226:                                              ; preds = %221
  %227 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3686
  call void @handle_type(%struct.vsf_session* %227), !dbg !3688
  br label %804, !dbg !3689

228:                                              ; preds = %221
  %229 = load i32, i32* @tunable_port_enable, align 4, !dbg !3690
  %230 = icmp ne i32 %229, 0, !dbg !3690
  br i1 %230, label %231, label %243, !dbg !3692

231:                                              ; preds = %228
  %232 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3693
  %233 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %232, i32 0, i32 20, !dbg !3694
  %234 = load i32, i32* %233, align 4, !dbg !3694
  %235 = icmp ne i32 %234, 0, !dbg !3693
  br i1 %235, label %243, label %236, !dbg !3695

236:                                              ; preds = %231
  %237 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3696
  %238 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %237, i32 0, i32 40, !dbg !3697
  %239 = call i32 @str_equal_text(%struct.mystr* %238, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.87, i32 0, i32 0)), !dbg !3698
  %240 = icmp ne i32 %239, 0, !dbg !3698
  br i1 %240, label %241, label %243, !dbg !3699

241:                                              ; preds = %236
  %242 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3700
  call void @handle_port(%struct.vsf_session* %242), !dbg !3702
  br label %803, !dbg !3703

243:                                              ; preds = %236, %231, %228
  %244 = load i32, i32* @tunable_write_enable, align 4, !dbg !3704
  %245 = icmp ne i32 %244, 0, !dbg !3704
  br i1 %245, label %246, label %261, !dbg !3706

246:                                              ; preds = %243
  %247 = load i32, i32* @tunable_anon_upload_enable, align 4, !dbg !3707
  %248 = icmp ne i32 %247, 0, !dbg !3707
  br i1 %248, label %254, label %249, !dbg !3708

249:                                              ; preds = %246
  %250 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3709
  %251 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %250, i32 0, i32 12, !dbg !3710
  %252 = load i32, i32* %251, align 8, !dbg !3710
  %253 = icmp ne i32 %252, 0, !dbg !3709
  br i1 %253, label %261, label %254, !dbg !3711

254:                                              ; preds = %249, %246
  %255 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3712
  %256 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %255, i32 0, i32 40, !dbg !3713
  %257 = call i32 @str_equal_text(%struct.mystr* %256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.88, i32 0, i32 0)), !dbg !3714
  %258 = icmp ne i32 %257, 0, !dbg !3714
  br i1 %258, label %259, label %261, !dbg !3715

259:                                              ; preds = %254
  %260 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3716
  call void @handle_stor(%struct.vsf_session* %260), !dbg !3718
  br label %802, !dbg !3719

261:                                              ; preds = %254, %249, %243
  %262 = load i32, i32* @tunable_write_enable, align 4, !dbg !3720
  %263 = icmp ne i32 %262, 0, !dbg !3720
  br i1 %263, label %264, label %284, !dbg !3722

264:                                              ; preds = %261
  %265 = load i32, i32* @tunable_anon_mkdir_write_enable, align 4, !dbg !3723
  %266 = icmp ne i32 %265, 0, !dbg !3723
  br i1 %266, label %272, label %267, !dbg !3724

267:                                              ; preds = %264
  %268 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3725
  %269 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %268, i32 0, i32 12, !dbg !3726
  %270 = load i32, i32* %269, align 8, !dbg !3726
  %271 = icmp ne i32 %270, 0, !dbg !3725
  br i1 %271, label %284, label %272, !dbg !3727

272:                                              ; preds = %267, %264
  %273 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3728
  %274 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %273, i32 0, i32 40, !dbg !3729
  %275 = call i32 @str_equal_text(%struct.mystr* %274, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.89, i32 0, i32 0)), !dbg !3730
  %276 = icmp ne i32 %275, 0, !dbg !3730
  br i1 %276, label %282, label %277, !dbg !3731

277:                                              ; preds = %272
  %278 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3732
  %279 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %278, i32 0, i32 40, !dbg !3733
  %280 = call i32 @str_equal_text(%struct.mystr* %279, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.90, i32 0, i32 0)), !dbg !3734
  %281 = icmp ne i32 %280, 0, !dbg !3734
  br i1 %281, label %282, label %284, !dbg !3735

282:                                              ; preds = %277, %272
  %283 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3736
  call void @handle_mkd(%struct.vsf_session* %283), !dbg !3738
  br label %801, !dbg !3739

284:                                              ; preds = %277, %267, %261
  %285 = load i32, i32* @tunable_write_enable, align 4, !dbg !3740
  %286 = icmp ne i32 %285, 0, !dbg !3740
  br i1 %286, label %287, label %307, !dbg !3742

287:                                              ; preds = %284
  %288 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !3743
  %289 = icmp ne i32 %288, 0, !dbg !3743
  br i1 %289, label %295, label %290, !dbg !3744

290:                                              ; preds = %287
  %291 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3745
  %292 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %291, i32 0, i32 12, !dbg !3746
  %293 = load i32, i32* %292, align 8, !dbg !3746
  %294 = icmp ne i32 %293, 0, !dbg !3745
  br i1 %294, label %307, label %295, !dbg !3747

295:                                              ; preds = %290, %287
  %296 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3748
  %297 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %296, i32 0, i32 40, !dbg !3749
  %298 = call i32 @str_equal_text(%struct.mystr* %297, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29.91, i32 0, i32 0)), !dbg !3750
  %299 = icmp ne i32 %298, 0, !dbg !3750
  br i1 %299, label %305, label %300, !dbg !3751

300:                                              ; preds = %295
  %301 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3752
  %302 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %301, i32 0, i32 40, !dbg !3753
  %303 = call i32 @str_equal_text(%struct.mystr* %302, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.92, i32 0, i32 0)), !dbg !3754
  %304 = icmp ne i32 %303, 0, !dbg !3754
  br i1 %304, label %305, label %307, !dbg !3755

305:                                              ; preds = %300, %295
  %306 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3756
  call void @handle_rmd(%struct.vsf_session* %306), !dbg !3758
  br label %800, !dbg !3759

307:                                              ; preds = %300, %290, %284
  %308 = load i32, i32* @tunable_write_enable, align 4, !dbg !3760
  %309 = icmp ne i32 %308, 0, !dbg !3760
  br i1 %309, label %310, label %325, !dbg !3762

310:                                              ; preds = %307
  %311 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !3763
  %312 = icmp ne i32 %311, 0, !dbg !3763
  br i1 %312, label %318, label %313, !dbg !3764

313:                                              ; preds = %310
  %314 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3765
  %315 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %314, i32 0, i32 12, !dbg !3766
  %316 = load i32, i32* %315, align 8, !dbg !3766
  %317 = icmp ne i32 %316, 0, !dbg !3765
  br i1 %317, label %325, label %318, !dbg !3767

318:                                              ; preds = %313, %310
  %319 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3768
  %320 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %319, i32 0, i32 40, !dbg !3769
  %321 = call i32 @str_equal_text(%struct.mystr* %320, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.93, i32 0, i32 0)), !dbg !3770
  %322 = icmp ne i32 %321, 0, !dbg !3770
  br i1 %322, label %323, label %325, !dbg !3771

323:                                              ; preds = %318
  %324 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3772
  call void @handle_dele(%struct.vsf_session* %324), !dbg !3774
  br label %799, !dbg !3775

325:                                              ; preds = %318, %313, %307
  %326 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3776
  %327 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %326, i32 0, i32 40, !dbg !3778
  %328 = call i32 @str_equal_text(%struct.mystr* %327, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32.94, i32 0, i32 0)), !dbg !3779
  %329 = icmp ne i32 %328, 0, !dbg !3779
  br i1 %329, label %330, label %332, !dbg !3780

330:                                              ; preds = %325
  %331 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3781
  call void @handle_rest(%struct.vsf_session* %331), !dbg !3783
  br label %798, !dbg !3784

332:                                              ; preds = %325
  %333 = load i32, i32* @tunable_write_enable, align 4, !dbg !3785
  %334 = icmp ne i32 %333, 0, !dbg !3785
  br i1 %334, label %335, label %350, !dbg !3787

335:                                              ; preds = %332
  %336 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !3788
  %337 = icmp ne i32 %336, 0, !dbg !3788
  br i1 %337, label %343, label %338, !dbg !3789

338:                                              ; preds = %335
  %339 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3790
  %340 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %339, i32 0, i32 12, !dbg !3791
  %341 = load i32, i32* %340, align 8, !dbg !3791
  %342 = icmp ne i32 %341, 0, !dbg !3790
  br i1 %342, label %350, label %343, !dbg !3792

343:                                              ; preds = %338, %335
  %344 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3793
  %345 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %344, i32 0, i32 40, !dbg !3794
  %346 = call i32 @str_equal_text(%struct.mystr* %345, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0)), !dbg !3795
  %347 = icmp ne i32 %346, 0, !dbg !3795
  br i1 %347, label %348, label %350, !dbg !3796

348:                                              ; preds = %343
  %349 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3797
  call void @handle_rnfr(%struct.vsf_session* %349), !dbg !3799
  br label %797, !dbg !3800

350:                                              ; preds = %343, %338, %332
  %351 = load i32, i32* @tunable_write_enable, align 4, !dbg !3801
  %352 = icmp ne i32 %351, 0, !dbg !3801
  br i1 %352, label %353, label %368, !dbg !3803

353:                                              ; preds = %350
  %354 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !3804
  %355 = icmp ne i32 %354, 0, !dbg !3804
  br i1 %355, label %361, label %356, !dbg !3805

356:                                              ; preds = %353
  %357 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3806
  %358 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %357, i32 0, i32 12, !dbg !3807
  %359 = load i32, i32* %358, align 8, !dbg !3807
  %360 = icmp ne i32 %359, 0, !dbg !3806
  br i1 %360, label %368, label %361, !dbg !3808

361:                                              ; preds = %356, %353
  %362 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3809
  %363 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %362, i32 0, i32 40, !dbg !3810
  %364 = call i32 @str_equal_text(%struct.mystr* %363, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0)), !dbg !3811
  %365 = icmp ne i32 %364, 0, !dbg !3811
  br i1 %365, label %366, label %368, !dbg !3812

366:                                              ; preds = %361
  %367 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3813
  call void @handle_rnto(%struct.vsf_session* %367), !dbg !3815
  br label %796, !dbg !3816

368:                                              ; preds = %361, %356, %350
  %369 = load i32, i32* @tunable_dirlist_enable, align 4, !dbg !3817
  %370 = icmp ne i32 %369, 0, !dbg !3817
  br i1 %370, label %371, label %378, !dbg !3819

371:                                              ; preds = %368
  %372 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3820
  %373 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %372, i32 0, i32 40, !dbg !3821
  %374 = call i32 @str_equal_text(%struct.mystr* %373, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0)), !dbg !3822
  %375 = icmp ne i32 %374, 0, !dbg !3822
  br i1 %375, label %376, label %378, !dbg !3823

376:                                              ; preds = %371
  %377 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3824
  call void @handle_nlst(%struct.vsf_session* %377), !dbg !3826
  br label %795, !dbg !3827

378:                                              ; preds = %371, %368
  %379 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3828
  %380 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %379, i32 0, i32 40, !dbg !3830
  %381 = call i32 @str_equal_text(%struct.mystr* %380, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0)), !dbg !3831
  %382 = icmp ne i32 %381, 0, !dbg !3831
  br i1 %382, label %383, label %385, !dbg !3832

383:                                              ; preds = %378
  %384 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3833
  call void @handle_size(%struct.vsf_session* %384), !dbg !3835
  br label %794, !dbg !3836

385:                                              ; preds = %378
  %386 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3837
  %387 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %386, i32 0, i32 12, !dbg !3839
  %388 = load i32, i32* %387, align 8, !dbg !3839
  %389 = icmp ne i32 %388, 0, !dbg !3837
  br i1 %389, label %397, label %390, !dbg !3840

390:                                              ; preds = %385
  %391 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3841
  %392 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %391, i32 0, i32 40, !dbg !3842
  %393 = call i32 @str_equal_text(%struct.mystr* %392, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0)), !dbg !3843
  %394 = icmp ne i32 %393, 0, !dbg !3843
  br i1 %394, label %395, label %397, !dbg !3844

395:                                              ; preds = %390
  %396 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3845
  call void @handle_site(%struct.vsf_session* %396), !dbg !3847
  br label %793, !dbg !3848

397:                                              ; preds = %390, %385
  %398 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3849
  %399 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %398, i32 0, i32 40, !dbg !3851
  %400 = call i32 @str_equal_text(%struct.mystr* %399, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0)), !dbg !3852
  %401 = icmp ne i32 %400, 0, !dbg !3852
  br i1 %401, label %407, label %402, !dbg !3853

402:                                              ; preds = %397
  %403 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3854
  %404 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %403, i32 0, i32 40, !dbg !3855
  %405 = call i32 @str_equal_text(%struct.mystr* %404, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0)), !dbg !3856
  %406 = icmp ne i32 %405, 0, !dbg !3856
  br i1 %406, label %407, label %409, !dbg !3857

407:                                              ; preds = %402, %397
  %408 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3858
  call void @vsf_cmdio_write(%struct.vsf_session* %408, i32 225, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i32 0, i32 0)), !dbg !3860
  br label %792, !dbg !3861

409:                                              ; preds = %402
  %410 = load i32, i32* @tunable_write_enable, align 4, !dbg !3862
  %411 = icmp ne i32 %410, 0, !dbg !3862
  br i1 %411, label %412, label %427, !dbg !3864

412:                                              ; preds = %409
  %413 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !3865
  %414 = icmp ne i32 %413, 0, !dbg !3865
  br i1 %414, label %420, label %415, !dbg !3866

415:                                              ; preds = %412
  %416 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3867
  %417 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %416, i32 0, i32 12, !dbg !3868
  %418 = load i32, i32* %417, align 8, !dbg !3868
  %419 = icmp ne i32 %418, 0, !dbg !3867
  br i1 %419, label %427, label %420, !dbg !3869

420:                                              ; preds = %415, %412
  %421 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3870
  %422 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %421, i32 0, i32 40, !dbg !3871
  %423 = call i32 @str_equal_text(%struct.mystr* %422, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0)), !dbg !3872
  %424 = icmp ne i32 %423, 0, !dbg !3872
  br i1 %424, label %425, label %427, !dbg !3873

425:                                              ; preds = %420
  %426 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3874
  call void @handle_appe(%struct.vsf_session* %426), !dbg !3876
  br label %791, !dbg !3877

427:                                              ; preds = %420, %415, %409
  %428 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3878
  %429 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %428, i32 0, i32 40, !dbg !3880
  %430 = call i32 @str_equal_text(%struct.mystr* %429, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0)), !dbg !3881
  %431 = icmp ne i32 %430, 0, !dbg !3881
  br i1 %431, label %432, label %434, !dbg !3882

432:                                              ; preds = %427
  %433 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3883
  call void @handle_mdtm(%struct.vsf_session* %433), !dbg !3885
  br label %790, !dbg !3886

434:                                              ; preds = %427
  %435 = load i32, i32* @tunable_port_enable, align 4, !dbg !3887
  %436 = icmp ne i32 %435, 0, !dbg !3887
  br i1 %436, label %437, label %444, !dbg !3889

437:                                              ; preds = %434
  %438 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3890
  %439 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %438, i32 0, i32 40, !dbg !3891
  %440 = call i32 @str_equal_text(%struct.mystr* %439, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0)), !dbg !3892
  %441 = icmp ne i32 %440, 0, !dbg !3892
  br i1 %441, label %442, label %444, !dbg !3893

442:                                              ; preds = %437
  %443 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3894
  call void @handle_eprt(%struct.vsf_session* %443), !dbg !3896
  br label %789, !dbg !3897

444:                                              ; preds = %437, %434
  %445 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3898
  %446 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %445, i32 0, i32 40, !dbg !3900
  %447 = call i32 @str_equal_text(%struct.mystr* %446, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0)), !dbg !3901
  %448 = icmp ne i32 %447, 0, !dbg !3901
  br i1 %448, label %449, label %461, !dbg !3902

449:                                              ; preds = %444
  %450 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3903
  %451 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %450, i32 0, i32 41, !dbg !3905
  call void @str_upper(%struct.mystr* %451), !dbg !3906
  %452 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3907
  %453 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %452, i32 0, i32 41, !dbg !3909
  %454 = call i32 @str_equal_text(%struct.mystr* %453, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0)), !dbg !3910
  %455 = icmp ne i32 %454, 0, !dbg !3910
  br i1 %455, label %456, label %458, !dbg !3911

456:                                              ; preds = %449
  %457 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3912
  call void @vsf_cmdio_write(%struct.vsf_session* %457, i32 200, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0)), !dbg !3914
  br label %460, !dbg !3915

458:                                              ; preds = %449
  %459 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3916
  call void @vsf_cmdio_write(%struct.vsf_session* %459, i32 504, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0)), !dbg !3918
  br label %460

460:                                              ; preds = %458, %456
  br label %788, !dbg !3919

461:                                              ; preds = %444
  %462 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3920
  %463 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %462, i32 0, i32 40, !dbg !3922
  %464 = call i32 @str_equal_text(%struct.mystr* %463, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0)), !dbg !3923
  %465 = icmp ne i32 %464, 0, !dbg !3923
  br i1 %465, label %466, label %478, !dbg !3924

466:                                              ; preds = %461
  %467 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3925
  %468 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %467, i32 0, i32 41, !dbg !3927
  call void @str_upper(%struct.mystr* %468), !dbg !3928
  %469 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3929
  %470 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %469, i32 0, i32 41, !dbg !3931
  %471 = call i32 @str_equal_text(%struct.mystr* %470, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i32 0, i32 0)), !dbg !3932
  %472 = icmp ne i32 %471, 0, !dbg !3932
  br i1 %472, label %473, label %475, !dbg !3933

473:                                              ; preds = %466
  %474 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3934
  call void @vsf_cmdio_write(%struct.vsf_session* %474, i32 200, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0)), !dbg !3936
  br label %477, !dbg !3937

475:                                              ; preds = %466
  %476 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3938
  call void @vsf_cmdio_write(%struct.vsf_session* %476, i32 504, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i32 0, i32 0)), !dbg !3940
  br label %477

477:                                              ; preds = %475, %473
  br label %787, !dbg !3941

478:                                              ; preds = %461
  %479 = load i32, i32* @tunable_write_enable, align 4, !dbg !3942
  %480 = icmp ne i32 %479, 0, !dbg !3942
  br i1 %480, label %481, label %496, !dbg !3944

481:                                              ; preds = %478
  %482 = load i32, i32* @tunable_anon_upload_enable, align 4, !dbg !3945
  %483 = icmp ne i32 %482, 0, !dbg !3945
  br i1 %483, label %489, label %484, !dbg !3946

484:                                              ; preds = %481
  %485 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3947
  %486 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %485, i32 0, i32 12, !dbg !3948
  %487 = load i32, i32* %486, align 8, !dbg !3948
  %488 = icmp ne i32 %487, 0, !dbg !3947
  br i1 %488, label %496, label %489, !dbg !3949

489:                                              ; preds = %484, %481
  %490 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3950
  %491 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %490, i32 0, i32 40, !dbg !3951
  %492 = call i32 @str_equal_text(%struct.mystr* %491, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0)), !dbg !3952
  %493 = icmp ne i32 %492, 0, !dbg !3952
  br i1 %493, label %494, label %496, !dbg !3953

494:                                              ; preds = %489
  %495 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3954
  call void @handle_stou(%struct.vsf_session* %495), !dbg !3956
  br label %786, !dbg !3957

496:                                              ; preds = %489, %484, %478
  %497 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3958
  %498 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %497, i32 0, i32 40, !dbg !3960
  %499 = call i32 @str_equal_text(%struct.mystr* %498, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53.95, i32 0, i32 0)), !dbg !3961
  %500 = icmp ne i32 %499, 0, !dbg !3961
  br i1 %500, label %501, label %503, !dbg !3962

501:                                              ; preds = %496
  %502 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3963
  call void @vsf_cmdio_write(%struct.vsf_session* %502, i32 202, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i32 0, i32 0)), !dbg !3965
  br label %785, !dbg !3966

503:                                              ; preds = %496
  %504 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3967
  %505 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %504, i32 0, i32 40, !dbg !3969
  %506 = call i32 @str_equal_text(%struct.mystr* %505, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0)), !dbg !3970
  %507 = icmp ne i32 %506, 0, !dbg !3970
  br i1 %507, label %508, label %510, !dbg !3971

508:                                              ; preds = %503
  %509 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3972
  call void @vsf_cmdio_write(%struct.vsf_session* %509, i32 502, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.56, i32 0, i32 0)), !dbg !3974
  br label %784, !dbg !3975

510:                                              ; preds = %503
  %511 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3976
  %512 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %511, i32 0, i32 40, !dbg !3978
  %513 = call i32 @str_equal_text(%struct.mystr* %512, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0)), !dbg !3979
  %514 = icmp ne i32 %513, 0, !dbg !3979
  br i1 %514, label %515, label %517, !dbg !3980

515:                                              ; preds = %510
  %516 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3981
  call void @vsf_cmdio_write(%struct.vsf_session* %516, i32 502, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.58, i32 0, i32 0)), !dbg !3983
  br label %783, !dbg !3984

517:                                              ; preds = %510
  %518 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3985
  %519 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %518, i32 0, i32 40, !dbg !3987
  %520 = call i32 @str_equal_text(%struct.mystr* %519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0)), !dbg !3988
  %521 = icmp ne i32 %520, 0, !dbg !3988
  br i1 %521, label %522, label %524, !dbg !3989

522:                                              ; preds = %517
  %523 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3990
  call void @vsf_cmdio_write(%struct.vsf_session* %523, i32 502, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i32 0, i32 0)), !dbg !3992
  br label %782, !dbg !3993

524:                                              ; preds = %517
  %525 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3994
  %526 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %525, i32 0, i32 40, !dbg !3996
  %527 = call i32 @str_equal_text(%struct.mystr* %526, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0)), !dbg !3997
  %528 = icmp ne i32 %527, 0, !dbg !3997
  br i1 %528, label %529, label %531, !dbg !3998

529:                                              ; preds = %524
  %530 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !3999
  call void @handle_feat(%struct.vsf_session* %530), !dbg !4001
  br label %781, !dbg !4002

531:                                              ; preds = %524
  %532 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4003
  %533 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %532, i32 0, i32 40, !dbg !4005
  %534 = call i32 @str_equal_text(%struct.mystr* %533, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0)), !dbg !4006
  %535 = icmp ne i32 %534, 0, !dbg !4006
  br i1 %535, label %536, label %538, !dbg !4007

536:                                              ; preds = %531
  %537 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4008
  call void @handle_opts(%struct.vsf_session* %537), !dbg !4010
  br label %780, !dbg !4011

538:                                              ; preds = %531
  %539 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4012
  %540 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %539, i32 0, i32 40, !dbg !4014
  %541 = call i32 @str_equal_text(%struct.mystr* %540, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0)), !dbg !4015
  %542 = icmp ne i32 %541, 0, !dbg !4015
  br i1 %542, label %543, label %550, !dbg !4016

543:                                              ; preds = %538
  %544 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4017
  %545 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %544, i32 0, i32 41, !dbg !4018
  %546 = call i32 @str_isempty(%struct.mystr* %545), !dbg !4019
  %547 = icmp ne i32 %546, 0, !dbg !4019
  br i1 %547, label %548, label %550, !dbg !4020

548:                                              ; preds = %543
  %549 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4021
  call void @handle_stat(%struct.vsf_session* %549), !dbg !4023
  br label %779, !dbg !4024

550:                                              ; preds = %543, %538
  %551 = load i32, i32* @tunable_dirlist_enable, align 4, !dbg !4025
  %552 = icmp ne i32 %551, 0, !dbg !4025
  br i1 %552, label %553, label %560, !dbg !4027

553:                                              ; preds = %550
  %554 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4028
  %555 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %554, i32 0, i32 40, !dbg !4029
  %556 = call i32 @str_equal_text(%struct.mystr* %555, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0)), !dbg !4030
  %557 = icmp ne i32 %556, 0, !dbg !4030
  br i1 %557, label %558, label %560, !dbg !4031

558:                                              ; preds = %553
  %559 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4032
  call void @handle_stat_file(%struct.vsf_session* %559), !dbg !4034
  br label %778, !dbg !4035

560:                                              ; preds = %553, %550
  %561 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !4036
  %562 = icmp ne i32 %561, 0, !dbg !4036
  br i1 %562, label %563, label %570, !dbg !4038

563:                                              ; preds = %560
  %564 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4039
  %565 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %564, i32 0, i32 40, !dbg !4040
  %566 = call i32 @str_equal_text(%struct.mystr* %565, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64.96, i32 0, i32 0)), !dbg !4041
  %567 = icmp ne i32 %566, 0, !dbg !4041
  br i1 %567, label %568, label %570, !dbg !4042

568:                                              ; preds = %563
  %569 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4043
  call void @handle_pbsz(%struct.vsf_session* %569), !dbg !4045
  br label %777, !dbg !4046

570:                                              ; preds = %563, %560
  %571 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !4047
  %572 = icmp ne i32 %571, 0, !dbg !4047
  br i1 %572, label %573, label %580, !dbg !4049

573:                                              ; preds = %570
  %574 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4050
  %575 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %574, i32 0, i32 40, !dbg !4051
  %576 = call i32 @str_equal_text(%struct.mystr* %575, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)), !dbg !4052
  %577 = icmp ne i32 %576, 0, !dbg !4052
  br i1 %577, label %578, label %580, !dbg !4053

578:                                              ; preds = %573
  %579 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4054
  call void @handle_prot(%struct.vsf_session* %579), !dbg !4056
  br label %776, !dbg !4057

580:                                              ; preds = %573, %570
  %581 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4058
  %582 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %581, i32 0, i32 40, !dbg !4060
  %583 = call i32 @str_equal_text(%struct.mystr* %582, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0)), !dbg !4061
  %584 = icmp ne i32 %583, 0, !dbg !4061
  br i1 %584, label %585, label %587, !dbg !4062

585:                                              ; preds = %580
  %586 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4063
  call void @handle_logged_in_user(%struct.vsf_session* %586), !dbg !4065
  br label %775, !dbg !4066

587:                                              ; preds = %580
  %588 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4067
  %589 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %588, i32 0, i32 40, !dbg !4069
  %590 = call i32 @str_equal_text(%struct.mystr* %589, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0)), !dbg !4070
  %591 = icmp ne i32 %590, 0, !dbg !4070
  br i1 %591, label %592, label %594, !dbg !4071

592:                                              ; preds = %587
  %593 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4072
  call void @handle_logged_in_pass(%struct.vsf_session* %593), !dbg !4074
  br label %774, !dbg !4075

594:                                              ; preds = %587
  %595 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4076
  %596 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %595, i32 0, i32 40, !dbg !4078
  %597 = call i32 @str_equal_text(%struct.mystr* %596, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.76, i32 0, i32 0)), !dbg !4079
  %598 = icmp ne i32 %597, 0, !dbg !4079
  br i1 %598, label %729, label %599, !dbg !4080

599:                                              ; preds = %594
  %600 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4081
  %601 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %600, i32 0, i32 40, !dbg !4082
  %602 = call i32 @str_equal_text(%struct.mystr* %601, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.87, i32 0, i32 0)), !dbg !4083
  %603 = icmp ne i32 %602, 0, !dbg !4083
  br i1 %603, label %729, label %604, !dbg !4084

604:                                              ; preds = %599
  %605 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4085
  %606 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %605, i32 0, i32 40, !dbg !4086
  %607 = call i32 @str_equal_text(%struct.mystr* %606, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.88, i32 0, i32 0)), !dbg !4087
  %608 = icmp ne i32 %607, 0, !dbg !4087
  br i1 %608, label %729, label %609, !dbg !4088

609:                                              ; preds = %604
  %610 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4089
  %611 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %610, i32 0, i32 40, !dbg !4090
  %612 = call i32 @str_equal_text(%struct.mystr* %611, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.89, i32 0, i32 0)), !dbg !4091
  %613 = icmp ne i32 %612, 0, !dbg !4091
  br i1 %613, label %729, label %614, !dbg !4092

614:                                              ; preds = %609
  %615 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4093
  %616 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %615, i32 0, i32 40, !dbg !4094
  %617 = call i32 @str_equal_text(%struct.mystr* %616, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.90, i32 0, i32 0)), !dbg !4095
  %618 = icmp ne i32 %617, 0, !dbg !4095
  br i1 %618, label %729, label %619, !dbg !4096

619:                                              ; preds = %614
  %620 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4097
  %621 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %620, i32 0, i32 40, !dbg !4098
  %622 = call i32 @str_equal_text(%struct.mystr* %621, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29.91, i32 0, i32 0)), !dbg !4099
  %623 = icmp ne i32 %622, 0, !dbg !4099
  br i1 %623, label %729, label %624, !dbg !4100

624:                                              ; preds = %619
  %625 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4101
  %626 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %625, i32 0, i32 40, !dbg !4102
  %627 = call i32 @str_equal_text(%struct.mystr* %626, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.92, i32 0, i32 0)), !dbg !4103
  %628 = icmp ne i32 %627, 0, !dbg !4103
  br i1 %628, label %729, label %629, !dbg !4104

629:                                              ; preds = %624
  %630 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4105
  %631 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %630, i32 0, i32 40, !dbg !4106
  %632 = call i32 @str_equal_text(%struct.mystr* %631, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.93, i32 0, i32 0)), !dbg !4107
  %633 = icmp ne i32 %632, 0, !dbg !4107
  br i1 %633, label %729, label %634, !dbg !4108

634:                                              ; preds = %629
  %635 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4109
  %636 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %635, i32 0, i32 40, !dbg !4110
  %637 = call i32 @str_equal_text(%struct.mystr* %636, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0)), !dbg !4111
  %638 = icmp ne i32 %637, 0, !dbg !4111
  br i1 %638, label %729, label %639, !dbg !4112

639:                                              ; preds = %634
  %640 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4113
  %641 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %640, i32 0, i32 40, !dbg !4114
  %642 = call i32 @str_equal_text(%struct.mystr* %641, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0)), !dbg !4115
  %643 = icmp ne i32 %642, 0, !dbg !4115
  br i1 %643, label %729, label %644, !dbg !4116

644:                                              ; preds = %639
  %645 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4117
  %646 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %645, i32 0, i32 40, !dbg !4118
  %647 = call i32 @str_equal_text(%struct.mystr* %646, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0)), !dbg !4119
  %648 = icmp ne i32 %647, 0, !dbg !4119
  br i1 %648, label %729, label %649, !dbg !4120

649:                                              ; preds = %644
  %650 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4121
  %651 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %650, i32 0, i32 40, !dbg !4122
  %652 = call i32 @str_equal_text(%struct.mystr* %651, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0)), !dbg !4123
  %653 = icmp ne i32 %652, 0, !dbg !4123
  br i1 %653, label %729, label %654, !dbg !4124

654:                                              ; preds = %649
  %655 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4125
  %656 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %655, i32 0, i32 40, !dbg !4126
  %657 = call i32 @str_equal_text(%struct.mystr* %656, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.78, i32 0, i32 0)), !dbg !4127
  %658 = icmp ne i32 %657, 0, !dbg !4127
  br i1 %658, label %729, label %659, !dbg !4128

659:                                              ; preds = %654
  %660 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4129
  %661 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %660, i32 0, i32 40, !dbg !4130
  %662 = call i32 @str_equal_text(%struct.mystr* %661, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0)), !dbg !4131
  %663 = icmp ne i32 %662, 0, !dbg !4131
  br i1 %663, label %729, label %664, !dbg !4132

664:                                              ; preds = %659
  %665 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4133
  %666 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %665, i32 0, i32 40, !dbg !4134
  %667 = call i32 @str_equal_text(%struct.mystr* %666, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.79, i32 0, i32 0)), !dbg !4135
  %668 = icmp ne i32 %667, 0, !dbg !4135
  br i1 %668, label %729, label %669, !dbg !4136

669:                                              ; preds = %664
  %670 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4137
  %671 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %670, i32 0, i32 40, !dbg !4138
  %672 = call i32 @str_equal_text(%struct.mystr* %671, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.85, i32 0, i32 0)), !dbg !4139
  %673 = icmp ne i32 %672, 0, !dbg !4139
  br i1 %673, label %729, label %674, !dbg !4140

674:                                              ; preds = %669
  %675 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4141
  %676 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %675, i32 0, i32 40, !dbg !4142
  %677 = call i32 @str_equal_text(%struct.mystr* %676, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0)), !dbg !4143
  %678 = icmp ne i32 %677, 0, !dbg !4143
  br i1 %678, label %729, label %679, !dbg !4144

679:                                              ; preds = %674
  %680 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4145
  %681 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %680, i32 0, i32 40, !dbg !4146
  %682 = call i32 @str_equal_text(%struct.mystr* %681, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0)), !dbg !4147
  %683 = icmp ne i32 %682, 0, !dbg !4147
  br i1 %683, label %729, label %684, !dbg !4148

684:                                              ; preds = %679
  %685 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4149
  %686 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %685, i32 0, i32 40, !dbg !4150
  %687 = call i32 @str_equal_text(%struct.mystr* %686, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53.95, i32 0, i32 0)), !dbg !4151
  %688 = icmp ne i32 %687, 0, !dbg !4151
  br i1 %688, label %729, label %689, !dbg !4152

689:                                              ; preds = %684
  %690 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4153
  %691 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %690, i32 0, i32 40, !dbg !4154
  %692 = call i32 @str_equal_text(%struct.mystr* %691, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0)), !dbg !4155
  %693 = icmp ne i32 %692, 0, !dbg !4155
  br i1 %693, label %729, label %694, !dbg !4156

694:                                              ; preds = %689
  %695 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4157
  %696 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %695, i32 0, i32 40, !dbg !4158
  %697 = call i32 @str_equal_text(%struct.mystr* %696, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0)), !dbg !4159
  %698 = icmp ne i32 %697, 0, !dbg !4159
  br i1 %698, label %729, label %699, !dbg !4160

699:                                              ; preds = %694
  %700 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4161
  %701 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %700, i32 0, i32 40, !dbg !4162
  %702 = call i32 @str_equal_text(%struct.mystr* %701, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0)), !dbg !4163
  %703 = icmp ne i32 %702, 0, !dbg !4163
  br i1 %703, label %729, label %704, !dbg !4164

704:                                              ; preds = %699
  %705 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4165
  %706 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %705, i32 0, i32 40, !dbg !4166
  %707 = call i32 @str_equal_text(%struct.mystr* %706, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0)), !dbg !4167
  %708 = icmp ne i32 %707, 0, !dbg !4167
  br i1 %708, label %729, label %709, !dbg !4168

709:                                              ; preds = %704
  %710 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4169
  %711 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %710, i32 0, i32 40, !dbg !4170
  %712 = call i32 @str_equal_text(%struct.mystr* %711, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0)), !dbg !4171
  %713 = icmp ne i32 %712, 0, !dbg !4171
  br i1 %713, label %729, label %714, !dbg !4172

714:                                              ; preds = %709
  %715 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4173
  %716 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %715, i32 0, i32 40, !dbg !4174
  %717 = call i32 @str_equal_text(%struct.mystr* %716, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0)), !dbg !4175
  %718 = icmp ne i32 %717, 0, !dbg !4175
  br i1 %718, label %729, label %719, !dbg !4176

719:                                              ; preds = %714
  %720 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4177
  %721 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %720, i32 0, i32 40, !dbg !4178
  %722 = call i32 @str_equal_text(%struct.mystr* %721, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64.96, i32 0, i32 0)), !dbg !4179
  %723 = icmp ne i32 %722, 0, !dbg !4179
  br i1 %723, label %729, label %724, !dbg !4180

724:                                              ; preds = %719
  %725 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4181
  %726 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %725, i32 0, i32 40, !dbg !4182
  %727 = call i32 @str_equal_text(%struct.mystr* %726, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)), !dbg !4183
  %728 = icmp ne i32 %727, 0, !dbg !4183
  br i1 %728, label %729, label %731, !dbg !4184

729:                                              ; preds = %724, %719, %714, %709, %704, %699, %694, %689, %684, %679, %674, %669, %664, %659, %654, %649, %644, %639, %634, %629, %624, %619, %614, %609, %604, %599, %594
  %730 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4185
  call void @vsf_cmdio_write(%struct.vsf_session* %730, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !4187
  br label %773, !dbg !4188

731:                                              ; preds = %724
  %732 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4189
  %733 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %732, i32 0, i32 40, !dbg !4191
  %734 = call i32 @str_isempty(%struct.mystr* %733), !dbg !4192
  %735 = icmp ne i32 %734, 0, !dbg !4192
  br i1 %735, label %736, label %742, !dbg !4193

736:                                              ; preds = %731
  %737 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4194
  %738 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %737, i32 0, i32 41, !dbg !4195
  %739 = call i32 @str_isempty(%struct.mystr* %738), !dbg !4196
  %740 = icmp ne i32 %739, 0, !dbg !4196
  br i1 %740, label %741, label %742, !dbg !4197

741:                                              ; preds = %736
  br label %772, !dbg !4198

742:                                              ; preds = %736, %731
  %743 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4200
  %744 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %743, i32 0, i32 40, !dbg !4202
  %745 = call i32 @str_equal_text(%struct.mystr* %744, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i32 0, i32 0)), !dbg !4203
  %746 = icmp ne i32 %745, 0, !dbg !4203
  br i1 %746, label %767, label %747, !dbg !4204

747:                                              ; preds = %742
  %748 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4205
  %749 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %748, i32 0, i32 40, !dbg !4206
  %750 = call i32 @str_equal_text(%struct.mystr* %749, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0)), !dbg !4207
  %751 = icmp ne i32 %750, 0, !dbg !4207
  br i1 %751, label %767, label %752, !dbg !4208

752:                                              ; preds = %747
  %753 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4209
  %754 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %753, i32 0, i32 40, !dbg !4210
  %755 = call i32 @str_equal_text(%struct.mystr* %754, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0)), !dbg !4211
  %756 = icmp ne i32 %755, 0, !dbg !4211
  br i1 %756, label %767, label %757, !dbg !4212

757:                                              ; preds = %752
  %758 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4213
  %759 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %758, i32 0, i32 40, !dbg !4214
  %760 = call i32 @str_equal_text(%struct.mystr* %759, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0)), !dbg !4215
  %761 = icmp ne i32 %760, 0, !dbg !4215
  br i1 %761, label %767, label %762, !dbg !4216

762:                                              ; preds = %757
  %763 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4217
  %764 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %763, i32 0, i32 40, !dbg !4218
  %765 = call i32 @str_equal_text(%struct.mystr* %764, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0)), !dbg !4219
  %766 = icmp ne i32 %765, 0, !dbg !4219
  br i1 %766, label %767, label %769, !dbg !4220

767:                                              ; preds = %762, %757, %752, %747, %742
  %768 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4221
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %768, i32 500, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.73, i32 0, i32 0), i32 1), !dbg !4223
  br label %771, !dbg !4224

769:                                              ; preds = %762
  %770 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4225
  call void @vsf_cmdio_write(%struct.vsf_session* %770, i32 500, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i32 0, i32 0)), !dbg !4227
  br label %771

771:                                              ; preds = %769, %767
  br label %772

772:                                              ; preds = %771, %741
  br label %773

773:                                              ; preds = %772, %729
  br label %774

774:                                              ; preds = %773, %592
  br label %775

775:                                              ; preds = %774, %585
  br label %776

776:                                              ; preds = %775, %578
  br label %777

777:                                              ; preds = %776, %568
  br label %778

778:                                              ; preds = %777, %558
  br label %779

779:                                              ; preds = %778, %548
  br label %780

780:                                              ; preds = %779, %536
  br label %781

781:                                              ; preds = %780, %529
  br label %782

782:                                              ; preds = %781, %522
  br label %783

783:                                              ; preds = %782, %515
  br label %784

784:                                              ; preds = %783, %508
  br label %785

785:                                              ; preds = %784, %501
  br label %786

786:                                              ; preds = %785, %494
  br label %787

787:                                              ; preds = %786, %477
  br label %788

788:                                              ; preds = %787, %460
  br label %789

789:                                              ; preds = %788, %442
  br label %790

790:                                              ; preds = %789, %432
  br label %791

791:                                              ; preds = %790, %425
  br label %792

792:                                              ; preds = %791, %407
  br label %793

793:                                              ; preds = %792, %395
  br label %794

794:                                              ; preds = %793, %383
  br label %795

795:                                              ; preds = %794, %376
  br label %796

796:                                              ; preds = %795, %366
  br label %797

797:                                              ; preds = %796, %348
  br label %798

798:                                              ; preds = %797, %330
  br label %799

799:                                              ; preds = %798, %323
  br label %800

800:                                              ; preds = %799, %305
  br label %801

801:                                              ; preds = %800, %282
  br label %802

802:                                              ; preds = %801, %259
  br label %803

803:                                              ; preds = %802, %241
  br label %804

804:                                              ; preds = %803, %226
  br label %805

805:                                              ; preds = %804, %219
  br label %806

806:                                              ; preds = %805, %209
  br label %807

807:                                              ; preds = %806, %202
  br label %808

808:                                              ; preds = %807, %195
  br label %809

809:                                              ; preds = %808, %188
  br label %810

810:                                              ; preds = %809, %178
  br label %811

811:                                              ; preds = %810, %168
  br label %812

812:                                              ; preds = %811, %148
  br label %813

813:                                              ; preds = %812, %136
  br label %814

814:                                              ; preds = %813, %124
  br label %815

815:                                              ; preds = %814, %112
  br label %816

816:                                              ; preds = %815, %105
  %817 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4228
  %818 = call i32 @vsf_log_entry_pending(%struct.vsf_session* %817), !dbg !4230
  %819 = icmp ne i32 %818, 0, !dbg !4230
  br i1 %819, label %820, label %822, !dbg !4231

820:                                              ; preds = %816
  %821 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4232
  call void @vsf_log_do_log(%struct.vsf_session* %821, i32 0), !dbg !4234
  br label %822, !dbg !4235

822:                                              ; preds = %820, %816
  %823 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4236
  %824 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %823, i32 0, i32 4, !dbg !4238
  %825 = load i32, i32* %824, align 4, !dbg !4238
  %826 = icmp ne i32 %825, 0, !dbg !4236
  br i1 %826, label %827, label %829, !dbg !4239

827:                                              ; preds = %822
  %828 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4240
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %828, i32 421, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.75, i32 0, i32 0), i32 1), !dbg !4242
  br label %829, !dbg !4243

829:                                              ; preds = %827, %822
  br label %42, !dbg !3456, !llvm.loop !4244

830:                                              ; No predecessors!
  ret void, !dbg !4246
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_http(%struct.vsf_session*) #0 !dbg !4247 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4248, metadata !DIExpression()), !dbg !4249
  %3 = load i32, i32* @tunable_download_enable, align 4, !dbg !4250
  %4 = icmp ne i32 %3, 0, !dbg !4250
  br i1 %4, label %6, label %5, !dbg !4252

5:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.188, i32 0, i32 0)), !dbg !4253
  br label %6, !dbg !4255

6:                                                ; preds = %5, %1
  br label %7, !dbg !4256, !llvm.loop !4257

7:                                                ; preds = %24, %6
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4259
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4261
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 40, !dbg !4262
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4263
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 41, !dbg !4264
  call void @vsf_cmdio_get_cmd_and_arg(%struct.vsf_session* %8, %struct.mystr* %10, %struct.mystr* %12, i32 1), !dbg !4265
  br label %13, !dbg !4266

13:                                               ; preds = %7
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4267
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 40, !dbg !4268
  %16 = call i32 @str_isempty(%struct.mystr* %15), !dbg !4269
  %17 = icmp ne i32 %16, 0, !dbg !4269
  br i1 %17, label %18, label %24, !dbg !4270

18:                                               ; preds = %13
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4271
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 41, !dbg !4272
  %21 = call i32 @str_isempty(%struct.mystr* %20), !dbg !4273
  %22 = icmp ne i32 %21, 0, !dbg !4274
  %23 = xor i1 %22, true, !dbg !4274
  br label %24, !dbg !4270

24:                                               ; preds = %18, %13
  %25 = phi i1 [ true, %13 ], [ %23, %18 ]
  br i1 %25, label %7, label %26, !dbg !4266, !llvm.loop !4257

26:                                               ; preds = %24
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4275
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.189, i32 0, i32 0)), !dbg !4276
  %28 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4277
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i32 0, i32 0)), !dbg !4278
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4279
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.191, i32 0, i32 0)), !dbg !4280
  %30 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4281
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %30, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.192, i32 0, i32 0)), !dbg !4282
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4283
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %31, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.193, i32 0, i32 0)), !dbg !4284
  %32 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4285
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 22, !dbg !4286
  %34 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4287
  %35 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %34, i32 0, i32 41, !dbg !4288
  call void @str_split_char(%struct.mystr* %33, %struct.mystr* %35, i8 signext 32), !dbg !4289
  %36 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4290
  %37 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %36, i32 0, i32 41, !dbg !4291
  %38 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4292
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 22, !dbg !4293
  call void @str_copy(%struct.mystr* %37, %struct.mystr* %39), !dbg !4294
  %40 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4295
  %41 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %40, i32 0, i32 22, !dbg !4296
  %42 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4297
  %43 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %42, i32 0, i32 40, !dbg !4298
  call void @str_split_char(%struct.mystr* %41, %struct.mystr* %43, i8 signext 46), !dbg !4299
  %44 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4300
  %45 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %44, i32 0, i32 40, !dbg !4301
  call void @str_upper(%struct.mystr* %45), !dbg !4302
  %46 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4303
  %47 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %46, i32 0, i32 40, !dbg !4305
  %48 = call i32 @str_equal_text(%struct.mystr* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0)), !dbg !4306
  %49 = icmp ne i32 %48, 0, !dbg !4306
  br i1 %49, label %55, label %50, !dbg !4307

50:                                               ; preds = %26
  %51 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4308
  %52 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %51, i32 0, i32 40, !dbg !4309
  %53 = call i32 @str_equal_text(%struct.mystr* %52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.195, i32 0, i32 0)), !dbg !4310
  %54 = icmp ne i32 %53, 0, !dbg !4310
  br i1 %54, label %55, label %57, !dbg !4311

55:                                               ; preds = %50, %26
  %56 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4312
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %56, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.196, i32 0, i32 0)), !dbg !4314
  br label %59, !dbg !4315

57:                                               ; preds = %50
  %58 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4316
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %58, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.197, i32 0, i32 0)), !dbg !4318
  br label %59

59:                                               ; preds = %57, %55
  %60 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4319
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0)), !dbg !4320
  %61 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4321
  %62 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %61, i32 0, i32 17, !dbg !4322
  store i32 0, i32* %62, align 8, !dbg !4323
  %63 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4324
  %64 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %63, i32 0, i32 16, !dbg !4325
  store i64 0, i64* %64, align 8, !dbg !4326
  %65 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4327
  call void @handle_retr(%struct.vsf_session* %65, i32 1), !dbg !4328
  %66 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4329
  %67 = call i32 @vsf_log_entry_pending(%struct.vsf_session* %66), !dbg !4331
  %68 = icmp ne i32 %67, 0, !dbg !4331
  br i1 %68, label %69, label %71, !dbg !4332

69:                                               ; preds = %59
  %70 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4333
  call void @vsf_log_do_log(%struct.vsf_session* %70, i32 0), !dbg !4335
  br label %71, !dbg !4336

71:                                               ; preds = %69, %59
  call void @vsf_sysutil_exit(i32 0), !dbg !4337
  ret void, !dbg !4338
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_sigurg(i8*) #0 !dbg !4339 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.mystr, align 8
  %4 = alloca %struct.mystr, align 8
  %5 = alloca %struct.mystr, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.vsf_session*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4340, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.declare(metadata %struct.mystr* %3, metadata !4342, metadata !DIExpression()), !dbg !4343
  %8 = bitcast %struct.mystr* %3 to i8*, !dbg !4343
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false), !dbg !4343
  call void @llvm.dbg.declare(metadata %struct.mystr* %4, metadata !4344, metadata !DIExpression()), !dbg !4345
  %9 = bitcast %struct.mystr* %4 to i8*, !dbg !4345
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false), !dbg !4345
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !4346, metadata !DIExpression()), !dbg !4347
  %10 = bitcast %struct.mystr* %5 to i8*, !dbg !4347
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false), !dbg !4347
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4348, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %7, metadata !4350, metadata !DIExpression()), !dbg !4351
  %11 = load i8*, i8** %2, align 8, !dbg !4352
  %12 = bitcast i8* %11 to %struct.vsf_session*, !dbg !4353
  store %struct.vsf_session* %12, %struct.vsf_session** %7, align 8, !dbg !4351
  %13 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !4354
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 7, !dbg !4356
  %15 = load i32, i32* %14, align 8, !dbg !4356
  %16 = icmp eq i32 %15, -1, !dbg !4357
  br i1 %16, label %17, label %18, !dbg !4358

17:                                               ; preds = %1
  br label %38, !dbg !4359

18:                                               ; preds = %1
  %19 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !4361
  call void @vsf_cmdio_get_cmd_and_arg(%struct.vsf_session* %19, %struct.mystr* %3, %struct.mystr* %4, i32 0), !dbg !4362
  %20 = call i32 @str_getlen(%struct.mystr* %3), !dbg !4363
  store i32 %20, i32* %6, align 4, !dbg !4364
  %21 = load i32, i32* %6, align 4, !dbg !4365
  %22 = icmp uge i32 %21, 4, !dbg !4367
  br i1 %22, label %23, label %26, !dbg !4368

23:                                               ; preds = %18
  %24 = load i32, i32* %6, align 4, !dbg !4369
  %25 = sub i32 %24, 4, !dbg !4371
  call void @str_right(%struct.mystr* %3, %struct.mystr* %5, i32 %25), !dbg !4372
  br label %26, !dbg !4373

26:                                               ; preds = %23, %18
  %27 = call i32 @str_equal_text(%struct.mystr* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0)), !dbg !4374
  %28 = icmp ne i32 %27, 0, !dbg !4374
  br i1 %28, label %29, label %35, !dbg !4376

29:                                               ; preds = %26
  %30 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !4377
  %31 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %30, i32 0, i32 19, !dbg !4379
  store i32 1, i32* %31, align 8, !dbg !4380
  %32 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !4381
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 7, !dbg !4382
  %34 = load i32, i32* %33, align 8, !dbg !4382
  call void @vsf_sysutil_shutdown_failok(i32 %34), !dbg !4383
  br label %37, !dbg !4384

35:                                               ; preds = %26
  %36 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !4385
  call void @vsf_cmdio_write(%struct.vsf_session* %36, i32 500, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i32 0, i32 0)), !dbg !4387
  br label %37

37:                                               ; preds = %35, %29
  call void @str_free(%struct.mystr* %3), !dbg !4388
  call void @str_free(%struct.mystr* %4), !dbg !4389
  call void @str_free(%struct.mystr* %5), !dbg !4390
  br label %38, !dbg !4391

38:                                               ; preds = %37, %17
  ret void, !dbg !4391
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_pwd(%struct.vsf_session*) #0 !dbg !235 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4392, metadata !DIExpression()), !dbg !4393
  call void @str_getcwd(%struct.mystr* @handle_pwd.s_cwd_buf_mangle_str), !dbg !4394
  call void @str_replace_text(%struct.mystr* @handle_pwd.s_cwd_buf_mangle_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0)), !dbg !4395
  call void @str_alloc_text(%struct.mystr* @handle_pwd.s_pwd_res_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0)), !dbg !4396
  call void @str_append_str(%struct.mystr* @handle_pwd.s_pwd_res_str, %struct.mystr* @handle_pwd.s_cwd_buf_mangle_str), !dbg !4397
  call void @str_append_text(%struct.mystr* @handle_pwd.s_pwd_res_str, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i32 0, i32 0)), !dbg !4398
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4399
  call void @vsf_cmdio_write_str(%struct.vsf_session* %3, i32 257, %struct.mystr* @handle_pwd.s_pwd_res_str), !dbg !4400
  ret void, !dbg !4401
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_cwd(%struct.vsf_session*) #0 !dbg !4402 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4405, metadata !DIExpression()), !dbg !4406
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4407
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 41, !dbg !4408
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4409
  call void @resolve_tilde(%struct.mystr* %5, %struct.vsf_session* %6), !dbg !4410
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4411
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 41, !dbg !4413
  %9 = call i32 @vsf_access_check_file(%struct.mystr* %8), !dbg !4414
  %10 = icmp ne i32 %9, 0, !dbg !4414
  br i1 %10, label %13, label %11, !dbg !4415

11:                                               ; preds = %1
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4416
  call void @vsf_cmdio_write(%struct.vsf_session* %12, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !4418
  br label %24, !dbg !4419

13:                                               ; preds = %1
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4420
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 41, !dbg !4421
  %16 = call i32 @str_chdir(%struct.mystr* %15), !dbg !4422
  store i32 %16, i32* %3, align 4, !dbg !4423
  %17 = load i32, i32* %3, align 4, !dbg !4424
  %18 = icmp eq i32 %17, 0, !dbg !4426
  br i1 %18, label %19, label %22, !dbg !4427

19:                                               ; preds = %13
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4428
  call void @vsf_banner_dir_changed(%struct.vsf_session* %20, i32 250), !dbg !4430
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4431
  call void @vsf_cmdio_write(%struct.vsf_session* %21, i32 250, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.79, i32 0, i32 0)), !dbg !4432
  br label %24, !dbg !4433

22:                                               ; preds = %13
  %23 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4434
  call void @vsf_cmdio_write(%struct.vsf_session* %23, i32 550, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80, i32 0, i32 0)), !dbg !4436
  br label %24

24:                                               ; preds = %11, %22, %19
  ret void, !dbg !4437
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_cdup(%struct.vsf_session*) #0 !dbg !4438 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4439, metadata !DIExpression()), !dbg !4440
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4441
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 41, !dbg !4442
  call void @str_alloc_text(%struct.mystr* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0)), !dbg !4443
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4444
  call void @handle_cwd(%struct.vsf_session* %5), !dbg !4445
  ret void, !dbg !4446
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_pasv(%struct.vsf_session*, i32) #0 !dbg !248 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !4447, metadata !DIExpression()), !dbg !4448
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4449, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.declare(metadata i16* %5, metadata !4451, metadata !DIExpression()), !dbg !4452
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4453, metadata !DIExpression()), !dbg !4454
  %9 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4455
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 0, !dbg !4456
  %11 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %10, align 8, !dbg !4456
  %12 = call i32 @vsf_sysutil_sockaddr_is_ipv6(%struct.vsf_sysutil_sockaddr* %11), !dbg !4457
  store i32 %12, i32* %6, align 4, !dbg !4454
  %13 = load i32, i32* %4, align 4, !dbg !4458
  %14 = icmp ne i32 %13, 0, !dbg !4458
  br i1 %14, label %15, label %50, !dbg !4460

15:                                               ; preds = %2
  %16 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4461
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 41, !dbg !4462
  %18 = call i32 @str_isempty(%struct.mystr* %17), !dbg !4463
  %19 = icmp ne i32 %18, 0, !dbg !4463
  br i1 %19, label %50, label %20, !dbg !4464

20:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4465, metadata !DIExpression()), !dbg !4467
  %21 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4468
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 41, !dbg !4469
  call void @str_upper(%struct.mystr* %22), !dbg !4470
  %23 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4471
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 41, !dbg !4473
  %25 = call i32 @str_equal_text(%struct.mystr* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i32 0, i32 0)), !dbg !4474
  %26 = icmp ne i32 %25, 0, !dbg !4474
  br i1 %26, label %27, label %31, !dbg !4475

27:                                               ; preds = %20
  %28 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4476
  %29 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %28, i32 0, i32 20, !dbg !4478
  store i32 1, i32* %29, align 4, !dbg !4479
  %30 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4480
  call void @vsf_cmdio_write(%struct.vsf_session* %30, i32 200, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0)), !dbg !4481
  br label %108, !dbg !4482

31:                                               ; preds = %20
  %32 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4483
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 41, !dbg !4484
  %34 = call i8* @str_getbuf(%struct.mystr* %33), !dbg !4485
  %35 = call i32 @vsf_sysutil_atoi(i8* %34), !dbg !4486
  store i32 %35, i32* %7, align 4, !dbg !4487
  %36 = load i32, i32* %7, align 4, !dbg !4488
  %37 = icmp slt i32 %36, 1, !dbg !4490
  br i1 %37, label %47, label %38, !dbg !4491

38:                                               ; preds = %31
  %39 = load i32, i32* %7, align 4, !dbg !4492
  %40 = icmp sgt i32 %39, 2, !dbg !4493
  br i1 %40, label %47, label %41, !dbg !4494

41:                                               ; preds = %38
  %42 = load i32, i32* %6, align 4, !dbg !4495
  %43 = icmp ne i32 %42, 0, !dbg !4495
  br i1 %43, label %49, label %44, !dbg !4496

44:                                               ; preds = %41
  %45 = load i32, i32* %7, align 4, !dbg !4497
  %46 = icmp eq i32 %45, 2, !dbg !4498
  br i1 %46, label %47, label %49, !dbg !4499

47:                                               ; preds = %44, %38, %31
  %48 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4500
  call void @vsf_cmdio_write(%struct.vsf_session* %48, i32 522, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.84, i32 0, i32 0)), !dbg !4502
  br label %108, !dbg !4503

49:                                               ; preds = %44, %41
  br label %50, !dbg !4504

50:                                               ; preds = %49, %15, %2
  %51 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4505
  call void @pasv_cleanup(%struct.vsf_session* %51), !dbg !4506
  %52 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4507
  call void @port_cleanup(%struct.vsf_session* %52), !dbg !4508
  %53 = load i32, i32* @tunable_one_process_model, align 4, !dbg !4509
  %54 = icmp ne i32 %53, 0, !dbg !4509
  br i1 %54, label %55, label %58, !dbg !4511

55:                                               ; preds = %50
  %56 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4512
  %57 = call zeroext i16 @vsf_one_process_listen(%struct.vsf_session* %56), !dbg !4514
  store i16 %57, i16* %5, align 2, !dbg !4515
  br label %61, !dbg !4516

58:                                               ; preds = %50
  %59 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4517
  %60 = call zeroext i16 @vsf_two_process_listen(%struct.vsf_session* %59), !dbg !4519
  store i16 %60, i16* %5, align 2, !dbg !4520
  br label %61

61:                                               ; preds = %58, %55
  %62 = load i32, i32* %4, align 4, !dbg !4521
  %63 = icmp ne i32 %62, 0, !dbg !4521
  br i1 %63, label %64, label %68, !dbg !4523

64:                                               ; preds = %61
  call void @str_alloc_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.85, i32 0, i32 0)), !dbg !4524
  %65 = load i16, i16* %5, align 2, !dbg !4526
  %66 = zext i16 %65 to i64, !dbg !4527
  call void @str_append_ulong(%struct.mystr* @handle_pasv.s_pasv_res_str, i64 %66), !dbg !4528
  call void @str_append_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i32 0, i32 0)), !dbg !4529
  %67 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4530
  call void @vsf_cmdio_write_str(%struct.vsf_session* %67, i32 229, %struct.mystr* @handle_pasv.s_pasv_res_str), !dbg !4531
  br label %108, !dbg !4532

68:                                               ; preds = %61
  %69 = load i8*, i8** @tunable_pasv_address, align 8, !dbg !4533
  %70 = icmp ne i8* %69, null, !dbg !4535
  br i1 %70, label %71, label %78, !dbg !4536

71:                                               ; preds = %68
  call void @vsf_sysutil_sockaddr_alloc_ipv4(%struct.vsf_sysutil_sockaddr** @handle_pasv.s_p_sockaddr), !dbg !4537
  %72 = load i8*, i8** @tunable_pasv_address, align 8, !dbg !4539
  %73 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @handle_pasv.s_p_sockaddr, align 8, !dbg !4541
  %74 = call i32 @vsf_sysutil_inet_aton(i8* %72, %struct.vsf_sysutil_sockaddr* %73), !dbg !4542
  %75 = icmp eq i32 %74, 0, !dbg !4543
  br i1 %75, label %76, label %77, !dbg !4544

76:                                               ; preds = %71
  call void @die(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i32 0, i32 0)), !dbg !4545
  br label %77, !dbg !4547

77:                                               ; preds = %76, %71
  br label %82, !dbg !4548

78:                                               ; preds = %68
  %79 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4549
  %80 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %79, i32 0, i32 0, !dbg !4551
  %81 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %80, align 8, !dbg !4551
  call void @vsf_sysutil_sockaddr_clone(%struct.vsf_sysutil_sockaddr** @handle_pasv.s_p_sockaddr, %struct.vsf_sysutil_sockaddr* %81), !dbg !4552
  br label %82

82:                                               ; preds = %78, %77
  call void @str_alloc_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.88, i32 0, i32 0)), !dbg !4553
  %83 = load i32, i32* %6, align 4, !dbg !4554
  %84 = icmp ne i32 %83, 0, !dbg !4554
  br i1 %84, label %88, label %85, !dbg !4556

85:                                               ; preds = %82
  %86 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @handle_pasv.s_p_sockaddr, align 8, !dbg !4557
  %87 = call i8* @vsf_sysutil_inet_ntop(%struct.vsf_sysutil_sockaddr* %86), !dbg !4559
  call void @str_append_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* %87), !dbg !4560
  br label %98, !dbg !4561

88:                                               ; preds = %82
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4562, metadata !DIExpression()), !dbg !4564
  %89 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @handle_pasv.s_p_sockaddr, align 8, !dbg !4565
  %90 = call i8* @vsf_sysutil_sockaddr_ipv6_v4(%struct.vsf_sysutil_sockaddr* %89), !dbg !4566
  store i8* %90, i8** %8, align 8, !dbg !4564
  %91 = load i8*, i8** %8, align 8, !dbg !4567
  %92 = icmp ne i8* %91, null, !dbg !4567
  br i1 %92, label %93, label %96, !dbg !4569

93:                                               ; preds = %88
  %94 = load i8*, i8** %8, align 8, !dbg !4570
  %95 = call i8* @vsf_sysutil_inet_ntoa(i8* %94), !dbg !4572
  call void @str_append_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* %95), !dbg !4573
  br label %97, !dbg !4574

96:                                               ; preds = %88
  call void @str_append_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0)), !dbg !4575
  br label %97

97:                                               ; preds = %96, %93
  br label %98

98:                                               ; preds = %97, %85
  call void @str_replace_char(%struct.mystr* @handle_pasv.s_pasv_res_str, i8 signext 46, i8 signext 44), !dbg !4577
  call void @str_append_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.90, i32 0, i32 0)), !dbg !4578
  %99 = load i16, i16* %5, align 2, !dbg !4579
  %100 = zext i16 %99 to i32, !dbg !4579
  %101 = ashr i32 %100, 8, !dbg !4580
  %102 = sext i32 %101 to i64, !dbg !4579
  call void @str_append_ulong(%struct.mystr* @handle_pasv.s_pasv_res_str, i64 %102), !dbg !4581
  call void @str_append_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.90, i32 0, i32 0)), !dbg !4582
  %103 = load i16, i16* %5, align 2, !dbg !4583
  %104 = zext i16 %103 to i32, !dbg !4583
  %105 = and i32 %104, 255, !dbg !4584
  %106 = sext i32 %105 to i64, !dbg !4583
  call void @str_append_ulong(%struct.mystr* @handle_pasv.s_pasv_res_str, i64 %106), !dbg !4585
  call void @str_append_text(%struct.mystr* @handle_pasv.s_pasv_res_str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.91, i32 0, i32 0)), !dbg !4586
  %107 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4587
  call void @vsf_cmdio_write_str(%struct.vsf_session* %107, i32 227, %struct.mystr* @handle_pasv.s_pasv_res_str), !dbg !4588
  br label %108, !dbg !4589

108:                                              ; preds = %98, %64, %47, %27
  ret void, !dbg !4589
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_retr(%struct.vsf_session*, i32) #0 !dbg !255 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_transfer_ret, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.vsf_transfer_ret, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !4590, metadata !DIExpression()), !dbg !4591
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4592, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.declare(metadata %struct.vsf_transfer_ret* %5, metadata !4594, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4600, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4602, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4604, metadata !DIExpression()), !dbg !4605
  store i32 0, i32* %8, align 4, !dbg !4605
  call void @llvm.dbg.declare(metadata i64* %9, metadata !4606, metadata !DIExpression()), !dbg !4607
  %11 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4608
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 16, !dbg !4609
  %13 = load i64, i64* %12, align 8, !dbg !4609
  store i64 %13, i64* %9, align 8, !dbg !4607
  %14 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4610
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 16, !dbg !4611
  store i64 0, i64* %15, align 8, !dbg !4612
  %16 = load i32, i32* %4, align 4, !dbg !4613
  %17 = icmp ne i32 %16, 0, !dbg !4613
  br i1 %17, label %23, label %18, !dbg !4615

18:                                               ; preds = %2
  %19 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4616
  %20 = call i32 @data_transfer_checks_ok(%struct.vsf_session* %19), !dbg !4617
  %21 = icmp ne i32 %20, 0, !dbg !4617
  br i1 %21, label %23, label %22, !dbg !4618

22:                                               ; preds = %18
  br label %193, !dbg !4619

23:                                               ; preds = %18, %2
  %24 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4621
  %25 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %24, i32 0, i32 17, !dbg !4623
  %26 = load i32, i32* %25, align 8, !dbg !4623
  %27 = icmp ne i32 %26, 0, !dbg !4621
  br i1 %27, label %28, label %33, !dbg !4624

28:                                               ; preds = %23
  %29 = load i64, i64* %9, align 8, !dbg !4625
  %30 = icmp ne i64 %29, 0, !dbg !4626
  br i1 %30, label %31, label %33, !dbg !4627

31:                                               ; preds = %28
  %32 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4628
  call void @vsf_cmdio_write(%struct.vsf_session* %32, i32 550, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.92, i32 0, i32 0)), !dbg !4630
  br label %193, !dbg !4631

33:                                               ; preds = %28, %23
  %34 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4632
  %35 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %34, i32 0, i32 41, !dbg !4633
  %36 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4634
  call void @resolve_tilde(%struct.mystr* %35, %struct.vsf_session* %36), !dbg !4635
  %37 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4636
  call void @vsf_log_start_entry(%struct.vsf_session* %37, i32 2), !dbg !4637
  %38 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4638
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 38, !dbg !4639
  %40 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4640
  %41 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %40, i32 0, i32 41, !dbg !4641
  call void @str_copy(%struct.mystr* %39, %struct.mystr* %41), !dbg !4642
  %42 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4643
  %43 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %42, i32 0, i32 38, !dbg !4644
  call void @prepend_path_to_filename(%struct.mystr* %43), !dbg !4645
  %44 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4646
  %45 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %44, i32 0, i32 41, !dbg !4648
  %46 = call i32 @vsf_access_check_file(%struct.mystr* %45), !dbg !4649
  %47 = icmp ne i32 %46, 0, !dbg !4649
  br i1 %47, label %50, label %48, !dbg !4650

48:                                               ; preds = %33
  %49 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4651
  call void @vsf_cmdio_write(%struct.vsf_session* %49, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !4653
  br label %193, !dbg !4654

50:                                               ; preds = %33
  %51 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4655
  %52 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %51, i32 0, i32 41, !dbg !4656
  %53 = call i32 @str_open(%struct.mystr* %52, i32 1), !dbg !4657
  store i32 %53, i32* %7, align 4, !dbg !4658
  %54 = load i32, i32* %7, align 4, !dbg !4659
  %55 = call i32 @vsf_sysutil_retval_is_error(i32 %54), !dbg !4661
  %56 = icmp ne i32 %55, 0, !dbg !4661
  br i1 %56, label %57, label %59, !dbg !4662

57:                                               ; preds = %50
  %58 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4663
  call void @vsf_cmdio_write(%struct.vsf_session* %58, i32 550, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i32 0, i32 0)), !dbg !4665
  br label %193, !dbg !4666

59:                                               ; preds = %50
  %60 = load i32, i32* @tunable_lock_upload_files, align 4, !dbg !4667
  %61 = icmp ne i32 %60, 0, !dbg !4667
  br i1 %61, label %62, label %65, !dbg !4669

62:                                               ; preds = %59
  %63 = load i32, i32* %7, align 4, !dbg !4670
  %64 = call i32 @vsf_sysutil_lock_file_read(i32 %63), !dbg !4672
  br label %65, !dbg !4673

65:                                               ; preds = %62, %59
  %66 = load i32, i32* %7, align 4, !dbg !4674
  call void @vsf_sysutil_fstat(i32 %66, %struct.vsf_sysutil_statbuf** @handle_retr.s_p_statbuf), !dbg !4675
  %67 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_retr.s_p_statbuf, align 8, !dbg !4676
  %68 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %67), !dbg !4678
  %69 = icmp ne i32 %68, 0, !dbg !4678
  br i1 %69, label %78, label %70, !dbg !4679

70:                                               ; preds = %65
  %71 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4680
  call void @vsf_cmdio_write(%struct.vsf_session* %71, i32 550, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i32 0, i32 0)), !dbg !4682
  %72 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_retr.s_p_statbuf, align 8, !dbg !4683
  %73 = call i32 @vsf_sysutil_statbuf_is_dir(%struct.vsf_sysutil_statbuf* %72), !dbg !4685
  %74 = icmp ne i32 %73, 0, !dbg !4685
  br i1 %74, label %75, label %77, !dbg !4686

75:                                               ; preds = %70
  %76 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4687
  call void @vsf_log_clear_entry(%struct.vsf_session* %76), !dbg !4689
  br label %77, !dbg !4690

77:                                               ; preds = %75, %70
  br label %191, !dbg !4691

78:                                               ; preds = %65
  %79 = load i32, i32* %7, align 4, !dbg !4692
  call void @vsf_sysutil_deactivate_noblock(i32 %79), !dbg !4693
  %80 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4694
  %81 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %80, i32 0, i32 12, !dbg !4696
  %82 = load i32, i32* %81, align 8, !dbg !4696
  %83 = icmp ne i32 %82, 0, !dbg !4694
  br i1 %83, label %84, label %93, !dbg !4697

84:                                               ; preds = %78
  %85 = load i32, i32* @tunable_anon_world_readable_only, align 4, !dbg !4698
  %86 = icmp ne i32 %85, 0, !dbg !4698
  br i1 %86, label %87, label %93, !dbg !4699

87:                                               ; preds = %84
  %88 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_retr.s_p_statbuf, align 8, !dbg !4700
  %89 = call i32 @vsf_sysutil_statbuf_is_readable_other(%struct.vsf_sysutil_statbuf* %88), !dbg !4701
  %90 = icmp ne i32 %89, 0, !dbg !4701
  br i1 %90, label %93, label %91, !dbg !4702

91:                                               ; preds = %87
  %92 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4703
  call void @vsf_cmdio_write(%struct.vsf_session* %92, i32 550, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i32 0, i32 0)), !dbg !4705
  br label %191, !dbg !4706

93:                                               ; preds = %87, %84, %78
  %94 = load i64, i64* %9, align 8, !dbg !4707
  %95 = icmp ne i64 %94, 0, !dbg !4709
  br i1 %95, label %96, label %99, !dbg !4710

96:                                               ; preds = %93
  %97 = load i32, i32* %7, align 4, !dbg !4711
  %98 = load i64, i64* %9, align 8, !dbg !4713
  call void @vsf_sysutil_lseek_to(i32 %97, i64 %98), !dbg !4714
  br label %99, !dbg !4715

99:                                               ; preds = %96, %93
  call void @str_alloc_text(%struct.mystr* @handle_retr.s_mark_str, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0)), !dbg !4716
  %100 = load i32, i32* @tunable_ascii_download_enable, align 4, !dbg !4717
  %101 = icmp ne i32 %100, 0, !dbg !4717
  br i1 %101, label %102, label %108, !dbg !4719

102:                                              ; preds = %99
  %103 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4720
  %104 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %103, i32 0, i32 17, !dbg !4721
  %105 = load i32, i32* %104, align 8, !dbg !4721
  %106 = icmp ne i32 %105, 0, !dbg !4720
  br i1 %106, label %107, label %108, !dbg !4722

107:                                              ; preds = %102
  call void @str_append_text(%struct.mystr* @handle_retr.s_mark_str, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i32 0, i32 0)), !dbg !4723
  store i32 1, i32* %8, align 4, !dbg !4725
  br label %109, !dbg !4726

108:                                              ; preds = %102, %99
  call void @str_append_text(%struct.mystr* @handle_retr.s_mark_str, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i32 0, i32 0)), !dbg !4727
  br label %109

109:                                              ; preds = %108, %107
  call void @str_append_text(%struct.mystr* @handle_retr.s_mark_str, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.97, i32 0, i32 0)), !dbg !4729
  %110 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4730
  %111 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %110, i32 0, i32 41, !dbg !4731
  call void @str_append_str(%struct.mystr* @handle_retr.s_mark_str, %struct.mystr* %111), !dbg !4732
  call void @str_append_text(%struct.mystr* @handle_retr.s_mark_str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0)), !dbg !4733
  %112 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_retr.s_p_statbuf, align 8, !dbg !4734
  %113 = call i64 @vsf_sysutil_statbuf_get_size(%struct.vsf_sysutil_statbuf* %112), !dbg !4735
  call void @str_append_filesize_t(%struct.mystr* @handle_retr.s_mark_str, i64 %113), !dbg !4736
  call void @str_append_text(%struct.mystr* @handle_retr.s_mark_str, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0)), !dbg !4737
  %114 = load i32, i32* %4, align 4, !dbg !4738
  %115 = icmp ne i32 %114, 0, !dbg !4738
  br i1 %115, label %116, label %117, !dbg !4740

116:                                              ; preds = %109
  store i32 0, i32* %6, align 4, !dbg !4741
  br label %126, !dbg !4743

117:                                              ; preds = %109
  %118 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4744
  %119 = call i8* @str_getbuf(%struct.mystr* @handle_retr.s_mark_str), !dbg !4746
  %120 = call i32 @get_remote_transfer_fd(%struct.vsf_session* %118, i8* %119), !dbg !4747
  store i32 %120, i32* %6, align 4, !dbg !4748
  %121 = load i32, i32* %6, align 4, !dbg !4749
  %122 = call i32 @vsf_sysutil_retval_is_error(i32 %121), !dbg !4751
  %123 = icmp ne i32 %122, 0, !dbg !4751
  br i1 %123, label %124, label %125, !dbg !4752

124:                                              ; preds = %117
  br label %188, !dbg !4753

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125, %116
  %127 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4755
  %128 = load i32, i32* %6, align 4, !dbg !4756
  %129 = load i32, i32* %7, align 4, !dbg !4757
  %130 = load i32, i32* %8, align 4, !dbg !4758
  %131 = call { i32, i64 } @vsf_ftpdataio_transfer_file(%struct.vsf_session* %127, i32 %128, i32 %129, i32 0, i32 %130), !dbg !4759
  %132 = bitcast %struct.vsf_transfer_ret* %10 to { i32, i64 }*, !dbg !4759
  %133 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %132, i32 0, i32 0, !dbg !4759
  %134 = extractvalue { i32, i64 } %131, 0, !dbg !4759
  store i32 %134, i32* %133, align 8, !dbg !4759
  %135 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %132, i32 0, i32 1, !dbg !4759
  %136 = extractvalue { i32, i64 } %131, 1, !dbg !4759
  store i64 %136, i64* %135, align 8, !dbg !4759
  %137 = bitcast %struct.vsf_transfer_ret* %5 to i8*, !dbg !4759
  %138 = bitcast %struct.vsf_transfer_ret* %10 to i8*, !dbg !4759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 16, i1 false), !dbg !4759
  %139 = load i32, i32* %4, align 4, !dbg !4760
  %140 = icmp ne i32 %139, 0, !dbg !4760
  br i1 %140, label %151, label %141, !dbg !4762

141:                                              ; preds = %126
  %142 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4763
  %143 = call i32 @vsf_ftpdataio_dispose_transfer_fd(%struct.vsf_session* %142), !dbg !4764
  %144 = icmp ne i32 %143, 1, !dbg !4765
  br i1 %144, label %145, label %151, !dbg !4766

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %5, i32 0, i32 0, !dbg !4767
  %147 = load i32, i32* %146, align 8, !dbg !4767
  %148 = icmp eq i32 %147, 0, !dbg !4768
  br i1 %148, label %149, label %151, !dbg !4769

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %5, i32 0, i32 0, !dbg !4770
  store i32 -2, i32* %150, align 8, !dbg !4772
  br label %151, !dbg !4773

151:                                              ; preds = %149, %145, %141, %126
  %152 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %5, i32 0, i32 1, !dbg !4774
  %153 = load i64, i64* %152, align 8, !dbg !4774
  %154 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4775
  %155 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %154, i32 0, i32 39, !dbg !4776
  store i64 %153, i64* %155, align 8, !dbg !4777
  %156 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %5, i32 0, i32 0, !dbg !4778
  %157 = load i32, i32* %156, align 8, !dbg !4778
  %158 = icmp eq i32 %157, 0, !dbg !4780
  br i1 %158, label %159, label %161, !dbg !4781

159:                                              ; preds = %151
  %160 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4782
  call void @vsf_log_do_log(%struct.vsf_session* %160, i32 1), !dbg !4784
  br label %161, !dbg !4785

161:                                              ; preds = %159, %151
  %162 = load i32, i32* %4, align 4, !dbg !4786
  %163 = icmp ne i32 %162, 0, !dbg !4786
  br i1 %163, label %164, label %165, !dbg !4788

164:                                              ; preds = %161
  br label %191, !dbg !4789

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %5, i32 0, i32 0, !dbg !4791
  %167 = load i32, i32* %166, align 8, !dbg !4791
  %168 = icmp eq i32 %167, -1, !dbg !4793
  br i1 %168, label %169, label %171, !dbg !4794

169:                                              ; preds = %165
  %170 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4795
  call void @vsf_cmdio_write(%struct.vsf_session* %170, i32 451, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.100, i32 0, i32 0)), !dbg !4797
  br label %186, !dbg !4798

171:                                              ; preds = %165
  %172 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %5, i32 0, i32 0, !dbg !4799
  %173 = load i32, i32* %172, align 8, !dbg !4799
  %174 = icmp eq i32 %173, -2, !dbg !4801
  br i1 %174, label %175, label %183, !dbg !4802

175:                                              ; preds = %171
  %176 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4803
  %177 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %176, i32 0, i32 4, !dbg !4806
  %178 = load i32, i32* %177, align 4, !dbg !4806
  %179 = icmp ne i32 %178, 0, !dbg !4803
  br i1 %179, label %182, label %180, !dbg !4807

180:                                              ; preds = %175
  %181 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4808
  call void @vsf_cmdio_write(%struct.vsf_session* %181, i32 426, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i32 0, i32 0)), !dbg !4810
  br label %182, !dbg !4811

182:                                              ; preds = %180, %175
  br label %185, !dbg !4812

183:                                              ; preds = %171
  %184 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4813
  call void @vsf_cmdio_write(%struct.vsf_session* %184, i32 226, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.102, i32 0, i32 0)), !dbg !4815
  br label %185

185:                                              ; preds = %183, %182
  br label %186

186:                                              ; preds = %185, %169
  %187 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4816
  call void @check_abor(%struct.vsf_session* %187), !dbg !4817
  br label %188, !dbg !4817

188:                                              ; preds = %186, %124
  %189 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4818
  call void @port_cleanup(%struct.vsf_session* %189), !dbg !4819
  %190 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !4820
  call void @pasv_cleanup(%struct.vsf_session* %190), !dbg !4821
  br label %191, !dbg !4821

191:                                              ; preds = %188, %164, %91, %77
  %192 = load i32, i32* %7, align 4, !dbg !4822
  call void @vsf_sysutil_close(i32 %192), !dbg !4823
  br label %193, !dbg !4824

193:                                              ; preds = %191, %57, %48, %31, %22
  ret void, !dbg !4824
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_help(%struct.vsf_session*) #0 !dbg !4825 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4826, metadata !DIExpression()), !dbg !4827
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4828
  call void @vsf_cmdio_write_hyphen(%struct.vsf_session* %3, i32 214, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.161, i32 0, i32 0)), !dbg !4829
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4830
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %4, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.162, i32 0, i32 0)), !dbg !4831
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4832
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %5, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.163, i32 0, i32 0)), !dbg !4833
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4834
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %6, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.164, i32 0, i32 0)), !dbg !4835
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4836
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.165, i32 0, i32 0)), !dbg !4837
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4838
  call void @vsf_cmdio_write(%struct.vsf_session* %8, i32 214, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.166, i32 0, i32 0)), !dbg !4839
  ret void, !dbg !4840
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_list(%struct.vsf_session*) #0 !dbg !4841 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4842, metadata !DIExpression()), !dbg !4843
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4844
  call void @handle_dir_common(%struct.vsf_session* %3, i32 1, i32 0), !dbg !4845
  ret void, !dbg !4846
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_type(%struct.vsf_session*) #0 !dbg !4847 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4848, metadata !DIExpression()), !dbg !4849
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4850
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 41, !dbg !4851
  call void @str_upper(%struct.mystr* %4), !dbg !4852
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4853
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 41, !dbg !4855
  %7 = call i32 @str_equal_text(%struct.mystr* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i32 0, i32 0)), !dbg !4856
  %8 = icmp ne i32 %7, 0, !dbg !4856
  br i1 %8, label %19, label %9, !dbg !4857

9:                                                ; preds = %1
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4858
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 41, !dbg !4859
  %12 = call i32 @str_equal_text(%struct.mystr* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i32 0, i32 0)), !dbg !4860
  %13 = icmp ne i32 %12, 0, !dbg !4860
  br i1 %13, label %19, label %14, !dbg !4861

14:                                               ; preds = %9
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4862
  %16 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %15, i32 0, i32 41, !dbg !4863
  %17 = call i32 @str_equal_text(%struct.mystr* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0)), !dbg !4864
  %18 = icmp ne i32 %17, 0, !dbg !4864
  br i1 %18, label %19, label %23, !dbg !4865

19:                                               ; preds = %14, %9, %1
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4866
  %21 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %20, i32 0, i32 17, !dbg !4868
  store i32 0, i32* %21, align 8, !dbg !4869
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4870
  call void @vsf_cmdio_write(%struct.vsf_session* %22, i32 200, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.119, i32 0, i32 0)), !dbg !4871
  br label %40, !dbg !4872

23:                                               ; preds = %14
  %24 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4873
  %25 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %24, i32 0, i32 41, !dbg !4875
  %26 = call i32 @str_equal_text(%struct.mystr* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i32 0, i32 0)), !dbg !4876
  %27 = icmp ne i32 %26, 0, !dbg !4876
  br i1 %27, label %33, label %28, !dbg !4877

28:                                               ; preds = %23
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4878
  %30 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %29, i32 0, i32 41, !dbg !4879
  %31 = call i32 @str_equal_text(%struct.mystr* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i32 0, i32 0)), !dbg !4880
  %32 = icmp ne i32 %31, 0, !dbg !4880
  br i1 %32, label %33, label %37, !dbg !4881

33:                                               ; preds = %28, %23
  %34 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4882
  %35 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %34, i32 0, i32 17, !dbg !4884
  store i32 1, i32* %35, align 8, !dbg !4885
  %36 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4886
  call void @vsf_cmdio_write(%struct.vsf_session* %36, i32 200, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.122, i32 0, i32 0)), !dbg !4887
  br label %39, !dbg !4888

37:                                               ; preds = %28
  %38 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4889
  call void @vsf_cmdio_write(%struct.vsf_session* %38, i32 500, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.123, i32 0, i32 0)), !dbg !4891
  br label %39

39:                                               ; preds = %37, %33
  br label %40

40:                                               ; preds = %39, %19
  ret void, !dbg !4892
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_port(%struct.vsf_session*) #0 !dbg !4893 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i16, align 2
  %4 = alloca [6 x i8], align 1
  %5 = alloca i8*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4894, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.declare(metadata i16* %3, metadata !4896, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.declare(metadata [6 x i8]* %4, metadata !4898, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4903, metadata !DIExpression()), !dbg !4904
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4905
  call void @pasv_cleanup(%struct.vsf_session* %6), !dbg !4906
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4907
  call void @port_cleanup(%struct.vsf_session* %7), !dbg !4908
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4909
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 41, !dbg !4910
  %10 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0, !dbg !4911
  %11 = call i8* @vsf_sysutil_parse_uchar_string_sep(%struct.mystr* %9, i8 signext 44, i8* %10, i32 6), !dbg !4912
  store i8* %11, i8** %5, align 8, !dbg !4913
  %12 = load i8*, i8** %5, align 8, !dbg !4914
  %13 = icmp eq i8* %12, null, !dbg !4916
  br i1 %13, label %14, label %16, !dbg !4917

14:                                               ; preds = %1
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4918
  call void @vsf_cmdio_write(%struct.vsf_session* %15, i32 500, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.124, i32 0, i32 0)), !dbg !4920
  br label %60, !dbg !4921

16:                                               ; preds = %1
  %17 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 4, !dbg !4922
  %18 = load i8, i8* %17, align 1, !dbg !4922
  %19 = zext i8 %18 to i32, !dbg !4922
  %20 = shl i32 %19, 8, !dbg !4923
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 5, !dbg !4924
  %22 = load i8, i8* %21, align 1, !dbg !4924
  %23 = zext i8 %22 to i32, !dbg !4924
  %24 = or i32 %20, %23, !dbg !4925
  %25 = trunc i32 %24 to i16, !dbg !4926
  store i16 %25, i16* %3, align 2, !dbg !4927
  %26 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4928
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 6, !dbg !4929
  %28 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4930
  %29 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %28, i32 0, i32 0, !dbg !4931
  %30 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %29, align 8, !dbg !4931
  call void @vsf_sysutil_sockaddr_clone(%struct.vsf_sysutil_sockaddr** %27, %struct.vsf_sysutil_sockaddr* %30), !dbg !4932
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4933
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 6, !dbg !4934
  %33 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %32, align 8, !dbg !4934
  %34 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0, !dbg !4935
  call void @vsf_sysutil_sockaddr_set_ipv4addr(%struct.vsf_sysutil_sockaddr* %33, i8* %34), !dbg !4936
  %35 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4937
  %36 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %35, i32 0, i32 6, !dbg !4938
  %37 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %36, align 8, !dbg !4938
  %38 = load i16, i16* %3, align 2, !dbg !4939
  call void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr* %37, i16 zeroext %38), !dbg !4940
  %39 = load i32, i32* @tunable_port_promiscuous, align 4, !dbg !4941
  %40 = icmp ne i32 %39, 0, !dbg !4941
  br i1 %40, label %58, label %41, !dbg !4943

41:                                               ; preds = %16
  %42 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4944
  %43 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %42, i32 0, i32 1, !dbg !4947
  %44 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %43, align 8, !dbg !4947
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4948
  %46 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %45, i32 0, i32 6, !dbg !4949
  %47 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %46, align 8, !dbg !4949
  %48 = call i32 @vsf_sysutil_sockaddr_addr_equal(%struct.vsf_sysutil_sockaddr* %44, %struct.vsf_sysutil_sockaddr* %47), !dbg !4950
  %49 = icmp ne i32 %48, 0, !dbg !4950
  br i1 %49, label %50, label %54, !dbg !4951

50:                                               ; preds = %41
  %51 = load i16, i16* %3, align 2, !dbg !4952
  %52 = call i32 @vsf_sysutil_is_port_reserved(i16 zeroext %51), !dbg !4953
  %53 = icmp ne i32 %52, 0, !dbg !4953
  br i1 %53, label %54, label %57, !dbg !4954

54:                                               ; preds = %50, %41
  %55 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4955
  call void @vsf_cmdio_write(%struct.vsf_session* %55, i32 500, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.124, i32 0, i32 0)), !dbg !4957
  %56 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4958
  call void @port_cleanup(%struct.vsf_session* %56), !dbg !4959
  br label %60, !dbg !4960

57:                                               ; preds = %50
  br label %58, !dbg !4961

58:                                               ; preds = %57, %16
  %59 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4962
  call void @vsf_cmdio_write(%struct.vsf_session* %59, i32 200, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.125, i32 0, i32 0)), !dbg !4963
  br label %60, !dbg !4964

60:                                               ; preds = %58, %54, %14
  ret void, !dbg !4964
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_stor(%struct.vsf_session*) #0 !dbg !4965 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4966, metadata !DIExpression()), !dbg !4967
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4968
  call void @handle_upload_common(%struct.vsf_session* %3, i32 0, i32 0), !dbg !4969
  ret void, !dbg !4970
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_mkd(%struct.vsf_session*) #0 !dbg !292 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4973, metadata !DIExpression()), !dbg !4974
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4975
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 41, !dbg !4976
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4977
  call void @resolve_tilde(%struct.mystr* %5, %struct.vsf_session* %6), !dbg !4978
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4979
  call void @vsf_log_start_entry(%struct.vsf_session* %7, i32 4), !dbg !4980
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4981
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 38, !dbg !4982
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4983
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 41, !dbg !4984
  call void @str_copy(%struct.mystr* %9, %struct.mystr* %11), !dbg !4985
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4986
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 38, !dbg !4987
  call void @prepend_path_to_filename(%struct.mystr* %13), !dbg !4988
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4989
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 41, !dbg !4991
  %16 = call i32 @vsf_access_check_file(%struct.mystr* %15), !dbg !4992
  %17 = icmp ne i32 %16, 0, !dbg !4992
  br i1 %17, label %20, label %18, !dbg !4993

18:                                               ; preds = %1
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4994
  call void @vsf_cmdio_write(%struct.vsf_session* %19, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !4996
  br label %33, !dbg !4997

20:                                               ; preds = %1
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !4998
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 41, !dbg !4999
  %23 = call i32 @str_mkdir(%struct.mystr* %22, i32 511), !dbg !5000
  store i32 %23, i32* %3, align 4, !dbg !5001
  %24 = load i32, i32* %3, align 4, !dbg !5002
  %25 = icmp ne i32 %24, 0, !dbg !5004
  br i1 %25, label %26, label %28, !dbg !5005

26:                                               ; preds = %20
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5006
  call void @vsf_cmdio_write(%struct.vsf_session* %27, i32 550, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.131, i32 0, i32 0)), !dbg !5008
  br label %33, !dbg !5009

28:                                               ; preds = %20
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5010
  call void @vsf_log_do_log(%struct.vsf_session* %29, i32 1), !dbg !5011
  %30 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5012
  %31 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %30, i32 0, i32 41, !dbg !5014
  call void @str_copy(%struct.mystr* @handle_mkd.s_tmp_str, %struct.mystr* %31), !dbg !5015
  call void @prepend_path_to_filename(%struct.mystr* @handle_mkd.s_tmp_str), !dbg !5016
  call void @str_replace_text(%struct.mystr* @handle_mkd.s_tmp_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0)), !dbg !5017
  call void @str_alloc_text(%struct.mystr* @handle_mkd.s_mkd_res, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0)), !dbg !5018
  call void @str_append_str(%struct.mystr* @handle_mkd.s_mkd_res, %struct.mystr* @handle_mkd.s_tmp_str), !dbg !5019
  call void @str_append_text(%struct.mystr* @handle_mkd.s_mkd_res, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.132, i32 0, i32 0)), !dbg !5020
  %32 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5021
  call void @vsf_cmdio_write_str(%struct.vsf_session* %32, i32 257, %struct.mystr* @handle_mkd.s_mkd_res), !dbg !5022
  br label %33, !dbg !5023

33:                                               ; preds = %28, %26, %18
  ret void, !dbg !5023
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_rmd(%struct.vsf_session*) #0 !dbg !5024 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5025, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5027, metadata !DIExpression()), !dbg !5028
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5029
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 41, !dbg !5030
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5031
  call void @resolve_tilde(%struct.mystr* %5, %struct.vsf_session* %6), !dbg !5032
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5033
  call void @vsf_log_start_entry(%struct.vsf_session* %7, i32 11), !dbg !5034
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5035
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 38, !dbg !5036
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5037
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 41, !dbg !5038
  call void @str_copy(%struct.mystr* %9, %struct.mystr* %11), !dbg !5039
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5040
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 38, !dbg !5041
  call void @prepend_path_to_filename(%struct.mystr* %13), !dbg !5042
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5043
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 41, !dbg !5045
  %16 = call i32 @vsf_access_check_file(%struct.mystr* %15), !dbg !5046
  %17 = icmp ne i32 %16, 0, !dbg !5046
  br i1 %17, label %20, label %18, !dbg !5047

18:                                               ; preds = %1
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5048
  call void @vsf_cmdio_write(%struct.vsf_session* %19, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !5050
  br label %31, !dbg !5051

20:                                               ; preds = %1
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5052
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 41, !dbg !5053
  %23 = call i32 @str_rmdir(%struct.mystr* %22), !dbg !5054
  store i32 %23, i32* %3, align 4, !dbg !5055
  %24 = load i32, i32* %3, align 4, !dbg !5056
  %25 = icmp ne i32 %24, 0, !dbg !5058
  br i1 %25, label %26, label %28, !dbg !5059

26:                                               ; preds = %20
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5060
  call void @vsf_cmdio_write(%struct.vsf_session* %27, i32 550, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.133, i32 0, i32 0)), !dbg !5062
  br label %31, !dbg !5063

28:                                               ; preds = %20
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5064
  call void @vsf_log_do_log(%struct.vsf_session* %29, i32 1), !dbg !5066
  %30 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5067
  call void @vsf_cmdio_write(%struct.vsf_session* %30, i32 250, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.134, i32 0, i32 0)), !dbg !5068
  br label %31

31:                                               ; preds = %18, %28, %26
  ret void, !dbg !5069
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_dele(%struct.vsf_session*) #0 !dbg !5070 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5073, metadata !DIExpression()), !dbg !5074
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5075
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 41, !dbg !5076
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5077
  call void @resolve_tilde(%struct.mystr* %5, %struct.vsf_session* %6), !dbg !5078
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5079
  call void @vsf_log_start_entry(%struct.vsf_session* %7, i32 9), !dbg !5080
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5081
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 38, !dbg !5082
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5083
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 41, !dbg !5084
  call void @str_copy(%struct.mystr* %9, %struct.mystr* %11), !dbg !5085
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5086
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 38, !dbg !5087
  call void @prepend_path_to_filename(%struct.mystr* %13), !dbg !5088
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5089
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 41, !dbg !5091
  %16 = call i32 @vsf_access_check_file(%struct.mystr* %15), !dbg !5092
  %17 = icmp ne i32 %16, 0, !dbg !5092
  br i1 %17, label %20, label %18, !dbg !5093

18:                                               ; preds = %1
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5094
  call void @vsf_cmdio_write(%struct.vsf_session* %19, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !5096
  br label %31, !dbg !5097

20:                                               ; preds = %1
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5098
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 41, !dbg !5099
  %23 = call i32 @str_unlink(%struct.mystr* %22), !dbg !5100
  store i32 %23, i32* %3, align 4, !dbg !5101
  %24 = load i32, i32* %3, align 4, !dbg !5102
  %25 = icmp ne i32 %24, 0, !dbg !5104
  br i1 %25, label %26, label %28, !dbg !5105

26:                                               ; preds = %20
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5106
  call void @vsf_cmdio_write(%struct.vsf_session* %27, i32 550, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.135, i32 0, i32 0)), !dbg !5108
  br label %31, !dbg !5109

28:                                               ; preds = %20
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5110
  call void @vsf_log_do_log(%struct.vsf_session* %29, i32 1), !dbg !5112
  %30 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5113
  call void @vsf_cmdio_write(%struct.vsf_session* %30, i32 250, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0)), !dbg !5114
  br label %31

31:                                               ; preds = %18, %28, %26
  ret void, !dbg !5115
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_rest(%struct.vsf_session*) #0 !dbg !297 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i64, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata i64* %3, metadata !5118, metadata !DIExpression()), !dbg !5119
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5120
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 41, !dbg !5121
  %6 = call i64 @str_a_to_filesize_t(%struct.mystr* %5), !dbg !5122
  store i64 %6, i64* %3, align 8, !dbg !5119
  %7 = load i64, i64* %3, align 8, !dbg !5123
  %8 = icmp slt i64 %7, 0, !dbg !5125
  br i1 %8, label %9, label %10, !dbg !5126

9:                                                ; preds = %1
  store i64 0, i64* %3, align 8, !dbg !5127
  br label %10, !dbg !5129

10:                                               ; preds = %9, %1
  %11 = load i64, i64* %3, align 8, !dbg !5130
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5131
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 16, !dbg !5132
  store i64 %11, i64* %13, align 8, !dbg !5133
  call void @str_alloc_text(%struct.mystr* @handle_rest.s_rest_str, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.137, i32 0, i32 0)), !dbg !5134
  %14 = load i64, i64* %3, align 8, !dbg !5135
  call void @str_append_filesize_t(%struct.mystr* @handle_rest.s_rest_str, i64 %14), !dbg !5136
  call void @str_append_text(%struct.mystr* @handle_rest.s_rest_str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.91, i32 0, i32 0)), !dbg !5137
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5138
  call void @vsf_cmdio_write_str(%struct.vsf_session* %15, i32 350, %struct.mystr* @handle_rest.s_rest_str), !dbg !5139
  ret void, !dbg !5140
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_rnfr(%struct.vsf_session*) #0 !dbg !300 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5143, metadata !DIExpression()), !dbg !5144
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5145
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 18, !dbg !5146
  call void @str_free(%struct.mystr* %5), !dbg !5147
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5148
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 41, !dbg !5149
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5150
  call void @resolve_tilde(%struct.mystr* %7, %struct.vsf_session* %8), !dbg !5151
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5152
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 41, !dbg !5154
  %11 = call i32 @vsf_access_check_file(%struct.mystr* %10), !dbg !5155
  %12 = icmp ne i32 %11, 0, !dbg !5155
  br i1 %12, label %22, label %13, !dbg !5156

13:                                               ; preds = %1
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5157
  call void @vsf_log_start_entry(%struct.vsf_session* %14, i32 10), !dbg !5159
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5160
  %16 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %15, i32 0, i32 38, !dbg !5161
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5162
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 41, !dbg !5163
  call void @str_copy(%struct.mystr* %16, %struct.mystr* %18), !dbg !5164
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5165
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 38, !dbg !5166
  call void @prepend_path_to_filename(%struct.mystr* %20), !dbg !5167
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5168
  call void @vsf_cmdio_write(%struct.vsf_session* %21, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !5169
  br label %43, !dbg !5170

22:                                               ; preds = %1
  %23 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5171
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 41, !dbg !5172
  %25 = call i32 @str_stat(%struct.mystr* %24, %struct.vsf_sysutil_statbuf** @handle_rnfr.p_statbuf), !dbg !5173
  store i32 %25, i32* %3, align 4, !dbg !5174
  %26 = load i32, i32* %3, align 4, !dbg !5175
  %27 = icmp eq i32 %26, 0, !dbg !5177
  br i1 %27, label %28, label %34, !dbg !5178

28:                                               ; preds = %22
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5179
  %30 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %29, i32 0, i32 18, !dbg !5181
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5182
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 41, !dbg !5183
  call void @str_copy(%struct.mystr* %30, %struct.mystr* %32), !dbg !5184
  %33 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5185
  call void @vsf_cmdio_write(%struct.vsf_session* %33, i32 350, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.138, i32 0, i32 0)), !dbg !5186
  br label %43, !dbg !5187

34:                                               ; preds = %22
  %35 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5188
  call void @vsf_log_start_entry(%struct.vsf_session* %35, i32 10), !dbg !5190
  %36 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5191
  %37 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %36, i32 0, i32 38, !dbg !5192
  %38 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5193
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 41, !dbg !5194
  call void @str_copy(%struct.mystr* %37, %struct.mystr* %39), !dbg !5195
  %40 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5196
  %41 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %40, i32 0, i32 38, !dbg !5197
  call void @prepend_path_to_filename(%struct.mystr* %41), !dbg !5198
  %42 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5199
  call void @vsf_cmdio_write(%struct.vsf_session* %42, i32 550, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i32 0, i32 0)), !dbg !5200
  br label %43

43:                                               ; preds = %13, %34, %28
  ret void, !dbg !5201
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_rnto(%struct.vsf_session*) #0 !dbg !303 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5202, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5204, metadata !DIExpression()), !dbg !5205
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5206
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 18, !dbg !5208
  %6 = call i32 @str_isempty(%struct.mystr* %5), !dbg !5209
  %7 = icmp ne i32 %6, 0, !dbg !5209
  br i1 %7, label %8, label %10, !dbg !5210

8:                                                ; preds = %1
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5211
  call void @vsf_cmdio_write(%struct.vsf_session* %9, i32 503, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.140, i32 0, i32 0)), !dbg !5213
  br label %48, !dbg !5214

10:                                               ; preds = %1
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5215
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 41, !dbg !5216
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5217
  call void @resolve_tilde(%struct.mystr* %12, %struct.vsf_session* %13), !dbg !5218
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5219
  call void @vsf_log_start_entry(%struct.vsf_session* %14, i32 10), !dbg !5220
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5221
  %16 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %15, i32 0, i32 38, !dbg !5222
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5223
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 18, !dbg !5224
  call void @str_copy(%struct.mystr* %16, %struct.mystr* %18), !dbg !5225
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5226
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 38, !dbg !5227
  call void @prepend_path_to_filename(%struct.mystr* %20), !dbg !5228
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5229
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 38, !dbg !5230
  call void @str_append_char(%struct.mystr* %22, i8 signext 32), !dbg !5231
  %23 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5232
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 41, !dbg !5233
  call void @str_copy(%struct.mystr* @handle_rnto.s_tmp_str, %struct.mystr* %24), !dbg !5234
  call void @prepend_path_to_filename(%struct.mystr* @handle_rnto.s_tmp_str), !dbg !5235
  %25 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5236
  %26 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %25, i32 0, i32 38, !dbg !5237
  call void @str_append_str(%struct.mystr* %26, %struct.mystr* @handle_rnto.s_tmp_str), !dbg !5238
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5239
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 41, !dbg !5241
  %29 = call i32 @vsf_access_check_file(%struct.mystr* %28), !dbg !5242
  %30 = icmp ne i32 %29, 0, !dbg !5242
  br i1 %30, label %33, label %31, !dbg !5243

31:                                               ; preds = %10
  %32 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5244
  call void @vsf_cmdio_write(%struct.vsf_session* %32, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !5246
  br label %48, !dbg !5247

33:                                               ; preds = %10
  %34 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5248
  %35 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %34, i32 0, i32 18, !dbg !5249
  %36 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5250
  %37 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %36, i32 0, i32 41, !dbg !5251
  %38 = call i32 @str_rename(%struct.mystr* %35, %struct.mystr* %37), !dbg !5252
  store i32 %38, i32* %3, align 4, !dbg !5253
  %39 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5254
  %40 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %39, i32 0, i32 18, !dbg !5255
  call void @str_free(%struct.mystr* %40), !dbg !5256
  %41 = load i32, i32* %3, align 4, !dbg !5257
  %42 = icmp eq i32 %41, 0, !dbg !5259
  br i1 %42, label %43, label %46, !dbg !5260

43:                                               ; preds = %33
  %44 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5261
  call void @vsf_log_do_log(%struct.vsf_session* %44, i32 1), !dbg !5263
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5264
  call void @vsf_cmdio_write(%struct.vsf_session* %45, i32 250, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.141, i32 0, i32 0)), !dbg !5265
  br label %48, !dbg !5266

46:                                               ; preds = %33
  %47 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5267
  call void @vsf_cmdio_write(%struct.vsf_session* %47, i32 550, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.142, i32 0, i32 0)), !dbg !5269
  br label %48

48:                                               ; preds = %8, %31, %46, %43
  ret void, !dbg !5270
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_nlst(%struct.vsf_session*) #0 !dbg !5271 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5272, metadata !DIExpression()), !dbg !5273
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5274
  call void @handle_dir_common(%struct.vsf_session* %3, i32 0, i32 0), !dbg !5275
  ret void, !dbg !5276
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_size(%struct.vsf_session*) #0 !dbg !306 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5277, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5279, metadata !DIExpression()), !dbg !5280
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5281
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 41, !dbg !5282
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5283
  call void @resolve_tilde(%struct.mystr* %5, %struct.vsf_session* %6), !dbg !5284
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5285
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 41, !dbg !5287
  %9 = call i32 @vsf_access_check_file(%struct.mystr* %8), !dbg !5288
  %10 = icmp ne i32 %9, 0, !dbg !5288
  br i1 %10, label %13, label %11, !dbg !5289

11:                                               ; preds = %1
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5290
  call void @vsf_cmdio_write(%struct.vsf_session* %12, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !5292
  br label %29, !dbg !5293

13:                                               ; preds = %1
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5294
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 41, !dbg !5295
  %16 = call i32 @str_stat(%struct.mystr* %15, %struct.vsf_sysutil_statbuf** @handle_size.s_p_statbuf), !dbg !5296
  store i32 %16, i32* %3, align 4, !dbg !5297
  %17 = load i32, i32* %3, align 4, !dbg !5298
  %18 = icmp ne i32 %17, 0, !dbg !5300
  br i1 %18, label %23, label %19, !dbg !5301

19:                                               ; preds = %13
  %20 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_size.s_p_statbuf, align 8, !dbg !5302
  %21 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %20), !dbg !5303
  %22 = icmp ne i32 %21, 0, !dbg !5303
  br i1 %22, label %25, label %23, !dbg !5304

23:                                               ; preds = %19, %13
  %24 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5305
  call void @vsf_cmdio_write(%struct.vsf_session* %24, i32 550, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.143, i32 0, i32 0)), !dbg !5307
  br label %29, !dbg !5308

25:                                               ; preds = %19
  %26 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_size.s_p_statbuf, align 8, !dbg !5309
  %27 = call i64 @vsf_sysutil_statbuf_get_size(%struct.vsf_sysutil_statbuf* %26), !dbg !5311
  call void @str_alloc_filesize_t(%struct.mystr* @handle_size.s_size_res_str, i64 %27), !dbg !5312
  %28 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5313
  call void @vsf_cmdio_write_str(%struct.vsf_session* %28, i32 213, %struct.mystr* @handle_size.s_size_res_str), !dbg !5314
  br label %29

29:                                               ; preds = %11, %25, %23
  ret void, !dbg !5315
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_site(%struct.vsf_session*) #0 !dbg !311 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5316, metadata !DIExpression()), !dbg !5317
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5318
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 41, !dbg !5319
  call void @str_split_char(%struct.mystr* %4, %struct.mystr* @handle_site.s_site_args_str, i8 signext 32), !dbg !5320
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5321
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 41, !dbg !5322
  call void @str_upper(%struct.mystr* %6), !dbg !5323
  %7 = load i32, i32* @tunable_write_enable, align 4, !dbg !5324
  %8 = icmp ne i32 %7, 0, !dbg !5324
  br i1 %8, label %9, label %19, !dbg !5326

9:                                                ; preds = %1
  %10 = load i32, i32* @tunable_chmod_enable, align 4, !dbg !5327
  %11 = icmp ne i32 %10, 0, !dbg !5327
  br i1 %11, label %12, label %19, !dbg !5328

12:                                               ; preds = %9
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5329
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 41, !dbg !5330
  %15 = call i32 @str_equal_text(%struct.mystr* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.144, i32 0, i32 0)), !dbg !5331
  %16 = icmp ne i32 %15, 0, !dbg !5331
  br i1 %16, label %17, label %19, !dbg !5332

17:                                               ; preds = %12
  %18 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5333
  call void @handle_site_chmod(%struct.vsf_session* %18, %struct.mystr* @handle_site.s_site_args_str), !dbg !5335
  br label %46, !dbg !5336

19:                                               ; preds = %12, %9, %1
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5337
  %21 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %20, i32 0, i32 41, !dbg !5339
  %22 = call i32 @str_equal_text(%struct.mystr* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0)), !dbg !5340
  %23 = icmp ne i32 %22, 0, !dbg !5340
  br i1 %23, label %24, label %26, !dbg !5341

24:                                               ; preds = %19
  %25 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5342
  call void @handle_site_umask(%struct.vsf_session* %25, %struct.mystr* @handle_site.s_site_args_str), !dbg !5344
  br label %45, !dbg !5345

26:                                               ; preds = %19
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5346
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 41, !dbg !5348
  %29 = call i32 @str_equal_text(%struct.mystr* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.84, i32 0, i32 0)), !dbg !5349
  %30 = icmp ne i32 %29, 0, !dbg !5349
  br i1 %30, label %31, label %42, !dbg !5350

31:                                               ; preds = %26
  %32 = load i32, i32* @tunable_write_enable, align 4, !dbg !5351
  %33 = icmp ne i32 %32, 0, !dbg !5351
  br i1 %33, label %34, label %39, !dbg !5354

34:                                               ; preds = %31
  %35 = load i32, i32* @tunable_chmod_enable, align 4, !dbg !5355
  %36 = icmp ne i32 %35, 0, !dbg !5355
  br i1 %36, label %37, label %39, !dbg !5356

37:                                               ; preds = %34
  %38 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5357
  call void @vsf_cmdio_write(%struct.vsf_session* %38, i32 214, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.146, i32 0, i32 0)), !dbg !5359
  br label %41, !dbg !5360

39:                                               ; preds = %34, %31
  %40 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5361
  call void @vsf_cmdio_write(%struct.vsf_session* %40, i32 214, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.147, i32 0, i32 0)), !dbg !5363
  br label %41

41:                                               ; preds = %39, %37
  br label %44, !dbg !5364

42:                                               ; preds = %26
  %43 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5365
  call void @vsf_cmdio_write(%struct.vsf_session* %43, i32 500, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.148, i32 0, i32 0)), !dbg !5367
  br label %44

44:                                               ; preds = %42, %41
  br label %45

45:                                               ; preds = %44, %24
  br label %46

46:                                               ; preds = %45, %17
  ret void, !dbg !5368
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_appe(%struct.vsf_session*) #0 !dbg !5369 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5370, metadata !DIExpression()), !dbg !5371
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5372
  call void @handle_upload_common(%struct.vsf_session* %3, i32 1, i32 0), !dbg !5373
  ret void, !dbg !5374
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_mdtm(%struct.vsf_session*) #0 !dbg !322 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct.str_locate_result, align 4
  %6 = alloca { i64, i8 }, align 8
  %7 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5375, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5377, metadata !DIExpression()), !dbg !5378
  store i32 0, i32* %3, align 4, !dbg !5378
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5379, metadata !DIExpression()), !dbg !5380
  store i64 0, i64* %4, align 8, !dbg !5380
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %5, metadata !5381, metadata !DIExpression()), !dbg !5387
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5388
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 41, !dbg !5389
  %10 = call { i64, i8 } @str_locate_char(%struct.mystr* %9, i8 signext 32), !dbg !5390
  store { i64, i8 } %10, { i64, i8 }* %6, align 8, !dbg !5390
  %11 = bitcast { i64, i8 }* %6 to i8*, !dbg !5390
  %12 = bitcast %struct.str_locate_result* %5 to i8*, !dbg !5390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %11, i64 12, i1 false), !dbg !5390
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5391, metadata !DIExpression()), !dbg !5392
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5393
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 41, !dbg !5394
  %15 = call i32 @str_stat(%struct.mystr* %14, %struct.vsf_sysutil_statbuf** @handle_mdtm.s_p_statbuf), !dbg !5395
  store i32 %15, i32* %7, align 4, !dbg !5392
  %16 = load i32, i32* @tunable_mdtm_write, align 4, !dbg !5396
  %17 = icmp ne i32 %16, 0, !dbg !5396
  br i1 %17, label %18, label %52, !dbg !5398

18:                                               ; preds = %1
  %19 = load i32, i32* %7, align 4, !dbg !5399
  %20 = icmp ne i32 %19, 0, !dbg !5400
  br i1 %20, label %21, label %52, !dbg !5401

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %5, i32 0, i32 0, !dbg !5402
  %23 = load i32, i32* %22, align 4, !dbg !5402
  %24 = icmp ne i32 %23, 0, !dbg !5403
  br i1 %24, label %25, label %52, !dbg !5404

25:                                               ; preds = %21
  %26 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5405
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 41, !dbg !5406
  %28 = call signext i8 @str_get_char_at(%struct.mystr* %27, i32 0), !dbg !5407
  %29 = sext i8 %28 to i32, !dbg !5407
  %30 = call i32 @vsf_sysutil_isdigit(i32 %29), !dbg !5408
  %31 = icmp ne i32 %30, 0, !dbg !5408
  br i1 %31, label %32, label %52, !dbg !5409

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %5, i32 0, i32 1, !dbg !5410
  %34 = load i32, i32* %33, align 4, !dbg !5410
  %35 = icmp eq i32 %34, 8, !dbg !5413
  br i1 %35, label %50, label %36, !dbg !5414

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %5, i32 0, i32 1, !dbg !5415
  %38 = load i32, i32* %37, align 4, !dbg !5415
  %39 = icmp eq i32 %38, 14, !dbg !5416
  br i1 %39, label %50, label %40, !dbg !5417

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %5, i32 0, i32 1, !dbg !5418
  %42 = load i32, i32* %41, align 4, !dbg !5418
  %43 = icmp ugt i32 %42, 15, !dbg !5419
  br i1 %43, label %44, label %51, !dbg !5420

44:                                               ; preds = %40
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5421
  %46 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %45, i32 0, i32 41, !dbg !5422
  %47 = call signext i8 @str_get_char_at(%struct.mystr* %46, i32 14), !dbg !5423
  %48 = sext i8 %47 to i32, !dbg !5423
  %49 = icmp eq i32 %48, 46, !dbg !5424
  br i1 %49, label %50, label %51, !dbg !5425

50:                                               ; preds = %44, %36, %32
  store i32 1, i32* %3, align 4, !dbg !5426
  br label %51, !dbg !5428

51:                                               ; preds = %50, %44, %40
  br label %52, !dbg !5429

52:                                               ; preds = %51, %25, %21, %18, %1
  %53 = load i32, i32* %3, align 4, !dbg !5430
  %54 = icmp ne i32 %53, 0, !dbg !5432
  br i1 %54, label %55, label %64, !dbg !5433

55:                                               ; preds = %52
  %56 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5434
  %57 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %56, i32 0, i32 41, !dbg !5436
  call void @str_split_char(%struct.mystr* %57, %struct.mystr* @handle_mdtm.s_filename_str, i8 signext 32), !dbg !5437
  %58 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5438
  %59 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %58, i32 0, i32 41, !dbg !5439
  %60 = call i8* @str_getbuf(%struct.mystr* %59), !dbg !5440
  %61 = call i64 @vsf_sysutil_parse_time(i8* %60), !dbg !5441
  store i64 %61, i64* %4, align 8, !dbg !5442
  %62 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5443
  %63 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %62, i32 0, i32 41, !dbg !5444
  call void @str_copy(%struct.mystr* %63, %struct.mystr* @handle_mdtm.s_filename_str), !dbg !5445
  br label %64, !dbg !5446

64:                                               ; preds = %55, %52
  %65 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5447
  %66 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %65, i32 0, i32 41, !dbg !5448
  %67 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5449
  call void @resolve_tilde(%struct.mystr* %66, %struct.vsf_session* %67), !dbg !5450
  %68 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5451
  %69 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %68, i32 0, i32 41, !dbg !5453
  %70 = call i32 @vsf_access_check_file(%struct.mystr* %69), !dbg !5454
  %71 = icmp ne i32 %70, 0, !dbg !5454
  br i1 %71, label %74, label %72, !dbg !5455

72:                                               ; preds = %64
  %73 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5456
  call void @vsf_cmdio_write(%struct.vsf_session* %73, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !5458
  br label %130, !dbg !5459

74:                                               ; preds = %64
  %75 = load i32, i32* %3, align 4, !dbg !5460
  %76 = icmp ne i32 %75, 0, !dbg !5460
  br i1 %76, label %77, label %115, !dbg !5462

77:                                               ; preds = %74
  %78 = load i32, i32* @tunable_write_enable, align 4, !dbg !5463
  %79 = icmp ne i32 %78, 0, !dbg !5463
  br i1 %79, label %80, label %115, !dbg !5464

80:                                               ; preds = %77
  %81 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !5465
  %82 = icmp ne i32 %81, 0, !dbg !5465
  br i1 %82, label %88, label %83, !dbg !5466

83:                                               ; preds = %80
  %84 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5467
  %85 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %84, i32 0, i32 12, !dbg !5468
  %86 = load i32, i32* %85, align 8, !dbg !5468
  %87 = icmp ne i32 %86, 0, !dbg !5467
  br i1 %87, label %115, label %88, !dbg !5469

88:                                               ; preds = %83, %80
  %89 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5470
  %90 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %89, i32 0, i32 41, !dbg !5472
  %91 = call i32 @str_stat(%struct.mystr* %90, %struct.vsf_sysutil_statbuf** @handle_mdtm.s_p_statbuf), !dbg !5473
  store i32 %91, i32* %7, align 4, !dbg !5474
  %92 = load i32, i32* %7, align 4, !dbg !5475
  %93 = icmp ne i32 %92, 0, !dbg !5477
  br i1 %93, label %98, label %94, !dbg !5478

94:                                               ; preds = %88
  %95 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_mdtm.s_p_statbuf, align 8, !dbg !5479
  %96 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %95), !dbg !5480
  %97 = icmp ne i32 %96, 0, !dbg !5480
  br i1 %97, label %100, label %98, !dbg !5481

98:                                               ; preds = %94, %88
  %99 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5482
  call void @vsf_cmdio_write(%struct.vsf_session* %99, i32 550, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.154, i32 0, i32 0)), !dbg !5484
  br label %114, !dbg !5485

100:                                              ; preds = %94
  %101 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5486
  %102 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %101, i32 0, i32 41, !dbg !5488
  %103 = call i8* @str_getbuf(%struct.mystr* %102), !dbg !5489
  %104 = load i64, i64* %4, align 8, !dbg !5490
  %105 = load i32, i32* @tunable_use_localtime, align 4, !dbg !5491
  %106 = call i32 @vsf_sysutil_setmodtime(i8* %103, i64 %104, i32 %105), !dbg !5492
  store i32 %106, i32* %7, align 4, !dbg !5493
  %107 = load i32, i32* %7, align 4, !dbg !5494
  %108 = icmp ne i32 %107, 0, !dbg !5496
  br i1 %108, label %109, label %111, !dbg !5497

109:                                              ; preds = %100
  %110 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5498
  call void @vsf_cmdio_write(%struct.vsf_session* %110, i32 550, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.154, i32 0, i32 0)), !dbg !5500
  br label %113, !dbg !5501

111:                                              ; preds = %100
  %112 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5502
  call void @vsf_cmdio_write(%struct.vsf_session* %112, i32 213, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.155, i32 0, i32 0)), !dbg !5504
  br label %113

113:                                              ; preds = %111, %109
  br label %114

114:                                              ; preds = %113, %98
  br label %130, !dbg !5505

115:                                              ; preds = %83, %77, %74
  %116 = load i32, i32* %7, align 4, !dbg !5506
  %117 = icmp ne i32 %116, 0, !dbg !5509
  br i1 %117, label %122, label %118, !dbg !5510

118:                                              ; preds = %115
  %119 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_mdtm.s_p_statbuf, align 8, !dbg !5511
  %120 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %119), !dbg !5512
  %121 = icmp ne i32 %120, 0, !dbg !5512
  br i1 %121, label %124, label %122, !dbg !5513

122:                                              ; preds = %118, %115
  %123 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5514
  call void @vsf_cmdio_write(%struct.vsf_session* %123, i32 550, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.156, i32 0, i32 0)), !dbg !5516
  br label %129, !dbg !5517

124:                                              ; preds = %118
  %125 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_mdtm.s_p_statbuf, align 8, !dbg !5518
  %126 = load i32, i32* @tunable_use_localtime, align 4, !dbg !5520
  %127 = call i8* @vsf_sysutil_statbuf_get_numeric_date(%struct.vsf_sysutil_statbuf* %125, i32 %126), !dbg !5521
  call void @str_alloc_text(%struct.mystr* @handle_mdtm.s_mdtm_res_str, i8* %127), !dbg !5522
  %128 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5523
  call void @vsf_cmdio_write_str(%struct.vsf_session* %128, i32 213, %struct.mystr* @handle_mdtm.s_mdtm_res_str), !dbg !5524
  br label %129

129:                                              ; preds = %124, %122
  br label %130

130:                                              ; preds = %72, %129, %114
  ret void, !dbg !5525
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_eprt(%struct.vsf_session*) #0 !dbg !329 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5526, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5528, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5530, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5532, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5534, metadata !DIExpression()), !dbg !5535
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5536
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 0, !dbg !5537
  %9 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %8, align 8, !dbg !5537
  %10 = call i32 @vsf_sysutil_sockaddr_is_ipv6(%struct.vsf_sysutil_sockaddr* %9), !dbg !5538
  store i32 %10, i32* %6, align 4, !dbg !5535
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5539
  call void @port_cleanup(%struct.vsf_session* %11), !dbg !5540
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5541
  call void @pasv_cleanup(%struct.vsf_session* %12), !dbg !5542
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5543
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 41, !dbg !5544
  call void @str_copy(%struct.mystr* @handle_eprt.s_part1_str, %struct.mystr* %14), !dbg !5545
  call void @str_split_char(%struct.mystr* @handle_eprt.s_part1_str, %struct.mystr* @handle_eprt.s_part2_str, i8 signext 124), !dbg !5546
  %15 = call i32 @str_isempty(%struct.mystr* @handle_eprt.s_part1_str), !dbg !5547
  %16 = icmp ne i32 %15, 0, !dbg !5547
  br i1 %16, label %18, label %17, !dbg !5549

17:                                               ; preds = %1
  br label %105, !dbg !5550

18:                                               ; preds = %1
  call void @str_split_char(%struct.mystr* @handle_eprt.s_part2_str, %struct.mystr* @handle_eprt.s_part1_str, i8 signext 124), !dbg !5552
  %19 = call i32 @str_atoi(%struct.mystr* @handle_eprt.s_part2_str), !dbg !5553
  store i32 %19, i32* %3, align 4, !dbg !5554
  %20 = load i32, i32* %3, align 4, !dbg !5555
  %21 = icmp slt i32 %20, 1, !dbg !5557
  br i1 %21, label %31, label %22, !dbg !5558

22:                                               ; preds = %18
  %23 = load i32, i32* %3, align 4, !dbg !5559
  %24 = icmp sgt i32 %23, 2, !dbg !5560
  br i1 %24, label %31, label %25, !dbg !5561

25:                                               ; preds = %22
  %26 = load i32, i32* %6, align 4, !dbg !5562
  %27 = icmp ne i32 %26, 0, !dbg !5562
  br i1 %27, label %33, label %28, !dbg !5563

28:                                               ; preds = %25
  %29 = load i32, i32* %3, align 4, !dbg !5564
  %30 = icmp eq i32 %29, 2, !dbg !5565
  br i1 %30, label %31, label %33, !dbg !5566

31:                                               ; preds = %28, %22, %18
  %32 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5567
  call void @vsf_cmdio_write(%struct.vsf_session* %32, i32 500, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.157, i32 0, i32 0)), !dbg !5569
  br label %107, !dbg !5570

33:                                               ; preds = %28, %25
  call void @str_split_char(%struct.mystr* @handle_eprt.s_part1_str, %struct.mystr* @handle_eprt.s_part2_str, i8 signext 124), !dbg !5571
  %34 = load i32, i32* %3, align 4, !dbg !5572
  %35 = icmp eq i32 %34, 2, !dbg !5574
  br i1 %35, label %36, label %38, !dbg !5575

36:                                               ; preds = %33
  call void @str_split_char(%struct.mystr* @handle_eprt.s_part1_str, %struct.mystr* @handle_eprt.s_scopeid_str, i8 signext 37), !dbg !5576
  %37 = call i8* @vsf_sysutil_parse_ipv6(%struct.mystr* @handle_eprt.s_part1_str), !dbg !5578
  store i8* %37, i8** %5, align 8, !dbg !5579
  br label %40, !dbg !5580

38:                                               ; preds = %33
  %39 = call i8* @vsf_sysutil_parse_ipv4(%struct.mystr* @handle_eprt.s_part1_str), !dbg !5581
  store i8* %39, i8** %5, align 8, !dbg !5583
  br label %40

40:                                               ; preds = %38, %36
  %41 = load i8*, i8** %5, align 8, !dbg !5584
  %42 = icmp ne i8* %41, null, !dbg !5584
  br i1 %42, label %44, label %43, !dbg !5586

43:                                               ; preds = %40
  br label %105, !dbg !5587

44:                                               ; preds = %40
  call void @str_split_char(%struct.mystr* @handle_eprt.s_part2_str, %struct.mystr* @handle_eprt.s_part1_str, i8 signext 124), !dbg !5589
  %45 = call i32 @str_isempty(%struct.mystr* @handle_eprt.s_part1_str), !dbg !5590
  %46 = icmp ne i32 %45, 0, !dbg !5590
  br i1 %46, label %47, label %50, !dbg !5592

47:                                               ; preds = %44
  %48 = call i32 @str_isempty(%struct.mystr* @handle_eprt.s_part2_str), !dbg !5593
  %49 = icmp ne i32 %48, 0, !dbg !5593
  br i1 %49, label %50, label %51, !dbg !5594

50:                                               ; preds = %47, %44
  br label %105, !dbg !5595

51:                                               ; preds = %47
  %52 = call i32 @str_atoi(%struct.mystr* @handle_eprt.s_part2_str), !dbg !5597
  store i32 %52, i32* %4, align 4, !dbg !5598
  %53 = load i32, i32* %4, align 4, !dbg !5599
  %54 = icmp slt i32 %53, 0, !dbg !5601
  br i1 %54, label %58, label %55, !dbg !5602

55:                                               ; preds = %51
  %56 = load i32, i32* %4, align 4, !dbg !5603
  %57 = icmp sgt i32 %56, 65535, !dbg !5604
  br i1 %57, label %58, label %59, !dbg !5605

58:                                               ; preds = %55, %51
  br label %105, !dbg !5606

59:                                               ; preds = %55
  %60 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5608
  %61 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %60, i32 0, i32 6, !dbg !5609
  %62 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5610
  %63 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %62, i32 0, i32 0, !dbg !5611
  %64 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %63, align 8, !dbg !5611
  call void @vsf_sysutil_sockaddr_clone(%struct.vsf_sysutil_sockaddr** %61, %struct.vsf_sysutil_sockaddr* %64), !dbg !5612
  %65 = load i32, i32* %3, align 4, !dbg !5613
  %66 = icmp eq i32 %65, 2, !dbg !5615
  br i1 %66, label %67, label %72, !dbg !5616

67:                                               ; preds = %59
  %68 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5617
  %69 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %68, i32 0, i32 6, !dbg !5619
  %70 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %69, align 8, !dbg !5619
  %71 = load i8*, i8** %5, align 8, !dbg !5620
  call void @vsf_sysutil_sockaddr_set_ipv6addr(%struct.vsf_sysutil_sockaddr* %70, i8* %71), !dbg !5621
  br label %77, !dbg !5622

72:                                               ; preds = %59
  %73 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5623
  %74 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %73, i32 0, i32 6, !dbg !5625
  %75 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %74, align 8, !dbg !5625
  %76 = load i8*, i8** %5, align 8, !dbg !5626
  call void @vsf_sysutil_sockaddr_set_ipv4addr(%struct.vsf_sysutil_sockaddr* %75, i8* %76), !dbg !5627
  br label %77

77:                                               ; preds = %72, %67
  %78 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5628
  %79 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %78, i32 0, i32 6, !dbg !5629
  %80 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %79, align 8, !dbg !5629
  %81 = load i32, i32* %4, align 4, !dbg !5630
  %82 = trunc i32 %81 to i16, !dbg !5631
  call void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr* %80, i16 zeroext %82), !dbg !5632
  %83 = load i32, i32* @tunable_port_promiscuous, align 4, !dbg !5633
  %84 = icmp ne i32 %83, 0, !dbg !5633
  br i1 %84, label %103, label %85, !dbg !5635

85:                                               ; preds = %77
  %86 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5636
  %87 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %86, i32 0, i32 1, !dbg !5639
  %88 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %87, align 8, !dbg !5639
  %89 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5640
  %90 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %89, i32 0, i32 6, !dbg !5641
  %91 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %90, align 8, !dbg !5641
  %92 = call i32 @vsf_sysutil_sockaddr_addr_equal(%struct.vsf_sysutil_sockaddr* %88, %struct.vsf_sysutil_sockaddr* %91), !dbg !5642
  %93 = icmp ne i32 %92, 0, !dbg !5642
  br i1 %93, label %94, label %99, !dbg !5643

94:                                               ; preds = %85
  %95 = load i32, i32* %4, align 4, !dbg !5644
  %96 = trunc i32 %95 to i16, !dbg !5645
  %97 = call i32 @vsf_sysutil_is_port_reserved(i16 zeroext %96), !dbg !5646
  %98 = icmp ne i32 %97, 0, !dbg !5646
  br i1 %98, label %99, label %102, !dbg !5647

99:                                               ; preds = %94, %85
  %100 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5648
  call void @vsf_cmdio_write(%struct.vsf_session* %100, i32 500, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.158, i32 0, i32 0)), !dbg !5650
  %101 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5651
  call void @port_cleanup(%struct.vsf_session* %101), !dbg !5652
  br label %107, !dbg !5653

102:                                              ; preds = %94
  br label %103, !dbg !5654

103:                                              ; preds = %102, %77
  %104 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5655
  call void @vsf_cmdio_write(%struct.vsf_session* %104, i32 200, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.159, i32 0, i32 0)), !dbg !5656
  br label %107, !dbg !5657

105:                                              ; preds = %58, %50, %43, %17
  %106 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5658
  call void @vsf_cmdio_write(%struct.vsf_session* %106, i32 500, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.160, i32 0, i32 0)), !dbg !5659
  br label %107, !dbg !5660

107:                                              ; preds = %105, %103, %99, %31
  ret void, !dbg !5660
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_stou(%struct.vsf_session*) #0 !dbg !5661 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5662, metadata !DIExpression()), !dbg !5663
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5664
  call void @handle_upload_common(%struct.vsf_session* %3, i32 0, i32 1), !dbg !5665
  ret void, !dbg !5666
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_stat(%struct.vsf_session*) #0 !dbg !5667 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5668, metadata !DIExpression()), !dbg !5669
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5670
  call void @vsf_cmdio_write_hyphen(%struct.vsf_session* %3, i32 211, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.167, i32 0, i32 0)), !dbg !5671
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5672
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.168, i32 0, i32 0)), !dbg !5673
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5674
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5675
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 34, !dbg !5676
  %8 = call i8* @str_getbuf(%struct.mystr* %7), !dbg !5677
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %5, i8* %8), !dbg !5678
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5679
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0)), !dbg !5680
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5681
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.170, i32 0, i32 0)), !dbg !5682
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5683
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5684
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 14, !dbg !5685
  %14 = call i8* @str_getbuf(%struct.mystr* %13), !dbg !5686
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %11, i8* %14), !dbg !5687
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5688
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0)), !dbg !5689
  %16 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5690
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.171, i32 0, i32 0)), !dbg !5691
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5692
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 17, !dbg !5694
  %19 = load i32, i32* %18, align 8, !dbg !5694
  %20 = icmp ne i32 %19, 0, !dbg !5692
  br i1 %20, label %21, label %23, !dbg !5695

21:                                               ; preds = %1
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5696
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i32 0, i32 0)), !dbg !5698
  br label %25, !dbg !5699

23:                                               ; preds = %1
  %24 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5700
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.173, i32 0, i32 0)), !dbg !5702
  br label %25

25:                                               ; preds = %23, %21
  %26 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5703
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 9, !dbg !5705
  %28 = load i32, i32* %27, align 8, !dbg !5705
  %29 = icmp eq i32 %28, 0, !dbg !5706
  br i1 %29, label %30, label %32, !dbg !5707

30:                                               ; preds = %25
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5708
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %31, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.174, i32 0, i32 0)), !dbg !5710
  br label %41, !dbg !5711

32:                                               ; preds = %25
  %33 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5712
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %33, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.175, i32 0, i32 0)), !dbg !5714
  %34 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5715
  %35 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5716
  %36 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %35, i32 0, i32 9, !dbg !5717
  %37 = load i32, i32* %36, align 8, !dbg !5717
  %38 = zext i32 %37 to i64, !dbg !5716
  %39 = call i8* @vsf_sysutil_ulong_to_str(i64 %38), !dbg !5718
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %34, i8* %39), !dbg !5719
  %40 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5720
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0)), !dbg !5721
  br label %41

41:                                               ; preds = %32, %30
  %42 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !5722
  %43 = icmp eq i32 %42, 0, !dbg !5724
  br i1 %43, label %44, label %46, !dbg !5725

44:                                               ; preds = %41
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5726
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.176, i32 0, i32 0)), !dbg !5728
  br label %53, !dbg !5729

46:                                               ; preds = %41
  %47 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5730
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %47, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.177, i32 0, i32 0)), !dbg !5732
  %48 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5733
  %49 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !5734
  %50 = zext i32 %49 to i64, !dbg !5734
  %51 = call i8* @vsf_sysutil_ulong_to_str(i64 %50), !dbg !5735
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %48, i8* %51), !dbg !5736
  %52 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5737
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0)), !dbg !5738
  br label %53

53:                                               ; preds = %46, %44
  %54 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5739
  %55 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %54, i32 0, i32 47, !dbg !5741
  %56 = load i32, i32* %55, align 8, !dbg !5741
  %57 = icmp ne i32 %56, 0, !dbg !5739
  br i1 %57, label %58, label %60, !dbg !5742

58:                                               ; preds = %53
  %59 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5743
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %59, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.178, i32 0, i32 0)), !dbg !5745
  br label %62, !dbg !5746

60:                                               ; preds = %53
  %61 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5747
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %61, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.179, i32 0, i32 0)), !dbg !5749
  br label %62

62:                                               ; preds = %60, %58
  %63 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5750
  %64 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %63, i32 0, i32 48, !dbg !5752
  %65 = load i32, i32* %64, align 4, !dbg !5752
  %66 = icmp ne i32 %65, 0, !dbg !5750
  br i1 %66, label %67, label %69, !dbg !5753

67:                                               ; preds = %62
  %68 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5754
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %68, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.180, i32 0, i32 0)), !dbg !5756
  br label %71, !dbg !5757

69:                                               ; preds = %62
  %70 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5758
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %70, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.181, i32 0, i32 0)), !dbg !5760
  br label %71

71:                                               ; preds = %69, %67
  %72 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5761
  %73 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %72, i32 0, i32 44, !dbg !5763
  %74 = load i32, i32* %73, align 8, !dbg !5763
  %75 = icmp ugt i32 %74, 0, !dbg !5764
  br i1 %75, label %76, label %85, !dbg !5765

76:                                               ; preds = %71
  %77 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5766
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %77, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.182, i32 0, i32 0)), !dbg !5768
  %78 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5769
  %79 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5770
  %80 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %79, i32 0, i32 44, !dbg !5771
  %81 = load i32, i32* %80, align 8, !dbg !5771
  %82 = zext i32 %81 to i64, !dbg !5770
  %83 = call i8* @vsf_sysutil_ulong_to_str(i64 %82), !dbg !5772
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %78, i8* %83), !dbg !5773
  %84 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5774
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0)), !dbg !5775
  br label %85, !dbg !5776

85:                                               ; preds = %76, %71
  %86 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5777
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %86, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.183, i32 0, i32 0)), !dbg !5778
  %87 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5779
  call void @vsf_cmdio_write(%struct.vsf_session* %87, i32 211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.113, i32 0, i32 0)), !dbg !5780
  ret void, !dbg !5781
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_stat_file(%struct.vsf_session*) #0 !dbg !5782 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5783, metadata !DIExpression()), !dbg !5784
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5785
  call void @handle_dir_common(%struct.vsf_session* %3, i32 1, i32 1), !dbg !5786
  ret void, !dbg !5787
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_logged_in_user(%struct.vsf_session*) #0 !dbg !5788 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5789, metadata !DIExpression()), !dbg !5790
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5791
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 12, !dbg !5793
  %5 = load i32, i32* %4, align 8, !dbg !5793
  %6 = icmp ne i32 %5, 0, !dbg !5791
  br i1 %6, label %7, label %9, !dbg !5794

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5795
  call void @vsf_cmdio_write(%struct.vsf_session* %8, i32 530, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.184, i32 0, i32 0)), !dbg !5797
  br label %21, !dbg !5798

9:                                                ; preds = %1
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5799
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 14, !dbg !5801
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5802
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 41, !dbg !5803
  %14 = call i32 @str_equal(%struct.mystr* %11, %struct.mystr* %13), !dbg !5804
  %15 = icmp ne i32 %14, 0, !dbg !5804
  br i1 %15, label %16, label %18, !dbg !5805

16:                                               ; preds = %9
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5806
  call void @vsf_cmdio_write(%struct.vsf_session* %17, i32 331, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.185, i32 0, i32 0)), !dbg !5808
  br label %20, !dbg !5809

18:                                               ; preds = %9
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5810
  call void @vsf_cmdio_write(%struct.vsf_session* %19, i32 530, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.186, i32 0, i32 0)), !dbg !5812
  br label %20

20:                                               ; preds = %18, %16
  br label %21

21:                                               ; preds = %20, %7
  ret void, !dbg !5813
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_logged_in_pass(%struct.vsf_session*) #0 !dbg !5814 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !5815, metadata !DIExpression()), !dbg !5816
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !5817
  call void @vsf_cmdio_write(%struct.vsf_session* %3, i32 230, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.187, i32 0, i32 0)), !dbg !5818
  ret void, !dbg !5819
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_dir_common(%struct.vsf_session*, i32, i32) #0 !dbg !267 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.vsf_sysutil_dir*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.str_locate_result, align 4
  %12 = alloca { i64, i8 }, align 8
  %13 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !5820, metadata !DIExpression()), !dbg !5821
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5822, metadata !DIExpression()), !dbg !5823
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5824, metadata !DIExpression()), !dbg !5825
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5826, metadata !DIExpression()), !dbg !5827
  store i32 1, i32* %7, align 4, !dbg !5827
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %8, metadata !5828, metadata !DIExpression()), !dbg !5831
  store %struct.vsf_sysutil_dir* null, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5831
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5832, metadata !DIExpression()), !dbg !5833
  store i32 0, i32* %9, align 4, !dbg !5833
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5834, metadata !DIExpression()), !dbg !5835
  store i32 0, i32* %10, align 4, !dbg !5835
  call void @str_empty(%struct.mystr* @handle_dir_common.s_option_str), !dbg !5836
  call void @str_empty(%struct.mystr* @handle_dir_common.s_filter_str), !dbg !5837
  call void @str_alloc_text(%struct.mystr* @handle_dir_common.s_dir_name_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0)), !dbg !5838
  %14 = load i32, i32* %6, align 4, !dbg !5839
  %15 = icmp ne i32 %14, 0, !dbg !5839
  br i1 %15, label %21, label %16, !dbg !5841

16:                                               ; preds = %3
  %17 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5842
  %18 = call i32 @data_transfer_checks_ok(%struct.vsf_session* %17), !dbg !5843
  %19 = icmp ne i32 %18, 0, !dbg !5843
  br i1 %19, label %21, label %20, !dbg !5844

20:                                               ; preds = %16
  br label %167, !dbg !5845

21:                                               ; preds = %16, %3
  %22 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5847
  %23 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %22, i32 0, i32 41, !dbg !5849
  %24 = call i32 @str_isempty(%struct.mystr* %23), !dbg !5850
  %25 = icmp ne i32 %24, 0, !dbg !5850
  br i1 %25, label %35, label %26, !dbg !5851

26:                                               ; preds = %21
  %27 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5852
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 41, !dbg !5853
  %29 = call signext i8 @str_get_char_at(%struct.mystr* %28, i32 0), !dbg !5854
  %30 = sext i8 %29 to i32, !dbg !5854
  %31 = icmp eq i32 %30, 45, !dbg !5855
  br i1 %31, label %32, label %35, !dbg !5856

32:                                               ; preds = %26
  %33 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5857
  %34 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %33, i32 0, i32 41, !dbg !5859
  call void @str_mid_to_end(%struct.mystr* %34, %struct.mystr* @handle_dir_common.s_option_str, i32 1), !dbg !5860
  call void @str_split_char(%struct.mystr* @handle_dir_common.s_option_str, %struct.mystr* @handle_dir_common.s_filter_str, i8 signext 32), !dbg !5861
  br label %38, !dbg !5862

35:                                               ; preds = %26, %21
  %36 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5863
  %37 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %36, i32 0, i32 41, !dbg !5865
  call void @str_copy(%struct.mystr* @handle_dir_common.s_filter_str, %struct.mystr* %37), !dbg !5866
  br label %38

38:                                               ; preds = %35, %32
  %39 = call i32 @str_isempty(%struct.mystr* @handle_dir_common.s_filter_str), !dbg !5867
  %40 = icmp ne i32 %39, 0, !dbg !5867
  br i1 %40, label %66, label %41, !dbg !5869

41:                                               ; preds = %38
  %42 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5870
  call void @resolve_tilde(%struct.mystr* @handle_dir_common.s_filter_str, %struct.vsf_session* %42), !dbg !5872
  %43 = call i32 @vsf_access_check_file(%struct.mystr* @handle_dir_common.s_filter_str), !dbg !5873
  %44 = icmp ne i32 %43, 0, !dbg !5873
  br i1 %44, label %47, label %45, !dbg !5875

45:                                               ; preds = %41
  %46 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5876
  call void @vsf_cmdio_write(%struct.vsf_session* %46, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !5878
  br label %167, !dbg !5879

47:                                               ; preds = %41
  %48 = call %struct.vsf_sysutil_dir* @str_opendir(%struct.mystr* @handle_dir_common.s_filter_str), !dbg !5880
  store %struct.vsf_sysutil_dir* %48, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5881
  %49 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5882
  %50 = icmp ne %struct.vsf_sysutil_dir* %49, null, !dbg !5884
  br i1 %50, label %51, label %52, !dbg !5885

51:                                               ; preds = %47
  call void @str_copy(%struct.mystr* @handle_dir_common.s_dir_name_str, %struct.mystr* @handle_dir_common.s_filter_str), !dbg !5886
  call void @str_free(%struct.mystr* @handle_dir_common.s_filter_str), !dbg !5888
  br label %65, !dbg !5889

52:                                               ; preds = %47
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %11, metadata !5890, metadata !DIExpression()), !dbg !5892
  %53 = call { i64, i8 } @str_locate_char(%struct.mystr* @handle_dir_common.s_filter_str, i8 signext 47), !dbg !5893
  store { i64, i8 } %53, { i64, i8 }* %12, align 8, !dbg !5893
  %54 = bitcast { i64, i8 }* %12 to i8*, !dbg !5893
  %55 = bitcast %struct.str_locate_result* %11 to i8*, !dbg !5893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %54, i64 12, i1 false), !dbg !5893
  %56 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %11, i32 0, i32 0, !dbg !5894
  %57 = load i32, i32* %56, align 4, !dbg !5894
  %58 = icmp ne i32 %57, 0, !dbg !5896
  br i1 %58, label %59, label %64, !dbg !5897

59:                                               ; preds = %52
  call void @str_copy(%struct.mystr* @handle_dir_common.s_dir_name_str, %struct.mystr* @handle_dir_common.s_filter_str), !dbg !5898
  call void @str_split_char_reverse(%struct.mystr* @handle_dir_common.s_dir_name_str, %struct.mystr* @handle_dir_common.s_filter_str, i8 signext 47), !dbg !5900
  %60 = call i32 @str_isempty(%struct.mystr* @handle_dir_common.s_dir_name_str), !dbg !5901
  %61 = icmp ne i32 %60, 0, !dbg !5901
  br i1 %61, label %62, label %63, !dbg !5903

62:                                               ; preds = %59
  call void @str_alloc_text(%struct.mystr* @handle_dir_common.s_dir_name_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110, i32 0, i32 0)), !dbg !5904
  br label %63, !dbg !5906

63:                                               ; preds = %62, %59
  br label %64, !dbg !5907

64:                                               ; preds = %63, %52
  br label %65

65:                                               ; preds = %64, %51
  br label %66, !dbg !5908

66:                                               ; preds = %65, %38
  %67 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5909
  %68 = icmp eq %struct.vsf_sysutil_dir* %67, null, !dbg !5911
  br i1 %68, label %69, label %71, !dbg !5912

69:                                               ; preds = %66
  %70 = call %struct.vsf_sysutil_dir* @str_opendir(%struct.mystr* @handle_dir_common.s_dir_name_str), !dbg !5913
  store %struct.vsf_sysutil_dir* %70, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5915
  br label %71, !dbg !5916

71:                                               ; preds = %69, %66
  %72 = load i32, i32* %6, align 4, !dbg !5917
  %73 = icmp ne i32 %72, 0, !dbg !5917
  br i1 %73, label %74, label %76, !dbg !5919

74:                                               ; preds = %71
  store i32 1, i32* %10, align 4, !dbg !5920
  call void @str_append_char(%struct.mystr* @handle_dir_common.s_option_str, i8 signext 97), !dbg !5922
  %75 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5923
  call void @vsf_cmdio_write_hyphen(%struct.vsf_session* %75, i32 213, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.111, i32 0, i32 0)), !dbg !5924
  br label %84, !dbg !5925

76:                                               ; preds = %71
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5926, metadata !DIExpression()), !dbg !5928
  %77 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5929
  %78 = call i32 @get_remote_transfer_fd(%struct.vsf_session* %77, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.112, i32 0, i32 0)), !dbg !5930
  store i32 %78, i32* %13, align 4, !dbg !5928
  %79 = load i32, i32* %13, align 4, !dbg !5931
  %80 = call i32 @vsf_sysutil_retval_is_error(i32 %79), !dbg !5933
  %81 = icmp ne i32 %80, 0, !dbg !5933
  br i1 %81, label %82, label %83, !dbg !5934

82:                                               ; preds = %76
  br label %156, !dbg !5935

83:                                               ; preds = %76
  br label %84

84:                                               ; preds = %83, %74
  %85 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5937
  %86 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %85, i32 0, i32 12, !dbg !5939
  %87 = load i32, i32* %86, align 8, !dbg !5939
  %88 = icmp ne i32 %87, 0, !dbg !5937
  br i1 %88, label %89, label %102, !dbg !5940

89:                                               ; preds = %84
  %90 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5941
  %91 = icmp ne %struct.vsf_sysutil_dir* %90, null, !dbg !5941
  br i1 %91, label %92, label %102, !dbg !5942

92:                                               ; preds = %89
  %93 = load i32, i32* @tunable_anon_world_readable_only, align 4, !dbg !5943
  %94 = icmp ne i32 %93, 0, !dbg !5943
  br i1 %94, label %95, label %102, !dbg !5944

95:                                               ; preds = %92
  %96 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5945
  call void @vsf_sysutil_dir_stat(%struct.vsf_sysutil_dir* %96, %struct.vsf_sysutil_statbuf** @handle_dir_common.s_p_dirstat), !dbg !5947
  %97 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_dir_common.s_p_dirstat, align 8, !dbg !5948
  %98 = call i32 @vsf_sysutil_statbuf_is_readable_other(%struct.vsf_sysutil_statbuf* %97), !dbg !5950
  %99 = icmp ne i32 %98, 0, !dbg !5950
  br i1 %99, label %101, label %100, !dbg !5951

100:                                              ; preds = %95
  store i32 0, i32* %7, align 4, !dbg !5952
  br label %101, !dbg !5954

101:                                              ; preds = %100, %95
  br label %102, !dbg !5955

102:                                              ; preds = %101, %92, %89, %84
  %103 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5956
  %104 = icmp ne %struct.vsf_sysutil_dir* %103, null, !dbg !5958
  br i1 %104, label %105, label %114, !dbg !5959

105:                                              ; preds = %102
  %106 = load i32, i32* %7, align 4, !dbg !5960
  %107 = icmp ne i32 %106, 0, !dbg !5960
  br i1 %107, label %108, label %114, !dbg !5961

108:                                              ; preds = %105
  %109 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5962
  %110 = load i32, i32* %10, align 4, !dbg !5964
  %111 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !5965
  %112 = load i32, i32* %5, align 4, !dbg !5966
  %113 = call i32 @vsf_ftpdataio_transfer_dir(%struct.vsf_session* %109, i32 %110, %struct.vsf_sysutil_dir* %111, %struct.mystr* @handle_dir_common.s_dir_name_str, %struct.mystr* @handle_dir_common.s_option_str, %struct.mystr* @handle_dir_common.s_filter_str, i32 %112), !dbg !5967
  store i32 %113, i32* %9, align 4, !dbg !5968
  br label %114, !dbg !5969

114:                                              ; preds = %108, %105, %102
  %115 = load i32, i32* %6, align 4, !dbg !5970
  %116 = icmp ne i32 %115, 0, !dbg !5970
  br i1 %116, label %126, label %117, !dbg !5972

117:                                              ; preds = %114
  %118 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5973
  %119 = call i32 @vsf_ftpdataio_dispose_transfer_fd(%struct.vsf_session* %118), !dbg !5976
  %120 = icmp ne i32 %119, 1, !dbg !5977
  br i1 %120, label %121, label %125, !dbg !5978

121:                                              ; preds = %117
  %122 = load i32, i32* %9, align 4, !dbg !5979
  %123 = icmp eq i32 %122, 0, !dbg !5980
  br i1 %123, label %124, label %125, !dbg !5981

124:                                              ; preds = %121
  store i32 -1, i32* %9, align 4, !dbg !5982
  br label %125, !dbg !5984

125:                                              ; preds = %124, %121, %117
  br label %126, !dbg !5985

126:                                              ; preds = %125, %114
  %127 = load i32, i32* %6, align 4, !dbg !5986
  %128 = icmp ne i32 %127, 0, !dbg !5986
  br i1 %128, label %129, label %131, !dbg !5988

129:                                              ; preds = %126
  %130 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5989
  call void @vsf_cmdio_write(%struct.vsf_session* %130, i32 213, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.113, i32 0, i32 0)), !dbg !5991
  br label %154, !dbg !5992

131:                                              ; preds = %126
  %132 = load i32, i32* %9, align 4, !dbg !5993
  %133 = icmp ne i32 %132, 0, !dbg !5995
  br i1 %133, label %134, label %142, !dbg !5996

134:                                              ; preds = %131
  %135 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !5997
  %136 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %135, i32 0, i32 4, !dbg !6000
  %137 = load i32, i32* %136, align 4, !dbg !6000
  %138 = icmp ne i32 %137, 0, !dbg !5997
  br i1 %138, label %141, label %139, !dbg !6001

139:                                              ; preds = %134
  %140 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6002
  call void @vsf_cmdio_write(%struct.vsf_session* %140, i32 426, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i32 0, i32 0)), !dbg !6004
  br label %141, !dbg !6005

141:                                              ; preds = %139, %134
  br label %153, !dbg !6006

142:                                              ; preds = %131
  %143 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !6007
  %144 = icmp eq %struct.vsf_sysutil_dir* %143, null, !dbg !6009
  br i1 %144, label %148, label %145, !dbg !6010

145:                                              ; preds = %142
  %146 = load i32, i32* %7, align 4, !dbg !6011
  %147 = icmp ne i32 %146, 0, !dbg !6011
  br i1 %147, label %150, label %148, !dbg !6012

148:                                              ; preds = %145, %142
  %149 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6013
  call void @vsf_cmdio_write(%struct.vsf_session* %149, i32 226, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.114, i32 0, i32 0)), !dbg !6015
  br label %152, !dbg !6016

150:                                              ; preds = %145
  %151 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6017
  call void @vsf_cmdio_write(%struct.vsf_session* %151, i32 226, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.115, i32 0, i32 0)), !dbg !6019
  br label %152

152:                                              ; preds = %150, %148
  br label %153

153:                                              ; preds = %152, %141
  br label %154

154:                                              ; preds = %153, %129
  %155 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6020
  call void @check_abor(%struct.vsf_session* %155), !dbg !6021
  br label %156, !dbg !6021

156:                                              ; preds = %154, %82
  %157 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !6022
  %158 = icmp ne %struct.vsf_sysutil_dir* %157, null, !dbg !6022
  br i1 %158, label %159, label %161, !dbg !6024

159:                                              ; preds = %156
  %160 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %8, align 8, !dbg !6025
  call void @vsf_sysutil_closedir(%struct.vsf_sysutil_dir* %160), !dbg !6027
  br label %161, !dbg !6028

161:                                              ; preds = %159, %156
  %162 = load i32, i32* %6, align 4, !dbg !6029
  %163 = icmp ne i32 %162, 0, !dbg !6029
  br i1 %163, label %167, label %164, !dbg !6031

164:                                              ; preds = %161
  %165 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6032
  call void @port_cleanup(%struct.vsf_session* %165), !dbg !6034
  %166 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6035
  call void @pasv_cleanup(%struct.vsf_session* %166), !dbg !6036
  br label %167, !dbg !6037

167:                                              ; preds = %20, %45, %164, %161
  ret void, !dbg !6038
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @data_transfer_checks_ok(%struct.vsf_session*) #0 !dbg !6039 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !6042, metadata !DIExpression()), !dbg !6043
  %4 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6044
  %5 = call i32 @pasv_active(%struct.vsf_session* %4), !dbg !6046
  %6 = icmp ne i32 %5, 0, !dbg !6046
  br i1 %6, label %13, label %7, !dbg !6047

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6048
  %9 = call i32 @port_active(%struct.vsf_session* %8), !dbg !6049
  %10 = icmp ne i32 %9, 0, !dbg !6049
  br i1 %10, label %13, label %11, !dbg !6050

11:                                               ; preds = %7
  %12 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6051
  call void @vsf_cmdio_write(%struct.vsf_session* %12, i32 425, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.103, i32 0, i32 0)), !dbg !6053
  store i32 0, i32* %2, align 4, !dbg !6054
  br label %40, !dbg !6054

13:                                               ; preds = %7, %1
  %14 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !6055
  %15 = icmp ne i32 %14, 0, !dbg !6055
  br i1 %15, label %16, label %39, !dbg !6057

16:                                               ; preds = %13
  %17 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6058
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 48, !dbg !6059
  %19 = load i32, i32* %18, align 4, !dbg !6059
  %20 = icmp ne i32 %19, 0, !dbg !6058
  br i1 %20, label %39, label %21, !dbg !6060

21:                                               ; preds = %16
  %22 = load i32, i32* @tunable_force_local_data_ssl, align 4, !dbg !6061
  %23 = icmp ne i32 %22, 0, !dbg !6061
  br i1 %23, label %24, label %29, !dbg !6062

24:                                               ; preds = %21
  %25 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6063
  %26 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %25, i32 0, i32 12, !dbg !6064
  %27 = load i32, i32* %26, align 8, !dbg !6064
  %28 = icmp ne i32 %27, 0, !dbg !6063
  br i1 %28, label %29, label %37, !dbg !6065

29:                                               ; preds = %24, %21
  %30 = load i32, i32* @tunable_force_anon_data_ssl, align 4, !dbg !6066
  %31 = icmp ne i32 %30, 0, !dbg !6066
  br i1 %31, label %32, label %39, !dbg !6067

32:                                               ; preds = %29
  %33 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6068
  %34 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %33, i32 0, i32 12, !dbg !6069
  %35 = load i32, i32* %34, align 8, !dbg !6069
  %36 = icmp ne i32 %35, 0, !dbg !6068
  br i1 %36, label %37, label %39, !dbg !6070

37:                                               ; preds = %32, %24
  %38 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6071
  call void @vsf_cmdio_write(%struct.vsf_session* %38, i32 522, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.104, i32 0, i32 0)), !dbg !6073
  store i32 0, i32* %2, align 4, !dbg !6074
  br label %40, !dbg !6074

39:                                               ; preds = %32, %29, %16, %13
  store i32 1, i32* %2, align 4, !dbg !6075
  br label %40, !dbg !6075

40:                                               ; preds = %39, %37, %11
  %41 = load i32, i32* %2, align 4, !dbg !6076
  ret i32 %41, !dbg !6076
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @resolve_tilde(%struct.mystr*, %struct.vsf_session*) #0 !dbg !240 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.vsf_sysutil_user*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !6077, metadata !DIExpression()), !dbg !6078
  store %struct.vsf_session* %1, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6081, metadata !DIExpression()), !dbg !6082
  %7 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6083
  %8 = call i32 @str_getlen(%struct.mystr* %7), !dbg !6084
  store i32 %8, i32* %5, align 4, !dbg !6082
  %9 = load i32, i32* %5, align 4, !dbg !6085
  %10 = icmp ugt i32 %9, 0, !dbg !6087
  br i1 %10, label %11, label %54, !dbg !6088

11:                                               ; preds = %2
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6089
  %13 = call signext i8 @str_get_char_at(%struct.mystr* %12, i32 0), !dbg !6090
  %14 = sext i8 %13 to i32, !dbg !6090
  %15 = icmp eq i32 %14, 126, !dbg !6091
  br i1 %15, label %16, label %54, !dbg !6092

16:                                               ; preds = %11
  %17 = load i32, i32* %5, align 4, !dbg !6093
  %18 = icmp eq i32 %17, 1, !dbg !6096
  br i1 %18, label %24, label %19, !dbg !6097

19:                                               ; preds = %16
  %20 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6098
  %21 = call signext i8 @str_get_char_at(%struct.mystr* %20, i32 1), !dbg !6099
  %22 = sext i8 %21 to i32, !dbg !6099
  %23 = icmp eq i32 %22, 47, !dbg !6100
  br i1 %23, label %24, label %30, !dbg !6101

24:                                               ; preds = %19, %16
  %25 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6102
  call void @str_split_char(%struct.mystr* %25, %struct.mystr* @resolve_tilde.s_rhs_str, i8 signext 126), !dbg !6104
  %26 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6105
  %27 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6106
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 46, !dbg !6107
  call void @str_copy(%struct.mystr* %26, %struct.mystr* %28), !dbg !6108
  %29 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6109
  call void @str_append_str(%struct.mystr* %29, %struct.mystr* @resolve_tilde.s_rhs_str), !dbg !6110
  br label %53, !dbg !6111

30:                                               ; preds = %19
  %31 = load i32, i32* @tunable_tilde_user_enable, align 4, !dbg !6112
  %32 = icmp ne i32 %31, 0, !dbg !6112
  br i1 %32, label %33, label %52, !dbg !6114

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !6115
  %35 = icmp ugt i32 %34, 1, !dbg !6116
  br i1 %35, label %36, label %52, !dbg !6117

36:                                               ; preds = %33
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %6, metadata !6118, metadata !DIExpression()), !dbg !6122
  %37 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6123
  call void @str_copy(%struct.mystr* @resolve_tilde.s_rhs_str, %struct.mystr* %37), !dbg !6124
  call void @str_split_char(%struct.mystr* @resolve_tilde.s_rhs_str, %struct.mystr* @resolve_tilde.s_user_str, i8 signext 126), !dbg !6125
  call void @str_split_char(%struct.mystr* @resolve_tilde.s_user_str, %struct.mystr* @resolve_tilde.s_rhs_str, i8 signext 47), !dbg !6126
  %38 = call %struct.vsf_sysutil_user* @str_getpwnam(%struct.mystr* @resolve_tilde.s_user_str), !dbg !6127
  store %struct.vsf_sysutil_user* %38, %struct.vsf_sysutil_user** %6, align 8, !dbg !6128
  %39 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %6, align 8, !dbg !6129
  %40 = icmp ne %struct.vsf_sysutil_user* %39, null, !dbg !6131
  br i1 %40, label %41, label %51, !dbg !6132

41:                                               ; preds = %36
  %42 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6133
  %43 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %6, align 8, !dbg !6135
  %44 = call i8* @vsf_sysutil_user_get_homedir(%struct.vsf_sysutil_user* %43), !dbg !6136
  call void @str_alloc_text(%struct.mystr* %42, i8* %44), !dbg !6137
  %45 = call i32 @str_isempty(%struct.mystr* @resolve_tilde.s_rhs_str), !dbg !6138
  %46 = icmp ne i32 %45, 0, !dbg !6138
  br i1 %46, label %50, label %47, !dbg !6140

47:                                               ; preds = %41
  %48 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6141
  call void @str_append_char(%struct.mystr* %48, i8 signext 47), !dbg !6143
  %49 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6144
  call void @str_append_str(%struct.mystr* %49, %struct.mystr* @resolve_tilde.s_rhs_str), !dbg !6145
  br label %50, !dbg !6146

50:                                               ; preds = %47, %41
  br label %51, !dbg !6147

51:                                               ; preds = %50, %36
  br label %52, !dbg !6148

52:                                               ; preds = %51, %33, %30
  br label %53

53:                                               ; preds = %52, %24
  br label %54, !dbg !6149

54:                                               ; preds = %53, %11, %2
  ret void, !dbg !6150
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @get_remote_transfer_fd(%struct.vsf_session*, i8*) #0 !dbg !6151 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !6154, metadata !DIExpression()), !dbg !6155
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6158, metadata !DIExpression()), !dbg !6159
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6160
  %8 = call i32 @pasv_active(%struct.vsf_session* %7), !dbg !6162
  %9 = icmp ne i32 %8, 0, !dbg !6162
  br i1 %9, label %15, label %10, !dbg !6163

10:                                               ; preds = %2
  %11 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6164
  %12 = call i32 @port_active(%struct.vsf_session* %11), !dbg !6165
  %13 = icmp ne i32 %12, 0, !dbg !6165
  br i1 %13, label %15, label %14, !dbg !6166

14:                                               ; preds = %10
  call void @bug(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.107, i32 0, i32 0)), !dbg !6167
  br label %15, !dbg !6169

15:                                               ; preds = %14, %10, %2
  %16 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6170
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 19, !dbg !6171
  store i32 0, i32* %17, align 8, !dbg !6172
  %18 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6173
  %19 = call i32 @pasv_active(%struct.vsf_session* %18), !dbg !6175
  %20 = icmp ne i32 %19, 0, !dbg !6175
  br i1 %20, label %21, label %24, !dbg !6176

21:                                               ; preds = %15
  %22 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6177
  %23 = call i32 @vsf_ftpdataio_get_pasv_fd(%struct.vsf_session* %22), !dbg !6179
  store i32 %23, i32* %6, align 4, !dbg !6180
  br label %27, !dbg !6181

24:                                               ; preds = %15
  %25 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6182
  %26 = call i32 @vsf_ftpdataio_get_port_fd(%struct.vsf_session* %25), !dbg !6184
  store i32 %26, i32* %6, align 4, !dbg !6185
  br label %27

27:                                               ; preds = %24, %21
  %28 = load i32, i32* %6, align 4, !dbg !6186
  %29 = call i32 @vsf_sysutil_retval_is_error(i32 %28), !dbg !6188
  %30 = icmp ne i32 %29, 0, !dbg !6188
  br i1 %30, label %31, label %33, !dbg !6189

31:                                               ; preds = %27
  %32 = load i32, i32* %6, align 4, !dbg !6190
  store i32 %32, i32* %3, align 4, !dbg !6192
  br label %44, !dbg !6192

33:                                               ; preds = %27
  %34 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6193
  %35 = load i8*, i8** %5, align 8, !dbg !6194
  call void @vsf_cmdio_write(%struct.vsf_session* %34, i32 150, i8* %35), !dbg !6195
  %36 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6196
  %37 = call i32 @vsf_ftpdataio_post_mark_connect(%struct.vsf_session* %36), !dbg !6198
  %38 = icmp ne i32 %37, 1, !dbg !6199
  br i1 %38, label %39, label %42, !dbg !6200

39:                                               ; preds = %33
  %40 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6201
  %41 = call i32 @vsf_ftpdataio_dispose_transfer_fd(%struct.vsf_session* %40), !dbg !6203
  store i32 -1, i32* %3, align 4, !dbg !6204
  br label %44, !dbg !6204

42:                                               ; preds = %33
  %43 = load i32, i32* %6, align 4, !dbg !6205
  store i32 %43, i32* %3, align 4, !dbg !6206
  br label %44, !dbg !6206

44:                                               ; preds = %42, %39, %31
  %45 = load i32, i32* %3, align 4, !dbg !6207
  ret i32 %45, !dbg !6207
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @check_abor(%struct.vsf_session*) #0 !dbg !6208 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6209, metadata !DIExpression()), !dbg !6210
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6211
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 19, !dbg !6213
  %5 = load i32, i32* %4, align 8, !dbg !6213
  %6 = icmp ne i32 %5, 0, !dbg !6211
  br i1 %6, label %7, label %11, !dbg !6214

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6215
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 19, !dbg !6217
  store i32 0, i32* %9, align 8, !dbg !6218
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6219
  call void @vsf_cmdio_write(%struct.vsf_session* %10, i32 226, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.108, i32 0, i32 0)), !dbg !6220
  br label %11, !dbg !6221

11:                                               ; preds = %7, %1
  ret void, !dbg !6222
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @port_cleanup(%struct.vsf_session*) #0 !dbg !6223 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6224, metadata !DIExpression()), !dbg !6225
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6226
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 6, !dbg !6227
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %4), !dbg !6228
  ret void, !dbg !6229
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @pasv_cleanup(%struct.vsf_session*) #0 !dbg !6230 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6231, metadata !DIExpression()), !dbg !6232
  %3 = load i32, i32* @tunable_one_process_model, align 4, !dbg !6233
  %4 = icmp ne i32 %3, 0, !dbg !6233
  br i1 %4, label %5, label %7, !dbg !6235

5:                                                ; preds = %1
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6236
  call void @vsf_one_process_pasv_cleanup(%struct.vsf_session* %6), !dbg !6238
  br label %9, !dbg !6239

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6240
  call void @vsf_two_process_pasv_cleanup(%struct.vsf_session* %8), !dbg !6242
  br label %9

9:                                                ; preds = %7, %5
  ret void, !dbg !6243
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pasv_active(%struct.vsf_session*) #0 !dbg !6244 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6247, metadata !DIExpression()), !dbg !6248
  store i32 0, i32* %3, align 4, !dbg !6248
  %4 = load i32, i32* @tunable_one_process_model, align 4, !dbg !6249
  %5 = icmp ne i32 %4, 0, !dbg !6249
  br i1 %5, label %6, label %9, !dbg !6251

6:                                                ; preds = %1
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6252
  %8 = call i32 @vsf_one_process_pasv_active(%struct.vsf_session* %7), !dbg !6254
  store i32 %8, i32* %3, align 4, !dbg !6255
  br label %12, !dbg !6256

9:                                                ; preds = %1
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6257
  %11 = call i32 @vsf_two_process_pasv_active(%struct.vsf_session* %10), !dbg !6259
  store i32 %11, i32* %3, align 4, !dbg !6260
  br label %12

12:                                               ; preds = %9, %6
  %13 = load i32, i32* %3, align 4, !dbg !6261
  %14 = icmp ne i32 %13, 0, !dbg !6261
  br i1 %14, label %15, label %21, !dbg !6263

15:                                               ; preds = %12
  %16 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6264
  %17 = call i32 @port_active(%struct.vsf_session* %16), !dbg !6267
  %18 = icmp ne i32 %17, 0, !dbg !6267
  br i1 %18, label %19, label %20, !dbg !6268

19:                                               ; preds = %15
  call void @bug(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)), !dbg !6269
  br label %20, !dbg !6271

20:                                               ; preds = %19, %15
  br label %21, !dbg !6272

21:                                               ; preds = %20, %12
  %22 = load i32, i32* %3, align 4, !dbg !6273
  ret i32 %22, !dbg !6274
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @port_active(%struct.vsf_session*) #0 !dbg !6275 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6276, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6278, metadata !DIExpression()), !dbg !6279
  store i32 0, i32* %3, align 4, !dbg !6279
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6280
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 6, !dbg !6282
  %6 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !6282
  %7 = icmp ne %struct.vsf_sysutil_sockaddr* %6, null, !dbg !6283
  br i1 %7, label %8, label %14, !dbg !6284

8:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !6285
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6287
  %10 = call i32 @pasv_active(%struct.vsf_session* %9), !dbg !6289
  %11 = icmp ne i32 %10, 0, !dbg !6289
  br i1 %11, label %12, label %13, !dbg !6290

12:                                               ; preds = %8
  call void @bug(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.106, i32 0, i32 0)), !dbg !6291
  br label %13, !dbg !6293

13:                                               ; preds = %12, %8
  br label %14, !dbg !6294

14:                                               ; preds = %13, %1
  %15 = load i32, i32* %3, align 4, !dbg !6295
  ret i32 %15, !dbg !6296
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_upload_common(%struct.vsf_session*, i32, i32) #0 !dbg !278 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.mystr*, align 8
  %8 = alloca %struct.vsf_transfer_ret, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca %struct.mystr, align 8
  %16 = alloca %struct.vsf_transfer_ret, align 8
  %17 = alloca %struct.vsf_transfer_ret, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !6297, metadata !DIExpression()), !dbg !6298
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6299, metadata !DIExpression()), !dbg !6300
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6301, metadata !DIExpression()), !dbg !6302
  call void @llvm.dbg.declare(metadata %struct.mystr** %7, metadata !6303, metadata !DIExpression()), !dbg !6304
  call void @llvm.dbg.declare(metadata %struct.vsf_transfer_ret* %8, metadata !6305, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6307, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6309, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6311, metadata !DIExpression()), !dbg !6312
  store i32 0, i32* %11, align 4, !dbg !6312
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6313, metadata !DIExpression()), !dbg !6314
  store i32 0, i32* %12, align 4, !dbg !6314
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6315, metadata !DIExpression()), !dbg !6316
  store i32 0, i32* %13, align 4, !dbg !6316
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6317, metadata !DIExpression()), !dbg !6318
  %18 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6319
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 16, !dbg !6320
  %20 = load i64, i64* %19, align 8, !dbg !6320
  store i64 %20, i64* %14, align 8, !dbg !6318
  %21 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6321
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 16, !dbg !6322
  store i64 0, i64* %22, align 8, !dbg !6323
  %23 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6324
  %24 = call i32 @data_transfer_checks_ok(%struct.vsf_session* %23), !dbg !6326
  %25 = icmp ne i32 %24, 0, !dbg !6326
  br i1 %25, label %27, label %26, !dbg !6327

26:                                               ; preds = %3
  br label %242, !dbg !6328

27:                                               ; preds = %3
  %28 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6330
  %29 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %28, i32 0, i32 41, !dbg !6331
  %30 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6332
  call void @resolve_tilde(%struct.mystr* %29, %struct.vsf_session* %30), !dbg !6333
  %31 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6334
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 41, !dbg !6335
  store %struct.mystr* %32, %struct.mystr** %7, align 8, !dbg !6336
  %33 = load i32, i32* %6, align 4, !dbg !6337
  %34 = icmp ne i32 %33, 0, !dbg !6337
  br i1 %34, label %35, label %37, !dbg !6339

35:                                               ; preds = %27
  %36 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !6340
  call void @get_unique_filename(%struct.mystr* @handle_upload_common.s_filename, %struct.mystr* %36), !dbg !6342
  store %struct.mystr* @handle_upload_common.s_filename, %struct.mystr** %7, align 8, !dbg !6343
  br label %37, !dbg !6344

37:                                               ; preds = %35, %27
  %38 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6345
  call void @vsf_log_start_entry(%struct.vsf_session* %38, i32 3), !dbg !6346
  %39 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6347
  %40 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %39, i32 0, i32 38, !dbg !6348
  %41 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6349
  %42 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %41, i32 0, i32 41, !dbg !6350
  call void @str_copy(%struct.mystr* %40, %struct.mystr* %42), !dbg !6351
  %43 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6352
  %44 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %43, i32 0, i32 38, !dbg !6353
  call void @prepend_path_to_filename(%struct.mystr* %44), !dbg !6354
  %45 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !6355
  %46 = call i32 @vsf_access_check_file(%struct.mystr* %45), !dbg !6357
  %47 = icmp ne i32 %46, 0, !dbg !6357
  br i1 %47, label %50, label %48, !dbg !6358

48:                                               ; preds = %37
  %49 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6359
  call void @vsf_cmdio_write(%struct.vsf_session* %49, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !6361
  br label %242, !dbg !6362

50:                                               ; preds = %37
  %51 = load i32, i32* %6, align 4, !dbg !6363
  %52 = icmp ne i32 %51, 0, !dbg !6363
  br i1 %52, label %61, label %53, !dbg !6365

53:                                               ; preds = %50
  %54 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6366
  %55 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %54, i32 0, i32 12, !dbg !6367
  %56 = load i32, i32* %55, align 8, !dbg !6367
  %57 = icmp ne i32 %56, 0, !dbg !6366
  br i1 %57, label %58, label %64, !dbg !6368

58:                                               ; preds = %53
  %59 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !6369
  %60 = icmp ne i32 %59, 0, !dbg !6369
  br i1 %60, label %64, label %61, !dbg !6370

61:                                               ; preds = %58, %50
  %62 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !6371
  %63 = call i32 @str_create_exclusive(%struct.mystr* %62), !dbg !6373
  store i32 %63, i32* %9, align 4, !dbg !6374
  br label %74, !dbg !6375

64:                                               ; preds = %58, %53
  %65 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !6376
  %66 = call i32 @str_create(%struct.mystr* %65), !dbg !6378
  store i32 %66, i32* %9, align 4, !dbg !6379
  %67 = load i32, i32* %5, align 4, !dbg !6380
  %68 = icmp ne i32 %67, 0, !dbg !6380
  br i1 %68, label %73, label %69, !dbg !6382

69:                                               ; preds = %64
  %70 = load i64, i64* %14, align 8, !dbg !6383
  %71 = icmp eq i64 %70, 0, !dbg !6384
  br i1 %71, label %72, label %73, !dbg !6385

72:                                               ; preds = %69
  store i32 1, i32* %13, align 4, !dbg !6386
  br label %73, !dbg !6388

73:                                               ; preds = %72, %69, %64
  br label %74

74:                                               ; preds = %73, %61
  %75 = load i32, i32* %9, align 4, !dbg !6389
  %76 = call i32 @vsf_sysutil_retval_is_error(i32 %75), !dbg !6391
  %77 = icmp ne i32 %76, 0, !dbg !6391
  br i1 %77, label %78, label %80, !dbg !6392

78:                                               ; preds = %74
  %79 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6393
  call void @vsf_cmdio_write(%struct.vsf_session* %79, i32 553, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.126, i32 0, i32 0)), !dbg !6395
  br label %242, !dbg !6396

80:                                               ; preds = %74
  store i32 1, i32* %12, align 4, !dbg !6397
  %81 = load i32, i32* %9, align 4, !dbg !6398
  call void @vsf_sysutil_fstat(i32 %81, %struct.vsf_sysutil_statbuf** @handle_upload_common.s_p_statbuf), !dbg !6399
  %82 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @handle_upload_common.s_p_statbuf, align 8, !dbg !6400
  %83 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %82), !dbg !6402
  %84 = icmp ne i32 %83, 0, !dbg !6402
  br i1 %84, label %85, label %87, !dbg !6403

85:                                               ; preds = %80
  %86 = load i32, i32* %9, align 4, !dbg !6404
  call void @vsf_sysutil_deactivate_noblock(i32 %86), !dbg !6406
  br label %87, !dbg !6407

87:                                               ; preds = %85, %80
  %88 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6408
  %89 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %88, i32 0, i32 12, !dbg !6410
  %90 = load i32, i32* %89, align 8, !dbg !6410
  %91 = icmp ne i32 %90, 0, !dbg !6408
  br i1 %91, label %92, label %107, !dbg !6411

92:                                               ; preds = %87
  %93 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !6412
  %94 = icmp ne i32 %93, 0, !dbg !6412
  br i1 %94, label %95, label %107, !dbg !6413

95:                                               ; preds = %92
  %96 = load i32, i32* %9, align 4, !dbg !6414
  %97 = load i32, i32* @tunable_chown_upload_mode, align 4, !dbg !6416
  call void @vsf_sysutil_fchmod(i32 %96, i32 %97), !dbg !6417
  %98 = load i32, i32* @tunable_one_process_model, align 4, !dbg !6418
  %99 = icmp ne i32 %98, 0, !dbg !6418
  br i1 %99, label %100, label %103, !dbg !6420

100:                                              ; preds = %95
  %101 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6421
  %102 = load i32, i32* %9, align 4, !dbg !6423
  call void @vsf_one_process_chown_upload(%struct.vsf_session* %101, i32 %102), !dbg !6424
  br label %106, !dbg !6425

103:                                              ; preds = %95
  %104 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6426
  %105 = load i32, i32* %9, align 4, !dbg !6428
  call void @vsf_two_process_chown_upload(%struct.vsf_session* %104, i32 %105), !dbg !6429
  br label %106

106:                                              ; preds = %103, %100
  br label %107, !dbg !6430

107:                                              ; preds = %106, %92, %87
  %108 = load i32, i32* @tunable_lock_upload_files, align 4, !dbg !6431
  %109 = icmp ne i32 %108, 0, !dbg !6431
  br i1 %109, label %110, label %113, !dbg !6433

110:                                              ; preds = %107
  %111 = load i32, i32* %9, align 4, !dbg !6434
  %112 = call i32 @vsf_sysutil_lock_file_write(i32 %111), !dbg !6436
  br label %113, !dbg !6437

113:                                              ; preds = %110, %107
  %114 = load i32, i32* %13, align 4, !dbg !6438
  %115 = icmp ne i32 %114, 0, !dbg !6438
  br i1 %115, label %116, label %119, !dbg !6440

116:                                              ; preds = %113
  %117 = load i32, i32* %9, align 4, !dbg !6441
  call void @vsf_sysutil_ftruncate(i32 %117), !dbg !6443
  %118 = load i32, i32* %9, align 4, !dbg !6444
  call void @vsf_sysutil_lseek_to(i32 %118, i64 0), !dbg !6445
  br label %119, !dbg !6446

119:                                              ; preds = %116, %113
  %120 = load i32, i32* %5, align 4, !dbg !6447
  %121 = icmp ne i32 %120, 0, !dbg !6447
  br i1 %121, label %128, label %122, !dbg !6449

122:                                              ; preds = %119
  %123 = load i64, i64* %14, align 8, !dbg !6450
  %124 = icmp ne i64 %123, 0, !dbg !6451
  br i1 %124, label %125, label %128, !dbg !6452

125:                                              ; preds = %122
  %126 = load i32, i32* %9, align 4, !dbg !6453
  %127 = load i64, i64* %14, align 8, !dbg !6455
  call void @vsf_sysutil_lseek_to(i32 %126, i64 %127), !dbg !6456
  br label %134, !dbg !6457

128:                                              ; preds = %122, %119
  %129 = load i32, i32* %5, align 4, !dbg !6458
  %130 = icmp ne i32 %129, 0, !dbg !6458
  br i1 %130, label %131, label %133, !dbg !6460

131:                                              ; preds = %128
  %132 = load i32, i32* %9, align 4, !dbg !6461
  call void @vsf_sysutil_lseek_end(i32 %132), !dbg !6463
  br label %133, !dbg !6464

133:                                              ; preds = %131, %128
  br label %134

134:                                              ; preds = %133, %125
  %135 = load i32, i32* %6, align 4, !dbg !6465
  %136 = icmp ne i32 %135, 0, !dbg !6465
  br i1 %136, label %137, label %143, !dbg !6467

137:                                              ; preds = %134
  call void @llvm.dbg.declare(metadata %struct.mystr* %15, metadata !6468, metadata !DIExpression()), !dbg !6470
  %138 = bitcast %struct.mystr* %15 to i8*, !dbg !6470
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 16, i1 false), !dbg !6470
  call void @str_alloc_text(%struct.mystr* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0)), !dbg !6471
  %139 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !6472
  call void @str_append_str(%struct.mystr* %15, %struct.mystr* %139), !dbg !6473
  %140 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6474
  %141 = call i8* @str_getbuf(%struct.mystr* %15), !dbg !6475
  %142 = call i32 @get_remote_transfer_fd(%struct.vsf_session* %140, i8* %141), !dbg !6476
  store i32 %142, i32* %10, align 4, !dbg !6477
  call void @str_free(%struct.mystr* %15), !dbg !6478
  br label %146, !dbg !6479

143:                                              ; preds = %134
  %144 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6480
  %145 = call i32 @get_remote_transfer_fd(%struct.vsf_session* %144, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.128, i32 0, i32 0)), !dbg !6482
  store i32 %145, i32* %10, align 4, !dbg !6483
  br label %146

146:                                              ; preds = %143, %137
  %147 = load i32, i32* %10, align 4, !dbg !6484
  %148 = call i32 @vsf_sysutil_retval_is_error(i32 %147), !dbg !6486
  %149 = icmp ne i32 %148, 0, !dbg !6486
  br i1 %149, label %150, label %151, !dbg !6487

150:                                              ; preds = %146
  br label %226, !dbg !6488

151:                                              ; preds = %146
  %152 = load i32, i32* @tunable_ascii_upload_enable, align 4, !dbg !6490
  %153 = icmp ne i32 %152, 0, !dbg !6490
  br i1 %153, label %154, label %171, !dbg !6492

154:                                              ; preds = %151
  %155 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6493
  %156 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %155, i32 0, i32 17, !dbg !6494
  %157 = load i32, i32* %156, align 8, !dbg !6494
  %158 = icmp ne i32 %157, 0, !dbg !6493
  br i1 %158, label %159, label %171, !dbg !6495

159:                                              ; preds = %154
  %160 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6496
  %161 = load i32, i32* %10, align 4, !dbg !6498
  %162 = load i32, i32* %9, align 4, !dbg !6499
  %163 = call { i32, i64 } @vsf_ftpdataio_transfer_file(%struct.vsf_session* %160, i32 %161, i32 %162, i32 1, i32 1), !dbg !6500
  %164 = bitcast %struct.vsf_transfer_ret* %16 to { i32, i64 }*, !dbg !6500
  %165 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %164, i32 0, i32 0, !dbg !6500
  %166 = extractvalue { i32, i64 } %163, 0, !dbg !6500
  store i32 %166, i32* %165, align 8, !dbg !6500
  %167 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %164, i32 0, i32 1, !dbg !6500
  %168 = extractvalue { i32, i64 } %163, 1, !dbg !6500
  store i64 %168, i64* %167, align 8, !dbg !6500
  %169 = bitcast %struct.vsf_transfer_ret* %8 to i8*, !dbg !6500
  %170 = bitcast %struct.vsf_transfer_ret* %16 to i8*, !dbg !6500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false), !dbg !6500
  br label %183, !dbg !6501

171:                                              ; preds = %154, %151
  %172 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6502
  %173 = load i32, i32* %10, align 4, !dbg !6504
  %174 = load i32, i32* %9, align 4, !dbg !6505
  %175 = call { i32, i64 } @vsf_ftpdataio_transfer_file(%struct.vsf_session* %172, i32 %173, i32 %174, i32 1, i32 0), !dbg !6506
  %176 = bitcast %struct.vsf_transfer_ret* %17 to { i32, i64 }*, !dbg !6506
  %177 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %176, i32 0, i32 0, !dbg !6506
  %178 = extractvalue { i32, i64 } %175, 0, !dbg !6506
  store i32 %178, i32* %177, align 8, !dbg !6506
  %179 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %176, i32 0, i32 1, !dbg !6506
  %180 = extractvalue { i32, i64 } %175, 1, !dbg !6506
  store i64 %180, i64* %179, align 8, !dbg !6506
  %181 = bitcast %struct.vsf_transfer_ret* %8 to i8*, !dbg !6506
  %182 = bitcast %struct.vsf_transfer_ret* %17 to i8*, !dbg !6506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 16, i1 false), !dbg !6506
  br label %183

183:                                              ; preds = %171, %159
  %184 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6507
  %185 = call i32 @vsf_ftpdataio_dispose_transfer_fd(%struct.vsf_session* %184), !dbg !6509
  %186 = icmp ne i32 %185, 1, !dbg !6510
  br i1 %186, label %187, label %193, !dbg !6511

187:                                              ; preds = %183
  %188 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 0, !dbg !6512
  %189 = load i32, i32* %188, align 8, !dbg !6512
  %190 = icmp eq i32 %189, 0, !dbg !6513
  br i1 %190, label %191, label %193, !dbg !6514

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 0, !dbg !6515
  store i32 -2, i32* %192, align 8, !dbg !6517
  br label %193, !dbg !6518

193:                                              ; preds = %191, %187, %183
  %194 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 1, !dbg !6519
  %195 = load i64, i64* %194, align 8, !dbg !6519
  %196 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6520
  %197 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %196, i32 0, i32 39, !dbg !6521
  store i64 %195, i64* %197, align 8, !dbg !6522
  %198 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 0, !dbg !6523
  %199 = load i32, i32* %198, align 8, !dbg !6523
  %200 = icmp eq i32 %199, 0, !dbg !6525
  br i1 %200, label %201, label %203, !dbg !6526

201:                                              ; preds = %193
  store i32 1, i32* %11, align 4, !dbg !6527
  %202 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6529
  call void @vsf_log_do_log(%struct.vsf_session* %202, i32 1), !dbg !6530
  br label %203, !dbg !6531

203:                                              ; preds = %201, %193
  %204 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 0, !dbg !6532
  %205 = load i32, i32* %204, align 8, !dbg !6532
  %206 = icmp eq i32 %205, -1, !dbg !6534
  br i1 %206, label %207, label %209, !dbg !6535

207:                                              ; preds = %203
  %208 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6536
  call void @vsf_cmdio_write(%struct.vsf_session* %208, i32 451, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.129, i32 0, i32 0)), !dbg !6538
  br label %224, !dbg !6539

209:                                              ; preds = %203
  %210 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 0, !dbg !6540
  %211 = load i32, i32* %210, align 8, !dbg !6540
  %212 = icmp eq i32 %211, -2, !dbg !6542
  br i1 %212, label %213, label %221, !dbg !6543

213:                                              ; preds = %209
  %214 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6544
  %215 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %214, i32 0, i32 4, !dbg !6547
  %216 = load i32, i32* %215, align 4, !dbg !6547
  %217 = icmp ne i32 %216, 0, !dbg !6544
  br i1 %217, label %220, label %218, !dbg !6548

218:                                              ; preds = %213
  %219 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6549
  call void @vsf_cmdio_write(%struct.vsf_session* %219, i32 426, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.130, i32 0, i32 0)), !dbg !6551
  br label %220, !dbg !6552

220:                                              ; preds = %218, %213
  br label %223, !dbg !6553

221:                                              ; preds = %209
  %222 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6554
  call void @vsf_cmdio_write(%struct.vsf_session* %222, i32 226, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.102, i32 0, i32 0)), !dbg !6556
  br label %223

223:                                              ; preds = %221, %220
  br label %224

224:                                              ; preds = %223, %207
  %225 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6557
  call void @check_abor(%struct.vsf_session* %225), !dbg !6558
  br label %226, !dbg !6558

226:                                              ; preds = %224, %150
  %227 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6559
  call void @port_cleanup(%struct.vsf_session* %227), !dbg !6560
  %228 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !6561
  call void @pasv_cleanup(%struct.vsf_session* %228), !dbg !6562
  %229 = load i32, i32* @tunable_delete_failed_uploads, align 4, !dbg !6563
  %230 = icmp ne i32 %229, 0, !dbg !6563
  br i1 %230, label %231, label %240, !dbg !6565

231:                                              ; preds = %226
  %232 = load i32, i32* %12, align 4, !dbg !6566
  %233 = icmp ne i32 %232, 0, !dbg !6566
  br i1 %233, label %234, label %240, !dbg !6567

234:                                              ; preds = %231
  %235 = load i32, i32* %11, align 4, !dbg !6568
  %236 = icmp ne i32 %235, 0, !dbg !6568
  br i1 %236, label %240, label %237, !dbg !6569

237:                                              ; preds = %234
  %238 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !6570
  %239 = call i32 @str_unlink(%struct.mystr* %238), !dbg !6572
  br label %240, !dbg !6573

240:                                              ; preds = %237, %234, %231, %226
  %241 = load i32, i32* %9, align 4, !dbg !6574
  call void @vsf_sysutil_close(i32 %241), !dbg !6575
  br label %242, !dbg !6576

242:                                              ; preds = %240, %78, %48, %26
  ret void, !dbg !6576
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @get_unique_filename(%struct.mystr*, %struct.mystr*) #0 !dbg !283 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !6577, metadata !DIExpression()), !dbg !6578
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !6579, metadata !DIExpression()), !dbg !6580
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6581, metadata !DIExpression()), !dbg !6582
  store i32 1, i32* %5, align 4, !dbg !6582
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !6583, metadata !DIExpression()), !dbg !6584
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6585
  store %struct.mystr* %8, %struct.mystr** %6, align 8, !dbg !6584
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6586, metadata !DIExpression()), !dbg !6587
  %9 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !6588
  %10 = call i32 @str_isempty(%struct.mystr* %9), !dbg !6590
  %11 = icmp ne i32 %10, 0, !dbg !6590
  br i1 %11, label %12, label %13, !dbg !6591

12:                                               ; preds = %2
  call void @str_alloc_text(%struct.mystr* @get_unique_filename.s_stou_str, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0)), !dbg !6592
  store %struct.mystr* @get_unique_filename.s_stou_str, %struct.mystr** %6, align 8, !dbg !6594
  br label %23, !dbg !6595

13:                                               ; preds = %2
  %14 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !6596
  %15 = call i32 @str_stat(%struct.mystr* %14, %struct.vsf_sysutil_statbuf** @get_unique_filename.s_p_statbuf), !dbg !6598
  store i32 %15, i32* %7, align 4, !dbg !6599
  %16 = load i32, i32* %7, align 4, !dbg !6600
  %17 = call i32 @vsf_sysutil_retval_is_error(i32 %16), !dbg !6602
  %18 = icmp ne i32 %17, 0, !dbg !6602
  br i1 %18, label %19, label %22, !dbg !6603

19:                                               ; preds = %13
  %20 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6604
  %21 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !6606
  call void @str_copy(%struct.mystr* %20, %struct.mystr* %21), !dbg !6607
  br label %40, !dbg !6608

22:                                               ; preds = %13
  br label %23

23:                                               ; preds = %22, %12
  br label %24, !dbg !6609

24:                                               ; preds = %23, %37
  %25 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6610
  %26 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !6612
  call void @str_copy(%struct.mystr* %25, %struct.mystr* %26), !dbg !6613
  %27 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6614
  call void @str_append_char(%struct.mystr* %27, i8 signext 46), !dbg !6615
  %28 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6616
  %29 = load i32, i32* %5, align 4, !dbg !6617
  %30 = zext i32 %29 to i64, !dbg !6617
  call void @str_append_ulong(%struct.mystr* %28, i64 %30), !dbg !6618
  %31 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !6619
  %32 = call i32 @str_stat(%struct.mystr* %31, %struct.vsf_sysutil_statbuf** @get_unique_filename.s_p_statbuf), !dbg !6620
  store i32 %32, i32* %7, align 4, !dbg !6621
  %33 = load i32, i32* %7, align 4, !dbg !6622
  %34 = call i32 @vsf_sysutil_retval_is_error(i32 %33), !dbg !6624
  %35 = icmp ne i32 %34, 0, !dbg !6624
  br i1 %35, label %36, label %37, !dbg !6625

36:                                               ; preds = %24
  br label %40, !dbg !6626

37:                                               ; preds = %24
  %38 = load i32, i32* %5, align 4, !dbg !6628
  %39 = add i32 %38, 1, !dbg !6628
  store i32 %39, i32* %5, align 4, !dbg !6628
  br label %24, !dbg !6609, !llvm.loop !6629

40:                                               ; preds = %36, %19
  ret void, !dbg !6631
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @prepend_path_to_filename(%struct.mystr*) #0 !dbg !262 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !6632, metadata !DIExpression()), !dbg !6633
  call void @str_empty(%struct.mystr* @prepend_path_to_filename.s_tmp_str), !dbg !6634
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !6635
  %4 = call i32 @str_isempty(%struct.mystr* %3), !dbg !6637
  %5 = icmp ne i32 %4, 0, !dbg !6637
  br i1 %5, label %11, label %6, !dbg !6638

6:                                                ; preds = %1
  %7 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !6639
  %8 = call signext i8 @str_get_char_at(%struct.mystr* %7, i32 0), !dbg !6640
  %9 = sext i8 %8 to i32, !dbg !6640
  %10 = icmp ne i32 %9, 47, !dbg !6641
  br i1 %10, label %11, label %22, !dbg !6642

11:                                               ; preds = %6, %1
  call void @str_getcwd(%struct.mystr* @prepend_path_to_filename.s_tmp_str), !dbg !6643
  %12 = call i32 @str_isempty(%struct.mystr* @prepend_path_to_filename.s_tmp_str), !dbg !6645
  %13 = icmp ne i32 %12, 0, !dbg !6645
  br i1 %13, label %20, label %14, !dbg !6647

14:                                               ; preds = %11
  %15 = call i32 @str_getlen(%struct.mystr* @prepend_path_to_filename.s_tmp_str), !dbg !6648
  %16 = sub i32 %15, 1, !dbg !6649
  %17 = call signext i8 @str_get_char_at(%struct.mystr* @prepend_path_to_filename.s_tmp_str, i32 %16), !dbg !6650
  %18 = sext i8 %17 to i32, !dbg !6650
  %19 = icmp ne i32 %18, 47, !dbg !6651
  br i1 %19, label %20, label %21, !dbg !6652

20:                                               ; preds = %14, %11
  call void @str_append_char(%struct.mystr* @prepend_path_to_filename.s_tmp_str, i8 signext 47), !dbg !6653
  br label %21, !dbg !6655

21:                                               ; preds = %20, %14
  br label %22, !dbg !6656

22:                                               ; preds = %21, %6
  %23 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !6657
  call void @str_append_str(%struct.mystr* @prepend_path_to_filename.s_tmp_str, %struct.mystr* %23), !dbg !6658
  %24 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !6659
  call void @str_copy(%struct.mystr* %24, %struct.mystr* @prepend_path_to_filename.s_tmp_str), !dbg !6660
  ret void, !dbg !6661
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_site_chmod(%struct.vsf_session*, %struct.mystr*) #0 !dbg !314 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !6662, metadata !DIExpression()), !dbg !6663
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !6664, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6666, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6668, metadata !DIExpression()), !dbg !6669
  %7 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6670
  %8 = call i32 @str_isempty(%struct.mystr* %7), !dbg !6672
  %9 = icmp ne i32 %8, 0, !dbg !6672
  br i1 %9, label %10, label %12, !dbg !6673

10:                                               ; preds = %2
  %11 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6674
  call void @vsf_cmdio_write(%struct.vsf_session* %11, i32 500, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.149, i32 0, i32 0)), !dbg !6676
  br label %47, !dbg !6677

12:                                               ; preds = %2
  %13 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6678
  call void @str_split_char(%struct.mystr* %13, %struct.mystr* @handle_site_chmod.s_chmod_file_str, i8 signext 32), !dbg !6679
  %14 = call i32 @str_isempty(%struct.mystr* @handle_site_chmod.s_chmod_file_str), !dbg !6680
  %15 = icmp ne i32 %14, 0, !dbg !6680
  br i1 %15, label %16, label %18, !dbg !6682

16:                                               ; preds = %12
  %17 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6683
  call void @vsf_cmdio_write(%struct.vsf_session* %17, i32 500, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.149, i32 0, i32 0)), !dbg !6685
  br label %47, !dbg !6686

18:                                               ; preds = %12
  %19 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6687
  call void @resolve_tilde(%struct.mystr* @handle_site_chmod.s_chmod_file_str, %struct.vsf_session* %19), !dbg !6688
  %20 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6689
  call void @vsf_log_start_entry(%struct.vsf_session* %20, i32 12), !dbg !6690
  %21 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6691
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 38, !dbg !6692
  call void @str_copy(%struct.mystr* %22, %struct.mystr* @handle_site_chmod.s_chmod_file_str), !dbg !6693
  %23 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6694
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 38, !dbg !6695
  call void @prepend_path_to_filename(%struct.mystr* %24), !dbg !6696
  %25 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6697
  %26 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %25, i32 0, i32 38, !dbg !6698
  call void @str_append_char(%struct.mystr* %26, i8 signext 32), !dbg !6699
  %27 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6700
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 38, !dbg !6701
  %29 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6702
  call void @str_append_str(%struct.mystr* %28, %struct.mystr* %29), !dbg !6703
  %30 = call i32 @vsf_access_check_file(%struct.mystr* @handle_site_chmod.s_chmod_file_str), !dbg !6704
  %31 = icmp ne i32 %30, 0, !dbg !6704
  br i1 %31, label %34, label %32, !dbg !6706

32:                                               ; preds = %18
  %33 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6707
  call void @vsf_cmdio_write(%struct.vsf_session* %33, i32 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.67, i32 0, i32 0)), !dbg !6709
  br label %47, !dbg !6710

34:                                               ; preds = %18
  %35 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6711
  %36 = call i32 @str_octal_to_uint(%struct.mystr* %35), !dbg !6712
  store i32 %36, i32* %5, align 4, !dbg !6713
  %37 = load i32, i32* %5, align 4, !dbg !6714
  %38 = call i32 @str_chmod(%struct.mystr* @handle_site_chmod.s_chmod_file_str, i32 %37), !dbg !6715
  store i32 %38, i32* %6, align 4, !dbg !6716
  %39 = load i32, i32* %6, align 4, !dbg !6717
  %40 = call i32 @vsf_sysutil_retval_is_error(i32 %39), !dbg !6719
  %41 = icmp ne i32 %40, 0, !dbg !6719
  br i1 %41, label %42, label %44, !dbg !6720

42:                                               ; preds = %34
  %43 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6721
  call void @vsf_cmdio_write(%struct.vsf_session* %43, i32 550, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.150, i32 0, i32 0)), !dbg !6723
  br label %47, !dbg !6724

44:                                               ; preds = %34
  %45 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6725
  call void @vsf_log_do_log(%struct.vsf_session* %45, i32 1), !dbg !6727
  %46 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6728
  call void @vsf_cmdio_write(%struct.vsf_session* %46, i32 200, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i32 0, i32 0)), !dbg !6729
  br label %47

47:                                               ; preds = %10, %16, %32, %44, %42
  ret void, !dbg !6730
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_site_umask(%struct.vsf_session*, %struct.mystr*) #0 !dbg !319 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !6731, metadata !DIExpression()), !dbg !6732
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !6733, metadata !DIExpression()), !dbg !6734
  %6 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6735
  %7 = call i32 @str_isempty(%struct.mystr* %6), !dbg !6737
  %8 = icmp ne i32 %7, 0, !dbg !6737
  br i1 %8, label %9, label %12, !dbg !6738

9:                                                ; preds = %2
  call void @str_alloc_text(%struct.mystr* @handle_site_umask.s_umask_resp_str, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.152, i32 0, i32 0)), !dbg !6739
  %10 = call i32 @vsf_sysutil_get_umask(), !dbg !6741
  %11 = call i8* @vsf_sysutil_uint_to_octal(i32 %10), !dbg !6742
  call void @str_append_text(%struct.mystr* @handle_site_umask.s_umask_resp_str, i8* %11), !dbg !6743
  br label %18, !dbg !6744

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6745, metadata !DIExpression()), !dbg !6747
  %13 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6748
  %14 = call i32 @str_octal_to_uint(%struct.mystr* %13), !dbg !6749
  store i32 %14, i32* %5, align 4, !dbg !6747
  %15 = load i32, i32* %5, align 4, !dbg !6750
  call void @vsf_sysutil_set_umask(i32 %15), !dbg !6751
  call void @str_alloc_text(%struct.mystr* @handle_site_umask.s_umask_resp_str, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i32 0, i32 0)), !dbg !6752
  %16 = call i32 @vsf_sysutil_get_umask(), !dbg !6753
  %17 = call i8* @vsf_sysutil_uint_to_octal(i32 %16), !dbg !6754
  call void @str_append_text(%struct.mystr* @handle_site_umask.s_umask_resp_str, i8* %17), !dbg !6755
  br label %18

18:                                               ; preds = %12, %9
  %19 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !6756
  call void @vsf_cmdio_write_str(%struct.vsf_session* %19, i32 200, %struct.mystr* @handle_site_umask.s_umask_resp_str), !dbg !6757
  ret void, !dbg !6758
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_init(%struct.vsf_session*) #0 !dbg !6759 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca %struct.vsf_client_launch, align 4
  %4 = alloca %struct.vsf_client_launch, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6827, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %3, metadata !6829, metadata !DIExpression()), !dbg !6834
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6835
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 42, !dbg !6837
  %7 = load i32, i32* %6, align 8, !dbg !6837
  %8 = icmp ne i32 %7, -1, !dbg !6838
  br i1 %8, label %9, label %10, !dbg !6839

9:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.198, i32 0, i32 0)), !dbg !6840
  br label %10, !dbg !6842

10:                                               ; preds = %9, %1
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6843
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 43, !dbg !6845
  %13 = load i32, i32* %12, align 4, !dbg !6845
  %14 = icmp ne i32 %13, -1, !dbg !6846
  br i1 %14, label %15, label %16, !dbg !6847

15:                                               ; preds = %10
  call void @bug(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.199, i32 0, i32 0)), !dbg !6848
  br label %16, !dbg !6850

16:                                               ; preds = %15, %10
  %17 = call i64 @vsf_sysutil_unix_stream_socketpair(), !dbg !6851
  %18 = bitcast %struct.vsf_client_launch* %4 to i64*, !dbg !6851
  store i64 %17, i64* %18, align 4, !dbg !6851
  %19 = bitcast %struct.vsf_client_launch* %3 to i8*, !dbg !6851
  %20 = bitcast %struct.vsf_client_launch* %4 to i8*, !dbg !6851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 8, i1 false), !dbg !6851
  %21 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %3, i32 0, i32 0, !dbg !6852
  %22 = load i32, i32* %21, align 4, !dbg !6852
  %23 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6853
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 42, !dbg !6854
  store i32 %22, i32* %24, align 8, !dbg !6855
  %25 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %3, i32 0, i32 1, !dbg !6856
  %26 = load i32, i32* %25, align 4, !dbg !6856
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6857
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 43, !dbg !6858
  store i32 %26, i32* %28, align 4, !dbg !6859
  ret void, !dbg !6860
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_close(%struct.vsf_session*) #0 !dbg !6861 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6862, metadata !DIExpression()), !dbg !6863
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6864
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 42, !dbg !6866
  %5 = load i32, i32* %4, align 8, !dbg !6866
  %6 = icmp ne i32 %5, -1, !dbg !6867
  br i1 %6, label %7, label %13, !dbg !6868

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6869
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 42, !dbg !6871
  %10 = load i32, i32* %9, align 8, !dbg !6871
  call void @vsf_sysutil_close(i32 %10), !dbg !6872
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6873
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 42, !dbg !6874
  store i32 -1, i32* %12, align 8, !dbg !6875
  br label %13, !dbg !6876

13:                                               ; preds = %7, %1
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6877
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 43, !dbg !6879
  %16 = load i32, i32* %15, align 4, !dbg !6879
  %17 = icmp ne i32 %16, -1, !dbg !6880
  br i1 %17, label %18, label %24, !dbg !6881

18:                                               ; preds = %13
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6882
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 43, !dbg !6884
  %21 = load i32, i32* %20, align 4, !dbg !6884
  call void @vsf_sysutil_close(i32 %21), !dbg !6885
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6886
  %23 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %22, i32 0, i32 43, !dbg !6887
  store i32 -1, i32* %23, align 4, !dbg !6888
  br label %24, !dbg !6889

24:                                               ; preds = %18, %13
  ret void, !dbg !6890
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_set_parent_context(%struct.vsf_session*) #0 !dbg !6891 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6892, metadata !DIExpression()), !dbg !6893
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6894
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 43, !dbg !6896
  %5 = load i32, i32* %4, align 4, !dbg !6896
  %6 = icmp eq i32 %5, -1, !dbg !6897
  br i1 %6, label %7, label %8, !dbg !6898

7:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.200, i32 0, i32 0)), !dbg !6899
  br label %8, !dbg !6901

8:                                                ; preds = %7, %1
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6902
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 43, !dbg !6903
  %11 = load i32, i32* %10, align 4, !dbg !6903
  call void @vsf_sysutil_close(i32 %11), !dbg !6904
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6905
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 43, !dbg !6906
  store i32 -1, i32* %13, align 4, !dbg !6907
  ret void, !dbg !6908
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_set_child_context(%struct.vsf_session*) #0 !dbg !6909 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !6910, metadata !DIExpression()), !dbg !6911
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6912
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 42, !dbg !6914
  %5 = load i32, i32* %4, align 8, !dbg !6914
  %6 = icmp eq i32 %5, -1, !dbg !6915
  br i1 %6, label %7, label %8, !dbg !6916

7:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.201, i32 0, i32 0)), !dbg !6917
  br label %8, !dbg !6919

8:                                                ; preds = %7, %1
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6920
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 42, !dbg !6921
  %11 = load i32, i32* %10, align 8, !dbg !6921
  call void @vsf_sysutil_close(i32 %11), !dbg !6922
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !6923
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 42, !dbg !6924
  store i32 -1, i32* %13, align 8, !dbg !6925
  ret void, !dbg !6926
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_send_cmd(i32, i8 signext) #0 !dbg !6927 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6930, metadata !DIExpression()), !dbg !6931
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !6932, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6934, metadata !DIExpression()), !dbg !6935
  %6 = load i32, i32* %3, align 4, !dbg !6936
  %7 = call i32 @vsf_sysutil_write_loop(i32 %6, i8* %4, i32 1), !dbg !6937
  store i32 %7, i32* %5, align 4, !dbg !6935
  %8 = load i32, i32* %5, align 4, !dbg !6938
  %9 = sext i32 %8 to i64, !dbg !6938
  %10 = icmp ne i64 %9, 1, !dbg !6940
  br i1 %10, label %11, label %12, !dbg !6941

11:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4.202, i32 0, i32 0)), !dbg !6942
  br label %12, !dbg !6944

12:                                               ; preds = %11, %2
  ret void, !dbg !6945
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_send_str(i32, %struct.mystr*) #0 !dbg !6946 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6951, metadata !DIExpression()), !dbg !6952
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6955, metadata !DIExpression()), !dbg !6956
  %6 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6957
  %7 = call i32 @str_getlen(%struct.mystr* %6), !dbg !6958
  store i32 %7, i32* %5, align 4, !dbg !6956
  %8 = load i32, i32* %3, align 4, !dbg !6959
  %9 = load i32, i32* %5, align 4, !dbg !6960
  call void @priv_sock_send_int(i32 %8, i32 %9), !dbg !6961
  %10 = load i32, i32* %5, align 4, !dbg !6962
  %11 = icmp ugt i32 %10, 0, !dbg !6964
  br i1 %11, label %12, label %16, !dbg !6965

12:                                               ; preds = %2
  %13 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !6966
  %14 = load i32, i32* %3, align 4, !dbg !6968
  %15 = call i32 @str_netfd_write(%struct.mystr* %13, i32 %14), !dbg !6969
  br label %16, !dbg !6970

16:                                               ; preds = %12, %2
  ret void, !dbg !6971
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_send_int(i32, i32) #0 !dbg !6972 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6975, metadata !DIExpression()), !dbg !6976
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6979, metadata !DIExpression()), !dbg !6980
  %6 = load i32, i32* %3, align 4, !dbg !6981
  %7 = bitcast i32* %4 to i8*, !dbg !6982
  %8 = call i32 @vsf_sysutil_write_loop(i32 %6, i8* %7, i32 4), !dbg !6983
  store i32 %8, i32* %5, align 4, !dbg !6980
  %9 = load i32, i32* %5, align 4, !dbg !6984
  %10 = sext i32 %9 to i64, !dbg !6984
  %11 = icmp ne i64 %10, 4, !dbg !6986
  br i1 %11, label %12, label %13, !dbg !6987

12:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.203, i32 0, i32 0)), !dbg !6988
  br label %13, !dbg !6990

13:                                               ; preds = %12, %2
  ret void, !dbg !6991
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_send_buf(i32, i8*, i32) #0 !dbg !6992 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6995, metadata !DIExpression()), !dbg !6996
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6997, metadata !DIExpression()), !dbg !6998
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6999, metadata !DIExpression()), !dbg !7000
  %7 = load i32, i32* %4, align 4, !dbg !7001
  %8 = load i32, i32* %6, align 4, !dbg !7002
  call void @priv_sock_send_int(i32 %7, i32 %8), !dbg !7003
  %9 = load i32, i32* %6, align 4, !dbg !7004
  %10 = icmp ugt i32 %9, 0, !dbg !7006
  br i1 %10, label %11, label %20, !dbg !7007

11:                                               ; preds = %3
  %12 = load i32, i32* %4, align 4, !dbg !7008
  %13 = load i8*, i8** %5, align 8, !dbg !7011
  %14 = load i32, i32* %6, align 4, !dbg !7012
  %15 = call i32 @vsf_sysutil_write_loop(i32 %12, i8* %13, i32 %14), !dbg !7013
  %16 = load i32, i32* %6, align 4, !dbg !7014
  %17 = icmp ne i32 %15, %16, !dbg !7015
  br i1 %17, label %18, label %19, !dbg !7016

18:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.204, i32 0, i32 0)), !dbg !7017
  br label %19, !dbg !7019

19:                                               ; preds = %18, %11
  br label %20, !dbg !7020

20:                                               ; preds = %19, %3
  ret void, !dbg !7021
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_recv_buf(i32, i8*, i32) #0 !dbg !7022 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7025, metadata !DIExpression()), !dbg !7026
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7027, metadata !DIExpression()), !dbg !7028
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7031, metadata !DIExpression()), !dbg !7032
  %8 = load i32, i32* %4, align 4, !dbg !7033
  %9 = call i32 @priv_sock_get_int(i32 %8), !dbg !7034
  store i32 %9, i32* %7, align 4, !dbg !7032
  %10 = load i32, i32* %7, align 4, !dbg !7035
  %11 = load i32, i32* %6, align 4, !dbg !7037
  %12 = icmp ugt i32 %10, %11, !dbg !7038
  br i1 %12, label %13, label %14, !dbg !7039

13:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.205, i32 0, i32 0)), !dbg !7040
  br label %14, !dbg !7042

14:                                               ; preds = %13, %3
  %15 = load i32, i32* %7, align 4, !dbg !7043
  %16 = icmp ugt i32 %15, 0, !dbg !7045
  br i1 %16, label %17, label %26, !dbg !7046

17:                                               ; preds = %14
  %18 = load i32, i32* %4, align 4, !dbg !7047
  %19 = load i8*, i8** %5, align 8, !dbg !7050
  %20 = load i32, i32* %7, align 4, !dbg !7051
  %21 = call i32 @vsf_sysutil_read_loop(i32 %18, i8* %19, i32 %20), !dbg !7052
  %22 = load i32, i32* %7, align 4, !dbg !7053
  %23 = icmp ne i32 %21, %22, !dbg !7054
  br i1 %23, label %24, label %25, !dbg !7055

24:                                               ; preds = %17
  call void @die(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.206, i32 0, i32 0)), !dbg !7056
  br label %25, !dbg !7058

25:                                               ; preds = %24, %17
  br label %26, !dbg !7059

26:                                               ; preds = %25, %14
  ret void, !dbg !7060
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @priv_sock_get_int(i32) #0 !dbg !7061 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7064, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7066, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7068, metadata !DIExpression()), !dbg !7069
  %5 = load i32, i32* %2, align 4, !dbg !7070
  %6 = bitcast i32* %3 to i8*, !dbg !7071
  %7 = call i32 @vsf_sysutil_read_loop(i32 %5, i8* %6, i32 4), !dbg !7072
  store i32 %7, i32* %4, align 4, !dbg !7069
  %8 = load i32, i32* %4, align 4, !dbg !7073
  %9 = sext i32 %8 to i64, !dbg !7073
  %10 = icmp ne i64 %9, 4, !dbg !7075
  br i1 %10, label %11, label %12, !dbg !7076

11:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14.207, i32 0, i32 0)), !dbg !7077
  br label %12, !dbg !7079

12:                                               ; preds = %11, %1
  %13 = load i32, i32* %3, align 4, !dbg !7080
  ret i32 %13, !dbg !7081
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define signext i8 @priv_sock_get_result(i32) #0 !dbg !7082 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7085, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata i8* %3, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7089, metadata !DIExpression()), !dbg !7090
  %5 = load i32, i32* %2, align 4, !dbg !7091
  %6 = call i32 @vsf_sysutil_read_loop(i32 %5, i8* %3, i32 1), !dbg !7092
  store i32 %6, i32* %4, align 4, !dbg !7090
  %7 = load i32, i32* %4, align 4, !dbg !7093
  %8 = sext i32 %7 to i64, !dbg !7093
  %9 = icmp ne i64 %8, 1, !dbg !7095
  br i1 %9, label %10, label %11, !dbg !7096

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.208, i32 0, i32 0)), !dbg !7097
  br label %11, !dbg !7099

11:                                               ; preds = %10, %1
  %12 = load i8, i8* %3, align 1, !dbg !7100
  ret i8 %12, !dbg !7101
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define signext i8 @priv_sock_get_cmd(i32) #0 !dbg !7102 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7103, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.declare(metadata i8* %3, metadata !7105, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7107, metadata !DIExpression()), !dbg !7108
  %5 = load i32, i32* %2, align 4, !dbg !7109
  %6 = call i32 @vsf_sysutil_read_loop(i32 %5, i8* %3, i32 1), !dbg !7110
  store i32 %6, i32* %4, align 4, !dbg !7108
  %7 = load i32, i32* %4, align 4, !dbg !7111
  %8 = sext i32 %7 to i64, !dbg !7111
  %9 = icmp ne i64 %8, 1, !dbg !7113
  br i1 %9, label %10, label %11, !dbg !7114

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.209, i32 0, i32 0)), !dbg !7115
  br label %11, !dbg !7117

11:                                               ; preds = %10, %1
  %12 = load i8, i8* %3, align 1, !dbg !7118
  ret i8 %12, !dbg !7119
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_get_str(i32, %struct.mystr*) #0 !dbg !7120 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7124, metadata !DIExpression()), !dbg !7125
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !7126, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7128, metadata !DIExpression()), !dbg !7129
  %7 = load i32, i32* %3, align 4, !dbg !7130
  %8 = call i32 @priv_sock_get_int(i32 %7), !dbg !7131
  store i32 %8, i32* %5, align 4, !dbg !7129
  %9 = load i32, i32* %5, align 4, !dbg !7132
  %10 = icmp ugt i32 %9, 131072, !dbg !7134
  br i1 %10, label %11, label %12, !dbg !7135

11:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.210, i32 0, i32 0)), !dbg !7136
  br label %12, !dbg !7138

12:                                               ; preds = %11, %2
  %13 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !7139
  call void @str_empty(%struct.mystr* %13), !dbg !7140
  %14 = load i32, i32* %5, align 4, !dbg !7141
  %15 = icmp ugt i32 %14, 0, !dbg !7143
  br i1 %15, label %16, label %26, !dbg !7144

16:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7145, metadata !DIExpression()), !dbg !7147
  %17 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !7148
  %18 = load i32, i32* %3, align 4, !dbg !7149
  %19 = load i32, i32* %5, align 4, !dbg !7150
  %20 = call i32 @str_netfd_read(%struct.mystr* %17, i32 %18, i32 %19), !dbg !7151
  store i32 %20, i32* %6, align 4, !dbg !7147
  %21 = load i32, i32* %6, align 4, !dbg !7152
  %22 = load i32, i32* %5, align 4, !dbg !7154
  %23 = icmp ne i32 %21, %22, !dbg !7155
  br i1 %23, label %24, label %25, !dbg !7156

24:                                               ; preds = %16
  call void @die(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11.211, i32 0, i32 0)), !dbg !7157
  br label %25, !dbg !7159

25:                                               ; preds = %24, %16
  br label %26, !dbg !7160

26:                                               ; preds = %25, %12
  ret void, !dbg !7161
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_send_result(i32, i8 signext) #0 !dbg !7162 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7163, metadata !DIExpression()), !dbg !7164
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7165, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7167, metadata !DIExpression()), !dbg !7168
  %6 = load i32, i32* %3, align 4, !dbg !7169
  %7 = call i32 @vsf_sysutil_write_loop(i32 %6, i8* %4, i32 1), !dbg !7170
  store i32 %7, i32* %5, align 4, !dbg !7168
  %8 = load i32, i32* %5, align 4, !dbg !7171
  %9 = sext i32 %8 to i64, !dbg !7171
  %10 = icmp ne i64 %9, 1, !dbg !7173
  br i1 %10, label %11, label %12, !dbg !7174

11:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12.212, i32 0, i32 0)), !dbg !7175
  br label %12, !dbg !7177

12:                                               ; preds = %11, %2
  ret void, !dbg !7178
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @priv_sock_send_fd(i32, i32) #0 !dbg !7179 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7180, metadata !DIExpression()), !dbg !7181
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7182, metadata !DIExpression()), !dbg !7183
  %5 = load i32, i32* %3, align 4, !dbg !7184
  %6 = load i32, i32* %4, align 4, !dbg !7185
  call void @vsf_sysutil_send_fd(i32 %5, i32 %6), !dbg !7186
  ret void, !dbg !7187
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @priv_sock_recv_fd(i32) #0 !dbg !7188 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7189, metadata !DIExpression()), !dbg !7190
  %3 = load i32, i32* %2, align 4, !dbg !7191
  %4 = call i32 @vsf_sysutil_recv_fd(i32 %3), !dbg !7192
  ret i32 %4, !dbg !7193
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @tunables_load_defaults() #0 !dbg !7194 {
  store i32 1, i32* @tunable_anonymous_enable, align 4, !dbg !7195
  store i32 0, i32* @tunable_local_enable, align 4, !dbg !7196
  store i32 1, i32* @tunable_pasv_enable, align 4, !dbg !7197
  store i32 1, i32* @tunable_port_enable, align 4, !dbg !7198
  store i32 0, i32* @tunable_chroot_local_user, align 4, !dbg !7199
  store i32 0, i32* @tunable_write_enable, align 4, !dbg !7200
  store i32 0, i32* @tunable_anon_upload_enable, align 4, !dbg !7201
  store i32 0, i32* @tunable_anon_mkdir_write_enable, align 4, !dbg !7202
  store i32 0, i32* @tunable_anon_other_write_enable, align 4, !dbg !7203
  store i32 0, i32* @tunable_chown_uploads, align 4, !dbg !7204
  store i32 0, i32* @tunable_connect_from_port_20, align 4, !dbg !7205
  store i32 0, i32* @tunable_xferlog_enable, align 4, !dbg !7206
  store i32 0, i32* @tunable_dirmessage_enable, align 4, !dbg !7207
  store i32 1, i32* @tunable_anon_world_readable_only, align 4, !dbg !7208
  store i32 0, i32* @tunable_async_abor_enable, align 4, !dbg !7209
  store i32 0, i32* @tunable_ascii_upload_enable, align 4, !dbg !7210
  store i32 0, i32* @tunable_ascii_download_enable, align 4, !dbg !7211
  store i32 0, i32* @tunable_one_process_model, align 4, !dbg !7212
  store i32 0, i32* @tunable_xferlog_std_format, align 4, !dbg !7213
  store i32 0, i32* @tunable_pasv_promiscuous, align 4, !dbg !7214
  store i32 0, i32* @tunable_deny_email_enable, align 4, !dbg !7215
  store i32 0, i32* @tunable_chroot_list_enable, align 4, !dbg !7216
  store i32 0, i32* @tunable_setproctitle_enable, align 4, !dbg !7217
  store i32 0, i32* @tunable_text_userdb_names, align 4, !dbg !7218
  store i32 0, i32* @tunable_ls_recurse_enable, align 4, !dbg !7219
  store i32 0, i32* @tunable_log_ftp_protocol, align 4, !dbg !7220
  store i32 0, i32* @tunable_guest_enable, align 4, !dbg !7221
  store i32 0, i32* @tunable_userlist_enable, align 4, !dbg !7222
  store i32 1, i32* @tunable_userlist_deny, align 4, !dbg !7223
  store i32 0, i32* @tunable_use_localtime, align 4, !dbg !7224
  store i32 1, i32* @tunable_check_shell, align 4, !dbg !7225
  store i32 0, i32* @tunable_hide_ids, align 4, !dbg !7226
  store i32 1, i32* @tunable_listen, align 4, !dbg !7227
  store i32 0, i32* @tunable_port_promiscuous, align 4, !dbg !7228
  store i32 0, i32* @tunable_passwd_chroot_enable, align 4, !dbg !7229
  store i32 0, i32* @tunable_no_anon_password, align 4, !dbg !7230
  store i32 0, i32* @tunable_tcp_wrappers, align 4, !dbg !7231
  store i32 1, i32* @tunable_use_sendfile, align 4, !dbg !7232
  store i32 0, i32* @tunable_force_dot_files, align 4, !dbg !7233
  store i32 0, i32* @tunable_listen_ipv6, align 4, !dbg !7234
  store i32 0, i32* @tunable_dual_log_enable, align 4, !dbg !7235
  store i32 0, i32* @tunable_syslog_enable, align 4, !dbg !7236
  store i32 0, i32* @tunable_background, align 4, !dbg !7237
  store i32 0, i32* @tunable_virtual_use_local_privs, align 4, !dbg !7238
  store i32 0, i32* @tunable_session_support, align 4, !dbg !7239
  store i32 1, i32* @tunable_download_enable, align 4, !dbg !7240
  store i32 1, i32* @tunable_dirlist_enable, align 4, !dbg !7241
  store i32 1, i32* @tunable_chmod_enable, align 4, !dbg !7242
  store i32 0, i32* @tunable_secure_email_list_enable, align 4, !dbg !7243
  store i32 0, i32* @tunable_run_as_launching_user, align 4, !dbg !7244
  store i32 0, i32* @tunable_no_log_lock, align 4, !dbg !7245
  store i32 0, i32* @tunable_ssl_enable, align 4, !dbg !7246
  store i32 0, i32* @tunable_allow_anon_ssl, align 4, !dbg !7247
  store i32 1, i32* @tunable_force_local_logins_ssl, align 4, !dbg !7248
  store i32 1, i32* @tunable_force_local_data_ssl, align 4, !dbg !7249
  store i32 0, i32* @tunable_sslv2, align 4, !dbg !7250
  store i32 0, i32* @tunable_sslv3, align 4, !dbg !7251
  store i32 1, i32* @tunable_tlsv1, align 4, !dbg !7252
  store i32 0, i32* @tunable_tilde_user_enable, align 4, !dbg !7253
  store i32 0, i32* @tunable_force_anon_logins_ssl, align 4, !dbg !7254
  store i32 0, i32* @tunable_force_anon_data_ssl, align 4, !dbg !7255
  store i32 1, i32* @tunable_mdtm_write, align 4, !dbg !7256
  store i32 1, i32* @tunable_lock_upload_files, align 4, !dbg !7257
  store i32 0, i32* @tunable_pasv_addr_resolve, align 4, !dbg !7258
  store i32 0, i32* @tunable_debug_ssl, align 4, !dbg !7259
  store i32 0, i32* @tunable_require_cert, align 4, !dbg !7260
  store i32 0, i32* @tunable_validate_cert, align 4, !dbg !7261
  store i32 1, i32* @tunable_strict_ssl_read_eof, align 4, !dbg !7262
  store i32 0, i32* @tunable_strict_ssl_write_shutdown, align 4, !dbg !7263
  store i32 1, i32* @tunable_ssl_request_cert, align 4, !dbg !7264
  store i32 0, i32* @tunable_delete_failed_uploads, align 4, !dbg !7265
  store i32 0, i32* @tunable_implicit_ssl, align 4, !dbg !7266
  store i32 0, i32* @tunable_ptrace_sandbox, align 4, !dbg !7267
  store i32 1, i32* @tunable_require_ssl_reuse, align 4, !dbg !7268
  store i32 1, i32* @tunable_isolate, align 4, !dbg !7269
  store i32 1, i32* @tunable_isolate_network, align 4, !dbg !7270
  store i32 1, i32* @tunable_ftp_enable, align 4, !dbg !7271
  store i32 0, i32* @tunable_http_enable, align 4, !dbg !7272
  store i32 1, i32* @tunable_seccomp_sandbox, align 4, !dbg !7273
  store i32 0, i32* @tunable_allow_writeable_chroot, align 4, !dbg !7274
  store i32 60, i32* @tunable_accept_timeout, align 4, !dbg !7275
  store i32 60, i32* @tunable_connect_timeout, align 4, !dbg !7276
  store i32 63, i32* @tunable_local_umask, align 4, !dbg !7277
  store i32 63, i32* @tunable_anon_umask, align 4, !dbg !7278
  store i32 20, i32* @tunable_ftp_data_port, align 4, !dbg !7279
  store i32 300, i32* @tunable_idle_session_timeout, align 4, !dbg !7280
  store i32 300, i32* @tunable_data_connection_timeout, align 4, !dbg !7281
  store i32 5001, i32* @tunable_pasv_min_port, align 4, !dbg !7282
  store i32 0, i32* @tunable_pasv_max_port, align 4, !dbg !7283
  store i32 0, i32* @tunable_anon_max_rate, align 4, !dbg !7284
  store i32 0, i32* @tunable_local_max_rate, align 4, !dbg !7285
  store i32 21, i32* @tunable_listen_port, align 4, !dbg !7286
  store i32 2000, i32* @tunable_max_clients, align 4, !dbg !7287
  store i32 438, i32* @tunable_file_open_mode, align 4, !dbg !7288
  store i32 50, i32* @tunable_max_per_ip, align 4, !dbg !7289
  store i32 0, i32* @tunable_trans_chunk_size, align 4, !dbg !7290
  store i32 1, i32* @tunable_delay_failed_login, align 4, !dbg !7291
  store i32 0, i32* @tunable_delay_successful_login, align 4, !dbg !7292
  store i32 3, i32* @tunable_max_login_fails, align 4, !dbg !7293
  store i32 384, i32* @tunable_chown_upload_mode, align 4, !dbg !7294
  call void @install_str_setting(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.349, i32 0, i32 0), i8** @tunable_secure_chroot_dir), !dbg !7295
  call void @install_str_setting(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.350, i32 0, i32 0), i8** @tunable_ftp_username), !dbg !7296
  call void @install_str_setting(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.351, i32 0, i32 0), i8** @tunable_chown_username), !dbg !7297
  call void @install_str_setting(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.352, i32 0, i32 0), i8** @tunable_xferlog_file), !dbg !7298
  call void @install_str_setting(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.353, i32 0, i32 0), i8** @tunable_vsftpd_log_file), !dbg !7299
  call void @install_str_setting(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.354, i32 0, i32 0), i8** @tunable_message_file), !dbg !7300
  call void @install_str_setting(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.355, i32 0, i32 0), i8** @tunable_nopriv_user), !dbg !7301
  call void @install_str_setting(i8* null, i8** @tunable_ftpd_banner), !dbg !7302
  call void @install_str_setting(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7.356, i32 0, i32 0), i8** @tunable_banned_email_file), !dbg !7303
  call void @install_str_setting(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.357, i32 0, i32 0), i8** @tunable_chroot_list_file), !dbg !7304
  call void @install_str_setting(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.350, i32 0, i32 0), i8** @tunable_pam_service_name), !dbg !7305
  call void @install_str_setting(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.350, i32 0, i32 0), i8** @tunable_guest_username), !dbg !7306
  call void @install_str_setting(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9.358, i32 0, i32 0), i8** @tunable_userlist_file), !dbg !7307
  call void @install_str_setting(i8* null, i8** @tunable_anon_root), !dbg !7308
  call void @install_str_setting(i8* null, i8** @tunable_local_root), !dbg !7309
  call void @install_str_setting(i8* null, i8** @tunable_banner_file), !dbg !7310
  call void @install_str_setting(i8* null, i8** @tunable_pasv_address), !dbg !7311
  call void @install_str_setting(i8* null, i8** @tunable_listen_address), !dbg !7312
  call void @install_str_setting(i8* null, i8** @tunable_user_config_dir), !dbg !7313
  call void @install_str_setting(i8* null, i8** @tunable_listen_address6), !dbg !7314
  call void @install_str_setting(i8* null, i8** @tunable_cmds_allowed), !dbg !7315
  call void @install_str_setting(i8* null, i8** @tunable_cmds_denied), !dbg !7316
  call void @install_str_setting(i8* null, i8** @tunable_hide_file), !dbg !7317
  call void @install_str_setting(i8* null, i8** @tunable_deny_file), !dbg !7318
  call void @install_str_setting(i8* null, i8** @tunable_user_sub_token), !dbg !7319
  call void @install_str_setting(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10.359, i32 0, i32 0), i8** @tunable_email_password_file), !dbg !7320
  call void @install_str_setting(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.360, i32 0, i32 0), i8** @tunable_rsa_cert_file), !dbg !7321
  call void @install_str_setting(i8* null, i8** @tunable_dsa_cert_file), !dbg !7322
  call void @install_str_setting(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12.361, i32 0, i32 0), i8** @tunable_ssl_ciphers), !dbg !7323
  call void @install_str_setting(i8* null, i8** @tunable_rsa_private_key_file), !dbg !7324
  call void @install_str_setting(i8* null, i8** @tunable_dsa_private_key_file), !dbg !7325
  call void @install_str_setting(i8* null, i8** @tunable_ca_certs_file), !dbg !7326
  ret void, !dbg !7327
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @install_str_setting(i8*, i8**) #0 !dbg !7328 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7331, metadata !DIExpression()), !dbg !7332
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !7333, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7335, metadata !DIExpression()), !dbg !7336
  %6 = load i8**, i8*** %4, align 8, !dbg !7337
  %7 = load i8*, i8** %6, align 8, !dbg !7338
  store i8* %7, i8** %5, align 8, !dbg !7336
  %8 = load i8*, i8** %5, align 8, !dbg !7339
  %9 = icmp ne i8* %8, null, !dbg !7341
  br i1 %9, label %10, label %12, !dbg !7342

10:                                               ; preds = %2
  %11 = load i8*, i8** %5, align 8, !dbg !7343
  call void @vsf_sysutil_free(i8* %11), !dbg !7345
  br label %12, !dbg !7346

12:                                               ; preds = %10, %2
  %13 = load i8*, i8** %3, align 8, !dbg !7347
  %14 = icmp ne i8* %13, null, !dbg !7349
  br i1 %14, label %15, label %18, !dbg !7350

15:                                               ; preds = %12
  %16 = load i8*, i8** %3, align 8, !dbg !7351
  %17 = call i8* @vsf_sysutil_strdup(i8* %16), !dbg !7353
  store i8* %17, i8** %3, align 8, !dbg !7354
  br label %18, !dbg !7355

18:                                               ; preds = %15, %12
  %19 = load i8*, i8** %3, align 8, !dbg !7356
  %20 = load i8**, i8*** %4, align 8, !dbg !7357
  store i8* %19, i8** %20, align 8, !dbg !7358
  ret void, !dbg !7359
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_ftpdataio_dispose_transfer_fd(%struct.vsf_session*) #0 !dbg !7360 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !7363, metadata !DIExpression()), !dbg !7364
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7365, metadata !DIExpression()), !dbg !7366
  store i32 1, i32* %3, align 4, !dbg !7366
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7367, metadata !DIExpression()), !dbg !7368
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7369
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 7, !dbg !7371
  %8 = load i32, i32* %7, align 8, !dbg !7371
  %9 = icmp eq i32 %8, -1, !dbg !7372
  br i1 %9, label %10, label %11, !dbg !7373

10:                                               ; preds = %1
  call void @bug(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.364, i32 0, i32 0)), !dbg !7374
  br label %11, !dbg !7376

11:                                               ; preds = %10, %1
  call void @vsf_sysutil_uninstall_io_handler(), !dbg !7377
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7378
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 48, !dbg !7380
  %14 = load i32, i32* %13, align 4, !dbg !7380
  %15 = icmp ne i32 %14, 0, !dbg !7378
  br i1 %15, label %16, label %35, !dbg !7381

16:                                               ; preds = %11
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7382
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 53, !dbg !7383
  %19 = load i32, i32* %18, align 8, !dbg !7383
  %20 = icmp ne i32 %19, 0, !dbg !7382
  br i1 %20, label %21, label %35, !dbg !7384

21:                                               ; preds = %16
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7385, metadata !DIExpression()), !dbg !7387
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7388
  call void @start_data_alarm(%struct.vsf_session* %22), !dbg !7389
  %23 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7390
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 55, !dbg !7391
  %25 = load i32, i32* %24, align 8, !dbg !7391
  call void @priv_sock_send_cmd(i32 %25, i8 signext 7), !dbg !7392
  %26 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7393
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 55, !dbg !7394
  %28 = load i32, i32* %27, align 8, !dbg !7394
  %29 = call signext i8 @priv_sock_get_result(i32 %28), !dbg !7395
  store i8 %29, i8* %5, align 1, !dbg !7396
  %30 = load i8, i8* %5, align 1, !dbg !7397
  %31 = sext i8 %30 to i32, !dbg !7397
  %32 = icmp ne i32 %31, 1, !dbg !7399
  br i1 %32, label %33, label %34, !dbg !7400

33:                                               ; preds = %21
  store i32 0, i32* %3, align 4, !dbg !7401
  br label %34, !dbg !7403

34:                                               ; preds = %33, %21
  br label %45, !dbg !7404

35:                                               ; preds = %16, %11
  %36 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7405
  %37 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %36, i32 0, i32 51, !dbg !7407
  %38 = load i8*, i8** %37, align 8, !dbg !7407
  %39 = icmp ne i8* %38, null, !dbg !7405
  br i1 %39, label %40, label %44, !dbg !7408

40:                                               ; preds = %35
  %41 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7409
  call void @start_data_alarm(%struct.vsf_session* %41), !dbg !7411
  %42 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7412
  %43 = call i32 @ssl_data_close(%struct.vsf_session* %42), !dbg !7413
  store i32 %43, i32* %3, align 4, !dbg !7414
  br label %44, !dbg !7415

44:                                               ; preds = %40, %35
  br label %45

45:                                               ; preds = %44, %34
  %46 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7416
  %47 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %46, i32 0, i32 19, !dbg !7418
  %48 = load i32, i32* %47, align 8, !dbg !7418
  %49 = icmp ne i32 %48, 0, !dbg !7416
  br i1 %49, label %63, label %50, !dbg !7419

50:                                               ; preds = %45
  %51 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7420
  %52 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %51, i32 0, i32 4, !dbg !7421
  %53 = load i32, i32* %52, align 4, !dbg !7421
  %54 = icmp ne i32 %53, 0, !dbg !7420
  br i1 %54, label %63, label %55, !dbg !7422

55:                                               ; preds = %50
  %56 = load i32, i32* %3, align 4, !dbg !7423
  %57 = icmp eq i32 %56, 1, !dbg !7424
  br i1 %57, label %58, label %63, !dbg !7425

58:                                               ; preds = %55
  %59 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7426
  call void @start_data_alarm(%struct.vsf_session* %59), !dbg !7428
  %60 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7429
  %61 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %60, i32 0, i32 7, !dbg !7430
  %62 = load i32, i32* %61, align 8, !dbg !7430
  call void @vsf_sysutil_activate_linger(i32 %62), !dbg !7431
  br label %63, !dbg !7432

63:                                               ; preds = %58, %55, %50, %45
  %64 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7433
  %65 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %64, i32 0, i32 7, !dbg !7434
  %66 = load i32, i32* %65, align 8, !dbg !7434
  %67 = call i32 @vsf_sysutil_close_failok(i32 %66), !dbg !7435
  store i32 %67, i32* %4, align 4, !dbg !7436
  %68 = load i32, i32* %4, align 4, !dbg !7437
  %69 = call i32 @vsf_sysutil_retval_is_error(i32 %68), !dbg !7439
  %70 = icmp ne i32 %69, 0, !dbg !7439
  br i1 %70, label %71, label %79, !dbg !7440

71:                                               ; preds = %63
  %72 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7441
  %73 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %72, i32 0, i32 7, !dbg !7443
  %74 = load i32, i32* %73, align 8, !dbg !7443
  call void @vsf_sysutil_deactivate_linger_failok(i32 %74), !dbg !7444
  %75 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7445
  %76 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %75, i32 0, i32 7, !dbg !7446
  %77 = load i32, i32* %76, align 8, !dbg !7446
  %78 = call i32 @vsf_sysutil_close_failok(i32 %77), !dbg !7447
  br label %79, !dbg !7448

79:                                               ; preds = %71, %63
  %80 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7449
  %81 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %80, i32 0, i32 7, !dbg !7450
  store i32 -1, i32* %81, align 8, !dbg !7451
  %82 = load i32, i32* @tunable_data_connection_timeout, align 4, !dbg !7452
  %83 = icmp ugt i32 %82, 0, !dbg !7454
  br i1 %83, label %84, label %85, !dbg !7455

84:                                               ; preds = %79
  call void @vsf_sysutil_clear_alarm(), !dbg !7456
  br label %85, !dbg !7458

85:                                               ; preds = %84, %79
  %86 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7459
  %87 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %86, i32 0, i32 19, !dbg !7461
  %88 = load i32, i32* %87, align 8, !dbg !7461
  %89 = icmp ne i32 %88, 0, !dbg !7459
  br i1 %89, label %95, label %90, !dbg !7462

90:                                               ; preds = %85
  %91 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7463
  %92 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %91, i32 0, i32 4, !dbg !7464
  %93 = load i32, i32* %92, align 4, !dbg !7464
  %94 = icmp ne i32 %93, 0, !dbg !7463
  br i1 %94, label %95, label %96, !dbg !7465

95:                                               ; preds = %90, %85
  store i32 0, i32* %3, align 4, !dbg !7466
  br label %96, !dbg !7468

96:                                               ; preds = %95, %90
  %97 = load i32, i32* %3, align 4, !dbg !7469
  ret i32 %97, !dbg !7470
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @start_data_alarm(%struct.vsf_session*) #0 !dbg !7471 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !7474, metadata !DIExpression()), !dbg !7475
  %3 = load i32, i32* @tunable_data_connection_timeout, align 4, !dbg !7476
  %4 = icmp ugt i32 %3, 0, !dbg !7478
  br i1 %4, label %5, label %9, !dbg !7479

5:                                                ; preds = %1
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !7480
  %7 = bitcast %struct.vsf_session* %6 to i8*, !dbg !7480
  call void @vsf_sysutil_install_sighandler(i32 1, void (i8*)* @handle_sigalrm, i8* %7, i32 1), !dbg !7482
  %8 = load i32, i32* @tunable_data_connection_timeout, align 4, !dbg !7483
  call void @vsf_sysutil_set_alarm(i32 %8), !dbg !7484
  br label %14, !dbg !7485

9:                                                ; preds = %1
  %10 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !7486
  %11 = icmp ugt i32 %10, 0, !dbg !7488
  br i1 %11, label %12, label %13, !dbg !7489

12:                                               ; preds = %9
  call void @vsf_sysutil_clear_alarm(), !dbg !7490
  br label %13, !dbg !7492

13:                                               ; preds = %12, %9
  br label %14

14:                                               ; preds = %13, %5
  ret void, !dbg !7493
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_sigalrm(i8*) #0 !dbg !7494 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_session*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7495, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !7497, metadata !DIExpression()), !dbg !7498
  %4 = load i8*, i8** %2, align 8, !dbg !7499
  %5 = bitcast i8* %4 to %struct.vsf_session*, !dbg !7500
  store %struct.vsf_session* %5, %struct.vsf_session** %3, align 8, !dbg !7498
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7501
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 8, !dbg !7503
  %8 = load i32, i32* %7, align 4, !dbg !7503
  %9 = icmp ne i32 %8, 0, !dbg !7501
  br i1 %9, label %16, label %10, !dbg !7504

10:                                               ; preds = %1
  %11 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7505
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 4, !dbg !7507
  store i32 1, i32* %12, align 4, !dbg !7508
  %13 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7509
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 7, !dbg !7510
  %15 = load i32, i32* %14, align 8, !dbg !7510
  call void @vsf_sysutil_shutdown_failok(i32 %15), !dbg !7511
  call void @vsf_sysutil_shutdown_read_failok(i32 0), !dbg !7512
  call void @vsf_sysutil_activate_noblock(i32 0), !dbg !7513
  br label %20, !dbg !7514

16:                                               ; preds = %1
  %17 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7515
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 8, !dbg !7517
  store i32 0, i32* %18, align 4, !dbg !7518
  %19 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7519
  call void @start_data_alarm(%struct.vsf_session* %19), !dbg !7520
  br label %20

20:                                               ; preds = %16, %10
  ret void, !dbg !7521
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_ftpdataio_get_pasv_fd(%struct.vsf_session*) #0 !dbg !7522 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !7523, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7525, metadata !DIExpression()), !dbg !7526
  %5 = load i32, i32* @tunable_one_process_model, align 4, !dbg !7527
  %6 = icmp ne i32 %5, 0, !dbg !7527
  br i1 %6, label %7, label %10, !dbg !7529

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7530
  %9 = call i32 @vsf_one_process_get_pasv_fd(%struct.vsf_session* %8), !dbg !7532
  store i32 %9, i32* %4, align 4, !dbg !7533
  br label %13, !dbg !7534

10:                                               ; preds = %1
  %11 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7535
  %12 = call i32 @vsf_two_process_get_pasv_fd(%struct.vsf_session* %11), !dbg !7537
  store i32 %12, i32* %4, align 4, !dbg !7538
  br label %13

13:                                               ; preds = %10, %7
  %14 = load i32, i32* %4, align 4, !dbg !7539
  %15 = icmp eq i32 %14, -1, !dbg !7541
  br i1 %15, label %16, label %19, !dbg !7542

16:                                               ; preds = %13
  %17 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7543
  call void @vsf_cmdio_write(%struct.vsf_session* %17, i32 425, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.367, i32 0, i32 0)), !dbg !7545
  %18 = load i32, i32* %4, align 4, !dbg !7546
  store i32 %18, i32* %2, align 4, !dbg !7547
  br label %29, !dbg !7547

19:                                               ; preds = %13
  %20 = load i32, i32* %4, align 4, !dbg !7548
  %21 = icmp eq i32 %20, -2, !dbg !7550
  br i1 %21, label %22, label %24, !dbg !7551

22:                                               ; preds = %19
  %23 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7552
  call void @vsf_cmdio_write(%struct.vsf_session* %23, i32 425, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.368, i32 0, i32 0)), !dbg !7554
  store i32 -1, i32* %2, align 4, !dbg !7555
  br label %29, !dbg !7555

24:                                               ; preds = %19
  br label %25

25:                                               ; preds = %24
  %26 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7556
  %27 = load i32, i32* %4, align 4, !dbg !7557
  call void @init_data_sock_params(%struct.vsf_session* %26, i32 %27), !dbg !7558
  %28 = load i32, i32* %4, align 4, !dbg !7559
  store i32 %28, i32* %2, align 4, !dbg !7560
  br label %29, !dbg !7560

29:                                               ; preds = %25, %22, %16
  %30 = load i32, i32* %2, align 4, !dbg !7561
  ret i32 %30, !dbg !7561
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @init_data_sock_params(%struct.vsf_session*, i32) #0 !dbg !7562 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !7565, metadata !DIExpression()), !dbg !7566
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7567, metadata !DIExpression()), !dbg !7568
  %5 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7569
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 7, !dbg !7571
  %7 = load i32, i32* %6, align 8, !dbg !7571
  %8 = icmp ne i32 %7, -1, !dbg !7572
  br i1 %8, label %9, label %10, !dbg !7573

9:                                                ; preds = %2
  call void @bug(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.369, i32 0, i32 0)), !dbg !7574
  br label %10, !dbg !7576

10:                                               ; preds = %9, %2
  %11 = load i32, i32* %4, align 4, !dbg !7577
  %12 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7578
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 7, !dbg !7579
  store i32 %11, i32* %13, align 8, !dbg !7580
  %14 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7581
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 8, !dbg !7582
  store i32 0, i32* %15, align 4, !dbg !7583
  %16 = load i32, i32* %4, align 4, !dbg !7584
  call void @vsf_sysutil_activate_keepalive(i32 %16), !dbg !7585
  %17 = load i32, i32* %4, align 4, !dbg !7586
  call void @vsf_sysutil_set_iptos_throughput(i32 %17), !dbg !7587
  %18 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7588
  %19 = bitcast %struct.vsf_session* %18 to i8*, !dbg !7588
  call void @vsf_sysutil_install_io_handler(void (i32, i32, i8*)* @handle_io, i8* %19), !dbg !7589
  %20 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7590
  call void @start_data_alarm(%struct.vsf_session* %20), !dbg !7591
  ret void, !dbg !7592
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_io(i32, i32, i8*) #0 !dbg !7593 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca %struct.vsf_session*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7594, metadata !DIExpression()), !dbg !7595
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7596, metadata !DIExpression()), !dbg !7597
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7598, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.declare(metadata i64* %8, metadata !7602, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7604, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.declare(metadata double* %10, metadata !7606, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.declare(metadata double* %11, metadata !7608, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.declare(metadata double* %12, metadata !7610, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %13, metadata !7612, metadata !DIExpression()), !dbg !7613
  %14 = load i8*, i8** %6, align 8, !dbg !7614
  %15 = bitcast i8* %14 to %struct.vsf_session*, !dbg !7615
  store %struct.vsf_session* %15, %struct.vsf_session** %13, align 8, !dbg !7613
  %16 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7616
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 7, !dbg !7618
  %18 = load i32, i32* %17, align 8, !dbg !7618
  %19 = load i32, i32* %5, align 4, !dbg !7619
  %20 = icmp ne i32 %18, %19, !dbg !7620
  br i1 %20, label %28, label %21, !dbg !7621

21:                                               ; preds = %3
  %22 = load i32, i32* %4, align 4, !dbg !7622
  %23 = call i32 @vsf_sysutil_retval_is_error(i32 %22), !dbg !7623
  %24 = icmp ne i32 %23, 0, !dbg !7623
  br i1 %24, label %28, label %25, !dbg !7624

25:                                               ; preds = %21
  %26 = load i32, i32* %4, align 4, !dbg !7625
  %27 = icmp eq i32 %26, 0, !dbg !7626
  br i1 %27, label %28, label %29, !dbg !7627

28:                                               ; preds = %25, %21, %3
  br label %95, !dbg !7628

29:                                               ; preds = %25
  %30 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7630
  %31 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %30, i32 0, i32 8, !dbg !7631
  store i32 1, i32* %31, align 4, !dbg !7632
  %32 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7633
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 9, !dbg !7635
  %34 = load i32, i32* %33, align 8, !dbg !7635
  %35 = icmp eq i32 %34, 0, !dbg !7636
  br i1 %35, label %36, label %37, !dbg !7637

36:                                               ; preds = %29
  br label %95, !dbg !7638

37:                                               ; preds = %29
  %38 = call i64 @vsf_sysutil_get_time_sec(), !dbg !7640
  store i64 %38, i64* %7, align 8, !dbg !7641
  %39 = call i64 @vsf_sysutil_get_time_usec(), !dbg !7642
  store i64 %39, i64* %8, align 8, !dbg !7643
  %40 = load i64, i64* %7, align 8, !dbg !7644
  %41 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7645
  %42 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %41, i32 0, i32 10, !dbg !7646
  %43 = load i64, i64* %42, align 8, !dbg !7646
  %44 = sub nsw i64 %40, %43, !dbg !7647
  %45 = sitofp i64 %44 to double, !dbg !7648
  store double %45, double* %10, align 8, !dbg !7649
  %46 = load i64, i64* %8, align 8, !dbg !7650
  %47 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7651
  %48 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %47, i32 0, i32 11, !dbg !7652
  %49 = load i64, i64* %48, align 8, !dbg !7652
  %50 = sub nsw i64 %46, %49, !dbg !7653
  %51 = sitofp i64 %50 to double, !dbg !7654
  %52 = fdiv double %51, 1.000000e+06, !dbg !7655
  %53 = load double, double* %10, align 8, !dbg !7656
  %54 = fadd double %53, %52, !dbg !7656
  store double %54, double* %10, align 8, !dbg !7656
  %55 = load double, double* %10, align 8, !dbg !7657
  %56 = fcmp ole double %55, 0.000000e+00, !dbg !7659
  br i1 %56, label %57, label %58, !dbg !7660

57:                                               ; preds = %37
  store double 1.000000e-02, double* %10, align 8, !dbg !7661
  br label %58, !dbg !7663

58:                                               ; preds = %57, %37
  %59 = load i32, i32* %4, align 4, !dbg !7664
  %60 = sitofp i32 %59 to double, !dbg !7665
  %61 = load double, double* %10, align 8, !dbg !7666
  %62 = fdiv double %60, %61, !dbg !7667
  %63 = fptoui double %62 to i32, !dbg !7668
  store i32 %63, i32* %9, align 4, !dbg !7669
  %64 = load i32, i32* %9, align 4, !dbg !7670
  %65 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7672
  %66 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %65, i32 0, i32 9, !dbg !7673
  %67 = load i32, i32* %66, align 8, !dbg !7673
  %68 = icmp ule i32 %64, %67, !dbg !7674
  br i1 %68, label %69, label %76, !dbg !7675

69:                                               ; preds = %58
  %70 = load i64, i64* %7, align 8, !dbg !7676
  %71 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7678
  %72 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %71, i32 0, i32 10, !dbg !7679
  store i64 %70, i64* %72, align 8, !dbg !7680
  %73 = load i64, i64* %8, align 8, !dbg !7681
  %74 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7682
  %75 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %74, i32 0, i32 11, !dbg !7683
  store i64 %73, i64* %75, align 8, !dbg !7684
  br label %95, !dbg !7685

76:                                               ; preds = %58
  %77 = load i32, i32* %9, align 4, !dbg !7686
  %78 = uitofp i32 %77 to double, !dbg !7687
  %79 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7688
  %80 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %79, i32 0, i32 9, !dbg !7689
  %81 = load i32, i32* %80, align 8, !dbg !7689
  %82 = uitofp i32 %81 to double, !dbg !7690
  %83 = fdiv double %78, %82, !dbg !7691
  store double %83, double* %12, align 8, !dbg !7692
  %84 = load double, double* %12, align 8, !dbg !7693
  %85 = fsub double %84, 1.000000e+00, !dbg !7694
  %86 = load double, double* %10, align 8, !dbg !7695
  %87 = fmul double %85, %86, !dbg !7696
  store double %87, double* %11, align 8, !dbg !7697
  %88 = load double, double* %11, align 8, !dbg !7698
  call void @vsf_sysutil_sleep(double %88), !dbg !7699
  %89 = call i64 @vsf_sysutil_get_time_sec(), !dbg !7700
  %90 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7701
  %91 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %90, i32 0, i32 10, !dbg !7702
  store i64 %89, i64* %91, align 8, !dbg !7703
  %92 = call i64 @vsf_sysutil_get_time_usec(), !dbg !7704
  %93 = load %struct.vsf_session*, %struct.vsf_session** %13, align 8, !dbg !7705
  %94 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %93, i32 0, i32 11, !dbg !7706
  store i64 %92, i64* %94, align 8, !dbg !7707
  br label %95, !dbg !7708

95:                                               ; preds = %76, %69, %36, %28
  ret void, !dbg !7708
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_ftpdataio_get_port_fd(%struct.vsf_session*) #0 !dbg !7709 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !7710, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7712, metadata !DIExpression()), !dbg !7713
  %5 = load i32, i32* @tunable_one_process_model, align 4, !dbg !7714
  %6 = icmp ne i32 %5, 0, !dbg !7714
  br i1 %6, label %10, label %7, !dbg !7716

7:                                                ; preds = %1
  %8 = load i32, i32* @tunable_port_promiscuous, align 4, !dbg !7717
  %9 = icmp ne i32 %8, 0, !dbg !7717
  br i1 %9, label %10, label %13, !dbg !7718

10:                                               ; preds = %7, %1
  %11 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7719
  %12 = call i32 @vsf_one_process_get_priv_data_sock(%struct.vsf_session* %11), !dbg !7721
  store i32 %12, i32* %4, align 4, !dbg !7722
  br label %16, !dbg !7723

13:                                               ; preds = %7
  %14 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7724
  %15 = call i32 @vsf_two_process_get_priv_data_sock(%struct.vsf_session* %14), !dbg !7726
  store i32 %15, i32* %4, align 4, !dbg !7727
  br label %16

16:                                               ; preds = %13, %10
  %17 = load i32, i32* %4, align 4, !dbg !7728
  %18 = call i32 @vsf_sysutil_retval_is_error(i32 %17), !dbg !7730
  %19 = icmp ne i32 %18, 0, !dbg !7730
  br i1 %19, label %20, label %22, !dbg !7731

20:                                               ; preds = %16
  %21 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7732
  call void @vsf_cmdio_write(%struct.vsf_session* %21, i32 425, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.367, i32 0, i32 0)), !dbg !7734
  store i32 -1, i32* %2, align 4, !dbg !7735
  br label %26, !dbg !7735

22:                                               ; preds = %16
  %23 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7736
  %24 = load i32, i32* %4, align 4, !dbg !7737
  call void @init_data_sock_params(%struct.vsf_session* %23, i32 %24), !dbg !7738
  %25 = load i32, i32* %4, align 4, !dbg !7739
  store i32 %25, i32* %2, align 4, !dbg !7740
  br label %26, !dbg !7740

26:                                               ; preds = %22, %20
  %27 = load i32, i32* %2, align 4, !dbg !7741
  ret i32 %27, !dbg !7741
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_ftpdataio_post_mark_connect(%struct.vsf_session*) #0 !dbg !7742 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !7743, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7745, metadata !DIExpression()), !dbg !7746
  store i32 0, i32* %4, align 4, !dbg !7746
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7747
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 48, !dbg !7749
  %8 = load i32, i32* %7, align 4, !dbg !7749
  %9 = icmp ne i32 %8, 0, !dbg !7747
  br i1 %9, label %11, label %10, !dbg !7750

10:                                               ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !7751
  br label %54, !dbg !7751

11:                                               ; preds = %1
  %12 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7753
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 53, !dbg !7755
  %14 = load i32, i32* %13, align 8, !dbg !7755
  %15 = icmp ne i32 %14, 0, !dbg !7753
  br i1 %15, label %22, label %16, !dbg !7756

16:                                               ; preds = %11
  %17 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7757
  %18 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7759
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 7, !dbg !7760
  %20 = load i32, i32* %19, align 8, !dbg !7760
  %21 = call i32 @ssl_accept(%struct.vsf_session* %17, i32 %20), !dbg !7761
  store i32 %21, i32* %4, align 4, !dbg !7762
  br label %41, !dbg !7763

22:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7764, metadata !DIExpression()), !dbg !7766
  %23 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7767
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 55, !dbg !7768
  %25 = load i32, i32* %24, align 8, !dbg !7768
  call void @priv_sock_send_cmd(i32 %25, i8 signext 6), !dbg !7769
  %26 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7770
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 55, !dbg !7771
  %28 = load i32, i32* %27, align 8, !dbg !7771
  %29 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7772
  %30 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %29, i32 0, i32 7, !dbg !7773
  %31 = load i32, i32* %30, align 8, !dbg !7773
  call void @priv_sock_send_fd(i32 %28, i32 %31), !dbg !7774
  %32 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7775
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 55, !dbg !7776
  %34 = load i32, i32* %33, align 8, !dbg !7776
  %35 = call signext i8 @priv_sock_get_result(i32 %34), !dbg !7777
  %36 = sext i8 %35 to i32, !dbg !7777
  store i32 %36, i32* %5, align 4, !dbg !7778
  %37 = load i32, i32* %5, align 4, !dbg !7779
  %38 = icmp eq i32 %37, 1, !dbg !7781
  br i1 %38, label %39, label %40, !dbg !7782

39:                                               ; preds = %22
  store i32 1, i32* %4, align 4, !dbg !7783
  br label %40, !dbg !7785

40:                                               ; preds = %39, %22
  br label %41

41:                                               ; preds = %40, %16
  %42 = load i32, i32* %4, align 4, !dbg !7786
  %43 = icmp ne i32 %42, 1, !dbg !7788
  br i1 %43, label %44, label %52, !dbg !7789

44:                                               ; preds = %41
  %45 = load i32, i32* @tunable_require_ssl_reuse, align 4, !dbg !7790
  %46 = icmp ne i32 %45, 0, !dbg !7790
  br i1 %46, label %47, label %49, !dbg !7793

47:                                               ; preds = %44
  %48 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7794
  call void @vsf_cmdio_write_exit(%struct.vsf_session* %48, i32 522, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3.374, i32 0, i32 0), i32 1), !dbg !7796
  br label %51, !dbg !7797

49:                                               ; preds = %44
  %50 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !7798
  call void @vsf_cmdio_write(%struct.vsf_session* %50, i32 522, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.375, i32 0, i32 0)), !dbg !7800
  br label %51

51:                                               ; preds = %49, %47
  br label %52, !dbg !7801

52:                                               ; preds = %51, %41
  %53 = load i32, i32* %4, align 4, !dbg !7802
  store i32 %53, i32* %2, align 4, !dbg !7803
  br label %54, !dbg !7803

54:                                               ; preds = %52, %10
  %55 = load i32, i32* %2, align 4, !dbg !7804
  ret i32 %55, !dbg !7804
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_ftpdataio_transfer_dir(%struct.vsf_session*, i32, %struct.vsf_sysutil_dir*, %struct.mystr*, %struct.mystr*, %struct.mystr*, i32) #0 !dbg !7805 {
  %8 = alloca %struct.vsf_session*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.vsf_sysutil_dir*, align 8
  %11 = alloca %struct.mystr*, align 8
  %12 = alloca %struct.mystr*, align 8
  %13 = alloca %struct.mystr*, align 8
  %14 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %8, metadata !7810, metadata !DIExpression()), !dbg !7811
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7812, metadata !DIExpression()), !dbg !7813
  store %struct.vsf_sysutil_dir* %2, %struct.vsf_sysutil_dir** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %10, metadata !7814, metadata !DIExpression()), !dbg !7815
  store %struct.mystr* %3, %struct.mystr** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %11, metadata !7816, metadata !DIExpression()), !dbg !7817
  store %struct.mystr* %4, %struct.mystr** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %12, metadata !7818, metadata !DIExpression()), !dbg !7819
  store %struct.mystr* %5, %struct.mystr** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %13, metadata !7820, metadata !DIExpression()), !dbg !7821
  store i32 %6, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !7822, metadata !DIExpression()), !dbg !7823
  %15 = load %struct.vsf_session*, %struct.vsf_session** %8, align 8, !dbg !7824
  %16 = load i32, i32* %9, align 4, !dbg !7825
  %17 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %10, align 8, !dbg !7826
  %18 = load %struct.mystr*, %struct.mystr** %11, align 8, !dbg !7827
  %19 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !7828
  %20 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !7829
  %21 = load i32, i32* %14, align 4, !dbg !7830
  %22 = call i32 @transfer_dir_internal(%struct.vsf_session* %15, i32 %16, %struct.vsf_sysutil_dir* %17, %struct.mystr* %18, %struct.mystr* %19, %struct.mystr* %20, i32 %21), !dbg !7831
  ret i32 %22, !dbg !7832
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @transfer_dir_internal(%struct.vsf_session*, i32, %struct.vsf_sysutil_dir*, %struct.mystr*, %struct.mystr*, %struct.mystr*, i32) #0 !dbg !7833 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.vsf_session*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.vsf_sysutil_dir*, align 8
  %12 = alloca %struct.mystr*, align 8
  %13 = alloca %struct.mystr*, align 8
  %14 = alloca %struct.mystr*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mystr_list, align 8
  %17 = alloca %struct.mystr_list, align 8
  %18 = alloca %struct.mystr, align 8
  %19 = alloca %struct.mystr_list*, align 8
  %20 = alloca %struct.str_locate_result, align 4
  %21 = alloca { i64, i8 }, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %struct.mystr, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %struct.vsf_sysutil_dir*, align 8
  %30 = alloca %struct.mystr*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %9, metadata !7834, metadata !DIExpression()), !dbg !7835
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7836, metadata !DIExpression()), !dbg !7837
  store %struct.vsf_sysutil_dir* %2, %struct.vsf_sysutil_dir** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %11, metadata !7838, metadata !DIExpression()), !dbg !7839
  store %struct.mystr* %3, %struct.mystr** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %12, metadata !7840, metadata !DIExpression()), !dbg !7841
  store %struct.mystr* %4, %struct.mystr** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %13, metadata !7842, metadata !DIExpression()), !dbg !7843
  store %struct.mystr* %5, %struct.mystr** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %14, metadata !7844, metadata !DIExpression()), !dbg !7845
  store i32 %6, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata %struct.mystr_list* %16, metadata !7848, metadata !DIExpression()), !dbg !7849
  %31 = bitcast %struct.mystr_list* %16 to i8*, !dbg !7849
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false), !dbg !7849
  call void @llvm.dbg.declare(metadata %struct.mystr_list* %17, metadata !7850, metadata !DIExpression()), !dbg !7851
  %32 = bitcast %struct.mystr_list* %17 to i8*, !dbg !7851
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false), !dbg !7851
  call void @llvm.dbg.declare(metadata %struct.mystr* %18, metadata !7852, metadata !DIExpression()), !dbg !7853
  %33 = bitcast %struct.mystr* %18 to i8*, !dbg !7853
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false), !dbg !7853
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %19, metadata !7854, metadata !DIExpression()), !dbg !7855
  store %struct.mystr_list* null, %struct.mystr_list** %19, align 8, !dbg !7855
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %20, metadata !7856, metadata !DIExpression()), !dbg !7862
  %34 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !7863
  %35 = call { i64, i8 } @str_locate_char(%struct.mystr* %34, i8 signext 82), !dbg !7864
  store { i64, i8 } %35, { i64, i8 }* %21, align 8, !dbg !7864
  %36 = bitcast { i64, i8 }* %21 to i8*, !dbg !7864
  %37 = bitcast %struct.str_locate_result* %20 to i8*, !dbg !7864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %36, i64 12, i1 false), !dbg !7864
  call void @llvm.dbg.declare(metadata i32* %22, metadata !7865, metadata !DIExpression()), !dbg !7866
  store i32 0, i32* %22, align 4, !dbg !7866
  call void @llvm.dbg.declare(metadata i32* %23, metadata !7867, metadata !DIExpression()), !dbg !7868
  store i32 2, i32* %23, align 4, !dbg !7868
  %38 = load i32, i32* %10, align 4, !dbg !7869
  %39 = icmp ne i32 %38, 0, !dbg !7869
  br i1 %39, label %40, label %41, !dbg !7871

40:                                               ; preds = %7
  store i32 1, i32* %23, align 4, !dbg !7872
  br label %41, !dbg !7874

41:                                               ; preds = %40, %7
  %42 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %20, i32 0, i32 0, !dbg !7875
  %43 = load i32, i32* %42, align 4, !dbg !7875
  %44 = icmp ne i32 %43, 0, !dbg !7877
  br i1 %44, label %45, label %49, !dbg !7878

45:                                               ; preds = %41
  %46 = load i32, i32* @tunable_ls_recurse_enable, align 4, !dbg !7879
  %47 = icmp ne i32 %46, 0, !dbg !7879
  br i1 %47, label %48, label %49, !dbg !7880

48:                                               ; preds = %45
  store %struct.mystr_list* %17, %struct.mystr_list** %19, align 8, !dbg !7881
  br label %49, !dbg !7883

49:                                               ; preds = %48, %45, %41
  %50 = load %struct.mystr_list*, %struct.mystr_list** %19, align 8, !dbg !7884
  %51 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %11, align 8, !dbg !7885
  %52 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !7886
  %53 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !7887
  %54 = load %struct.mystr*, %struct.mystr** %14, align 8, !dbg !7888
  %55 = load i32, i32* %15, align 4, !dbg !7889
  call void @vsf_ls_populate_dir_list(%struct.mystr_list* %16, %struct.mystr_list* %50, %struct.vsf_sysutil_dir* %51, %struct.mystr* %52, %struct.mystr* %53, %struct.mystr* %54, i32 %55), !dbg !7890
  %56 = load %struct.mystr_list*, %struct.mystr_list** %19, align 8, !dbg !7891
  %57 = icmp ne %struct.mystr_list* %56, null, !dbg !7891
  br i1 %57, label %58, label %67, !dbg !7893

58:                                               ; preds = %49
  call void @llvm.dbg.declare(metadata i32* %24, metadata !7894, metadata !DIExpression()), !dbg !7896
  %59 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !7897
  call void @str_copy(%struct.mystr* %18, %struct.mystr* %59), !dbg !7898
  call void @str_append_text(%struct.mystr* %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.378, i32 0, i32 0)), !dbg !7899
  %60 = load %struct.vsf_session*, %struct.vsf_session** %9, align 8, !dbg !7900
  %61 = load i32, i32* %23, align 4, !dbg !7901
  %62 = call i32 @ftp_write_str(%struct.vsf_session* %60, %struct.mystr* %18, i32 %61), !dbg !7902
  store i32 %62, i32* %24, align 4, !dbg !7903
  %63 = load i32, i32* %24, align 4, !dbg !7904
  %64 = icmp ne i32 %63, 0, !dbg !7906
  br i1 %64, label %65, label %66, !dbg !7907

65:                                               ; preds = %58
  store i32 1, i32* %22, align 4, !dbg !7908
  br label %66, !dbg !7910

66:                                               ; preds = %65, %58
  br label %67, !dbg !7911

67:                                               ; preds = %66, %49
  %68 = load i32, i32* %22, align 4, !dbg !7912
  %69 = icmp ne i32 %68, 0, !dbg !7912
  br i1 %69, label %74, label %70, !dbg !7914

70:                                               ; preds = %67
  %71 = load %struct.vsf_session*, %struct.vsf_session** %9, align 8, !dbg !7915
  %72 = load i32, i32* %23, align 4, !dbg !7917
  %73 = call i32 @write_dir_list(%struct.vsf_session* %71, %struct.mystr_list* %16, i32 %72), !dbg !7918
  store i32 %73, i32* %22, align 4, !dbg !7919
  br label %74, !dbg !7920

74:                                               ; preds = %70, %67
  %75 = load i32, i32* %22, align 4, !dbg !7921
  %76 = icmp ne i32 %75, 0, !dbg !7921
  br i1 %76, label %127, label %77, !dbg !7923

77:                                               ; preds = %74
  call void @llvm.dbg.declare(metadata %struct.mystr* %25, metadata !7924, metadata !DIExpression()), !dbg !7926
  %78 = bitcast %struct.mystr* %25 to i8*, !dbg !7926
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false), !dbg !7926
  call void @llvm.dbg.declare(metadata i32* %26, metadata !7927, metadata !DIExpression()), !dbg !7928
  %79 = call i32 @str_list_get_length(%struct.mystr_list* %17), !dbg !7929
  store i32 %79, i32* %26, align 4, !dbg !7928
  call void @llvm.dbg.declare(metadata i32* %27, metadata !7930, metadata !DIExpression()), !dbg !7931
  store i32 0, i32* %27, align 4, !dbg !7932
  br label %80, !dbg !7934

80:                                               ; preds = %123, %77
  %81 = load i32, i32* %27, align 4, !dbg !7935
  %82 = load i32, i32* %26, align 4, !dbg !7937
  %83 = icmp ult i32 %81, %82, !dbg !7938
  br i1 %83, label %84, label %126, !dbg !7939

84:                                               ; preds = %80
  call void @llvm.dbg.declare(metadata i32* %28, metadata !7940, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %29, metadata !7943, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.declare(metadata %struct.mystr** %30, metadata !7945, metadata !DIExpression()), !dbg !7946
  %85 = load i32, i32* %27, align 4, !dbg !7947
  %86 = call %struct.mystr* @str_list_get_pstr(%struct.mystr_list* %17, i32 %85), !dbg !7948
  store %struct.mystr* %86, %struct.mystr** %30, align 8, !dbg !7946
  %87 = load %struct.mystr*, %struct.mystr** %30, align 8, !dbg !7949
  %88 = call i32 @str_equal_text(%struct.mystr* %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.379, i32 0, i32 0)), !dbg !7951
  %89 = icmp ne i32 %88, 0, !dbg !7951
  br i1 %89, label %94, label %90, !dbg !7952

90:                                               ; preds = %84
  %91 = load %struct.mystr*, %struct.mystr** %30, align 8, !dbg !7953
  %92 = call i32 @str_equal_text(%struct.mystr* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.380, i32 0, i32 0)), !dbg !7954
  %93 = icmp ne i32 %92, 0, !dbg !7954
  br i1 %93, label %94, label %95, !dbg !7955

94:                                               ; preds = %90, %84
  br label %123, !dbg !7956

95:                                               ; preds = %90
  %96 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !7958
  call void @str_copy(%struct.mystr* %25, %struct.mystr* %96), !dbg !7959
  call void @str_append_char(%struct.mystr* %25, i8 signext 47), !dbg !7960
  %97 = load %struct.mystr*, %struct.mystr** %30, align 8, !dbg !7961
  call void @str_append_str(%struct.mystr* %25, %struct.mystr* %97), !dbg !7962
  %98 = call %struct.vsf_sysutil_dir* @str_opendir(%struct.mystr* %25), !dbg !7963
  store %struct.vsf_sysutil_dir* %98, %struct.vsf_sysutil_dir** %29, align 8, !dbg !7964
  %99 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %29, align 8, !dbg !7965
  %100 = icmp eq %struct.vsf_sysutil_dir* %99, null, !dbg !7967
  br i1 %100, label %101, label %102, !dbg !7968

101:                                              ; preds = %95
  br label %123, !dbg !7969

102:                                              ; preds = %95
  call void @str_alloc_text(%struct.mystr* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.381, i32 0, i32 0)), !dbg !7971
  %103 = load %struct.vsf_session*, %struct.vsf_session** %9, align 8, !dbg !7972
  %104 = load i32, i32* %23, align 4, !dbg !7973
  %105 = call i32 @ftp_write_str(%struct.vsf_session* %103, %struct.mystr* %18, i32 %104), !dbg !7974
  store i32 %105, i32* %28, align 4, !dbg !7975
  %106 = load i32, i32* %28, align 4, !dbg !7976
  %107 = icmp ne i32 %106, 0, !dbg !7978
  br i1 %107, label %108, label %110, !dbg !7979

108:                                              ; preds = %102
  store i32 1, i32* %22, align 4, !dbg !7980
  %109 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %29, align 8, !dbg !7982
  call void @vsf_sysutil_closedir(%struct.vsf_sysutil_dir* %109), !dbg !7983
  br label %126, !dbg !7984

110:                                              ; preds = %102
  %111 = load %struct.vsf_session*, %struct.vsf_session** %9, align 8, !dbg !7985
  %112 = load i32, i32* %10, align 4, !dbg !7986
  %113 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %29, align 8, !dbg !7987
  %114 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !7988
  %115 = load %struct.mystr*, %struct.mystr** %14, align 8, !dbg !7989
  %116 = load i32, i32* %15, align 4, !dbg !7990
  %117 = call i32 @transfer_dir_internal(%struct.vsf_session* %111, i32 %112, %struct.vsf_sysutil_dir* %113, %struct.mystr* %25, %struct.mystr* %114, %struct.mystr* %115, i32 %116), !dbg !7991
  store i32 %117, i32* %28, align 4, !dbg !7992
  %118 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %29, align 8, !dbg !7993
  call void @vsf_sysutil_closedir(%struct.vsf_sysutil_dir* %118), !dbg !7994
  %119 = load i32, i32* %28, align 4, !dbg !7995
  %120 = icmp ne i32 %119, 0, !dbg !7997
  br i1 %120, label %121, label %122, !dbg !7998

121:                                              ; preds = %110
  store i32 1, i32* %22, align 4, !dbg !7999
  br label %126, !dbg !8001

122:                                              ; preds = %110
  br label %123, !dbg !8002

123:                                              ; preds = %122, %101, %94
  %124 = load i32, i32* %27, align 4, !dbg !8003
  %125 = add i32 %124, 1, !dbg !8003
  store i32 %125, i32* %27, align 4, !dbg !8003
  br label %80, !dbg !8004, !llvm.loop !8005

126:                                              ; preds = %121, %108, %80
  call void @str_free(%struct.mystr* %25), !dbg !8007
  br label %127, !dbg !8008

127:                                              ; preds = %126, %74
  call void @str_list_free(%struct.mystr_list* %16), !dbg !8009
  call void @str_list_free(%struct.mystr_list* %17), !dbg !8010
  call void @str_free(%struct.mystr* %18), !dbg !8011
  %128 = load i32, i32* %22, align 4, !dbg !8012
  %129 = icmp ne i32 %128, 0, !dbg !8012
  br i1 %129, label %131, label %130, !dbg !8014

130:                                              ; preds = %127
  store i32 0, i32* %8, align 4, !dbg !8015
  br label %132, !dbg !8015

131:                                              ; preds = %127
  store i32 -1, i32* %8, align 4, !dbg !8017
  br label %132, !dbg !8017

132:                                              ; preds = %131, %130
  %133 = load i32, i32* %8, align 4, !dbg !8019
  ret i32 %133, !dbg !8019
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @write_dir_list(%struct.vsf_session*, %struct.mystr_list*, i32) #0 !dbg !8020 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca %struct.mystr_list*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.mystr, align 8
  %11 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !8023, metadata !DIExpression()), !dbg !8024
  store %struct.mystr_list* %1, %struct.mystr_list** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %5, metadata !8025, metadata !DIExpression()), !dbg !8026
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8027, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8029, metadata !DIExpression()), !dbg !8030
  store i32 0, i32* %7, align 4, !dbg !8030
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8031, metadata !DIExpression()), !dbg !8032
  %12 = load %struct.mystr_list*, %struct.mystr_list** %5, align 8, !dbg !8033
  %13 = call i32 @str_list_get_length(%struct.mystr_list* %12), !dbg !8034
  store i32 %13, i32* %8, align 4, !dbg !8032
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8035, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.declare(metadata %struct.mystr* %10, metadata !8037, metadata !DIExpression()), !dbg !8038
  %14 = bitcast %struct.mystr* %10 to i8*, !dbg !8038
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false), !dbg !8038
  call void @str_reserve(%struct.mystr* %10, i32 16384), !dbg !8039
  store i32 0, i32* %9, align 4, !dbg !8040
  br label %15, !dbg !8042

15:                                               ; preds = %45, %3
  %16 = load i32, i32* %9, align 4, !dbg !8043
  %17 = load i32, i32* %8, align 4, !dbg !8045
  %18 = icmp ult i32 %16, %17, !dbg !8046
  br i1 %18, label %19, label %48, !dbg !8047

19:                                               ; preds = %15
  %20 = load %struct.mystr_list*, %struct.mystr_list** %5, align 8, !dbg !8048
  %21 = load i32, i32* %9, align 4, !dbg !8050
  %22 = call %struct.mystr* @str_list_get_pstr(%struct.mystr_list* %20, i32 %21), !dbg !8051
  call void @str_append_str(%struct.mystr* %10, %struct.mystr* %22), !dbg !8052
  %23 = load i32, i32* %9, align 4, !dbg !8053
  %24 = load i32, i32* %8, align 4, !dbg !8055
  %25 = sub i32 %24, 1, !dbg !8056
  %26 = icmp eq i32 %23, %25, !dbg !8057
  br i1 %26, label %36, label %27, !dbg !8058

27:                                               ; preds = %19
  %28 = call i32 @str_getlen(%struct.mystr* %10), !dbg !8059
  %29 = load %struct.mystr_list*, %struct.mystr_list** %5, align 8, !dbg !8060
  %30 = load i32, i32* %9, align 4, !dbg !8061
  %31 = add i32 %30, 1, !dbg !8062
  %32 = call %struct.mystr* @str_list_get_pstr(%struct.mystr_list* %29, i32 %31), !dbg !8063
  %33 = call i32 @str_getlen(%struct.mystr* %32), !dbg !8064
  %34 = add i32 %28, %33, !dbg !8065
  %35 = icmp ugt i32 %34, 16384, !dbg !8066
  br i1 %35, label %36, label %44, !dbg !8067

36:                                               ; preds = %27, %19
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8068, metadata !DIExpression()), !dbg !8070
  %37 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !8071
  %38 = load i32, i32* %6, align 4, !dbg !8072
  %39 = call i32 @ftp_write_str(%struct.vsf_session* %37, %struct.mystr* %10, i32 %38), !dbg !8073
  store i32 %39, i32* %11, align 4, !dbg !8070
  %40 = load i32, i32* %11, align 4, !dbg !8074
  %41 = icmp ne i32 %40, 0, !dbg !8076
  br i1 %41, label %42, label %43, !dbg !8077

42:                                               ; preds = %36
  store i32 1, i32* %7, align 4, !dbg !8078
  br label %48, !dbg !8080

43:                                               ; preds = %36
  call void @str_empty(%struct.mystr* %10), !dbg !8081
  br label %44, !dbg !8082

44:                                               ; preds = %43, %27
  br label %45, !dbg !8083

45:                                               ; preds = %44
  %46 = load i32, i32* %9, align 4, !dbg !8084
  %47 = add i32 %46, 1, !dbg !8084
  store i32 %47, i32* %9, align 4, !dbg !8084
  br label %15, !dbg !8085, !llvm.loop !8086

48:                                               ; preds = %42, %15
  call void @str_free(%struct.mystr* %10), !dbg !8088
  %49 = load i32, i32* %7, align 4, !dbg !8089
  ret i32 %49, !dbg !8090
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i32, i64 } @vsf_ftpdataio_transfer_file(%struct.vsf_session*, i32, i32, i32, i32) #0 !dbg !8091 {
  %6 = alloca %struct.vsf_transfer_ret, align 8
  %7 = alloca %struct.vsf_session*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %7, metadata !8094, metadata !DIExpression()), !dbg !8095
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8098, metadata !DIExpression()), !dbg !8099
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8100, metadata !DIExpression()), !dbg !8101
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8102, metadata !DIExpression()), !dbg !8103
  %14 = load i32, i32* %10, align 4, !dbg !8104
  %15 = icmp ne i32 %14, 0, !dbg !8104
  br i1 %15, label %51, label %16, !dbg !8106

16:                                               ; preds = %5
  %17 = load i32, i32* %11, align 4, !dbg !8107
  %18 = icmp ne i32 %17, 0, !dbg !8107
  br i1 %18, label %24, label %19, !dbg !8110

19:                                               ; preds = %16
  %20 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !8111
  %21 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %20, i32 0, i32 48, !dbg !8112
  %22 = load i32, i32* %21, align 4, !dbg !8112
  %23 = icmp ne i32 %22, 0, !dbg !8111
  br i1 %23, label %24, label %34, !dbg !8113

24:                                               ; preds = %19, %16
  %25 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !8114
  %26 = load i32, i32* %9, align 4, !dbg !8116
  %27 = load i32, i32* %11, align 4, !dbg !8117
  %28 = call { i32, i64 } @do_file_send_rwloop(%struct.vsf_session* %25, i32 %26, i32 %27), !dbg !8118
  %29 = bitcast %struct.vsf_transfer_ret* %6 to { i32, i64 }*, !dbg !8118
  %30 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %29, i32 0, i32 0, !dbg !8118
  %31 = extractvalue { i32, i64 } %28, 0, !dbg !8118
  store i32 %31, i32* %30, align 8, !dbg !8118
  %32 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %29, i32 0, i32 1, !dbg !8118
  %33 = extractvalue { i32, i64 } %28, 1, !dbg !8118
  store i64 %33, i64* %32, align 8, !dbg !8118
  br label %61, !dbg !8119

34:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata i64* %12, metadata !8120, metadata !DIExpression()), !dbg !8122
  %35 = load i32, i32* %9, align 4, !dbg !8123
  %36 = call i64 @vsf_sysutil_get_file_offset(i32 %35), !dbg !8124
  store i64 %36, i64* %12, align 8, !dbg !8122
  call void @llvm.dbg.declare(metadata i64* %13, metadata !8125, metadata !DIExpression()), !dbg !8126
  %37 = load i32, i32* %9, align 4, !dbg !8127
  %38 = load i64, i64* %12, align 8, !dbg !8128
  %39 = call i64 @calc_num_send(i32 %37, i64 %38), !dbg !8129
  store i64 %39, i64* %13, align 8, !dbg !8126
  %40 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !8130
  %41 = load i32, i32* %8, align 4, !dbg !8131
  %42 = load i32, i32* %9, align 4, !dbg !8132
  %43 = load i64, i64* %12, align 8, !dbg !8133
  %44 = load i64, i64* %13, align 8, !dbg !8134
  %45 = call { i32, i64 } @do_file_send_sendfile(%struct.vsf_session* %40, i32 %41, i32 %42, i64 %43, i64 %44), !dbg !8135
  %46 = bitcast %struct.vsf_transfer_ret* %6 to { i32, i64 }*, !dbg !8135
  %47 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %46, i32 0, i32 0, !dbg !8135
  %48 = extractvalue { i32, i64 } %45, 0, !dbg !8135
  store i32 %48, i32* %47, align 8, !dbg !8135
  %49 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %46, i32 0, i32 1, !dbg !8135
  %50 = extractvalue { i32, i64 } %45, 1, !dbg !8135
  store i64 %50, i64* %49, align 8, !dbg !8135
  br label %61, !dbg !8136

51:                                               ; preds = %5
  %52 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !8137
  %53 = load i32, i32* %9, align 4, !dbg !8139
  %54 = load i32, i32* %11, align 4, !dbg !8140
  %55 = call { i32, i64 } @do_file_recv(%struct.vsf_session* %52, i32 %53, i32 %54), !dbg !8141
  %56 = bitcast %struct.vsf_transfer_ret* %6 to { i32, i64 }*, !dbg !8141
  %57 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %56, i32 0, i32 0, !dbg !8141
  %58 = extractvalue { i32, i64 } %55, 0, !dbg !8141
  store i32 %58, i32* %57, align 8, !dbg !8141
  %59 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %56, i32 0, i32 1, !dbg !8141
  %60 = extractvalue { i32, i64 } %55, 1, !dbg !8141
  store i64 %60, i64* %59, align 8, !dbg !8141
  br label %61, !dbg !8142

61:                                               ; preds = %51, %34, %24
  %62 = bitcast %struct.vsf_transfer_ret* %6 to { i32, i64 }*, !dbg !8143
  %63 = load { i32, i64 }, { i32, i64 }* %62, align 8, !dbg !8143
  ret { i32, i64 } %63, !dbg !8143
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal { i32, i64 } @do_file_send_rwloop(%struct.vsf_session*, i32, i32) #0 !dbg !696 {
  %4 = alloca %struct.vsf_transfer_ret, align 8
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.vsf_transfer_ret, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.vsf_client_launch, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !8144, metadata !DIExpression()), !dbg !8145
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8146, metadata !DIExpression()), !dbg !8147
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8148, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata %struct.vsf_transfer_ret* %8, metadata !8150, metadata !DIExpression()), !dbg !8151
  %15 = bitcast %struct.vsf_transfer_ret* %8 to i8*, !dbg !8151
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false), !dbg !8151
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8152, metadata !DIExpression()), !dbg !8153
  %16 = call i32 @get_chunk_size(), !dbg !8154
  store i32 %16, i32* %9, align 4, !dbg !8153
  call void @llvm.dbg.declare(metadata i8** %10, metadata !8155, metadata !DIExpression()), !dbg !8156
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8157, metadata !DIExpression()), !dbg !8158
  store i32 0, i32* %11, align 4, !dbg !8158
  %17 = load i8*, i8** @do_file_send_rwloop.p_readbuf, align 8, !dbg !8159
  %18 = icmp eq i8* %17, null, !dbg !8161
  br i1 %18, label %19, label %20, !dbg !8162

19:                                               ; preds = %3
  call void @vsf_secbuf_alloc(i8** @do_file_send_rwloop.p_readbuf, i32 65536), !dbg !8163
  br label %20, !dbg !8165

20:                                               ; preds = %19, %3
  %21 = load i32, i32* %7, align 4, !dbg !8166
  %22 = icmp ne i32 %21, 0, !dbg !8166
  br i1 %22, label %23, label %29, !dbg !8168

23:                                               ; preds = %20
  %24 = load i8*, i8** @do_file_send_rwloop.p_asciibuf, align 8, !dbg !8169
  %25 = icmp eq i8* %24, null, !dbg !8172
  br i1 %25, label %26, label %27, !dbg !8173

26:                                               ; preds = %23
  call void @vsf_secbuf_alloc(i8** @do_file_send_rwloop.p_asciibuf, i32 131072), !dbg !8174
  br label %27, !dbg !8176

27:                                               ; preds = %26, %23
  %28 = load i8*, i8** @do_file_send_rwloop.p_asciibuf, align 8, !dbg !8177
  store i8* %28, i8** %10, align 8, !dbg !8178
  br label %31, !dbg !8179

29:                                               ; preds = %20
  %30 = load i8*, i8** @do_file_send_rwloop.p_readbuf, align 8, !dbg !8180
  store i8* %30, i8** %10, align 8, !dbg !8182
  br label %31

31:                                               ; preds = %29, %27
  br label %32, !dbg !8183

32:                                               ; preds = %31, %93
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8184, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8187, metadata !DIExpression()), !dbg !8188
  %33 = load i32, i32* %6, align 4, !dbg !8189
  %34 = load i8*, i8** @do_file_send_rwloop.p_readbuf, align 8, !dbg !8190
  %35 = load i32, i32* %9, align 4, !dbg !8191
  %36 = call i32 @vsf_sysutil_read(i32 %33, i8* %34, i32 %35), !dbg !8192
  store i32 %36, i32* %13, align 4, !dbg !8188
  %37 = load i32, i32* %13, align 4, !dbg !8193
  %38 = call i32 @vsf_sysutil_retval_is_error(i32 %37), !dbg !8195
  %39 = icmp ne i32 %38, 0, !dbg !8195
  br i1 %39, label %40, label %44, !dbg !8196

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 0, !dbg !8197
  store i32 -1, i32* %41, align 8, !dbg !8199
  %42 = bitcast %struct.vsf_transfer_ret* %4 to i8*, !dbg !8200
  %43 = bitcast %struct.vsf_transfer_ret* %8 to i8*, !dbg !8200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false), !dbg !8200
  br label %94, !dbg !8201

44:                                               ; preds = %32
  %45 = load i32, i32* %13, align 4, !dbg !8202
  %46 = icmp eq i32 %45, 0, !dbg !8204
  br i1 %46, label %47, label %50, !dbg !8205

47:                                               ; preds = %44
  %48 = bitcast %struct.vsf_transfer_ret* %4 to i8*, !dbg !8206
  %49 = bitcast %struct.vsf_transfer_ret* %8 to i8*, !dbg !8206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false), !dbg !8206
  br label %94, !dbg !8208

50:                                               ; preds = %44
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %7, align 4, !dbg !8209
  %53 = icmp ne i32 %52, 0, !dbg !8209
  br i1 %53, label %54, label %65, !dbg !8211

54:                                               ; preds = %51
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %14, metadata !8212, metadata !DIExpression()), !dbg !8219
  %55 = load i8*, i8** @do_file_send_rwloop.p_readbuf, align 8, !dbg !8220
  %56 = load i8*, i8** @do_file_send_rwloop.p_asciibuf, align 8, !dbg !8221
  %57 = load i32, i32* %13, align 4, !dbg !8222
  %58 = load i32, i32* %11, align 4, !dbg !8223
  %59 = call i64 @vsf_ascii_bin_to_ascii(i8* %55, i8* %56, i32 %57, i32 %58), !dbg !8224
  %60 = bitcast %struct.vsf_client_launch* %14 to i64*, !dbg !8224
  store i64 %59, i64* %60, align 4, !dbg !8224
  %61 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %14, i32 0, i32 0, !dbg !8225
  %62 = load i32, i32* %61, align 4, !dbg !8225
  store i32 %62, i32* %12, align 4, !dbg !8226
  %63 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %14, i32 0, i32 1, !dbg !8227
  %64 = load i32, i32* %63, align 4, !dbg !8227
  store i32 %64, i32* %11, align 4, !dbg !8228
  br label %67, !dbg !8229

65:                                               ; preds = %51
  %66 = load i32, i32* %13, align 4, !dbg !8230
  store i32 %66, i32* %12, align 4, !dbg !8232
  br label %67

67:                                               ; preds = %65, %54
  %68 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !8233
  %69 = load i8*, i8** %10, align 8, !dbg !8234
  %70 = load i32, i32* %12, align 4, !dbg !8235
  %71 = call i32 @ftp_write_data(%struct.vsf_session* %68, i8* %69, i32 %70), !dbg !8236
  store i32 %71, i32* %13, align 4, !dbg !8237
  %72 = load i32, i32* %13, align 4, !dbg !8238
  %73 = call i32 @vsf_sysutil_retval_is_error(i32 %72), !dbg !8240
  %74 = icmp ne i32 %73, 0, !dbg !8240
  br i1 %74, label %81, label %75, !dbg !8241

75:                                               ; preds = %67
  %76 = load i32, i32* %13, align 4, !dbg !8242
  %77 = zext i32 %76 to i64, !dbg !8244
  %78 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 1, !dbg !8245
  %79 = load i64, i64* %78, align 8, !dbg !8246
  %80 = add nsw i64 %79, %77, !dbg !8246
  store i64 %80, i64* %78, align 8, !dbg !8246
  br label %81, !dbg !8247

81:                                               ; preds = %75, %67
  %82 = load i32, i32* %13, align 4, !dbg !8248
  %83 = call i32 @vsf_sysutil_retval_is_error(i32 %82), !dbg !8250
  %84 = icmp ne i32 %83, 0, !dbg !8250
  br i1 %84, label %89, label %85, !dbg !8251

85:                                               ; preds = %81
  %86 = load i32, i32* %13, align 4, !dbg !8252
  %87 = load i32, i32* %12, align 4, !dbg !8253
  %88 = icmp ne i32 %86, %87, !dbg !8254
  br i1 %88, label %89, label %93, !dbg !8255

89:                                               ; preds = %85, %81
  %90 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %8, i32 0, i32 0, !dbg !8256
  store i32 -2, i32* %90, align 8, !dbg !8258
  %91 = bitcast %struct.vsf_transfer_ret* %4 to i8*, !dbg !8259
  %92 = bitcast %struct.vsf_transfer_ret* %8 to i8*, !dbg !8259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 16, i1 false), !dbg !8259
  br label %94, !dbg !8260

93:                                               ; preds = %85
  br label %32, !dbg !8183, !llvm.loop !8261

94:                                               ; preds = %89, %47, %40
  %95 = bitcast %struct.vsf_transfer_ret* %4 to { i32, i64 }*, !dbg !8263
  %96 = load { i32, i64 }, { i32, i64 }* %95, align 8, !dbg !8263
  ret { i32, i64 } %96, !dbg !8263
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @calc_num_send(i32, i64) #0 !dbg !701 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8264, metadata !DIExpression()), !dbg !8265
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.declare(metadata i64* %5, metadata !8268, metadata !DIExpression()), !dbg !8269
  %6 = load i32, i32* %3, align 4, !dbg !8270
  call void @vsf_sysutil_fstat(i32 %6, %struct.vsf_sysutil_statbuf** @calc_num_send.s_p_statbuf), !dbg !8271
  %7 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @calc_num_send.s_p_statbuf, align 8, !dbg !8272
  %8 = call i64 @vsf_sysutil_statbuf_get_size(%struct.vsf_sysutil_statbuf* %7), !dbg !8273
  store i64 %8, i64* %5, align 8, !dbg !8274
  %9 = load i64, i64* %4, align 8, !dbg !8275
  %10 = icmp slt i64 %9, 0, !dbg !8277
  br i1 %10, label %14, label %11, !dbg !8278

11:                                               ; preds = %2
  %12 = load i64, i64* %5, align 8, !dbg !8279
  %13 = icmp slt i64 %12, 0, !dbg !8280
  br i1 %13, label %14, label %15, !dbg !8281

14:                                               ; preds = %11, %2
  call void @die(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10.384, i32 0, i32 0)), !dbg !8282
  br label %15, !dbg !8284

15:                                               ; preds = %14, %11
  %16 = load i64, i64* %4, align 8, !dbg !8285
  %17 = load i64, i64* %5, align 8, !dbg !8287
  %18 = icmp sgt i64 %16, %17, !dbg !8288
  br i1 %18, label %19, label %20, !dbg !8289

19:                                               ; preds = %15
  store i64 0, i64* %5, align 8, !dbg !8290
  br label %24, !dbg !8292

20:                                               ; preds = %15
  %21 = load i64, i64* %4, align 8, !dbg !8293
  %22 = load i64, i64* %5, align 8, !dbg !8295
  %23 = sub nsw i64 %22, %21, !dbg !8295
  store i64 %23, i64* %5, align 8, !dbg !8295
  br label %24

24:                                               ; preds = %20, %19
  %25 = load i64, i64* %5, align 8, !dbg !8296
  ret i64 %25, !dbg !8297
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal { i32, i64 } @do_file_send_sendfile(%struct.vsf_session*, i32, i32, i64, i64) #0 !dbg !8298 {
  %6 = alloca %struct.vsf_transfer_ret, align 8
  %7 = alloca %struct.vsf_session*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.vsf_transfer_ret, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %7, metadata !8301, metadata !DIExpression()), !dbg !8302
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8303, metadata !DIExpression()), !dbg !8304
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8305, metadata !DIExpression()), !dbg !8306
  store i64 %3, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !8307, metadata !DIExpression()), !dbg !8308
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8313, metadata !DIExpression()), !dbg !8314
  store i32 0, i32* %13, align 4, !dbg !8314
  call void @llvm.dbg.declare(metadata %struct.vsf_transfer_ret* %14, metadata !8315, metadata !DIExpression()), !dbg !8316
  %17 = bitcast %struct.vsf_transfer_ret* %14 to i8*, !dbg !8316
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false), !dbg !8316
  call void @llvm.dbg.declare(metadata i64* %15, metadata !8317, metadata !DIExpression()), !dbg !8318
  %18 = load i64, i64* %10, align 8, !dbg !8319
  store i64 %18, i64* %15, align 8, !dbg !8318
  call void @llvm.dbg.declare(metadata i64* %16, metadata !8320, metadata !DIExpression()), !dbg !8321
  %19 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !8322
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 9, !dbg !8324
  %21 = load i32, i32* %20, align 8, !dbg !8324
  %22 = icmp ne i32 %21, 0, !dbg !8322
  br i1 %22, label %23, label %25, !dbg !8325

23:                                               ; preds = %5
  %24 = call i32 @get_chunk_size(), !dbg !8326
  store i32 %24, i32* %13, align 4, !dbg !8328
  br label %25, !dbg !8329

25:                                               ; preds = %23, %5
  %26 = load i32, i32* %8, align 4, !dbg !8330
  %27 = load i32, i32* %9, align 4, !dbg !8331
  %28 = load i64, i64* %11, align 8, !dbg !8332
  %29 = load i32, i32* %13, align 4, !dbg !8333
  %30 = call i32 @vsf_sysutil_sendfile(i32 %26, i32 %27, i64* %10, i64 %28, i32 %29), !dbg !8334
  store i32 %30, i32* %12, align 4, !dbg !8335
  %31 = load i64, i64* %10, align 8, !dbg !8336
  %32 = load i64, i64* %15, align 8, !dbg !8337
  %33 = sub nsw i64 %31, %32, !dbg !8338
  store i64 %33, i64* %16, align 8, !dbg !8339
  %34 = load i64, i64* %16, align 8, !dbg !8340
  %35 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %14, i32 0, i32 1, !dbg !8341
  store i64 %34, i64* %35, align 8, !dbg !8342
  %36 = load i32, i32* %12, align 4, !dbg !8343
  %37 = call i32 @vsf_sysutil_retval_is_error(i32 %36), !dbg !8345
  %38 = icmp ne i32 %37, 0, !dbg !8345
  br i1 %38, label %39, label %43, !dbg !8346

39:                                               ; preds = %25
  %40 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %14, i32 0, i32 0, !dbg !8347
  store i32 -2, i32* %40, align 8, !dbg !8349
  %41 = bitcast %struct.vsf_transfer_ret* %6 to i8*, !dbg !8350
  %42 = bitcast %struct.vsf_transfer_ret* %14 to i8*, !dbg !8350
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false), !dbg !8350
  br label %55, !dbg !8351

43:                                               ; preds = %25
  %44 = load i64, i64* %16, align 8, !dbg !8352
  %45 = load i64, i64* %11, align 8, !dbg !8354
  %46 = icmp ne i64 %44, %45, !dbg !8355
  br i1 %46, label %47, label %51, !dbg !8356

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %14, i32 0, i32 0, !dbg !8357
  store i32 -2, i32* %48, align 8, !dbg !8359
  %49 = bitcast %struct.vsf_transfer_ret* %6 to i8*, !dbg !8360
  %50 = bitcast %struct.vsf_transfer_ret* %14 to i8*, !dbg !8360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false), !dbg !8360
  br label %55, !dbg !8361

51:                                               ; preds = %43
  br label %52

52:                                               ; preds = %51
  %53 = bitcast %struct.vsf_transfer_ret* %6 to i8*, !dbg !8362
  %54 = bitcast %struct.vsf_transfer_ret* %14 to i8*, !dbg !8362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false), !dbg !8362
  br label %55, !dbg !8363

55:                                               ; preds = %52, %47, %39
  %56 = bitcast %struct.vsf_transfer_ret* %6 to { i32, i64 }*, !dbg !8364
  %57 = load { i32, i64 }, { i32, i64 }* %56, align 8, !dbg !8364
  ret { i32, i64 } %57, !dbg !8364
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal { i32, i64 } @do_file_recv(%struct.vsf_session*, i32, i32) #0 !dbg !604 {
  %4 = alloca %struct.vsf_transfer_ret, align 8
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.vsf_transfer_ret, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.ascii_to_bin_ret, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !8365, metadata !DIExpression()), !dbg !8366
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8367, metadata !DIExpression()), !dbg !8368
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8369, metadata !DIExpression()), !dbg !8370
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8371, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.declare(metadata %struct.vsf_transfer_ret* %9, metadata !8373, metadata !DIExpression()), !dbg !8374
  %15 = bitcast %struct.vsf_transfer_ret* %9 to i8*, !dbg !8374
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false), !dbg !8374
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8375, metadata !DIExpression()), !dbg !8376
  %16 = call i32 @get_chunk_size(), !dbg !8377
  store i32 %16, i32* %10, align 4, !dbg !8376
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8378, metadata !DIExpression()), !dbg !8379
  store i32 0, i32* %11, align 4, !dbg !8379
  %17 = load i8*, i8** @do_file_recv.p_recvbuf, align 8, !dbg !8380
  %18 = icmp eq i8* %17, null, !dbg !8382
  br i1 %18, label %19, label %20, !dbg !8383

19:                                               ; preds = %3
  call void @vsf_secbuf_alloc(i8** @do_file_recv.p_recvbuf, i32 65537), !dbg !8384
  br label %20, !dbg !8386

20:                                               ; preds = %19, %3
  br label %21, !dbg !8387

21:                                               ; preds = %20, %87
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8388, metadata !DIExpression()), !dbg !8390
  %22 = load i8*, i8** @do_file_recv.p_recvbuf, align 8, !dbg !8391
  %23 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !8392
  store i8* %23, i8** %12, align 8, !dbg !8390
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8393, metadata !DIExpression()), !dbg !8394
  %24 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !8395
  %25 = load i8*, i8** @do_file_recv.p_recvbuf, align 8, !dbg !8396
  %26 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !8397
  %27 = load i32, i32* %10, align 4, !dbg !8398
  %28 = call i32 @ftp_read_data(%struct.vsf_session* %24, i8* %26, i32 %27), !dbg !8399
  store i32 %28, i32* %13, align 4, !dbg !8394
  %29 = load i32, i32* %13, align 4, !dbg !8400
  %30 = call i32 @vsf_sysutil_retval_is_error(i32 %29), !dbg !8402
  %31 = icmp ne i32 %30, 0, !dbg !8402
  br i1 %31, label %32, label %36, !dbg !8403

32:                                               ; preds = %21
  %33 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %9, i32 0, i32 0, !dbg !8404
  store i32 -2, i32* %33, align 8, !dbg !8406
  %34 = bitcast %struct.vsf_transfer_ret* %4 to i8*, !dbg !8407
  %35 = bitcast %struct.vsf_transfer_ret* %9 to i8*, !dbg !8407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !8407
  br label %88, !dbg !8408

36:                                               ; preds = %21
  %37 = load i32, i32* %13, align 4, !dbg !8409
  %38 = icmp eq i32 %37, 0, !dbg !8411
  br i1 %38, label %39, label %45, !dbg !8412

39:                                               ; preds = %36
  %40 = load i32, i32* %11, align 4, !dbg !8413
  %41 = icmp ne i32 %40, 0, !dbg !8413
  br i1 %41, label %45, label %42, !dbg !8414

42:                                               ; preds = %39
  %43 = bitcast %struct.vsf_transfer_ret* %4 to i8*, !dbg !8415
  %44 = bitcast %struct.vsf_transfer_ret* %9 to i8*, !dbg !8415
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false), !dbg !8415
  br label %88, !dbg !8417

45:                                               ; preds = %39, %36
  br label %46

46:                                               ; preds = %45
  %47 = load i32, i32* %13, align 4, !dbg !8418
  store i32 %47, i32* %8, align 4, !dbg !8419
  %48 = load i32, i32* %8, align 4, !dbg !8420
  %49 = zext i32 %48 to i64, !dbg !8420
  %50 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %9, i32 0, i32 1, !dbg !8421
  %51 = load i64, i64* %50, align 8, !dbg !8422
  %52 = add nsw i64 %51, %49, !dbg !8422
  store i64 %52, i64* %50, align 8, !dbg !8422
  %53 = load i32, i32* %7, align 4, !dbg !8423
  %54 = icmp ne i32 %53, 0, !dbg !8423
  br i1 %54, label %55, label %71, !dbg !8425

55:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata %struct.ascii_to_bin_ret* %14, metadata !8426, metadata !DIExpression()), !dbg !8433
  %56 = load i8*, i8** @do_file_recv.p_recvbuf, align 8, !dbg !8434
  %57 = load i32, i32* %8, align 4, !dbg !8435
  %58 = load i32, i32* %11, align 4, !dbg !8436
  %59 = call { i64, i8* } @vsf_ascii_ascii_to_bin(i8* %56, i32 %57, i32 %58), !dbg !8437
  %60 = bitcast %struct.ascii_to_bin_ret* %14 to { i64, i8* }*, !dbg !8437
  %61 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %60, i32 0, i32 0, !dbg !8437
  %62 = extractvalue { i64, i8* } %59, 0, !dbg !8437
  store i64 %62, i64* %61, align 8, !dbg !8437
  %63 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %60, i32 0, i32 1, !dbg !8437
  %64 = extractvalue { i64, i8* } %59, 1, !dbg !8437
  store i8* %64, i8** %63, align 8, !dbg !8437
  %65 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %14, i32 0, i32 0, !dbg !8438
  %66 = load i32, i32* %65, align 8, !dbg !8438
  store i32 %66, i32* %8, align 4, !dbg !8439
  %67 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %14, i32 0, i32 1, !dbg !8440
  %68 = load i32, i32* %67, align 4, !dbg !8440
  store i32 %68, i32* %11, align 4, !dbg !8441
  %69 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %14, i32 0, i32 2, !dbg !8442
  %70 = load i8*, i8** %69, align 8, !dbg !8442
  store i8* %70, i8** %12, align 8, !dbg !8443
  br label %71, !dbg !8444

71:                                               ; preds = %55, %46
  %72 = load i32, i32* %6, align 4, !dbg !8445
  %73 = load i8*, i8** %12, align 8, !dbg !8446
  %74 = load i32, i32* %8, align 4, !dbg !8447
  %75 = call i32 @vsf_sysutil_write_loop(i32 %72, i8* %73, i32 %74), !dbg !8448
  store i32 %75, i32* %13, align 4, !dbg !8449
  %76 = load i32, i32* %13, align 4, !dbg !8450
  %77 = call i32 @vsf_sysutil_retval_is_error(i32 %76), !dbg !8452
  %78 = icmp ne i32 %77, 0, !dbg !8452
  br i1 %78, label %83, label %79, !dbg !8453

79:                                               ; preds = %71
  %80 = load i32, i32* %13, align 4, !dbg !8454
  %81 = load i32, i32* %8, align 4, !dbg !8455
  %82 = icmp ne i32 %80, %81, !dbg !8456
  br i1 %82, label %83, label %87, !dbg !8457

83:                                               ; preds = %79, %71
  %84 = getelementptr inbounds %struct.vsf_transfer_ret, %struct.vsf_transfer_ret* %9, i32 0, i32 0, !dbg !8458
  store i32 -1, i32* %84, align 8, !dbg !8460
  %85 = bitcast %struct.vsf_transfer_ret* %4 to i8*, !dbg !8461
  %86 = bitcast %struct.vsf_transfer_ret* %9 to i8*, !dbg !8461
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false), !dbg !8461
  br label %88, !dbg !8462

87:                                               ; preds = %79
  br label %21, !dbg !8387, !llvm.loop !8463

88:                                               ; preds = %83, %42, %32
  %89 = bitcast %struct.vsf_transfer_ret* %4 to { i32, i64 }*, !dbg !8465
  %90 = load { i32, i64 }, { i32, i64 }* %89, align 8, !dbg !8465
  ret { i32, i64 } %90, !dbg !8465
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @get_chunk_size() #0 !dbg !8466 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8467, metadata !DIExpression()), !dbg !8468
  store i32 65536, i32* %1, align 4, !dbg !8468
  %2 = load i32, i32* @tunable_trans_chunk_size, align 4, !dbg !8469
  %3 = icmp ult i32 %2, 65536, !dbg !8471
  br i1 %3, label %4, label %13, !dbg !8472

4:                                                ; preds = %0
  %5 = load i32, i32* @tunable_trans_chunk_size, align 4, !dbg !8473
  %6 = icmp ugt i32 %5, 0, !dbg !8474
  br i1 %6, label %7, label %13, !dbg !8475

7:                                                ; preds = %4
  %8 = load i32, i32* @tunable_trans_chunk_size, align 4, !dbg !8476
  store i32 %8, i32* %1, align 4, !dbg !8478
  %9 = load i32, i32* %1, align 4, !dbg !8479
  %10 = icmp ult i32 %9, 4096, !dbg !8481
  br i1 %10, label %11, label %12, !dbg !8482

11:                                               ; preds = %7
  store i32 4096, i32* %1, align 4, !dbg !8483
  br label %12, !dbg !8485

12:                                               ; preds = %11, %7
  br label %13, !dbg !8486

13:                                               ; preds = %12, %4, %0
  %14 = load i32, i32* %1, align 4, !dbg !8487
  ret i32 %14, !dbg !8488
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_secbuf_alloc(i8**, i32) #0 !dbg !8489 {
  %3 = alloca i8**, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8** %0, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !8492, metadata !DIExpression()), !dbg !8493
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8494, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8498, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8500, metadata !DIExpression()), !dbg !8501
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8502, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8504, metadata !DIExpression()), !dbg !8505
  %11 = call i32 @vsf_sysutil_getpagesize(), !dbg !8506
  store i32 %11, i32* %9, align 4, !dbg !8505
  %12 = load i8**, i8*** %3, align 8, !dbg !8507
  call void @vsf_secbuf_free(i8** %12), !dbg !8508
  %13 = load i32, i32* %4, align 4, !dbg !8509
  %14 = load i32, i32* %9, align 4, !dbg !8510
  %15 = urem i32 %13, %14, !dbg !8511
  store i32 %15, i32* %5, align 4, !dbg !8512
  %16 = load i32, i32* %5, align 4, !dbg !8513
  %17 = icmp ne i32 %16, 0, !dbg !8513
  br i1 %17, label %18, label %27, !dbg !8515

18:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8516, metadata !DIExpression()), !dbg !8518
  %19 = load i32, i32* %4, align 4, !dbg !8519
  %20 = load i32, i32* %9, align 4, !dbg !8520
  %21 = udiv i32 %19, %20, !dbg !8521
  store i32 %21, i32* %10, align 4, !dbg !8518
  %22 = load i32, i32* %10, align 4, !dbg !8522
  %23 = add i32 %22, 1, !dbg !8522
  store i32 %23, i32* %10, align 4, !dbg !8522
  %24 = load i32, i32* %10, align 4, !dbg !8523
  %25 = load i32, i32* %9, align 4, !dbg !8524
  %26 = mul i32 %24, %25, !dbg !8525
  store i32 %26, i32* %6, align 4, !dbg !8526
  br label %29, !dbg !8527

27:                                               ; preds = %2
  %28 = load i32, i32* %4, align 4, !dbg !8528
  store i32 %28, i32* %6, align 4, !dbg !8530
  br label %29

29:                                               ; preds = %27, %18
  %30 = load i32, i32* %9, align 4, !dbg !8531
  %31 = mul i32 %30, 2, !dbg !8532
  %32 = load i32, i32* %6, align 4, !dbg !8533
  %33 = add i32 %32, %31, !dbg !8533
  store i32 %33, i32* %6, align 4, !dbg !8533
  %34 = load i32, i32* %6, align 4, !dbg !8534
  %35 = call i8* @vsf_sysutil_map_anon_pages(i32 %34), !dbg !8535
  store i8* %35, i8** %7, align 8, !dbg !8536
  %36 = load i8*, i8** %7, align 8, !dbg !8537
  %37 = load i32, i32* %6, align 4, !dbg !8538
  %38 = zext i32 %37 to i64, !dbg !8539
  %39 = getelementptr inbounds i8, i8* %36, i64 %38, !dbg !8539
  %40 = load i32, i32* %9, align 4, !dbg !8540
  %41 = zext i32 %40 to i64, !dbg !8541
  %42 = sub i64 0, %41, !dbg !8541
  %43 = getelementptr inbounds i8, i8* %39, i64 %42, !dbg !8541
  store i8* %43, i8** %8, align 8, !dbg !8542
  %44 = load i8*, i8** %8, align 8, !dbg !8543
  %45 = load i32, i32* %9, align 4, !dbg !8544
  call void @vsf_sysutil_memprotect(i8* %44, i32 %45, i32 2), !dbg !8545
  %46 = load i32, i32* %6, align 4, !dbg !8546
  %47 = load i8*, i8** %7, align 8, !dbg !8547
  %48 = bitcast i8* %47 to i32*, !dbg !8548
  store i32 %46, i32* %48, align 4, !dbg !8549
  %49 = load i8*, i8** %7, align 8, !dbg !8550
  store i8* %49, i8** %8, align 8, !dbg !8551
  %50 = load i8*, i8** %8, align 8, !dbg !8552
  %51 = load i32, i32* %9, align 4, !dbg !8553
  call void @vsf_sysutil_memprotect(i8* %50, i32 %51, i32 2), !dbg !8554
  %52 = load i32, i32* %9, align 4, !dbg !8555
  %53 = load i8*, i8** %7, align 8, !dbg !8556
  %54 = zext i32 %52 to i64, !dbg !8556
  %55 = getelementptr inbounds i8, i8* %53, i64 %54, !dbg !8556
  store i8* %55, i8** %7, align 8, !dbg !8556
  %56 = load i32, i32* %5, align 4, !dbg !8557
  %57 = icmp ne i32 %56, 0, !dbg !8557
  br i1 %57, label %58, label %65, !dbg !8559

58:                                               ; preds = %29
  %59 = load i32, i32* %9, align 4, !dbg !8560
  %60 = load i32, i32* %5, align 4, !dbg !8562
  %61 = sub i32 %59, %60, !dbg !8563
  %62 = load i8*, i8** %7, align 8, !dbg !8564
  %63 = zext i32 %61 to i64, !dbg !8564
  %64 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !8564
  store i8* %64, i8** %7, align 8, !dbg !8564
  br label %65, !dbg !8565

65:                                               ; preds = %58, %29
  %66 = load i8*, i8** %7, align 8, !dbg !8566
  %67 = load i8**, i8*** %3, align 8, !dbg !8567
  store i8* %66, i8** %67, align 8, !dbg !8568
  ret void, !dbg !8569
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_secbuf_free(i8**) #0 !dbg !8570 {
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !8573, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8575, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.declare(metadata i64* %4, metadata !8577, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8579, metadata !DIExpression()), !dbg !8580
  %7 = load i8**, i8*** %2, align 8, !dbg !8581
  %8 = load i8*, i8** %7, align 8, !dbg !8582
  store i8* %8, i8** %5, align 8, !dbg !8580
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8583, metadata !DIExpression()), !dbg !8584
  %9 = call i32 @vsf_sysutil_getpagesize(), !dbg !8585
  store i32 %9, i32* %6, align 4, !dbg !8584
  %10 = load i8*, i8** %5, align 8, !dbg !8586
  %11 = icmp eq i8* %10, null, !dbg !8588
  br i1 %11, label %12, label %13, !dbg !8589

12:                                               ; preds = %1
  br label %39, !dbg !8590

13:                                               ; preds = %1
  %14 = load i8*, i8** %5, align 8, !dbg !8592
  %15 = ptrtoint i8* %14 to i64, !dbg !8593
  %16 = load i32, i32* %6, align 4, !dbg !8594
  %17 = zext i32 %16 to i64, !dbg !8594
  %18 = urem i64 %15, %17, !dbg !8595
  store i64 %18, i64* %4, align 8, !dbg !8596
  %19 = load i64, i64* %4, align 8, !dbg !8597
  %20 = icmp ne i64 %19, 0, !dbg !8597
  br i1 %20, label %21, label %26, !dbg !8599

21:                                               ; preds = %13
  %22 = load i64, i64* %4, align 8, !dbg !8600
  %23 = load i8*, i8** %5, align 8, !dbg !8602
  %24 = sub i64 0, %22, !dbg !8602
  %25 = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !8602
  store i8* %25, i8** %5, align 8, !dbg !8602
  br label %26, !dbg !8603

26:                                               ; preds = %21, %13
  %27 = load i32, i32* %6, align 4, !dbg !8604
  %28 = load i8*, i8** %5, align 8, !dbg !8605
  %29 = zext i32 %27 to i64, !dbg !8605
  %30 = sub i64 0, %29, !dbg !8605
  %31 = getelementptr inbounds i8, i8* %28, i64 %30, !dbg !8605
  store i8* %31, i8** %5, align 8, !dbg !8605
  %32 = load i8*, i8** %5, align 8, !dbg !8606
  %33 = load i32, i32* %6, align 4, !dbg !8607
  call void @vsf_sysutil_memprotect(i8* %32, i32 %33, i32 1), !dbg !8608
  %34 = load i8*, i8** %5, align 8, !dbg !8609
  %35 = bitcast i8* %34 to i32*, !dbg !8610
  %36 = load i32, i32* %35, align 4, !dbg !8610
  store i32 %36, i32* %3, align 4, !dbg !8611
  %37 = load i8*, i8** %5, align 8, !dbg !8612
  %38 = load i32, i32* %3, align 4, !dbg !8613
  call void @vsf_sysutil_memunmap(i8* %37, i32 %38), !dbg !8614
  br label %39, !dbg !8615

39:                                               ; preds = %26, %12
  ret void, !dbg !8615
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_ls_populate_dir_list(%struct.mystr_list*, %struct.mystr_list*, %struct.vsf_sysutil_dir*, %struct.mystr*, %struct.mystr*, %struct.mystr*, i32) #0 !dbg !708 {
  %8 = alloca %struct.mystr_list*, align 8
  %9 = alloca %struct.mystr_list*, align 8
  %10 = alloca %struct.vsf_sysutil_dir*, align 8
  %11 = alloca %struct.mystr*, align 8
  %12 = alloca %struct.mystr*, align 8
  %13 = alloca %struct.mystr*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.mystr, align 8
  %16 = alloca %struct.mystr, align 8
  %17 = alloca %struct.str_locate_result, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca %struct.str_locate_result, align 4
  %25 = alloca { i64, i8 }, align 8
  %26 = alloca %struct.str_locate_result, align 4
  %27 = alloca { i64, i8 }, align 8
  %28 = alloca %struct.str_locate_result, align 4
  %29 = alloca { i64, i8 }, align 8
  %30 = alloca %struct.str_locate_result, align 4
  %31 = alloca { i64, i8 }, align 8
  %32 = alloca %struct.str_locate_result, align 4
  %33 = alloca { i64, i8 }, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %struct.mystr*, align 8
  %40 = alloca %struct.mystr*, align 8
  store %struct.mystr_list* %0, %struct.mystr_list** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %8, metadata !8616, metadata !DIExpression()), !dbg !8617
  store %struct.mystr_list* %1, %struct.mystr_list** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %9, metadata !8618, metadata !DIExpression()), !dbg !8619
  store %struct.vsf_sysutil_dir* %2, %struct.vsf_sysutil_dir** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %10, metadata !8620, metadata !DIExpression()), !dbg !8621
  store %struct.mystr* %3, %struct.mystr** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %11, metadata !8622, metadata !DIExpression()), !dbg !8623
  store %struct.mystr* %4, %struct.mystr** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %12, metadata !8624, metadata !DIExpression()), !dbg !8625
  store %struct.mystr* %5, %struct.mystr** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %13, metadata !8626, metadata !DIExpression()), !dbg !8627
  store i32 %6, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8628, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.declare(metadata %struct.mystr* %15, metadata !8630, metadata !DIExpression()), !dbg !8631
  %41 = bitcast %struct.mystr* %15 to i8*, !dbg !8631
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false), !dbg !8631
  call void @llvm.dbg.declare(metadata %struct.mystr* %16, metadata !8632, metadata !DIExpression()), !dbg !8633
  %42 = bitcast %struct.mystr* %16 to i8*, !dbg !8633
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false), !dbg !8633
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %17, metadata !8634, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8641, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8643, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8647, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8649, metadata !DIExpression()), !dbg !8650
  store i32 0, i32* %22, align 4, !dbg !8650
  call void @llvm.dbg.declare(metadata i64* %23, metadata !8651, metadata !DIExpression()), !dbg !8652
  store i64 0, i64* %23, align 8, !dbg !8652
  %43 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !8653
  %44 = call { i64, i8 } @str_locate_char(%struct.mystr* %43, i8 signext 97), !dbg !8654
  store { i64, i8 } %44, { i64, i8 }* %25, align 8, !dbg !8654
  %45 = bitcast { i64, i8 }* %25 to i8*, !dbg !8654
  %46 = bitcast %struct.str_locate_result* %24 to i8*, !dbg !8654
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %45, i64 12, i1 false), !dbg !8654
  %47 = bitcast %struct.str_locate_result* %17 to i8*, !dbg !8654
  %48 = bitcast %struct.str_locate_result* %24 to i8*, !dbg !8654
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 12, i1 false), !dbg !8654
  %49 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %17, i32 0, i32 0, !dbg !8655
  %50 = load i32, i32* %49, align 4, !dbg !8655
  store i32 %50, i32* %18, align 4, !dbg !8656
  %51 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !8657
  %52 = call { i64, i8 } @str_locate_char(%struct.mystr* %51, i8 signext 114), !dbg !8658
  store { i64, i8 } %52, { i64, i8 }* %27, align 8, !dbg !8658
  %53 = bitcast { i64, i8 }* %27 to i8*, !dbg !8658
  %54 = bitcast %struct.str_locate_result* %26 to i8*, !dbg !8658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %53, i64 12, i1 false), !dbg !8658
  %55 = bitcast %struct.str_locate_result* %17 to i8*, !dbg !8658
  %56 = bitcast %struct.str_locate_result* %26 to i8*, !dbg !8658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 12, i1 false), !dbg !8658
  %57 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %17, i32 0, i32 0, !dbg !8659
  %58 = load i32, i32* %57, align 4, !dbg !8659
  store i32 %58, i32* %19, align 4, !dbg !8660
  %59 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !8661
  %60 = call { i64, i8 } @str_locate_char(%struct.mystr* %59, i8 signext 116), !dbg !8662
  store { i64, i8 } %60, { i64, i8 }* %29, align 8, !dbg !8662
  %61 = bitcast { i64, i8 }* %29 to i8*, !dbg !8662
  %62 = bitcast %struct.str_locate_result* %28 to i8*, !dbg !8662
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %61, i64 12, i1 false), !dbg !8662
  %63 = bitcast %struct.str_locate_result* %17 to i8*, !dbg !8662
  %64 = bitcast %struct.str_locate_result* %28 to i8*, !dbg !8662
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 12, i1 false), !dbg !8662
  %65 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %17, i32 0, i32 0, !dbg !8663
  %66 = load i32, i32* %65, align 4, !dbg !8663
  store i32 %66, i32* %20, align 4, !dbg !8664
  %67 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !8665
  %68 = call { i64, i8 } @str_locate_char(%struct.mystr* %67, i8 signext 70), !dbg !8666
  store { i64, i8 } %68, { i64, i8 }* %31, align 8, !dbg !8666
  %69 = bitcast { i64, i8 }* %31 to i8*, !dbg !8666
  %70 = bitcast %struct.str_locate_result* %30 to i8*, !dbg !8666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %69, i64 12, i1 false), !dbg !8666
  %71 = bitcast %struct.str_locate_result* %17 to i8*, !dbg !8666
  %72 = bitcast %struct.str_locate_result* %30 to i8*, !dbg !8666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 12, i1 false), !dbg !8666
  %73 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %17, i32 0, i32 0, !dbg !8667
  %74 = load i32, i32* %73, align 4, !dbg !8667
  store i32 %74, i32* %21, align 4, !dbg !8668
  %75 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !8669
  %76 = call { i64, i8 } @str_locate_char(%struct.mystr* %75, i8 signext 108), !dbg !8670
  store { i64, i8 } %76, { i64, i8 }* %33, align 8, !dbg !8670
  %77 = bitcast { i64, i8 }* %33 to i8*, !dbg !8670
  %78 = bitcast %struct.str_locate_result* %32 to i8*, !dbg !8670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %77, i64 12, i1 false), !dbg !8670
  %79 = bitcast %struct.str_locate_result* %17 to i8*, !dbg !8670
  %80 = bitcast %struct.str_locate_result* %32 to i8*, !dbg !8670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 12, i1 false), !dbg !8670
  %81 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %17, i32 0, i32 0, !dbg !8671
  %82 = load i32, i32* %81, align 4, !dbg !8671
  %83 = icmp ne i32 %82, 0, !dbg !8673
  br i1 %83, label %84, label %85, !dbg !8674

84:                                               ; preds = %7
  store i32 1, i32* %14, align 4, !dbg !8675
  br label %85, !dbg !8677

85:                                               ; preds = %84, %7
  %86 = load i32, i32* %20, align 4, !dbg !8678
  %87 = icmp ne i32 %86, 0, !dbg !8678
  br i1 %87, label %88, label %93, !dbg !8680

88:                                               ; preds = %85
  %89 = load i32, i32* %19, align 4, !dbg !8681
  %90 = icmp ne i32 %89, 0, !dbg !8683
  %91 = xor i1 %90, true, !dbg !8683
  %92 = zext i1 %91 to i32, !dbg !8683
  store i32 %92, i32* %19, align 4, !dbg !8684
  br label %93, !dbg !8685

93:                                               ; preds = %88, %85
  %94 = load i32, i32* %14, align 4, !dbg !8686
  %95 = icmp ne i32 %94, 0, !dbg !8686
  br i1 %95, label %105, label %96, !dbg !8688

96:                                               ; preds = %93
  %97 = load i32, i32* %20, align 4, !dbg !8689
  %98 = icmp ne i32 %97, 0, !dbg !8689
  br i1 %98, label %105, label %99, !dbg !8690

99:                                               ; preds = %96
  %100 = load i32, i32* %21, align 4, !dbg !8691
  %101 = icmp ne i32 %100, 0, !dbg !8691
  br i1 %101, label %105, label %102, !dbg !8692

102:                                              ; preds = %99
  %103 = load %struct.mystr_list*, %struct.mystr_list** %9, align 8, !dbg !8693
  %104 = icmp ne %struct.mystr_list* %103, null, !dbg !8694
  br i1 %104, label %105, label %106, !dbg !8695

105:                                              ; preds = %102, %99, %96, %93
  store i32 1, i32* %22, align 4, !dbg !8696
  br label %106, !dbg !8698

106:                                              ; preds = %105, %102
  %107 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !8699
  %108 = call i32 @str_isempty(%struct.mystr* %107), !dbg !8701
  %109 = icmp ne i32 %108, 0, !dbg !8701
  br i1 %109, label %116, label %110, !dbg !8702

110:                                              ; preds = %106
  %111 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !8703
  %112 = call signext i8 @str_get_char_at(%struct.mystr* %111, i32 0), !dbg !8704
  %113 = sext i8 %112 to i32, !dbg !8704
  %114 = icmp eq i32 %113, 46, !dbg !8705
  br i1 %114, label %115, label %116, !dbg !8706

115:                                              ; preds = %110
  store i32 1, i32* %18, align 4, !dbg !8707
  br label %116, !dbg !8709

116:                                              ; preds = %115, %110, %106
  %117 = load %struct.mystr*, %struct.mystr** %11, align 8, !dbg !8710
  %118 = call i32 @str_equal_text(%struct.mystr* %117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.389, i32 0, i32 0)), !dbg !8712
  %119 = icmp ne i32 %118, 0, !dbg !8712
  br i1 %119, label %122, label %120, !dbg !8713

120:                                              ; preds = %116
  %121 = load %struct.mystr*, %struct.mystr** %11, align 8, !dbg !8714
  call void @str_copy(%struct.mystr* %16, %struct.mystr* %121), !dbg !8716
  br label %122, !dbg !8717

122:                                              ; preds = %120, %116
  %123 = call i32 @str_isempty(%struct.mystr* %16), !dbg !8718
  %124 = icmp ne i32 %123, 0, !dbg !8718
  br i1 %124, label %134, label %125, !dbg !8720

125:                                              ; preds = %122
  call void @llvm.dbg.declare(metadata i32* %34, metadata !8721, metadata !DIExpression()), !dbg !8723
  %126 = call i32 @str_getlen(%struct.mystr* %16), !dbg !8724
  store i32 %126, i32* %34, align 4, !dbg !8723
  %127 = load i32, i32* %34, align 4, !dbg !8725
  %128 = sub i32 %127, 1, !dbg !8727
  %129 = call signext i8 @str_get_char_at(%struct.mystr* %16, i32 %128), !dbg !8728
  %130 = sext i8 %129 to i32, !dbg !8728
  %131 = icmp ne i32 %130, 47, !dbg !8729
  br i1 %131, label %132, label %133, !dbg !8730

132:                                              ; preds = %125
  call void @str_append_char(%struct.mystr* %16, i8 signext 47), !dbg !8731
  br label %133, !dbg !8733

133:                                              ; preds = %132, %125
  br label %134, !dbg !8734

134:                                              ; preds = %133, %122
  %135 = load i32, i32* %14, align 4, !dbg !8735
  %136 = icmp ne i32 %135, 0, !dbg !8735
  br i1 %136, label %137, label %139, !dbg !8737

137:                                              ; preds = %134
  %138 = call i64 @vsf_sysutil_get_time_sec(), !dbg !8738
  store i64 %138, i64* %23, align 8, !dbg !8740
  br label %139, !dbg !8741

139:                                              ; preds = %137, %134
  br label %140, !dbg !8742

140:                                              ; preds = %139, %159, %173, %178, %187, %197, %261
  %141 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %10, align 8, !dbg !8743
  call void @str_next_dirent(%struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str, %struct.vsf_sysutil_dir* %141), !dbg !8745
  %142 = call i32 @str_isempty(%struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str), !dbg !8746
  %143 = icmp ne i32 %142, 0, !dbg !8746
  br i1 %143, label %144, label %145, !dbg !8748

144:                                              ; preds = %140
  br label %262, !dbg !8749

145:                                              ; preds = %140
  call void @llvm.dbg.declare(metadata i32* %35, metadata !8751, metadata !DIExpression()), !dbg !8753
  %146 = call i32 @str_getlen(%struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str), !dbg !8754
  store i32 %146, i32* %35, align 4, !dbg !8753
  %147 = load i32, i32* %35, align 4, !dbg !8755
  %148 = icmp ugt i32 %147, 0, !dbg !8757
  br i1 %148, label %149, label %175, !dbg !8758

149:                                              ; preds = %145
  %150 = call signext i8 @str_get_char_at(%struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str, i32 0), !dbg !8759
  %151 = sext i8 %150 to i32, !dbg !8759
  %152 = icmp eq i32 %151, 46, !dbg !8760
  br i1 %152, label %153, label %175, !dbg !8761

153:                                              ; preds = %149
  %154 = load i32, i32* %18, align 4, !dbg !8762
  %155 = icmp ne i32 %154, 0, !dbg !8762
  br i1 %155, label %160, label %156, !dbg !8765

156:                                              ; preds = %153
  %157 = load i32, i32* @tunable_force_dot_files, align 4, !dbg !8766
  %158 = icmp ne i32 %157, 0, !dbg !8766
  br i1 %158, label %160, label %159, !dbg !8767

159:                                              ; preds = %156
  br label %140, !dbg !8768, !llvm.loop !8770

160:                                              ; preds = %156, %153
  %161 = load i32, i32* %18, align 4, !dbg !8772
  %162 = icmp ne i32 %161, 0, !dbg !8772
  br i1 %162, label %174, label %163, !dbg !8774

163:                                              ; preds = %160
  %164 = load i32, i32* %35, align 4, !dbg !8775
  %165 = icmp eq i32 %164, 2, !dbg !8776
  br i1 %165, label %166, label %170, !dbg !8777

166:                                              ; preds = %163
  %167 = call signext i8 @str_get_char_at(%struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str, i32 1), !dbg !8778
  %168 = sext i8 %167 to i32, !dbg !8778
  %169 = icmp eq i32 %168, 46, !dbg !8779
  br i1 %169, label %173, label %170, !dbg !8780

170:                                              ; preds = %166, %163
  %171 = load i32, i32* %35, align 4, !dbg !8781
  %172 = icmp eq i32 %171, 1, !dbg !8782
  br i1 %172, label %173, label %174, !dbg !8783

173:                                              ; preds = %170, %166
  br label %140, !dbg !8784, !llvm.loop !8770

174:                                              ; preds = %170, %160
  br label %175, !dbg !8786

175:                                              ; preds = %174, %149, %145
  %176 = call i32 @vsf_access_check_file_visible(%struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str), !dbg !8787
  %177 = icmp ne i32 %176, 0, !dbg !8787
  br i1 %177, label %179, label %178, !dbg !8789

178:                                              ; preds = %175
  br label %140, !dbg !8790, !llvm.loop !8770

179:                                              ; preds = %175
  %180 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !8792
  %181 = call i32 @str_isempty(%struct.mystr* %180), !dbg !8794
  %182 = icmp ne i32 %181, 0, !dbg !8794
  br i1 %182, label %189, label %183, !dbg !8795

183:                                              ; preds = %179
  call void @llvm.dbg.declare(metadata i32* %36, metadata !8796, metadata !DIExpression()), !dbg !8798
  store i32 0, i32* %36, align 4, !dbg !8798
  %184 = load %struct.mystr*, %struct.mystr** %13, align 8, !dbg !8799
  %185 = call i32 @vsf_filename_passes_filter(%struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str, %struct.mystr* %184, i32* %36), !dbg !8801
  %186 = icmp ne i32 %185, 0, !dbg !8801
  br i1 %186, label %188, label %187, !dbg !8802

187:                                              ; preds = %183
  br label %140, !dbg !8803, !llvm.loop !8770

188:                                              ; preds = %183
  br label %189, !dbg !8805

189:                                              ; preds = %188, %179
  call void @str_copy(%struct.mystr* @vsf_ls_populate_dir_list.s_next_path_and_filename_str, %struct.mystr* %16), !dbg !8806
  call void @str_append_str(%struct.mystr* @vsf_ls_populate_dir_list.s_next_path_and_filename_str, %struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str), !dbg !8807
  %190 = load i32, i32* %22, align 4, !dbg !8808
  %191 = icmp ne i32 %190, 0, !dbg !8808
  br i1 %191, label %192, label %199, !dbg !8810

192:                                              ; preds = %189
  call void @llvm.dbg.declare(metadata i32* %37, metadata !8811, metadata !DIExpression()), !dbg !8813
  %193 = call i32 @str_lstat(%struct.mystr* @vsf_ls_populate_dir_list.s_next_path_and_filename_str, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf), !dbg !8814
  store i32 %193, i32* %37, align 4, !dbg !8813
  %194 = load i32, i32* %37, align 4, !dbg !8815
  %195 = call i32 @vsf_sysutil_retval_is_error(i32 %194), !dbg !8817
  %196 = icmp ne i32 %195, 0, !dbg !8817
  br i1 %196, label %197, label %198, !dbg !8818

197:                                              ; preds = %192
  br label %140, !dbg !8819, !llvm.loop !8770

198:                                              ; preds = %192
  br label %199, !dbg !8821

199:                                              ; preds = %198, %189
  %200 = load i32, i32* %14, align 4, !dbg !8822
  %201 = icmp ne i32 %200, 0, !dbg !8822
  br i1 %201, label %202, label %226, !dbg !8824

202:                                              ; preds = %199
  call void @str_copy(%struct.mystr* @vsf_ls_populate_dir_list.s_final_file_str, %struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str), !dbg !8825
  %203 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf, align 8, !dbg !8827
  %204 = call i32 @vsf_sysutil_statbuf_is_symlink(%struct.vsf_sysutil_statbuf* %203), !dbg !8829
  %205 = icmp ne i32 %204, 0, !dbg !8829
  br i1 %205, label %206, label %215, !dbg !8830

206:                                              ; preds = %202
  call void @llvm.dbg.declare(metadata i32* %38, metadata !8831, metadata !DIExpression()), !dbg !8833
  %207 = call i32 @str_readlink(%struct.mystr* @vsf_ls_populate_dir_list.s_temp_str, %struct.mystr* @vsf_ls_populate_dir_list.s_next_path_and_filename_str), !dbg !8834
  store i32 %207, i32* %38, align 4, !dbg !8833
  %208 = load i32, i32* %38, align 4, !dbg !8835
  %209 = icmp eq i32 %208, 0, !dbg !8837
  br i1 %209, label %210, label %214, !dbg !8838

210:                                              ; preds = %206
  %211 = call i32 @str_isempty(%struct.mystr* @vsf_ls_populate_dir_list.s_temp_str), !dbg !8839
  %212 = icmp ne i32 %211, 0, !dbg !8839
  br i1 %212, label %214, label %213, !dbg !8840

213:                                              ; preds = %210
  call void @str_append_text(%struct.mystr* @vsf_ls_populate_dir_list.s_final_file_str, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.390, i32 0, i32 0)), !dbg !8841
  call void @str_append_str(%struct.mystr* @vsf_ls_populate_dir_list.s_final_file_str, %struct.mystr* @vsf_ls_populate_dir_list.s_temp_str), !dbg !8843
  br label %214, !dbg !8844

214:                                              ; preds = %213, %210, %206
  br label %215, !dbg !8845

215:                                              ; preds = %214, %202
  %216 = load i32, i32* %21, align 4, !dbg !8846
  %217 = icmp ne i32 %216, 0, !dbg !8846
  br i1 %217, label %218, label %223, !dbg !8848

218:                                              ; preds = %215
  %219 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf, align 8, !dbg !8849
  %220 = call i32 @vsf_sysutil_statbuf_is_dir(%struct.vsf_sysutil_statbuf* %219), !dbg !8850
  %221 = icmp ne i32 %220, 0, !dbg !8850
  br i1 %221, label %222, label %223, !dbg !8851

222:                                              ; preds = %218
  call void @str_append_char(%struct.mystr* @vsf_ls_populate_dir_list.s_final_file_str, i8 signext 47), !dbg !8852
  br label %223, !dbg !8854

223:                                              ; preds = %222, %218, %215
  %224 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf, align 8, !dbg !8855
  %225 = load i64, i64* %23, align 8, !dbg !8856
  call void @build_dir_line(%struct.mystr* %15, %struct.mystr* @vsf_ls_populate_dir_list.s_final_file_str, %struct.vsf_sysutil_statbuf* %224, i64 %225), !dbg !8857
  br label %242, !dbg !8858

226:                                              ; preds = %199
  call void @str_copy(%struct.mystr* %15, %struct.mystr* @vsf_ls_populate_dir_list.s_next_path_and_filename_str), !dbg !8859
  %227 = load i32, i32* %21, align 4, !dbg !8861
  %228 = icmp ne i32 %227, 0, !dbg !8861
  br i1 %228, label %229, label %241, !dbg !8863

229:                                              ; preds = %226
  %230 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf, align 8, !dbg !8864
  %231 = call i32 @vsf_sysutil_statbuf_is_dir(%struct.vsf_sysutil_statbuf* %230), !dbg !8867
  %232 = icmp ne i32 %231, 0, !dbg !8867
  br i1 %232, label %233, label %234, !dbg !8868

233:                                              ; preds = %229
  call void @str_append_char(%struct.mystr* %15, i8 signext 47), !dbg !8869
  br label %240, !dbg !8871

234:                                              ; preds = %229
  %235 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf, align 8, !dbg !8872
  %236 = call i32 @vsf_sysutil_statbuf_is_symlink(%struct.vsf_sysutil_statbuf* %235), !dbg !8874
  %237 = icmp ne i32 %236, 0, !dbg !8874
  br i1 %237, label %238, label %239, !dbg !8875

238:                                              ; preds = %234
  call void @str_append_char(%struct.mystr* %15, i8 signext 64), !dbg !8876
  br label %239, !dbg !8878

239:                                              ; preds = %238, %234
  br label %240

240:                                              ; preds = %239, %233
  br label %241, !dbg !8879

241:                                              ; preds = %240, %226
  call void @str_append_text(%struct.mystr* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.391, i32 0, i32 0)), !dbg !8880
  br label %242

242:                                              ; preds = %241, %223
  call void @llvm.dbg.declare(metadata %struct.mystr** %39, metadata !8881, metadata !DIExpression()), !dbg !8883
  store %struct.mystr* null, %struct.mystr** %39, align 8, !dbg !8883
  call void @llvm.dbg.declare(metadata %struct.mystr** %40, metadata !8884, metadata !DIExpression()), !dbg !8885
  store %struct.mystr* null, %struct.mystr** %40, align 8, !dbg !8885
  %243 = load i32, i32* %20, align 4, !dbg !8886
  %244 = icmp ne i32 %243, 0, !dbg !8886
  br i1 %244, label %246, label %245, !dbg !8888

245:                                              ; preds = %242
  store %struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str, %struct.mystr** %39, align 8, !dbg !8889
  br label %249, !dbg !8891

246:                                              ; preds = %242
  %247 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf, align 8, !dbg !8892
  %248 = call i8* @vsf_sysutil_statbuf_get_sortkey_mtime(%struct.vsf_sysutil_statbuf* %247), !dbg !8894
  call void @str_alloc_text(%struct.mystr* @vsf_ls_populate_dir_list.s_temp_str.3, i8* %248), !dbg !8895
  store %struct.mystr* @vsf_ls_populate_dir_list.s_temp_str.3, %struct.mystr** %39, align 8, !dbg !8896
  store %struct.mystr* @vsf_ls_populate_dir_list.s_temp_str.3, %struct.mystr** %40, align 8, !dbg !8897
  br label %249

249:                                              ; preds = %246, %245
  %250 = load %struct.mystr_list*, %struct.mystr_list** %8, align 8, !dbg !8898
  %251 = load %struct.mystr*, %struct.mystr** %39, align 8, !dbg !8899
  call void @str_list_add(%struct.mystr_list* %250, %struct.mystr* %15, %struct.mystr* %251), !dbg !8900
  %252 = load %struct.mystr_list*, %struct.mystr_list** %9, align 8, !dbg !8901
  %253 = icmp ne %struct.mystr_list* %252, null, !dbg !8903
  br i1 %253, label %254, label %261, !dbg !8904

254:                                              ; preds = %249
  %255 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_ls_populate_dir_list.s_p_statbuf, align 8, !dbg !8905
  %256 = call i32 @vsf_sysutil_statbuf_is_dir(%struct.vsf_sysutil_statbuf* %255), !dbg !8906
  %257 = icmp ne i32 %256, 0, !dbg !8906
  br i1 %257, label %258, label %261, !dbg !8907

258:                                              ; preds = %254
  %259 = load %struct.mystr_list*, %struct.mystr_list** %9, align 8, !dbg !8908
  %260 = load %struct.mystr*, %struct.mystr** %40, align 8, !dbg !8910
  call void @str_list_add(%struct.mystr_list* %259, %struct.mystr* @vsf_ls_populate_dir_list.s_next_filename_str, %struct.mystr* %260), !dbg !8911
  br label %261, !dbg !8912

261:                                              ; preds = %258, %254, %249
  br label %140, !dbg !8742, !llvm.loop !8770

262:                                              ; preds = %144
  %263 = load %struct.mystr_list*, %struct.mystr_list** %8, align 8, !dbg !8913
  %264 = load i32, i32* %19, align 4, !dbg !8914
  call void @str_list_sort(%struct.mystr_list* %263, i32 %264), !dbg !8915
  %265 = load %struct.mystr_list*, %struct.mystr_list** %9, align 8, !dbg !8916
  %266 = icmp ne %struct.mystr_list* %265, null, !dbg !8918
  br i1 %266, label %267, label %270, !dbg !8919

267:                                              ; preds = %262
  %268 = load %struct.mystr_list*, %struct.mystr_list** %9, align 8, !dbg !8920
  %269 = load i32, i32* %19, align 4, !dbg !8922
  call void @str_list_sort(%struct.mystr_list* %268, i32 %269), !dbg !8923
  br label %270, !dbg !8924

270:                                              ; preds = %267, %262
  call void @str_free(%struct.mystr* %15), !dbg !8925
  call void @str_free(%struct.mystr* %16), !dbg !8926
  ret void, !dbg !8927
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_filename_passes_filter(%struct.mystr*, %struct.mystr*, i32*) #0 !dbg !743 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.mystr, align 8
  %8 = alloca %struct.mystr, align 8
  %9 = alloca %struct.mystr, align 8
  %10 = alloca %struct.mystr, align 8
  %11 = alloca %struct.mystr, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca %struct.str_locate_result, align 4
  %16 = alloca { i64, i8 }, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.str_locate_result, align 4
  %20 = alloca { i64, i8 }, align 8
  %21 = alloca %struct.str_locate_result, align 4
  %22 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !8928, metadata !DIExpression()), !dbg !8929
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !8930, metadata !DIExpression()), !dbg !8931
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !8932, metadata !DIExpression()), !dbg !8933
  call void @llvm.dbg.declare(metadata %struct.mystr* %7, metadata !8934, metadata !DIExpression()), !dbg !8935
  %23 = bitcast %struct.mystr* %7 to i8*, !dbg !8935
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false), !dbg !8935
  call void @llvm.dbg.declare(metadata %struct.mystr* %8, metadata !8936, metadata !DIExpression()), !dbg !8937
  %24 = bitcast %struct.mystr* %8 to i8*, !dbg !8937
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false), !dbg !8937
  call void @llvm.dbg.declare(metadata %struct.mystr* %9, metadata !8938, metadata !DIExpression()), !dbg !8939
  %25 = bitcast %struct.mystr* %9 to i8*, !dbg !8939
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false), !dbg !8939
  call void @llvm.dbg.declare(metadata %struct.mystr* %10, metadata !8940, metadata !DIExpression()), !dbg !8941
  %26 = bitcast %struct.mystr* %10 to i8*, !dbg !8941
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false), !dbg !8941
  call void @llvm.dbg.declare(metadata %struct.mystr* %11, metadata !8942, metadata !DIExpression()), !dbg !8943
  %27 = bitcast %struct.mystr* %11 to i8*, !dbg !8943
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false), !dbg !8943
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8944, metadata !DIExpression()), !dbg !8945
  store i32 0, i32* %12, align 4, !dbg !8945
  call void @llvm.dbg.declare(metadata i8* %13, metadata !8946, metadata !DIExpression()), !dbg !8947
  store i8 0, i8* %13, align 1, !dbg !8947
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8948, metadata !DIExpression()), !dbg !8949
  store i32 1, i32* %14, align 4, !dbg !8949
  %28 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !8950
  call void @str_copy(%struct.mystr* %7, %struct.mystr* %28), !dbg !8951
  %29 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !8952
  call void @str_copy(%struct.mystr* %8, %struct.mystr* %29), !dbg !8953
  br label %30, !dbg !8954

30:                                               ; preds = %133, %3
  %31 = call i32 @str_isempty(%struct.mystr* %7), !dbg !8955
  %32 = icmp ne i32 %31, 0, !dbg !8955
  br i1 %32, label %37, label %33, !dbg !8956

33:                                               ; preds = %30
  %34 = load i32*, i32** %6, align 8, !dbg !8957
  %35 = load i32, i32* %34, align 4, !dbg !8958
  %36 = icmp ult i32 %35, 1000, !dbg !8959
  br label %37

37:                                               ; preds = %33, %30
  %38 = phi i1 [ false, %30 ], [ %36, %33 ]
  br i1 %38, label %39, label %134, !dbg !8954

39:                                               ; preds = %37
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %15, metadata !8960, metadata !DIExpression()), !dbg !8962
  %40 = call { i64, i8 } @str_locate_chars(%struct.mystr* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.393, i32 0, i32 0)), !dbg !8963
  store { i64, i8 } %40, { i64, i8 }* %16, align 8, !dbg !8963
  %41 = bitcast { i64, i8 }* %16 to i8*, !dbg !8963
  %42 = bitcast %struct.str_locate_result* %15 to i8*, !dbg !8963
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %41, i64 12, i1 false), !dbg !8963
  %43 = load i32*, i32** %6, align 8, !dbg !8964
  %44 = load i32, i32* %43, align 4, !dbg !8965
  %45 = add i32 %44, 1, !dbg !8965
  store i32 %45, i32* %43, align 4, !dbg !8965
  %46 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %15, i32 0, i32 0, !dbg !8966
  %47 = load i32, i32* %46, align 4, !dbg !8966
  %48 = icmp ne i32 %47, 0, !dbg !8968
  br i1 %48, label %49, label %57, !dbg !8969

49:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8970, metadata !DIExpression()), !dbg !8972
  %50 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %15, i32 0, i32 1, !dbg !8973
  %51 = load i32, i32* %50, align 4, !dbg !8973
  store i32 %51, i32* %17, align 4, !dbg !8972
  %52 = load i32, i32* %17, align 4, !dbg !8974
  call void @str_left(%struct.mystr* %7, %struct.mystr* @vsf_filename_passes_filter.s_match_needed_str, i32 %52), !dbg !8975
  %53 = load i32, i32* %17, align 4, !dbg !8976
  %54 = add i32 %53, 1, !dbg !8977
  call void @str_mid_to_end(%struct.mystr* %7, %struct.mystr* %9, i32 %54), !dbg !8978
  call void @str_copy(%struct.mystr* %7, %struct.mystr* %9), !dbg !8979
  %55 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %15, i32 0, i32 2, !dbg !8980
  %56 = load i8, i8* %55, align 4, !dbg !8980
  store i8 %56, i8* %13, align 1, !dbg !8981
  br label %58, !dbg !8982

57:                                               ; preds = %39
  call void @str_copy(%struct.mystr* @vsf_filename_passes_filter.s_match_needed_str, %struct.mystr* %7), !dbg !8983
  call void @str_empty(%struct.mystr* %7), !dbg !8985
  store i8 0, i8* %13, align 1, !dbg !8986
  br label %58

58:                                               ; preds = %57, %49
  %59 = call i32 @str_isempty(%struct.mystr* @vsf_filename_passes_filter.s_match_needed_str), !dbg !8987
  %60 = icmp ne i32 %59, 0, !dbg !8987
  br i1 %60, label %84, label %61, !dbg !8989

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8990, metadata !DIExpression()), !dbg !8992
  %62 = call { i64, i8 } @str_locate_str(%struct.mystr* %8, %struct.mystr* @vsf_filename_passes_filter.s_match_needed_str), !dbg !8993
  store { i64, i8 } %62, { i64, i8 }* %20, align 8, !dbg !8993
  %63 = bitcast { i64, i8 }* %20 to i8*, !dbg !8993
  %64 = bitcast %struct.str_locate_result* %19 to i8*, !dbg !8993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %63, i64 12, i1 false), !dbg !8993
  %65 = bitcast %struct.str_locate_result* %15 to i8*, !dbg !8993
  %66 = bitcast %struct.str_locate_result* %19 to i8*, !dbg !8993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 12, i1 false), !dbg !8993
  %67 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %15, i32 0, i32 0, !dbg !8994
  %68 = load i32, i32* %67, align 4, !dbg !8994
  %69 = icmp ne i32 %68, 0, !dbg !8996
  br i1 %69, label %71, label %70, !dbg !8997

70:                                               ; preds = %61
  br label %148, !dbg !8998

71:                                               ; preds = %61
  %72 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %15, i32 0, i32 1, !dbg !9000
  %73 = load i32, i32* %72, align 4, !dbg !9000
  store i32 %73, i32* %18, align 4, !dbg !9001
  %74 = load i32, i32* %14, align 4, !dbg !9002
  %75 = icmp ne i32 %74, 0, !dbg !9002
  br i1 %75, label %76, label %80, !dbg !9004

76:                                               ; preds = %71
  %77 = load i32, i32* %18, align 4, !dbg !9005
  %78 = icmp ugt i32 %77, 0, !dbg !9006
  br i1 %78, label %79, label %80, !dbg !9007

79:                                               ; preds = %76
  br label %148, !dbg !9008

80:                                               ; preds = %76, %71
  %81 = load i32, i32* %18, align 4, !dbg !9010
  %82 = call i32 @str_getlen(%struct.mystr* @vsf_filename_passes_filter.s_match_needed_str), !dbg !9011
  %83 = add i32 %81, %82, !dbg !9012
  call void @str_mid_to_end(%struct.mystr* %8, %struct.mystr* %9, i32 %83), !dbg !9013
  call void @str_copy(%struct.mystr* %8, %struct.mystr* %9), !dbg !9014
  br label %84, !dbg !9015

84:                                               ; preds = %80, %58
  %85 = load i8, i8* %13, align 1, !dbg !9016
  %86 = sext i8 %85 to i32, !dbg !9016
  %87 = icmp eq i32 %86, 63, !dbg !9018
  br i1 %87, label %88, label %95, !dbg !9019

88:                                               ; preds = %84
  %89 = call i32 @str_isempty(%struct.mystr* %8), !dbg !9020
  %90 = icmp ne i32 %89, 0, !dbg !9020
  br i1 %90, label %91, label %92, !dbg !9023

91:                                               ; preds = %88
  br label %148, !dbg !9024

92:                                               ; preds = %88
  %93 = call i32 @str_getlen(%struct.mystr* %8), !dbg !9026
  %94 = sub i32 %93, 1, !dbg !9027
  call void @str_right(%struct.mystr* %8, %struct.mystr* %9, i32 %94), !dbg !9028
  call void @str_copy(%struct.mystr* %8, %struct.mystr* %9), !dbg !9029
  store i32 1, i32* %14, align 4, !dbg !9030
  br label %133, !dbg !9031

95:                                               ; preds = %84
  %96 = load i8, i8* %13, align 1, !dbg !9032
  %97 = sext i8 %96 to i32, !dbg !9032
  %98 = icmp eq i32 %97, 123, !dbg !9034
  br i1 %98, label %99, label %131, !dbg !9035

99:                                               ; preds = %95
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %21, metadata !9036, metadata !DIExpression()), !dbg !9038
  %100 = call { i64, i8 } @str_locate_char(%struct.mystr* %7, i8 signext 125), !dbg !9039
  store { i64, i8 } %100, { i64, i8 }* %22, align 8, !dbg !9039
  %101 = bitcast { i64, i8 }* %22 to i8*, !dbg !9039
  %102 = bitcast %struct.str_locate_result* %21 to i8*, !dbg !9039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %101, i64 12, i1 false), !dbg !9039
  store i32 1, i32* %14, align 4, !dbg !9040
  %103 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %21, i32 0, i32 0, !dbg !9041
  %104 = load i32, i32* %103, align 4, !dbg !9041
  %105 = icmp ne i32 %104, 0, !dbg !9043
  br i1 %105, label %106, label %118, !dbg !9044

106:                                              ; preds = %99
  call void @str_split_char(%struct.mystr* %7, %struct.mystr* %9, i8 signext 125), !dbg !9045
  call void @str_copy(%struct.mystr* %10, %struct.mystr* %7), !dbg !9047
  call void @str_copy(%struct.mystr* %7, %struct.mystr* %9), !dbg !9048
  call void @str_split_char(%struct.mystr* %10, %struct.mystr* %9, i8 signext 44), !dbg !9049
  br label %107, !dbg !9050

107:                                              ; preds = %116, %106
  %108 = call i32 @str_isempty(%struct.mystr* %10), !dbg !9051
  %109 = icmp ne i32 %108, 0, !dbg !9052
  %110 = xor i1 %109, true, !dbg !9052
  br i1 %110, label %111, label %117, !dbg !9050

111:                                              ; preds = %107
  call void @str_copy(%struct.mystr* %11, %struct.mystr* %10), !dbg !9053
  call void @str_append_str(%struct.mystr* %11, %struct.mystr* %7), !dbg !9055
  %112 = load i32*, i32** %6, align 8, !dbg !9056
  %113 = call i32 @vsf_filename_passes_filter(%struct.mystr* %8, %struct.mystr* %11, i32* %112), !dbg !9058
  %114 = icmp ne i32 %113, 0, !dbg !9058
  br i1 %114, label %115, label %116, !dbg !9059

115:                                              ; preds = %111
  store i32 1, i32* %12, align 4, !dbg !9060
  br label %148, !dbg !9062

116:                                              ; preds = %111
  call void @str_copy(%struct.mystr* %10, %struct.mystr* %9), !dbg !9063
  call void @str_split_char(%struct.mystr* %10, %struct.mystr* %9, i8 signext 44), !dbg !9064
  br label %107, !dbg !9050, !llvm.loop !9065

117:                                              ; preds = %107
  br label %148, !dbg !9067

118:                                              ; preds = %99
  %119 = call i32 @str_isempty(%struct.mystr* %8), !dbg !9068
  %120 = icmp ne i32 %119, 0, !dbg !9068
  br i1 %120, label %125, label %121, !dbg !9070

121:                                              ; preds = %118
  %122 = call signext i8 @str_get_char_at(%struct.mystr* %8, i32 0), !dbg !9071
  %123 = sext i8 %122 to i32, !dbg !9071
  %124 = icmp ne i32 %123, 123, !dbg !9072
  br i1 %124, label %125, label %126, !dbg !9073

125:                                              ; preds = %121, %118
  br label %148, !dbg !9074

126:                                              ; preds = %121
  %127 = call i32 @str_getlen(%struct.mystr* %8), !dbg !9076
  %128 = sub i32 %127, 1, !dbg !9078
  call void @str_right(%struct.mystr* %8, %struct.mystr* %9, i32 %128), !dbg !9079
  call void @str_copy(%struct.mystr* %8, %struct.mystr* %9), !dbg !9080
  br label %129

129:                                              ; preds = %126
  br label %130

130:                                              ; preds = %129
  br label %132, !dbg !9081

131:                                              ; preds = %95
  store i32 0, i32* %14, align 4, !dbg !9082
  br label %132

132:                                              ; preds = %131, %130
  br label %133

133:                                              ; preds = %132, %92
  br label %30, !dbg !8954, !llvm.loop !9084

134:                                              ; preds = %37
  %135 = call i32 @str_getlen(%struct.mystr* %8), !dbg !9086
  %136 = icmp ugt i32 %135, 0, !dbg !9088
  br i1 %136, label %137, label %142, !dbg !9089

137:                                              ; preds = %134
  %138 = load i8, i8* %13, align 1, !dbg !9090
  %139 = sext i8 %138 to i32, !dbg !9090
  %140 = icmp ne i32 %139, 42, !dbg !9091
  br i1 %140, label %141, label %142, !dbg !9092

141:                                              ; preds = %137
  br label %148, !dbg !9093

142:                                              ; preds = %137, %134
  store i32 1, i32* %12, align 4, !dbg !9095
  %143 = load i32*, i32** %6, align 8, !dbg !9096
  %144 = load i32, i32* %143, align 4, !dbg !9098
  %145 = icmp eq i32 %144, 1000, !dbg !9099
  br i1 %145, label %146, label %147, !dbg !9100

146:                                              ; preds = %142
  store i32 0, i32* %12, align 4, !dbg !9101
  br label %147, !dbg !9103

147:                                              ; preds = %146, %142
  br label %148, !dbg !9104

148:                                              ; preds = %147, %141, %125, %117, %115, %91, %79, %70
  call void @str_free(%struct.mystr* %7), !dbg !9105
  call void @str_free(%struct.mystr* %8), !dbg !9106
  call void @str_free(%struct.mystr* %9), !dbg !9107
  call void @str_free(%struct.mystr* %10), !dbg !9108
  call void @str_free(%struct.mystr* %11), !dbg !9109
  %149 = load i32, i32* %12, align 4, !dbg !9110
  ret i32 %149, !dbg !9111
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @build_dir_line(%struct.mystr*, %struct.mystr*, %struct.vsf_sysutil_statbuf*, i64) #0 !dbg !749 {
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.vsf_sysutil_user*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.vsf_sysutil_group*, align 8
  store %struct.mystr* %0, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !9112, metadata !DIExpression()), !dbg !9113
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !9114, metadata !DIExpression()), !dbg !9115
  store %struct.vsf_sysutil_statbuf* %2, %struct.vsf_sysutil_statbuf** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %7, metadata !9116, metadata !DIExpression()), !dbg !9117
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !9118, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.declare(metadata i64* %9, metadata !9120, metadata !DIExpression()), !dbg !9121
  %14 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !9122
  %15 = call i64 @vsf_sysutil_statbuf_get_size(%struct.vsf_sysutil_statbuf* %14), !dbg !9123
  store i64 %15, i64* %9, align 8, !dbg !9121
  %16 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9124
  %17 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !9125
  %18 = call i8* @vsf_sysutil_statbuf_get_perms(%struct.vsf_sysutil_statbuf* %17), !dbg !9126
  call void @str_alloc_text(%struct.mystr* %16, i8* %18), !dbg !9127
  %19 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9128
  call void @str_append_char(%struct.mystr* %19, i8 signext 32), !dbg !9129
  %20 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !9130
  %21 = call i32 @vsf_sysutil_statbuf_get_links(%struct.vsf_sysutil_statbuf* %20), !dbg !9131
  %22 = zext i32 %21 to i64, !dbg !9131
  call void @str_alloc_ulong(%struct.mystr* @build_dir_line.s_tmp_str, i64 %22), !dbg !9132
  call void @str_lpad(%struct.mystr* @build_dir_line.s_tmp_str, i32 4), !dbg !9133
  %23 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9134
  call void @str_append_str(%struct.mystr* %23, %struct.mystr* @build_dir_line.s_tmp_str), !dbg !9135
  %24 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9136
  call void @str_append_char(%struct.mystr* %24, i8 signext 32), !dbg !9137
  %25 = load i32, i32* @tunable_hide_ids, align 4, !dbg !9138
  %26 = icmp ne i32 %25, 0, !dbg !9138
  br i1 %26, label %27, label %28, !dbg !9140

27:                                               ; preds = %4
  call void @str_alloc_text(%struct.mystr* @build_dir_line.s_tmp_str, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.392, i32 0, i32 0)), !dbg !9141
  br label %46, !dbg !9143

28:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9144, metadata !DIExpression()), !dbg !9146
  %29 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !9147
  %30 = call i32 @vsf_sysutil_statbuf_get_uid(%struct.vsf_sysutil_statbuf* %29), !dbg !9148
  store i32 %30, i32* %10, align 4, !dbg !9146
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %11, metadata !9149, metadata !DIExpression()), !dbg !9150
  store %struct.vsf_sysutil_user* null, %struct.vsf_sysutil_user** %11, align 8, !dbg !9150
  %31 = load i32, i32* @tunable_text_userdb_names, align 4, !dbg !9151
  %32 = icmp ne i32 %31, 0, !dbg !9151
  br i1 %32, label %33, label %36, !dbg !9153

33:                                               ; preds = %28
  %34 = load i32, i32* %10, align 4, !dbg !9154
  %35 = call %struct.vsf_sysutil_user* @vsf_sysutil_getpwuid(i32 %34), !dbg !9156
  store %struct.vsf_sysutil_user* %35, %struct.vsf_sysutil_user** %11, align 8, !dbg !9157
  br label %36, !dbg !9158

36:                                               ; preds = %33, %28
  %37 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !9159
  %38 = icmp eq %struct.vsf_sysutil_user* %37, null, !dbg !9161
  br i1 %38, label %39, label %42, !dbg !9162

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 4, !dbg !9163
  %41 = sext i32 %40 to i64, !dbg !9165
  call void @str_alloc_ulong(%struct.mystr* @build_dir_line.s_tmp_str, i64 %41), !dbg !9166
  br label %45, !dbg !9167

42:                                               ; preds = %36
  %43 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !9168
  %44 = call i8* @vsf_sysutil_user_getname(%struct.vsf_sysutil_user* %43), !dbg !9170
  call void @str_alloc_text(%struct.mystr* @build_dir_line.s_tmp_str, i8* %44), !dbg !9171
  br label %45

45:                                               ; preds = %42, %39
  br label %46

46:                                               ; preds = %45, %27
  call void @str_rpad(%struct.mystr* @build_dir_line.s_tmp_str, i32 8), !dbg !9172
  %47 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9173
  call void @str_append_str(%struct.mystr* %47, %struct.mystr* @build_dir_line.s_tmp_str), !dbg !9174
  %48 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9175
  call void @str_append_char(%struct.mystr* %48, i8 signext 32), !dbg !9176
  %49 = load i32, i32* @tunable_hide_ids, align 4, !dbg !9177
  %50 = icmp ne i32 %49, 0, !dbg !9177
  br i1 %50, label %51, label %52, !dbg !9179

51:                                               ; preds = %46
  call void @str_alloc_text(%struct.mystr* @build_dir_line.s_tmp_str, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.392, i32 0, i32 0)), !dbg !9180
  br label %70, !dbg !9182

52:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata i32* %12, metadata !9183, metadata !DIExpression()), !dbg !9185
  %53 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !9186
  %54 = call i32 @vsf_sysutil_statbuf_get_gid(%struct.vsf_sysutil_statbuf* %53), !dbg !9187
  store i32 %54, i32* %12, align 4, !dbg !9185
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_group** %13, metadata !9188, metadata !DIExpression()), !dbg !9189
  store %struct.vsf_sysutil_group* null, %struct.vsf_sysutil_group** %13, align 8, !dbg !9189
  %55 = load i32, i32* @tunable_text_userdb_names, align 4, !dbg !9190
  %56 = icmp ne i32 %55, 0, !dbg !9190
  br i1 %56, label %57, label %60, !dbg !9192

57:                                               ; preds = %52
  %58 = load i32, i32* %12, align 4, !dbg !9193
  %59 = call %struct.vsf_sysutil_group* @vsf_sysutil_getgrgid(i32 %58), !dbg !9195
  store %struct.vsf_sysutil_group* %59, %struct.vsf_sysutil_group** %13, align 8, !dbg !9196
  br label %60, !dbg !9197

60:                                               ; preds = %57, %52
  %61 = load %struct.vsf_sysutil_group*, %struct.vsf_sysutil_group** %13, align 8, !dbg !9198
  %62 = icmp eq %struct.vsf_sysutil_group* %61, null, !dbg !9200
  br i1 %62, label %63, label %66, !dbg !9201

63:                                               ; preds = %60
  %64 = load i32, i32* %12, align 4, !dbg !9202
  %65 = sext i32 %64 to i64, !dbg !9204
  call void @str_alloc_ulong(%struct.mystr* @build_dir_line.s_tmp_str, i64 %65), !dbg !9205
  br label %69, !dbg !9206

66:                                               ; preds = %60
  %67 = load %struct.vsf_sysutil_group*, %struct.vsf_sysutil_group** %13, align 8, !dbg !9207
  %68 = call i8* @vsf_sysutil_group_getname(%struct.vsf_sysutil_group* %67), !dbg !9209
  call void @str_alloc_text(%struct.mystr* @build_dir_line.s_tmp_str, i8* %68), !dbg !9210
  br label %69

69:                                               ; preds = %66, %63
  br label %70

70:                                               ; preds = %69, %51
  call void @str_rpad(%struct.mystr* @build_dir_line.s_tmp_str, i32 8), !dbg !9211
  %71 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9212
  call void @str_append_str(%struct.mystr* %71, %struct.mystr* @build_dir_line.s_tmp_str), !dbg !9213
  %72 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9214
  call void @str_append_char(%struct.mystr* %72, i8 signext 32), !dbg !9215
  %73 = load i64, i64* %9, align 8, !dbg !9216
  call void @str_alloc_filesize_t(%struct.mystr* @build_dir_line.s_tmp_str, i64 %73), !dbg !9217
  call void @str_lpad(%struct.mystr* @build_dir_line.s_tmp_str, i32 8), !dbg !9218
  %74 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9219
  call void @str_append_str(%struct.mystr* %74, %struct.mystr* @build_dir_line.s_tmp_str), !dbg !9220
  %75 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9221
  call void @str_append_char(%struct.mystr* %75, i8 signext 32), !dbg !9222
  %76 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9223
  %77 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !9224
  %78 = load i32, i32* @tunable_use_localtime, align 4, !dbg !9225
  %79 = load i64, i64* %8, align 8, !dbg !9226
  %80 = call i8* @vsf_sysutil_statbuf_get_date(%struct.vsf_sysutil_statbuf* %77, i32 %78, i64 %79), !dbg !9227
  call void @str_append_text(%struct.mystr* %76, i8* %80), !dbg !9228
  %81 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9229
  call void @str_append_char(%struct.mystr* %81, i8 signext 32), !dbg !9230
  %82 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9231
  %83 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !9232
  call void @str_append_str(%struct.mystr* %82, %struct.mystr* %83), !dbg !9233
  %84 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9234
  call void @str_append_text(%struct.mystr* %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.391, i32 0, i32 0)), !dbg !9235
  ret void, !dbg !9236
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_priv_parent_postlogin(%struct.vsf_session*) #0 !dbg !9237 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9305, metadata !DIExpression()), !dbg !9306
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9307
  call void @minimize_privilege(%struct.vsf_session* %3), !dbg !9308
  br label %4, !dbg !9309

4:                                                ; preds = %1, %4
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9310
  call void @process_post_login_req(%struct.vsf_session* %5), !dbg !9312
  br label %4, !dbg !9309, !llvm.loop !9313

6:                                                ; No predecessors!
  ret void, !dbg !9315
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @minimize_privilege(%struct.vsf_session*) #0 !dbg !9316 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr, align 8
  %5 = alloca %struct.mystr, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9317, metadata !DIExpression()), !dbg !9318
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9319
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 12, !dbg !9321
  %8 = load i32, i32* %7, align 8, !dbg !9321
  %9 = icmp ne i32 %8, 0, !dbg !9319
  br i1 %9, label %14, label %10, !dbg !9322

10:                                               ; preds = %1
  %11 = load i32, i32* @tunable_session_support, align 4, !dbg !9323
  %12 = icmp ne i32 %11, 0, !dbg !9323
  br i1 %12, label %13, label %14, !dbg !9324

13:                                               ; preds = %10
  br label %40, !dbg !9325

14:                                               ; preds = %10, %1
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9327, metadata !DIExpression()), !dbg !9329
  store i32 0, i32* %3, align 4, !dbg !9329
  call void @llvm.dbg.declare(metadata %struct.mystr* %4, metadata !9330, metadata !DIExpression()), !dbg !9331
  %15 = bitcast %struct.mystr* %4 to i8*, !dbg !9331
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false), !dbg !9331
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !9332, metadata !DIExpression()), !dbg !9333
  %16 = bitcast %struct.mystr* %5 to i8*, !dbg !9333
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false), !dbg !9333
  %17 = load i8*, i8** @tunable_nopriv_user, align 8, !dbg !9334
  %18 = icmp ne i8* %17, null, !dbg !9334
  br i1 %18, label %19, label %21, !dbg !9336

19:                                               ; preds = %14
  %20 = load i8*, i8** @tunable_nopriv_user, align 8, !dbg !9337
  call void @str_alloc_text(%struct.mystr* %4, i8* %20), !dbg !9339
  br label %21, !dbg !9340

21:                                               ; preds = %19, %14
  %22 = load i8*, i8** @tunable_secure_chroot_dir, align 8, !dbg !9341
  %23 = icmp ne i8* %22, null, !dbg !9341
  br i1 %23, label %24, label %26, !dbg !9343

24:                                               ; preds = %21
  %25 = load i8*, i8** @tunable_secure_chroot_dir, align 8, !dbg !9344
  call void @str_alloc_text(%struct.mystr* %5, i8* %25), !dbg !9346
  br label %26, !dbg !9347

26:                                               ; preds = %24, %21
  %27 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !9348
  %28 = icmp ne i32 %27, 0, !dbg !9348
  br i1 %28, label %29, label %32, !dbg !9350

29:                                               ; preds = %26
  %30 = load i32, i32* %3, align 4, !dbg !9351
  %31 = or i32 %30, 1, !dbg !9351
  store i32 %31, i32* %3, align 4, !dbg !9351
  br label %32, !dbg !9353

32:                                               ; preds = %29, %26
  %33 = load i32, i32* @tunable_connect_from_port_20, align 4, !dbg !9354
  %34 = icmp ne i32 %33, 0, !dbg !9354
  br i1 %34, label %35, label %38, !dbg !9356

35:                                               ; preds = %32
  %36 = load i32, i32* %3, align 4, !dbg !9357
  %37 = or i32 %36, 2, !dbg !9357
  store i32 %37, i32* %3, align 4, !dbg !9357
  br label %38, !dbg !9359

38:                                               ; preds = %35, %32
  %39 = load i32, i32* %3, align 4, !dbg !9360
  call void @vsf_secutil_change_credentials(%struct.mystr* %4, %struct.mystr* %5, %struct.mystr* null, i32 %39, i32 1), !dbg !9361
  call void @str_free(%struct.mystr* %4), !dbg !9362
  call void @str_free(%struct.mystr* %5), !dbg !9363
  call void (...) bitcast (void ()* @seccomp_sandbox_init to void (...)*)(), !dbg !9364
  call void (...) bitcast (void ()* @seccomp_sandbox_setup_postlogin_broker to void (...)*)(), !dbg !9365
  call void (...) bitcast (void ()* @seccomp_sandbox_lockdown to void (...)*)(), !dbg !9366
  br label %40, !dbg !9367

40:                                               ; preds = %38, %13
  ret void, !dbg !9367
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @process_post_login_req(%struct.vsf_session*) #0 !dbg !9368 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9369, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.declare(metadata i8* %3, metadata !9371, metadata !DIExpression()), !dbg !9372
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9373
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 42, !dbg !9374
  %6 = load i32, i32* %5, align 8, !dbg !9374
  %7 = call signext i8 @priv_sock_get_cmd(i32 %6), !dbg !9375
  store i8 %7, i8* %3, align 1, !dbg !9376
  %8 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !9377
  %9 = icmp ne i32 %8, 0, !dbg !9377
  br i1 %9, label %10, label %16, !dbg !9379

10:                                               ; preds = %1
  %11 = load i8, i8* %3, align 1, !dbg !9380
  %12 = sext i8 %11 to i32, !dbg !9380
  %13 = icmp eq i32 %12, 2, !dbg !9381
  br i1 %13, label %14, label %16, !dbg !9382

14:                                               ; preds = %10
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9383
  call void @cmd_process_chown(%struct.vsf_session* %15), !dbg !9385
  br label %52, !dbg !9386

16:                                               ; preds = %10, %1
  %17 = load i8, i8* %3, align 1, !dbg !9387
  %18 = sext i8 %17 to i32, !dbg !9387
  %19 = icmp eq i32 %18, 3, !dbg !9389
  br i1 %19, label %20, label %22, !dbg !9390

20:                                               ; preds = %16
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9391
  call void @cmd_process_get_data_sock(%struct.vsf_session* %21), !dbg !9393
  br label %51, !dbg !9394

22:                                               ; preds = %16
  %23 = load i8, i8* %3, align 1, !dbg !9395
  %24 = sext i8 %23 to i32, !dbg !9395
  %25 = icmp eq i32 %24, 10, !dbg !9397
  br i1 %25, label %26, label %28, !dbg !9398

26:                                               ; preds = %22
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9399
  call void @cmd_process_pasv_cleanup(%struct.vsf_session* %27), !dbg !9401
  br label %50, !dbg !9402

28:                                               ; preds = %22
  %29 = load i8, i8* %3, align 1, !dbg !9403
  %30 = sext i8 %29 to i32, !dbg !9403
  %31 = icmp eq i32 %30, 11, !dbg !9405
  br i1 %31, label %32, label %34, !dbg !9406

32:                                               ; preds = %28
  %33 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9407
  call void @cmd_process_pasv_active(%struct.vsf_session* %33), !dbg !9409
  br label %49, !dbg !9410

34:                                               ; preds = %28
  %35 = load i8, i8* %3, align 1, !dbg !9411
  %36 = sext i8 %35 to i32, !dbg !9411
  %37 = icmp eq i32 %36, 12, !dbg !9413
  br i1 %37, label %38, label %40, !dbg !9414

38:                                               ; preds = %34
  %39 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9415
  call void @cmd_process_pasv_listen(%struct.vsf_session* %39), !dbg !9417
  br label %48, !dbg !9418

40:                                               ; preds = %34
  %41 = load i8, i8* %3, align 1, !dbg !9419
  %42 = sext i8 %41 to i32, !dbg !9419
  %43 = icmp eq i32 %42, 13, !dbg !9421
  br i1 %43, label %44, label %46, !dbg !9422

44:                                               ; preds = %40
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9423
  call void @cmd_process_pasv_accept(%struct.vsf_session* %45), !dbg !9425
  br label %47, !dbg !9426

46:                                               ; preds = %40
  call void @die(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.394, i32 0, i32 0)), !dbg !9427
  br label %47

47:                                               ; preds = %46, %44
  br label %48

48:                                               ; preds = %47, %38
  br label %49

49:                                               ; preds = %48, %32
  br label %50

50:                                               ; preds = %49, %26
  br label %51

51:                                               ; preds = %50, %20
  br label %52

52:                                               ; preds = %51, %14
  ret void, !dbg !9429
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cmd_process_chown(%struct.vsf_session*) #0 !dbg !9430 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9433, metadata !DIExpression()), !dbg !9434
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9435
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 42, !dbg !9436
  %6 = load i32, i32* %5, align 8, !dbg !9436
  %7 = call i32 @priv_sock_recv_fd(i32 %6), !dbg !9437
  store i32 %7, i32* %3, align 4, !dbg !9434
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9438
  %9 = load i32, i32* %3, align 4, !dbg !9439
  call void @vsf_privop_do_file_chown(%struct.vsf_session* %8, i32 %9), !dbg !9440
  %10 = load i32, i32* %3, align 4, !dbg !9441
  call void @vsf_sysutil_close(i32 %10), !dbg !9442
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9443
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 42, !dbg !9444
  %13 = load i32, i32* %12, align 8, !dbg !9444
  call void @priv_sock_send_result(i32 %13, i8 signext 1), !dbg !9445
  ret void, !dbg !9446
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cmd_process_get_data_sock(%struct.vsf_session*) #0 !dbg !9447 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9448, metadata !DIExpression()), !dbg !9449
  call void @llvm.dbg.declare(metadata i16* %3, metadata !9450, metadata !DIExpression()), !dbg !9451
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9452
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 42, !dbg !9453
  %7 = load i32, i32* %6, align 8, !dbg !9453
  %8 = call i32 @priv_sock_get_int(i32 %7), !dbg !9454
  %9 = trunc i32 %8 to i16, !dbg !9455
  store i16 %9, i16* %3, align 2, !dbg !9451
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9456, metadata !DIExpression()), !dbg !9457
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9458
  %11 = load i16, i16* %3, align 2, !dbg !9459
  %12 = call i32 @vsf_privop_get_ftp_port_sock(%struct.vsf_session* %10, i16 zeroext %11, i32 0), !dbg !9460
  store i32 %12, i32* %4, align 4, !dbg !9457
  %13 = load i32, i32* %4, align 4, !dbg !9461
  %14 = icmp eq i32 %13, -1, !dbg !9463
  br i1 %14, label %15, label %19, !dbg !9464

15:                                               ; preds = %1
  %16 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9465
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 42, !dbg !9467
  %18 = load i32, i32* %17, align 8, !dbg !9467
  call void @priv_sock_send_result(i32 %18, i8 signext 2), !dbg !9468
  br label %28, !dbg !9469

19:                                               ; preds = %1
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9470
  %21 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %20, i32 0, i32 42, !dbg !9471
  %22 = load i32, i32* %21, align 8, !dbg !9471
  call void @priv_sock_send_result(i32 %22, i8 signext 1), !dbg !9472
  %23 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9473
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 42, !dbg !9474
  %25 = load i32, i32* %24, align 8, !dbg !9474
  %26 = load i32, i32* %4, align 4, !dbg !9475
  call void @priv_sock_send_fd(i32 %25, i32 %26), !dbg !9476
  %27 = load i32, i32* %4, align 4, !dbg !9477
  call void @vsf_sysutil_close(i32 %27), !dbg !9478
  br label %28, !dbg !9479

28:                                               ; preds = %19, %15
  ret void, !dbg !9479
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cmd_process_pasv_cleanup(%struct.vsf_session*) #0 !dbg !9480 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9481, metadata !DIExpression()), !dbg !9482
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9483
  call void @vsf_privop_pasv_cleanup(%struct.vsf_session* %3), !dbg !9484
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9485
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 42, !dbg !9486
  %6 = load i32, i32* %5, align 8, !dbg !9486
  call void @priv_sock_send_result(i32 %6, i8 signext 1), !dbg !9487
  ret void, !dbg !9488
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cmd_process_pasv_active(%struct.vsf_session*) #0 !dbg !9489 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9490, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9492, metadata !DIExpression()), !dbg !9493
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9494
  %5 = call i32 @vsf_privop_pasv_active(%struct.vsf_session* %4), !dbg !9495
  store i32 %5, i32* %3, align 4, !dbg !9493
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9496
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 42, !dbg !9497
  %8 = load i32, i32* %7, align 8, !dbg !9497
  %9 = load i32, i32* %3, align 4, !dbg !9498
  call void @priv_sock_send_int(i32 %8, i32 %9), !dbg !9499
  ret void, !dbg !9500
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cmd_process_pasv_listen(%struct.vsf_session*) #0 !dbg !9501 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i16, align 2
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9502, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.declare(metadata i16* %3, metadata !9504, metadata !DIExpression()), !dbg !9505
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9506
  %5 = call zeroext i16 @vsf_privop_pasv_listen(%struct.vsf_session* %4), !dbg !9507
  store i16 %5, i16* %3, align 2, !dbg !9505
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9508
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 42, !dbg !9509
  %8 = load i32, i32* %7, align 8, !dbg !9509
  %9 = load i16, i16* %3, align 2, !dbg !9510
  %10 = zext i16 %9 to i32, !dbg !9510
  call void @priv_sock_send_int(i32 %8, i32 %10), !dbg !9511
  ret void, !dbg !9512
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cmd_process_pasv_accept(%struct.vsf_session*) #0 !dbg !9513 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9514, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9516, metadata !DIExpression()), !dbg !9517
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9518
  %5 = call i32 @vsf_privop_accept_pasv(%struct.vsf_session* %4), !dbg !9519
  store i32 %5, i32* %3, align 4, !dbg !9517
  %6 = load i32, i32* %3, align 4, !dbg !9520
  %7 = icmp slt i32 %6, 0, !dbg !9522
  br i1 %7, label %8, label %16, !dbg !9523

8:                                                ; preds = %1
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9524
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 42, !dbg !9526
  %11 = load i32, i32* %10, align 8, !dbg !9526
  call void @priv_sock_send_result(i32 %11, i8 signext 2), !dbg !9527
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9528
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 42, !dbg !9529
  %14 = load i32, i32* %13, align 8, !dbg !9529
  %15 = load i32, i32* %3, align 4, !dbg !9530
  call void @priv_sock_send_int(i32 %14, i32 %15), !dbg !9531
  br label %25, !dbg !9532

16:                                               ; preds = %1
  %17 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9533
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 42, !dbg !9534
  %19 = load i32, i32* %18, align 8, !dbg !9534
  call void @priv_sock_send_result(i32 %19, i8 signext 1), !dbg !9535
  %20 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9536
  %21 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %20, i32 0, i32 42, !dbg !9537
  %22 = load i32, i32* %21, align 8, !dbg !9537
  %23 = load i32, i32* %3, align 4, !dbg !9538
  call void @priv_sock_send_fd(i32 %22, i32 %23), !dbg !9539
  %24 = load i32, i32* %3, align 4, !dbg !9540
  call void @vsf_sysutil_close(i32 %24), !dbg !9541
  br label %25, !dbg !9542

25:                                               ; preds = %16, %8
  ret void, !dbg !9542
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_log_init(%struct.vsf_session*) #0 !dbg !9543 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !9546, metadata !DIExpression()), !dbg !9547
  %5 = load i32, i32* @tunable_syslog_enable, align 4, !dbg !9548
  %6 = icmp ne i32 %5, 0, !dbg !9548
  br i1 %6, label %10, label %7, !dbg !9550

7:                                                ; preds = %1
  %8 = load i32, i32* @tunable_tcp_wrappers, align 4, !dbg !9551
  %9 = icmp ne i32 %8, 0, !dbg !9551
  br i1 %9, label %10, label %11, !dbg !9552

10:                                               ; preds = %7, %1
  call void @vsf_sysutil_openlog(i32 1), !dbg !9553
  br label %11, !dbg !9555

11:                                               ; preds = %10, %7
  %12 = load i32, i32* @tunable_xferlog_enable, align 4, !dbg !9556
  %13 = icmp ne i32 %12, 0, !dbg !9556
  br i1 %13, label %18, label %14, !dbg !9558

14:                                               ; preds = %11
  %15 = load i32, i32* @tunable_dual_log_enable, align 4, !dbg !9559
  %16 = icmp ne i32 %15, 0, !dbg !9559
  br i1 %16, label %18, label %17, !dbg !9560

17:                                               ; preds = %14
  br label %66, !dbg !9561

18:                                               ; preds = %14, %11
  %19 = load i32, i32* @tunable_dual_log_enable, align 4, !dbg !9563
  %20 = icmp ne i32 %19, 0, !dbg !9563
  br i1 %20, label %24, label %21, !dbg !9565

21:                                               ; preds = %18
  %22 = load i32, i32* @tunable_xferlog_std_format, align 4, !dbg !9566
  %23 = icmp ne i32 %22, 0, !dbg !9566
  br i1 %23, label %24, label %40, !dbg !9567

24:                                               ; preds = %21, %18
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9568, metadata !DIExpression()), !dbg !9570
  store i32 -1, i32* %3, align 4, !dbg !9570
  %25 = load i8*, i8** @tunable_xferlog_file, align 8, !dbg !9571
  %26 = icmp ne i8* %25, null, !dbg !9571
  br i1 %26, label %27, label %30, !dbg !9573

27:                                               ; preds = %24
  %28 = load i8*, i8** @tunable_xferlog_file, align 8, !dbg !9574
  %29 = call i32 @vsf_sysutil_create_or_open_file_append(i8* %28, i32 384), !dbg !9576
  store i32 %29, i32* %3, align 4, !dbg !9577
  br label %30, !dbg !9578

30:                                               ; preds = %27, %24
  %31 = load i32, i32* %3, align 4, !dbg !9579
  %32 = call i32 @vsf_sysutil_retval_is_error(i32 %31), !dbg !9581
  %33 = icmp ne i32 %32, 0, !dbg !9581
  br i1 %33, label %34, label %36, !dbg !9582

34:                                               ; preds = %30
  %35 = load i8*, i8** @tunable_xferlog_file, align 8, !dbg !9583
  call void @die2(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.397, i32 0, i32 0), i8* %35), !dbg !9585
  br label %36, !dbg !9586

36:                                               ; preds = %34, %30
  %37 = load i32, i32* %3, align 4, !dbg !9587
  %38 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9588
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 32, !dbg !9589
  store i32 %37, i32* %39, align 4, !dbg !9590
  br label %40, !dbg !9591

40:                                               ; preds = %36, %21
  %41 = load i32, i32* @tunable_dual_log_enable, align 4, !dbg !9592
  %42 = icmp ne i32 %41, 0, !dbg !9592
  br i1 %42, label %46, label %43, !dbg !9594

43:                                               ; preds = %40
  %44 = load i32, i32* @tunable_xferlog_std_format, align 4, !dbg !9595
  %45 = icmp ne i32 %44, 0, !dbg !9595
  br i1 %45, label %66, label %46, !dbg !9596

46:                                               ; preds = %43, %40
  %47 = load i32, i32* @tunable_syslog_enable, align 4, !dbg !9597
  %48 = icmp ne i32 %47, 0, !dbg !9597
  br i1 %48, label %65, label %49, !dbg !9600

49:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9601, metadata !DIExpression()), !dbg !9603
  store i32 -1, i32* %4, align 4, !dbg !9603
  %50 = load i8*, i8** @tunable_vsftpd_log_file, align 8, !dbg !9604
  %51 = icmp ne i8* %50, null, !dbg !9604
  br i1 %51, label %52, label %55, !dbg !9606

52:                                               ; preds = %49
  %53 = load i8*, i8** @tunable_vsftpd_log_file, align 8, !dbg !9607
  %54 = call i32 @vsf_sysutil_create_or_open_file_append(i8* %53, i32 384), !dbg !9609
  store i32 %54, i32* %4, align 4, !dbg !9610
  br label %55, !dbg !9611

55:                                               ; preds = %52, %49
  %56 = load i32, i32* %4, align 4, !dbg !9612
  %57 = call i32 @vsf_sysutil_retval_is_error(i32 %56), !dbg !9614
  %58 = icmp ne i32 %57, 0, !dbg !9614
  br i1 %58, label %59, label %61, !dbg !9615

59:                                               ; preds = %55
  %60 = load i8*, i8** @tunable_vsftpd_log_file, align 8, !dbg !9616
  call void @die2(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.398, i32 0, i32 0), i8* %60), !dbg !9618
  br label %61, !dbg !9619

61:                                               ; preds = %59, %55
  %62 = load i32, i32* %4, align 4, !dbg !9620
  %63 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !9621
  %64 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %63, i32 0, i32 33, !dbg !9622
  store i32 %62, i32* %64, align 8, !dbg !9623
  br label %65, !dbg !9624

65:                                               ; preds = %61, %46
  br label %66, !dbg !9625

66:                                               ; preds = %17, %65, %43
  ret void, !dbg !9626
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_log_start_entry(%struct.vsf_session*, i32) #0 !dbg !9627 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !9630, metadata !DIExpression()), !dbg !9631
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9632, metadata !DIExpression()), !dbg !9633
  %5 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9634
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 35, !dbg !9636
  %7 = load i64, i64* %6, align 8, !dbg !9636
  %8 = icmp ne i64 %7, 0, !dbg !9637
  br i1 %8, label %9, label %10, !dbg !9638

9:                                                ; preds = %2
  call void @bug(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2.401, i32 0, i32 0)), !dbg !9639
  br label %10, !dbg !9641

10:                                               ; preds = %9, %2
  %11 = load i32, i32* %4, align 4, !dbg !9642
  %12 = zext i32 %11 to i64, !dbg !9643
  %13 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9644
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 35, !dbg !9645
  store i64 %12, i64* %14, align 8, !dbg !9646
  %15 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9647
  %16 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %15, i32 0, i32 36, !dbg !9648
  store i64 0, i64* %16, align 8, !dbg !9649
  %17 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9650
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 37, !dbg !9651
  store i64 0, i64* %18, align 8, !dbg !9652
  %19 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9653
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 39, !dbg !9654
  store i64 0, i64* %20, align 8, !dbg !9655
  %21 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9656
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 38, !dbg !9657
  call void @str_empty(%struct.mystr* %22), !dbg !9658
  %23 = load i32, i32* %4, align 4, !dbg !9659
  %24 = call i32 @vsf_log_type_is_transfer(i32 %23), !dbg !9661
  %25 = icmp ne i32 %24, 0, !dbg !9661
  br i1 %25, label %26, label %33, !dbg !9662

26:                                               ; preds = %10
  %27 = call i64 @vsf_sysutil_get_time_sec(), !dbg !9663
  %28 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9665
  %29 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %28, i32 0, i32 36, !dbg !9666
  store i64 %27, i64* %29, align 8, !dbg !9667
  %30 = call i64 @vsf_sysutil_get_time_usec(), !dbg !9668
  %31 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !9669
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 37, !dbg !9670
  store i64 %30, i64* %32, align 8, !dbg !9671
  br label %33, !dbg !9672

33:                                               ; preds = %26, %10
  ret void, !dbg !9673
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @vsf_log_type_is_transfer(i32) #0 !dbg !9674 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9677, metadata !DIExpression()), !dbg !9678
  %3 = load i32, i32* %2, align 4, !dbg !9679
  %4 = icmp eq i32 %3, 2, !dbg !9680
  br i1 %4, label %8, label %5, !dbg !9681

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !9682
  %7 = icmp eq i32 %6, 3, !dbg !9683
  br label %8, !dbg !9681

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  %10 = zext i1 %9 to i32, !dbg !9681
  ret i32 %10, !dbg !9684
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_log_line(%struct.vsf_session*, i32, %struct.mystr*) #0 !dbg !9685 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mystr*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !9688, metadata !DIExpression()), !dbg !9689
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9690, metadata !DIExpression()), !dbg !9691
  store %struct.mystr* %2, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !9692, metadata !DIExpression()), !dbg !9693
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9694
  %8 = load i32, i32* %5, align 4, !dbg !9695
  %9 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !9696
  call void @vsf_log_common(%struct.vsf_session* %7, i32 1, i32 %8, %struct.mystr* %9), !dbg !9697
  ret void, !dbg !9698
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_log_common(%struct.vsf_session*, i32, i32, %struct.mystr*) #0 !dbg !757 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.mystr*, align 8
  %9 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !9699, metadata !DIExpression()), !dbg !9700
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9701, metadata !DIExpression()), !dbg !9702
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9703, metadata !DIExpression()), !dbg !9704
  store %struct.mystr* %3, %struct.mystr** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %8, metadata !9705, metadata !DIExpression()), !dbg !9706
  %10 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !9707
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 32, !dbg !9709
  %12 = load i32, i32* %11, align 4, !dbg !9709
  %13 = icmp ne i32 %12, -1, !dbg !9710
  br i1 %13, label %14, label %24, !dbg !9711

14:                                               ; preds = %4
  %15 = load i32, i32* %7, align 4, !dbg !9712
  %16 = call i32 @vsf_log_type_is_transfer(i32 %15), !dbg !9713
  %17 = icmp ne i32 %16, 0, !dbg !9713
  br i1 %17, label %18, label %24, !dbg !9714

18:                                               ; preds = %14
  %19 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !9715
  %20 = load i32, i32* %6, align 4, !dbg !9717
  call void @vsf_log_do_log_wuftpd_format(%struct.vsf_session* %19, %struct.mystr* @vsf_log_common.s_log_str, i32 %20), !dbg !9718
  %21 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !9719
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 32, !dbg !9720
  %23 = load i32, i32* %22, align 4, !dbg !9720
  call void @vsf_log_do_log_to_file(i32 %23, %struct.mystr* @vsf_log_common.s_log_str), !dbg !9721
  br label %24, !dbg !9722

24:                                               ; preds = %18, %14, %4
  %25 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !9723
  %26 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %25, i32 0, i32 33, !dbg !9725
  %27 = load i32, i32* %26, align 8, !dbg !9725
  %28 = icmp ne i32 %27, -1, !dbg !9726
  br i1 %28, label %29, label %37, !dbg !9727

29:                                               ; preds = %24
  %30 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !9728
  %31 = load i32, i32* %6, align 4, !dbg !9730
  %32 = load i32, i32* %7, align 4, !dbg !9731
  %33 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !9732
  call void @vsf_log_do_log_vsftpd_format(%struct.vsf_session* %30, %struct.mystr* @vsf_log_common.s_log_str, i32 %31, i32 %32, %struct.mystr* %33), !dbg !9733
  %34 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !9734
  %35 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %34, i32 0, i32 33, !dbg !9735
  %36 = load i32, i32* %35, align 8, !dbg !9735
  call void @vsf_log_do_log_to_file(i32 %36, %struct.mystr* @vsf_log_common.s_log_str), !dbg !9736
  br label %37, !dbg !9737

37:                                               ; preds = %29, %24
  %38 = load i32, i32* @tunable_syslog_enable, align 4, !dbg !9738
  %39 = icmp ne i32 %38, 0, !dbg !9738
  br i1 %39, label %40, label %53, !dbg !9740

40:                                               ; preds = %37
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9741, metadata !DIExpression()), !dbg !9743
  store i32 0, i32* %9, align 4, !dbg !9743
  %41 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !9744
  %42 = load i32, i32* %6, align 4, !dbg !9745
  %43 = load i32, i32* %7, align 4, !dbg !9746
  %44 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !9747
  call void @vsf_log_do_log_vsftpd_format(%struct.vsf_session* %41, %struct.mystr* @vsf_log_common.s_log_str, i32 %42, i32 %43, %struct.mystr* %44), !dbg !9748
  %45 = load i32, i32* %7, align 4, !dbg !9749
  %46 = icmp eq i32 %45, 5, !dbg !9751
  br i1 %46, label %47, label %51, !dbg !9752

47:                                               ; preds = %40
  %48 = load i32, i32* %6, align 4, !dbg !9753
  %49 = icmp ne i32 %48, 0, !dbg !9753
  br i1 %49, label %51, label %50, !dbg !9754

50:                                               ; preds = %47
  store i32 1, i32* %9, align 4, !dbg !9755
  br label %51, !dbg !9757

51:                                               ; preds = %50, %47, %40
  %52 = load i32, i32* %9, align 4, !dbg !9758
  call void @str_syslog(%struct.mystr* @vsf_log_common.s_log_str, i32 %52), !dbg !9759
  br label %53, !dbg !9760

53:                                               ; preds = %51, %37
  ret void, !dbg !9761
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_log_do_log_wuftpd_format(%struct.vsf_session*, %struct.mystr*, i32) #0 !dbg !834 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !9762, metadata !DIExpression()), !dbg !9763
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !9764, metadata !DIExpression()), !dbg !9765
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9766, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9768, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9770, metadata !DIExpression()), !dbg !9771
  %9 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9772
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 35, !dbg !9773
  %11 = load i64, i64* %10, align 8, !dbg !9773
  %12 = trunc i64 %11 to i32, !dbg !9774
  store i32 %12, i32* %8, align 4, !dbg !9771
  %13 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9775
  %14 = call i8* @vsf_sysutil_get_current_date(), !dbg !9776
  call void @str_alloc_text(%struct.mystr* %13, i8* %14), !dbg !9777
  %15 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9778
  call void @str_append_char(%struct.mystr* %15, i8 signext 32), !dbg !9779
  %16 = call i64 @vsf_sysutil_get_time_sec(), !dbg !9780
  %17 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9781
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 36, !dbg !9782
  %19 = load i64, i64* %18, align 8, !dbg !9782
  %20 = sub nsw i64 %16, %19, !dbg !9783
  store i64 %20, i64* %7, align 8, !dbg !9784
  %21 = load i64, i64* %7, align 8, !dbg !9785
  %22 = icmp sle i64 %21, 0, !dbg !9787
  br i1 %22, label %23, label %24, !dbg !9788

23:                                               ; preds = %3
  store i64 1, i64* %7, align 8, !dbg !9789
  br label %24, !dbg !9791

24:                                               ; preds = %23, %3
  %25 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9792
  %26 = load i64, i64* %7, align 8, !dbg !9793
  call void @str_append_ulong(%struct.mystr* %25, i64 %26), !dbg !9794
  %27 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9795
  call void @str_append_char(%struct.mystr* %27, i8 signext 32), !dbg !9796
  %28 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9797
  %29 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9798
  %30 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %29, i32 0, i32 34, !dbg !9799
  call void @str_append_str(%struct.mystr* %28, %struct.mystr* %30), !dbg !9800
  %31 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9801
  call void @str_append_char(%struct.mystr* %31, i8 signext 32), !dbg !9802
  %32 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9803
  %33 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9804
  %34 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %33, i32 0, i32 39, !dbg !9805
  %35 = load i64, i64* %34, align 8, !dbg !9805
  call void @str_append_filesize_t(%struct.mystr* %32, i64 %35), !dbg !9806
  %36 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9807
  call void @str_append_char(%struct.mystr* %36, i8 signext 32), !dbg !9808
  %37 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9809
  %38 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %37, i32 0, i32 38, !dbg !9810
  call void @str_copy(%struct.mystr* @vsf_log_do_log_wuftpd_format.s_filename_str, %struct.mystr* %38), !dbg !9811
  call void @str_replace_char(%struct.mystr* @vsf_log_do_log_wuftpd_format.s_filename_str, i8 signext 32, i8 signext 95), !dbg !9812
  %39 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9813
  call void @str_append_str(%struct.mystr* %39, %struct.mystr* @vsf_log_do_log_wuftpd_format.s_filename_str), !dbg !9814
  %40 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9815
  call void @str_append_char(%struct.mystr* %40, i8 signext 32), !dbg !9816
  %41 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9817
  %42 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %41, i32 0, i32 17, !dbg !9819
  %43 = load i32, i32* %42, align 8, !dbg !9819
  %44 = icmp ne i32 %43, 0, !dbg !9817
  br i1 %44, label %45, label %47, !dbg !9820

45:                                               ; preds = %24
  %46 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9821
  call void @str_append_text(%struct.mystr* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.427, i32 0, i32 0)), !dbg !9823
  br label %49, !dbg !9824

47:                                               ; preds = %24
  %48 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9825
  call void @str_append_text(%struct.mystr* %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.428, i32 0, i32 0)), !dbg !9827
  br label %49

49:                                               ; preds = %47, %45
  %50 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9828
  call void @str_append_text(%struct.mystr* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.429, i32 0, i32 0)), !dbg !9829
  %51 = load i32, i32* %8, align 4, !dbg !9830
  %52 = icmp eq i32 %51, 3, !dbg !9832
  br i1 %52, label %53, label %55, !dbg !9833

53:                                               ; preds = %49
  %54 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9834
  call void @str_append_text(%struct.mystr* %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.430, i32 0, i32 0)), !dbg !9836
  br label %57, !dbg !9837

55:                                               ; preds = %49
  %56 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9838
  call void @str_append_text(%struct.mystr* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.431, i32 0, i32 0)), !dbg !9840
  br label %57

57:                                               ; preds = %55, %53
  %58 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9841
  %59 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %58, i32 0, i32 12, !dbg !9843
  %60 = load i32, i32* %59, align 8, !dbg !9843
  %61 = icmp ne i32 %60, 0, !dbg !9841
  br i1 %61, label %62, label %72, !dbg !9844

62:                                               ; preds = %57
  %63 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9845
  %64 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %63, i32 0, i32 13, !dbg !9846
  %65 = load i32, i32* %64, align 4, !dbg !9846
  %66 = icmp ne i32 %65, 0, !dbg !9845
  br i1 %66, label %72, label %67, !dbg !9847

67:                                               ; preds = %62
  %68 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9848
  call void @str_append_text(%struct.mystr* %68, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.427, i32 0, i32 0)), !dbg !9850
  %69 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9851
  %70 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9852
  %71 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %70, i32 0, i32 15, !dbg !9853
  call void @str_append_str(%struct.mystr* %69, %struct.mystr* %71), !dbg !9854
  br label %85, !dbg !9855

72:                                               ; preds = %62, %57
  %73 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9856
  %74 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %73, i32 0, i32 13, !dbg !9859
  %75 = load i32, i32* %74, align 4, !dbg !9859
  %76 = icmp ne i32 %75, 0, !dbg !9856
  br i1 %76, label %77, label %79, !dbg !9860

77:                                               ; preds = %72
  %78 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9861
  call void @str_append_text(%struct.mystr* %78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.432, i32 0, i32 0)), !dbg !9863
  br label %81, !dbg !9864

79:                                               ; preds = %72
  %80 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9865
  call void @str_append_text(%struct.mystr* %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.433, i32 0, i32 0)), !dbg !9867
  br label %81

81:                                               ; preds = %79, %77
  %82 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9868
  %83 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !9869
  %84 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %83, i32 0, i32 14, !dbg !9870
  call void @str_append_str(%struct.mystr* %82, %struct.mystr* %84), !dbg !9871
  br label %85

85:                                               ; preds = %81, %67
  %86 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9872
  call void @str_append_char(%struct.mystr* %86, i8 signext 32), !dbg !9873
  %87 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9874
  call void @str_append_text(%struct.mystr* %87, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.434, i32 0, i32 0)), !dbg !9875
  %88 = load i32, i32* %6, align 4, !dbg !9876
  %89 = icmp ne i32 %88, 0, !dbg !9876
  br i1 %89, label %90, label %92, !dbg !9878

90:                                               ; preds = %85
  %91 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9879
  call void @str_append_char(%struct.mystr* %91, i8 signext 99), !dbg !9881
  br label %94, !dbg !9882

92:                                               ; preds = %85
  %93 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !9883
  call void @str_append_char(%struct.mystr* %93, i8 signext 105), !dbg !9885
  br label %94

94:                                               ; preds = %92, %90
  ret void, !dbg !9886
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_log_do_log_to_file(i32, %struct.mystr*) #0 !dbg !9887 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9890, metadata !DIExpression()), !dbg !9891
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !9892, metadata !DIExpression()), !dbg !9893
  %6 = load i32, i32* @tunable_no_log_lock, align 4, !dbg !9894
  %7 = icmp ne i32 %6, 0, !dbg !9894
  br i1 %7, label %16, label %8, !dbg !9896

8:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9897, metadata !DIExpression()), !dbg !9899
  %9 = load i32, i32* %3, align 4, !dbg !9900
  %10 = call i32 @vsf_sysutil_lock_file_write(i32 %9), !dbg !9901
  store i32 %10, i32* %5, align 4, !dbg !9899
  %11 = load i32, i32* %5, align 4, !dbg !9902
  %12 = call i32 @vsf_sysutil_retval_is_error(i32 %11), !dbg !9904
  %13 = icmp ne i32 %12, 0, !dbg !9904
  br i1 %13, label %14, label %15, !dbg !9905

14:                                               ; preds = %8
  br label %26, !dbg !9906

15:                                               ; preds = %8
  br label %16, !dbg !9908

16:                                               ; preds = %15, %2
  %17 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !9909
  call void @str_replace_unprintable(%struct.mystr* %17, i8 signext 63), !dbg !9910
  %18 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !9911
  call void @str_append_char(%struct.mystr* %18, i8 signext 10), !dbg !9912
  %19 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !9913
  %20 = load i32, i32* %3, align 4, !dbg !9914
  %21 = call i32 @str_write_loop(%struct.mystr* %19, i32 %20), !dbg !9915
  %22 = load i32, i32* @tunable_no_log_lock, align 4, !dbg !9916
  %23 = icmp ne i32 %22, 0, !dbg !9916
  br i1 %23, label %26, label %24, !dbg !9918

24:                                               ; preds = %16
  %25 = load i32, i32* %3, align 4, !dbg !9919
  call void @vsf_sysutil_unlock_file(i32 %25), !dbg !9921
  br label %26, !dbg !9922

26:                                               ; preds = %14, %24, %16
  ret void, !dbg !9923
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_log_do_log_vsftpd_format(%struct.vsf_session*, %struct.mystr*, i32, i32, %struct.mystr*) #0 !dbg !9924 {
  %6 = alloca %struct.vsf_session*, align 8
  %7 = alloca %struct.mystr*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.mystr*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %6, metadata !9927, metadata !DIExpression()), !dbg !9928
  store %struct.mystr* %1, %struct.mystr** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %7, metadata !9929, metadata !DIExpression()), !dbg !9930
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9931, metadata !DIExpression()), !dbg !9932
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9933, metadata !DIExpression()), !dbg !9934
  store %struct.mystr* %4, %struct.mystr** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %10, metadata !9935, metadata !DIExpression()), !dbg !9936
  %15 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9937
  call void @str_empty(%struct.mystr* %15), !dbg !9938
  %16 = load i32, i32* @tunable_syslog_enable, align 4, !dbg !9939
  %17 = icmp ne i32 %16, 0, !dbg !9939
  br i1 %17, label %26, label %18, !dbg !9941

18:                                               ; preds = %5
  %19 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9942
  %20 = call i8* @vsf_sysutil_get_current_date(), !dbg !9944
  call void @str_append_text(%struct.mystr* %19, i8* %20), !dbg !9945
  %21 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9946
  call void @str_append_text(%struct.mystr* %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.404, i32 0, i32 0)), !dbg !9947
  %22 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9948
  %23 = call i32 @vsf_sysutil_getpid(), !dbg !9949
  %24 = zext i32 %23 to i64, !dbg !9949
  call void @str_append_ulong(%struct.mystr* %22, i64 %24), !dbg !9950
  %25 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9951
  call void @str_append_text(%struct.mystr* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.405, i32 0, i32 0)), !dbg !9952
  br label %26, !dbg !9953

26:                                               ; preds = %18, %5
  %27 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !9954
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 14, !dbg !9956
  %29 = call i32 @str_isempty(%struct.mystr* %28), !dbg !9957
  %30 = icmp ne i32 %29, 0, !dbg !9957
  br i1 %30, label %37, label %31, !dbg !9958

31:                                               ; preds = %26
  %32 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9959
  call void @str_append_char(%struct.mystr* %32, i8 signext 91), !dbg !9961
  %33 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9962
  %34 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !9963
  %35 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %34, i32 0, i32 14, !dbg !9964
  call void @str_append_str(%struct.mystr* %33, %struct.mystr* %35), !dbg !9965
  %36 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9966
  call void @str_append_text(%struct.mystr* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.405, i32 0, i32 0)), !dbg !9967
  br label %37, !dbg !9968

37:                                               ; preds = %31, %26
  %38 = load i32, i32* %9, align 4, !dbg !9969
  %39 = icmp ne i32 %38, 6, !dbg !9971
  br i1 %39, label %40, label %57, !dbg !9972

40:                                               ; preds = %37
  %41 = load i32, i32* %9, align 4, !dbg !9973
  %42 = icmp ne i32 %41, 7, !dbg !9974
  br i1 %42, label %43, label %57, !dbg !9975

43:                                               ; preds = %40
  %44 = load i32, i32* %9, align 4, !dbg !9976
  %45 = icmp ne i32 %44, 8, !dbg !9977
  br i1 %45, label %46, label %57, !dbg !9978

46:                                               ; preds = %43
  %47 = load i32, i32* %9, align 4, !dbg !9979
  %48 = icmp ne i32 %47, 13, !dbg !9980
  br i1 %48, label %49, label %57, !dbg !9981

49:                                               ; preds = %46
  %50 = load i32, i32* %8, align 4, !dbg !9982
  %51 = icmp ne i32 %50, 0, !dbg !9982
  br i1 %51, label %52, label %54, !dbg !9985

52:                                               ; preds = %49
  %53 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9986
  call void @str_append_text(%struct.mystr* %53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.406, i32 0, i32 0)), !dbg !9988
  br label %56, !dbg !9989

54:                                               ; preds = %49
  %55 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9990
  call void @str_append_text(%struct.mystr* %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14.407, i32 0, i32 0)), !dbg !9992
  br label %56

56:                                               ; preds = %54, %52
  br label %57, !dbg !9993

57:                                               ; preds = %56, %46, %43, %40, %37
  %58 = load i32, i32* %9, align 4, !dbg !9994
  switch i32 %58, label %84 [
    i32 2, label %59
    i32 3, label %61
    i32 4, label %63
    i32 5, label %65
    i32 6, label %67
    i32 7, label %69
    i32 8, label %71
    i32 9, label %73
    i32 10, label %75
    i32 11, label %77
    i32 12, label %79
    i32 13, label %81
    i32 1, label %83
  ], !dbg !9995

59:                                               ; preds = %57
  %60 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !9996
  call void @str_append_text(%struct.mystr* %60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.408, i32 0, i32 0)), !dbg !9998
  br label %85, !dbg !9999

61:                                               ; preds = %57
  %62 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10000
  call void @str_append_text(%struct.mystr* %62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.409, i32 0, i32 0)), !dbg !10001
  br label %85, !dbg !10002

63:                                               ; preds = %57
  %64 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10003
  call void @str_append_text(%struct.mystr* %64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.410, i32 0, i32 0)), !dbg !10004
  br label %85, !dbg !10005

65:                                               ; preds = %57
  %66 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10006
  call void @str_append_text(%struct.mystr* %66, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.411, i32 0, i32 0)), !dbg !10007
  br label %85, !dbg !10008

67:                                               ; preds = %57
  %68 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10009
  call void @str_append_text(%struct.mystr* %68, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.412, i32 0, i32 0)), !dbg !10010
  br label %85, !dbg !10011

69:                                               ; preds = %57
  %70 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10012
  call void @str_append_text(%struct.mystr* %70, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20.413, i32 0, i32 0)), !dbg !10013
  br label %85, !dbg !10014

71:                                               ; preds = %57
  %72 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10015
  call void @str_append_text(%struct.mystr* %72, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21.414, i32 0, i32 0)), !dbg !10016
  br label %85, !dbg !10017

73:                                               ; preds = %57
  %74 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10018
  call void @str_append_text(%struct.mystr* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22.415, i32 0, i32 0)), !dbg !10019
  br label %85, !dbg !10020

75:                                               ; preds = %57
  %76 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10021
  call void @str_append_text(%struct.mystr* %76, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23.416, i32 0, i32 0)), !dbg !10022
  br label %85, !dbg !10023

77:                                               ; preds = %57
  %78 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10024
  call void @str_append_text(%struct.mystr* %78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24.417, i32 0, i32 0)), !dbg !10025
  br label %85, !dbg !10026

79:                                               ; preds = %57
  %80 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10027
  call void @str_append_text(%struct.mystr* %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.418, i32 0, i32 0)), !dbg !10028
  br label %85, !dbg !10029

81:                                               ; preds = %57
  %82 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10030
  call void @str_append_text(%struct.mystr* %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26.419, i32 0, i32 0)), !dbg !10031
  br label %85, !dbg !10032

83:                                               ; preds = %57
  br label %84, !dbg !10032

84:                                               ; preds = %57, %83
  call void @bug(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27.420, i32 0, i32 0)), !dbg !10033
  br label %85, !dbg !10034

85:                                               ; preds = %84, %81, %79, %77, %75, %73, %71, %69, %67, %65, %63, %61, %59
  %86 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10035
  call void @str_append_text(%struct.mystr* %86, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28.421, i32 0, i32 0)), !dbg !10036
  %87 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10037
  %88 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10038
  %89 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %88, i32 0, i32 34, !dbg !10039
  call void @str_append_str(%struct.mystr* %87, %struct.mystr* %89), !dbg !10040
  %90 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10041
  call void @str_append_char(%struct.mystr* %90, i8 signext 34), !dbg !10042
  %91 = load i32, i32* %9, align 4, !dbg !10043
  %92 = icmp eq i32 %91, 5, !dbg !10045
  br i1 %92, label %93, label %104, !dbg !10046

93:                                               ; preds = %85
  %94 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10047
  %95 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %94, i32 0, i32 15, !dbg !10048
  %96 = call i32 @str_isempty(%struct.mystr* %95), !dbg !10049
  %97 = icmp ne i32 %96, 0, !dbg !10049
  br i1 %97, label %104, label %98, !dbg !10050

98:                                               ; preds = %93
  %99 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10051
  call void @str_append_text(%struct.mystr* %99, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.422, i32 0, i32 0)), !dbg !10053
  %100 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10054
  %101 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10055
  %102 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %101, i32 0, i32 15, !dbg !10056
  call void @str_append_str(%struct.mystr* %100, %struct.mystr* %102), !dbg !10057
  %103 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10058
  call void @str_append_char(%struct.mystr* %103, i8 signext 34), !dbg !10059
  br label %104, !dbg !10060

104:                                              ; preds = %98, %93, %85
  %105 = load %struct.mystr*, %struct.mystr** %10, align 8, !dbg !10061
  %106 = call i32 @str_isempty(%struct.mystr* %105), !dbg !10063
  %107 = icmp ne i32 %106, 0, !dbg !10063
  br i1 %107, label %113, label %108, !dbg !10064

108:                                              ; preds = %104
  %109 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10065
  call void @str_append_text(%struct.mystr* %109, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30.423, i32 0, i32 0)), !dbg !10067
  %110 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10068
  %111 = load %struct.mystr*, %struct.mystr** %10, align 8, !dbg !10069
  call void @str_append_str(%struct.mystr* %110, %struct.mystr* %111), !dbg !10070
  %112 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10071
  call void @str_append_char(%struct.mystr* %112, i8 signext 34), !dbg !10072
  br label %113, !dbg !10073

113:                                              ; preds = %108, %104
  %114 = load i32, i32* %9, align 4, !dbg !10074
  %115 = icmp ne i32 %114, 6, !dbg !10076
  br i1 %115, label %116, label %171, !dbg !10077

116:                                              ; preds = %113
  %117 = load i32, i32* %9, align 4, !dbg !10078
  %118 = icmp ne i32 %117, 7, !dbg !10079
  br i1 %118, label %119, label %171, !dbg !10080

119:                                              ; preds = %116
  %120 = load i32, i32* %9, align 4, !dbg !10081
  %121 = icmp ne i32 %120, 13, !dbg !10082
  br i1 %121, label %122, label %171, !dbg !10083

122:                                              ; preds = %119
  %123 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10084
  %124 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %123, i32 0, i32 39, !dbg !10087
  %125 = load i64, i64* %124, align 8, !dbg !10087
  %126 = icmp ne i64 %125, 0, !dbg !10084
  br i1 %126, label %127, label %134, !dbg !10088

127:                                              ; preds = %122
  %128 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10089
  call void @str_append_text(%struct.mystr* %128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31.424, i32 0, i32 0)), !dbg !10091
  %129 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10092
  %130 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10093
  %131 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %130, i32 0, i32 39, !dbg !10094
  %132 = load i64, i64* %131, align 8, !dbg !10094
  call void @str_append_filesize_t(%struct.mystr* %129, i64 %132), !dbg !10095
  %133 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10096
  call void @str_append_text(%struct.mystr* %133, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32.425, i32 0, i32 0)), !dbg !10097
  br label %134, !dbg !10098

134:                                              ; preds = %127, %122
  %135 = load i32, i32* %9, align 4, !dbg !10099
  %136 = call i32 @vsf_log_type_is_transfer(i32 %135), !dbg !10101
  %137 = icmp ne i32 %136, 0, !dbg !10101
  br i1 %137, label %138, label %170, !dbg !10102

138:                                              ; preds = %134
  call void @llvm.dbg.declare(metadata i64* %11, metadata !10103, metadata !DIExpression()), !dbg !10105
  %139 = call i64 @vsf_sysutil_get_time_sec(), !dbg !10106
  %140 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10107
  %141 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %140, i32 0, i32 36, !dbg !10108
  %142 = load i64, i64* %141, align 8, !dbg !10108
  %143 = sub nsw i64 %139, %142, !dbg !10109
  store i64 %143, i64* %11, align 8, !dbg !10105
  call void @llvm.dbg.declare(metadata i64* %12, metadata !10110, metadata !DIExpression()), !dbg !10111
  %144 = call i64 @vsf_sysutil_get_time_usec(), !dbg !10112
  %145 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10113
  %146 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %145, i32 0, i32 37, !dbg !10114
  %147 = load i64, i64* %146, align 8, !dbg !10114
  %148 = sub nsw i64 %144, %147, !dbg !10115
  store i64 %148, i64* %12, align 8, !dbg !10111
  call void @llvm.dbg.declare(metadata double* %13, metadata !10116, metadata !DIExpression()), !dbg !10117
  %149 = load i64, i64* %11, align 8, !dbg !10118
  %150 = sitofp i64 %149 to double, !dbg !10119
  %151 = load i64, i64* %12, align 8, !dbg !10120
  %152 = sitofp i64 %151 to double, !dbg !10121
  %153 = fdiv double %152, 1.000000e+06, !dbg !10122
  %154 = fadd double %150, %153, !dbg !10123
  store double %154, double* %13, align 8, !dbg !10117
  call void @llvm.dbg.declare(metadata double* %14, metadata !10124, metadata !DIExpression()), !dbg !10125
  %155 = load double, double* %13, align 8, !dbg !10126
  %156 = fcmp ole double %155, 0.000000e+00, !dbg !10128
  br i1 %156, label %157, label %158, !dbg !10129

157:                                              ; preds = %138
  store double 1.000000e-01, double* %13, align 8, !dbg !10130
  br label %158, !dbg !10132

158:                                              ; preds = %157, %138
  %159 = load %struct.vsf_session*, %struct.vsf_session** %6, align 8, !dbg !10133
  %160 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %159, i32 0, i32 39, !dbg !10134
  %161 = load i64, i64* %160, align 8, !dbg !10134
  %162 = sitofp i64 %161 to double, !dbg !10135
  %163 = load double, double* %13, align 8, !dbg !10136
  %164 = fdiv double %162, %163, !dbg !10137
  %165 = fdiv double %164, 1.024000e+03, !dbg !10138
  store double %165, double* %14, align 8, !dbg !10139
  %166 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10140
  call void @str_append_text(%struct.mystr* %166, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31.424, i32 0, i32 0)), !dbg !10141
  %167 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10142
  %168 = load double, double* %14, align 8, !dbg !10143
  call void @str_append_double(%struct.mystr* %167, double %168), !dbg !10144
  %169 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !10145
  call void @str_append_text(%struct.mystr* %169, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.426, i32 0, i32 0)), !dbg !10146
  br label %170, !dbg !10147

170:                                              ; preds = %158, %134
  br label %171, !dbg !10148

171:                                              ; preds = %170, %119, %116, %113
  ret void, !dbg !10149
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_log_entry_pending(%struct.vsf_session*) #0 !dbg !10150 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !10153, metadata !DIExpression()), !dbg !10154
  %4 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !10155
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 35, !dbg !10157
  %6 = load i64, i64* %5, align 8, !dbg !10157
  %7 = icmp eq i64 %6, 0, !dbg !10158
  br i1 %7, label %8, label %9, !dbg !10159

8:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !10160
  br label %10, !dbg !10160

9:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !10162
  br label %10, !dbg !10162

10:                                               ; preds = %9, %8
  %11 = load i32, i32* %2, align 4, !dbg !10163
  ret i32 %11, !dbg !10163
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_log_clear_entry(%struct.vsf_session*) #0 !dbg !10164 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !10165, metadata !DIExpression()), !dbg !10166
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !10167
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 35, !dbg !10168
  store i64 0, i64* %4, align 8, !dbg !10169
  ret void, !dbg !10170
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_log_do_log(%struct.vsf_session*, i32) #0 !dbg !10171 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !10174, metadata !DIExpression()), !dbg !10175
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10176, metadata !DIExpression()), !dbg !10177
  %5 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !10178
  %6 = load i32, i32* %4, align 4, !dbg !10179
  %7 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !10180
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 35, !dbg !10181
  %9 = load i64, i64* %8, align 8, !dbg !10181
  %10 = trunc i64 %9 to i32, !dbg !10182
  %11 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !10183
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 38, !dbg !10184
  call void @vsf_log_common(%struct.vsf_session* %5, i32 %6, i32 %10, %struct.mystr* %12), !dbg !10185
  %13 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !10186
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 35, !dbg !10187
  store i64 0, i64* %14, align 8, !dbg !10188
  ret void, !dbg !10189
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @private_str_alloc_memchunk(%struct.mystr*, i8*, i32) #0 !dbg !10190 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10193, metadata !DIExpression()), !dbg !10194
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10195, metadata !DIExpression()), !dbg !10196
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10197, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10199, metadata !DIExpression()), !dbg !10200
  %8 = load i32, i32* %6, align 4, !dbg !10201
  %9 = add i32 %8, 1, !dbg !10203
  %10 = load i32, i32* %6, align 4, !dbg !10204
  %11 = icmp ult i32 %9, %10, !dbg !10205
  br i1 %11, label %12, label %13, !dbg !10206

12:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i32 0, i32 0)), !dbg !10207
  br label %13, !dbg !10209

13:                                               ; preds = %12, %3
  %14 = load i32, i32* %6, align 4, !dbg !10210
  %15 = add i32 %14, 1, !dbg !10211
  store i32 %15, i32* %7, align 4, !dbg !10212
  %16 = load i32, i32* %7, align 4, !dbg !10213
  %17 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10215
  %18 = getelementptr inbounds %struct.mystr, %struct.mystr* %17, i32 0, i32 2, !dbg !10216
  %19 = load i32, i32* %18, align 4, !dbg !10216
  %20 = icmp ugt i32 %16, %19, !dbg !10217
  br i1 %20, label %21, label %29, !dbg !10218

21:                                               ; preds = %13
  %22 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10219
  call void @str_free(%struct.mystr* %22), !dbg !10221
  %23 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10222
  %24 = load i32, i32* %7, align 4, !dbg !10223
  %25 = call i8* @vsf_sysutil_malloc(i32 %24), !dbg !10224
  call void @s_setbuf(%struct.mystr* %23, i8* %25), !dbg !10225
  %26 = load i32, i32* %7, align 4, !dbg !10226
  %27 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10227
  %28 = getelementptr inbounds %struct.mystr, %struct.mystr* %27, i32 0, i32 2, !dbg !10228
  store i32 %26, i32* %28, align 4, !dbg !10229
  br label %29, !dbg !10230

29:                                               ; preds = %21, %13
  %30 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10231
  %31 = getelementptr inbounds %struct.mystr, %struct.mystr* %30, i32 0, i32 0, !dbg !10232
  %32 = load i8*, i8** %31, align 8, !dbg !10232
  %33 = load i8*, i8** %5, align 8, !dbg !10233
  %34 = load i32, i32* %6, align 4, !dbg !10234
  call void @vsf_sysutil_memcpy(i8* %32, i8* %33, i32 %34), !dbg !10235
  %35 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10236
  %36 = getelementptr inbounds %struct.mystr, %struct.mystr* %35, i32 0, i32 0, !dbg !10237
  %37 = load i8*, i8** %36, align 8, !dbg !10237
  %38 = load i32, i32* %6, align 4, !dbg !10238
  %39 = zext i32 %38 to i64, !dbg !10236
  %40 = getelementptr inbounds i8, i8* %37, i64 %39, !dbg !10236
  store i8 0, i8* %40, align 1, !dbg !10239
  %41 = load i32, i32* %6, align 4, !dbg !10240
  %42 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10241
  %43 = getelementptr inbounds %struct.mystr, %struct.mystr* %42, i32 0, i32 1, !dbg !10242
  store i32 %41, i32* %43, align 8, !dbg !10243
  ret void, !dbg !10244
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_free(%struct.mystr*) #0 !dbg !10245 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !10248, metadata !DIExpression()), !dbg !10249
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10250
  %4 = getelementptr inbounds %struct.mystr, %struct.mystr* %3, i32 0, i32 0, !dbg !10252
  %5 = load i8*, i8** %4, align 8, !dbg !10252
  %6 = icmp ne i8* %5, null, !dbg !10253
  br i1 %6, label %7, label %11, !dbg !10254

7:                                                ; preds = %1
  %8 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10255
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 0, !dbg !10257
  %10 = load i8*, i8** %9, align 8, !dbg !10257
  call void @vsf_sysutil_free(i8* %10), !dbg !10258
  br label %11, !dbg !10259

11:                                               ; preds = %7, %1
  %12 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10260
  %13 = getelementptr inbounds %struct.mystr, %struct.mystr* %12, i32 0, i32 0, !dbg !10261
  store i8* null, i8** %13, align 8, !dbg !10262
  %14 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10263
  %15 = getelementptr inbounds %struct.mystr, %struct.mystr* %14, i32 0, i32 1, !dbg !10264
  store i32 0, i32* %15, align 8, !dbg !10265
  %16 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10266
  %17 = getelementptr inbounds %struct.mystr, %struct.mystr* %16, i32 0, i32 2, !dbg !10267
  store i32 0, i32* %17, align 4, !dbg !10268
  ret void, !dbg !10269
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @s_setbuf(%struct.mystr*, i8*) #0 !dbg !10270 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i8*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10273, metadata !DIExpression()), !dbg !10274
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10275, metadata !DIExpression()), !dbg !10276
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10277
  %6 = getelementptr inbounds %struct.mystr, %struct.mystr* %5, i32 0, i32 0, !dbg !10279
  %7 = load i8*, i8** %6, align 8, !dbg !10279
  %8 = icmp ne i8* %7, null, !dbg !10280
  br i1 %8, label %9, label %10, !dbg !10281

9:                                                ; preds = %2
  call void @bug(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.444, i32 0, i32 0)), !dbg !10282
  br label %10, !dbg !10284

10:                                               ; preds = %9, %2
  %11 = load i8*, i8** %4, align 8, !dbg !10285
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10286
  %13 = getelementptr inbounds %struct.mystr, %struct.mystr* %12, i32 0, i32 0, !dbg !10287
  store i8* %11, i8** %13, align 8, !dbg !10288
  ret void, !dbg !10289
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @private_str_append_memchunk(%struct.mystr*, i8*, i32) #0 !dbg !10290 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10291, metadata !DIExpression()), !dbg !10292
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10293, metadata !DIExpression()), !dbg !10294
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10295, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10297, metadata !DIExpression()), !dbg !10298
  %8 = load i32, i32* %6, align 4, !dbg !10299
  %9 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10301
  %10 = getelementptr inbounds %struct.mystr, %struct.mystr* %9, i32 0, i32 1, !dbg !10302
  %11 = load i32, i32* %10, align 8, !dbg !10302
  %12 = add i32 %8, %11, !dbg !10303
  %13 = load i32, i32* %6, align 4, !dbg !10304
  %14 = icmp ult i32 %12, %13, !dbg !10305
  br i1 %14, label %15, label %16, !dbg !10306

15:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i32 0, i32 0)), !dbg !10307
  br label %16, !dbg !10309

16:                                               ; preds = %15, %3
  %17 = load i32, i32* %6, align 4, !dbg !10310
  %18 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10311
  %19 = getelementptr inbounds %struct.mystr, %struct.mystr* %18, i32 0, i32 1, !dbg !10312
  %20 = load i32, i32* %19, align 8, !dbg !10312
  %21 = add i32 %17, %20, !dbg !10313
  store i32 %21, i32* %7, align 4, !dbg !10314
  %22 = load i32, i32* %7, align 4, !dbg !10315
  %23 = add i32 %22, 1, !dbg !10317
  %24 = load i32, i32* %7, align 4, !dbg !10318
  %25 = icmp ult i32 %23, %24, !dbg !10319
  br i1 %25, label %26, label %27, !dbg !10320

26:                                               ; preds = %16
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i32 0, i32 0)), !dbg !10321
  br label %27, !dbg !10323

27:                                               ; preds = %26, %16
  %28 = load i32, i32* %7, align 4, !dbg !10324
  %29 = add i32 %28, 1, !dbg !10324
  store i32 %29, i32* %7, align 4, !dbg !10324
  %30 = load i32, i32* %7, align 4, !dbg !10325
  %31 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10327
  %32 = getelementptr inbounds %struct.mystr, %struct.mystr* %31, i32 0, i32 2, !dbg !10328
  %33 = load i32, i32* %32, align 4, !dbg !10328
  %34 = icmp ugt i32 %30, %33, !dbg !10329
  br i1 %34, label %35, label %46, !dbg !10330

35:                                               ; preds = %27
  %36 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10331
  %37 = getelementptr inbounds %struct.mystr, %struct.mystr* %36, i32 0, i32 0, !dbg !10333
  %38 = load i8*, i8** %37, align 8, !dbg !10333
  %39 = load i32, i32* %7, align 4, !dbg !10334
  %40 = call i8* @vsf_sysutil_realloc(i8* %38, i32 %39), !dbg !10335
  %41 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10336
  %42 = getelementptr inbounds %struct.mystr, %struct.mystr* %41, i32 0, i32 0, !dbg !10337
  store i8* %40, i8** %42, align 8, !dbg !10338
  %43 = load i32, i32* %7, align 4, !dbg !10339
  %44 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10340
  %45 = getelementptr inbounds %struct.mystr, %struct.mystr* %44, i32 0, i32 2, !dbg !10341
  store i32 %43, i32* %45, align 4, !dbg !10342
  br label %46, !dbg !10343

46:                                               ; preds = %35, %27
  %47 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10344
  %48 = getelementptr inbounds %struct.mystr, %struct.mystr* %47, i32 0, i32 0, !dbg !10345
  %49 = load i8*, i8** %48, align 8, !dbg !10345
  %50 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10346
  %51 = getelementptr inbounds %struct.mystr, %struct.mystr* %50, i32 0, i32 1, !dbg !10347
  %52 = load i32, i32* %51, align 8, !dbg !10347
  %53 = zext i32 %52 to i64, !dbg !10348
  %54 = getelementptr inbounds i8, i8* %49, i64 %53, !dbg !10348
  %55 = load i8*, i8** %5, align 8, !dbg !10349
  %56 = load i32, i32* %6, align 4, !dbg !10350
  call void @vsf_sysutil_memcpy(i8* %54, i8* %55, i32 %56), !dbg !10351
  %57 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10352
  %58 = getelementptr inbounds %struct.mystr, %struct.mystr* %57, i32 0, i32 0, !dbg !10353
  %59 = load i8*, i8** %58, align 8, !dbg !10353
  %60 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10354
  %61 = getelementptr inbounds %struct.mystr, %struct.mystr* %60, i32 0, i32 1, !dbg !10355
  %62 = load i32, i32* %61, align 8, !dbg !10355
  %63 = load i32, i32* %6, align 4, !dbg !10356
  %64 = add i32 %62, %63, !dbg !10357
  %65 = zext i32 %64 to i64, !dbg !10352
  %66 = getelementptr inbounds i8, i8* %59, i64 %65, !dbg !10352
  store i8 0, i8* %66, align 1, !dbg !10358
  %67 = load i32, i32* %6, align 4, !dbg !10359
  %68 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10360
  %69 = getelementptr inbounds %struct.mystr, %struct.mystr* %68, i32 0, i32 1, !dbg !10361
  %70 = load i32, i32* %69, align 8, !dbg !10362
  %71 = add i32 %70, %67, !dbg !10362
  store i32 %71, i32* %69, align 8, !dbg !10362
  ret void, !dbg !10363
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_alloc_text(%struct.mystr*, i8*) #0 !dbg !10364 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10367, metadata !DIExpression()), !dbg !10368
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10369, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10371, metadata !DIExpression()), !dbg !10372
  %6 = load i8*, i8** %4, align 8, !dbg !10373
  %7 = call i32 @vsf_sysutil_strlen(i8* %6), !dbg !10374
  store i32 %7, i32* %5, align 4, !dbg !10372
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10375
  %9 = load i8*, i8** %4, align 8, !dbg !10376
  %10 = load i32, i32* %5, align 4, !dbg !10377
  call void @private_str_alloc_memchunk(%struct.mystr* %8, i8* %9, i32 %10), !dbg !10378
  ret void, !dbg !10379
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_copy(%struct.mystr*, %struct.mystr*) #0 !dbg !10380 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10383, metadata !DIExpression()), !dbg !10384
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10385, metadata !DIExpression()), !dbg !10386
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10387
  %6 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10388
  %7 = getelementptr inbounds %struct.mystr, %struct.mystr* %6, i32 0, i32 0, !dbg !10389
  %8 = load i8*, i8** %7, align 8, !dbg !10389
  %9 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10390
  %10 = getelementptr inbounds %struct.mystr, %struct.mystr* %9, i32 0, i32 1, !dbg !10391
  %11 = load i32, i32* %10, align 8, !dbg !10391
  call void @private_str_alloc_memchunk(%struct.mystr* %5, i8* %8, i32 %11), !dbg !10392
  ret void, !dbg !10393
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @str_strdup(%struct.mystr*) #0 !dbg !10394 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !10397, metadata !DIExpression()), !dbg !10398
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10399
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !10400
  %5 = call i8* @vsf_sysutil_strdup(i8* %4), !dbg !10401
  ret i8* %5, !dbg !10402
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @str_getbuf(%struct.mystr*) #0 !dbg !10403 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !10404, metadata !DIExpression()), !dbg !10405
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10406
  %4 = getelementptr inbounds %struct.mystr, %struct.mystr* %3, i32 0, i32 0, !dbg !10408
  %5 = load i8*, i8** %4, align 8, !dbg !10408
  %6 = icmp eq i8* %5, null, !dbg !10409
  br i1 %6, label %7, label %20, !dbg !10410

7:                                                ; preds = %1
  %8 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10411
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 1, !dbg !10414
  %10 = load i32, i32* %9, align 8, !dbg !10414
  %11 = icmp ne i32 %10, 0, !dbg !10415
  br i1 %11, label %17, label %12, !dbg !10416

12:                                               ; preds = %7
  %13 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10417
  %14 = getelementptr inbounds %struct.mystr, %struct.mystr* %13, i32 0, i32 2, !dbg !10418
  %15 = load i32, i32* %14, align 4, !dbg !10418
  %16 = icmp ne i32 %15, 0, !dbg !10419
  br i1 %16, label %17, label %18, !dbg !10420

17:                                               ; preds = %12, %7
  call void @bug(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.451, i32 0, i32 0)), !dbg !10421
  br label %18, !dbg !10423

18:                                               ; preds = %17, %12
  %19 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10424
  call void @private_str_alloc_memchunk(%struct.mystr* %19, i8* null, i32 0), !dbg !10425
  br label %20, !dbg !10426

20:                                               ; preds = %18, %1
  %21 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10427
  %22 = getelementptr inbounds %struct.mystr, %struct.mystr* %21, i32 0, i32 0, !dbg !10428
  %23 = load i8*, i8** %22, align 8, !dbg !10428
  ret i8* %23, !dbg !10429
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_alloc_alt_term(%struct.mystr*, i8*, i8 signext) #0 !dbg !10430 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10433, metadata !DIExpression()), !dbg !10434
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10435, metadata !DIExpression()), !dbg !10436
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10437, metadata !DIExpression()), !dbg !10438
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10439, metadata !DIExpression()), !dbg !10440
  %9 = load i8*, i8** %5, align 8, !dbg !10441
  store i8* %9, i8** %7, align 8, !dbg !10440
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10442, metadata !DIExpression()), !dbg !10443
  store i32 0, i32* %8, align 4, !dbg !10443
  br label %10, !dbg !10444

10:                                               ; preds = %25, %3
  %11 = load i8*, i8** %7, align 8, !dbg !10445
  %12 = load i8, i8* %11, align 1, !dbg !10446
  %13 = sext i8 %12 to i32, !dbg !10446
  %14 = load i8, i8* %6, align 1, !dbg !10447
  %15 = sext i8 %14 to i32, !dbg !10447
  %16 = icmp ne i32 %13, %15, !dbg !10448
  br i1 %16, label %17, label %26, !dbg !10444

17:                                               ; preds = %10
  %18 = load i8*, i8** %7, align 8, !dbg !10449
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !10449
  store i8* %19, i8** %7, align 8, !dbg !10449
  %20 = load i32, i32* %8, align 4, !dbg !10451
  %21 = add i32 %20, 1, !dbg !10451
  store i32 %21, i32* %8, align 4, !dbg !10451
  %22 = load i32, i32* %8, align 4, !dbg !10452
  %23 = icmp eq i32 %22, 0, !dbg !10454
  br i1 %23, label %24, label %25, !dbg !10455

24:                                               ; preds = %17
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i32 0, i32 0)), !dbg !10456
  br label %25, !dbg !10458

25:                                               ; preds = %24, %17
  br label %10, !dbg !10444, !llvm.loop !10459

26:                                               ; preds = %10
  %27 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10461
  %28 = load i8*, i8** %5, align 8, !dbg !10462
  %29 = load i32, i32* %8, align 4, !dbg !10463
  call void @private_str_alloc_memchunk(%struct.mystr* %27, i8* %28, i32 %29), !dbg !10464
  ret void, !dbg !10465
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_alloc_ulong(%struct.mystr*, i64) #0 !dbg !10466 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i64, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10469, metadata !DIExpression()), !dbg !10470
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10471, metadata !DIExpression()), !dbg !10472
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10473
  %6 = load i64, i64* %4, align 8, !dbg !10474
  %7 = call i8* @vsf_sysutil_ulong_to_str(i64 %6), !dbg !10475
  call void @str_alloc_text(%struct.mystr* %5, i8* %7), !dbg !10476
  ret void, !dbg !10477
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_alloc_filesize_t(%struct.mystr*, i64) #0 !dbg !10478 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i64, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10481, metadata !DIExpression()), !dbg !10482
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10483, metadata !DIExpression()), !dbg !10484
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10485
  %6 = load i64, i64* %4, align 8, !dbg !10486
  %7 = call i8* @vsf_sysutil_filesize_t_to_str(i64 %6), !dbg !10487
  call void @str_alloc_text(%struct.mystr* %5, i8* %7), !dbg !10488
  ret void, !dbg !10489
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_empty(%struct.mystr*) #0 !dbg !10490 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !10491, metadata !DIExpression()), !dbg !10492
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10493
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !10494
  %5 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10495
  call void @str_trunc(%struct.mystr* %5, i32 0), !dbg !10496
  ret void, !dbg !10497
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_trunc(%struct.mystr*, i32) #0 !dbg !10498 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10501, metadata !DIExpression()), !dbg !10502
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10503, metadata !DIExpression()), !dbg !10504
  %5 = load i32, i32* %4, align 4, !dbg !10505
  %6 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10507
  %7 = getelementptr inbounds %struct.mystr, %struct.mystr* %6, i32 0, i32 2, !dbg !10508
  %8 = load i32, i32* %7, align 4, !dbg !10508
  %9 = icmp uge i32 %5, %8, !dbg !10509
  br i1 %9, label %10, label %11, !dbg !10510

10:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.460, i32 0, i32 0)), !dbg !10511
  br label %11, !dbg !10513

11:                                               ; preds = %10, %2
  %12 = load i32, i32* %4, align 4, !dbg !10514
  %13 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10515
  %14 = getelementptr inbounds %struct.mystr, %struct.mystr* %13, i32 0, i32 1, !dbg !10516
  store i32 %12, i32* %14, align 8, !dbg !10517
  %15 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10518
  %16 = getelementptr inbounds %struct.mystr, %struct.mystr* %15, i32 0, i32 0, !dbg !10519
  %17 = load i8*, i8** %16, align 8, !dbg !10519
  %18 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10520
  %19 = getelementptr inbounds %struct.mystr, %struct.mystr* %18, i32 0, i32 1, !dbg !10521
  %20 = load i32, i32* %19, align 8, !dbg !10521
  %21 = zext i32 %20 to i64, !dbg !10518
  %22 = getelementptr inbounds i8, i8* %17, i64 %21, !dbg !10518
  store i8 0, i8* %22, align 1, !dbg !10522
  ret void, !dbg !10523
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_reserve(%struct.mystr*, i32) #0 !dbg !10524 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10525, metadata !DIExpression()), !dbg !10526
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10527, metadata !DIExpression()), !dbg !10528
  %5 = load i32, i32* %4, align 4, !dbg !10529
  %6 = add i32 %5, 1, !dbg !10529
  store i32 %6, i32* %4, align 4, !dbg !10529
  %7 = load i32, i32* %4, align 4, !dbg !10530
  %8 = icmp eq i32 %7, 0, !dbg !10532
  br i1 %8, label %9, label %10, !dbg !10533

9:                                                ; preds = %2
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i32 0, i32 0)), !dbg !10534
  br label %10, !dbg !10536

10:                                               ; preds = %9, %2
  %11 = load i32, i32* %4, align 4, !dbg !10537
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10539
  %13 = getelementptr inbounds %struct.mystr, %struct.mystr* %12, i32 0, i32 2, !dbg !10540
  %14 = load i32, i32* %13, align 4, !dbg !10540
  %15 = icmp ugt i32 %11, %14, !dbg !10541
  br i1 %15, label %16, label %27, !dbg !10542

16:                                               ; preds = %10
  %17 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10543
  %18 = getelementptr inbounds %struct.mystr, %struct.mystr* %17, i32 0, i32 0, !dbg !10545
  %19 = load i8*, i8** %18, align 8, !dbg !10545
  %20 = load i32, i32* %4, align 4, !dbg !10546
  %21 = call i8* @vsf_sysutil_realloc(i8* %19, i32 %20), !dbg !10547
  %22 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10548
  %23 = getelementptr inbounds %struct.mystr, %struct.mystr* %22, i32 0, i32 0, !dbg !10549
  store i8* %21, i8** %23, align 8, !dbg !10550
  %24 = load i32, i32* %4, align 4, !dbg !10551
  %25 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10552
  %26 = getelementptr inbounds %struct.mystr, %struct.mystr* %25, i32 0, i32 2, !dbg !10553
  store i32 %24, i32* %26, align 4, !dbg !10554
  br label %27, !dbg !10555

27:                                               ; preds = %16, %10
  %28 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10556
  %29 = getelementptr inbounds %struct.mystr, %struct.mystr* %28, i32 0, i32 0, !dbg !10557
  %30 = load i8*, i8** %29, align 8, !dbg !10557
  %31 = load i32, i32* %4, align 4, !dbg !10558
  %32 = sub i32 %31, 1, !dbg !10559
  %33 = zext i32 %32 to i64, !dbg !10556
  %34 = getelementptr inbounds i8, i8* %30, i64 %33, !dbg !10556
  store i8 0, i8* %34, align 1, !dbg !10560
  ret void, !dbg !10561
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_isempty(%struct.mystr*) #0 !dbg !10562 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !10565, metadata !DIExpression()), !dbg !10566
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10567
  %4 = getelementptr inbounds %struct.mystr, %struct.mystr* %3, i32 0, i32 1, !dbg !10568
  %5 = load i32, i32* %4, align 8, !dbg !10568
  %6 = icmp eq i32 %5, 0, !dbg !10569
  %7 = zext i1 %6 to i32, !dbg !10569
  ret i32 %7, !dbg !10570
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_getlen(%struct.mystr*) #0 !dbg !10571 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !10574, metadata !DIExpression()), !dbg !10575
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10576
  %4 = getelementptr inbounds %struct.mystr, %struct.mystr* %3, i32 0, i32 1, !dbg !10577
  %5 = load i32, i32* %4, align 8, !dbg !10577
  ret i32 %5, !dbg !10578
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_strcmp(%struct.mystr*, %struct.mystr*) #0 !dbg !10579 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10580, metadata !DIExpression()), !dbg !10581
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10582, metadata !DIExpression()), !dbg !10583
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10584
  %6 = getelementptr inbounds %struct.mystr, %struct.mystr* %5, i32 0, i32 0, !dbg !10585
  %7 = load i8*, i8** %6, align 8, !dbg !10585
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10586
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 1, !dbg !10587
  %10 = load i32, i32* %9, align 8, !dbg !10587
  %11 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10588
  %12 = getelementptr inbounds %struct.mystr, %struct.mystr* %11, i32 0, i32 0, !dbg !10589
  %13 = load i8*, i8** %12, align 8, !dbg !10589
  %14 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10590
  %15 = getelementptr inbounds %struct.mystr, %struct.mystr* %14, i32 0, i32 1, !dbg !10591
  %16 = load i32, i32* %15, align 8, !dbg !10591
  %17 = call i32 @str_equal_internal(i8* %7, i32 %10, i8* %13, i32 %16), !dbg !10592
  ret i32 %17, !dbg !10593
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @str_equal_internal(i8*, i32, i8*, i32) #0 !dbg !10594 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10597, metadata !DIExpression()), !dbg !10598
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10599, metadata !DIExpression()), !dbg !10600
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10601, metadata !DIExpression()), !dbg !10602
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10603, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10605, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10607, metadata !DIExpression()), !dbg !10608
  %12 = load i32, i32* %7, align 4, !dbg !10609
  store i32 %12, i32* %11, align 4, !dbg !10608
  %13 = load i32, i32* %9, align 4, !dbg !10610
  %14 = load i32, i32* %11, align 4, !dbg !10612
  %15 = icmp ult i32 %13, %14, !dbg !10613
  br i1 %15, label %16, label %18, !dbg !10614

16:                                               ; preds = %4
  %17 = load i32, i32* %9, align 4, !dbg !10615
  store i32 %17, i32* %11, align 4, !dbg !10617
  br label %18, !dbg !10618

18:                                               ; preds = %16, %4
  %19 = load i8*, i8** %6, align 8, !dbg !10619
  %20 = load i8*, i8** %8, align 8, !dbg !10620
  %21 = load i32, i32* %11, align 4, !dbg !10621
  %22 = call i32 @vsf_sysutil_memcmp(i8* %19, i8* %20, i32 %21), !dbg !10622
  store i32 %22, i32* %10, align 4, !dbg !10623
  %23 = load i32, i32* %10, align 4, !dbg !10624
  %24 = icmp ne i32 %23, 0, !dbg !10626
  br i1 %24, label %29, label %25, !dbg !10627

25:                                               ; preds = %18
  %26 = load i32, i32* %7, align 4, !dbg !10628
  %27 = load i32, i32* %9, align 4, !dbg !10629
  %28 = icmp eq i32 %26, %27, !dbg !10630
  br i1 %28, label %29, label %31, !dbg !10631

29:                                               ; preds = %25, %18
  %30 = load i32, i32* %10, align 4, !dbg !10632
  store i32 %30, i32* %5, align 4, !dbg !10634
  br label %35, !dbg !10634

31:                                               ; preds = %25
  %32 = load i32, i32* %7, align 4, !dbg !10635
  %33 = load i32, i32* %9, align 4, !dbg !10636
  %34 = sub i32 %32, %33, !dbg !10637
  store i32 %34, i32* %5, align 4, !dbg !10638
  br label %35, !dbg !10638

35:                                               ; preds = %31, %29
  %36 = load i32, i32* %5, align 4, !dbg !10639
  ret i32 %36, !dbg !10639
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_equal(%struct.mystr*, %struct.mystr*) #0 !dbg !10640 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10641, metadata !DIExpression()), !dbg !10642
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10643, metadata !DIExpression()), !dbg !10644
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10645
  %6 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10646
  %7 = call i32 @str_strcmp(%struct.mystr* %5, %struct.mystr* %6), !dbg !10647
  %8 = icmp eq i32 %7, 0, !dbg !10648
  %9 = zext i1 %8 to i32, !dbg !10648
  ret i32 %9, !dbg !10649
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_equal_text(%struct.mystr*, i8*) #0 !dbg !10650 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10653, metadata !DIExpression()), !dbg !10654
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10655, metadata !DIExpression()), !dbg !10656
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10657, metadata !DIExpression()), !dbg !10658
  %6 = load i8*, i8** %4, align 8, !dbg !10659
  %7 = call i32 @vsf_sysutil_strlen(i8* %6), !dbg !10660
  store i32 %7, i32* %5, align 4, !dbg !10658
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10661
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 0, !dbg !10662
  %10 = load i8*, i8** %9, align 8, !dbg !10662
  %11 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10663
  %12 = getelementptr inbounds %struct.mystr, %struct.mystr* %11, i32 0, i32 1, !dbg !10664
  %13 = load i32, i32* %12, align 8, !dbg !10664
  %14 = load i8*, i8** %4, align 8, !dbg !10665
  %15 = load i32, i32* %5, align 4, !dbg !10666
  %16 = call i32 @str_equal_internal(i8* %10, i32 %13, i8* %14, i32 %15), !dbg !10667
  %17 = icmp eq i32 %16, 0, !dbg !10668
  %18 = zext i1 %17 to i32, !dbg !10668
  ret i32 %18, !dbg !10669
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_append_str(%struct.mystr*, %struct.mystr*) #0 !dbg !10670 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10671, metadata !DIExpression()), !dbg !10672
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10673, metadata !DIExpression()), !dbg !10674
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10675
  %6 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10676
  %7 = getelementptr inbounds %struct.mystr, %struct.mystr* %6, i32 0, i32 0, !dbg !10677
  %8 = load i8*, i8** %7, align 8, !dbg !10677
  %9 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10678
  %10 = getelementptr inbounds %struct.mystr, %struct.mystr* %9, i32 0, i32 1, !dbg !10679
  %11 = load i32, i32* %10, align 8, !dbg !10679
  call void @private_str_append_memchunk(%struct.mystr* %5, i8* %8, i32 %11), !dbg !10680
  ret void, !dbg !10681
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_append_text(%struct.mystr*, i8*) #0 !dbg !10682 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10683, metadata !DIExpression()), !dbg !10684
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10685, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10687, metadata !DIExpression()), !dbg !10688
  %6 = load i8*, i8** %4, align 8, !dbg !10689
  %7 = call i32 @vsf_sysutil_strlen(i8* %6), !dbg !10690
  store i32 %7, i32* %5, align 4, !dbg !10688
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10691
  %9 = load i8*, i8** %4, align 8, !dbg !10692
  %10 = load i32, i32* %5, align 4, !dbg !10693
  call void @private_str_append_memchunk(%struct.mystr* %8, i8* %9, i32 %10), !dbg !10694
  ret void, !dbg !10695
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_append_char(%struct.mystr*, i8 signext) #0 !dbg !10696 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i8, align 1
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10699, metadata !DIExpression()), !dbg !10700
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10701, metadata !DIExpression()), !dbg !10702
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10703
  call void @private_str_append_memchunk(%struct.mystr* %5, i8* %4, i32 1), !dbg !10704
  ret void, !dbg !10705
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_append_ulong(%struct.mystr*, i64) #0 !dbg !10706 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i64, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10707, metadata !DIExpression()), !dbg !10708
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10709, metadata !DIExpression()), !dbg !10710
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10711
  %6 = load i64, i64* %4, align 8, !dbg !10712
  %7 = call i8* @vsf_sysutil_ulong_to_str(i64 %6), !dbg !10713
  call void @str_append_text(%struct.mystr* %5, i8* %7), !dbg !10714
  ret void, !dbg !10715
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_append_filesize_t(%struct.mystr*, i64) #0 !dbg !10716 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i64, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10717, metadata !DIExpression()), !dbg !10718
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10719, metadata !DIExpression()), !dbg !10720
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10721
  %6 = load i64, i64* %4, align 8, !dbg !10722
  %7 = call i8* @vsf_sysutil_filesize_t_to_str(i64 %6), !dbg !10723
  call void @str_append_text(%struct.mystr* %5, i8* %7), !dbg !10724
  ret void, !dbg !10725
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_append_double(%struct.mystr*, double) #0 !dbg !10726 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca double, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10729, metadata !DIExpression()), !dbg !10730
  store double %1, double* %4, align 8
  call void @llvm.dbg.declare(metadata double* %4, metadata !10731, metadata !DIExpression()), !dbg !10732
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10733
  %6 = load double, double* %4, align 8, !dbg !10734
  %7 = call i8* @vsf_sysutil_double_to_str(double %6), !dbg !10735
  call void @str_append_text(%struct.mystr* %5, i8* %7), !dbg !10736
  ret void, !dbg !10737
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_upper(%struct.mystr*) #0 !dbg !10738 {
  %2 = alloca %struct.mystr*, align 8
  %3 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !10739, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10741, metadata !DIExpression()), !dbg !10742
  store i32 0, i32* %3, align 4, !dbg !10743
  br label %4, !dbg !10745

4:                                                ; preds = %27, %1
  %5 = load i32, i32* %3, align 4, !dbg !10746
  %6 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10748
  %7 = getelementptr inbounds %struct.mystr, %struct.mystr* %6, i32 0, i32 1, !dbg !10749
  %8 = load i32, i32* %7, align 8, !dbg !10749
  %9 = icmp ult i32 %5, %8, !dbg !10750
  br i1 %9, label %10, label %30, !dbg !10751

10:                                               ; preds = %4
  %11 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10752
  %12 = getelementptr inbounds %struct.mystr, %struct.mystr* %11, i32 0, i32 0, !dbg !10754
  %13 = load i8*, i8** %12, align 8, !dbg !10754
  %14 = load i32, i32* %3, align 4, !dbg !10755
  %15 = zext i32 %14 to i64, !dbg !10752
  %16 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !10752
  %17 = load i8, i8* %16, align 1, !dbg !10752
  %18 = sext i8 %17 to i32, !dbg !10752
  %19 = call i32 @vsf_sysutil_toupper(i32 %18), !dbg !10756
  %20 = trunc i32 %19 to i8, !dbg !10757
  %21 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !10758
  %22 = getelementptr inbounds %struct.mystr, %struct.mystr* %21, i32 0, i32 0, !dbg !10759
  %23 = load i8*, i8** %22, align 8, !dbg !10759
  %24 = load i32, i32* %3, align 4, !dbg !10760
  %25 = zext i32 %24 to i64, !dbg !10758
  %26 = getelementptr inbounds i8, i8* %23, i64 %25, !dbg !10758
  store i8 %20, i8* %26, align 1, !dbg !10761
  br label %27, !dbg !10762

27:                                               ; preds = %10
  %28 = load i32, i32* %3, align 4, !dbg !10763
  %29 = add i32 %28, 1, !dbg !10763
  store i32 %29, i32* %3, align 4, !dbg !10763
  br label %4, !dbg !10764, !llvm.loop !10765

30:                                               ; preds = %4
  ret void, !dbg !10767
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_rpad(%struct.mystr*, i32) #0 !dbg !10768 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10769, metadata !DIExpression()), !dbg !10770
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10773, metadata !DIExpression()), !dbg !10774
  %6 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10775
  %7 = getelementptr inbounds %struct.mystr, %struct.mystr* %6, i32 0, i32 1, !dbg !10777
  %8 = load i32, i32* %7, align 8, !dbg !10777
  %9 = load i32, i32* %4, align 4, !dbg !10778
  %10 = icmp uge i32 %8, %9, !dbg !10779
  br i1 %10, label %11, label %12, !dbg !10780

11:                                               ; preds = %2
  br label %24, !dbg !10781

12:                                               ; preds = %2
  %13 = load i32, i32* %4, align 4, !dbg !10783
  %14 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10784
  %15 = getelementptr inbounds %struct.mystr, %struct.mystr* %14, i32 0, i32 1, !dbg !10785
  %16 = load i32, i32* %15, align 8, !dbg !10785
  %17 = sub i32 %13, %16, !dbg !10786
  store i32 %17, i32* %5, align 4, !dbg !10787
  br label %18, !dbg !10788

18:                                               ; preds = %22, %12
  %19 = load i32, i32* %5, align 4, !dbg !10789
  %20 = add i32 %19, -1, !dbg !10789
  store i32 %20, i32* %5, align 4, !dbg !10789
  %21 = icmp ne i32 %19, 0, !dbg !10788
  br i1 %21, label %22, label %24, !dbg !10788

22:                                               ; preds = %18
  %23 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10790
  call void @str_append_char(%struct.mystr* %23, i8 signext 32), !dbg !10792
  br label %18, !dbg !10788, !llvm.loop !10793

24:                                               ; preds = %11, %18
  ret void, !dbg !10795
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_lpad(%struct.mystr*, i32) #0 !dbg !840 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !10796, metadata !DIExpression()), !dbg !10797
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10798, metadata !DIExpression()), !dbg !10799
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10800, metadata !DIExpression()), !dbg !10801
  %6 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10802
  %7 = getelementptr inbounds %struct.mystr, %struct.mystr* %6, i32 0, i32 1, !dbg !10804
  %8 = load i32, i32* %7, align 8, !dbg !10804
  %9 = load i32, i32* %4, align 4, !dbg !10805
  %10 = icmp uge i32 %8, %9, !dbg !10806
  br i1 %10, label %11, label %12, !dbg !10807

11:                                               ; preds = %2
  br label %26, !dbg !10808

12:                                               ; preds = %2
  %13 = load i32, i32* %4, align 4, !dbg !10810
  %14 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10811
  %15 = getelementptr inbounds %struct.mystr, %struct.mystr* %14, i32 0, i32 1, !dbg !10812
  %16 = load i32, i32* %15, align 8, !dbg !10812
  %17 = sub i32 %13, %16, !dbg !10813
  store i32 %17, i32* %5, align 4, !dbg !10814
  call void @str_empty(%struct.mystr* @str_lpad.s_tmp_str), !dbg !10815
  br label %18, !dbg !10816

18:                                               ; preds = %22, %12
  %19 = load i32, i32* %5, align 4, !dbg !10817
  %20 = add i32 %19, -1, !dbg !10817
  store i32 %20, i32* %5, align 4, !dbg !10817
  %21 = icmp ne i32 %19, 0, !dbg !10816
  br i1 %21, label %22, label %23, !dbg !10816

22:                                               ; preds = %18
  call void @str_append_char(%struct.mystr* @str_lpad.s_tmp_str, i8 signext 32), !dbg !10818
  br label %18, !dbg !10816, !llvm.loop !10820

23:                                               ; preds = %18
  %24 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10822
  call void @str_append_str(%struct.mystr* @str_lpad.s_tmp_str, %struct.mystr* %24), !dbg !10823
  %25 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !10824
  call void @str_copy(%struct.mystr* %25, %struct.mystr* @str_lpad.s_tmp_str), !dbg !10825
  br label %26, !dbg !10826

26:                                               ; preds = %23, %11
  ret void, !dbg !10826
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_replace_char(%struct.mystr*, i8 signext, i8 signext) #0 !dbg !10827 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10830, metadata !DIExpression()), !dbg !10831
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10832, metadata !DIExpression()), !dbg !10833
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10836, metadata !DIExpression()), !dbg !10837
  store i32 0, i32* %7, align 4, !dbg !10838
  br label %8, !dbg !10840

8:                                                ; preds = %35, %3
  %9 = load i32, i32* %7, align 4, !dbg !10841
  %10 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10843
  %11 = getelementptr inbounds %struct.mystr, %struct.mystr* %10, i32 0, i32 1, !dbg !10844
  %12 = load i32, i32* %11, align 8, !dbg !10844
  %13 = icmp ult i32 %9, %12, !dbg !10845
  br i1 %13, label %14, label %38, !dbg !10846

14:                                               ; preds = %8
  %15 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10847
  %16 = getelementptr inbounds %struct.mystr, %struct.mystr* %15, i32 0, i32 0, !dbg !10850
  %17 = load i8*, i8** %16, align 8, !dbg !10850
  %18 = load i32, i32* %7, align 4, !dbg !10851
  %19 = zext i32 %18 to i64, !dbg !10847
  %20 = getelementptr inbounds i8, i8* %17, i64 %19, !dbg !10847
  %21 = load i8, i8* %20, align 1, !dbg !10847
  %22 = sext i8 %21 to i32, !dbg !10847
  %23 = load i8, i8* %5, align 1, !dbg !10852
  %24 = sext i8 %23 to i32, !dbg !10852
  %25 = icmp eq i32 %22, %24, !dbg !10853
  br i1 %25, label %26, label %34, !dbg !10854

26:                                               ; preds = %14
  %27 = load i8, i8* %6, align 1, !dbg !10855
  %28 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10857
  %29 = getelementptr inbounds %struct.mystr, %struct.mystr* %28, i32 0, i32 0, !dbg !10858
  %30 = load i8*, i8** %29, align 8, !dbg !10858
  %31 = load i32, i32* %7, align 4, !dbg !10859
  %32 = zext i32 %31 to i64, !dbg !10857
  %33 = getelementptr inbounds i8, i8* %30, i64 %32, !dbg !10857
  store i8 %27, i8* %33, align 1, !dbg !10860
  br label %34, !dbg !10861

34:                                               ; preds = %26, %14
  br label %35, !dbg !10862

35:                                               ; preds = %34
  %36 = load i32, i32* %7, align 4, !dbg !10863
  %37 = add i32 %36, 1, !dbg !10863
  store i32 %37, i32* %7, align 4, !dbg !10863
  br label %8, !dbg !10864, !llvm.loop !10865

38:                                               ; preds = %8
  ret void, !dbg !10867
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_replace_text(%struct.mystr*, i8*, i8*) #0 !dbg !856 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10868, metadata !DIExpression()), !dbg !10869
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10870, metadata !DIExpression()), !dbg !10871
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10872, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10874, metadata !DIExpression()), !dbg !10875
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10876
  call void @str_copy(%struct.mystr* @str_replace_text.s_lhs_chunk_str, %struct.mystr* %8), !dbg !10877
  %9 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10878
  call void @str_free(%struct.mystr* %9), !dbg !10879
  br label %10, !dbg !10880, !llvm.loop !10881

10:                                               ; preds = %21, %3
  %11 = call i32 @str_getlen(%struct.mystr* @str_replace_text.s_lhs_chunk_str), !dbg !10883
  store i32 %11, i32* %7, align 4, !dbg !10885
  %12 = load i8*, i8** %5, align 8, !dbg !10886
  call void @str_split_text(%struct.mystr* @str_replace_text.s_lhs_chunk_str, %struct.mystr* @str_replace_text.s_rhs_chunk_str, i8* %12), !dbg !10887
  %13 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10888
  call void @str_append_str(%struct.mystr* %13, %struct.mystr* @str_replace_text.s_lhs_chunk_str), !dbg !10889
  %14 = call i32 @str_getlen(%struct.mystr* @str_replace_text.s_lhs_chunk_str), !dbg !10890
  %15 = load i32, i32* %7, align 4, !dbg !10892
  %16 = icmp ult i32 %14, %15, !dbg !10893
  br i1 %16, label %17, label %20, !dbg !10894

17:                                               ; preds = %10
  %18 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10895
  %19 = load i8*, i8** %6, align 8, !dbg !10897
  call void @str_append_text(%struct.mystr* %18, i8* %19), !dbg !10898
  br label %20, !dbg !10899

20:                                               ; preds = %17, %10
  call void @str_copy(%struct.mystr* @str_replace_text.s_lhs_chunk_str, %struct.mystr* @str_replace_text.s_rhs_chunk_str), !dbg !10900
  br label %21, !dbg !10901

21:                                               ; preds = %20
  %22 = call i32 @str_isempty(%struct.mystr* @str_replace_text.s_lhs_chunk_str), !dbg !10902
  %23 = icmp ne i32 %22, 0, !dbg !10903
  %24 = xor i1 %23, true, !dbg !10903
  br i1 %24, label %10, label %25, !dbg !10901, !llvm.loop !10881

25:                                               ; preds = %21
  ret void, !dbg !10904
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_split_text(%struct.mystr*, %struct.mystr*, i8*) #0 !dbg !10905 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i8*, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10908, metadata !DIExpression()), !dbg !10909
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !10910, metadata !DIExpression()), !dbg !10911
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10912, metadata !DIExpression()), !dbg !10913
  %7 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !10914
  %8 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !10915
  %9 = load i8*, i8** %6, align 8, !dbg !10916
  call void @str_split_text_common(%struct.mystr* %7, %struct.mystr* %8, i8* %9, i32 0), !dbg !10917
  ret void, !dbg !10918
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @str_split_text_common(%struct.mystr*, %struct.mystr*, i8*, i32) #0 !dbg !10919 {
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.str_locate_result, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.str_locate_result, align 4
  %13 = alloca { i64, i8 }, align 8
  %14 = alloca %struct.str_locate_result, align 4
  %15 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !10922, metadata !DIExpression()), !dbg !10923
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !10924, metadata !DIExpression()), !dbg !10925
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10926, metadata !DIExpression()), !dbg !10927
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10928, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %9, metadata !10930, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10937, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10939, metadata !DIExpression()), !dbg !10940
  %16 = load i8*, i8** %7, align 8, !dbg !10941
  %17 = call i32 @vsf_sysutil_strlen(i8* %16), !dbg !10942
  store i32 %17, i32* %11, align 4, !dbg !10940
  %18 = load i32, i32* %8, align 4, !dbg !10943
  %19 = icmp ne i32 %18, 0, !dbg !10943
  br i1 %19, label %20, label %28, !dbg !10945

20:                                               ; preds = %4
  %21 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !10946
  %22 = load i8*, i8** %7, align 8, !dbg !10948
  %23 = call { i64, i8 } @str_locate_text_reverse(%struct.mystr* %21, i8* %22), !dbg !10949
  store { i64, i8 } %23, { i64, i8 }* %13, align 8, !dbg !10949
  %24 = bitcast { i64, i8 }* %13 to i8*, !dbg !10949
  %25 = bitcast %struct.str_locate_result* %12 to i8*, !dbg !10949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %24, i64 12, i1 false), !dbg !10949
  %26 = bitcast %struct.str_locate_result* %9 to i8*, !dbg !10949
  %27 = bitcast %struct.str_locate_result* %12 to i8*, !dbg !10949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 12, i1 false), !dbg !10949
  br label %36, !dbg !10950

28:                                               ; preds = %4
  %29 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !10951
  %30 = load i8*, i8** %7, align 8, !dbg !10953
  %31 = call { i64, i8 } @str_locate_text(%struct.mystr* %29, i8* %30), !dbg !10954
  store { i64, i8 } %31, { i64, i8 }* %15, align 8, !dbg !10954
  %32 = bitcast { i64, i8 }* %15 to i8*, !dbg !10954
  %33 = bitcast %struct.str_locate_result* %14 to i8*, !dbg !10954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %32, i64 12, i1 false), !dbg !10954
  %34 = bitcast %struct.str_locate_result* %9 to i8*, !dbg !10954
  %35 = bitcast %struct.str_locate_result* %14 to i8*, !dbg !10954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 12, i1 false), !dbg !10954
  br label %36

36:                                               ; preds = %28, %20
  %37 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %9, i32 0, i32 0, !dbg !10955
  %38 = load i32, i32* %37, align 4, !dbg !10955
  %39 = icmp ne i32 %38, 0, !dbg !10957
  br i1 %39, label %42, label %40, !dbg !10958

40:                                               ; preds = %36
  %41 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !10959
  call void @str_empty(%struct.mystr* %41), !dbg !10961
  br label %73, !dbg !10962

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %9, i32 0, i32 1, !dbg !10963
  %44 = load i32, i32* %43, align 4, !dbg !10963
  store i32 %44, i32* %10, align 4, !dbg !10964
  %45 = load i32, i32* %10, align 4, !dbg !10965
  %46 = load i32, i32* %11, align 4, !dbg !10967
  %47 = add i32 %45, %46, !dbg !10968
  %48 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !10969
  %49 = getelementptr inbounds %struct.mystr, %struct.mystr* %48, i32 0, i32 1, !dbg !10970
  %50 = load i32, i32* %49, align 8, !dbg !10970
  %51 = icmp ugt i32 %47, %50, !dbg !10971
  br i1 %51, label %52, label %53, !dbg !10972

52:                                               ; preds = %42
  call void @bug(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.493, i32 0, i32 0)), !dbg !10973
  br label %53, !dbg !10975

53:                                               ; preds = %52, %42
  %54 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !10976
  %55 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !10977
  %56 = getelementptr inbounds %struct.mystr, %struct.mystr* %55, i32 0, i32 0, !dbg !10978
  %57 = load i8*, i8** %56, align 8, !dbg !10978
  %58 = load i32, i32* %10, align 4, !dbg !10979
  %59 = zext i32 %58 to i64, !dbg !10980
  %60 = getelementptr inbounds i8, i8* %57, i64 %59, !dbg !10980
  %61 = load i32, i32* %11, align 4, !dbg !10981
  %62 = zext i32 %61 to i64, !dbg !10982
  %63 = getelementptr inbounds i8, i8* %60, i64 %62, !dbg !10982
  %64 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !10983
  %65 = getelementptr inbounds %struct.mystr, %struct.mystr* %64, i32 0, i32 1, !dbg !10984
  %66 = load i32, i32* %65, align 8, !dbg !10984
  %67 = load i32, i32* %10, align 4, !dbg !10985
  %68 = sub i32 %66, %67, !dbg !10986
  %69 = load i32, i32* %11, align 4, !dbg !10987
  %70 = sub i32 %68, %69, !dbg !10988
  call void @private_str_alloc_memchunk(%struct.mystr* %54, i8* %63, i32 %70), !dbg !10989
  %71 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !10990
  %72 = load i32, i32* %10, align 4, !dbg !10991
  call void @str_trunc(%struct.mystr* %71, i32 %72), !dbg !10992
  br label %73, !dbg !10993

73:                                               ; preds = %53, %40
  ret void, !dbg !10993
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i64, i8 } @str_locate_text_reverse(%struct.mystr*, i8*) #0 !dbg !10994 {
  %3 = alloca %struct.str_locate_result, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.str_locate_result, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !10997, metadata !DIExpression()), !dbg !10998
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10999, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %6, metadata !11001, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11003, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11005, metadata !DIExpression()), !dbg !11006
  %10 = load i8*, i8** %5, align 8, !dbg !11007
  %11 = call i32 @vsf_sysutil_strlen(i8* %10), !dbg !11008
  store i32 %11, i32* %8, align 4, !dbg !11006
  %12 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 0, !dbg !11009
  store i32 0, i32* %12, align 4, !dbg !11010
  %13 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 2, !dbg !11011
  store i8 0, i8* %13, align 4, !dbg !11012
  %14 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 1, !dbg !11013
  store i32 0, i32* %14, align 4, !dbg !11014
  %15 = load i32, i32* %8, align 4, !dbg !11015
  %16 = icmp eq i32 %15, 0, !dbg !11017
  br i1 %16, label %23, label %17, !dbg !11018

17:                                               ; preds = %2
  %18 = load i32, i32* %8, align 4, !dbg !11019
  %19 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11020
  %20 = getelementptr inbounds %struct.mystr, %struct.mystr* %19, i32 0, i32 1, !dbg !11021
  %21 = load i32, i32* %20, align 8, !dbg !11021
  %22 = icmp ugt i32 %18, %21, !dbg !11022
  br i1 %22, label %23, label %26, !dbg !11023

23:                                               ; preds = %17, %2
  %24 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11024
  %25 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false), !dbg !11024
  br label %59, !dbg !11026

26:                                               ; preds = %17
  %27 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11027
  %28 = getelementptr inbounds %struct.mystr, %struct.mystr* %27, i32 0, i32 1, !dbg !11028
  %29 = load i32, i32* %28, align 8, !dbg !11028
  %30 = load i32, i32* %8, align 4, !dbg !11029
  %31 = sub i32 %29, %30, !dbg !11030
  store i32 %31, i32* %7, align 4, !dbg !11031
  br label %32, !dbg !11032

32:                                               ; preds = %26, %53
  %33 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11033
  %34 = getelementptr inbounds %struct.mystr, %struct.mystr* %33, i32 0, i32 0, !dbg !11036
  %35 = load i8*, i8** %34, align 8, !dbg !11036
  %36 = load i32, i32* %7, align 4, !dbg !11037
  %37 = zext i32 %36 to i64, !dbg !11038
  %38 = getelementptr inbounds i8, i8* %35, i64 %37, !dbg !11038
  %39 = load i8*, i8** %5, align 8, !dbg !11039
  %40 = load i32, i32* %8, align 4, !dbg !11040
  %41 = call i32 @vsf_sysutil_memcmp(i8* %38, i8* %39, i32 %40), !dbg !11041
  %42 = icmp eq i32 %41, 0, !dbg !11042
  br i1 %42, label %43, label %49, !dbg !11043

43:                                               ; preds = %32
  %44 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 0, !dbg !11044
  store i32 1, i32* %44, align 4, !dbg !11046
  %45 = load i32, i32* %7, align 4, !dbg !11047
  %46 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 1, !dbg !11048
  store i32 %45, i32* %46, align 4, !dbg !11049
  %47 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11050
  %48 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11050
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 12, i1 false), !dbg !11050
  br label %59, !dbg !11051

49:                                               ; preds = %32
  %50 = load i32, i32* %7, align 4, !dbg !11052
  %51 = icmp eq i32 %50, 0, !dbg !11054
  br i1 %51, label %52, label %53, !dbg !11055

52:                                               ; preds = %49
  br label %56, !dbg !11056

53:                                               ; preds = %49
  %54 = load i32, i32* %7, align 4, !dbg !11058
  %55 = add i32 %54, -1, !dbg !11058
  store i32 %55, i32* %7, align 4, !dbg !11058
  br label %32, !dbg !11032, !llvm.loop !11059

56:                                               ; preds = %52
  %57 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11061
  %58 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 12, i1 false), !dbg !11061
  br label %59, !dbg !11062

59:                                               ; preds = %56, %43, %23
  %60 = bitcast { i64, i8 }* %9 to i8*, !dbg !11063
  %61 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 12, i1 false), !dbg !11063
  %62 = load { i64, i8 }, { i64, i8 }* %9, align 8, !dbg !11063
  ret { i64, i8 } %62, !dbg !11063
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i64, i8 } @str_locate_text(%struct.mystr*, i8*) #0 !dbg !11064 {
  %3 = alloca %struct.str_locate_result, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.str_locate_result, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11065, metadata !DIExpression()), !dbg !11066
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11067, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %6, metadata !11069, metadata !DIExpression()), !dbg !11070
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11071, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11073, metadata !DIExpression()), !dbg !11074
  %10 = load i8*, i8** %5, align 8, !dbg !11075
  %11 = call i32 @vsf_sysutil_strlen(i8* %10), !dbg !11076
  store i32 %11, i32* %8, align 4, !dbg !11074
  %12 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 0, !dbg !11077
  store i32 0, i32* %12, align 4, !dbg !11078
  %13 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 2, !dbg !11079
  store i8 0, i8* %13, align 4, !dbg !11080
  %14 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 1, !dbg !11081
  store i32 0, i32* %14, align 4, !dbg !11082
  %15 = load i32, i32* %8, align 4, !dbg !11083
  %16 = icmp eq i32 %15, 0, !dbg !11085
  br i1 %16, label %23, label %17, !dbg !11086

17:                                               ; preds = %2
  %18 = load i32, i32* %8, align 4, !dbg !11087
  %19 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11088
  %20 = getelementptr inbounds %struct.mystr, %struct.mystr* %19, i32 0, i32 1, !dbg !11089
  %21 = load i32, i32* %20, align 8, !dbg !11089
  %22 = icmp ugt i32 %18, %21, !dbg !11090
  br i1 %22, label %23, label %26, !dbg !11091

23:                                               ; preds = %17, %2
  %24 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11092
  %25 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false), !dbg !11092
  br label %59, !dbg !11094

26:                                               ; preds = %17
  store i32 0, i32* %7, align 4, !dbg !11095
  br label %27, !dbg !11097

27:                                               ; preds = %53, %26
  %28 = load i32, i32* %7, align 4, !dbg !11098
  %29 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11100
  %30 = getelementptr inbounds %struct.mystr, %struct.mystr* %29, i32 0, i32 1, !dbg !11101
  %31 = load i32, i32* %30, align 8, !dbg !11101
  %32 = load i32, i32* %8, align 4, !dbg !11102
  %33 = sub i32 %31, %32, !dbg !11103
  %34 = icmp ule i32 %28, %33, !dbg !11104
  br i1 %34, label %35, label %56, !dbg !11105

35:                                               ; preds = %27
  %36 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11106
  %37 = getelementptr inbounds %struct.mystr, %struct.mystr* %36, i32 0, i32 0, !dbg !11109
  %38 = load i8*, i8** %37, align 8, !dbg !11109
  %39 = load i32, i32* %7, align 4, !dbg !11110
  %40 = zext i32 %39 to i64, !dbg !11111
  %41 = getelementptr inbounds i8, i8* %38, i64 %40, !dbg !11111
  %42 = load i8*, i8** %5, align 8, !dbg !11112
  %43 = load i32, i32* %8, align 4, !dbg !11113
  %44 = call i32 @vsf_sysutil_memcmp(i8* %41, i8* %42, i32 %43), !dbg !11114
  %45 = icmp eq i32 %44, 0, !dbg !11115
  br i1 %45, label %46, label %52, !dbg !11116

46:                                               ; preds = %35
  %47 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 0, !dbg !11117
  store i32 1, i32* %47, align 4, !dbg !11119
  %48 = load i32, i32* %7, align 4, !dbg !11120
  %49 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 1, !dbg !11121
  store i32 %48, i32* %49, align 4, !dbg !11122
  %50 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11123
  %51 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 12, i1 false), !dbg !11123
  br label %59, !dbg !11124

52:                                               ; preds = %35
  br label %53, !dbg !11125

53:                                               ; preds = %52
  %54 = load i32, i32* %7, align 4, !dbg !11126
  %55 = add i32 %54, 1, !dbg !11126
  store i32 %55, i32* %7, align 4, !dbg !11126
  br label %27, !dbg !11127, !llvm.loop !11128

56:                                               ; preds = %27
  %57 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11130
  %58 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 12, i1 false), !dbg !11130
  br label %59, !dbg !11131

59:                                               ; preds = %56, %46, %23
  %60 = bitcast { i64, i8 }* %9 to i8*, !dbg !11132
  %61 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 12, i1 false), !dbg !11132
  %62 = load { i64, i8 }, { i64, i8 }* %9, align 8, !dbg !11132
  ret { i64, i8 } %62, !dbg !11132
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_split_char(%struct.mystr*, %struct.mystr*, i8 signext) #0 !dbg !11133 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i8, align 1
  %7 = alloca [2 x i8], align 1
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11136, metadata !DIExpression()), !dbg !11137
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11138, metadata !DIExpression()), !dbg !11139
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !11140, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.declare(metadata [2 x i8]* %7, metadata !11142, metadata !DIExpression()), !dbg !11146
  %8 = load i8, i8* %6, align 1, !dbg !11147
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0, !dbg !11148
  store i8 %8, i8* %9, align 1, !dbg !11149
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1, !dbg !11150
  store i8 0, i8* %10, align 1, !dbg !11151
  %11 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11152
  %12 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11153
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i32 0, i32 0, !dbg !11154
  call void @str_split_text(%struct.mystr* %11, %struct.mystr* %12, i8* %13), !dbg !11155
  ret void, !dbg !11156
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_split_char_reverse(%struct.mystr*, %struct.mystr*, i8 signext) #0 !dbg !11157 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i8, align 1
  %7 = alloca [2 x i8], align 1
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11158, metadata !DIExpression()), !dbg !11159
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11160, metadata !DIExpression()), !dbg !11161
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !11162, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata [2 x i8]* %7, metadata !11164, metadata !DIExpression()), !dbg !11165
  %8 = load i8, i8* %6, align 1, !dbg !11166
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0, !dbg !11167
  store i8 %8, i8* %9, align 1, !dbg !11168
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1, !dbg !11169
  store i8 0, i8* %10, align 1, !dbg !11170
  %11 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11171
  %12 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11172
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i32 0, i32 0, !dbg !11173
  call void @str_split_text_reverse(%struct.mystr* %11, %struct.mystr* %12, i8* %13), !dbg !11174
  ret void, !dbg !11175
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_split_text_reverse(%struct.mystr*, %struct.mystr*, i8*) #0 !dbg !11176 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i8*, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11177, metadata !DIExpression()), !dbg !11178
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11179, metadata !DIExpression()), !dbg !11180
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11181, metadata !DIExpression()), !dbg !11182
  %7 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11183
  %8 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11184
  %9 = load i8*, i8** %6, align 8, !dbg !11185
  call void @str_split_text_common(%struct.mystr* %7, %struct.mystr* %8, i8* %9, i32 1), !dbg !11186
  ret void, !dbg !11187
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i64, i8 } @str_locate_str(%struct.mystr*, %struct.mystr*) #0 !dbg !11188 {
  %3 = alloca %struct.str_locate_result, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca { i64, i8 }, align 8
  %7 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11191, metadata !DIExpression()), !dbg !11192
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11193, metadata !DIExpression()), !dbg !11194
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11195
  %9 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11196
  %10 = call i8* @str_getbuf(%struct.mystr* %9), !dbg !11197
  %11 = call { i64, i8 } @str_locate_text(%struct.mystr* %8, i8* %10), !dbg !11198
  store { i64, i8 } %11, { i64, i8 }* %6, align 8, !dbg !11198
  %12 = bitcast { i64, i8 }* %6 to i8*, !dbg !11198
  %13 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %12, i64 12, i1 false), !dbg !11198
  %14 = bitcast { i64, i8 }* %7 to i8*, !dbg !11199
  %15 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false), !dbg !11199
  %16 = load { i64, i8 }, { i64, i8 }* %7, align 8, !dbg !11199
  ret { i64, i8 } %16, !dbg !11199
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i64, i8 } @str_locate_str_reverse(%struct.mystr*, %struct.mystr*) #0 !dbg !11200 {
  %3 = alloca %struct.str_locate_result, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca { i64, i8 }, align 8
  %7 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11201, metadata !DIExpression()), !dbg !11202
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11203, metadata !DIExpression()), !dbg !11204
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11205
  %9 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11206
  %10 = call i8* @str_getbuf(%struct.mystr* %9), !dbg !11207
  %11 = call { i64, i8 } @str_locate_text_reverse(%struct.mystr* %8, i8* %10), !dbg !11208
  store { i64, i8 } %11, { i64, i8 }* %6, align 8, !dbg !11208
  %12 = bitcast { i64, i8 }* %6 to i8*, !dbg !11208
  %13 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %12, i64 12, i1 false), !dbg !11208
  %14 = bitcast { i64, i8 }* %7 to i8*, !dbg !11209
  %15 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false), !dbg !11209
  %16 = load { i64, i8 }, { i64, i8 }* %7, align 8, !dbg !11209
  ret { i64, i8 } %16, !dbg !11209
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i64, i8 } @str_locate_char(%struct.mystr*, i8 signext) #0 !dbg !11210 {
  %3 = alloca %struct.str_locate_result, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8, align 1
  %6 = alloca [2 x i8], align 1
  %7 = alloca { i64, i8 }, align 8
  %8 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11213, metadata !DIExpression()), !dbg !11214
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !11215, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.declare(metadata [2 x i8]* %6, metadata !11217, metadata !DIExpression()), !dbg !11218
  %9 = load i8, i8* %5, align 1, !dbg !11219
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 0, !dbg !11220
  store i8 %9, i8* %10, align 1, !dbg !11221
  %11 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 1, !dbg !11222
  store i8 0, i8* %11, align 1, !dbg !11223
  %12 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11224
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i32 0, i32 0, !dbg !11225
  %14 = call { i64, i8 } @str_locate_text(%struct.mystr* %12, i8* %13), !dbg !11226
  store { i64, i8 } %14, { i64, i8 }* %7, align 8, !dbg !11226
  %15 = bitcast { i64, i8 }* %7 to i8*, !dbg !11226
  %16 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11226
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %15, i64 12, i1 false), !dbg !11226
  %17 = bitcast { i64, i8 }* %8 to i8*, !dbg !11227
  %18 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 12, i1 false), !dbg !11227
  %19 = load { i64, i8 }, { i64, i8 }* %8, align 8, !dbg !11227
  ret { i64, i8 } %19, !dbg !11227
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i64, i8 } @str_locate_chars(%struct.mystr*, i8*) #0 !dbg !11228 {
  %3 = alloca %struct.str_locate_result, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.str_locate_result, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11229, metadata !DIExpression()), !dbg !11230
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11231, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %6, metadata !11233, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11235, metadata !DIExpression()), !dbg !11236
  %12 = load i8*, i8** %5, align 8, !dbg !11237
  %13 = call i32 @vsf_sysutil_strlen(i8* %12), !dbg !11238
  store i32 %13, i32* %7, align 4, !dbg !11236
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11239, metadata !DIExpression()), !dbg !11240
  store i32 0, i32* %8, align 4, !dbg !11240
  %14 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 0, !dbg !11241
  store i32 0, i32* %14, align 4, !dbg !11242
  %15 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 2, !dbg !11243
  store i8 0, i8* %15, align 4, !dbg !11244
  %16 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 1, !dbg !11245
  store i32 0, i32* %16, align 4, !dbg !11246
  br label %17, !dbg !11247

17:                                               ; preds = %62, %2
  %18 = load i32, i32* %8, align 4, !dbg !11248
  %19 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11251
  %20 = getelementptr inbounds %struct.mystr, %struct.mystr* %19, i32 0, i32 1, !dbg !11252
  %21 = load i32, i32* %20, align 8, !dbg !11252
  %22 = icmp ult i32 %18, %21, !dbg !11253
  br i1 %22, label %23, label %65, !dbg !11254

23:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11255, metadata !DIExpression()), !dbg !11257
  store i32 0, i32* %9, align 4, !dbg !11257
  call void @llvm.dbg.declare(metadata i8* %10, metadata !11258, metadata !DIExpression()), !dbg !11259
  %24 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11260
  %25 = getelementptr inbounds %struct.mystr, %struct.mystr* %24, i32 0, i32 0, !dbg !11261
  %26 = load i8*, i8** %25, align 8, !dbg !11261
  %27 = load i32, i32* %8, align 4, !dbg !11262
  %28 = zext i32 %27 to i64, !dbg !11260
  %29 = getelementptr inbounds i8, i8* %26, i64 %28, !dbg !11260
  %30 = load i8, i8* %29, align 1, !dbg !11260
  store i8 %30, i8* %10, align 1, !dbg !11259
  br label %31, !dbg !11263

31:                                               ; preds = %58, %23
  %32 = load i32, i32* %9, align 4, !dbg !11264
  %33 = load i32, i32* %7, align 4, !dbg !11267
  %34 = icmp ult i32 %32, %33, !dbg !11268
  br i1 %34, label %35, label %61, !dbg !11269

35:                                               ; preds = %31
  %36 = load i8*, i8** %5, align 8, !dbg !11270
  %37 = load i32, i32* %9, align 4, !dbg !11273
  %38 = zext i32 %37 to i64, !dbg !11270
  %39 = getelementptr inbounds i8, i8* %36, i64 %38, !dbg !11270
  %40 = load i8, i8* %39, align 1, !dbg !11270
  %41 = sext i8 %40 to i32, !dbg !11270
  %42 = load i8, i8* %10, align 1, !dbg !11274
  %43 = sext i8 %42 to i32, !dbg !11274
  %44 = icmp eq i32 %41, %43, !dbg !11275
  br i1 %44, label %45, label %57, !dbg !11276

45:                                               ; preds = %35
  %46 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 0, !dbg !11277
  store i32 1, i32* %46, align 4, !dbg !11279
  %47 = load i32, i32* %8, align 4, !dbg !11280
  %48 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 1, !dbg !11281
  store i32 %47, i32* %48, align 4, !dbg !11282
  %49 = load i8*, i8** %5, align 8, !dbg !11283
  %50 = load i32, i32* %9, align 4, !dbg !11284
  %51 = zext i32 %50 to i64, !dbg !11283
  %52 = getelementptr inbounds i8, i8* %49, i64 %51, !dbg !11283
  %53 = load i8, i8* %52, align 1, !dbg !11283
  %54 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 2, !dbg !11285
  store i8 %53, i8* %54, align 4, !dbg !11286
  %55 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11287
  %56 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 12, i1 false), !dbg !11287
  br label %68, !dbg !11288

57:                                               ; preds = %35
  br label %58, !dbg !11289

58:                                               ; preds = %57
  %59 = load i32, i32* %9, align 4, !dbg !11290
  %60 = add i32 %59, 1, !dbg !11290
  store i32 %60, i32* %9, align 4, !dbg !11290
  br label %31, !dbg !11291, !llvm.loop !11292

61:                                               ; preds = %31
  br label %62, !dbg !11294

62:                                               ; preds = %61
  %63 = load i32, i32* %8, align 4, !dbg !11295
  %64 = add i32 %63, 1, !dbg !11295
  store i32 %64, i32* %8, align 4, !dbg !11295
  br label %17, !dbg !11296, !llvm.loop !11297

65:                                               ; preds = %17
  %66 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11299
  %67 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !11299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 12, i1 false), !dbg !11299
  br label %68, !dbg !11300

68:                                               ; preds = %65, %45
  %69 = bitcast { i64, i8 }* %11 to i8*, !dbg !11301
  %70 = bitcast %struct.str_locate_result* %3 to i8*, !dbg !11301
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 12, i1 false), !dbg !11301
  %71 = load { i64, i8 }, { i64, i8 }* %11, align 8, !dbg !11301
  ret { i64, i8 } %71, !dbg !11301
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_left(%struct.mystr*, %struct.mystr*, i32) #0 !dbg !11302 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11305, metadata !DIExpression()), !dbg !11306
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11307, metadata !DIExpression()), !dbg !11308
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11309, metadata !DIExpression()), !dbg !11310
  %7 = load i32, i32* %6, align 4, !dbg !11311
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11313
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 1, !dbg !11314
  %10 = load i32, i32* %9, align 8, !dbg !11314
  %11 = icmp ugt i32 %7, %10, !dbg !11315
  br i1 %11, label %12, label %13, !dbg !11316

12:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.506, i32 0, i32 0)), !dbg !11317
  br label %13, !dbg !11319

13:                                               ; preds = %12, %3
  %14 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11320
  %15 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11321
  %16 = getelementptr inbounds %struct.mystr, %struct.mystr* %15, i32 0, i32 0, !dbg !11322
  %17 = load i8*, i8** %16, align 8, !dbg !11322
  %18 = load i32, i32* %6, align 4, !dbg !11323
  call void @private_str_alloc_memchunk(%struct.mystr* %14, i8* %17, i32 %18), !dbg !11324
  ret void, !dbg !11325
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_right(%struct.mystr*, %struct.mystr*, i32) #0 !dbg !11326 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11327, metadata !DIExpression()), !dbg !11328
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11329, metadata !DIExpression()), !dbg !11330
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11331, metadata !DIExpression()), !dbg !11332
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11333, metadata !DIExpression()), !dbg !11334
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11335
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 1, !dbg !11336
  %10 = load i32, i32* %9, align 8, !dbg !11336
  %11 = load i32, i32* %6, align 4, !dbg !11337
  %12 = sub i32 %10, %11, !dbg !11338
  store i32 %12, i32* %7, align 4, !dbg !11334
  %13 = load i32, i32* %6, align 4, !dbg !11339
  %14 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11341
  %15 = getelementptr inbounds %struct.mystr, %struct.mystr* %14, i32 0, i32 1, !dbg !11342
  %16 = load i32, i32* %15, align 8, !dbg !11342
  %17 = icmp ugt i32 %13, %16, !dbg !11343
  br i1 %17, label %18, label %19, !dbg !11344

18:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.509, i32 0, i32 0)), !dbg !11345
  br label %19, !dbg !11347

19:                                               ; preds = %18, %3
  %20 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11348
  %21 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11349
  %22 = getelementptr inbounds %struct.mystr, %struct.mystr* %21, i32 0, i32 0, !dbg !11350
  %23 = load i8*, i8** %22, align 8, !dbg !11350
  %24 = load i32, i32* %7, align 4, !dbg !11351
  %25 = zext i32 %24 to i64, !dbg !11352
  %26 = getelementptr inbounds i8, i8* %23, i64 %25, !dbg !11352
  %27 = load i32, i32* %6, align 4, !dbg !11353
  call void @private_str_alloc_memchunk(%struct.mystr* %20, i8* %26, i32 %27), !dbg !11354
  ret void, !dbg !11355
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_mid_to_end(%struct.mystr*, %struct.mystr*, i32) #0 !dbg !11356 {
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11357, metadata !DIExpression()), !dbg !11358
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11359, metadata !DIExpression()), !dbg !11360
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11361, metadata !DIExpression()), !dbg !11362
  %7 = load i32, i32* %6, align 4, !dbg !11363
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11365
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 1, !dbg !11366
  %10 = load i32, i32* %9, align 8, !dbg !11366
  %11 = icmp ugt i32 %7, %10, !dbg !11367
  br i1 %11, label %12, label %13, !dbg !11368

12:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.512, i32 0, i32 0)), !dbg !11369
  br label %13, !dbg !11371

13:                                               ; preds = %12, %3
  %14 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11372
  %15 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11373
  %16 = getelementptr inbounds %struct.mystr, %struct.mystr* %15, i32 0, i32 0, !dbg !11374
  %17 = load i8*, i8** %16, align 8, !dbg !11374
  %18 = load i32, i32* %6, align 4, !dbg !11375
  %19 = zext i32 %18 to i64, !dbg !11376
  %20 = getelementptr inbounds i8, i8* %17, i64 %19, !dbg !11376
  %21 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11377
  %22 = getelementptr inbounds %struct.mystr, %struct.mystr* %21, i32 0, i32 1, !dbg !11378
  %23 = load i32, i32* %22, align 8, !dbg !11378
  %24 = load i32, i32* %6, align 4, !dbg !11379
  %25 = sub i32 %23, %24, !dbg !11380
  call void @private_str_alloc_memchunk(%struct.mystr* %14, i8* %20, i32 %25), !dbg !11381
  ret void, !dbg !11382
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define signext i8 @str_get_char_at(%struct.mystr*, i32) #0 !dbg !11383 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11386, metadata !DIExpression()), !dbg !11387
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11388, metadata !DIExpression()), !dbg !11389
  %5 = load i32, i32* %4, align 4, !dbg !11390
  %6 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11392
  %7 = getelementptr inbounds %struct.mystr, %struct.mystr* %6, i32 0, i32 1, !dbg !11393
  %8 = load i32, i32* %7, align 8, !dbg !11393
  %9 = icmp uge i32 %5, %8, !dbg !11394
  br i1 %9, label %10, label %11, !dbg !11395

10:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.515, i32 0, i32 0)), !dbg !11396
  br label %11, !dbg !11398

11:                                               ; preds = %10, %2
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11399
  %13 = getelementptr inbounds %struct.mystr, %struct.mystr* %12, i32 0, i32 0, !dbg !11400
  %14 = load i8*, i8** %13, align 8, !dbg !11400
  %15 = load i32, i32* %4, align 4, !dbg !11401
  %16 = zext i32 %15 to i64, !dbg !11399
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !11399
  %18 = load i8, i8* %17, align 1, !dbg !11399
  ret i8 %18, !dbg !11402
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_contains_space(%struct.mystr*) #0 !dbg !11403 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11404, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11406, metadata !DIExpression()), !dbg !11407
  store i32 0, i32* %4, align 4, !dbg !11408
  br label %5, !dbg !11410

5:                                                ; preds = %24, %1
  %6 = load i32, i32* %4, align 4, !dbg !11411
  %7 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11413
  %8 = getelementptr inbounds %struct.mystr, %struct.mystr* %7, i32 0, i32 1, !dbg !11414
  %9 = load i32, i32* %8, align 8, !dbg !11414
  %10 = icmp ult i32 %6, %9, !dbg !11415
  br i1 %10, label %11, label %27, !dbg !11416

11:                                               ; preds = %5
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11417
  %13 = getelementptr inbounds %struct.mystr, %struct.mystr* %12, i32 0, i32 0, !dbg !11420
  %14 = load i8*, i8** %13, align 8, !dbg !11420
  %15 = load i32, i32* %4, align 4, !dbg !11421
  %16 = zext i32 %15 to i64, !dbg !11417
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !11417
  %18 = load i8, i8* %17, align 1, !dbg !11417
  %19 = sext i8 %18 to i32, !dbg !11417
  %20 = call i32 @vsf_sysutil_isspace(i32 %19), !dbg !11422
  %21 = icmp ne i32 %20, 0, !dbg !11422
  br i1 %21, label %22, label %23, !dbg !11423

22:                                               ; preds = %11
  store i32 1, i32* %2, align 4, !dbg !11424
  br label %28, !dbg !11424

23:                                               ; preds = %11
  br label %24, !dbg !11426

24:                                               ; preds = %23
  %25 = load i32, i32* %4, align 4, !dbg !11427
  %26 = add i32 %25, 1, !dbg !11427
  store i32 %26, i32* %4, align 4, !dbg !11427
  br label %5, !dbg !11428, !llvm.loop !11429

27:                                               ; preds = %5
  store i32 0, i32* %2, align 4, !dbg !11431
  br label %28, !dbg !11431

28:                                               ; preds = %27, %22
  %29 = load i32, i32* %2, align 4, !dbg !11432
  ret i32 %29, !dbg !11432
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_all_space(%struct.mystr*) #0 !dbg !11433 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11434, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11436, metadata !DIExpression()), !dbg !11437
  store i32 0, i32* %4, align 4, !dbg !11438
  br label %5, !dbg !11440

5:                                                ; preds = %24, %1
  %6 = load i32, i32* %4, align 4, !dbg !11441
  %7 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11443
  %8 = getelementptr inbounds %struct.mystr, %struct.mystr* %7, i32 0, i32 1, !dbg !11444
  %9 = load i32, i32* %8, align 8, !dbg !11444
  %10 = icmp ult i32 %6, %9, !dbg !11445
  br i1 %10, label %11, label %27, !dbg !11446

11:                                               ; preds = %5
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11447
  %13 = getelementptr inbounds %struct.mystr, %struct.mystr* %12, i32 0, i32 0, !dbg !11450
  %14 = load i8*, i8** %13, align 8, !dbg !11450
  %15 = load i32, i32* %4, align 4, !dbg !11451
  %16 = zext i32 %15 to i64, !dbg !11447
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !11447
  %18 = load i8, i8* %17, align 1, !dbg !11447
  %19 = sext i8 %18 to i32, !dbg !11447
  %20 = call i32 @vsf_sysutil_isspace(i32 %19), !dbg !11452
  %21 = icmp ne i32 %20, 0, !dbg !11452
  br i1 %21, label %23, label %22, !dbg !11453

22:                                               ; preds = %11
  store i32 0, i32* %2, align 4, !dbg !11454
  br label %28, !dbg !11454

23:                                               ; preds = %11
  br label %24, !dbg !11456

24:                                               ; preds = %23
  %25 = load i32, i32* %4, align 4, !dbg !11457
  %26 = add i32 %25, 1, !dbg !11457
  store i32 %26, i32* %4, align 4, !dbg !11457
  br label %5, !dbg !11458, !llvm.loop !11459

27:                                               ; preds = %5
  store i32 1, i32* %2, align 4, !dbg !11461
  br label %28, !dbg !11461

28:                                               ; preds = %27, %22
  %29 = load i32, i32* %2, align 4, !dbg !11462
  ret i32 %29, !dbg !11462
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_contains_unprintable(%struct.mystr*) #0 !dbg !11463 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11464, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11466, metadata !DIExpression()), !dbg !11467
  store i32 0, i32* %4, align 4, !dbg !11468
  br label %5, !dbg !11470

5:                                                ; preds = %24, %1
  %6 = load i32, i32* %4, align 4, !dbg !11471
  %7 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11473
  %8 = getelementptr inbounds %struct.mystr, %struct.mystr* %7, i32 0, i32 1, !dbg !11474
  %9 = load i32, i32* %8, align 8, !dbg !11474
  %10 = icmp ult i32 %6, %9, !dbg !11475
  br i1 %10, label %11, label %27, !dbg !11476

11:                                               ; preds = %5
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11477
  %13 = getelementptr inbounds %struct.mystr, %struct.mystr* %12, i32 0, i32 0, !dbg !11480
  %14 = load i8*, i8** %13, align 8, !dbg !11480
  %15 = load i32, i32* %4, align 4, !dbg !11481
  %16 = zext i32 %15 to i64, !dbg !11477
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !11477
  %18 = load i8, i8* %17, align 1, !dbg !11477
  %19 = sext i8 %18 to i32, !dbg !11477
  %20 = call i32 @vsf_sysutil_isprint(i32 %19), !dbg !11482
  %21 = icmp ne i32 %20, 0, !dbg !11482
  br i1 %21, label %23, label %22, !dbg !11483

22:                                               ; preds = %11
  store i32 1, i32* %2, align 4, !dbg !11484
  br label %28, !dbg !11484

23:                                               ; preds = %11
  br label %24, !dbg !11486

24:                                               ; preds = %23
  %25 = load i32, i32* %4, align 4, !dbg !11487
  %26 = add i32 %25, 1, !dbg !11487
  store i32 %26, i32* %4, align 4, !dbg !11487
  br label %5, !dbg !11488, !llvm.loop !11489

27:                                               ; preds = %5
  store i32 0, i32* %2, align 4, !dbg !11491
  br label %28, !dbg !11491

28:                                               ; preds = %27, %22
  %29 = load i32, i32* %2, align 4, !dbg !11492
  ret i32 %29, !dbg !11492
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_atoi(%struct.mystr*) #0 !dbg !11493 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !11494, metadata !DIExpression()), !dbg !11495
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !11496
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !11497
  %5 = call i32 @vsf_sysutil_atoi(i8* %4), !dbg !11498
  ret i32 %5, !dbg !11499
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @str_a_to_filesize_t(%struct.mystr*) #0 !dbg !11500 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !11503, metadata !DIExpression()), !dbg !11504
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !11505
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !11506
  %5 = call i64 @vsf_sysutil_a_to_filesize_t(i8* %4), !dbg !11507
  ret i64 %5, !dbg !11508
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_octal_to_uint(%struct.mystr*) #0 !dbg !11509 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !11510, metadata !DIExpression()), !dbg !11511
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !11512
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !11513
  %5 = call i32 @vsf_sysutil_octal_to_uint(i8* %4), !dbg !11514
  ret i32 %5, !dbg !11515
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_getline(%struct.mystr*, %struct.mystr*, i32*) #0 !dbg !11516 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11519, metadata !DIExpression()), !dbg !11520
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !11521, metadata !DIExpression()), !dbg !11522
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !11523, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11525, metadata !DIExpression()), !dbg !11526
  %13 = load i32*, i32** %7, align 8, !dbg !11527
  %14 = load i32, i32* %13, align 4, !dbg !11528
  store i32 %14, i32* %8, align 4, !dbg !11526
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11529, metadata !DIExpression()), !dbg !11530
  %15 = load i32, i32* %8, align 4, !dbg !11531
  store i32 %15, i32* %9, align 4, !dbg !11530
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11532, metadata !DIExpression()), !dbg !11533
  %16 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11534
  %17 = call i32 @str_getlen(%struct.mystr* %16), !dbg !11535
  store i32 %17, i32* %10, align 4, !dbg !11533
  call void @llvm.dbg.declare(metadata i8** %11, metadata !11536, metadata !DIExpression()), !dbg !11537
  %18 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11538
  %19 = call i8* @str_getbuf(%struct.mystr* %18), !dbg !11539
  store i8* %19, i8** %11, align 8, !dbg !11537
  call void @llvm.dbg.declare(metadata i32* %12, metadata !11540, metadata !DIExpression()), !dbg !11541
  %20 = load i32, i32* %8, align 4, !dbg !11542
  %21 = load i32, i32* %10, align 4, !dbg !11544
  %22 = icmp ugt i32 %20, %21, !dbg !11545
  br i1 %22, label %23, label %24, !dbg !11546

23:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7.522, i32 0, i32 0)), !dbg !11547
  br label %24, !dbg !11549

24:                                               ; preds = %23, %3
  %25 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !11550
  call void @str_empty(%struct.mystr* %25), !dbg !11551
  %26 = load i32, i32* %8, align 4, !dbg !11552
  %27 = load i32, i32* %10, align 4, !dbg !11554
  %28 = icmp eq i32 %26, %27, !dbg !11555
  br i1 %28, label %29, label %30, !dbg !11556

29:                                               ; preds = %24
  store i32 0, i32* %4, align 4, !dbg !11557
  br label %83, !dbg !11557

30:                                               ; preds = %24
  br label %31, !dbg !11559

31:                                               ; preds = %51, %30
  %32 = load i32, i32* %9, align 4, !dbg !11560
  %33 = load i32, i32* %10, align 4, !dbg !11561
  %34 = icmp ult i32 %32, %33, !dbg !11562
  br i1 %34, label %35, label %43, !dbg !11563

35:                                               ; preds = %31
  %36 = load i8*, i8** %11, align 8, !dbg !11564
  %37 = load i32, i32* %9, align 4, !dbg !11565
  %38 = zext i32 %37 to i64, !dbg !11564
  %39 = getelementptr inbounds i8, i8* %36, i64 %38, !dbg !11564
  %40 = load i8, i8* %39, align 1, !dbg !11564
  %41 = sext i8 %40 to i32, !dbg !11564
  %42 = icmp ne i32 %41, 10, !dbg !11566
  br label %43

43:                                               ; preds = %35, %31
  %44 = phi i1 [ false, %31 ], [ %42, %35 ]
  br i1 %44, label %45, label %52, !dbg !11559

45:                                               ; preds = %43
  %46 = load i32, i32* %9, align 4, !dbg !11567
  %47 = add i32 %46, 1, !dbg !11567
  store i32 %47, i32* %9, align 4, !dbg !11567
  %48 = load i32, i32* %9, align 4, !dbg !11569
  %49 = icmp eq i32 %48, 0, !dbg !11571
  br i1 %49, label %50, label %51, !dbg !11572

50:                                               ; preds = %45
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i32 0, i32 0)), !dbg !11573
  br label %51, !dbg !11575

51:                                               ; preds = %50, %45
  br label %31, !dbg !11559, !llvm.loop !11576

52:                                               ; preds = %43
  %53 = load i32, i32* %9, align 4, !dbg !11578
  %54 = load i32, i32* %8, align 4, !dbg !11579
  %55 = sub i32 %53, %54, !dbg !11580
  store i32 %55, i32* %12, align 4, !dbg !11581
  %56 = load i32, i32* %9, align 4, !dbg !11582
  %57 = load i32, i32* %10, align 4, !dbg !11584
  %58 = icmp ult i32 %56, %57, !dbg !11585
  br i1 %58, label %59, label %74, !dbg !11586

59:                                               ; preds = %52
  %60 = load i8*, i8** %11, align 8, !dbg !11587
  %61 = load i32, i32* %9, align 4, !dbg !11588
  %62 = zext i32 %61 to i64, !dbg !11587
  %63 = getelementptr inbounds i8, i8* %60, i64 %62, !dbg !11587
  %64 = load i8, i8* %63, align 1, !dbg !11587
  %65 = sext i8 %64 to i32, !dbg !11587
  %66 = icmp eq i32 %65, 10, !dbg !11589
  br i1 %66, label %67, label %74, !dbg !11590

67:                                               ; preds = %59
  %68 = load i32, i32* %9, align 4, !dbg !11591
  %69 = add i32 %68, 1, !dbg !11591
  store i32 %69, i32* %9, align 4, !dbg !11591
  %70 = load i32, i32* %9, align 4, !dbg !11593
  %71 = icmp eq i32 %70, 0, !dbg !11595
  br i1 %71, label %72, label %73, !dbg !11596

72:                                               ; preds = %67
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.441, i32 0, i32 0)), !dbg !11597
  br label %73, !dbg !11599

73:                                               ; preds = %72, %67
  br label %74, !dbg !11600

74:                                               ; preds = %73, %59, %52
  %75 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !11601
  %76 = load i8*, i8** %11, align 8, !dbg !11602
  %77 = load i32, i32* %8, align 4, !dbg !11603
  %78 = zext i32 %77 to i64, !dbg !11604
  %79 = getelementptr inbounds i8, i8* %76, i64 %78, !dbg !11604
  %80 = load i32, i32* %12, align 4, !dbg !11605
  call void @private_str_alloc_memchunk(%struct.mystr* %75, i8* %79, i32 %80), !dbg !11606
  %81 = load i32, i32* %9, align 4, !dbg !11607
  %82 = load i32*, i32** %7, align 8, !dbg !11608
  store i32 %81, i32* %82, align 4, !dbg !11609
  store i32 1, i32* %4, align 4, !dbg !11610
  br label %83, !dbg !11610

83:                                               ; preds = %74, %29
  %84 = load i32, i32* %4, align 4, !dbg !11611
  ret i32 %84, !dbg !11611
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_contains_line(%struct.mystr*, %struct.mystr*) #0 !dbg !863 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !11612, metadata !DIExpression()), !dbg !11613
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11614, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11616, metadata !DIExpression()), !dbg !11617
  store i32 0, i32* %6, align 4, !dbg !11617
  br label %7, !dbg !11618

7:                                                ; preds = %16, %2
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !11619
  %9 = call i32 @str_getline(%struct.mystr* %8, %struct.mystr* @str_contains_line.s_curr_line_str, i32* %6), !dbg !11620
  %10 = icmp ne i32 %9, 0, !dbg !11618
  br i1 %10, label %11, label %17, !dbg !11618

11:                                               ; preds = %7
  %12 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11621
  %13 = call i32 @str_equal(%struct.mystr* @str_contains_line.s_curr_line_str, %struct.mystr* %12), !dbg !11624
  %14 = icmp ne i32 %13, 0, !dbg !11624
  br i1 %14, label %15, label %16, !dbg !11625

15:                                               ; preds = %11
  store i32 1, i32* %3, align 4, !dbg !11626
  br label %18, !dbg !11626

16:                                               ; preds = %11
  br label %7, !dbg !11618, !llvm.loop !11628

17:                                               ; preds = %7
  store i32 0, i32* %3, align 4, !dbg !11630
  br label %18, !dbg !11630

18:                                               ; preds = %17, %15
  %19 = load i32, i32* %3, align 4, !dbg !11631
  ret i32 %19, !dbg !11631
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_replace_unprintable(%struct.mystr*, i8 signext) #0 !dbg !11632 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11633, metadata !DIExpression()), !dbg !11634
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !11635, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11637, metadata !DIExpression()), !dbg !11638
  store i32 0, i32* %5, align 4, !dbg !11639
  br label %6, !dbg !11641

6:                                                ; preds = %32, %2
  %7 = load i32, i32* %5, align 4, !dbg !11642
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11644
  %9 = getelementptr inbounds %struct.mystr, %struct.mystr* %8, i32 0, i32 1, !dbg !11645
  %10 = load i32, i32* %9, align 8, !dbg !11645
  %11 = icmp ult i32 %7, %10, !dbg !11646
  br i1 %11, label %12, label %35, !dbg !11647

12:                                               ; preds = %6
  %13 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11648
  %14 = getelementptr inbounds %struct.mystr, %struct.mystr* %13, i32 0, i32 0, !dbg !11651
  %15 = load i8*, i8** %14, align 8, !dbg !11651
  %16 = load i32, i32* %5, align 4, !dbg !11652
  %17 = zext i32 %16 to i64, !dbg !11648
  %18 = getelementptr inbounds i8, i8* %15, i64 %17, !dbg !11648
  %19 = load i8, i8* %18, align 1, !dbg !11648
  %20 = sext i8 %19 to i32, !dbg !11648
  %21 = call i32 @vsf_sysutil_isprint(i32 %20), !dbg !11653
  %22 = icmp ne i32 %21, 0, !dbg !11653
  br i1 %22, label %31, label %23, !dbg !11654

23:                                               ; preds = %12
  %24 = load i8, i8* %4, align 1, !dbg !11655
  %25 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11657
  %26 = getelementptr inbounds %struct.mystr, %struct.mystr* %25, i32 0, i32 0, !dbg !11658
  %27 = load i8*, i8** %26, align 8, !dbg !11658
  %28 = load i32, i32* %5, align 4, !dbg !11659
  %29 = zext i32 %28 to i64, !dbg !11657
  %30 = getelementptr inbounds i8, i8* %27, i64 %29, !dbg !11657
  store i8 %24, i8* %30, align 1, !dbg !11660
  br label %31, !dbg !11661

31:                                               ; preds = %23, %12
  br label %32, !dbg !11662

32:                                               ; preds = %31
  %33 = load i32, i32* %5, align 4, !dbg !11663
  %34 = add i32 %33, 1, !dbg !11663
  store i32 %34, i32* %5, align 4, !dbg !11663
  br label %6, !dbg !11664, !llvm.loop !11665

35:                                               ; preds = %6
  ret void, !dbg !11667
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_netfd_alloc(%struct.vsf_session*, %struct.mystr*, i8 signext, i8*, i32, i32 (%struct.vsf_session*, i8*, i32)*, i32 (%struct.vsf_session*, i8*, i32)*) #0 !dbg !11668 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.vsf_session*, align 8
  %10 = alloca %struct.mystr*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32 (%struct.vsf_session*, i8*, i32)*, align 8
  %15 = alloca i32 (%struct.vsf_session*, i8*, i32)*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %9, metadata !11684, metadata !DIExpression()), !dbg !11685
  store %struct.mystr* %1, %struct.mystr** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %10, metadata !11686, metadata !DIExpression()), !dbg !11687
  store i8 %2, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !11688, metadata !DIExpression()), !dbg !11689
  store i8* %3, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !11690, metadata !DIExpression()), !dbg !11691
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11692, metadata !DIExpression()), !dbg !11693
  store i32 (%struct.vsf_session*, i8*, i32)* %5, i32 (%struct.vsf_session*, i8*, i32)** %14, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.vsf_session*, i8*, i32)** %14, metadata !11694, metadata !DIExpression()), !dbg !11695
  store i32 (%struct.vsf_session*, i8*, i32)* %6, i32 (%struct.vsf_session*, i8*, i32)** %15, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.vsf_session*, i8*, i32)** %15, metadata !11696, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.declare(metadata i32* %16, metadata !11698, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.declare(metadata i32* %17, metadata !11700, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.declare(metadata i32* %18, metadata !11702, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.declare(metadata i8** %19, metadata !11704, metadata !DIExpression()), !dbg !11705
  %21 = load i8*, i8** %12, align 8, !dbg !11706
  store i8* %21, i8** %19, align 8, !dbg !11705
  call void @llvm.dbg.declare(metadata i32* %20, metadata !11707, metadata !DIExpression()), !dbg !11708
  %22 = load i32, i32* %13, align 4, !dbg !11709
  store i32 %22, i32* %20, align 4, !dbg !11708
  %23 = load %struct.mystr*, %struct.mystr** %10, align 8, !dbg !11710
  call void @str_empty(%struct.mystr* %23), !dbg !11711
  br label %24, !dbg !11712

24:                                               ; preds = %7, %129
  %25 = load i8*, i8** %19, align 8, !dbg !11713
  %26 = load i32, i32* %20, align 4, !dbg !11716
  %27 = zext i32 %26 to i64, !dbg !11717
  %28 = getelementptr inbounds i8, i8* %25, i64 %27, !dbg !11717
  %29 = load i8*, i8** %12, align 8, !dbg !11718
  %30 = load i32, i32* %13, align 4, !dbg !11719
  %31 = zext i32 %30 to i64, !dbg !11720
  %32 = getelementptr inbounds i8, i8* %29, i64 %31, !dbg !11720
  %33 = icmp ne i8* %28, %32, !dbg !11721
  br i1 %33, label %34, label %35, !dbg !11722

34:                                               ; preds = %24
  call void @bug(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.527, i32 0, i32 0)), !dbg !11723
  br label %35, !dbg !11725

35:                                               ; preds = %34, %24
  %36 = load i32, i32* %20, align 4, !dbg !11726
  %37 = icmp eq i32 %36, 0, !dbg !11728
  br i1 %37, label %38, label %39, !dbg !11729

38:                                               ; preds = %35
  store i32 -1, i32* %8, align 4, !dbg !11730
  br label %134, !dbg !11730

39:                                               ; preds = %35
  %40 = load i32 (%struct.vsf_session*, i8*, i32)*, i32 (%struct.vsf_session*, i8*, i32)** %14, align 8, !dbg !11732
  %41 = load %struct.vsf_session*, %struct.vsf_session** %9, align 8, !dbg !11733
  %42 = load i8*, i8** %19, align 8, !dbg !11734
  %43 = load i32, i32* %20, align 4, !dbg !11735
  %44 = call i32 %40(%struct.vsf_session* %41, i8* %42, i32 %43), !dbg !11736
  store i32 %44, i32* %16, align 4, !dbg !11737
  %45 = load i32, i32* %16, align 4, !dbg !11738
  %46 = call i32 @vsf_sysutil_retval_is_error(i32 %45), !dbg !11740
  %47 = icmp ne i32 %46, 0, !dbg !11740
  br i1 %47, label %48, label %49, !dbg !11741

48:                                               ; preds = %39
  call void @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.528, i32 0, i32 0)), !dbg !11742
  br label %54, !dbg !11744

49:                                               ; preds = %39
  %50 = load i32, i32* %16, align 4, !dbg !11745
  %51 = icmp eq i32 %50, 0, !dbg !11747
  br i1 %51, label %52, label %53, !dbg !11748

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4, !dbg !11749
  br label %134, !dbg !11749

53:                                               ; preds = %49
  br label %54

54:                                               ; preds = %53, %48
  %55 = load i32, i32* %16, align 4, !dbg !11751
  store i32 %55, i32* %17, align 4, !dbg !11752
  store i32 0, i32* %18, align 4, !dbg !11753
  br label %56, !dbg !11755

56:                                               ; preds = %104, %54
  %57 = load i32, i32* %18, align 4, !dbg !11756
  %58 = load i32, i32* %17, align 4, !dbg !11758
  %59 = icmp ult i32 %57, %58, !dbg !11759
  br i1 %59, label %60, label %107, !dbg !11760

60:                                               ; preds = %56
  %61 = load i8*, i8** %19, align 8, !dbg !11761
  %62 = load i32, i32* %18, align 4, !dbg !11764
  %63 = zext i32 %62 to i64, !dbg !11761
  %64 = getelementptr inbounds i8, i8* %61, i64 %63, !dbg !11761
  %65 = load i8, i8* %64, align 1, !dbg !11761
  %66 = sext i8 %65 to i32, !dbg !11761
  %67 = load i8, i8* %11, align 1, !dbg !11765
  %68 = sext i8 %67 to i32, !dbg !11765
  %69 = icmp eq i32 %66, %68, !dbg !11766
  br i1 %69, label %70, label %103, !dbg !11767

70:                                               ; preds = %60
  %71 = load i32, i32* %18, align 4, !dbg !11768
  %72 = add i32 %71, 1, !dbg !11768
  store i32 %72, i32* %18, align 4, !dbg !11768
  %73 = load i32 (%struct.vsf_session*, i8*, i32)*, i32 (%struct.vsf_session*, i8*, i32)** %15, align 8, !dbg !11770
  %74 = load %struct.vsf_session*, %struct.vsf_session** %9, align 8, !dbg !11771
  %75 = load i8*, i8** %19, align 8, !dbg !11772
  %76 = load i32, i32* %18, align 4, !dbg !11773
  %77 = call i32 %73(%struct.vsf_session* %74, i8* %75, i32 %76), !dbg !11774
  store i32 %77, i32* %16, align 4, !dbg !11775
  %78 = load i32, i32* %16, align 4, !dbg !11776
  %79 = call i32 @vsf_sysutil_retval_is_error(i32 %78), !dbg !11778
  %80 = icmp ne i32 %79, 0, !dbg !11778
  br i1 %80, label %85, label %81, !dbg !11779

81:                                               ; preds = %70
  %82 = load i32, i32* %16, align 4, !dbg !11780
  %83 = load i32, i32* %18, align 4, !dbg !11781
  %84 = icmp ne i32 %82, %83, !dbg !11782
  br i1 %84, label %85, label %86, !dbg !11783

85:                                               ; preds = %81, %70
  call void @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.529, i32 0, i32 0)), !dbg !11784
  br label %86, !dbg !11786

86:                                               ; preds = %85, %81
  %87 = load i8*, i8** %19, align 8, !dbg !11787
  %88 = load i32, i32* %18, align 4, !dbg !11789
  %89 = sub i32 %88, 1, !dbg !11790
  %90 = zext i32 %89 to i64, !dbg !11787
  %91 = getelementptr inbounds i8, i8* %87, i64 %90, !dbg !11787
  %92 = load i8, i8* %91, align 1, !dbg !11787
  %93 = sext i8 %92 to i32, !dbg !11787
  %94 = load i8, i8* %11, align 1, !dbg !11791
  %95 = sext i8 %94 to i32, !dbg !11791
  %96 = icmp ne i32 %93, %95, !dbg !11792
  br i1 %96, label %97, label %98, !dbg !11793

97:                                               ; preds = %86
  call void @die(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.530, i32 0, i32 0)), !dbg !11794
  br label %98, !dbg !11796

98:                                               ; preds = %97, %86
  %99 = load %struct.mystr*, %struct.mystr** %10, align 8, !dbg !11797
  %100 = load i8*, i8** %12, align 8, !dbg !11798
  %101 = load i8, i8* %11, align 1, !dbg !11799
  call void @str_alloc_alt_term(%struct.mystr* %99, i8* %100, i8 signext %101), !dbg !11800
  %102 = load i32, i32* %18, align 4, !dbg !11801
  store i32 %102, i32* %8, align 4, !dbg !11802
  br label %134, !dbg !11802

103:                                              ; preds = %60
  br label %104, !dbg !11803

104:                                              ; preds = %103
  %105 = load i32, i32* %18, align 4, !dbg !11804
  %106 = add i32 %105, 1, !dbg !11804
  store i32 %106, i32* %18, align 4, !dbg !11804
  br label %56, !dbg !11805, !llvm.loop !11806

107:                                              ; preds = %56
  %108 = load i32, i32* %17, align 4, !dbg !11808
  %109 = load i32, i32* %20, align 4, !dbg !11810
  %110 = icmp ugt i32 %108, %109, !dbg !11811
  br i1 %110, label %111, label %112, !dbg !11812

111:                                              ; preds = %107
  call void @bug(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.531, i32 0, i32 0)), !dbg !11813
  br label %112, !dbg !11815

112:                                              ; preds = %111, %107
  %113 = load i32, i32* %17, align 4, !dbg !11816
  %114 = load i32, i32* %20, align 4, !dbg !11817
  %115 = sub i32 %114, %113, !dbg !11817
  store i32 %115, i32* %20, align 4, !dbg !11817
  %116 = load i32 (%struct.vsf_session*, i8*, i32)*, i32 (%struct.vsf_session*, i8*, i32)** %15, align 8, !dbg !11818
  %117 = load %struct.vsf_session*, %struct.vsf_session** %9, align 8, !dbg !11819
  %118 = load i8*, i8** %19, align 8, !dbg !11820
  %119 = load i32, i32* %17, align 4, !dbg !11821
  %120 = call i32 %116(%struct.vsf_session* %117, i8* %118, i32 %119), !dbg !11822
  store i32 %120, i32* %16, align 4, !dbg !11823
  %121 = load i32, i32* %16, align 4, !dbg !11824
  %122 = call i32 @vsf_sysutil_retval_is_error(i32 %121), !dbg !11826
  %123 = icmp ne i32 %122, 0, !dbg !11826
  br i1 %123, label %128, label %124, !dbg !11827

124:                                              ; preds = %112
  %125 = load i32, i32* %16, align 4, !dbg !11828
  %126 = load i32, i32* %17, align 4, !dbg !11829
  %127 = icmp ne i32 %125, %126, !dbg !11830
  br i1 %127, label %128, label %129, !dbg !11831

128:                                              ; preds = %124, %112
  call void @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.529, i32 0, i32 0)), !dbg !11832
  br label %129, !dbg !11834

129:                                              ; preds = %128, %124
  %130 = load i32, i32* %17, align 4, !dbg !11835
  %131 = load i8*, i8** %19, align 8, !dbg !11836
  %132 = zext i32 %130 to i64, !dbg !11836
  %133 = getelementptr inbounds i8, i8* %131, i64 %132, !dbg !11836
  store i8* %133, i8** %19, align 8, !dbg !11836
  br label %24, !dbg !11712, !llvm.loop !11837

134:                                              ; preds = %98, %52, %38
  %135 = load i32, i32* %8, align 4, !dbg !11839
  ret i32 %135, !dbg !11839
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_netfd_write(%struct.mystr*, i32) #0 !dbg !11840 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11845, metadata !DIExpression()), !dbg !11846
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11847, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11849, metadata !DIExpression()), !dbg !11850
  store i32 0, i32* %5, align 4, !dbg !11850
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11851, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11853, metadata !DIExpression()), !dbg !11854
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11855
  %9 = call i32 @str_getlen(%struct.mystr* %8), !dbg !11856
  store i32 %9, i32* %7, align 4, !dbg !11854
  %10 = load i32, i32* %7, align 4, !dbg !11857
  %11 = icmp eq i32 %10, 0, !dbg !11859
  br i1 %11, label %12, label %13, !dbg !11860

12:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.534, i32 0, i32 0)), !dbg !11861
  br label %13, !dbg !11863

13:                                               ; preds = %12, %2
  %14 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11864
  %15 = load i32, i32* %4, align 4, !dbg !11865
  %16 = call i32 @str_write_loop(%struct.mystr* %14, i32 %15), !dbg !11866
  store i32 %16, i32* %6, align 4, !dbg !11867
  %17 = load i32, i32* %6, align 4, !dbg !11868
  %18 = call i32 @vsf_sysutil_retval_is_error(i32 %17), !dbg !11870
  %19 = icmp ne i32 %18, 0, !dbg !11870
  br i1 %19, label %24, label %20, !dbg !11871

20:                                               ; preds = %13
  %21 = load i32, i32* %6, align 4, !dbg !11872
  %22 = load i32, i32* %7, align 4, !dbg !11873
  %23 = icmp ne i32 %21, %22, !dbg !11874
  br i1 %23, label %24, label %25, !dbg !11875

24:                                               ; preds = %20, %13
  store i32 -1, i32* %5, align 4, !dbg !11876
  br label %25, !dbg !11878

25:                                               ; preds = %24, %20
  %26 = load i32, i32* %5, align 4, !dbg !11879
  ret i32 %26, !dbg !11880
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_netfd_read(%struct.mystr*, i32, i32) #0 !dbg !11881 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !11884, metadata !DIExpression()), !dbg !11885
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11886, metadata !DIExpression()), !dbg !11887
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11888, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11890, metadata !DIExpression()), !dbg !11891
  %9 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11892
  %10 = load i32, i32* %7, align 4, !dbg !11893
  call void @str_reserve(%struct.mystr* %9, i32 %10), !dbg !11894
  %11 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11895
  %12 = load i32, i32* %7, align 4, !dbg !11896
  call void @str_trunc(%struct.mystr* %11, i32 %12), !dbg !11897
  %13 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !11898
  %14 = load i32, i32* %6, align 4, !dbg !11899
  %15 = call i32 @str_read_loop(%struct.mystr* %13, i32 %14), !dbg !11900
  store i32 %15, i32* %8, align 4, !dbg !11901
  %16 = load i32, i32* %8, align 4, !dbg !11902
  %17 = call i32 @vsf_sysutil_retval_is_error(i32 %16), !dbg !11904
  %18 = icmp ne i32 %17, 0, !dbg !11904
  br i1 %18, label %23, label %19, !dbg !11905

19:                                               ; preds = %3
  %20 = load i32, i32* %8, align 4, !dbg !11906
  %21 = load i32, i32* %7, align 4, !dbg !11907
  %22 = icmp ne i32 %20, %21, !dbg !11908
  br i1 %22, label %23, label %24, !dbg !11909

23:                                               ; preds = %19, %3
  store i32 -1, i32* %4, align 4, !dbg !11910
  br label %26, !dbg !11910

24:                                               ; preds = %19
  %25 = load i32, i32* %8, align 4, !dbg !11912
  store i32 %25, i32* %4, align 4, !dbg !11913
  br label %26, !dbg !11913

26:                                               ; preds = %24, %23
  %27 = load i32, i32* %4, align 4, !dbg !11914
  ret i32 %27, !dbg !11914
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_getcwd(%struct.mystr*) #0 !dbg !870 {
  %2 = alloca %struct.mystr*, align 8
  %3 = alloca i8*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !11915, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11917, metadata !DIExpression()), !dbg !11918
  %4 = load i8*, i8** @str_getcwd.p_getcwd_buf, align 8, !dbg !11919
  %5 = icmp eq i8* %4, null, !dbg !11921
  br i1 %5, label %6, label %7, !dbg !11922

6:                                                ; preds = %1
  call void @vsf_secbuf_alloc(i8** @str_getcwd.p_getcwd_buf, i32 4096), !dbg !11923
  br label %7, !dbg !11925

7:                                                ; preds = %6, %1
  %8 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !11926
  call void @str_empty(%struct.mystr* %8), !dbg !11927
  %9 = load i8*, i8** @str_getcwd.p_getcwd_buf, align 8, !dbg !11928
  %10 = call i8* @vsf_sysutil_getcwd(i8* %9, i32 4096), !dbg !11929
  store i8* %10, i8** %3, align 8, !dbg !11930
  %11 = load i8*, i8** %3, align 8, !dbg !11931
  %12 = icmp ne i8* %11, null, !dbg !11933
  br i1 %12, label %13, label %16, !dbg !11934

13:                                               ; preds = %7
  %14 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !11935
  %15 = load i8*, i8** @str_getcwd.p_getcwd_buf, align 8, !dbg !11937
  call void @str_alloc_text(%struct.mystr* %14, i8* %15), !dbg !11938
  br label %16, !dbg !11939

16:                                               ; preds = %13, %7
  ret void, !dbg !11940
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_write_loop(%struct.mystr*, i32) #0 !dbg !11941 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11944, metadata !DIExpression()), !dbg !11945
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11946, metadata !DIExpression()), !dbg !11947
  %5 = load i32, i32* %4, align 4, !dbg !11948
  %6 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11949
  %7 = call i8* @str_getbuf(%struct.mystr* %6), !dbg !11950
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11951
  %9 = call i32 @str_getlen(%struct.mystr* %8), !dbg !11952
  %10 = call i32 @vsf_sysutil_write_loop(i32 %5, i8* %7, i32 %9), !dbg !11953
  ret i32 %10, !dbg !11954
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_read_loop(%struct.mystr*, i32) #0 !dbg !11955 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11958, metadata !DIExpression()), !dbg !11959
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11960, metadata !DIExpression()), !dbg !11961
  %5 = load i32, i32* %4, align 4, !dbg !11962
  %6 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11963
  %7 = call i8* @str_getbuf(%struct.mystr* %6), !dbg !11964
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11965
  %9 = call i32 @str_getlen(%struct.mystr* %8), !dbg !11966
  %10 = call i32 @vsf_sysutil_read_loop(i32 %5, i8* %7, i32 %9), !dbg !11967
  ret i32 %10, !dbg !11968
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_mkdir(%struct.mystr*, i32) #0 !dbg !11969 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !11972, metadata !DIExpression()), !dbg !11973
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11974, metadata !DIExpression()), !dbg !11975
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !11976
  %6 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !11977
  %7 = load i32, i32* %4, align 4, !dbg !11978
  %8 = call i32 @vsf_sysutil_mkdir(i8* %6, i32 %7), !dbg !11979
  ret i32 %8, !dbg !11980
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_rmdir(%struct.mystr*) #0 !dbg !11981 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !11984, metadata !DIExpression()), !dbg !11985
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !11986
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !11987
  %5 = call i32 @vsf_sysutil_rmdir(i8* %4), !dbg !11988
  ret i32 %5, !dbg !11989
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_unlink(%struct.mystr*) #0 !dbg !11990 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !11991, metadata !DIExpression()), !dbg !11992
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !11993
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !11994
  %5 = call i32 @vsf_sysutil_unlink(i8* %4), !dbg !11995
  ret i32 %5, !dbg !11996
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_chdir(%struct.mystr*) #0 !dbg !11997 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !11998, metadata !DIExpression()), !dbg !11999
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !12000
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !12001
  %5 = call i32 @vsf_sysutil_chdir(i8* %4), !dbg !12002
  ret i32 %5, !dbg !12003
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_open(%struct.mystr*, i32) #0 !dbg !12004 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !12008, metadata !DIExpression()), !dbg !12009
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12010, metadata !DIExpression()), !dbg !12011
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12012, metadata !DIExpression()), !dbg !12013
  store i32 0, i32* %5, align 4, !dbg !12013
  %6 = load i32, i32* %4, align 4, !dbg !12014
  switch i32 %6, label %9 [
    i32 1, label %7
    i32 0, label %8
  ], !dbg !12015

7:                                                ; preds = %2
  store i32 1, i32* %5, align 4, !dbg !12016
  br label %10, !dbg !12018

8:                                                ; preds = %2
  br label %9, !dbg !12018

9:                                                ; preds = %2, %8
  call void @bug(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.553, i32 0, i32 0)), !dbg !12019
  br label %10, !dbg !12020

10:                                               ; preds = %9, %7
  %11 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12021
  %12 = call i8* @str_getbuf(%struct.mystr* %11), !dbg !12022
  %13 = load i32, i32* %5, align 4, !dbg !12023
  %14 = call i32 @vsf_sysutil_open_file(i8* %12, i32 %13), !dbg !12024
  ret i32 %14, !dbg !12025
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_stat(%struct.mystr*, %struct.vsf_sysutil_statbuf**) #0 !dbg !12026 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.vsf_sysutil_statbuf**, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !12030, metadata !DIExpression()), !dbg !12031
  store %struct.vsf_sysutil_statbuf** %1, %struct.vsf_sysutil_statbuf*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf*** %4, metadata !12032, metadata !DIExpression()), !dbg !12033
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12034
  %6 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !12035
  %7 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !12036
  %8 = call i32 @vsf_sysutil_stat(i8* %6, %struct.vsf_sysutil_statbuf** %7), !dbg !12037
  ret i32 %8, !dbg !12038
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_lstat(%struct.mystr*, %struct.vsf_sysutil_statbuf**) #0 !dbg !12039 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.vsf_sysutil_statbuf**, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !12040, metadata !DIExpression()), !dbg !12041
  store %struct.vsf_sysutil_statbuf** %1, %struct.vsf_sysutil_statbuf*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf*** %4, metadata !12042, metadata !DIExpression()), !dbg !12043
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12044
  %6 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !12045
  %7 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !12046
  %8 = call i32 @vsf_sysutil_lstat(i8* %6, %struct.vsf_sysutil_statbuf** %7), !dbg !12047
  ret i32 %8, !dbg !12048
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_create_exclusive(%struct.mystr*) #0 !dbg !12049 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !12050, metadata !DIExpression()), !dbg !12051
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !12052
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !12053
  %5 = call i32 @vsf_sysutil_create_file_exclusive(i8* %4), !dbg !12054
  ret i32 %5, !dbg !12055
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_create(%struct.mystr*) #0 !dbg !12056 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !12057, metadata !DIExpression()), !dbg !12058
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !12059
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !12060
  %5 = load i32, i32* @tunable_file_open_mode, align 4, !dbg !12061
  %6 = call i32 @vsf_sysutil_create_or_open_file(i8* %4, i32 %5), !dbg !12062
  ret i32 %6, !dbg !12063
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_chmod(%struct.mystr*, i32) #0 !dbg !12064 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !12067, metadata !DIExpression()), !dbg !12068
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12069, metadata !DIExpression()), !dbg !12070
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12071
  %6 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !12072
  %7 = load i32, i32* %4, align 4, !dbg !12073
  %8 = call i32 @vsf_sysutil_chmod(i8* %6, i32 %7), !dbg !12074
  ret i32 %8, !dbg !12075
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_rename(%struct.mystr*, %struct.mystr*) #0 !dbg !12076 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !12079, metadata !DIExpression()), !dbg !12080
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !12081, metadata !DIExpression()), !dbg !12082
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12083
  %6 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !12084
  %7 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !12085
  %8 = call i8* @str_getbuf(%struct.mystr* %7), !dbg !12086
  %9 = call i32 @vsf_sysutil_rename(i8* %6, i8* %8), !dbg !12087
  ret i32 %9, !dbg !12088
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.vsf_sysutil_dir* @str_opendir(%struct.mystr*) #0 !dbg !12089 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !12094, metadata !DIExpression()), !dbg !12095
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !12096
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !12097
  %5 = call %struct.vsf_sysutil_dir* @vsf_sysutil_opendir(i8* %4), !dbg !12098
  ret %struct.vsf_sysutil_dir* %5, !dbg !12099
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_next_dirent(%struct.mystr*, %struct.vsf_sysutil_dir*) #0 !dbg !12100 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.vsf_sysutil_dir*, align 8
  %5 = alloca i8*, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !12103, metadata !DIExpression()), !dbg !12104
  store %struct.vsf_sysutil_dir* %1, %struct.vsf_sysutil_dir** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %4, metadata !12105, metadata !DIExpression()), !dbg !12106
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12107, metadata !DIExpression()), !dbg !12108
  %6 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %4, align 8, !dbg !12109
  %7 = call i8* @vsf_sysutil_next_dirent(%struct.vsf_sysutil_dir* %6), !dbg !12110
  store i8* %7, i8** %5, align 8, !dbg !12108
  %8 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12111
  call void @str_empty(%struct.mystr* %8), !dbg !12112
  %9 = load i8*, i8** %5, align 8, !dbg !12113
  %10 = icmp ne i8* %9, null, !dbg !12115
  br i1 %10, label %11, label %14, !dbg !12116

11:                                               ; preds = %2
  %12 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12117
  %13 = load i8*, i8** %5, align 8, !dbg !12119
  call void @str_alloc_text(%struct.mystr* %12, i8* %13), !dbg !12120
  br label %14, !dbg !12121

14:                                               ; preds = %11, %2
  ret void, !dbg !12122
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_readlink(%struct.mystr*, %struct.mystr*) #0 !dbg !890 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !12123, metadata !DIExpression()), !dbg !12124
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !12125, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12127, metadata !DIExpression()), !dbg !12128
  %7 = load i8*, i8** @str_readlink.p_readlink_buf, align 8, !dbg !12129
  %8 = icmp eq i8* %7, null, !dbg !12131
  br i1 %8, label %9, label %10, !dbg !12132

9:                                                ; preds = %2
  call void @vsf_secbuf_alloc(i8** @str_readlink.p_readlink_buf, i32 4096), !dbg !12133
  br label %10, !dbg !12135

10:                                               ; preds = %9, %2
  %11 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !12136
  call void @str_empty(%struct.mystr* %11), !dbg !12137
  %12 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !12138
  %13 = call i8* @str_getbuf(%struct.mystr* %12), !dbg !12139
  %14 = load i8*, i8** @str_readlink.p_readlink_buf, align 8, !dbg !12140
  %15 = call i32 @vsf_sysutil_readlink(i8* %13, i8* %14, i32 4096), !dbg !12141
  store i32 %15, i32* %6, align 4, !dbg !12142
  %16 = load i32, i32* %6, align 4, !dbg !12143
  %17 = call i32 @vsf_sysutil_retval_is_error(i32 %16), !dbg !12145
  %18 = icmp ne i32 %17, 0, !dbg !12145
  br i1 %18, label %19, label %21, !dbg !12146

19:                                               ; preds = %10
  %20 = load i32, i32* %6, align 4, !dbg !12147
  store i32 %20, i32* %3, align 4, !dbg !12149
  br label %24, !dbg !12149

21:                                               ; preds = %10
  %22 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !12150
  %23 = load i8*, i8** @str_readlink.p_readlink_buf, align 8, !dbg !12151
  call void @str_alloc_text(%struct.mystr* %22, i8* %23), !dbg !12152
  store i32 0, i32* %3, align 4, !dbg !12153
  br label %24, !dbg !12153

24:                                               ; preds = %21, %19
  %25 = load i32, i32* %3, align 4, !dbg !12154
  ret i32 %25, !dbg !12154
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.vsf_sysutil_user* @str_getpwnam(%struct.mystr*) #0 !dbg !12155 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !12158, metadata !DIExpression()), !dbg !12159
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !12160
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !12161
  %5 = call %struct.vsf_sysutil_user* @vsf_sysutil_getpwnam(i8* %4), !dbg !12162
  ret %struct.vsf_sysutil_user* %5, !dbg !12163
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_syslog(%struct.mystr*, i32) #0 !dbg !12164 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !12167, metadata !DIExpression()), !dbg !12168
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12169, metadata !DIExpression()), !dbg !12170
  %5 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !12171
  %6 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !12172
  %7 = load i32, i32* %4, align 4, !dbg !12173
  call void @vsf_sysutil_syslog(i8* %6, i32 %7), !dbg !12174
  ret void, !dbg !12175
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_list_free(%struct.mystr_list*) #0 !dbg !12176 {
  %2 = alloca %struct.mystr_list*, align 8
  %3 = alloca i32, align 4
  store %struct.mystr_list* %0, %struct.mystr_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %2, metadata !12186, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12188, metadata !DIExpression()), !dbg !12189
  store i32 0, i32* %3, align 4, !dbg !12190
  br label %4, !dbg !12192

4:                                                ; preds = %25, %1
  %5 = load i32, i32* %3, align 4, !dbg !12193
  %6 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12195
  %7 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %6, i32 0, i32 1, !dbg !12196
  %8 = load i32, i32* %7, align 4, !dbg !12196
  %9 = icmp ult i32 %5, %8, !dbg !12197
  br i1 %9, label %10, label %28, !dbg !12198

10:                                               ; preds = %4
  %11 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12199
  %12 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %11, i32 0, i32 2, !dbg !12201
  %13 = load %struct.mystr_list_node*, %struct.mystr_list_node** %12, align 8, !dbg !12201
  %14 = load i32, i32* %3, align 4, !dbg !12202
  %15 = zext i32 %14 to i64, !dbg !12199
  %16 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %13, i64 %15, !dbg !12199
  %17 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %16, i32 0, i32 0, !dbg !12203
  call void @str_free(%struct.mystr* %17), !dbg !12204
  %18 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12205
  %19 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %18, i32 0, i32 2, !dbg !12206
  %20 = load %struct.mystr_list_node*, %struct.mystr_list_node** %19, align 8, !dbg !12206
  %21 = load i32, i32* %3, align 4, !dbg !12207
  %22 = zext i32 %21 to i64, !dbg !12205
  %23 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %20, i64 %22, !dbg !12205
  %24 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %23, i32 0, i32 1, !dbg !12208
  call void @str_free(%struct.mystr* %24), !dbg !12209
  br label %25, !dbg !12210

25:                                               ; preds = %10
  %26 = load i32, i32* %3, align 4, !dbg !12211
  %27 = add i32 %26, 1, !dbg !12211
  store i32 %27, i32* %3, align 4, !dbg !12211
  br label %4, !dbg !12212, !llvm.loop !12213

28:                                               ; preds = %4
  %29 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12215
  %30 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %29, i32 0, i32 1, !dbg !12216
  store i32 0, i32* %30, align 4, !dbg !12217
  %31 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12218
  %32 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %31, i32 0, i32 0, !dbg !12219
  store i32 0, i32* %32, align 8, !dbg !12220
  %33 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12221
  %34 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %33, i32 0, i32 2, !dbg !12223
  %35 = load %struct.mystr_list_node*, %struct.mystr_list_node** %34, align 8, !dbg !12223
  %36 = icmp ne %struct.mystr_list_node* %35, null, !dbg !12221
  br i1 %36, label %37, label %44, !dbg !12224

37:                                               ; preds = %28
  %38 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12225
  %39 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %38, i32 0, i32 2, !dbg !12227
  %40 = load %struct.mystr_list_node*, %struct.mystr_list_node** %39, align 8, !dbg !12227
  %41 = bitcast %struct.mystr_list_node* %40 to i8*, !dbg !12225
  call void @vsf_sysutil_free(i8* %41), !dbg !12228
  %42 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12229
  %43 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %42, i32 0, i32 2, !dbg !12230
  store %struct.mystr_list_node* null, %struct.mystr_list_node** %43, align 8, !dbg !12231
  br label %44, !dbg !12232

44:                                               ; preds = %37, %28
  ret void, !dbg !12233
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_list_get_length(%struct.mystr_list*) #0 !dbg !12234 {
  %2 = alloca %struct.mystr_list*, align 8
  store %struct.mystr_list* %0, %struct.mystr_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %2, metadata !12239, metadata !DIExpression()), !dbg !12240
  %3 = load %struct.mystr_list*, %struct.mystr_list** %2, align 8, !dbg !12241
  %4 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %3, i32 0, i32 1, !dbg !12242
  %5 = load i32, i32* %4, align 4, !dbg !12242
  ret i32 %5, !dbg !12243
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_list_contains_str(%struct.mystr_list*, %struct.mystr*) #0 !dbg !12244 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr_list*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  store %struct.mystr_list* %0, %struct.mystr_list** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %4, metadata !12249, metadata !DIExpression()), !dbg !12250
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !12251, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12253, metadata !DIExpression()), !dbg !12254
  store i32 0, i32* %6, align 4, !dbg !12255
  br label %7, !dbg !12257

7:                                                ; preds = %26, %2
  %8 = load i32, i32* %6, align 4, !dbg !12258
  %9 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12260
  %10 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %9, i32 0, i32 1, !dbg !12261
  %11 = load i32, i32* %10, align 4, !dbg !12261
  %12 = icmp ult i32 %8, %11, !dbg !12262
  br i1 %12, label %13, label %29, !dbg !12263

13:                                               ; preds = %7
  %14 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !12264
  %15 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12267
  %16 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %15, i32 0, i32 2, !dbg !12268
  %17 = load %struct.mystr_list_node*, %struct.mystr_list_node** %16, align 8, !dbg !12268
  %18 = load i32, i32* %6, align 4, !dbg !12269
  %19 = zext i32 %18 to i64, !dbg !12267
  %20 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %17, i64 %19, !dbg !12267
  %21 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %20, i32 0, i32 0, !dbg !12270
  %22 = call i32 @str_equal(%struct.mystr* %14, %struct.mystr* %21), !dbg !12271
  %23 = icmp ne i32 %22, 0, !dbg !12271
  br i1 %23, label %24, label %25, !dbg !12272

24:                                               ; preds = %13
  store i32 1, i32* %3, align 4, !dbg !12273
  br label %30, !dbg !12273

25:                                               ; preds = %13
  br label %26, !dbg !12275

26:                                               ; preds = %25
  %27 = load i32, i32* %6, align 4, !dbg !12276
  %28 = add i32 %27, 1, !dbg !12276
  store i32 %28, i32* %6, align 4, !dbg !12276
  br label %7, !dbg !12277, !llvm.loop !12278

29:                                               ; preds = %7
  store i32 0, i32* %3, align 4, !dbg !12280
  br label %30, !dbg !12280

30:                                               ; preds = %29, %24
  %31 = load i32, i32* %3, align 4, !dbg !12281
  ret i32 %31, !dbg !12281
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_list_add(%struct.mystr_list*, %struct.mystr*, %struct.mystr*) #0 !dbg !12282 {
  %4 = alloca %struct.mystr_list*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca %struct.mystr_list_node*, align 8
  store %struct.mystr_list* %0, %struct.mystr_list** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %4, metadata !12285, metadata !DIExpression()), !dbg !12286
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !12287, metadata !DIExpression()), !dbg !12288
  store %struct.mystr* %2, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !12289, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.declare(metadata %struct.mystr_list_node** %7, metadata !12291, metadata !DIExpression()), !dbg !12292
  %8 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12293
  %9 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %8, i32 0, i32 1, !dbg !12295
  %10 = load i32, i32* %9, align 4, !dbg !12295
  %11 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12296
  %12 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %11, i32 0, i32 0, !dbg !12297
  %13 = load i32, i32* %12, align 8, !dbg !12297
  %14 = icmp eq i32 %10, %13, !dbg !12298
  br i1 %14, label %15, label %55, !dbg !12299

15:                                               ; preds = %3
  %16 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12300
  %17 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %16, i32 0, i32 0, !dbg !12303
  %18 = load i32, i32* %17, align 8, !dbg !12303
  %19 = icmp eq i32 %18, 0, !dbg !12304
  br i1 %19, label %20, label %31, !dbg !12305

20:                                               ; preds = %15
  %21 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12306
  %22 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %21, i32 0, i32 0, !dbg !12308
  store i32 32, i32* %22, align 8, !dbg !12309
  %23 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12310
  %24 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %23, i32 0, i32 0, !dbg !12311
  %25 = load i32, i32* %24, align 8, !dbg !12311
  %26 = mul i32 %25, 32, !dbg !12312
  %27 = call i8* @vsf_sysutil_malloc(i32 %26), !dbg !12313
  %28 = bitcast i8* %27 to %struct.mystr_list_node*, !dbg !12313
  %29 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12314
  %30 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %29, i32 0, i32 2, !dbg !12315
  store %struct.mystr_list_node* %28, %struct.mystr_list_node** %30, align 8, !dbg !12316
  br label %54, !dbg !12317

31:                                               ; preds = %15
  %32 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12318
  %33 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %32, i32 0, i32 0, !dbg !12320
  %34 = load i32, i32* %33, align 8, !dbg !12321
  %35 = mul i32 %34, 2, !dbg !12321
  store i32 %35, i32* %33, align 8, !dbg !12321
  %36 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12322
  %37 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %36, i32 0, i32 0, !dbg !12324
  %38 = load i32, i32* %37, align 8, !dbg !12324
  %39 = icmp ugt i32 %38, 10000000, !dbg !12325
  br i1 %39, label %40, label %41, !dbg !12326

40:                                               ; preds = %31
  call void @die(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.582, i32 0, i32 0)), !dbg !12327
  br label %41, !dbg !12329

41:                                               ; preds = %40, %31
  %42 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12330
  %43 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %42, i32 0, i32 2, !dbg !12331
  %44 = load %struct.mystr_list_node*, %struct.mystr_list_node** %43, align 8, !dbg !12331
  %45 = bitcast %struct.mystr_list_node* %44 to i8*, !dbg !12330
  %46 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12332
  %47 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %46, i32 0, i32 0, !dbg !12333
  %48 = load i32, i32* %47, align 8, !dbg !12333
  %49 = mul i32 %48, 32, !dbg !12334
  %50 = call i8* @vsf_sysutil_realloc(i8* %45, i32 %49), !dbg !12335
  %51 = bitcast i8* %50 to %struct.mystr_list_node*, !dbg !12335
  %52 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12336
  %53 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %52, i32 0, i32 2, !dbg !12337
  store %struct.mystr_list_node* %51, %struct.mystr_list_node** %53, align 8, !dbg !12338
  br label %54

54:                                               ; preds = %41, %20
  br label %55, !dbg !12339

55:                                               ; preds = %54, %3
  %56 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12340
  %57 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %56, i32 0, i32 2, !dbg !12341
  %58 = load %struct.mystr_list_node*, %struct.mystr_list_node** %57, align 8, !dbg !12341
  %59 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12342
  %60 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %59, i32 0, i32 1, !dbg !12343
  %61 = load i32, i32* %60, align 4, !dbg !12343
  %62 = zext i32 %61 to i64, !dbg !12340
  %63 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %58, i64 %62, !dbg !12340
  store %struct.mystr_list_node* %63, %struct.mystr_list_node** %7, align 8, !dbg !12344
  %64 = load %struct.mystr_list_node*, %struct.mystr_list_node** %7, align 8, !dbg !12345
  %65 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %64, i32 0, i32 0, !dbg !12346
  %66 = bitcast %struct.mystr* %65 to i8*, !dbg !12347
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 bitcast (%struct.mystr* @s_null_str to i8*), i64 16, i1 false), !dbg !12347
  %67 = load %struct.mystr_list_node*, %struct.mystr_list_node** %7, align 8, !dbg !12348
  %68 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %67, i32 0, i32 1, !dbg !12349
  %69 = bitcast %struct.mystr* %68 to i8*, !dbg !12350
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 bitcast (%struct.mystr* @s_null_str to i8*), i64 16, i1 false), !dbg !12350
  %70 = load %struct.mystr_list_node*, %struct.mystr_list_node** %7, align 8, !dbg !12351
  %71 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %70, i32 0, i32 0, !dbg !12352
  %72 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !12353
  call void @str_copy(%struct.mystr* %71, %struct.mystr* %72), !dbg !12354
  %73 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !12355
  %74 = icmp ne %struct.mystr* %73, null, !dbg !12355
  br i1 %74, label %75, label %79, !dbg !12357

75:                                               ; preds = %55
  %76 = load %struct.mystr_list_node*, %struct.mystr_list_node** %7, align 8, !dbg !12358
  %77 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %76, i32 0, i32 1, !dbg !12360
  %78 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !12361
  call void @str_copy(%struct.mystr* %77, %struct.mystr* %78), !dbg !12362
  br label %79, !dbg !12363

79:                                               ; preds = %75, %55
  %80 = load %struct.mystr_list*, %struct.mystr_list** %4, align 8, !dbg !12364
  %81 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %80, i32 0, i32 1, !dbg !12365
  %82 = load i32, i32* %81, align 4, !dbg !12366
  %83 = add i32 %82, 1, !dbg !12366
  store i32 %83, i32* %81, align 4, !dbg !12366
  ret void, !dbg !12367
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @str_list_sort(%struct.mystr_list*, i32) #0 !dbg !12368 {
  %3 = alloca %struct.mystr_list*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr_list* %0, %struct.mystr_list** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %3, metadata !12371, metadata !DIExpression()), !dbg !12372
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12373, metadata !DIExpression()), !dbg !12374
  %5 = load i32, i32* %4, align 4, !dbg !12375
  %6 = icmp ne i32 %5, 0, !dbg !12375
  br i1 %6, label %15, label %7, !dbg !12377

7:                                                ; preds = %2
  %8 = load %struct.mystr_list*, %struct.mystr_list** %3, align 8, !dbg !12378
  %9 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %8, i32 0, i32 2, !dbg !12380
  %10 = load %struct.mystr_list_node*, %struct.mystr_list_node** %9, align 8, !dbg !12380
  %11 = bitcast %struct.mystr_list_node* %10 to i8*, !dbg !12378
  %12 = load %struct.mystr_list*, %struct.mystr_list** %3, align 8, !dbg !12381
  %13 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %12, i32 0, i32 1, !dbg !12382
  %14 = load i32, i32* %13, align 4, !dbg !12382
  call void @vsf_sysutil_qsort(i8* %11, i32 %14, i32 32, i32 (i8*, i8*)* @sort_compare_func), !dbg !12383
  br label %23, !dbg !12384

15:                                               ; preds = %2
  %16 = load %struct.mystr_list*, %struct.mystr_list** %3, align 8, !dbg !12385
  %17 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %16, i32 0, i32 2, !dbg !12387
  %18 = load %struct.mystr_list_node*, %struct.mystr_list_node** %17, align 8, !dbg !12387
  %19 = bitcast %struct.mystr_list_node* %18 to i8*, !dbg !12385
  %20 = load %struct.mystr_list*, %struct.mystr_list** %3, align 8, !dbg !12388
  %21 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %20, i32 0, i32 1, !dbg !12389
  %22 = load i32, i32* %21, align 4, !dbg !12389
  call void @vsf_sysutil_qsort(i8* %19, i32 %22, i32 32, i32 (i8*, i8*)* @sort_compare_func_reverse), !dbg !12390
  br label %23

23:                                               ; preds = %15, %7
  ret void, !dbg !12391
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sort_compare_func(i8*, i8*) #0 !dbg !12392 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !12395, metadata !DIExpression()), !dbg !12396
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12397, metadata !DIExpression()), !dbg !12398
  %5 = load i8*, i8** %3, align 8, !dbg !12399
  %6 = load i8*, i8** %4, align 8, !dbg !12400
  %7 = call i32 @sort_compare_common(i8* %5, i8* %6, i32 0), !dbg !12401
  ret i32 %7, !dbg !12402
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sort_compare_func_reverse(i8*, i8*) #0 !dbg !12403 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !12404, metadata !DIExpression()), !dbg !12405
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12406, metadata !DIExpression()), !dbg !12407
  %5 = load i8*, i8** %3, align 8, !dbg !12408
  %6 = load i8*, i8** %4, align 8, !dbg !12409
  %7 = call i32 @sort_compare_common(i8* %5, i8* %6, i32 1), !dbg !12410
  ret i32 %7, !dbg !12411
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sort_compare_common(i8*, i8*, i32) #0 !dbg !12412 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mystr*, align 8
  %9 = alloca %struct.mystr*, align 8
  %10 = alloca %struct.mystr_list_node*, align 8
  %11 = alloca %struct.mystr_list_node*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12415, metadata !DIExpression()), !dbg !12416
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12417, metadata !DIExpression()), !dbg !12418
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12419, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.declare(metadata %struct.mystr** %8, metadata !12421, metadata !DIExpression()), !dbg !12422
  call void @llvm.dbg.declare(metadata %struct.mystr** %9, metadata !12423, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.declare(metadata %struct.mystr_list_node** %10, metadata !12425, metadata !DIExpression()), !dbg !12426
  %12 = load i8*, i8** %5, align 8, !dbg !12427
  %13 = bitcast i8* %12 to %struct.mystr_list_node*, !dbg !12428
  store %struct.mystr_list_node* %13, %struct.mystr_list_node** %10, align 8, !dbg !12426
  call void @llvm.dbg.declare(metadata %struct.mystr_list_node** %11, metadata !12429, metadata !DIExpression()), !dbg !12430
  %14 = load i8*, i8** %6, align 8, !dbg !12431
  %15 = bitcast i8* %14 to %struct.mystr_list_node*, !dbg !12432
  store %struct.mystr_list_node* %15, %struct.mystr_list_node** %11, align 8, !dbg !12430
  %16 = load %struct.mystr_list_node*, %struct.mystr_list_node** %10, align 8, !dbg !12433
  %17 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %16, i32 0, i32 1, !dbg !12435
  %18 = call i32 @str_isempty(%struct.mystr* %17), !dbg !12436
  %19 = icmp ne i32 %18, 0, !dbg !12436
  br i1 %19, label %23, label %20, !dbg !12437

20:                                               ; preds = %3
  %21 = load %struct.mystr_list_node*, %struct.mystr_list_node** %10, align 8, !dbg !12438
  %22 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %21, i32 0, i32 1, !dbg !12440
  store %struct.mystr* %22, %struct.mystr** %8, align 8, !dbg !12441
  br label %26, !dbg !12442

23:                                               ; preds = %3
  %24 = load %struct.mystr_list_node*, %struct.mystr_list_node** %10, align 8, !dbg !12443
  %25 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %24, i32 0, i32 0, !dbg !12445
  store %struct.mystr* %25, %struct.mystr** %8, align 8, !dbg !12446
  br label %26

26:                                               ; preds = %23, %20
  %27 = load %struct.mystr_list_node*, %struct.mystr_list_node** %11, align 8, !dbg !12447
  %28 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %27, i32 0, i32 1, !dbg !12449
  %29 = call i32 @str_isempty(%struct.mystr* %28), !dbg !12450
  %30 = icmp ne i32 %29, 0, !dbg !12450
  br i1 %30, label %34, label %31, !dbg !12451

31:                                               ; preds = %26
  %32 = load %struct.mystr_list_node*, %struct.mystr_list_node** %11, align 8, !dbg !12452
  %33 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %32, i32 0, i32 1, !dbg !12454
  store %struct.mystr* %33, %struct.mystr** %9, align 8, !dbg !12455
  br label %37, !dbg !12456

34:                                               ; preds = %26
  %35 = load %struct.mystr_list_node*, %struct.mystr_list_node** %11, align 8, !dbg !12457
  %36 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %35, i32 0, i32 0, !dbg !12459
  store %struct.mystr* %36, %struct.mystr** %9, align 8, !dbg !12460
  br label %37

37:                                               ; preds = %34, %31
  %38 = load i32, i32* %7, align 4, !dbg !12461
  %39 = icmp ne i32 %38, 0, !dbg !12461
  br i1 %39, label %40, label %44, !dbg !12463

40:                                               ; preds = %37
  %41 = load %struct.mystr*, %struct.mystr** %9, align 8, !dbg !12464
  %42 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !12466
  %43 = call i32 @str_strcmp(%struct.mystr* %41, %struct.mystr* %42), !dbg !12467
  store i32 %43, i32* %4, align 4, !dbg !12468
  br label %48, !dbg !12468

44:                                               ; preds = %37
  %45 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !12469
  %46 = load %struct.mystr*, %struct.mystr** %9, align 8, !dbg !12471
  %47 = call i32 @str_strcmp(%struct.mystr* %45, %struct.mystr* %46), !dbg !12472
  store i32 %47, i32* %4, align 4, !dbg !12473
  br label %48, !dbg !12473

48:                                               ; preds = %44, %40
  %49 = load i32, i32* %4, align 4, !dbg !12474
  ret i32 %49, !dbg !12474
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.mystr* @str_list_get_pstr(%struct.mystr_list*, i32) #0 !dbg !12475 {
  %3 = alloca %struct.mystr_list*, align 8
  %4 = alloca i32, align 4
  store %struct.mystr_list* %0, %struct.mystr_list** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr_list** %3, metadata !12478, metadata !DIExpression()), !dbg !12479
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12480, metadata !DIExpression()), !dbg !12481
  %5 = load i32, i32* %4, align 4, !dbg !12482
  %6 = load %struct.mystr_list*, %struct.mystr_list** %3, align 8, !dbg !12484
  %7 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %6, i32 0, i32 1, !dbg !12485
  %8 = load i32, i32* %7, align 4, !dbg !12485
  %9 = icmp uge i32 %5, %8, !dbg !12486
  br i1 %9, label %10, label %11, !dbg !12487

10:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.587, i32 0, i32 0)), !dbg !12488
  br label %11, !dbg !12490

11:                                               ; preds = %10, %2
  %12 = load %struct.mystr_list*, %struct.mystr_list** %3, align 8, !dbg !12491
  %13 = getelementptr inbounds %struct.mystr_list, %struct.mystr_list* %12, i32 0, i32 2, !dbg !12492
  %14 = load %struct.mystr_list_node*, %struct.mystr_list_node** %13, align 8, !dbg !12492
  %15 = load i32, i32* %4, align 4, !dbg !12493
  %16 = zext i32 %15 to i64, !dbg !12491
  %17 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %14, i64 %16, !dbg !12491
  %18 = getelementptr inbounds %struct.mystr_list_node, %struct.mystr_list_node* %17, i32 0, i32 0, !dbg !12494
  ret %struct.mystr* %18, !dbg !12495
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_banner_dir_changed(%struct.vsf_session*, i32) #0 !dbg !12496 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.mystr, align 8
  %6 = alloca %struct.mystr_list, align 8
  %7 = alloca %struct.mystr, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !12570, metadata !DIExpression()), !dbg !12571
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12572, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !12574, metadata !DIExpression()), !dbg !12575
  %8 = bitcast %struct.mystr* %5 to i8*, !dbg !12575
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false), !dbg !12575
  %9 = load i32, i32* @tunable_dirmessage_enable, align 4, !dbg !12576
  %10 = icmp ne i32 %9, 0, !dbg !12576
  br i1 %10, label %12, label %11, !dbg !12578

11:                                               ; preds = %2
  br label %55, !dbg !12579

12:                                               ; preds = %2
  %13 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !12581
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 23, !dbg !12583
  %15 = load %struct.mystr_list*, %struct.mystr_list** %14, align 8, !dbg !12583
  %16 = icmp eq %struct.mystr_list* %15, null, !dbg !12584
  br i1 %16, label %17, label %28, !dbg !12585

17:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata %struct.mystr_list* %6, metadata !12586, metadata !DIExpression()), !dbg !12588
  %18 = bitcast %struct.mystr_list* %6 to i8*, !dbg !12588
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false), !dbg !12588
  %19 = call i8* @vsf_sysutil_malloc(i32 16), !dbg !12589
  %20 = bitcast i8* %19 to %struct.mystr_list*, !dbg !12589
  %21 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !12590
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 23, !dbg !12591
  store %struct.mystr_list* %20, %struct.mystr_list** %22, align 8, !dbg !12592
  %23 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !12593
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 23, !dbg !12594
  %25 = load %struct.mystr_list*, %struct.mystr_list** %24, align 8, !dbg !12594
  %26 = bitcast %struct.mystr_list* %25 to i8*, !dbg !12595
  %27 = bitcast %struct.mystr_list* %6 to i8*, !dbg !12595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false), !dbg !12595
  br label %28, !dbg !12596

28:                                               ; preds = %17, %12
  call void @str_getcwd(%struct.mystr* %5), !dbg !12597
  %29 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !12598
  %30 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %29, i32 0, i32 23, !dbg !12600
  %31 = load %struct.mystr_list*, %struct.mystr_list** %30, align 8, !dbg !12600
  %32 = call i32 @str_list_contains_str(%struct.mystr_list* %31, %struct.mystr* %5), !dbg !12601
  %33 = icmp ne i32 %32, 0, !dbg !12601
  br i1 %33, label %54, label %34, !dbg !12602

34:                                               ; preds = %28
  %35 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !12603
  %36 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %35, i32 0, i32 23, !dbg !12606
  %37 = load %struct.mystr_list*, %struct.mystr_list** %36, align 8, !dbg !12606
  %38 = call i32 @str_list_get_length(%struct.mystr_list* %37), !dbg !12607
  %39 = icmp ult i32 %38, 100, !dbg !12608
  br i1 %39, label %40, label %44, !dbg !12609

40:                                               ; preds = %34
  %41 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !12610
  %42 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %41, i32 0, i32 23, !dbg !12612
  %43 = load %struct.mystr_list*, %struct.mystr_list** %42, align 8, !dbg !12612
  call void @str_list_add(%struct.mystr_list* %43, %struct.mystr* %5, %struct.mystr* null), !dbg !12613
  br label %44, !dbg !12614

44:                                               ; preds = %40, %34
  call void @llvm.dbg.declare(metadata %struct.mystr* %7, metadata !12615, metadata !DIExpression()), !dbg !12617
  %45 = bitcast %struct.mystr* %7 to i8*, !dbg !12617
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false), !dbg !12617
  %46 = load i8*, i8** @tunable_message_file, align 8, !dbg !12618
  %47 = icmp ne i8* %46, null, !dbg !12618
  br i1 %47, label %48, label %51, !dbg !12620

48:                                               ; preds = %44
  %49 = load i8*, i8** @tunable_message_file, align 8, !dbg !12621
  %50 = call i32 @str_fileread(%struct.mystr* %7, i8* %49, i32 4000), !dbg !12623
  br label %51, !dbg !12624

51:                                               ; preds = %48, %44
  %52 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !12625
  %53 = load i32, i32* %4, align 4, !dbg !12626
  call void @vsf_banner_write(%struct.vsf_session* %52, %struct.mystr* %7, i32 %53), !dbg !12627
  call void @str_free(%struct.mystr* %7), !dbg !12628
  br label %54, !dbg !12629

54:                                               ; preds = %51, %28
  call void @str_free(%struct.mystr* %5), !dbg !12630
  br label %55, !dbg !12631

55:                                               ; preds = %54, %11
  ret void, !dbg !12631
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_banner_write(%struct.vsf_session*, %struct.mystr*, i32) #0 !dbg !12632 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mystr, align 8
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !12636, metadata !DIExpression()), !dbg !12637
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !12638, metadata !DIExpression()), !dbg !12639
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12640, metadata !DIExpression()), !dbg !12641
  call void @llvm.dbg.declare(metadata %struct.mystr* %7, metadata !12642, metadata !DIExpression()), !dbg !12643
  %9 = bitcast %struct.mystr* %7 to i8*, !dbg !12643
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false), !dbg !12643
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12644, metadata !DIExpression()), !dbg !12645
  store i32 0, i32* %8, align 4, !dbg !12645
  br label %10, !dbg !12646

10:                                               ; preds = %14, %3
  %11 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !12647
  %12 = call i32 @str_getline(%struct.mystr* %11, %struct.mystr* %7, i32* %8), !dbg !12648
  %13 = icmp ne i32 %12, 0, !dbg !12646
  br i1 %13, label %14, label %17, !dbg !12646

14:                                               ; preds = %10
  %15 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !12649
  %16 = load i32, i32* %6, align 4, !dbg !12651
  call void @vsf_cmdio_write_str_hyphen(%struct.vsf_session* %15, i32 %16, %struct.mystr* %7), !dbg !12652
  br label %10, !dbg !12646, !llvm.loop !12653

17:                                               ; preds = %10
  call void @str_free(%struct.mystr* %7), !dbg !12655
  ret void, !dbg !12656
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @str_fileread(%struct.mystr*, i8*, i32) #0 !dbg !12657 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.vsf_sysutil_statbuf*, align 8
  store %struct.mystr* %0, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !12666, metadata !DIExpression()), !dbg !12667
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12668, metadata !DIExpression()), !dbg !12669
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12670, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12672, metadata !DIExpression()), !dbg !12673
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12674, metadata !DIExpression()), !dbg !12675
  store i32 0, i32* %9, align 4, !dbg !12675
  call void @llvm.dbg.declare(metadata i64* %10, metadata !12676, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.declare(metadata i8** %11, metadata !12678, metadata !DIExpression()), !dbg !12679
  store i8* null, i8** %11, align 8, !dbg !12679
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %12, metadata !12680, metadata !DIExpression()), !dbg !12681
  store %struct.vsf_sysutil_statbuf* null, %struct.vsf_sysutil_statbuf** %12, align 8, !dbg !12681
  %13 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !12682
  call void @str_empty(%struct.mystr* %13), !dbg !12683
  %14 = load i8*, i8** %6, align 8, !dbg !12684
  %15 = call i32 @vsf_sysutil_open_file(i8* %14, i32 1), !dbg !12685
  store i32 %15, i32* %8, align 4, !dbg !12686
  %16 = load i32, i32* %8, align 4, !dbg !12687
  %17 = call i32 @vsf_sysutil_retval_is_error(i32 %16), !dbg !12689
  %18 = icmp ne i32 %17, 0, !dbg !12689
  br i1 %18, label %19, label %21, !dbg !12690

19:                                               ; preds = %3
  %20 = load i32, i32* %8, align 4, !dbg !12691
  store i32 %20, i32* %4, align 4, !dbg !12693
  br label %66, !dbg !12693

21:                                               ; preds = %3
  %22 = load i32, i32* %8, align 4, !dbg !12694
  call void @vsf_sysutil_fstat(i32 %22, %struct.vsf_sysutil_statbuf** %12), !dbg !12695
  %23 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %12, align 8, !dbg !12696
  %24 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %23), !dbg !12698
  %25 = icmp ne i32 %24, 0, !dbg !12698
  br i1 %25, label %26, label %60, !dbg !12699

26:                                               ; preds = %21
  %27 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %12, align 8, !dbg !12700
  %28 = call i64 @vsf_sysutil_statbuf_get_size(%struct.vsf_sysutil_statbuf* %27), !dbg !12702
  store i64 %28, i64* %10, align 8, !dbg !12703
  %29 = load i64, i64* %10, align 8, !dbg !12704
  %30 = load i32, i32* %7, align 4, !dbg !12706
  %31 = zext i32 %30 to i64, !dbg !12706
  %32 = icmp sgt i64 %29, %31, !dbg !12707
  br i1 %32, label %33, label %36, !dbg !12708

33:                                               ; preds = %26
  %34 = load i32, i32* %7, align 4, !dbg !12709
  %35 = zext i32 %34 to i64, !dbg !12709
  store i64 %35, i64* %10, align 8, !dbg !12711
  br label %36, !dbg !12712

36:                                               ; preds = %33, %26
  %37 = load i64, i64* %10, align 8, !dbg !12713
  %38 = trunc i64 %37 to i32, !dbg !12714
  call void @vsf_secbuf_alloc(i8** %11, i32 %38), !dbg !12715
  %39 = load i32, i32* %8, align 4, !dbg !12716
  %40 = load i8*, i8** %11, align 8, !dbg !12717
  %41 = load i64, i64* %10, align 8, !dbg !12718
  %42 = trunc i64 %41 to i32, !dbg !12719
  %43 = call i32 @vsf_sysutil_read_loop(i32 %39, i8* %40, i32 %42), !dbg !12720
  store i32 %43, i32* %9, align 4, !dbg !12721
  %44 = load i32, i32* %9, align 4, !dbg !12722
  %45 = call i32 @vsf_sysutil_retval_is_error(i32 %44), !dbg !12724
  %46 = icmp ne i32 %45, 0, !dbg !12724
  br i1 %46, label %47, label %48, !dbg !12725

47:                                               ; preds = %36
  br label %61, !dbg !12726

48:                                               ; preds = %36
  %49 = load i32, i32* %9, align 4, !dbg !12728
  %50 = zext i32 %49 to i64, !dbg !12730
  %51 = load i64, i64* %10, align 8, !dbg !12731
  %52 = icmp ne i64 %50, %51, !dbg !12732
  br i1 %52, label %53, label %54, !dbg !12733

53:                                               ; preds = %48
  call void @die(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.594, i32 0, i32 0)), !dbg !12734
  br label %54, !dbg !12736

54:                                               ; preds = %53, %48
  br label %55

55:                                               ; preds = %54
  %56 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !12737
  %57 = load i8*, i8** %11, align 8, !dbg !12738
  %58 = load i64, i64* %10, align 8, !dbg !12739
  %59 = trunc i64 %58 to i32, !dbg !12740
  call void @private_str_alloc_memchunk(%struct.mystr* %56, i8* %57, i32 %59), !dbg !12741
  br label %60, !dbg !12742

60:                                               ; preds = %55, %21
  br label %61, !dbg !12743

61:                                               ; preds = %60, %47
  %62 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %12, align 8, !dbg !12744
  %63 = bitcast %struct.vsf_sysutil_statbuf* %62 to i8*, !dbg !12744
  call void @vsf_sysutil_free(i8* %63), !dbg !12745
  call void @vsf_secbuf_free(i8** %11), !dbg !12746
  %64 = load i32, i32* %8, align 4, !dbg !12747
  call void @vsf_sysutil_close(i32 %64), !dbg !12748
  %65 = load i32, i32* %9, align 4, !dbg !12749
  store i32 %65, i32* %4, align 4, !dbg !12750
  br label %66, !dbg !12750

66:                                               ; preds = %61, %19
  %67 = load i32, i32* %4, align 4, !dbg !12751
  ret i32 %67, !dbg !12751
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_parseconf_load_file(i8*, i32) #0 !dbg !12752 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.mystr, align 8
  %6 = alloca %struct.mystr, align 8
  %7 = alloca %struct.mystr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.vsf_sysutil_statbuf*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !12753, metadata !DIExpression()), !dbg !12754
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12755, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !12757, metadata !DIExpression()), !dbg !12758
  %11 = bitcast %struct.mystr* %5 to i8*, !dbg !12758
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false), !dbg !12758
  call void @llvm.dbg.declare(metadata %struct.mystr* %6, metadata !12759, metadata !DIExpression()), !dbg !12760
  %12 = bitcast %struct.mystr* %6 to i8*, !dbg !12760
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false), !dbg !12760
  call void @llvm.dbg.declare(metadata %struct.mystr* %7, metadata !12761, metadata !DIExpression()), !dbg !12762
  %13 = bitcast %struct.mystr* %7 to i8*, !dbg !12762
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false), !dbg !12762
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12763, metadata !DIExpression()), !dbg !12764
  store i32 0, i32* %8, align 4, !dbg !12764
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12765, metadata !DIExpression()), !dbg !12766
  %14 = load i8*, i8** %3, align 8, !dbg !12767
  %15 = icmp ne i8* %14, null, !dbg !12767
  br i1 %15, label %18, label %16, !dbg !12769

16:                                               ; preds = %2
  %17 = load i8*, i8** @s_p_saved_filename, align 8, !dbg !12770
  store i8* %17, i8** %3, align 8, !dbg !12772
  br label %26, !dbg !12773

18:                                               ; preds = %2
  %19 = load i8*, i8** @s_p_saved_filename, align 8, !dbg !12774
  %20 = icmp ne i8* %19, null, !dbg !12774
  br i1 %20, label %21, label %23, !dbg !12777

21:                                               ; preds = %18
  %22 = load i8*, i8** @s_p_saved_filename, align 8, !dbg !12778
  call void @vsf_sysutil_free(i8* %22), !dbg !12780
  br label %23, !dbg !12781

23:                                               ; preds = %21, %18
  %24 = load i8*, i8** %3, align 8, !dbg !12782
  %25 = call i8* @vsf_sysutil_strdup(i8* %24), !dbg !12783
  store i8* %25, i8** @s_p_saved_filename, align 8, !dbg !12784
  br label %26

26:                                               ; preds = %23, %16
  %27 = load i8*, i8** %3, align 8, !dbg !12785
  %28 = icmp ne i8* %27, null, !dbg !12785
  br i1 %28, label %30, label %29, !dbg !12787

29:                                               ; preds = %26
  call void @bug(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.597, i32 0, i32 0)), !dbg !12788
  br label %30, !dbg !12790

30:                                               ; preds = %29, %26
  %31 = load i8*, i8** %3, align 8, !dbg !12791
  %32 = call i32 @str_fileread(%struct.mystr* %5, i8* %31, i32 100000), !dbg !12792
  store i32 %32, i32* %9, align 4, !dbg !12793
  %33 = load i32, i32* %9, align 4, !dbg !12794
  %34 = call i32 @vsf_sysutil_retval_is_error(i32 %33), !dbg !12796
  %35 = icmp ne i32 %34, 0, !dbg !12796
  br i1 %35, label %36, label %43, !dbg !12797

36:                                               ; preds = %30
  %37 = load i32, i32* %4, align 4, !dbg !12798
  %38 = icmp ne i32 %37, 0, !dbg !12798
  br i1 %38, label %39, label %41, !dbg !12801

39:                                               ; preds = %36
  %40 = load i8*, i8** %3, align 8, !dbg !12802
  call void @die2(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.598, i32 0, i32 0), i8* %40), !dbg !12804
  br label %42, !dbg !12805

41:                                               ; preds = %36
  call void @str_free(%struct.mystr* %5), !dbg !12806
  br label %80, !dbg !12808

42:                                               ; preds = %39
  br label %43, !dbg !12809

43:                                               ; preds = %42, %30
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %10, metadata !12810, metadata !DIExpression()), !dbg !12812
  store %struct.vsf_sysutil_statbuf* null, %struct.vsf_sysutil_statbuf** %10, align 8, !dbg !12812
  %44 = load i8*, i8** %3, align 8, !dbg !12813
  %45 = call i32 @vsf_sysutil_stat(i8* %44, %struct.vsf_sysutil_statbuf** %10), !dbg !12814
  store i32 %45, i32* %9, align 4, !dbg !12815
  %46 = load i32, i32* %9, align 4, !dbg !12816
  %47 = call i32 @vsf_sysutil_retval_is_error(i32 %46), !dbg !12818
  %48 = icmp ne i32 %47, 0, !dbg !12818
  br i1 %48, label %58, label %49, !dbg !12819

49:                                               ; preds = %43
  %50 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %10, align 8, !dbg !12820
  %51 = call i32 @vsf_sysutil_statbuf_get_uid(%struct.vsf_sysutil_statbuf* %50), !dbg !12821
  %52 = call i32 @vsf_sysutil_getuid(), !dbg !12822
  %53 = icmp ne i32 %51, %52, !dbg !12823
  br i1 %53, label %58, label %54, !dbg !12824

54:                                               ; preds = %49
  %55 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %10, align 8, !dbg !12825
  %56 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %55), !dbg !12826
  %57 = icmp ne i32 %56, 0, !dbg !12826
  br i1 %57, label %59, label %58, !dbg !12827

58:                                               ; preds = %54, %49, %43
  call void @die(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.599, i32 0, i32 0)), !dbg !12828
  br label %59, !dbg !12830

59:                                               ; preds = %58, %54
  %60 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %10, align 8, !dbg !12831
  %61 = bitcast %struct.vsf_sysutil_statbuf* %60 to i8*, !dbg !12831
  call void @vsf_sysutil_free(i8* %61), !dbg !12832
  br label %62, !dbg !12833

62:                                               ; preds = %76, %75, %59
  %63 = call i32 @str_getline(%struct.mystr* %5, %struct.mystr* %6, i32* %8), !dbg !12834
  %64 = icmp ne i32 %63, 0, !dbg !12833
  br i1 %64, label %65, label %79, !dbg !12833

65:                                               ; preds = %62
  %66 = call i32 @str_isempty(%struct.mystr* %6), !dbg !12835
  %67 = icmp ne i32 %66, 0, !dbg !12835
  br i1 %67, label %75, label %68, !dbg !12838

68:                                               ; preds = %65
  %69 = call signext i8 @str_get_char_at(%struct.mystr* %6, i32 0), !dbg !12839
  %70 = sext i8 %69 to i32, !dbg !12839
  %71 = icmp eq i32 %70, 35, !dbg !12840
  br i1 %71, label %75, label %72, !dbg !12841

72:                                               ; preds = %68
  %73 = call i32 @str_all_space(%struct.mystr* %6), !dbg !12842
  %74 = icmp ne i32 %73, 0, !dbg !12842
  br i1 %74, label %75, label %76, !dbg !12843

75:                                               ; preds = %72, %68, %65
  br label %62, !dbg !12844, !llvm.loop !12846

76:                                               ; preds = %72
  %77 = call i8* @str_getbuf(%struct.mystr* %6), !dbg !12848
  %78 = load i32, i32* %4, align 4, !dbg !12849
  call void @vsf_parseconf_load_setting(i8* %77, i32 %78), !dbg !12850
  br label %62, !dbg !12833, !llvm.loop !12846

79:                                               ; preds = %62
  call void @str_free(%struct.mystr* %5), !dbg !12851
  call void @str_free(%struct.mystr* %6), !dbg !12852
  call void @str_free(%struct.mystr* %7), !dbg !12853
  br label %80, !dbg !12854

80:                                               ; preds = %79, %41
  ret void, !dbg !12854
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_parseconf_load_setting(i8*, i32) #0 !dbg !922 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.parseconf_str_setting*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca %struct.parseconf_bool_setting*, align 8
  %8 = alloca %struct.parseconf_bool_setting*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !12855, metadata !DIExpression()), !dbg !12856
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12857, metadata !DIExpression()), !dbg !12858
  br label %9, !dbg !12859

9:                                                ; preds = %15, %2
  %10 = load i8*, i8** %3, align 8, !dbg !12860
  %11 = load i8, i8* %10, align 1, !dbg !12861
  %12 = sext i8 %11 to i32, !dbg !12861
  %13 = call i32 @vsf_sysutil_isspace(i32 %12), !dbg !12862
  %14 = icmp ne i32 %13, 0, !dbg !12859
  br i1 %14, label %15, label %18, !dbg !12859

15:                                               ; preds = %9
  %16 = load i8*, i8** %3, align 8, !dbg !12863
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !12863
  store i8* %17, i8** %3, align 8, !dbg !12863
  br label %9, !dbg !12859, !llvm.loop !12865

18:                                               ; preds = %9
  %19 = load i8*, i8** %3, align 8, !dbg !12867
  call void @str_alloc_text(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str, i8* %19), !dbg !12868
  call void @str_split_char(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str, %struct.mystr* @vsf_parseconf_load_setting.s_value_str, i8 signext 61), !dbg !12869
  call void @llvm.dbg.declare(metadata %struct.parseconf_str_setting** %5, metadata !12870, metadata !DIExpression()), !dbg !12874
  store %struct.parseconf_str_setting* getelementptr inbounds ([33 x %struct.parseconf_str_setting], [33 x %struct.parseconf_str_setting]* @parseconf_str_array, i32 0, i32 0), %struct.parseconf_str_setting** %5, align 8, !dbg !12874
  br label %20, !dbg !12875

20:                                               ; preds = %50, %18
  %21 = load %struct.parseconf_str_setting*, %struct.parseconf_str_setting** %5, align 8, !dbg !12876
  %22 = getelementptr inbounds %struct.parseconf_str_setting, %struct.parseconf_str_setting* %21, i32 0, i32 0, !dbg !12877
  %23 = load i8*, i8** %22, align 8, !dbg !12877
  %24 = icmp ne i8* %23, null, !dbg !12878
  br i1 %24, label %25, label %53, !dbg !12875

25:                                               ; preds = %20
  %26 = load %struct.parseconf_str_setting*, %struct.parseconf_str_setting** %5, align 8, !dbg !12879
  %27 = getelementptr inbounds %struct.parseconf_str_setting, %struct.parseconf_str_setting* %26, i32 0, i32 0, !dbg !12882
  %28 = load i8*, i8** %27, align 8, !dbg !12882
  %29 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str, i8* %28), !dbg !12883
  %30 = icmp ne i32 %29, 0, !dbg !12883
  br i1 %30, label %31, label %50, !dbg !12884

31:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !12885, metadata !DIExpression()), !dbg !12887
  %32 = load %struct.parseconf_str_setting*, %struct.parseconf_str_setting** %5, align 8, !dbg !12888
  %33 = getelementptr inbounds %struct.parseconf_str_setting, %struct.parseconf_str_setting* %32, i32 0, i32 1, !dbg !12889
  %34 = load i8**, i8*** %33, align 8, !dbg !12889
  store i8** %34, i8*** %6, align 8, !dbg !12887
  %35 = load i8**, i8*** %6, align 8, !dbg !12890
  %36 = load i8*, i8** %35, align 8, !dbg !12892
  %37 = icmp ne i8* %36, null, !dbg !12892
  br i1 %37, label %38, label %41, !dbg !12893

38:                                               ; preds = %31
  %39 = load i8**, i8*** %6, align 8, !dbg !12894
  %40 = load i8*, i8** %39, align 8, !dbg !12896
  call void @vsf_sysutil_free(i8* %40), !dbg !12897
  br label %41, !dbg !12898

41:                                               ; preds = %38, %31
  %42 = call i32 @str_isempty(%struct.mystr* @vsf_parseconf_load_setting.s_value_str), !dbg !12899
  %43 = icmp ne i32 %42, 0, !dbg !12899
  br i1 %43, label %44, label %46, !dbg !12901

44:                                               ; preds = %41
  %45 = load i8**, i8*** %6, align 8, !dbg !12902
  store i8* null, i8** %45, align 8, !dbg !12904
  br label %49, !dbg !12905

46:                                               ; preds = %41
  %47 = call i8* @str_strdup(%struct.mystr* @vsf_parseconf_load_setting.s_value_str), !dbg !12906
  %48 = load i8**, i8*** %6, align 8, !dbg !12908
  store i8* %47, i8** %48, align 8, !dbg !12909
  br label %49

49:                                               ; preds = %46, %44
  br label %150, !dbg !12910

50:                                               ; preds = %25
  %51 = load %struct.parseconf_str_setting*, %struct.parseconf_str_setting** %5, align 8, !dbg !12911
  %52 = getelementptr inbounds %struct.parseconf_str_setting, %struct.parseconf_str_setting* %51, i32 1, !dbg !12911
  store %struct.parseconf_str_setting* %52, %struct.parseconf_str_setting** %5, align 8, !dbg !12911
  br label %20, !dbg !12875, !llvm.loop !12912

53:                                               ; preds = %20
  %54 = call i32 @str_isempty(%struct.mystr* @vsf_parseconf_load_setting.s_value_str), !dbg !12914
  %55 = icmp ne i32 %54, 0, !dbg !12914
  br i1 %55, label %56, label %63, !dbg !12916

56:                                               ; preds = %53
  %57 = load i32, i32* %4, align 4, !dbg !12917
  %58 = icmp ne i32 %57, 0, !dbg !12917
  br i1 %58, label %59, label %61, !dbg !12920

59:                                               ; preds = %56
  %60 = call i8* @str_getbuf(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str), !dbg !12921
  call void @die2(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.602, i32 0, i32 0), i8* %60), !dbg !12923
  br label %62, !dbg !12924

61:                                               ; preds = %56
  br label %150, !dbg !12925

62:                                               ; preds = %59
  br label %63, !dbg !12927

63:                                               ; preds = %62, %53
  call void @llvm.dbg.declare(metadata %struct.parseconf_bool_setting** %7, metadata !12928, metadata !DIExpression()), !dbg !12932
  store %struct.parseconf_bool_setting* getelementptr inbounds ([81 x %struct.parseconf_bool_setting], [81 x %struct.parseconf_bool_setting]* @parseconf_bool_array, i32 0, i32 0), %struct.parseconf_bool_setting** %7, align 8, !dbg !12932
  br label %64, !dbg !12933

64:                                               ; preds = %109, %63
  %65 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %7, align 8, !dbg !12934
  %66 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %65, i32 0, i32 0, !dbg !12935
  %67 = load i8*, i8** %66, align 8, !dbg !12935
  %68 = icmp ne i8* %67, null, !dbg !12936
  br i1 %68, label %69, label %112, !dbg !12933

69:                                               ; preds = %64
  %70 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %7, align 8, !dbg !12937
  %71 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %70, i32 0, i32 0, !dbg !12940
  %72 = load i8*, i8** %71, align 8, !dbg !12940
  %73 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str, i8* %72), !dbg !12941
  %74 = icmp ne i32 %73, 0, !dbg !12941
  br i1 %74, label %75, label %109, !dbg !12942

75:                                               ; preds = %69
  call void @str_upper(%struct.mystr* @vsf_parseconf_load_setting.s_value_str), !dbg !12943
  %76 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_value_str, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.603, i32 0, i32 0)), !dbg !12945
  %77 = icmp ne i32 %76, 0, !dbg !12945
  br i1 %77, label %84, label %78, !dbg !12947

78:                                               ; preds = %75
  %79 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_value_str, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.604, i32 0, i32 0)), !dbg !12948
  %80 = icmp ne i32 %79, 0, !dbg !12948
  br i1 %80, label %84, label %81, !dbg !12949

81:                                               ; preds = %78
  %82 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_value_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.605, i32 0, i32 0)), !dbg !12950
  %83 = icmp ne i32 %82, 0, !dbg !12950
  br i1 %83, label %84, label %88, !dbg !12951

84:                                               ; preds = %81, %78, %75
  %85 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %7, align 8, !dbg !12952
  %86 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %85, i32 0, i32 1, !dbg !12954
  %87 = load i32*, i32** %86, align 8, !dbg !12954
  store i32 1, i32* %87, align 4, !dbg !12955
  br label %108, !dbg !12956

88:                                               ; preds = %81
  %89 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_value_str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.606, i32 0, i32 0)), !dbg !12957
  %90 = icmp ne i32 %89, 0, !dbg !12957
  br i1 %90, label %97, label %91, !dbg !12959

91:                                               ; preds = %88
  %92 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_value_str, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.607, i32 0, i32 0)), !dbg !12960
  %93 = icmp ne i32 %92, 0, !dbg !12960
  br i1 %93, label %97, label %94, !dbg !12961

94:                                               ; preds = %91
  %95 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_value_str, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.608, i32 0, i32 0)), !dbg !12962
  %96 = icmp ne i32 %95, 0, !dbg !12962
  br i1 %96, label %97, label %101, !dbg !12963

97:                                               ; preds = %94, %91, %88
  %98 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %7, align 8, !dbg !12964
  %99 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %98, i32 0, i32 1, !dbg !12966
  %100 = load i32*, i32** %99, align 8, !dbg !12966
  store i32 0, i32* %100, align 4, !dbg !12967
  br label %107, !dbg !12968

101:                                              ; preds = %94
  %102 = load i32, i32* %4, align 4, !dbg !12969
  %103 = icmp ne i32 %102, 0, !dbg !12969
  br i1 %103, label %104, label %106, !dbg !12971

104:                                              ; preds = %101
  %105 = call i8* @str_getbuf(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str), !dbg !12972
  call void @die2(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.609, i32 0, i32 0), i8* %105), !dbg !12974
  br label %106, !dbg !12975

106:                                              ; preds = %104, %101
  br label %107

107:                                              ; preds = %106, %97
  br label %108

108:                                              ; preds = %107, %84
  br label %150, !dbg !12976

109:                                              ; preds = %69
  %110 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %7, align 8, !dbg !12977
  %111 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %110, i32 1, !dbg !12977
  store %struct.parseconf_bool_setting* %111, %struct.parseconf_bool_setting** %7, align 8, !dbg !12977
  br label %64, !dbg !12933, !llvm.loop !12978

112:                                              ; preds = %64
  call void @llvm.dbg.declare(metadata %struct.parseconf_bool_setting** %8, metadata !12980, metadata !DIExpression()), !dbg !12984
  store %struct.parseconf_bool_setting* getelementptr inbounds ([21 x %struct.parseconf_bool_setting], [21 x %struct.parseconf_bool_setting]* @parseconf_uint_array, i32 0, i32 0), %struct.parseconf_bool_setting** %8, align 8, !dbg !12984
  br label %113, !dbg !12985

113:                                              ; preds = %142, %112
  %114 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %8, align 8, !dbg !12986
  %115 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %114, i32 0, i32 0, !dbg !12987
  %116 = load i8*, i8** %115, align 8, !dbg !12987
  %117 = icmp ne i8* %116, null, !dbg !12988
  br i1 %117, label %118, label %145, !dbg !12985

118:                                              ; preds = %113
  %119 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %8, align 8, !dbg !12989
  %120 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %119, i32 0, i32 0, !dbg !12992
  %121 = load i8*, i8** %120, align 8, !dbg !12992
  %122 = call i32 @str_equal_text(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str, i8* %121), !dbg !12993
  %123 = icmp ne i32 %122, 0, !dbg !12993
  br i1 %123, label %124, label %142, !dbg !12994

124:                                              ; preds = %118
  %125 = call i32 @str_isempty(%struct.mystr* @vsf_parseconf_load_setting.s_value_str), !dbg !12995
  %126 = icmp ne i32 %125, 0, !dbg !12995
  br i1 %126, label %136, label %127, !dbg !12998

127:                                              ; preds = %124
  %128 = call signext i8 @str_get_char_at(%struct.mystr* @vsf_parseconf_load_setting.s_value_str, i32 0), !dbg !12999
  %129 = sext i8 %128 to i32, !dbg !12999
  %130 = icmp eq i32 %129, 48, !dbg !13000
  br i1 %130, label %131, label %136, !dbg !13001

131:                                              ; preds = %127
  %132 = call i32 @str_octal_to_uint(%struct.mystr* @vsf_parseconf_load_setting.s_value_str), !dbg !13002
  %133 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %8, align 8, !dbg !13004
  %134 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %133, i32 0, i32 1, !dbg !13005
  %135 = load i32*, i32** %134, align 8, !dbg !13005
  store i32 %132, i32* %135, align 4, !dbg !13006
  br label %141, !dbg !13007

136:                                              ; preds = %127, %124
  %137 = call i32 @str_atoi(%struct.mystr* @vsf_parseconf_load_setting.s_value_str), !dbg !13008
  %138 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %8, align 8, !dbg !13010
  %139 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %138, i32 0, i32 1, !dbg !13011
  %140 = load i32*, i32** %139, align 8, !dbg !13011
  store i32 %137, i32* %140, align 4, !dbg !13012
  br label %141

141:                                              ; preds = %136, %131
  br label %150, !dbg !13013

142:                                              ; preds = %118
  %143 = load %struct.parseconf_bool_setting*, %struct.parseconf_bool_setting** %8, align 8, !dbg !13014
  %144 = getelementptr inbounds %struct.parseconf_bool_setting, %struct.parseconf_bool_setting* %143, i32 1, !dbg !13014
  store %struct.parseconf_bool_setting* %144, %struct.parseconf_bool_setting** %8, align 8, !dbg !13014
  br label %113, !dbg !12985, !llvm.loop !13015

145:                                              ; preds = %113
  %146 = load i32, i32* %4, align 4, !dbg !13017
  %147 = icmp ne i32 %146, 0, !dbg !13017
  br i1 %147, label %148, label %150, !dbg !13019

148:                                              ; preds = %145
  %149 = call i8* @str_getbuf(%struct.mystr* @vsf_parseconf_load_setting.s_setting_str), !dbg !13020
  call void @die2(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11.610, i32 0, i32 0), i8* %149), !dbg !13022
  br label %150, !dbg !13023

150:                                              ; preds = %49, %61, %108, %141, %148, %145
  ret void, !dbg !13024
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_secutil_change_credentials(%struct.mystr*, %struct.mystr*, %struct.mystr*, i32, i32) #0 !dbg !13025 {
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca %struct.mystr*, align 8
  %8 = alloca %struct.mystr*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.vsf_sysutil_user*, align 8
  %12 = alloca %struct.mystr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !13035, metadata !DIExpression()), !dbg !13036
  store %struct.mystr* %1, %struct.mystr** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %7, metadata !13037, metadata !DIExpression()), !dbg !13038
  store %struct.mystr* %2, %struct.mystr** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %8, metadata !13039, metadata !DIExpression()), !dbg !13040
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13041, metadata !DIExpression()), !dbg !13042
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13043, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %11, metadata !13045, metadata !DIExpression()), !dbg !13046
  %16 = call i32 @vsf_sysutil_running_as_root(), !dbg !13047
  %17 = icmp ne i32 %16, 0, !dbg !13047
  br i1 %17, label %19, label %18, !dbg !13049

18:                                               ; preds = %5
  call void @bug(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.745, i32 0, i32 0)), !dbg !13050
  br label %19, !dbg !13052

19:                                               ; preds = %18, %5
  %20 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !13053
  %21 = call %struct.vsf_sysutil_user* @str_getpwnam(%struct.mystr* %20), !dbg !13054
  store %struct.vsf_sysutil_user* %21, %struct.vsf_sysutil_user** %11, align 8, !dbg !13055
  %22 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !13056
  %23 = icmp eq %struct.vsf_sysutil_user* %22, null, !dbg !13058
  br i1 %23, label %24, label %27, !dbg !13059

24:                                               ; preds = %19
  %25 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !13060
  %26 = call i8* @str_getbuf(%struct.mystr* %25), !dbg !13062
  call void @die2(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.746, i32 0, i32 0), i8* %26), !dbg !13063
  br label %27, !dbg !13064

27:                                               ; preds = %24, %19
  call void @llvm.dbg.declare(metadata %struct.mystr* %12, metadata !13065, metadata !DIExpression()), !dbg !13067
  %28 = bitcast %struct.mystr* %12 to i8*, !dbg !13067
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false), !dbg !13067
  %29 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !13068
  %30 = icmp eq %struct.mystr* %29, null, !dbg !13070
  br i1 %30, label %35, label %31, !dbg !13071

31:                                               ; preds = %27
  %32 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !13072
  %33 = call i32 @str_isempty(%struct.mystr* %32), !dbg !13073
  %34 = icmp ne i32 %33, 0, !dbg !13073
  br i1 %34, label %35, label %38, !dbg !13074

35:                                               ; preds = %31, %27
  %36 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !13075
  %37 = call i8* @vsf_sysutil_user_get_homedir(%struct.vsf_sysutil_user* %36), !dbg !13077
  call void @str_alloc_text(%struct.mystr* %12, i8* %37), !dbg !13078
  br label %40, !dbg !13079

38:                                               ; preds = %31
  %39 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !13080
  call void @str_copy(%struct.mystr* %12, %struct.mystr* %39), !dbg !13082
  br label %40

40:                                               ; preds = %38, %35
  %41 = load i32, i32* %10, align 4, !dbg !13083
  %42 = and i32 %41, 2, !dbg !13085
  %43 = icmp ne i32 %42, 0, !dbg !13085
  br i1 %43, label %44, label %46, !dbg !13086

44:                                               ; preds = %40
  %45 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !13087
  call void @vsf_sysutil_initgroups(%struct.vsf_sysutil_user* %45), !dbg !13089
  br label %47, !dbg !13090

46:                                               ; preds = %40
  call void @vsf_sysutil_clear_supp_groups(), !dbg !13091
  br label %47

47:                                               ; preds = %46, %44
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13093, metadata !DIExpression()), !dbg !13095
  store i32 0, i32* %13, align 4, !dbg !13095
  call void @llvm.dbg.declare(metadata i32* %14, metadata !13096, metadata !DIExpression()), !dbg !13097
  store i32 0, i32* %14, align 4, !dbg !13097
  call void @llvm.dbg.declare(metadata i32* %15, metadata !13098, metadata !DIExpression()), !dbg !13099
  %48 = load i32, i32* %10, align 4, !dbg !13100
  %49 = and i32 %48, 4, !dbg !13102
  %50 = icmp ne i32 %49, 0, !dbg !13102
  br i1 %50, label %51, label %56, !dbg !13103

51:                                               ; preds = %47
  %52 = call i32 @vsf_sysutil_geteuid(), !dbg !13104
  store i32 %52, i32* %13, align 4, !dbg !13106
  %53 = call i32 @vsf_sysutil_getegid(), !dbg !13107
  store i32 %53, i32* %14, align 4, !dbg !13108
  %54 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !13109
  call void @vsf_sysutil_setegid(%struct.vsf_sysutil_user* %54), !dbg !13110
  %55 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !13111
  call void @vsf_sysutil_seteuid(%struct.vsf_sysutil_user* %55), !dbg !13112
  br label %56, !dbg !13113

56:                                               ; preds = %51, %47
  %57 = call i32 @str_chdir(%struct.mystr* %12), !dbg !13114
  store i32 %57, i32* %15, align 4, !dbg !13115
  %58 = load i32, i32* %15, align 4, !dbg !13116
  %59 = icmp ne i32 %58, 0, !dbg !13118
  br i1 %59, label %60, label %62, !dbg !13119

60:                                               ; preds = %56
  %61 = call i8* @str_getbuf(%struct.mystr* %12), !dbg !13120
  call void @die2(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.747, i32 0, i32 0), i8* %61), !dbg !13122
  br label %62, !dbg !13123

62:                                               ; preds = %60, %56
  %63 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !13124
  %64 = icmp ne %struct.mystr* %63, null, !dbg !13124
  br i1 %64, label %65, label %80, !dbg !13126

65:                                               ; preds = %62
  %66 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !13127
  %67 = call i32 @str_isempty(%struct.mystr* %66), !dbg !13128
  %68 = icmp ne i32 %67, 0, !dbg !13128
  br i1 %68, label %80, label %69, !dbg !13129

69:                                               ; preds = %65
  %70 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !13130
  %71 = call i32 @str_chdir(%struct.mystr* %70), !dbg !13132
  store i32 %71, i32* %15, align 4, !dbg !13133
  %72 = load i32, i32* %15, align 4, !dbg !13134
  %73 = icmp ne i32 %72, 0, !dbg !13136
  br i1 %73, label %74, label %79, !dbg !13137

74:                                               ; preds = %69
  %75 = load i32, i32* %10, align 4, !dbg !13138
  %76 = and i32 %75, 1, !dbg !13139
  %77 = icmp ne i32 %76, 0, !dbg !13139
  br i1 %77, label %79, label %78, !dbg !13140

78:                                               ; preds = %74
  store i32 0, i32* %15, align 4, !dbg !13141
  br label %79, !dbg !13143

79:                                               ; preds = %78, %74, %69
  br label %80, !dbg !13144

80:                                               ; preds = %79, %65, %62
  %81 = load i32, i32* %15, align 4, !dbg !13145
  %82 = icmp ne i32 %81, 0, !dbg !13147
  br i1 %82, label %83, label %86, !dbg !13148

83:                                               ; preds = %80
  %84 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !13149
  %85 = call i8* @str_getbuf(%struct.mystr* %84), !dbg !13151
  call void @die2(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.747, i32 0, i32 0), i8* %85), !dbg !13152
  br label %86, !dbg !13153

86:                                               ; preds = %83, %80
  %87 = load i32, i32* %10, align 4, !dbg !13154
  %88 = and i32 %87, 4, !dbg !13156
  %89 = icmp ne i32 %88, 0, !dbg !13156
  br i1 %89, label %90, label %93, !dbg !13157

90:                                               ; preds = %86
  %91 = load i32, i32* %13, align 4, !dbg !13158
  call void @vsf_sysutil_seteuid_numeric(i32 %91), !dbg !13160
  %92 = load i32, i32* %14, align 4, !dbg !13161
  call void @vsf_sysutil_setegid_numeric(i32 %92), !dbg !13162
  br label %93, !dbg !13163

93:                                               ; preds = %90, %86
  %94 = load i32, i32* %10, align 4, !dbg !13164
  %95 = and i32 %94, 1, !dbg !13166
  %96 = icmp ne i32 %95, 0, !dbg !13166
  br i1 %96, label %97, label %98, !dbg !13167

97:                                               ; preds = %93
  call void @vsf_sysutil_chroot(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.748, i32 0, i32 0)), !dbg !13168
  br label %98, !dbg !13170

98:                                               ; preds = %97, %93
  call void @str_free(%struct.mystr* %12), !dbg !13171
  %99 = load i32, i32* %10, align 4, !dbg !13172
  %100 = and i32 %99, 8, !dbg !13174
  %101 = icmp ne i32 %100, 0, !dbg !13174
  br i1 %101, label %102, label %103, !dbg !13175

102:                                              ; preds = %98
  call void @vsf_sysutil_set_no_fds(), !dbg !13176
  br label %103, !dbg !13178

103:                                              ; preds = %102, %98
  %104 = load i32, i32* %9, align 4, !dbg !13179
  %105 = icmp ne i32 %104, 0, !dbg !13179
  br i1 %105, label %106, label %116, !dbg !13181

106:                                              ; preds = %103
  %107 = call i32 @vsf_sysdep_has_capabilities(), !dbg !13182
  %108 = icmp ne i32 %107, 0, !dbg !13182
  br i1 %108, label %110, label %109, !dbg !13185

109:                                              ; preds = %106
  br label %141, !dbg !13186

110:                                              ; preds = %106
  %111 = call i32 @vsf_sysdep_has_capabilities_as_non_root(), !dbg !13188
  %112 = icmp ne i32 %111, 0, !dbg !13188
  br i1 %112, label %115, label %113, !dbg !13190

113:                                              ; preds = %110
  %114 = load i32, i32* %9, align 4, !dbg !13191
  call void @vsf_sysdep_adopt_capabilities(i32 %114), !dbg !13193
  br label %141, !dbg !13194

115:                                              ; preds = %110
  call void @vsf_sysdep_keep_capabilities(), !dbg !13195
  br label %116, !dbg !13196

116:                                              ; preds = %115, %103
  %117 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !13197
  call void @vsf_sysutil_setgid(%struct.vsf_sysutil_user* %117), !dbg !13198
  %118 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %11, align 8, !dbg !13199
  call void @vsf_sysutil_setuid(%struct.vsf_sysutil_user* %118), !dbg !13200
  %119 = load i32, i32* %9, align 4, !dbg !13201
  %120 = icmp ne i32 %119, 0, !dbg !13201
  br i1 %120, label %121, label %123, !dbg !13203

121:                                              ; preds = %116
  %122 = load i32, i32* %9, align 4, !dbg !13204
  call void @vsf_sysdep_adopt_capabilities(i32 %122), !dbg !13206
  br label %123, !dbg !13207

123:                                              ; preds = %121, %116
  %124 = load i32, i32* %10, align 4, !dbg !13208
  %125 = and i32 %124, 16, !dbg !13210
  %126 = icmp ne i32 %125, 0, !dbg !13210
  br i1 %126, label %127, label %128, !dbg !13211

127:                                              ; preds = %123
  call void @vsf_sysutil_set_no_procs(), !dbg !13212
  br label %128, !dbg !13214

128:                                              ; preds = %127, %123
  %129 = load i32, i32* %10, align 4, !dbg !13215
  %130 = and i32 %129, 1, !dbg !13217
  %131 = icmp ne i32 %130, 0, !dbg !13217
  br i1 %131, label %132, label %141, !dbg !13218

132:                                              ; preds = %128
  %133 = load i32, i32* %10, align 4, !dbg !13219
  %134 = and i32 %133, 32, !dbg !13220
  %135 = icmp ne i32 %134, 0, !dbg !13220
  br i1 %135, label %141, label %136, !dbg !13221

136:                                              ; preds = %132
  %137 = call i32 @vsf_sysutil_write_access(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.749, i32 0, i32 0)), !dbg !13222
  %138 = icmp ne i32 %137, 0, !dbg !13222
  br i1 %138, label %139, label %140, !dbg !13225

139:                                              ; preds = %136
  call void @die(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5.750, i32 0, i32 0)), !dbg !13226
  br label %140, !dbg !13228

140:                                              ; preds = %139, %136
  br label %141, !dbg !13229

141:                                              ; preds = %109, %113, %140, %132, %128
  ret void, !dbg !13230
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define { i64, i8* } @vsf_ascii_ascii_to_bin(i8*, i32, i32) #0 !dbg !13231 {
  %4 = alloca %struct.ascii_to_bin_ret, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.ascii_to_bin_ret, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13239, metadata !DIExpression()), !dbg !13240
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13241, metadata !DIExpression()), !dbg !13242
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13243, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.declare(metadata %struct.ascii_to_bin_ret* %8, metadata !13245, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13247, metadata !DIExpression()), !dbg !13248
  store i32 0, i32* %9, align 4, !dbg !13248
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13249, metadata !DIExpression()), !dbg !13250
  store i32 0, i32* %10, align 4, !dbg !13250
  call void @llvm.dbg.declare(metadata i8** %11, metadata !13251, metadata !DIExpression()), !dbg !13252
  %13 = load i8*, i8** %5, align 8, !dbg !13253
  %14 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !13254
  store i8* %14, i8** %11, align 8, !dbg !13252
  %15 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %8, i32 0, i32 1, !dbg !13255
  store i32 0, i32* %15, align 4, !dbg !13256
  %16 = load i32, i32* %7, align 4, !dbg !13257
  %17 = icmp ne i32 %16, 0, !dbg !13257
  br i1 %17, label %18, label %34, !dbg !13259

18:                                               ; preds = %3
  %19 = load i32, i32* %6, align 4, !dbg !13260
  %20 = icmp ne i32 %19, 0, !dbg !13260
  br i1 %20, label %21, label %27, !dbg !13261

21:                                               ; preds = %18
  %22 = load i8*, i8** %11, align 8, !dbg !13262
  %23 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !13262
  %24 = load i8, i8* %23, align 1, !dbg !13262
  %25 = sext i8 %24 to i32, !dbg !13262
  %26 = icmp ne i32 %25, 10, !dbg !13263
  br i1 %26, label %27, label %34, !dbg !13264

27:                                               ; preds = %21, %18
  %28 = load i8*, i8** %5, align 8, !dbg !13265
  %29 = getelementptr inbounds i8, i8* %28, i64 0, !dbg !13265
  store i8 13, i8* %29, align 1, !dbg !13267
  %30 = load i8*, i8** %5, align 8, !dbg !13268
  %31 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %8, i32 0, i32 2, !dbg !13269
  store i8* %30, i8** %31, align 8, !dbg !13270
  %32 = load i32, i32* %10, align 4, !dbg !13271
  %33 = add i32 %32, 1, !dbg !13271
  store i32 %33, i32* %10, align 4, !dbg !13271
  br label %37, !dbg !13272

34:                                               ; preds = %21, %3
  %35 = load i8*, i8** %11, align 8, !dbg !13273
  %36 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %8, i32 0, i32 2, !dbg !13275
  store i8* %35, i8** %36, align 8, !dbg !13276
  br label %37

37:                                               ; preds = %34, %27
  br label %38, !dbg !13277

38:                                               ; preds = %82, %37
  %39 = load i32, i32* %9, align 4, !dbg !13278
  %40 = load i32, i32* %6, align 4, !dbg !13279
  %41 = icmp ult i32 %39, %40, !dbg !13280
  br i1 %41, label %42, label %85, !dbg !13277

42:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata i8* %12, metadata !13281, metadata !DIExpression()), !dbg !13283
  %43 = load i8*, i8** %5, align 8, !dbg !13284
  %44 = load i32, i32* %9, align 4, !dbg !13285
  %45 = add i32 %44, 1, !dbg !13286
  %46 = zext i32 %45 to i64, !dbg !13284
  %47 = getelementptr inbounds i8, i8* %43, i64 %46, !dbg !13284
  %48 = load i8, i8* %47, align 1, !dbg !13284
  store i8 %48, i8* %12, align 1, !dbg !13283
  %49 = load i8, i8* %12, align 1, !dbg !13287
  %50 = sext i8 %49 to i32, !dbg !13287
  %51 = icmp ne i32 %50, 13, !dbg !13289
  br i1 %51, label %52, label %58, !dbg !13290

52:                                               ; preds = %42
  %53 = load i8, i8* %12, align 1, !dbg !13291
  %54 = load i8*, i8** %11, align 8, !dbg !13293
  %55 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !13293
  store i8* %55, i8** %11, align 8, !dbg !13293
  store i8 %53, i8* %54, align 1, !dbg !13294
  %56 = load i32, i32* %10, align 4, !dbg !13295
  %57 = add i32 %56, 1, !dbg !13295
  store i32 %57, i32* %10, align 4, !dbg !13295
  br label %82, !dbg !13296

58:                                               ; preds = %42
  %59 = load i32, i32* %9, align 4, !dbg !13297
  %60 = load i32, i32* %6, align 4, !dbg !13299
  %61 = sub i32 %60, 1, !dbg !13300
  %62 = icmp eq i32 %59, %61, !dbg !13301
  br i1 %62, label %63, label %65, !dbg !13302

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %8, i32 0, i32 1, !dbg !13303
  store i32 1, i32* %64, align 4, !dbg !13305
  br label %81, !dbg !13306

65:                                               ; preds = %58
  %66 = load i8*, i8** %5, align 8, !dbg !13307
  %67 = load i32, i32* %9, align 4, !dbg !13309
  %68 = add i32 %67, 2, !dbg !13310
  %69 = zext i32 %68 to i64, !dbg !13307
  %70 = getelementptr inbounds i8, i8* %66, i64 %69, !dbg !13307
  %71 = load i8, i8* %70, align 1, !dbg !13307
  %72 = sext i8 %71 to i32, !dbg !13307
  %73 = icmp ne i32 %72, 10, !dbg !13311
  br i1 %73, label %74, label %80, !dbg !13312

74:                                               ; preds = %65
  %75 = load i8, i8* %12, align 1, !dbg !13313
  %76 = load i8*, i8** %11, align 8, !dbg !13315
  %77 = getelementptr inbounds i8, i8* %76, i32 1, !dbg !13315
  store i8* %77, i8** %11, align 8, !dbg !13315
  store i8 %75, i8* %76, align 1, !dbg !13316
  %78 = load i32, i32* %10, align 4, !dbg !13317
  %79 = add i32 %78, 1, !dbg !13317
  store i32 %79, i32* %10, align 4, !dbg !13317
  br label %80, !dbg !13318

80:                                               ; preds = %74, %65
  br label %81

81:                                               ; preds = %80, %63
  br label %82

82:                                               ; preds = %81, %52
  %83 = load i32, i32* %9, align 4, !dbg !13319
  %84 = add i32 %83, 1, !dbg !13319
  store i32 %84, i32* %9, align 4, !dbg !13319
  br label %38, !dbg !13277, !llvm.loop !13320

85:                                               ; preds = %38
  %86 = load i32, i32* %10, align 4, !dbg !13322
  %87 = getelementptr inbounds %struct.ascii_to_bin_ret, %struct.ascii_to_bin_ret* %8, i32 0, i32 0, !dbg !13323
  store i32 %86, i32* %87, align 8, !dbg !13324
  %88 = bitcast %struct.ascii_to_bin_ret* %4 to i8*, !dbg !13325
  %89 = bitcast %struct.ascii_to_bin_ret* %8 to i8*, !dbg !13325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false), !dbg !13325
  %90 = bitcast %struct.ascii_to_bin_ret* %4 to { i64, i8* }*, !dbg !13326
  %91 = load { i64, i8* }, { i64, i8* }* %90, align 8, !dbg !13326
  ret { i64, i8* } %91, !dbg !13326
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_ascii_bin_to_ascii(i8*, i8*, i32, i32) #0 !dbg !13327 {
  %5 = alloca %struct.vsf_client_launch, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.vsf_client_launch, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !13334, metadata !DIExpression()), !dbg !13335
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !13336, metadata !DIExpression()), !dbg !13337
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13338, metadata !DIExpression()), !dbg !13339
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13340, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %10, metadata !13342, metadata !DIExpression()), !dbg !13343
  %15 = bitcast %struct.vsf_client_launch* %10 to i8*, !dbg !13343
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 8, i1 false), !dbg !13343
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13344, metadata !DIExpression()), !dbg !13345
  store i32 0, i32* %11, align 4, !dbg !13345
  call void @llvm.dbg.declare(metadata i32* %12, metadata !13346, metadata !DIExpression()), !dbg !13347
  store i32 0, i32* %12, align 4, !dbg !13347
  call void @llvm.dbg.declare(metadata i8* %13, metadata !13348, metadata !DIExpression()), !dbg !13349
  store i8 0, i8* %13, align 1, !dbg !13349
  %16 = load i32, i32* %9, align 4, !dbg !13350
  %17 = icmp ne i32 %16, 0, !dbg !13350
  br i1 %17, label %18, label %20, !dbg !13352

18:                                               ; preds = %4
  store i8 13, i8* %13, align 1, !dbg !13353
  %19 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %10, i32 0, i32 1, !dbg !13355
  store i32 1, i32* %19, align 4, !dbg !13356
  br label %20, !dbg !13357

20:                                               ; preds = %18, %4
  br label %21, !dbg !13358

21:                                               ; preds = %59, %20
  %22 = load i32, i32* %11, align 4, !dbg !13359
  %23 = load i32, i32* %8, align 4, !dbg !13360
  %24 = icmp ult i32 %22, %23, !dbg !13361
  br i1 %24, label %25, label %60, !dbg !13358

25:                                               ; preds = %21
  call void @llvm.dbg.declare(metadata i8* %14, metadata !13362, metadata !DIExpression()), !dbg !13364
  %26 = load i8*, i8** %6, align 8, !dbg !13365
  %27 = load i32, i32* %11, align 4, !dbg !13366
  %28 = zext i32 %27 to i64, !dbg !13365
  %29 = getelementptr inbounds i8, i8* %26, i64 %28, !dbg !13365
  %30 = load i8, i8* %29, align 1, !dbg !13365
  store i8 %30, i8* %14, align 1, !dbg !13364
  %31 = load i8, i8* %14, align 1, !dbg !13367
  %32 = sext i8 %31 to i32, !dbg !13367
  %33 = icmp eq i32 %32, 10, !dbg !13369
  br i1 %33, label %34, label %43, !dbg !13370

34:                                               ; preds = %25
  %35 = load i8, i8* %13, align 1, !dbg !13371
  %36 = sext i8 %35 to i32, !dbg !13371
  %37 = icmp ne i32 %36, 13, !dbg !13372
  br i1 %37, label %38, label %43, !dbg !13373

38:                                               ; preds = %34
  %39 = load i8*, i8** %7, align 8, !dbg !13374
  %40 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !13374
  store i8* %40, i8** %7, align 8, !dbg !13374
  store i8 13, i8* %39, align 1, !dbg !13376
  %41 = load i32, i32* %12, align 4, !dbg !13377
  %42 = add i32 %41, 1, !dbg !13377
  store i32 %42, i32* %12, align 4, !dbg !13377
  br label %43, !dbg !13378

43:                                               ; preds = %38, %34, %25
  %44 = load i8, i8* %14, align 1, !dbg !13379
  %45 = load i8*, i8** %7, align 8, !dbg !13380
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !13380
  store i8* %46, i8** %7, align 8, !dbg !13380
  store i8 %44, i8* %45, align 1, !dbg !13381
  %47 = load i32, i32* %12, align 4, !dbg !13382
  %48 = add i32 %47, 1, !dbg !13382
  store i32 %48, i32* %12, align 4, !dbg !13382
  %49 = load i32, i32* %11, align 4, !dbg !13383
  %50 = add i32 %49, 1, !dbg !13383
  store i32 %50, i32* %11, align 4, !dbg !13383
  %51 = load i8, i8* %14, align 1, !dbg !13384
  store i8 %51, i8* %13, align 1, !dbg !13385
  %52 = load i8, i8* %14, align 1, !dbg !13386
  %53 = sext i8 %52 to i32, !dbg !13386
  %54 = icmp eq i32 %53, 13, !dbg !13388
  br i1 %54, label %55, label %57, !dbg !13389

55:                                               ; preds = %43
  %56 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %10, i32 0, i32 1, !dbg !13390
  store i32 1, i32* %56, align 4, !dbg !13392
  br label %59, !dbg !13393

57:                                               ; preds = %43
  %58 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %10, i32 0, i32 1, !dbg !13394
  store i32 0, i32* %58, align 4, !dbg !13396
  br label %59

59:                                               ; preds = %57, %55
  br label %21, !dbg !13358, !llvm.loop !13397

60:                                               ; preds = %21
  %61 = load i32, i32* %12, align 4, !dbg !13399
  %62 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %10, i32 0, i32 0, !dbg !13400
  store i32 %61, i32* %62, align 4, !dbg !13401
  %63 = bitcast %struct.vsf_client_launch* %5 to i8*, !dbg !13402
  %64 = bitcast %struct.vsf_client_launch* %10 to i8*, !dbg !13402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 8, i1 false), !dbg !13402
  %65 = bitcast %struct.vsf_client_launch* %5 to i64*, !dbg !13403
  %66 = load i64, i64* %65, align 4, !dbg !13403
  ret i64 %66, !dbg !13403
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_one_process_start(%struct.vsf_session*) #0 !dbg !13404 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca %struct.pt_sandbox*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13407, metadata !DIExpression()), !dbg !13408
  %4 = load i32, i32* @tunable_ptrace_sandbox, align 4, !dbg !13409
  %5 = icmp ne i32 %4, 0, !dbg !13409
  br i1 %5, label %6, label %24, !dbg !13411

6:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %3, metadata !13412, metadata !DIExpression()), !dbg !13417
  %7 = call %struct.pt_sandbox* (...) bitcast (%struct.pt_sandbox* ()* @ptrace_sandbox_alloc to %struct.pt_sandbox* (...)*)(), !dbg !13418
  store %struct.pt_sandbox* %7, %struct.pt_sandbox** %3, align 8, !dbg !13417
  %8 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !13419
  %9 = icmp eq %struct.pt_sandbox* %8, null, !dbg !13421
  br i1 %9, label %10, label %11, !dbg !13422

10:                                               ; preds = %6
  call void @die(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.757, i32 0, i32 0)), !dbg !13423
  br label %11, !dbg !13425

11:                                               ; preds = %10, %6
  %12 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !13426
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13427
  call void @policy_setup(%struct.pt_sandbox* %12, %struct.vsf_session* %13), !dbg !13428
  %14 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !13429
  %15 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13431
  %16 = bitcast %struct.vsf_session* %15 to i8*, !dbg !13432
  %17 = call i32 @ptrace_sandbox_launch_process(%struct.pt_sandbox* %14, void (i8*)* @one_process_start, i8* %16), !dbg !13433
  %18 = icmp sle i32 %17, 0, !dbg !13434
  br i1 %18, label %19, label %20, !dbg !13435

19:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.758, i32 0, i32 0)), !dbg !13436
  br label %20, !dbg !13438

20:                                               ; preds = %19, %11
  %21 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !13439
  %22 = call i32 @ptrace_sandbox_run_processes(%struct.pt_sandbox* %21), !dbg !13440
  %23 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !13441
  call void @ptrace_sandbox_free(%struct.pt_sandbox* %23), !dbg !13442
  call void @vsf_sysutil_exit(i32 0), !dbg !13443
  br label %27, !dbg !13444

24:                                               ; preds = %1
  %25 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13445
  %26 = bitcast %struct.vsf_session* %25 to i8*, !dbg !13447
  call void @one_process_start(i8* %26), !dbg !13448
  br label %27

27:                                               ; preds = %24, %20
  ret void, !dbg !13449
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @one_process_start(i8*) #0 !dbg !13450 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.mystr, align 8
  %6 = alloca %struct.mystr, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !13451, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !13453, metadata !DIExpression()), !dbg !13454
  %7 = load i8*, i8** %2, align 8, !dbg !13455
  %8 = bitcast i8* %7 to %struct.vsf_session*, !dbg !13456
  store %struct.vsf_session* %8, %struct.vsf_session** %3, align 8, !dbg !13454
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13457, metadata !DIExpression()), !dbg !13458
  store i32 0, i32* %4, align 4, !dbg !13458
  %9 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !13459
  %10 = icmp ne i32 %9, 0, !dbg !13459
  br i1 %10, label %11, label %14, !dbg !13461

11:                                               ; preds = %1
  %12 = load i32, i32* %4, align 4, !dbg !13462
  %13 = or i32 %12, 1, !dbg !13462
  store i32 %13, i32* %4, align 4, !dbg !13462
  br label %14, !dbg !13464

14:                                               ; preds = %11, %1
  %15 = load i32, i32* @tunable_connect_from_port_20, align 4, !dbg !13465
  %16 = icmp ne i32 %15, 0, !dbg !13465
  br i1 %16, label %17, label %20, !dbg !13467

17:                                               ; preds = %14
  %18 = load i32, i32* %4, align 4, !dbg !13468
  %19 = or i32 %18, 2, !dbg !13468
  store i32 %19, i32* %4, align 4, !dbg !13468
  br label %20, !dbg !13470

20:                                               ; preds = %17, %14
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !13471, metadata !DIExpression()), !dbg !13473
  %21 = bitcast %struct.mystr* %5 to i8*, !dbg !13473
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false), !dbg !13473
  call void @llvm.dbg.declare(metadata %struct.mystr* %6, metadata !13474, metadata !DIExpression()), !dbg !13475
  %22 = bitcast %struct.mystr* %6 to i8*, !dbg !13475
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false), !dbg !13475
  %23 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !13476
  %24 = icmp ne i8* %23, null, !dbg !13476
  br i1 %24, label %25, label %27, !dbg !13478

25:                                               ; preds = %20
  %26 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !13479
  call void @str_alloc_text(%struct.mystr* %5, i8* %26), !dbg !13481
  br label %27, !dbg !13482

27:                                               ; preds = %25, %20
  %28 = load i8*, i8** @tunable_anon_root, align 8, !dbg !13483
  %29 = icmp ne i8* %28, null, !dbg !13483
  br i1 %29, label %30, label %32, !dbg !13485

30:                                               ; preds = %27
  %31 = load i8*, i8** @tunable_anon_root, align 8, !dbg !13486
  call void @str_alloc_text(%struct.mystr* %6, i8* %31), !dbg !13488
  br label %32, !dbg !13489

32:                                               ; preds = %30, %27
  %33 = load i32, i32* @tunable_run_as_launching_user, align 4, !dbg !13490
  %34 = icmp ne i32 %33, 0, !dbg !13490
  br i1 %34, label %35, label %41, !dbg !13492

35:                                               ; preds = %32
  %36 = call i32 @str_isempty(%struct.mystr* %6), !dbg !13493
  %37 = icmp ne i32 %36, 0, !dbg !13493
  br i1 %37, label %40, label %38, !dbg !13496

38:                                               ; preds = %35
  %39 = call i32 @str_chdir(%struct.mystr* %6), !dbg !13497
  br label %40, !dbg !13499

40:                                               ; preds = %38, %35
  br label %43, !dbg !13500

41:                                               ; preds = %32
  %42 = load i32, i32* %4, align 4, !dbg !13501
  call void @vsf_secutil_change_credentials(%struct.mystr* %5, %struct.mystr* null, %struct.mystr* %6, i32 %42, i32 19), !dbg !13503
  br label %43

43:                                               ; preds = %41, %40
  call void @str_free(%struct.mystr* %5), !dbg !13504
  call void @str_free(%struct.mystr* %6), !dbg !13505
  %44 = load i32, i32* @tunable_ptrace_sandbox, align 4, !dbg !13506
  %45 = icmp ne i32 %44, 0, !dbg !13506
  br i1 %45, label %46, label %47, !dbg !13508

46:                                               ; preds = %43
  call void @ptrace_sandbox_attach_point(), !dbg !13509
  br label %47, !dbg !13511

47:                                               ; preds = %46, %43
  call void (...) bitcast (void ()* @seccomp_sandbox_init to void (...)*)(), !dbg !13512
  %48 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !13513
  call void @seccomp_sandbox_setup_postlogin(%struct.vsf_session* %48), !dbg !13514
  call void (...) bitcast (void ()* @seccomp_sandbox_lockdown to void (...)*)(), !dbg !13515
  %49 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !13516
  call void @init_connection(%struct.vsf_session* %49), !dbg !13517
  ret void, !dbg !13518
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_one_process_login(%struct.vsf_session*, %struct.mystr*) #0 !dbg !13519 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !13524, metadata !DIExpression()), !dbg !13525
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !13526, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13528, metadata !DIExpression()), !dbg !13529
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !13530
  %7 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !13531
  %8 = call i32 @vsf_privop_do_login(%struct.vsf_session* %6, %struct.mystr* %7), !dbg !13532
  store i32 %8, i32* %5, align 4, !dbg !13529
  %9 = load i32, i32* %5, align 4, !dbg !13533
  switch i32 %9, label %16 [
    i32 1, label %10
    i32 2, label %11
    i32 0, label %15
    i32 3, label %15
  ], !dbg !13534

10:                                               ; preds = %2
  br label %17, !dbg !13535

11:                                               ; preds = %2
  %12 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !13537
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 12, !dbg !13538
  store i32 1, i32* %13, align 8, !dbg !13539
  %14 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !13540
  call void @process_post_login(%struct.vsf_session* %14), !dbg !13541
  br label %17, !dbg !13542

15:                                               ; preds = %2, %2
  br label %16, !dbg !13542

16:                                               ; preds = %2, %15
  call void @bug(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2.761, i32 0, i32 0)), !dbg !13543
  br label %17, !dbg !13544

17:                                               ; preds = %10, %16, %11
  ret void, !dbg !13545
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_one_process_get_priv_data_sock(%struct.vsf_session*) #0 !dbg !13546 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i16, align 2
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13549, metadata !DIExpression()), !dbg !13550
  call void @llvm.dbg.declare(metadata i16* %3, metadata !13551, metadata !DIExpression()), !dbg !13552
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13553
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 6, !dbg !13554
  %6 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !13554
  %7 = call zeroext i16 @vsf_sysutil_sockaddr_get_port(%struct.vsf_sysutil_sockaddr* %6), !dbg !13555
  store i16 %7, i16* %3, align 2, !dbg !13552
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13556
  %9 = load i16, i16* %3, align 2, !dbg !13557
  %10 = call i32 @vsf_privop_get_ftp_port_sock(%struct.vsf_session* %8, i16 zeroext %9, i32 1), !dbg !13558
  ret i32 %10, !dbg !13559
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_one_process_pasv_cleanup(%struct.vsf_session*) #0 !dbg !13560 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13561, metadata !DIExpression()), !dbg !13562
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13563
  call void @vsf_privop_pasv_cleanup(%struct.vsf_session* %3), !dbg !13564
  ret void, !dbg !13565
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_one_process_pasv_active(%struct.vsf_session*) #0 !dbg !13566 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13567, metadata !DIExpression()), !dbg !13568
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13569
  %4 = call i32 @vsf_privop_pasv_active(%struct.vsf_session* %3), !dbg !13570
  ret i32 %4, !dbg !13571
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define zeroext i16 @vsf_one_process_listen(%struct.vsf_session*) #0 !dbg !13572 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13575, metadata !DIExpression()), !dbg !13576
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13577
  %4 = call zeroext i16 @vsf_privop_pasv_listen(%struct.vsf_session* %3), !dbg !13578
  ret i16 %4, !dbg !13579
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_one_process_get_pasv_fd(%struct.vsf_session*) #0 !dbg !13580 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13581, metadata !DIExpression()), !dbg !13582
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13583
  %4 = call i32 @vsf_privop_accept_pasv(%struct.vsf_session* %3), !dbg !13584
  ret i32 %4, !dbg !13585
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_one_process_chown_upload(%struct.vsf_session*, i32) #0 !dbg !13586 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !13589, metadata !DIExpression()), !dbg !13590
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13591, metadata !DIExpression()), !dbg !13592
  %5 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !13593
  %6 = load i32, i32* %4, align 4, !dbg !13594
  call void @vsf_privop_do_file_chown(%struct.vsf_session* %5, i32 %6), !dbg !13595
  ret void, !dbg !13596
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_two_process_start(%struct.vsf_session*) #0 !dbg !13597 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13665, metadata !DIExpression()), !dbg !13666
  call void @vsf_sysutil_install_sighandler(i32 2, void (i8*)* @handle_sigterm, i8* null, i32 1), !dbg !13667
  call void (...) bitcast (void ()* @vsf_set_term_if_parent_dies to void (...)*)(), !dbg !13668
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13669
  call void @priv_sock_init(%struct.vsf_session* %5), !dbg !13670
  %6 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !13671
  %7 = icmp ne i32 %6, 0, !dbg !13671
  br i1 %7, label %8, label %10, !dbg !13673

8:                                                ; preds = %1
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13674
  call void @ssl_comm_channel_init(%struct.vsf_session* %9), !dbg !13676
  br label %10, !dbg !13677

10:                                               ; preds = %8, %1
  call void @vsf_sysutil_install_sighandler(i32 3, void (i8*)* @handle_sigchld, i8* null, i32 1), !dbg !13678
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13679, metadata !DIExpression()), !dbg !13681
  %11 = load i32, i32* @tunable_isolate_network, align 4, !dbg !13682
  %12 = icmp ne i32 %11, 0, !dbg !13682
  br i1 %12, label %13, label %15, !dbg !13684

13:                                               ; preds = %10
  %14 = call i32 (...) bitcast (i32 ()* @vsf_sysutil_fork_newnet to i32 (...)*)(), !dbg !13685
  store i32 %14, i32* %3, align 4, !dbg !13687
  br label %17, !dbg !13688

15:                                               ; preds = %10
  %16 = call i32 @vsf_sysutil_fork(), !dbg !13689
  store i32 %16, i32* %3, align 4, !dbg !13691
  br label %17

17:                                               ; preds = %15, %13
  %18 = load i32, i32* %3, align 4, !dbg !13692
  %19 = icmp ne i32 %18, 0, !dbg !13694
  br i1 %19, label %20, label %29, !dbg !13695

20:                                               ; preds = %17
  %21 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13696
  call void @priv_sock_set_parent_context(%struct.vsf_session* %21), !dbg !13698
  %22 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !13699
  %23 = icmp ne i32 %22, 0, !dbg !13699
  br i1 %23, label %24, label %26, !dbg !13701

24:                                               ; preds = %20
  %25 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13702
  call void @ssl_comm_channel_set_consumer_context(%struct.vsf_session* %25), !dbg !13704
  br label %26, !dbg !13705

26:                                               ; preds = %24, %20
  br label %27, !dbg !13706

27:                                               ; preds = %26, %27
  %28 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13707
  call void @process_login_req(%struct.vsf_session* %28), !dbg !13709
  br label %27, !dbg !13706, !llvm.loop !13710

29:                                               ; preds = %17
  call void (...) bitcast (void ()* @vsf_set_die_if_parent_dies to void (...)*)(), !dbg !13712
  %30 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13713
  call void @priv_sock_set_child_context(%struct.vsf_session* %30), !dbg !13714
  %31 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !13715
  %32 = icmp ne i32 %31, 0, !dbg !13715
  br i1 %32, label %33, label %35, !dbg !13717

33:                                               ; preds = %29
  %34 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13718
  call void @ssl_comm_channel_set_producer_context(%struct.vsf_session* %34), !dbg !13720
  br label %35, !dbg !13721

35:                                               ; preds = %33, %29
  %36 = load i32, i32* @tunable_local_enable, align 4, !dbg !13722
  %37 = icmp ne i32 %36, 0, !dbg !13722
  br i1 %37, label %38, label %56, !dbg !13724

38:                                               ; preds = %35
  %39 = load i32, i32* @tunable_userlist_enable, align 4, !dbg !13725
  %40 = icmp ne i32 %39, 0, !dbg !13725
  br i1 %40, label %41, label %56, !dbg !13726

41:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13727, metadata !DIExpression()), !dbg !13729
  store i32 -1, i32* %4, align 4, !dbg !13729
  %42 = load i8*, i8** @tunable_userlist_file, align 8, !dbg !13730
  %43 = icmp ne i8* %42, null, !dbg !13730
  br i1 %43, label %44, label %49, !dbg !13732

44:                                               ; preds = %41
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13733
  %46 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %45, i32 0, i32 29, !dbg !13735
  %47 = load i8*, i8** @tunable_userlist_file, align 8, !dbg !13736
  %48 = call i32 @str_fileread(%struct.mystr* %46, i8* %47, i32 100000), !dbg !13737
  store i32 %48, i32* %4, align 4, !dbg !13738
  br label %49, !dbg !13739

49:                                               ; preds = %44, %41
  %50 = load i32, i32* %4, align 4, !dbg !13740
  %51 = call i32 @vsf_sysutil_retval_is_error(i32 %50), !dbg !13742
  %52 = icmp ne i32 %51, 0, !dbg !13742
  br i1 %52, label %53, label %55, !dbg !13743

53:                                               ; preds = %49
  %54 = load i8*, i8** @tunable_userlist_file, align 8, !dbg !13744
  call void @die2(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.776, i32 0, i32 0), i8* %54), !dbg !13746
  br label %55, !dbg !13747

55:                                               ; preds = %53, %49
  br label %56, !dbg !13748

56:                                               ; preds = %55, %38, %35
  call void @drop_all_privs(), !dbg !13749
  call void (...) bitcast (void ()* @seccomp_sandbox_init to void (...)*)(), !dbg !13750
  %57 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13751
  call void @seccomp_sandbox_setup_prelogin(%struct.vsf_session* %57), !dbg !13752
  call void (...) bitcast (void ()* @seccomp_sandbox_lockdown to void (...)*)(), !dbg !13753
  %58 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13754
  call void @init_connection(%struct.vsf_session* %58), !dbg !13755
  ret void, !dbg !13756
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_sigterm(i8*) #0 !dbg !13757 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !13758, metadata !DIExpression()), !dbg !13759
  %3 = load i8*, i8** %2, align 8, !dbg !13760
  call void @vsf_sysutil_shutdown_failok(i32 0), !dbg !13761
  call void @vsf_sysutil_exit(i32 1), !dbg !13762
  ret void, !dbg !13763
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_sigchld(i8*) #0 !dbg !13764 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_client_launch, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !13765, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %3, metadata !13767, metadata !DIExpression()), !dbg !13772
  %4 = call i64 @vsf_sysutil_wait(), !dbg !13773
  %5 = bitcast %struct.vsf_client_launch* %3 to i64*, !dbg !13773
  store i64 %4, i64* %5, align 4, !dbg !13773
  %6 = load i8*, i8** %2, align 8, !dbg !13774
  %7 = call i32 @vsf_sysutil_wait_get_retval(%struct.vsf_client_launch* %3), !dbg !13775
  %8 = call i32 @vsf_sysutil_retval_is_error(i32 %7), !dbg !13777
  %9 = icmp ne i32 %8, 0, !dbg !13777
  br i1 %9, label %10, label %11, !dbg !13778

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.786, i32 0, i32 0)), !dbg !13779
  br label %16, !dbg !13781

11:                                               ; preds = %1
  %12 = call i32 @vsf_sysutil_wait_exited_normally(%struct.vsf_client_launch* %3), !dbg !13782
  %13 = icmp ne i32 %12, 0, !dbg !13782
  br i1 %13, label %15, label %14, !dbg !13784

14:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.787, i32 0, i32 0)), !dbg !13785
  br label %15, !dbg !13787

15:                                               ; preds = %14, %11
  br label %16

16:                                               ; preds = %15, %10
  call void @vsf_sysutil_exit(i32 0), !dbg !13788
  ret void, !dbg !13789
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @process_login_req(%struct.vsf_session*) #0 !dbg !13790 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.mystr, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mystr, align 8
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !13791, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13793, metadata !DIExpression()), !dbg !13794
  store i32 0, i32* %3, align 4, !dbg !13794
  call void @llvm.dbg.declare(metadata i8* %4, metadata !13795, metadata !DIExpression()), !dbg !13796
  %9 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13797
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 42, !dbg !13798
  %11 = load i32, i32* %10, align 8, !dbg !13798
  %12 = call signext i8 @priv_sock_get_cmd(i32 %11), !dbg !13799
  store i8 %12, i8* %4, align 1, !dbg !13800
  %13 = load i8, i8* %4, align 1, !dbg !13801
  %14 = sext i8 %13 to i32, !dbg !13801
  %15 = icmp ne i32 %14, 1, !dbg !13803
  br i1 %15, label %16, label %17, !dbg !13804

16:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.778, i32 0, i32 0)), !dbg !13805
  br label %17, !dbg !13807

17:                                               ; preds = %16, %1
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !13808, metadata !DIExpression()), !dbg !13810
  %18 = bitcast %struct.mystr* %5 to i8*, !dbg !13810
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false), !dbg !13810
  %19 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13811
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 42, !dbg !13812
  %21 = load i32, i32* %20, align 8, !dbg !13812
  %22 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13813
  %23 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %22, i32 0, i32 14, !dbg !13814
  call void @priv_sock_get_str(i32 %21, %struct.mystr* %23), !dbg !13815
  %24 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13816
  %25 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %24, i32 0, i32 42, !dbg !13817
  %26 = load i32, i32* %25, align 8, !dbg !13817
  call void @priv_sock_get_str(i32 %26, %struct.mystr* %5), !dbg !13818
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13819
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 42, !dbg !13820
  %29 = load i32, i32* %28, align 8, !dbg !13820
  %30 = call i32 @priv_sock_get_int(i32 %29), !dbg !13821
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13822
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 47, !dbg !13823
  store i32 %30, i32* %32, align 8, !dbg !13824
  %33 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13825
  %34 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %33, i32 0, i32 42, !dbg !13826
  %35 = load i32, i32* %34, align 8, !dbg !13826
  %36 = call i32 @priv_sock_get_int(i32 %35), !dbg !13827
  %37 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13828
  %38 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %37, i32 0, i32 48, !dbg !13829
  store i32 %36, i32* %38, align 4, !dbg !13830
  %39 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !13831
  %40 = icmp ne i32 %39, 0, !dbg !13831
  br i1 %40, label %46, label %41, !dbg !13833

41:                                               ; preds = %17
  %42 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13834
  %43 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %42, i32 0, i32 47, !dbg !13836
  store i32 0, i32* %43, align 8, !dbg !13837
  %44 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13838
  %45 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %44, i32 0, i32 48, !dbg !13839
  store i32 0, i32* %45, align 4, !dbg !13840
  br label %46, !dbg !13841

46:                                               ; preds = %41, %17
  %47 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13842
  %48 = call i32 @vsf_privop_do_login(%struct.vsf_session* %47, %struct.mystr* %5), !dbg !13843
  store i32 %48, i32* %3, align 4, !dbg !13844
  call void @str_free(%struct.mystr* %5), !dbg !13845
  %49 = load i32, i32* %3, align 4, !dbg !13846
  switch i32 %49, label %105 [
    i32 1, label %50
    i32 2, label %54
    i32 3, label %67
    i32 0, label %104
  ], !dbg !13847

50:                                               ; preds = %46
  %51 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13848
  %52 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %51, i32 0, i32 42, !dbg !13850
  %53 = load i32, i32* %52, align 8, !dbg !13850
  call void @priv_sock_send_result(i32 %53, i8 signext 2), !dbg !13851
  br label %106, !dbg !13852

54:                                               ; preds = %46
  %55 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13853
  %56 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %55, i32 0, i32 14, !dbg !13854
  call void @str_free(%struct.mystr* %56), !dbg !13855
  %57 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !13856
  %58 = icmp ne i8* %57, null, !dbg !13856
  br i1 %58, label %59, label %63, !dbg !13858

59:                                               ; preds = %54
  %60 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13859
  %61 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %60, i32 0, i32 14, !dbg !13861
  %62 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !13862
  call void @str_alloc_text(%struct.mystr* %61, i8* %62), !dbg !13863
  br label %63, !dbg !13864

63:                                               ; preds = %59, %54
  %64 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13865
  %65 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13866
  %66 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %65, i32 0, i32 14, !dbg !13867
  call void @common_do_login(%struct.vsf_session* %64, %struct.mystr* %66, i32 1, i32 1), !dbg !13868
  br label %106, !dbg !13869

67:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13870, metadata !DIExpression()), !dbg !13872
  store i32 0, i32* %6, align 4, !dbg !13872
  %68 = load i32, i32* @tunable_chroot_local_user, align 4, !dbg !13873
  %69 = icmp ne i32 %68, 0, !dbg !13873
  br i1 %69, label %70, label %71, !dbg !13875

70:                                               ; preds = %67
  store i32 1, i32* %6, align 4, !dbg !13876
  br label %71, !dbg !13878

71:                                               ; preds = %70, %67
  %72 = load i32, i32* @tunable_chroot_list_enable, align 4, !dbg !13879
  %73 = icmp ne i32 %72, 0, !dbg !13879
  br i1 %73, label %74, label %99, !dbg !13881

74:                                               ; preds = %71
  call void @llvm.dbg.declare(metadata %struct.mystr* %7, metadata !13882, metadata !DIExpression()), !dbg !13884
  %75 = bitcast %struct.mystr* %7 to i8*, !dbg !13884
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false), !dbg !13884
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13885, metadata !DIExpression()), !dbg !13886
  store i32 -1, i32* %8, align 4, !dbg !13886
  %76 = load i8*, i8** @tunable_chroot_list_file, align 8, !dbg !13887
  %77 = icmp ne i8* %76, null, !dbg !13887
  br i1 %77, label %78, label %81, !dbg !13889

78:                                               ; preds = %74
  %79 = load i8*, i8** @tunable_chroot_list_file, align 8, !dbg !13890
  %80 = call i32 @str_fileread(%struct.mystr* %7, i8* %79, i32 100000), !dbg !13892
  store i32 %80, i32* %8, align 4, !dbg !13893
  br label %81, !dbg !13894

81:                                               ; preds = %78, %74
  %82 = load i32, i32* %8, align 4, !dbg !13895
  %83 = call i32 @vsf_sysutil_retval_is_error(i32 %82), !dbg !13897
  %84 = icmp ne i32 %83, 0, !dbg !13897
  br i1 %84, label %85, label %87, !dbg !13898

85:                                               ; preds = %81
  %86 = load i8*, i8** @tunable_chroot_list_file, align 8, !dbg !13899
  call void @die2(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10.779, i32 0, i32 0), i8* %86), !dbg !13901
  br label %87, !dbg !13902

87:                                               ; preds = %85, %81
  %88 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13903
  %89 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %88, i32 0, i32 14, !dbg !13905
  %90 = call i32 @str_contains_line(%struct.mystr* %7, %struct.mystr* %89), !dbg !13906
  %91 = icmp ne i32 %90, 0, !dbg !13906
  br i1 %91, label %92, label %98, !dbg !13907

92:                                               ; preds = %87
  %93 = load i32, i32* %6, align 4, !dbg !13908
  %94 = icmp ne i32 %93, 0, !dbg !13908
  br i1 %94, label %95, label %96, !dbg !13911

95:                                               ; preds = %92
  store i32 0, i32* %6, align 4, !dbg !13912
  br label %97, !dbg !13914

96:                                               ; preds = %92
  store i32 1, i32* %6, align 4, !dbg !13915
  br label %97

97:                                               ; preds = %96, %95
  br label %98, !dbg !13917

98:                                               ; preds = %97, %87
  call void @str_free(%struct.mystr* %7), !dbg !13918
  br label %99, !dbg !13919

99:                                               ; preds = %98, %71
  %100 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13920
  %101 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !13921
  %102 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %101, i32 0, i32 14, !dbg !13922
  %103 = load i32, i32* %6, align 4, !dbg !13923
  call void @common_do_login(%struct.vsf_session* %100, %struct.mystr* %102, i32 %103, i32 0), !dbg !13924
  br label %106, !dbg !13925

104:                                              ; preds = %46
  br label %105, !dbg !13925

105:                                              ; preds = %46, %104
  call void @bug(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.780, i32 0, i32 0)), !dbg !13926
  br label %106, !dbg !13927

106:                                              ; preds = %50, %105, %99, %63
  ret void, !dbg !13928
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @drop_all_privs() #0 !dbg !13929 {
  %1 = alloca %struct.mystr, align 8
  %2 = alloca %struct.mystr, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_sysutil_statbuf*, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr* %1, metadata !13930, metadata !DIExpression()), !dbg !13931
  %5 = bitcast %struct.mystr* %1 to i8*, !dbg !13931
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false), !dbg !13931
  call void @llvm.dbg.declare(metadata %struct.mystr* %2, metadata !13932, metadata !DIExpression()), !dbg !13933
  %6 = bitcast %struct.mystr* %2 to i8*, !dbg !13933
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false), !dbg !13933
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13934, metadata !DIExpression()), !dbg !13935
  store i32 17, i32* %3, align 4, !dbg !13935
  %7 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !13936
  %8 = icmp ne i32 %7, 0, !dbg !13936
  br i1 %8, label %12, label %9, !dbg !13938

9:                                                ; preds = %0
  %10 = load i32, i32* %3, align 4, !dbg !13939
  %11 = or i32 %10, 8, !dbg !13939
  store i32 %11, i32* %3, align 4, !dbg !13939
  br label %12, !dbg !13941

12:                                               ; preds = %9, %0
  %13 = load i8*, i8** @tunable_nopriv_user, align 8, !dbg !13942
  %14 = icmp ne i8* %13, null, !dbg !13942
  br i1 %14, label %15, label %17, !dbg !13944

15:                                               ; preds = %12
  %16 = load i8*, i8** @tunable_nopriv_user, align 8, !dbg !13945
  call void @str_alloc_text(%struct.mystr* %1, i8* %16), !dbg !13947
  br label %17, !dbg !13948

17:                                               ; preds = %15, %12
  %18 = load i8*, i8** @tunable_secure_chroot_dir, align 8, !dbg !13949
  %19 = icmp ne i8* %18, null, !dbg !13949
  br i1 %19, label %20, label %22, !dbg !13951

20:                                               ; preds = %17
  %21 = load i8*, i8** @tunable_secure_chroot_dir, align 8, !dbg !13952
  call void @str_alloc_text(%struct.mystr* %2, i8* %21), !dbg !13954
  br label %22, !dbg !13955

22:                                               ; preds = %20, %17
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %4, metadata !13956, metadata !DIExpression()), !dbg !13958
  store %struct.vsf_sysutil_statbuf* null, %struct.vsf_sysutil_statbuf** %4, align 8, !dbg !13958
  %23 = call i32 @str_lstat(%struct.mystr* %2, %struct.vsf_sysutil_statbuf** %4), !dbg !13959
  %24 = call i32 @vsf_sysutil_retval_is_error(i32 %23), !dbg !13961
  %25 = icmp ne i32 %24, 0, !dbg !13961
  br i1 %25, label %26, label %28, !dbg !13962

26:                                               ; preds = %22
  %27 = load i8*, i8** @tunable_secure_chroot_dir, align 8, !dbg !13963
  call void @die2(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8.777, i32 0, i32 0), i8* %27), !dbg !13965
  br label %28, !dbg !13966

28:                                               ; preds = %26, %22
  %29 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %4, align 8, !dbg !13967
  %30 = bitcast %struct.vsf_sysutil_statbuf* %29 to i8*, !dbg !13967
  call void @vsf_sysutil_free(i8* %30), !dbg !13968
  %31 = load i32, i32* %3, align 4, !dbg !13969
  call void @vsf_secutil_change_credentials(%struct.mystr* %1, %struct.mystr* %2, %struct.mystr* null, i32 0, i32 %31), !dbg !13970
  call void @str_free(%struct.mystr* %1), !dbg !13971
  call void @str_free(%struct.mystr* %2), !dbg !13972
  ret void, !dbg !13973
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @common_do_login(%struct.vsf_session*, %struct.mystr*, i32, i32) #0 !dbg !13974 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.mystr*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.vsf_client_launch, align 4
  %13 = alloca %struct.mystr, align 8
  %14 = alloca %struct.mystr, align 8
  %15 = alloca %struct.mystr, align 8
  %16 = alloca %struct.mystr, align 8
  %17 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !13979, metadata !DIExpression()), !dbg !13980
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !13981, metadata !DIExpression()), !dbg !13982
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13983, metadata !DIExpression()), !dbg !13984
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13985, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13987, metadata !DIExpression()), !dbg !13988
  %18 = load i32, i32* %8, align 4, !dbg !13989
  store i32 %18, i32* %9, align 4, !dbg !13988
  call void @llvm.dbg.declare(metadata %struct.mystr** %10, metadata !13990, metadata !DIExpression()), !dbg !13991
  %19 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !13992
  store %struct.mystr* %19, %struct.mystr** %10, align 8, !dbg !13991
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13993, metadata !DIExpression()), !dbg !13994
  call void @vsf_sysutil_install_null_sighandler(i32 3), !dbg !13995
  %20 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !13996
  %21 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %20, i32 0, i32 42, !dbg !13997
  %22 = load i32, i32* %21, align 8, !dbg !13997
  call void @priv_sock_send_result(i32 %22, i8 signext 1), !dbg !13998
  %23 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !13999
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 47, !dbg !14001
  %25 = load i32, i32* %24, align 8, !dbg !14001
  %26 = icmp ne i32 %25, 0, !dbg !13999
  br i1 %26, label %30, label %27, !dbg !14002

27:                                               ; preds = %4
  %28 = call i64 @vsf_sysutil_wait(), !dbg !14003
  %29 = bitcast %struct.vsf_client_launch* %12 to i64*, !dbg !14003
  store i64 %28, i64* %29, align 4, !dbg !14003
  br label %33, !dbg !14005

30:                                               ; preds = %4
  %31 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14006
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 53, !dbg !14008
  store i32 1, i32* %32, align 8, !dbg !14009
  br label %33

33:                                               ; preds = %30, %27
  %34 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !14010
  call void @handle_per_user_config(%struct.mystr* %34), !dbg !14011
  %35 = load i32, i32* %8, align 4, !dbg !14012
  %36 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14013
  %37 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %36, i32 0, i32 12, !dbg !14014
  store i32 %35, i32* %37, align 8, !dbg !14015
  %38 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14016
  call void @priv_sock_close(%struct.vsf_session* %38), !dbg !14017
  %39 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14018
  call void @priv_sock_init(%struct.vsf_session* %39), !dbg !14019
  call void @vsf_sysutil_install_sighandler(i32 3, void (i8*)* @handle_sigchld, i8* null, i32 1), !dbg !14020
  %40 = load i32, i32* @tunable_isolate_network, align 4, !dbg !14021
  %41 = icmp ne i32 %40, 0, !dbg !14021
  br i1 %41, label %42, label %47, !dbg !14023

42:                                               ; preds = %33
  %43 = load i32, i32* @tunable_port_promiscuous, align 4, !dbg !14024
  %44 = icmp ne i32 %43, 0, !dbg !14024
  br i1 %44, label %47, label %45, !dbg !14025

45:                                               ; preds = %42
  %46 = call i32 (...) bitcast (i32 ()* @vsf_sysutil_fork_newnet to i32 (...)*)(), !dbg !14026
  store i32 %46, i32* %11, align 4, !dbg !14028
  br label %49, !dbg !14029

47:                                               ; preds = %42, %33
  %48 = call i32 @vsf_sysutil_fork(), !dbg !14030
  store i32 %48, i32* %11, align 4, !dbg !14032
  br label %49

49:                                               ; preds = %47, %45
  %50 = load i32, i32* %11, align 4, !dbg !14033
  %51 = icmp eq i32 %50, 0, !dbg !14035
  br i1 %51, label %52, label %112, !dbg !14036

52:                                               ; preds = %49
  call void @llvm.dbg.declare(metadata %struct.mystr* %13, metadata !14037, metadata !DIExpression()), !dbg !14039
  %53 = bitcast %struct.mystr* %13 to i8*, !dbg !14039
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false), !dbg !14039
  call void @llvm.dbg.declare(metadata %struct.mystr* %14, metadata !14040, metadata !DIExpression()), !dbg !14041
  %54 = bitcast %struct.mystr* %14 to i8*, !dbg !14041
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false), !dbg !14041
  call void @llvm.dbg.declare(metadata %struct.mystr* %15, metadata !14042, metadata !DIExpression()), !dbg !14043
  %55 = bitcast %struct.mystr* %15 to i8*, !dbg !14043
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false), !dbg !14043
  call void @llvm.dbg.declare(metadata %struct.mystr* %16, metadata !14044, metadata !DIExpression()), !dbg !14045
  %56 = bitcast %struct.mystr* %16 to i8*, !dbg !14045
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false), !dbg !14045
  call void @llvm.dbg.declare(metadata i32* %17, metadata !14046, metadata !DIExpression()), !dbg !14047
  store i32 18, i32* %17, align 4, !dbg !14047
  call void (...) bitcast (void ()* @vsf_set_die_if_parent_dies to void (...)*)(), !dbg !14048
  %57 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14049
  call void @priv_sock_set_child_context(%struct.vsf_session* %57), !dbg !14050
  %58 = load i32, i32* @tunable_guest_enable, align 4, !dbg !14051
  %59 = icmp ne i32 %58, 0, !dbg !14051
  br i1 %59, label %60, label %75, !dbg !14053

60:                                               ; preds = %52
  %61 = load i32, i32* %8, align 4, !dbg !14054
  %62 = icmp ne i32 %61, 0, !dbg !14054
  br i1 %62, label %75, label %63, !dbg !14055

63:                                               ; preds = %60
  %64 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14056
  %65 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %64, i32 0, i32 13, !dbg !14058
  store i32 1, i32* %65, align 4, !dbg !14059
  %66 = load i8*, i8** @tunable_guest_username, align 8, !dbg !14060
  %67 = icmp ne i8* %66, null, !dbg !14060
  br i1 %67, label %68, label %70, !dbg !14062

68:                                               ; preds = %63
  %69 = load i8*, i8** @tunable_guest_username, align 8, !dbg !14063
  call void @str_alloc_text(%struct.mystr* %13, i8* %69), !dbg !14065
  br label %70, !dbg !14066

70:                                               ; preds = %68, %63
  store %struct.mystr* %13, %struct.mystr** %6, align 8, !dbg !14067
  %71 = load i32, i32* @tunable_virtual_use_local_privs, align 4, !dbg !14068
  %72 = icmp ne i32 %71, 0, !dbg !14068
  br i1 %72, label %74, label %73, !dbg !14070

73:                                               ; preds = %70
  store i32 1, i32* %8, align 4, !dbg !14071
  store i32 1, i32* %7, align 4, !dbg !14073
  br label %74, !dbg !14074

74:                                               ; preds = %73, %70
  br label %75, !dbg !14075

75:                                               ; preds = %74, %60, %52
  %76 = load i32, i32* %7, align 4, !dbg !14076
  %77 = icmp ne i32 %76, 0, !dbg !14076
  br i1 %77, label %78, label %81, !dbg !14078

78:                                               ; preds = %75
  %79 = load i32, i32* %17, align 4, !dbg !14079
  %80 = or i32 %79, 1, !dbg !14079
  store i32 %80, i32* %17, align 4, !dbg !14079
  br label %81, !dbg !14081

81:                                               ; preds = %78, %75
  %82 = load i32, i32* %8, align 4, !dbg !14082
  %83 = icmp ne i32 %82, 0, !dbg !14082
  br i1 %83, label %87, label %84, !dbg !14084

84:                                               ; preds = %81
  %85 = load i32, i32* %17, align 4, !dbg !14085
  %86 = or i32 %85, 4, !dbg !14085
  store i32 %86, i32* %17, align 4, !dbg !14085
  br label %87, !dbg !14087

87:                                               ; preds = %84, %81
  %88 = load i32, i32* %9, align 4, !dbg !14088
  %89 = icmp ne i32 %88, 0, !dbg !14088
  br i1 %89, label %96, label %90, !dbg !14090

90:                                               ; preds = %87
  %91 = load i32, i32* @tunable_allow_writeable_chroot, align 4, !dbg !14091
  %92 = icmp ne i32 %91, 0, !dbg !14091
  br i1 %92, label %93, label %96, !dbg !14092

93:                                               ; preds = %90
  %94 = load i32, i32* %17, align 4, !dbg !14093
  %95 = or i32 %94, 32, !dbg !14093
  store i32 %95, i32* %17, align 4, !dbg !14093
  br label %96, !dbg !14095

96:                                               ; preds = %93, %90, %87
  %97 = load i32, i32* %9, align 4, !dbg !14096
  %98 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !14097
  %99 = load %struct.mystr*, %struct.mystr** %10, align 8, !dbg !14098
  call void @calculate_chdir_dir(i32 %97, %struct.mystr* %16, %struct.mystr* %14, %struct.mystr* %15, %struct.mystr* %98, %struct.mystr* %99), !dbg !14099
  %100 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !14100
  %101 = load i32, i32* %17, align 4, !dbg !14101
  call void @vsf_secutil_change_credentials(%struct.mystr* %100, %struct.mystr* %16, %struct.mystr* %14, i32 0, i32 %101), !dbg !14102
  %102 = call i32 @str_isempty(%struct.mystr* %15), !dbg !14103
  %103 = icmp ne i32 %102, 0, !dbg !14103
  br i1 %103, label %106, label %104, !dbg !14105

104:                                              ; preds = %96
  %105 = call i32 @str_chdir(%struct.mystr* %15), !dbg !14106
  br label %106, !dbg !14108

106:                                              ; preds = %104, %96
  call void @str_free(%struct.mystr* %13), !dbg !14109
  call void @str_free(%struct.mystr* %14), !dbg !14110
  call void @str_free(%struct.mystr* %15), !dbg !14111
  call void @str_free(%struct.mystr* %16), !dbg !14112
  %107 = load i32, i32* %8, align 4, !dbg !14113
  %108 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14114
  %109 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %108, i32 0, i32 12, !dbg !14115
  store i32 %107, i32* %109, align 8, !dbg !14116
  call void (...) bitcast (void ()* @seccomp_sandbox_init to void (...)*)(), !dbg !14117
  %110 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14118
  call void @seccomp_sandbox_setup_postlogin(%struct.vsf_session* %110), !dbg !14119
  call void (...) bitcast (void ()* @seccomp_sandbox_lockdown to void (...)*)(), !dbg !14120
  %111 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14121
  call void @process_post_login(%struct.vsf_session* %111), !dbg !14122
  call void @bug(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12.781, i32 0, i32 0)), !dbg !14123
  br label %112, !dbg !14124

112:                                              ; preds = %106, %49
  %113 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14125
  call void @priv_sock_set_parent_context(%struct.vsf_session* %113), !dbg !14126
  %114 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !14127
  %115 = icmp ne i32 %114, 0, !dbg !14127
  br i1 %115, label %116, label %118, !dbg !14129

116:                                              ; preds = %112
  %117 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14130
  call void @ssl_comm_channel_set_producer_context(%struct.vsf_session* %117), !dbg !14132
  br label %118, !dbg !14133

118:                                              ; preds = %116, %112
  %119 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !14134
  call void @vsf_priv_parent_postlogin(%struct.vsf_session* %119), !dbg !14135
  call void @bug(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13.782, i32 0, i32 0)), !dbg !14136
  ret void, !dbg !14137
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_per_user_config(%struct.mystr*) #0 !dbg !14138 {
  %2 = alloca %struct.mystr*, align 8
  %3 = alloca %struct.mystr, align 8
  %4 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %5 = alloca %struct.str_locate_result, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.str_locate_result, align 4
  %8 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !14141, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.declare(metadata %struct.mystr* %3, metadata !14143, metadata !DIExpression()), !dbg !14144
  %9 = bitcast %struct.mystr* %3 to i8*, !dbg !14144
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false), !dbg !14144
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %4, metadata !14145, metadata !DIExpression()), !dbg !14146
  store %struct.vsf_sysutil_statbuf* null, %struct.vsf_sysutil_statbuf** %4, align 8, !dbg !14146
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %5, metadata !14147, metadata !DIExpression()), !dbg !14153
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14154, metadata !DIExpression()), !dbg !14155
  %10 = load i8*, i8** @tunable_user_config_dir, align 8, !dbg !14156
  %11 = icmp ne i8* %10, null, !dbg !14156
  br i1 %11, label %13, label %12, !dbg !14158

12:                                               ; preds = %1
  br label %41, !dbg !14159

13:                                               ; preds = %1
  %14 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !14161
  %15 = call { i64, i8 } @str_locate_char(%struct.mystr* %14, i8 signext 47), !dbg !14162
  store { i64, i8 } %15, { i64, i8 }* %8, align 8, !dbg !14162
  %16 = bitcast { i64, i8 }* %8 to i8*, !dbg !14162
  %17 = bitcast %struct.str_locate_result* %7 to i8*, !dbg !14162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %16, i64 12, i1 false), !dbg !14162
  %18 = bitcast %struct.str_locate_result* %5 to i8*, !dbg !14162
  %19 = bitcast %struct.str_locate_result* %7 to i8*, !dbg !14162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false), !dbg !14162
  %20 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %5, i32 0, i32 0, !dbg !14163
  %21 = load i32, i32* %20, align 4, !dbg !14163
  %22 = icmp ne i32 %21, 0, !dbg !14165
  br i1 %22, label %23, label %24, !dbg !14166

23:                                               ; preds = %13
  br label %41, !dbg !14167

24:                                               ; preds = %13
  %25 = load i8*, i8** @tunable_user_config_dir, align 8, !dbg !14169
  call void @str_alloc_text(%struct.mystr* %3, i8* %25), !dbg !14170
  call void @str_append_char(%struct.mystr* %3, i8 signext 47), !dbg !14171
  %26 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !14172
  call void @str_append_str(%struct.mystr* %3, %struct.mystr* %26), !dbg !14173
  %27 = call i32 @str_stat(%struct.mystr* %3, %struct.vsf_sysutil_statbuf** %4), !dbg !14174
  store i32 %27, i32* %6, align 4, !dbg !14175
  %28 = load i32, i32* %6, align 4, !dbg !14176
  %29 = call i32 @vsf_sysutil_retval_is_error(i32 %28), !dbg !14178
  %30 = icmp ne i32 %29, 0, !dbg !14178
  br i1 %30, label %33, label %31, !dbg !14179

31:                                               ; preds = %24
  %32 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !14180
  call void @vsf_parseconf_load_file(i8* %32, i32 1), !dbg !14182
  br label %38, !dbg !14183

33:                                               ; preds = %24
  %34 = call i32 @vsf_sysutil_get_error(), !dbg !14184
  %35 = icmp ne i32 %34, 8, !dbg !14186
  br i1 %35, label %36, label %37, !dbg !14187

36:                                               ; preds = %33
  call void @die(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14.785, i32 0, i32 0)), !dbg !14188
  br label %37, !dbg !14190

37:                                               ; preds = %36, %33
  br label %38

38:                                               ; preds = %37, %31
  call void @str_free(%struct.mystr* %3), !dbg !14191
  %39 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %4, align 8, !dbg !14192
  %40 = bitcast %struct.vsf_sysutil_statbuf* %39 to i8*, !dbg !14192
  call void @vsf_sysutil_free(i8* %40), !dbg !14193
  br label %41, !dbg !14194

41:                                               ; preds = %38, %23, %12
  ret void, !dbg !14194
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @calculate_chdir_dir(i32, %struct.mystr*, %struct.mystr*, %struct.mystr*, %struct.mystr*, %struct.mystr*) #0 !dbg !14195 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.mystr*, align 8
  %9 = alloca %struct.mystr*, align 8
  %10 = alloca %struct.mystr*, align 8
  %11 = alloca %struct.mystr*, align 8
  %12 = alloca %struct.mystr*, align 8
  %13 = alloca %struct.vsf_sysutil_user*, align 8
  %14 = alloca %struct.str_locate_result, align 4
  %15 = alloca %struct.str_locate_result, align 4
  %16 = alloca { i64, i8 }, align 8
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14199, metadata !DIExpression()), !dbg !14200
  store %struct.mystr* %1, %struct.mystr** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %8, metadata !14201, metadata !DIExpression()), !dbg !14202
  store %struct.mystr* %2, %struct.mystr** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %9, metadata !14203, metadata !DIExpression()), !dbg !14204
  store %struct.mystr* %3, %struct.mystr** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %10, metadata !14205, metadata !DIExpression()), !dbg !14206
  store %struct.mystr* %4, %struct.mystr** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %11, metadata !14207, metadata !DIExpression()), !dbg !14208
  store %struct.mystr* %5, %struct.mystr** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %12, metadata !14209, metadata !DIExpression()), !dbg !14210
  %17 = load i32, i32* %7, align 4, !dbg !14211
  %18 = icmp ne i32 %17, 0, !dbg !14211
  br i1 %18, label %39, label %19, !dbg !14213

19:                                               ; preds = %6
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %13, metadata !14214, metadata !DIExpression()), !dbg !14218
  %20 = load %struct.mystr*, %struct.mystr** %11, align 8, !dbg !14219
  %21 = call %struct.vsf_sysutil_user* @str_getpwnam(%struct.mystr* %20), !dbg !14220
  store %struct.vsf_sysutil_user* %21, %struct.vsf_sysutil_user** %13, align 8, !dbg !14218
  %22 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %13, align 8, !dbg !14221
  %23 = icmp eq %struct.vsf_sysutil_user* %22, null, !dbg !14223
  br i1 %23, label %24, label %27, !dbg !14224

24:                                               ; preds = %19
  %25 = load %struct.mystr*, %struct.mystr** %11, align 8, !dbg !14225
  %26 = call i8* @str_getbuf(%struct.mystr* %25), !dbg !14227
  call void @die2(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15.783, i32 0, i32 0), i8* %26), !dbg !14228
  br label %27, !dbg !14229

27:                                               ; preds = %24, %19
  %28 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !14230
  %29 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %13, align 8, !dbg !14231
  %30 = call i8* @vsf_sysutil_user_get_homedir(%struct.vsf_sysutil_user* %29), !dbg !14232
  call void @str_alloc_text(%struct.mystr* %28, i8* %30), !dbg !14233
  %31 = load i8*, i8** @tunable_user_sub_token, align 8, !dbg !14234
  %32 = icmp ne i8* %31, null, !dbg !14234
  br i1 %32, label %33, label %38, !dbg !14236

33:                                               ; preds = %27
  %34 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !14237
  %35 = load i8*, i8** @tunable_user_sub_token, align 8, !dbg !14239
  %36 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !14240
  %37 = call i8* @str_getbuf(%struct.mystr* %36), !dbg !14241
  call void @str_replace_text(%struct.mystr* %34, i8* %35, i8* %37), !dbg !14242
  br label %38, !dbg !14243

38:                                               ; preds = %33, %27
  br label %39, !dbg !14244

39:                                               ; preds = %38, %6
  %40 = load i32, i32* %7, align 4, !dbg !14245
  %41 = icmp ne i32 %40, 0, !dbg !14245
  br i1 %41, label %42, label %48, !dbg !14247

42:                                               ; preds = %39
  %43 = load i8*, i8** @tunable_anon_root, align 8, !dbg !14248
  %44 = icmp ne i8* %43, null, !dbg !14248
  br i1 %44, label %45, label %48, !dbg !14249

45:                                               ; preds = %42
  %46 = load %struct.mystr*, %struct.mystr** %9, align 8, !dbg !14250
  %47 = load i8*, i8** @tunable_anon_root, align 8, !dbg !14252
  call void @str_alloc_text(%struct.mystr* %46, i8* %47), !dbg !14253
  br label %66, !dbg !14254

48:                                               ; preds = %42, %39
  %49 = load i32, i32* %7, align 4, !dbg !14255
  %50 = icmp ne i32 %49, 0, !dbg !14255
  br i1 %50, label %65, label %51, !dbg !14257

51:                                               ; preds = %48
  %52 = load i8*, i8** @tunable_local_root, align 8, !dbg !14258
  %53 = icmp ne i8* %52, null, !dbg !14258
  br i1 %53, label %54, label %65, !dbg !14259

54:                                               ; preds = %51
  %55 = load %struct.mystr*, %struct.mystr** %9, align 8, !dbg !14260
  %56 = load i8*, i8** @tunable_local_root, align 8, !dbg !14262
  call void @str_alloc_text(%struct.mystr* %55, i8* %56), !dbg !14263
  %57 = load i8*, i8** @tunable_user_sub_token, align 8, !dbg !14264
  %58 = icmp ne i8* %57, null, !dbg !14264
  br i1 %58, label %59, label %64, !dbg !14266

59:                                               ; preds = %54
  %60 = load %struct.mystr*, %struct.mystr** %9, align 8, !dbg !14267
  %61 = load i8*, i8** @tunable_user_sub_token, align 8, !dbg !14269
  %62 = load %struct.mystr*, %struct.mystr** %12, align 8, !dbg !14270
  %63 = call i8* @str_getbuf(%struct.mystr* %62), !dbg !14271
  call void @str_replace_text(%struct.mystr* %60, i8* %61, i8* %63), !dbg !14272
  br label %64, !dbg !14273

64:                                               ; preds = %59, %54
  br label %65, !dbg !14274

65:                                               ; preds = %64, %51, %48
  br label %66

66:                                               ; preds = %65, %45
  %67 = load i32, i32* %7, align 4, !dbg !14275
  %68 = icmp ne i32 %67, 0, !dbg !14275
  br i1 %68, label %88, label %69, !dbg !14277

69:                                               ; preds = %66
  %70 = load i32, i32* @tunable_passwd_chroot_enable, align 4, !dbg !14278
  %71 = icmp ne i32 %70, 0, !dbg !14278
  br i1 %71, label %72, label %88, !dbg !14279

72:                                               ; preds = %69
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %14, metadata !14280, metadata !DIExpression()), !dbg !14282
  %73 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !14283
  %74 = call { i64, i8 } @str_locate_text(%struct.mystr* %73, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.784, i32 0, i32 0)), !dbg !14284
  store { i64, i8 } %74, { i64, i8 }* %16, align 8, !dbg !14284
  %75 = bitcast { i64, i8 }* %16 to i8*, !dbg !14284
  %76 = bitcast %struct.str_locate_result* %15 to i8*, !dbg !14284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %75, i64 12, i1 false), !dbg !14284
  %77 = bitcast %struct.str_locate_result* %14 to i8*, !dbg !14284
  %78 = bitcast %struct.str_locate_result* %15 to i8*, !dbg !14284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 12, i1 false), !dbg !14284
  %79 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %14, i32 0, i32 0, !dbg !14285
  %80 = load i32, i32* %79, align 4, !dbg !14285
  %81 = icmp ne i32 %80, 0, !dbg !14287
  br i1 %81, label %82, label %87, !dbg !14288

82:                                               ; preds = %72
  %83 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !14289
  %84 = load %struct.mystr*, %struct.mystr** %10, align 8, !dbg !14291
  call void @str_split_text(%struct.mystr* %83, %struct.mystr* %84, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.784, i32 0, i32 0)), !dbg !14292
  %85 = load %struct.mystr*, %struct.mystr** %9, align 8, !dbg !14293
  %86 = load %struct.mystr*, %struct.mystr** %8, align 8, !dbg !14294
  call void @str_copy(%struct.mystr* %85, %struct.mystr* %86), !dbg !14295
  br label %87, !dbg !14296

87:                                               ; preds = %82, %72
  br label %88, !dbg !14297

88:                                               ; preds = %87, %69, %66
  ret void, !dbg !14298
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_two_process_login(%struct.vsf_session*, %struct.mystr*) #0 !dbg !14299 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14302, metadata !DIExpression()), !dbg !14303
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !14304, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.declare(metadata i8* %5, metadata !14306, metadata !DIExpression()), !dbg !14307
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14308
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 43, !dbg !14309
  %8 = load i32, i32* %7, align 4, !dbg !14309
  call void @priv_sock_send_cmd(i32 %8, i8 signext 1), !dbg !14310
  %9 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14311
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 43, !dbg !14312
  %11 = load i32, i32* %10, align 4, !dbg !14312
  %12 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14313
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 14, !dbg !14314
  call void @priv_sock_send_str(i32 %11, %struct.mystr* %13), !dbg !14315
  %14 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14316
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 43, !dbg !14317
  %16 = load i32, i32* %15, align 4, !dbg !14317
  %17 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !14318
  call void @priv_sock_send_str(i32 %16, %struct.mystr* %17), !dbg !14319
  %18 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14320
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 43, !dbg !14321
  %20 = load i32, i32* %19, align 4, !dbg !14321
  %21 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14322
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 47, !dbg !14323
  %23 = load i32, i32* %22, align 8, !dbg !14323
  call void @priv_sock_send_int(i32 %20, i32 %23), !dbg !14324
  %24 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14325
  %25 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %24, i32 0, i32 43, !dbg !14326
  %26 = load i32, i32* %25, align 4, !dbg !14326
  %27 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14327
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 48, !dbg !14328
  %29 = load i32, i32* %28, align 4, !dbg !14328
  call void @priv_sock_send_int(i32 %26, i32 %29), !dbg !14329
  %30 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14330
  %31 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %30, i32 0, i32 43, !dbg !14331
  %32 = load i32, i32* %31, align 4, !dbg !14331
  %33 = call signext i8 @priv_sock_get_result(i32 %32), !dbg !14332
  store i8 %33, i8* %5, align 1, !dbg !14333
  %34 = load i8, i8* %5, align 1, !dbg !14334
  %35 = sext i8 %34 to i32, !dbg !14334
  %36 = icmp eq i32 %35, 1, !dbg !14336
  br i1 %36, label %37, label %46, !dbg !14337

37:                                               ; preds = %2
  %38 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14338
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 47, !dbg !14341
  %40 = load i32, i32* %39, align 8, !dbg !14341
  %41 = icmp ne i32 %40, 0, !dbg !14338
  br i1 %41, label %43, label %42, !dbg !14342

42:                                               ; preds = %37
  call void @vsf_sysutil_exit(i32 0), !dbg !14343
  br label %45, !dbg !14345

43:                                               ; preds = %37
  %44 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14346
  call void @ssl_slave(%struct.vsf_session* %44), !dbg !14348
  br label %45

45:                                               ; preds = %43, %42
  br label %53, !dbg !14349

46:                                               ; preds = %2
  %47 = load i8, i8* %5, align 1, !dbg !14350
  %48 = sext i8 %47 to i32, !dbg !14350
  %49 = icmp eq i32 %48, 2, !dbg !14352
  br i1 %49, label %50, label %51, !dbg !14353

50:                                               ; preds = %46
  br label %53, !dbg !14354

51:                                               ; preds = %46
  call void @die(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.790, i32 0, i32 0)), !dbg !14356
  br label %52

52:                                               ; preds = %51
  br label %53

53:                                               ; preds = %50, %52, %45
  ret void, !dbg !14358
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_two_process_get_priv_data_sock(%struct.vsf_session*) #0 !dbg !14359 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i16, align 2
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14362, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.declare(metadata i8* %4, metadata !14364, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.declare(metadata i16* %5, metadata !14366, metadata !DIExpression()), !dbg !14367
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14368
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 6, !dbg !14369
  %8 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !14369
  %9 = call zeroext i16 @vsf_sysutil_sockaddr_get_port(%struct.vsf_sysutil_sockaddr* %8), !dbg !14370
  store i16 %9, i16* %5, align 2, !dbg !14367
  %10 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14371
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 43, !dbg !14372
  %12 = load i32, i32* %11, align 4, !dbg !14372
  call void @priv_sock_send_cmd(i32 %12, i8 signext 3), !dbg !14373
  %13 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14374
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 43, !dbg !14375
  %15 = load i32, i32* %14, align 4, !dbg !14375
  %16 = load i16, i16* %5, align 2, !dbg !14376
  %17 = zext i16 %16 to i32, !dbg !14376
  call void @priv_sock_send_int(i32 %15, i32 %17), !dbg !14377
  %18 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14378
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 43, !dbg !14379
  %20 = load i32, i32* %19, align 4, !dbg !14379
  %21 = call signext i8 @priv_sock_get_result(i32 %20), !dbg !14380
  store i8 %21, i8* %4, align 1, !dbg !14381
  %22 = load i8, i8* %4, align 1, !dbg !14382
  %23 = sext i8 %22 to i32, !dbg !14382
  %24 = icmp eq i32 %23, 2, !dbg !14384
  br i1 %24, label %25, label %26, !dbg !14385

25:                                               ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !14386
  br label %37, !dbg !14386

26:                                               ; preds = %1
  %27 = load i8, i8* %4, align 1, !dbg !14388
  %28 = sext i8 %27 to i32, !dbg !14388
  %29 = icmp ne i32 %28, 1, !dbg !14390
  br i1 %29, label %30, label %31, !dbg !14391

30:                                               ; preds = %26
  call void @die(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.793, i32 0, i32 0)), !dbg !14392
  br label %31, !dbg !14394

31:                                               ; preds = %30, %26
  br label %32

32:                                               ; preds = %31
  %33 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14395
  %34 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %33, i32 0, i32 43, !dbg !14396
  %35 = load i32, i32* %34, align 4, !dbg !14396
  %36 = call i32 @priv_sock_recv_fd(i32 %35), !dbg !14397
  store i32 %36, i32* %2, align 4, !dbg !14398
  br label %37, !dbg !14398

37:                                               ; preds = %32, %25
  %38 = load i32, i32* %2, align 4, !dbg !14399
  ret i32 %38, !dbg !14399
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_two_process_pasv_cleanup(%struct.vsf_session*) #0 !dbg !14400 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !14401, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.declare(metadata i8* %3, metadata !14403, metadata !DIExpression()), !dbg !14404
  %4 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14405
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 43, !dbg !14406
  %6 = load i32, i32* %5, align 4, !dbg !14406
  call void @priv_sock_send_cmd(i32 %6, i8 signext 10), !dbg !14407
  %7 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14408
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 43, !dbg !14409
  %9 = load i32, i32* %8, align 4, !dbg !14409
  %10 = call signext i8 @priv_sock_get_result(i32 %9), !dbg !14410
  store i8 %10, i8* %3, align 1, !dbg !14411
  %11 = load i8, i8* %3, align 1, !dbg !14412
  %12 = sext i8 %11 to i32, !dbg !14412
  %13 = icmp ne i32 %12, 1, !dbg !14414
  br i1 %13, label %14, label %15, !dbg !14415

14:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.796, i32 0, i32 0)), !dbg !14416
  br label %15, !dbg !14418

15:                                               ; preds = %14, %1
  ret void, !dbg !14419
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_two_process_pasv_active(%struct.vsf_session*) #0 !dbg !14420 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !14421, metadata !DIExpression()), !dbg !14422
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14423
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 43, !dbg !14424
  %5 = load i32, i32* %4, align 4, !dbg !14424
  call void @priv_sock_send_cmd(i32 %5, i8 signext 11), !dbg !14425
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14426
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 43, !dbg !14427
  %8 = load i32, i32* %7, align 4, !dbg !14427
  %9 = call i32 @priv_sock_get_int(i32 %8), !dbg !14428
  ret i32 %9, !dbg !14429
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define zeroext i16 @vsf_two_process_listen(%struct.vsf_session*) #0 !dbg !14430 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !14433, metadata !DIExpression()), !dbg !14434
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14435
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 43, !dbg !14436
  %5 = load i32, i32* %4, align 4, !dbg !14436
  call void @priv_sock_send_cmd(i32 %5, i8 signext 12), !dbg !14437
  %6 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14438
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 43, !dbg !14439
  %8 = load i32, i32* %7, align 4, !dbg !14439
  %9 = call i32 @priv_sock_get_int(i32 %8), !dbg !14440
  %10 = trunc i32 %9 to i16, !dbg !14441
  ret i16 %10, !dbg !14442
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_two_process_get_pasv_fd(%struct.vsf_session*) #0 !dbg !14443 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14444, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.declare(metadata i8* %4, metadata !14446, metadata !DIExpression()), !dbg !14447
  %5 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14448
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 43, !dbg !14449
  %7 = load i32, i32* %6, align 4, !dbg !14449
  call void @priv_sock_send_cmd(i32 %7, i8 signext 13), !dbg !14450
  %8 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14451
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 43, !dbg !14452
  %10 = load i32, i32* %9, align 4, !dbg !14452
  %11 = call signext i8 @priv_sock_get_result(i32 %10), !dbg !14453
  store i8 %11, i8* %4, align 1, !dbg !14454
  %12 = load i8, i8* %4, align 1, !dbg !14455
  %13 = sext i8 %12 to i32, !dbg !14455
  %14 = icmp eq i32 %13, 2, !dbg !14457
  br i1 %14, label %15, label %20, !dbg !14458

15:                                               ; preds = %1
  %16 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14459
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 43, !dbg !14461
  %18 = load i32, i32* %17, align 4, !dbg !14461
  %19 = call i32 @priv_sock_get_int(i32 %18), !dbg !14462
  store i32 %19, i32* %2, align 4, !dbg !14463
  br label %31, !dbg !14463

20:                                               ; preds = %1
  %21 = load i8, i8* %4, align 1, !dbg !14464
  %22 = sext i8 %21 to i32, !dbg !14464
  %23 = icmp ne i32 %22, 1, !dbg !14466
  br i1 %23, label %24, label %25, !dbg !14467

24:                                               ; preds = %20
  call void @die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.803, i32 0, i32 0)), !dbg !14468
  br label %25, !dbg !14470

25:                                               ; preds = %24, %20
  br label %26

26:                                               ; preds = %25
  %27 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14471
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 43, !dbg !14472
  %29 = load i32, i32* %28, align 4, !dbg !14472
  %30 = call i32 @priv_sock_recv_fd(i32 %29), !dbg !14473
  store i32 %30, i32* %2, align 4, !dbg !14474
  br label %31, !dbg !14474

31:                                               ; preds = %26, %15
  %32 = load i32, i32* %2, align 4, !dbg !14475
  ret i32 %32, !dbg !14475
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_two_process_chown_upload(%struct.vsf_session*, i32) #0 !dbg !14476 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14479, metadata !DIExpression()), !dbg !14480
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14481, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.declare(metadata i8* %5, metadata !14483, metadata !DIExpression()), !dbg !14484
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14485
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 43, !dbg !14486
  %8 = load i32, i32* %7, align 4, !dbg !14486
  call void @priv_sock_send_cmd(i32 %8, i8 signext 2), !dbg !14487
  %9 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14488
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 43, !dbg !14489
  %11 = load i32, i32* %10, align 4, !dbg !14489
  %12 = load i32, i32* %4, align 4, !dbg !14490
  call void @priv_sock_send_fd(i32 %11, i32 %12), !dbg !14491
  %13 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14492
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 43, !dbg !14493
  %15 = load i32, i32* %14, align 4, !dbg !14493
  %16 = call signext i8 @priv_sock_get_result(i32 %15), !dbg !14494
  store i8 %16, i8* %5, align 1, !dbg !14495
  %17 = load i8, i8* %5, align 1, !dbg !14496
  %18 = sext i8 %17 to i32, !dbg !14496
  %19 = icmp ne i32 %18, 1, !dbg !14498
  br i1 %19, label %20, label %21, !dbg !14499

20:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.806, i32 0, i32 0)), !dbg !14500
  br label %21, !dbg !14502

21:                                               ; preds = %20, %2
  ret void, !dbg !14503
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_privop_get_ftp_port_sock(%struct.vsf_session*, i16 zeroext, i32) #0 !dbg !963 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca double, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !14504, metadata !DIExpression()), !dbg !14505
  store i16 %1, i16* %5, align 2
  call void @llvm.dbg.declare(metadata i16* %5, metadata !14506, metadata !DIExpression()), !dbg !14507
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14508, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %7, metadata !14510, metadata !DIExpression()), !dbg !14513
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14514, metadata !DIExpression()), !dbg !14515
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14516, metadata !DIExpression()), !dbg !14517
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14518, metadata !DIExpression()), !dbg !14519
  %13 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !14520
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 0, !dbg !14521
  %15 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %14, align 8, !dbg !14521
  %16 = call i32 @vsf_sysutil_get_ipsock(%struct.vsf_sysutil_sockaddr* %15), !dbg !14522
  store i32 %16, i32* %10, align 4, !dbg !14519
  call void @llvm.dbg.declare(metadata i16* %11, metadata !14523, metadata !DIExpression()), !dbg !14524
  store i16 0, i16* %11, align 2, !dbg !14524
  %17 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !14525
  %18 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %17, i32 0, i32 5, !dbg !14527
  %19 = load i32, i32* %18, align 8, !dbg !14527
  %20 = icmp ne i32 %19, -1, !dbg !14528
  br i1 %20, label %21, label %22, !dbg !14529

21:                                               ; preds = %3
  call void @die(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.809, i32 0, i32 0)), !dbg !14530
  br label %22, !dbg !14532

22:                                               ; preds = %21, %3
  %23 = load i16, i16* %5, align 2, !dbg !14533
  %24 = call i32 @vsf_sysutil_is_port_reserved(i16 zeroext %23), !dbg !14535
  %25 = icmp ne i32 %24, 0, !dbg !14535
  br i1 %25, label %26, label %27, !dbg !14536

26:                                               ; preds = %22
  call void @die(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.810, i32 0, i32 0)), !dbg !14537
  br label %27, !dbg !14539

27:                                               ; preds = %26, %22
  %28 = load i32, i32* @tunable_connect_from_port_20, align 4, !dbg !14540
  %29 = icmp ne i32 %28, 0, !dbg !14540
  br i1 %29, label %30, label %33, !dbg !14542

30:                                               ; preds = %27
  %31 = load i32, i32* @tunable_ftp_data_port, align 4, !dbg !14543
  %32 = trunc i32 %31 to i16, !dbg !14545
  store i16 %32, i16* %11, align 2, !dbg !14546
  br label %33, !dbg !14547

33:                                               ; preds = %30, %27
  %34 = load i32, i32* %10, align 4, !dbg !14548
  call void @vsf_sysutil_activate_reuseaddr(i32 %34), !dbg !14549
  store i32 0, i32* %9, align 4, !dbg !14550
  br label %35, !dbg !14552

35:                                               ; preds = %65, %33
  %36 = load i32, i32* %9, align 4, !dbg !14553
  %37 = icmp slt i32 %36, 2, !dbg !14555
  br i1 %37, label %38, label %68, !dbg !14556

38:                                               ; preds = %35
  call void @llvm.dbg.declare(metadata double* %12, metadata !14557, metadata !DIExpression()), !dbg !14559
  %39 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !14560
  %40 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %39, i32 0, i32 0, !dbg !14561
  %41 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %40, align 8, !dbg !14561
  call void @vsf_sysutil_sockaddr_clone(%struct.vsf_sysutil_sockaddr** @vsf_privop_get_ftp_port_sock.p_sockaddr, %struct.vsf_sysutil_sockaddr* %41), !dbg !14562
  %42 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @vsf_privop_get_ftp_port_sock.p_sockaddr, align 8, !dbg !14563
  %43 = load i16, i16* %11, align 2, !dbg !14564
  call void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr* %42, i16 zeroext %43), !dbg !14565
  %44 = load i32, i32* %10, align 4, !dbg !14566
  %45 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @vsf_privop_get_ftp_port_sock.p_sockaddr, align 8, !dbg !14567
  %46 = call i32 @vsf_sysutil_bind(i32 %44, %struct.vsf_sysutil_sockaddr* %45), !dbg !14568
  store i32 %46, i32* %8, align 4, !dbg !14569
  %47 = load i32, i32* %8, align 4, !dbg !14570
  %48 = icmp eq i32 %47, 0, !dbg !14572
  br i1 %48, label %49, label %50, !dbg !14573

49:                                               ; preds = %38
  br label %68, !dbg !14574

50:                                               ; preds = %38
  %51 = call i32 @vsf_sysutil_get_error(), !dbg !14576
  %52 = icmp ne i32 %51, 2, !dbg !14578
  br i1 %52, label %56, label %53, !dbg !14579

53:                                               ; preds = %50
  %54 = load i32, i32* %9, align 4, !dbg !14580
  %55 = icmp eq i32 %54, 1, !dbg !14581
  br i1 %55, label %56, label %57, !dbg !14582

56:                                               ; preds = %53, %50
  call void @die(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.811, i32 0, i32 0)), !dbg !14583
  br label %57, !dbg !14585

57:                                               ; preds = %56, %53
  %58 = call zeroext i8 @vsf_sysutil_get_random_byte(), !dbg !14586
  %59 = uitofp i8 %58 to double, !dbg !14586
  store double %59, double* %12, align 8, !dbg !14587
  %60 = load double, double* %12, align 8, !dbg !14588
  %61 = fdiv double %60, 2.560000e+02, !dbg !14588
  store double %61, double* %12, align 8, !dbg !14588
  %62 = load double, double* %12, align 8, !dbg !14589
  %63 = fadd double %62, 1.000000e+00, !dbg !14589
  store double %63, double* %12, align 8, !dbg !14589
  %64 = load double, double* %12, align 8, !dbg !14590
  call void @vsf_sysutil_sleep(double %64), !dbg !14591
  br label %65, !dbg !14592

65:                                               ; preds = %57
  %66 = load i32, i32* %9, align 4, !dbg !14593
  %67 = add nsw i32 %66, 1, !dbg !14593
  store i32 %67, i32* %9, align 4, !dbg !14593
  br label %35, !dbg !14594, !llvm.loop !14595

68:                                               ; preds = %49, %35
  %69 = load i32, i32* %6, align 4, !dbg !14597
  %70 = icmp ne i32 %69, 0, !dbg !14597
  br i1 %70, label %71, label %75, !dbg !14599

71:                                               ; preds = %68
  %72 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !14600
  %73 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %72, i32 0, i32 6, !dbg !14602
  %74 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %73, align 8, !dbg !14602
  store %struct.vsf_sysutil_sockaddr* %74, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !14603
  br label %83, !dbg !14604

75:                                               ; preds = %68
  %76 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !14605
  %77 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %76, i32 0, i32 1, !dbg !14607
  %78 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %77, align 8, !dbg !14607
  %79 = load i16, i16* %5, align 2, !dbg !14608
  call void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr* %78, i16 zeroext %79), !dbg !14609
  %80 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !14610
  %81 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %80, i32 0, i32 1, !dbg !14611
  %82 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %81, align 8, !dbg !14611
  store %struct.vsf_sysutil_sockaddr* %82, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !14612
  br label %83

83:                                               ; preds = %75, %71
  %84 = load i32, i32* %10, align 4, !dbg !14613
  %85 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !14614
  %86 = load i32, i32* @tunable_connect_timeout, align 4, !dbg !14615
  %87 = call i32 @vsf_sysutil_connect_timeout(i32 %84, %struct.vsf_sysutil_sockaddr* %85, i32 %86), !dbg !14616
  store i32 %87, i32* %8, align 4, !dbg !14617
  %88 = load i32, i32* %8, align 4, !dbg !14618
  %89 = call i32 @vsf_sysutil_retval_is_error(i32 %88), !dbg !14620
  %90 = icmp ne i32 %89, 0, !dbg !14620
  br i1 %90, label %91, label %93, !dbg !14621

91:                                               ; preds = %83
  %92 = load i32, i32* %10, align 4, !dbg !14622
  call void @vsf_sysutil_close(i32 %92), !dbg !14624
  store i32 -1, i32* %10, align 4, !dbg !14625
  br label %93, !dbg !14626

93:                                               ; preds = %91, %83
  %94 = load i32, i32* %10, align 4, !dbg !14627
  ret i32 %94, !dbg !14628
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_privop_pasv_cleanup(%struct.vsf_session*) #0 !dbg !14629 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !14632, metadata !DIExpression()), !dbg !14633
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14634
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 5, !dbg !14636
  %5 = load i32, i32* %4, align 8, !dbg !14636
  %6 = icmp ne i32 %5, -1, !dbg !14637
  br i1 %6, label %7, label %13, !dbg !14638

7:                                                ; preds = %1
  %8 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14639
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 5, !dbg !14641
  %10 = load i32, i32* %9, align 8, !dbg !14641
  call void @vsf_sysutil_close(i32 %10), !dbg !14642
  %11 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14643
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 5, !dbg !14644
  store i32 -1, i32* %12, align 8, !dbg !14645
  br label %13, !dbg !14646

13:                                               ; preds = %7, %1
  ret void, !dbg !14647
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_privop_pasv_active(%struct.vsf_session*) #0 !dbg !14648 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14651, metadata !DIExpression()), !dbg !14652
  %4 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14653
  %5 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %4, i32 0, i32 5, !dbg !14655
  %6 = load i32, i32* %5, align 8, !dbg !14655
  %7 = icmp ne i32 %6, -1, !dbg !14656
  br i1 %7, label %8, label %9, !dbg !14657

8:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !14658
  br label %10, !dbg !14658

9:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14660
  br label %10, !dbg !14660

10:                                               ; preds = %9, %8
  %11 = load i32, i32* %2, align 4, !dbg !14661
  ret i32 %11, !dbg !14661
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define zeroext i16 @vsf_privop_pasv_listen(%struct.vsf_session*) #0 !dbg !1055 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !14662, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14664, metadata !DIExpression()), !dbg !14665
  store i32 10, i32* %3, align 4, !dbg !14665
  call void @llvm.dbg.declare(metadata i16* %4, metadata !14666, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.declare(metadata i16* %5, metadata !14668, metadata !DIExpression()), !dbg !14669
  store i16 1024, i16* %5, align 2, !dbg !14669
  call void @llvm.dbg.declare(metadata i16* %6, metadata !14670, metadata !DIExpression()), !dbg !14671
  store i16 -1, i16* %6, align 2, !dbg !14671
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14672, metadata !DIExpression()), !dbg !14673
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14674
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 0, !dbg !14675
  %12 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %11, align 8, !dbg !14675
  %13 = call i32 @vsf_sysutil_sockaddr_is_ipv6(%struct.vsf_sysutil_sockaddr* %12), !dbg !14676
  store i32 %13, i32* %7, align 4, !dbg !14673
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14677
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 5, !dbg !14679
  %16 = load i32, i32* %15, align 8, !dbg !14679
  %17 = icmp ne i32 %16, -1, !dbg !14680
  br i1 %17, label %18, label %19, !dbg !14681

18:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3.818, i32 0, i32 0)), !dbg !14682
  br label %19, !dbg !14684

19:                                               ; preds = %18, %1
  %20 = load i32, i32* @tunable_pasv_min_port, align 4, !dbg !14685
  %21 = load i16, i16* %5, align 2, !dbg !14687
  %22 = zext i16 %21 to i32, !dbg !14687
  %23 = icmp ugt i32 %20, %22, !dbg !14688
  br i1 %23, label %24, label %32, !dbg !14689

24:                                               ; preds = %19
  %25 = load i32, i32* @tunable_pasv_min_port, align 4, !dbg !14690
  %26 = load i16, i16* %6, align 2, !dbg !14691
  %27 = zext i16 %26 to i32, !dbg !14691
  %28 = icmp ule i32 %25, %27, !dbg !14692
  br i1 %28, label %29, label %32, !dbg !14693

29:                                               ; preds = %24
  %30 = load i32, i32* @tunable_pasv_min_port, align 4, !dbg !14694
  %31 = trunc i32 %30 to i16, !dbg !14696
  store i16 %31, i16* %5, align 2, !dbg !14697
  br label %32, !dbg !14698

32:                                               ; preds = %29, %24, %19
  %33 = load i32, i32* @tunable_pasv_max_port, align 4, !dbg !14699
  %34 = load i16, i16* %5, align 2, !dbg !14701
  %35 = zext i16 %34 to i32, !dbg !14701
  %36 = icmp uge i32 %33, %35, !dbg !14702
  br i1 %36, label %37, label %45, !dbg !14703

37:                                               ; preds = %32
  %38 = load i32, i32* @tunable_pasv_max_port, align 4, !dbg !14704
  %39 = load i16, i16* %6, align 2, !dbg !14705
  %40 = zext i16 %39 to i32, !dbg !14705
  %41 = icmp ult i32 %38, %40, !dbg !14706
  br i1 %41, label %42, label %45, !dbg !14707

42:                                               ; preds = %37
  %43 = load i32, i32* @tunable_pasv_max_port, align 4, !dbg !14708
  %44 = trunc i32 %43 to i16, !dbg !14710
  store i16 %44, i16* %6, align 2, !dbg !14711
  br label %45, !dbg !14712

45:                                               ; preds = %42, %37, %32
  br label %46, !dbg !14713

46:                                               ; preds = %129, %123, %45
  %47 = load i32, i32* %3, align 4, !dbg !14714
  %48 = add nsw i32 %47, -1, !dbg !14714
  store i32 %48, i32* %3, align 4, !dbg !14714
  %49 = icmp ne i32 %48, 0, !dbg !14713
  br i1 %49, label %50, label %130, !dbg !14713

50:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14715, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.declare(metadata double* %9, metadata !14718, metadata !DIExpression()), !dbg !14719
  %51 = call zeroext i8 @vsf_sysutil_get_random_byte(), !dbg !14720
  %52 = zext i8 %51 to i16, !dbg !14720
  store i16 %52, i16* %4, align 2, !dbg !14721
  %53 = load i16, i16* %4, align 2, !dbg !14722
  %54 = zext i16 %53 to i32, !dbg !14722
  %55 = shl i32 %54, 8, !dbg !14723
  %56 = trunc i32 %55 to i16, !dbg !14724
  store i16 %56, i16* %4, align 2, !dbg !14725
  %57 = load i16, i16* %4, align 2, !dbg !14726
  %58 = zext i16 %57 to i32, !dbg !14726
  %59 = call zeroext i8 @vsf_sysutil_get_random_byte(), !dbg !14727
  %60 = zext i8 %59 to i32, !dbg !14727
  %61 = or i32 %58, %60, !dbg !14728
  %62 = trunc i32 %61 to i16, !dbg !14729
  store i16 %62, i16* %4, align 2, !dbg !14730
  %63 = load i16, i16* %5, align 2, !dbg !14731
  %64 = uitofp i16 %63 to double, !dbg !14732
  store double %64, double* %9, align 8, !dbg !14733
  %65 = load i16, i16* %4, align 2, !dbg !14734
  %66 = uitofp i16 %65 to double, !dbg !14735
  %67 = fdiv double %66, 6.553600e+04, !dbg !14736
  %68 = load i16, i16* %6, align 2, !dbg !14737
  %69 = uitofp i16 %68 to double, !dbg !14738
  %70 = load i16, i16* %5, align 2, !dbg !14739
  %71 = zext i16 %70 to i32, !dbg !14739
  %72 = sitofp i32 %71 to double, !dbg !14739
  %73 = fsub double %69, %72, !dbg !14740
  %74 = fadd double %73, 1.000000e+00, !dbg !14741
  %75 = fmul double %67, %74, !dbg !14742
  %76 = load double, double* %9, align 8, !dbg !14743
  %77 = fadd double %76, %75, !dbg !14743
  store double %77, double* %9, align 8, !dbg !14743
  %78 = load double, double* %9, align 8, !dbg !14744
  %79 = fptoui double %78 to i16, !dbg !14745
  store i16 %79, i16* %4, align 2, !dbg !14746
  %80 = load i32, i32* %7, align 4, !dbg !14747
  %81 = icmp ne i32 %80, 0, !dbg !14747
  br i1 %81, label %82, label %86, !dbg !14749

82:                                               ; preds = %50
  %83 = call i32 @vsf_sysutil_get_ipv6_sock(), !dbg !14750
  %84 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14752
  %85 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %84, i32 0, i32 5, !dbg !14753
  store i32 %83, i32* %85, align 8, !dbg !14754
  br label %90, !dbg !14755

86:                                               ; preds = %50
  %87 = call i32 @vsf_sysutil_get_ipv4_sock(), !dbg !14756
  %88 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14758
  %89 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %88, i32 0, i32 5, !dbg !14759
  store i32 %87, i32* %89, align 8, !dbg !14760
  br label %90

90:                                               ; preds = %86, %82
  %91 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14761
  %92 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %91, i32 0, i32 5, !dbg !14762
  %93 = load i32, i32* %92, align 8, !dbg !14762
  call void @vsf_sysutil_activate_reuseaddr(i32 %93), !dbg !14763
  %94 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14764
  %95 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %94, i32 0, i32 0, !dbg !14765
  %96 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %95, align 8, !dbg !14765
  call void @vsf_sysutil_sockaddr_clone(%struct.vsf_sysutil_sockaddr** @vsf_privop_pasv_listen.s_p_sockaddr, %struct.vsf_sysutil_sockaddr* %96), !dbg !14766
  %97 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @vsf_privop_pasv_listen.s_p_sockaddr, align 8, !dbg !14767
  %98 = load i16, i16* %4, align 2, !dbg !14768
  call void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr* %97, i16 zeroext %98), !dbg !14769
  %99 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14770
  %100 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %99, i32 0, i32 5, !dbg !14771
  %101 = load i32, i32* %100, align 8, !dbg !14771
  %102 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @vsf_privop_pasv_listen.s_p_sockaddr, align 8, !dbg !14772
  %103 = call i32 @vsf_sysutil_bind(i32 %101, %struct.vsf_sysutil_sockaddr* %102), !dbg !14773
  store i32 %103, i32* %8, align 4, !dbg !14774
  %104 = load i32, i32* %8, align 4, !dbg !14775
  %105 = call i32 @vsf_sysutil_retval_is_error(i32 %104), !dbg !14777
  %106 = icmp ne i32 %105, 0, !dbg !14777
  br i1 %106, label %117, label %107, !dbg !14778

107:                                              ; preds = %90
  %108 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14779
  %109 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %108, i32 0, i32 5, !dbg !14781
  %110 = load i32, i32* %109, align 8, !dbg !14781
  %111 = call i32 @vsf_sysutil_listen(i32 %110, i32 1), !dbg !14782
  store i32 %111, i32* %8, align 4, !dbg !14783
  %112 = load i32, i32* %8, align 4, !dbg !14784
  %113 = call i32 @vsf_sysutil_retval_is_error(i32 %112), !dbg !14786
  %114 = icmp ne i32 %113, 0, !dbg !14786
  br i1 %114, label %116, label %115, !dbg !14787

115:                                              ; preds = %107
  br label %130, !dbg !14788

116:                                              ; preds = %107
  br label %117, !dbg !14790

117:                                              ; preds = %116, %90
  %118 = call i32 @vsf_sysutil_get_error(), !dbg !14791
  %119 = icmp eq i32 %118, 2, !dbg !14793
  br i1 %119, label %123, label %120, !dbg !14794

120:                                              ; preds = %117
  %121 = call i32 @vsf_sysutil_get_error(), !dbg !14795
  %122 = icmp eq i32 %121, 7, !dbg !14796
  br i1 %122, label %123, label %129, !dbg !14797

123:                                              ; preds = %120, %117
  %124 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14798
  %125 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %124, i32 0, i32 5, !dbg !14800
  %126 = load i32, i32* %125, align 8, !dbg !14800
  call void @vsf_sysutil_close(i32 %126), !dbg !14801
  %127 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !14802
  %128 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %127, i32 0, i32 5, !dbg !14803
  store i32 -1, i32* %128, align 8, !dbg !14804
  br label %46, !dbg !14805, !llvm.loop !14806

129:                                              ; preds = %120
  call void @die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.819, i32 0, i32 0)), !dbg !14808
  br label %46, !dbg !14713, !llvm.loop !14806

130:                                              ; preds = %115, %46
  %131 = load i32, i32* %3, align 4, !dbg !14809
  %132 = icmp ne i32 %131, 0, !dbg !14809
  br i1 %132, label %134, label %133, !dbg !14811

133:                                              ; preds = %130
  call void @die(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.811, i32 0, i32 0)), !dbg !14812
  br label %134, !dbg !14814

134:                                              ; preds = %133, %130
  %135 = load i16, i16* %4, align 2, !dbg !14815
  ret i16 %135, !dbg !14816
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_privop_accept_pasv(%struct.vsf_session*) #0 !dbg !14817 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %5 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14818, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %4, metadata !14820, metadata !DIExpression()), !dbg !14821
  store %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !14821
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14822, metadata !DIExpression()), !dbg !14823
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14824
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 5, !dbg !14826
  %8 = load i32, i32* %7, align 8, !dbg !14826
  %9 = icmp eq i32 %8, -1, !dbg !14827
  br i1 %9, label %10, label %11, !dbg !14828

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.822, i32 0, i32 0)), !dbg !14829
  br label %11, !dbg !14831

11:                                               ; preds = %10, %1
  call void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr** %4), !dbg !14832
  %12 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14833
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 5, !dbg !14834
  %14 = load i32, i32* %13, align 8, !dbg !14834
  %15 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !14835
  %16 = load i32, i32* @tunable_accept_timeout, align 4, !dbg !14836
  %17 = call i32 @vsf_sysutil_accept_timeout(i32 %14, %struct.vsf_sysutil_sockaddr* %15, i32 %16), !dbg !14837
  store i32 %17, i32* %5, align 4, !dbg !14838
  %18 = load i32, i32* %5, align 4, !dbg !14839
  %19 = call i32 @vsf_sysutil_retval_is_error(i32 %18), !dbg !14841
  %20 = icmp ne i32 %19, 0, !dbg !14841
  br i1 %20, label %21, label %22, !dbg !14842

21:                                               ; preds = %11
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %4), !dbg !14843
  store i32 -1, i32* %2, align 4, !dbg !14845
  br label %37, !dbg !14845

22:                                               ; preds = %11
  %23 = load i32, i32* @tunable_pasv_promiscuous, align 4, !dbg !14846
  %24 = icmp ne i32 %23, 0, !dbg !14846
  br i1 %24, label %35, label %25, !dbg !14848

25:                                               ; preds = %22
  %26 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14849
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 1, !dbg !14852
  %28 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %27, align 8, !dbg !14852
  %29 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !14853
  %30 = call i32 @vsf_sysutil_sockaddr_addr_equal(%struct.vsf_sysutil_sockaddr* %28, %struct.vsf_sysutil_sockaddr* %29), !dbg !14854
  %31 = icmp ne i32 %30, 0, !dbg !14854
  br i1 %31, label %34, label %32, !dbg !14855

32:                                               ; preds = %25
  %33 = load i32, i32* %5, align 4, !dbg !14856
  call void @vsf_sysutil_close(i32 %33), !dbg !14858
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %4), !dbg !14859
  store i32 -2, i32* %2, align 4, !dbg !14860
  br label %37, !dbg !14860

34:                                               ; preds = %25
  br label %35, !dbg !14861

35:                                               ; preds = %34, %22
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %4), !dbg !14862
  %36 = load i32, i32* %5, align 4, !dbg !14863
  store i32 %36, i32* %2, align 4, !dbg !14864
  br label %37, !dbg !14864

37:                                               ; preds = %35, %32, %21
  %38 = load i32, i32* %2, align 4, !dbg !14865
  ret i32 %38, !dbg !14865
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_privop_do_file_chown(%struct.vsf_session*, i32) #0 !dbg !1060 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14866, metadata !DIExpression()), !dbg !14867
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14868, metadata !DIExpression()), !dbg !14869
  %5 = load i32, i32* %4, align 4, !dbg !14870
  call void @vsf_sysutil_fstat(i32 %5, %struct.vsf_sysutil_statbuf** @vsf_privop_do_file_chown.s_p_statbuf), !dbg !14871
  %6 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_privop_do_file_chown.s_p_statbuf, align 8, !dbg !14872
  %7 = call i32 @vsf_sysutil_statbuf_get_uid(%struct.vsf_sysutil_statbuf* %6), !dbg !14874
  %8 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14875
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 26, !dbg !14876
  %10 = load i32, i32* %9, align 8, !dbg !14876
  %11 = icmp eq i32 %7, %10, !dbg !14877
  br i1 %11, label %12, label %13, !dbg !14878

12:                                               ; preds = %2
  br label %42, !dbg !14879

13:                                               ; preds = %2
  %14 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14881
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 26, !dbg !14883
  %16 = load i32, i32* %15, align 8, !dbg !14883
  %17 = icmp eq i32 %16, -1, !dbg !14884
  br i1 %17, label %36, label %18, !dbg !14885

18:                                               ; preds = %13
  %19 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_privop_do_file_chown.s_p_statbuf, align 8, !dbg !14886
  %20 = call i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf* %19), !dbg !14887
  %21 = icmp ne i32 %20, 0, !dbg !14887
  br i1 %21, label %22, label %36, !dbg !14888

22:                                               ; preds = %18
  %23 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_privop_do_file_chown.s_p_statbuf, align 8, !dbg !14889
  %24 = call i32 @vsf_sysutil_statbuf_get_uid(%struct.vsf_sysutil_statbuf* %23), !dbg !14890
  %25 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14891
  %26 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %25, i32 0, i32 24, !dbg !14892
  %27 = load i32, i32* %26, align 8, !dbg !14892
  %28 = icmp ne i32 %24, %27, !dbg !14893
  br i1 %28, label %29, label %37, !dbg !14894

29:                                               ; preds = %22
  %30 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** @vsf_privop_do_file_chown.s_p_statbuf, align 8, !dbg !14895
  %31 = call i32 @vsf_sysutil_statbuf_get_uid(%struct.vsf_sysutil_statbuf* %30), !dbg !14896
  %32 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14897
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 25, !dbg !14898
  %34 = load i32, i32* %33, align 4, !dbg !14898
  %35 = icmp ne i32 %31, %34, !dbg !14899
  br i1 %35, label %36, label %37, !dbg !14900

36:                                               ; preds = %29, %18, %13
  call void @die(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.825, i32 0, i32 0)), !dbg !14901
  br label %37, !dbg !14903

37:                                               ; preds = %36, %29, %22
  %38 = load i32, i32* %4, align 4, !dbg !14904
  %39 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14905
  %40 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %39, i32 0, i32 26, !dbg !14906
  %41 = load i32, i32* %40, align 8, !dbg !14906
  call void @vsf_sysutil_fchown(i32 %38, i32 %41, i32 -1), !dbg !14907
  br label %42, !dbg !14908

42:                                               ; preds = %37, %12
  ret void, !dbg !14908
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_privop_do_login(%struct.vsf_session*, %struct.mystr*) #0 !dbg !14909 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !14914, metadata !DIExpression()), !dbg !14915
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !14916, metadata !DIExpression()), !dbg !14917
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14918, metadata !DIExpression()), !dbg !14919
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14920
  %7 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14921
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 14, !dbg !14922
  %9 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !14923
  %10 = call i32 @handle_login(%struct.vsf_session* %6, %struct.mystr* %8, %struct.mystr* %9), !dbg !14924
  store i32 %10, i32* %5, align 4, !dbg !14919
  %11 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14925
  call void @vsf_log_start_entry(%struct.vsf_session* %11, i32 5), !dbg !14926
  %12 = load i32, i32* %5, align 4, !dbg !14927
  %13 = icmp eq i32 %12, 1, !dbg !14929
  br i1 %13, label %14, label %22, !dbg !14930

14:                                               ; preds = %2
  %15 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14931
  call void @vsf_log_do_log(%struct.vsf_session* %15, i32 0), !dbg !14933
  %16 = load i32, i32* @tunable_delay_failed_login, align 4, !dbg !14934
  %17 = icmp ne i32 %16, 0, !dbg !14934
  br i1 %17, label %18, label %21, !dbg !14936

18:                                               ; preds = %14
  %19 = load i32, i32* @tunable_delay_failed_login, align 4, !dbg !14937
  %20 = uitofp i32 %19 to double, !dbg !14939
  call void @vsf_sysutil_sleep(double %20), !dbg !14940
  br label %21, !dbg !14941

21:                                               ; preds = %18, %14
  br label %30, !dbg !14942

22:                                               ; preds = %2
  %23 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !14943
  call void @vsf_log_do_log(%struct.vsf_session* %23, i32 1), !dbg !14945
  %24 = load i32, i32* @tunable_delay_successful_login, align 4, !dbg !14946
  %25 = icmp ne i32 %24, 0, !dbg !14946
  br i1 %25, label %26, label %29, !dbg !14948

26:                                               ; preds = %22
  %27 = load i32, i32* @tunable_delay_successful_login, align 4, !dbg !14949
  %28 = uitofp i32 %27 to double, !dbg !14951
  call void @vsf_sysutil_sleep(double %28), !dbg !14952
  br label %29, !dbg !14953

29:                                               ; preds = %26, %22
  br label %30

30:                                               ; preds = %29, %21
  %31 = load i32, i32* %5, align 4, !dbg !14954
  ret i32 %31, !dbg !14955
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @handle_login(%struct.vsf_session*, %struct.mystr*, %struct.mystr*) #0 !dbg !14956 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca %struct.mystr*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %struct.mystr, align 8
  %12 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !14960, metadata !DIExpression()), !dbg !14961
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !14962, metadata !DIExpression()), !dbg !14963
  store %struct.mystr* %2, %struct.mystr** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %7, metadata !14964, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14966, metadata !DIExpression()), !dbg !14967
  store i32 0, i32* %8, align 4, !dbg !14967
  call void @llvm.dbg.declare(metadata i8* %9, metadata !14968, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14970, metadata !DIExpression()), !dbg !14971
  %13 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !14972
  %14 = call i32 @str_getlen(%struct.mystr* %13), !dbg !14973
  store i32 %14, i32* %10, align 4, !dbg !14971
  %15 = load i32, i32* %10, align 4, !dbg !14974
  %16 = icmp eq i32 %15, 0, !dbg !14976
  br i1 %16, label %20, label %17, !dbg !14977

17:                                               ; preds = %3
  %18 = load i32, i32* %10, align 4, !dbg !14978
  %19 = icmp ugt i32 %18, 128, !dbg !14979
  br i1 %19, label %20, label %21, !dbg !14980

20:                                               ; preds = %17, %3
  store i32 1, i32* %4, align 4, !dbg !14981
  br label %83, !dbg !14981

21:                                               ; preds = %17
  %22 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !14983
  %23 = call signext i8 @str_get_char_at(%struct.mystr* %22, i32 0), !dbg !14984
  store i8 %23, i8* %9, align 1, !dbg !14985
  %24 = load i8, i8* %9, align 1, !dbg !14986
  %25 = sext i8 %24 to i32, !dbg !14986
  %26 = call i32 @vsf_sysutil_isalnum(i32 %25), !dbg !14988
  %27 = icmp ne i32 %26, 0, !dbg !14988
  br i1 %27, label %37, label %28, !dbg !14989

28:                                               ; preds = %21
  %29 = load i8, i8* %9, align 1, !dbg !14990
  %30 = sext i8 %29 to i32, !dbg !14990
  %31 = icmp ne i32 %30, 95, !dbg !14991
  br i1 %31, label %32, label %37, !dbg !14992

32:                                               ; preds = %28
  %33 = load i8, i8* %9, align 1, !dbg !14993
  %34 = sext i8 %33 to i32, !dbg !14993
  %35 = icmp ne i32 %34, 46, !dbg !14994
  br i1 %35, label %36, label %37, !dbg !14995

36:                                               ; preds = %32
  store i32 1, i32* %4, align 4, !dbg !14996
  br label %83, !dbg !14996

37:                                               ; preds = %32, %28, %21
  %38 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !14998
  %39 = call i32 @str_contains_space(%struct.mystr* %38), !dbg !15000
  %40 = icmp ne i32 %39, 0, !dbg !15000
  br i1 %40, label %45, label %41, !dbg !15001

41:                                               ; preds = %37
  %42 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !15002
  %43 = call i32 @str_contains_unprintable(%struct.mystr* %42), !dbg !15003
  %44 = icmp ne i32 %43, 0, !dbg !15003
  br i1 %44, label %45, label %46, !dbg !15004

45:                                               ; preds = %41, %37
  store i32 1, i32* %4, align 4, !dbg !15005
  br label %83, !dbg !15005

46:                                               ; preds = %41
  %47 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !15007
  %48 = call i32 @str_getlen(%struct.mystr* %47), !dbg !15008
  store i32 %48, i32* %10, align 4, !dbg !15009
  %49 = load i32, i32* %10, align 4, !dbg !15010
  %50 = icmp ugt i32 %49, 128, !dbg !15012
  br i1 %50, label %51, label %52, !dbg !15013

51:                                               ; preds = %46
  store i32 1, i32* %4, align 4, !dbg !15014
  br label %83, !dbg !15014

52:                                               ; preds = %46
  %53 = load i32, i32* @tunable_anonymous_enable, align 4, !dbg !15016
  %54 = icmp ne i32 %53, 0, !dbg !15016
  br i1 %54, label %55, label %65, !dbg !15018

55:                                               ; preds = %52
  call void @llvm.dbg.declare(metadata %struct.mystr* %11, metadata !15019, metadata !DIExpression()), !dbg !15021
  %56 = bitcast %struct.mystr* %11 to i8*, !dbg !15021
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false), !dbg !15021
  %57 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !15022
  call void @str_copy(%struct.mystr* %11, %struct.mystr* %57), !dbg !15023
  call void @str_upper(%struct.mystr* %11), !dbg !15024
  %58 = call i32 @str_equal_text(%struct.mystr* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.828, i32 0, i32 0)), !dbg !15025
  %59 = icmp ne i32 %58, 0, !dbg !15025
  br i1 %59, label %63, label %60, !dbg !15027

60:                                               ; preds = %55
  %61 = call i32 @str_equal_text(%struct.mystr* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.829, i32 0, i32 0)), !dbg !15028
  %62 = icmp ne i32 %61, 0, !dbg !15028
  br i1 %62, label %63, label %64, !dbg !15029

63:                                               ; preds = %60, %55
  store i32 1, i32* %8, align 4, !dbg !15030
  br label %64, !dbg !15032

64:                                               ; preds = %63, %60
  call void @str_free(%struct.mystr* %11), !dbg !15033
  br label %65, !dbg !15034

65:                                               ; preds = %64, %52
  call void @llvm.dbg.declare(metadata i32* %12, metadata !15035, metadata !DIExpression()), !dbg !15037
  store i32 1, i32* %12, align 4, !dbg !15037
  %66 = load i32, i32* %8, align 4, !dbg !15038
  %67 = icmp ne i32 %66, 0, !dbg !15038
  br i1 %67, label %68, label %72, !dbg !15040

68:                                               ; preds = %65
  %69 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !15041
  %70 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !15043
  %71 = call i32 @handle_anonymous_login(%struct.vsf_session* %69, %struct.mystr* %70), !dbg !15044
  store i32 %71, i32* %12, align 4, !dbg !15045
  br label %81, !dbg !15046

72:                                               ; preds = %65
  %73 = load i32, i32* @tunable_local_enable, align 4, !dbg !15047
  %74 = icmp ne i32 %73, 0, !dbg !15047
  br i1 %74, label %76, label %75, !dbg !15050

75:                                               ; preds = %72
  call void @die(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9.830, i32 0, i32 0)), !dbg !15051
  br label %76, !dbg !15053

76:                                               ; preds = %75, %72
  %77 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !15054
  %78 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !15055
  %79 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !15056
  %80 = call i32 @handle_local_login(%struct.vsf_session* %77, %struct.mystr* %78, %struct.mystr* %79), !dbg !15057
  store i32 %80, i32* %12, align 4, !dbg !15058
  br label %81

81:                                               ; preds = %76, %68
  %82 = load i32, i32* %12, align 4, !dbg !15059
  store i32 %82, i32* %4, align 4, !dbg !15060
  br label %83, !dbg !15060

83:                                               ; preds = %81, %51, %45, %36, %20
  %84 = load i32, i32* %4, align 4, !dbg !15061
  ret i32 %84, !dbg !15061
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @handle_anonymous_login(%struct.vsf_session*, %struct.mystr*) #0 !dbg !15062 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca %struct.mystr, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !15063, metadata !DIExpression()), !dbg !15064
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !15065, metadata !DIExpression()), !dbg !15066
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15067
  %8 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %7, i32 0, i32 27, !dbg !15069
  %9 = call i32 @str_isempty(%struct.mystr* %8), !dbg !15070
  %10 = icmp ne i32 %9, 0, !dbg !15070
  br i1 %10, label %18, label %11, !dbg !15071

11:                                               ; preds = %2
  %12 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15072
  %13 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %12, i32 0, i32 27, !dbg !15073
  %14 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !15074
  %15 = call i32 @str_contains_line(%struct.mystr* %13, %struct.mystr* %14), !dbg !15075
  %16 = icmp ne i32 %15, 0, !dbg !15075
  br i1 %16, label %17, label %18, !dbg !15076

17:                                               ; preds = %11
  store i32 1, i32* %3, align 4, !dbg !15077
  br label %61, !dbg !15077

18:                                               ; preds = %11, %2
  %19 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15079
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 28, !dbg !15081
  %21 = call i32 @str_isempty(%struct.mystr* %20), !dbg !15082
  %22 = icmp ne i32 %21, 0, !dbg !15082
  br i1 %22, label %34, label %23, !dbg !15083

23:                                               ; preds = %18
  %24 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15084
  %25 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %24, i32 0, i32 28, !dbg !15085
  %26 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !15086
  %27 = call i32 @str_contains_line(%struct.mystr* %25, %struct.mystr* %26), !dbg !15087
  %28 = icmp ne i32 %27, 0, !dbg !15087
  br i1 %28, label %29, label %33, !dbg !15088

29:                                               ; preds = %23
  %30 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !15089
  %31 = call i32 @str_isempty(%struct.mystr* %30), !dbg !15090
  %32 = icmp ne i32 %31, 0, !dbg !15090
  br i1 %32, label %33, label %34, !dbg !15091

33:                                               ; preds = %29, %23
  store i32 1, i32* %3, align 4, !dbg !15092
  br label %61, !dbg !15092

34:                                               ; preds = %29, %18
  %35 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15094
  %36 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %35, i32 0, i32 15, !dbg !15095
  %37 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !15096
  call void @str_copy(%struct.mystr* %36, %struct.mystr* %37), !dbg !15097
  %38 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15098
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 15, !dbg !15100
  %40 = call i32 @str_isempty(%struct.mystr* %39), !dbg !15101
  %41 = icmp ne i32 %40, 0, !dbg !15101
  br i1 %41, label %42, label %45, !dbg !15102

42:                                               ; preds = %34
  %43 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15103
  %44 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %43, i32 0, i32 15, !dbg !15105
  call void @str_alloc_text(%struct.mystr* %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.831, i32 0, i32 0)), !dbg !15106
  br label %45, !dbg !15107

45:                                               ; preds = %42, %34
  %46 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15108
  %47 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %46, i32 0, i32 15, !dbg !15109
  call void @str_replace_char(%struct.mystr* %47, i8 signext 32, i8 signext 95), !dbg !15110
  %48 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15111
  %49 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %48, i32 0, i32 15, !dbg !15112
  call void @str_replace_char(%struct.mystr* %49, i8 signext 10, i8 signext 63), !dbg !15113
  call void @llvm.dbg.declare(metadata %struct.mystr* %6, metadata !15114, metadata !DIExpression()), !dbg !15116
  %50 = bitcast %struct.mystr* %6 to i8*, !dbg !15116
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false), !dbg !15116
  %51 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !15117
  %52 = icmp ne i8* %51, null, !dbg !15117
  br i1 %52, label %53, label %55, !dbg !15119

53:                                               ; preds = %45
  %54 = load i8*, i8** @tunable_ftp_username, align 8, !dbg !15120
  call void @str_alloc_text(%struct.mystr* %6, i8* %54), !dbg !15122
  br label %55, !dbg !15123

55:                                               ; preds = %53, %45
  %56 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15124
  call void @setup_username_globals(%struct.vsf_session* %56, %struct.mystr* %6), !dbg !15125
  call void @str_free(%struct.mystr* %6), !dbg !15126
  %57 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15127
  %58 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %57, i32 0, i32 27, !dbg !15128
  call void @str_free(%struct.mystr* %58), !dbg !15129
  %59 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !15130
  %60 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %59, i32 0, i32 28, !dbg !15131
  call void @str_free(%struct.mystr* %60), !dbg !15132
  store i32 2, i32* %3, align 4, !dbg !15133
  br label %61, !dbg !15133

61:                                               ; preds = %55, %33, %17
  %62 = load i32, i32* %3, align 4, !dbg !15134
  ret i32 %62, !dbg !15134
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @handle_local_login(%struct.vsf_session*, %struct.mystr*, %struct.mystr*) #0 !dbg !15135 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca %struct.mystr*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !15136, metadata !DIExpression()), !dbg !15137
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !15138, metadata !DIExpression()), !dbg !15139
  store %struct.mystr* %2, %struct.mystr** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %7, metadata !15140, metadata !DIExpression()), !dbg !15141
  %8 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !15142
  %9 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !15144
  %10 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !15145
  %11 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %10, i32 0, i32 34, !dbg !15146
  %12 = call i32 @vsf_sysdep_check_auth(%struct.mystr* %8, %struct.mystr* %9, %struct.mystr* %11), !dbg !15147
  %13 = icmp ne i32 %12, 0, !dbg !15147
  br i1 %13, label %15, label %14, !dbg !15148

14:                                               ; preds = %3
  store i32 1, i32* %4, align 4, !dbg !15149
  br label %18, !dbg !15149

15:                                               ; preds = %3
  %16 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !15151
  %17 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !15152
  call void @setup_username_globals(%struct.vsf_session* %16, %struct.mystr* %17), !dbg !15153
  store i32 3, i32* %4, align 4, !dbg !15154
  br label %18, !dbg !15154

18:                                               ; preds = %15, %14
  %19 = load i32, i32* %4, align 4, !dbg !15155
  ret i32 %19, !dbg !15155
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @setup_username_globals(%struct.vsf_session*, %struct.mystr*) #0 !dbg !15156 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !15159, metadata !DIExpression()), !dbg !15160
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !15161, metadata !DIExpression()), !dbg !15162
  %6 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !15163
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 14, !dbg !15164
  %8 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !15165
  call void @str_copy(%struct.mystr* %7, %struct.mystr* %8), !dbg !15166
  %9 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !15167
  %10 = icmp ne i32 %9, 0, !dbg !15167
  br i1 %10, label %11, label %16, !dbg !15169

11:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !15170, metadata !DIExpression()), !dbg !15172
  %12 = bitcast %struct.mystr* %5 to i8*, !dbg !15172
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false), !dbg !15172
  %13 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !15173
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 34, !dbg !15174
  call void @str_copy(%struct.mystr* %5, %struct.mystr* %14), !dbg !15175
  call void @str_append_char(%struct.mystr* %5, i8 signext 47), !dbg !15176
  %15 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !15177
  call void @str_append_str(%struct.mystr* %5, %struct.mystr* %15), !dbg !15178
  call void @vsf_sysutil_set_proctitle_prefix(%struct.mystr* %5), !dbg !15179
  call void @str_free(%struct.mystr* %5), !dbg !15180
  br label %16, !dbg !15181

16:                                               ; preds = %11, %2
  ret void, !dbg !15182
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_standalone_main() #0 !dbg !15183 {
  %1 = alloca %struct.vsf_client_launch, align 4
  %2 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %7 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %8 = alloca %struct.mystr, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.vsf_client_launch, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %2, metadata !15190, metadata !DIExpression()), !dbg !15191
  store %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr** %2, align 8, !dbg !15191
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15192, metadata !DIExpression()), !dbg !15193
  store i32 -1, i32* %3, align 4, !dbg !15193
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15194, metadata !DIExpression()), !dbg !15195
  %14 = call i32 @vsf_sysutil_get_ipaddr_size(), !dbg !15196
  store i32 %14, i32* @s_ipaddr_size, align 4, !dbg !15197
  %15 = load i32, i32* @tunable_listen, align 4, !dbg !15198
  %16 = icmp ne i32 %15, 0, !dbg !15198
  br i1 %16, label %17, label %21, !dbg !15200

17:                                               ; preds = %0
  %18 = load i32, i32* @tunable_listen_ipv6, align 4, !dbg !15201
  %19 = icmp ne i32 %18, 0, !dbg !15201
  br i1 %19, label %20, label %21, !dbg !15202

20:                                               ; preds = %17
  call void @die(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.834, i32 0, i32 0)), !dbg !15203
  br label %21, !dbg !15205

21:                                               ; preds = %20, %17, %0
  %22 = load i32, i32* @tunable_background, align 4, !dbg !15206
  %23 = icmp ne i32 %22, 0, !dbg !15206
  br i1 %23, label %24, label %30, !dbg !15208

24:                                               ; preds = %21
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15209, metadata !DIExpression()), !dbg !15211
  %25 = call i32 @vsf_sysutil_fork(), !dbg !15212
  store i32 %25, i32* %5, align 4, !dbg !15211
  %26 = load i32, i32* %5, align 4, !dbg !15213
  %27 = icmp sgt i32 %26, 0, !dbg !15215
  br i1 %27, label %28, label %29, !dbg !15216

28:                                               ; preds = %24
  call void @vsf_sysutil_exit(i32 0), !dbg !15217
  br label %29, !dbg !15219

29:                                               ; preds = %28, %24
  call void @vsf_sysutil_reopen_standard_fds(), !dbg !15220
  call void @vsf_sysutil_make_session_leader(), !dbg !15221
  br label %30, !dbg !15222

30:                                               ; preds = %29, %21
  %31 = load i32, i32* @tunable_listen, align 4, !dbg !15223
  %32 = icmp ne i32 %31, 0, !dbg !15223
  br i1 %32, label %33, label %35, !dbg !15225

33:                                               ; preds = %30
  %34 = call i32 @vsf_sysutil_get_ipv4_sock(), !dbg !15226
  store i32 %34, i32* %3, align 4, !dbg !15228
  br label %37, !dbg !15229

35:                                               ; preds = %30
  %36 = call i32 @vsf_sysutil_get_ipv6_sock(), !dbg !15230
  store i32 %36, i32* %3, align 4, !dbg !15232
  br label %37

37:                                               ; preds = %35, %33
  %38 = load i32, i32* %3, align 4, !dbg !15233
  call void @vsf_sysutil_activate_reuseaddr(i32 %38), !dbg !15234
  %39 = load i32, i32* @s_ipaddr_size, align 4, !dbg !15235
  %40 = call %struct.hash* @hash_alloc(i32 256, i32 %39, i32 4, i32 (i32, i8*)* @hash_ip), !dbg !15236
  store %struct.hash* %40, %struct.hash** @s_p_ip_count_hash, align 8, !dbg !15237
  %41 = load i32, i32* @s_ipaddr_size, align 4, !dbg !15238
  %42 = call %struct.hash* @hash_alloc(i32 256, i32 4, i32 %41, i32 (i32, i8*)* @hash_pid), !dbg !15239
  store %struct.hash* %42, %struct.hash** @s_p_pid_ip_hash, align 8, !dbg !15240
  %43 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !15241
  %44 = icmp ne i32 %43, 0, !dbg !15241
  br i1 %44, label %45, label %46, !dbg !15243

45:                                               ; preds = %37
  call void @vsf_sysutil_setproctitle(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.835, i32 0, i32 0)), !dbg !15244
  br label %46, !dbg !15246

46:                                               ; preds = %45, %37
  call void @vsf_sysutil_install_sighandler(i32 3, void (i8*)* @handle_sigchld.836, i8* null, i32 1), !dbg !15247
  call void @vsf_sysutil_install_sighandler(i32 6, void (i8*)* @handle_sighup, i8* null, i32 1), !dbg !15248
  %47 = load i32, i32* @tunable_listen, align 4, !dbg !15249
  %48 = icmp ne i32 %47, 0, !dbg !15249
  br i1 %48, label %49, label %76, !dbg !15251

49:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %6, metadata !15252, metadata !DIExpression()), !dbg !15254
  store %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !15254
  call void @vsf_sysutil_sockaddr_alloc_ipv4(%struct.vsf_sysutil_sockaddr** %6), !dbg !15255
  %50 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !15256
  %51 = load i32, i32* @tunable_listen_port, align 4, !dbg !15257
  %52 = trunc i32 %51 to i16, !dbg !15258
  call void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr* %50, i16 zeroext %52), !dbg !15259
  %53 = load i8*, i8** @tunable_listen_address, align 8, !dbg !15260
  %54 = icmp ne i8* %53, null, !dbg !15260
  br i1 %54, label %57, label %55, !dbg !15262

55:                                               ; preds = %49
  %56 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !15263
  call void @vsf_sysutil_sockaddr_set_any(%struct.vsf_sysutil_sockaddr* %56), !dbg !15265
  br label %65, !dbg !15266

57:                                               ; preds = %49
  %58 = load i8*, i8** @tunable_listen_address, align 8, !dbg !15267
  %59 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !15270
  %60 = call i32 @vsf_sysutil_inet_aton(i8* %58, %struct.vsf_sysutil_sockaddr* %59), !dbg !15271
  %61 = icmp ne i32 %60, 0, !dbg !15271
  br i1 %61, label %64, label %62, !dbg !15272

62:                                               ; preds = %57
  %63 = load i8*, i8** @tunable_listen_address, align 8, !dbg !15273
  call void @die2(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.837, i32 0, i32 0), i8* %63), !dbg !15275
  br label %64, !dbg !15276

64:                                               ; preds = %62, %57
  br label %65

65:                                               ; preds = %64, %55
  %66 = load i32, i32* %3, align 4, !dbg !15277
  %67 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !15278
  %68 = call i32 @vsf_sysutil_bind(i32 %66, %struct.vsf_sysutil_sockaddr* %67), !dbg !15279
  store i32 %68, i32* %4, align 4, !dbg !15280
  %69 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !15281
  %70 = bitcast %struct.vsf_sysutil_sockaddr* %69 to i8*, !dbg !15281
  call void @vsf_sysutil_free(i8* %70), !dbg !15282
  %71 = load i32, i32* %4, align 4, !dbg !15283
  %72 = call i32 @vsf_sysutil_retval_is_error(i32 %71), !dbg !15285
  %73 = icmp ne i32 %72, 0, !dbg !15285
  br i1 %73, label %74, label %75, !dbg !15286

74:                                               ; preds = %65
  call void @die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.838, i32 0, i32 0)), !dbg !15287
  br label %75, !dbg !15289

75:                                               ; preds = %74, %65
  br label %106, !dbg !15290

76:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %7, metadata !15291, metadata !DIExpression()), !dbg !15293
  store %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !15293
  call void @vsf_sysutil_sockaddr_alloc_ipv6(%struct.vsf_sysutil_sockaddr** %7), !dbg !15294
  %77 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !15295
  %78 = load i32, i32* @tunable_listen_port, align 4, !dbg !15296
  %79 = trunc i32 %78 to i16, !dbg !15297
  call void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr* %77, i16 zeroext %79), !dbg !15298
  %80 = load i8*, i8** @tunable_listen_address6, align 8, !dbg !15299
  %81 = icmp ne i8* %80, null, !dbg !15299
  br i1 %81, label %84, label %82, !dbg !15301

82:                                               ; preds = %76
  %83 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !15302
  call void @vsf_sysutil_sockaddr_set_any(%struct.vsf_sysutil_sockaddr* %83), !dbg !15304
  br label %95, !dbg !15305

84:                                               ; preds = %76
  call void @llvm.dbg.declare(metadata %struct.mystr* %8, metadata !15306, metadata !DIExpression()), !dbg !15313
  %85 = bitcast %struct.mystr* %8 to i8*, !dbg !15313
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false), !dbg !15313
  call void @llvm.dbg.declare(metadata i8** %9, metadata !15314, metadata !DIExpression()), !dbg !15315
  %86 = load i8*, i8** @tunable_listen_address6, align 8, !dbg !15316
  call void @str_alloc_text(%struct.mystr* %8, i8* %86), !dbg !15317
  %87 = call i8* @vsf_sysutil_parse_ipv6(%struct.mystr* %8), !dbg !15318
  store i8* %87, i8** %9, align 8, !dbg !15319
  call void @str_free(%struct.mystr* %8), !dbg !15320
  %88 = load i8*, i8** %9, align 8, !dbg !15321
  %89 = icmp ne i8* %88, null, !dbg !15321
  br i1 %89, label %92, label %90, !dbg !15323

90:                                               ; preds = %84
  %91 = load i8*, i8** @tunable_listen_address6, align 8, !dbg !15324
  call void @die2(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.839, i32 0, i32 0), i8* %91), !dbg !15326
  br label %92, !dbg !15327

92:                                               ; preds = %90, %84
  %93 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !15328
  %94 = load i8*, i8** %9, align 8, !dbg !15329
  call void @vsf_sysutil_sockaddr_set_ipv6addr(%struct.vsf_sysutil_sockaddr* %93, i8* %94), !dbg !15330
  br label %95

95:                                               ; preds = %92, %82
  %96 = load i32, i32* %3, align 4, !dbg !15331
  %97 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !15332
  %98 = call i32 @vsf_sysutil_bind(i32 %96, %struct.vsf_sysutil_sockaddr* %97), !dbg !15333
  store i32 %98, i32* %4, align 4, !dbg !15334
  %99 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !15335
  %100 = bitcast %struct.vsf_sysutil_sockaddr* %99 to i8*, !dbg !15335
  call void @vsf_sysutil_free(i8* %100), !dbg !15336
  %101 = load i32, i32* %4, align 4, !dbg !15337
  %102 = call i32 @vsf_sysutil_retval_is_error(i32 %101), !dbg !15339
  %103 = icmp ne i32 %102, 0, !dbg !15339
  br i1 %103, label %104, label %105, !dbg !15340

104:                                              ; preds = %95
  call void @die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.840, i32 0, i32 0)), !dbg !15341
  br label %105, !dbg !15343

105:                                              ; preds = %104, %95
  br label %106

106:                                              ; preds = %105, %75
  %107 = load i32, i32* %3, align 4, !dbg !15344
  %108 = call i32 @vsf_sysutil_listen(i32 %107, i32 32), !dbg !15345
  store i32 %108, i32* %4, align 4, !dbg !15346
  %109 = load i32, i32* %4, align 4, !dbg !15347
  %110 = call i32 @vsf_sysutil_retval_is_error(i32 %109), !dbg !15349
  %111 = icmp ne i32 %110, 0, !dbg !15349
  br i1 %111, label %112, label %113, !dbg !15350

112:                                              ; preds = %106
  call void @die(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.841, i32 0, i32 0)), !dbg !15351
  br label %113, !dbg !15353

113:                                              ; preds = %112, %106
  call void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr** %2), !dbg !15354
  br label %114, !dbg !15355

114:                                              ; preds = %113, %121, %171
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %10, metadata !15356, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.declare(metadata i8** %11, metadata !15359, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.declare(metadata i32* %12, metadata !15361, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.declare(metadata i32* %13, metadata !15363, metadata !DIExpression()), !dbg !15364
  %115 = load i32, i32* %3, align 4, !dbg !15365
  %116 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %2, align 8, !dbg !15366
  %117 = call i32 @vsf_sysutil_accept_timeout(i32 %115, %struct.vsf_sysutil_sockaddr* %116, i32 0), !dbg !15367
  store i32 %117, i32* %13, align 4, !dbg !15368
  %118 = load i32, i32* %13, align 4, !dbg !15369
  %119 = call i32 @vsf_sysutil_retval_is_error(i32 %118), !dbg !15371
  %120 = icmp ne i32 %119, 0, !dbg !15371
  br i1 %120, label %121, label %122, !dbg !15372

121:                                              ; preds = %114
  br label %114, !dbg !15373, !llvm.loop !15375

122:                                              ; preds = %114
  %123 = load i32, i32* @s_children, align 4, !dbg !15377
  %124 = add i32 %123, 1, !dbg !15377
  store i32 %124, i32* @s_children, align 4, !dbg !15377
  %125 = load i32, i32* @s_children, align 4, !dbg !15378
  %126 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %10, i32 0, i32 0, !dbg !15379
  store i32 %125, i32* %126, align 4, !dbg !15380
  %127 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %10, i32 0, i32 1, !dbg !15381
  store i32 0, i32* %127, align 4, !dbg !15382
  %128 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %2, align 8, !dbg !15383
  %129 = call i8* @vsf_sysutil_sockaddr_get_raw_addr(%struct.vsf_sysutil_sockaddr* %128), !dbg !15384
  store i8* %129, i8** %11, align 8, !dbg !15385
  %130 = load i8*, i8** %11, align 8, !dbg !15386
  %131 = call i32 @handle_ip_count(i8* %130), !dbg !15387
  %132 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %10, i32 0, i32 1, !dbg !15388
  store i32 %131, i32* %132, align 4, !dbg !15389
  %133 = load i32, i32* @tunable_isolate, align 4, !dbg !15390
  %134 = icmp ne i32 %133, 0, !dbg !15390
  br i1 %134, label %135, label %146, !dbg !15392

135:                                              ; preds = %122
  %136 = load i32, i32* @tunable_http_enable, align 4, !dbg !15393
  %137 = icmp ne i32 %136, 0, !dbg !15393
  br i1 %137, label %138, label %143, !dbg !15396

138:                                              ; preds = %135
  %139 = load i32, i32* @tunable_isolate_network, align 4, !dbg !15397
  %140 = icmp ne i32 %139, 0, !dbg !15397
  br i1 %140, label %141, label %143, !dbg !15398

141:                                              ; preds = %138
  %142 = call i32 (...) bitcast (i32 ()* @vsf_sysutil_fork_isolate_all_failok to i32 (...)*)(), !dbg !15399
  store i32 %142, i32* %12, align 4, !dbg !15401
  br label %145, !dbg !15402

143:                                              ; preds = %138, %135
  %144 = call i32 (...) bitcast (i32 ()* @vsf_sysutil_fork_isolate_failok to i32 (...)*)(), !dbg !15403
  store i32 %144, i32* %12, align 4, !dbg !15405
  br label %145

145:                                              ; preds = %143, %141
  br label %148, !dbg !15406

146:                                              ; preds = %122
  %147 = call i32 @vsf_sysutil_fork_failok(), !dbg !15407
  store i32 %147, i32* %12, align 4, !dbg !15409
  br label %148

148:                                              ; preds = %146, %145
  %149 = load i32, i32* %12, align 4, !dbg !15410
  %150 = icmp ne i32 %149, 0, !dbg !15412
  br i1 %150, label %151, label %164, !dbg !15413

151:                                              ; preds = %148
  %152 = load i32, i32* %13, align 4, !dbg !15414
  call void @vsf_sysutil_close(i32 %152), !dbg !15416
  %153 = load i32, i32* %12, align 4, !dbg !15417
  %154 = icmp sgt i32 %153, 0, !dbg !15419
  br i1 %154, label %155, label %159, !dbg !15420

155:                                              ; preds = %151
  %156 = load %struct.hash*, %struct.hash** @s_p_pid_ip_hash, align 8, !dbg !15421
  %157 = bitcast i32* %12 to i8*, !dbg !15423
  %158 = load i8*, i8** %11, align 8, !dbg !15424
  call void @hash_add_entry(%struct.hash* %156, i8* %157, i8* %158), !dbg !15425
  br label %163, !dbg !15426

159:                                              ; preds = %151
  %160 = load i32, i32* @s_children, align 4, !dbg !15427
  %161 = add i32 %160, -1, !dbg !15427
  store i32 %161, i32* @s_children, align 4, !dbg !15427
  %162 = load i8*, i8** %11, align 8, !dbg !15429
  call void @drop_ip_count(i8* %162), !dbg !15430
  br label %163

163:                                              ; preds = %159, %155
  br label %171, !dbg !15431

164:                                              ; preds = %148
  call void (...) bitcast (void ()* @vsf_set_die_if_parent_dies to void (...)*)(), !dbg !15432
  %165 = load i32, i32* %3, align 4, !dbg !15434
  call void @vsf_sysutil_close(i32 %165), !dbg !15435
  %166 = load i32, i32* %13, align 4, !dbg !15436
  call void @prepare_child(i32 %166), !dbg !15437
  %167 = bitcast %struct.vsf_client_launch* %1 to i8*, !dbg !15438
  %168 = bitcast %struct.vsf_client_launch* %10 to i8*, !dbg !15438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 8, i1 false), !dbg !15438
  %169 = bitcast %struct.vsf_client_launch* %1 to i64*, !dbg !15439
  %170 = load i64, i64* %169, align 4, !dbg !15439
  ret i64 %170, !dbg !15439

171:                                              ; preds = %163
  br label %114, !dbg !15355, !llvm.loop !15375
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @hash_ip(i32, i8*) #0 !dbg !15440 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15443, metadata !DIExpression()), !dbg !15444
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !15445, metadata !DIExpression()), !dbg !15446
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15447, metadata !DIExpression()), !dbg !15448
  %9 = load i8*, i8** %4, align 8, !dbg !15449
  store i8* %9, i8** %5, align 8, !dbg !15448
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15450, metadata !DIExpression()), !dbg !15451
  store i32 0, i32* %6, align 4, !dbg !15451
  call void @llvm.dbg.declare(metadata i32* %7, metadata !15452, metadata !DIExpression()), !dbg !15453
  store i32 24, i32* %7, align 4, !dbg !15453
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15454, metadata !DIExpression()), !dbg !15455
  store i32 0, i32* %8, align 4, !dbg !15456
  br label %10, !dbg !15458

10:                                               ; preds = %31, %2
  %11 = load i32, i32* %8, align 4, !dbg !15459
  %12 = load i32, i32* @s_ipaddr_size, align 4, !dbg !15461
  %13 = icmp ult i32 %11, %12, !dbg !15462
  br i1 %13, label %14, label %34, !dbg !15463

14:                                               ; preds = %10
  %15 = load i32, i32* %6, align 4, !dbg !15464
  %16 = load i8*, i8** %5, align 8, !dbg !15466
  %17 = load i32, i32* %8, align 4, !dbg !15467
  %18 = zext i32 %17 to i64, !dbg !15466
  %19 = getelementptr inbounds i8, i8* %16, i64 %18, !dbg !15466
  %20 = load i8, i8* %19, align 1, !dbg !15466
  %21 = zext i8 %20 to i32, !dbg !15466
  %22 = load i32, i32* %7, align 4, !dbg !15468
  %23 = shl i32 %21, %22, !dbg !15469
  %24 = xor i32 %15, %23, !dbg !15470
  store i32 %24, i32* %6, align 4, !dbg !15471
  %25 = load i32, i32* %7, align 4, !dbg !15472
  %26 = sub nsw i32 %25, 8, !dbg !15472
  store i32 %26, i32* %7, align 4, !dbg !15472
  %27 = load i32, i32* %7, align 4, !dbg !15473
  %28 = icmp slt i32 %27, 0, !dbg !15475
  br i1 %28, label %29, label %30, !dbg !15476

29:                                               ; preds = %14
  store i32 24, i32* %7, align 4, !dbg !15477
  br label %30, !dbg !15479

30:                                               ; preds = %29, %14
  br label %31, !dbg !15480

31:                                               ; preds = %30
  %32 = load i32, i32* %8, align 4, !dbg !15481
  %33 = add i32 %32, 1, !dbg !15481
  store i32 %33, i32* %8, align 4, !dbg !15481
  br label %10, !dbg !15482, !llvm.loop !15483

34:                                               ; preds = %10
  %35 = load i32, i32* %6, align 4, !dbg !15485
  %36 = load i32, i32* %3, align 4, !dbg !15486
  %37 = urem i32 %35, %36, !dbg !15487
  ret i32 %37, !dbg !15488
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @hash_pid(i32, i8*) #0 !dbg !15489 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15490, metadata !DIExpression()), !dbg !15491
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !15492, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.declare(metadata i32** %5, metadata !15494, metadata !DIExpression()), !dbg !15495
  %6 = load i8*, i8** %4, align 8, !dbg !15496
  %7 = bitcast i8* %6 to i32*, !dbg !15497
  store i32* %7, i32** %5, align 8, !dbg !15495
  %8 = load i32*, i32** %5, align 8, !dbg !15498
  %9 = load i32, i32* %8, align 4, !dbg !15499
  %10 = load i32, i32* %3, align 4, !dbg !15500
  %11 = urem i32 %9, %10, !dbg !15501
  ret i32 %11, !dbg !15502
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_sigchld.836(i8*) #0 !dbg !1071 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_sysutil_ipaddr*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15503, metadata !DIExpression()), !dbg !15504
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15505, metadata !DIExpression()), !dbg !15506
  store i32 1, i32* %3, align 4, !dbg !15506
  %5 = load i8*, i8** %2, align 8, !dbg !15507
  br label %6, !dbg !15508

6:                                                ; preds = %24, %1
  %7 = load i32, i32* %3, align 4, !dbg !15509
  %8 = icmp ne i32 %7, 0, !dbg !15508
  br i1 %8, label %9, label %25, !dbg !15508

9:                                                ; preds = %6
  %10 = call i32 @vsf_sysutil_wait_reap_one(), !dbg !15510
  store i32 %10, i32* %3, align 4, !dbg !15512
  %11 = load i32, i32* %3, align 4, !dbg !15513
  %12 = icmp ne i32 %11, 0, !dbg !15513
  br i1 %12, label %13, label %24, !dbg !15515

13:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_ipaddr** %4, metadata !15516, metadata !DIExpression()), !dbg !15518
  %14 = load i32, i32* @s_children, align 4, !dbg !15519
  %15 = add i32 %14, -1, !dbg !15519
  store i32 %15, i32* @s_children, align 4, !dbg !15519
  %16 = load %struct.hash*, %struct.hash** @s_p_pid_ip_hash, align 8, !dbg !15520
  %17 = bitcast i32* %3 to i8*, !dbg !15521
  %18 = call i8* @hash_lookup_entry(%struct.hash* %16, i8* %17), !dbg !15522
  %19 = bitcast i8* %18 to %struct.vsf_sysutil_ipaddr*, !dbg !15523
  store %struct.vsf_sysutil_ipaddr* %19, %struct.vsf_sysutil_ipaddr** %4, align 8, !dbg !15524
  %20 = load %struct.vsf_sysutil_ipaddr*, %struct.vsf_sysutil_ipaddr** %4, align 8, !dbg !15525
  %21 = bitcast %struct.vsf_sysutil_ipaddr* %20 to i8*, !dbg !15525
  call void @drop_ip_count(i8* %21), !dbg !15526
  %22 = load %struct.hash*, %struct.hash** @s_p_pid_ip_hash, align 8, !dbg !15527
  %23 = bitcast i32* %3 to i8*, !dbg !15528
  call void @hash_free_entry(%struct.hash* %22, i8* %23), !dbg !15529
  br label %24, !dbg !15530

24:                                               ; preds = %13, %9
  br label %6, !dbg !15508, !llvm.loop !15531

25:                                               ; preds = %6
  ret void, !dbg !15533
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_sighup(i8*) #0 !dbg !15534 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15535, metadata !DIExpression()), !dbg !15536
  %3 = load i8*, i8** %2, align 8, !dbg !15537
  call void (...) bitcast (void ()* @tunables_load_defaults to void (...)*)(), !dbg !15538
  call void @vsf_parseconf_load_file(i8* null, i32 0), !dbg !15539
  ret void, !dbg !15540
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @handle_ip_count(i8*) #0 !dbg !15541 {
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15544, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.declare(metadata i32** %3, metadata !15546, metadata !DIExpression()), !dbg !15547
  %5 = load %struct.hash*, %struct.hash** @s_p_ip_count_hash, align 8, !dbg !15548
  %6 = load i8*, i8** %2, align 8, !dbg !15549
  %7 = call i8* @hash_lookup_entry(%struct.hash* %5, i8* %6), !dbg !15550
  %8 = bitcast i8* %7 to i32*, !dbg !15551
  store i32* %8, i32** %3, align 8, !dbg !15547
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15552, metadata !DIExpression()), !dbg !15553
  %9 = load i32*, i32** %3, align 8, !dbg !15554
  %10 = icmp ne i32* %9, null, !dbg !15554
  br i1 %10, label %15, label %11, !dbg !15556

11:                                               ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !15557
  %12 = load %struct.hash*, %struct.hash** @s_p_ip_count_hash, align 8, !dbg !15559
  %13 = load i8*, i8** %2, align 8, !dbg !15560
  %14 = bitcast i32* %4 to i8*, !dbg !15561
  call void @hash_add_entry(%struct.hash* %12, i8* %13, i8* %14), !dbg !15562
  br label %22, !dbg !15563

15:                                               ; preds = %1
  %16 = load i32*, i32** %3, align 8, !dbg !15564
  %17 = load i32, i32* %16, align 4, !dbg !15566
  store i32 %17, i32* %4, align 4, !dbg !15567
  %18 = load i32, i32* %4, align 4, !dbg !15568
  %19 = add i32 %18, 1, !dbg !15568
  store i32 %19, i32* %4, align 4, !dbg !15568
  %20 = load i32, i32* %4, align 4, !dbg !15569
  %21 = load i32*, i32** %3, align 8, !dbg !15570
  store i32 %20, i32* %21, align 4, !dbg !15571
  br label %22

22:                                               ; preds = %15, %11
  %23 = load i32, i32* %4, align 4, !dbg !15572
  ret i32 %23, !dbg !15573
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @drop_ip_count(i8*) #0 !dbg !15574 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15575, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15577, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.declare(metadata i32** %4, metadata !15579, metadata !DIExpression()), !dbg !15580
  %5 = load %struct.hash*, %struct.hash** @s_p_ip_count_hash, align 8, !dbg !15581
  %6 = load i8*, i8** %2, align 8, !dbg !15582
  %7 = call i8* @hash_lookup_entry(%struct.hash* %5, i8* %6), !dbg !15583
  %8 = bitcast i8* %7 to i32*, !dbg !15584
  store i32* %8, i32** %4, align 8, !dbg !15580
  %9 = load i32*, i32** %4, align 8, !dbg !15585
  %10 = icmp ne i32* %9, null, !dbg !15585
  br i1 %10, label %12, label %11, !dbg !15587

11:                                               ; preds = %1
  call void @bug(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.842, i32 0, i32 0)), !dbg !15588
  br label %12, !dbg !15590

12:                                               ; preds = %11, %1
  %13 = load i32*, i32** %4, align 8, !dbg !15591
  %14 = load i32, i32* %13, align 4, !dbg !15592
  store i32 %14, i32* %3, align 4, !dbg !15593
  %15 = load i32, i32* %3, align 4, !dbg !15594
  %16 = icmp ne i32 %15, 0, !dbg !15594
  br i1 %16, label %18, label %17, !dbg !15596

17:                                               ; preds = %12
  call void @bug(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.843, i32 0, i32 0)), !dbg !15597
  br label %18, !dbg !15599

18:                                               ; preds = %17, %12
  %19 = load i32, i32* %3, align 4, !dbg !15600
  %20 = add i32 %19, -1, !dbg !15600
  store i32 %20, i32* %3, align 4, !dbg !15600
  %21 = load i32, i32* %3, align 4, !dbg !15601
  %22 = load i32*, i32** %4, align 8, !dbg !15602
  store i32 %21, i32* %22, align 4, !dbg !15603
  %23 = load i32, i32* %3, align 4, !dbg !15604
  %24 = icmp ne i32 %23, 0, !dbg !15604
  br i1 %24, label %28, label %25, !dbg !15606

25:                                               ; preds = %18
  %26 = load %struct.hash*, %struct.hash** @s_p_ip_count_hash, align 8, !dbg !15607
  %27 = load i8*, i8** %2, align 8, !dbg !15609
  call void @hash_free_entry(%struct.hash* %26, i8* %27), !dbg !15610
  br label %28, !dbg !15611

28:                                               ; preds = %25, %18
  ret void, !dbg !15612
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @prepare_child(i32) #0 !dbg !15613 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15614, metadata !DIExpression()), !dbg !15615
  %3 = load i32, i32* %2, align 4, !dbg !15616
  call void @vsf_sysutil_dupfd2(i32 %3, i32 0), !dbg !15617
  %4 = load i32, i32* %2, align 4, !dbg !15618
  call void @vsf_sysutil_dupfd2(i32 %4, i32 1), !dbg !15619
  %5 = load i32, i32* %2, align 4, !dbg !15620
  call void @vsf_sysutil_dupfd2(i32 %5, i32 2), !dbg !15621
  %6 = load i32, i32* %2, align 4, !dbg !15622
  %7 = icmp sgt i32 %6, 2, !dbg !15624
  br i1 %7, label %8, label %10, !dbg !15625

8:                                                ; preds = %1
  %9 = load i32, i32* %2, align 4, !dbg !15626
  call void @vsf_sysutil_close(i32 %9), !dbg !15628
  br label %10, !dbg !15629

10:                                               ; preds = %8, %1
  ret void, !dbg !15630
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.hash* @hash_alloc(i32, i32, i32, i32 (i32, i8*)*) #0 !dbg !15631 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32 (i32, i8*)*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.hash*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15652, metadata !DIExpression()), !dbg !15653
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15654, metadata !DIExpression()), !dbg !15655
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !15656, metadata !DIExpression()), !dbg !15657
  store i32 (i32, i8*)* %3, i32 (i32, i8*)** %8, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %8, metadata !15658, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.declare(metadata i32* %9, metadata !15660, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.declare(metadata %struct.hash** %10, metadata !15662, metadata !DIExpression()), !dbg !15663
  %11 = call i8* @vsf_sysutil_malloc(i32 32), !dbg !15664
  %12 = bitcast i8* %11 to %struct.hash*, !dbg !15664
  store %struct.hash* %12, %struct.hash** %10, align 8, !dbg !15663
  %13 = load i32, i32* %5, align 4, !dbg !15665
  %14 = load %struct.hash*, %struct.hash** %10, align 8, !dbg !15666
  %15 = getelementptr inbounds %struct.hash, %struct.hash* %14, i32 0, i32 0, !dbg !15667
  store i32 %13, i32* %15, align 8, !dbg !15668
  %16 = load i32, i32* %6, align 4, !dbg !15669
  %17 = load %struct.hash*, %struct.hash** %10, align 8, !dbg !15670
  %18 = getelementptr inbounds %struct.hash, %struct.hash* %17, i32 0, i32 1, !dbg !15671
  store i32 %16, i32* %18, align 4, !dbg !15672
  %19 = load i32, i32* %7, align 4, !dbg !15673
  %20 = load %struct.hash*, %struct.hash** %10, align 8, !dbg !15674
  %21 = getelementptr inbounds %struct.hash, %struct.hash* %20, i32 0, i32 2, !dbg !15675
  store i32 %19, i32* %21, align 8, !dbg !15676
  %22 = load i32 (i32, i8*)*, i32 (i32, i8*)** %8, align 8, !dbg !15677
  %23 = load %struct.hash*, %struct.hash** %10, align 8, !dbg !15678
  %24 = getelementptr inbounds %struct.hash, %struct.hash* %23, i32 0, i32 3, !dbg !15679
  store i32 (i32, i8*)* %22, i32 (i32, i8*)** %24, align 8, !dbg !15680
  %25 = load i32, i32* %5, align 4, !dbg !15681
  %26 = mul i32 8, %25, !dbg !15682
  store i32 %26, i32* %9, align 4, !dbg !15683
  %27 = load i32, i32* %9, align 4, !dbg !15684
  %28 = call i8* @vsf_sysutil_malloc(i32 %27), !dbg !15685
  %29 = bitcast i8* %28 to %struct.hash_node**, !dbg !15685
  %30 = load %struct.hash*, %struct.hash** %10, align 8, !dbg !15686
  %31 = getelementptr inbounds %struct.hash, %struct.hash* %30, i32 0, i32 4, !dbg !15687
  store %struct.hash_node** %29, %struct.hash_node*** %31, align 8, !dbg !15688
  %32 = load %struct.hash*, %struct.hash** %10, align 8, !dbg !15689
  %33 = getelementptr inbounds %struct.hash, %struct.hash* %32, i32 0, i32 4, !dbg !15690
  %34 = load %struct.hash_node**, %struct.hash_node*** %33, align 8, !dbg !15690
  %35 = bitcast %struct.hash_node** %34 to i8*, !dbg !15689
  %36 = load i32, i32* %9, align 4, !dbg !15691
  call void @vsf_sysutil_memclr(i8* %35, i32 %36), !dbg !15692
  %37 = load %struct.hash*, %struct.hash** %10, align 8, !dbg !15693
  ret %struct.hash* %37, !dbg !15694
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @hash_lookup_entry(%struct.hash*, i8*) #0 !dbg !15695 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_node*, align 8
  store %struct.hash* %0, %struct.hash** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash** %4, metadata !15698, metadata !DIExpression()), !dbg !15699
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15700, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.declare(metadata %struct.hash_node** %6, metadata !15702, metadata !DIExpression()), !dbg !15703
  %7 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15704
  %8 = load i8*, i8** %5, align 8, !dbg !15705
  %9 = call %struct.hash_node* @hash_get_node_by_key(%struct.hash* %7, i8* %8), !dbg !15706
  store %struct.hash_node* %9, %struct.hash_node** %6, align 8, !dbg !15703
  %10 = load %struct.hash_node*, %struct.hash_node** %6, align 8, !dbg !15707
  %11 = icmp ne %struct.hash_node* %10, null, !dbg !15707
  br i1 %11, label %15, label %12, !dbg !15709

12:                                               ; preds = %2
  %13 = load %struct.hash_node*, %struct.hash_node** %6, align 8, !dbg !15710
  %14 = bitcast %struct.hash_node* %13 to i8*, !dbg !15710
  store i8* %14, i8** %3, align 8, !dbg !15712
  br label %19, !dbg !15712

15:                                               ; preds = %2
  %16 = load %struct.hash_node*, %struct.hash_node** %6, align 8, !dbg !15713
  %17 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %16, i32 0, i32 1, !dbg !15714
  %18 = load i8*, i8** %17, align 8, !dbg !15714
  store i8* %18, i8** %3, align 8, !dbg !15715
  br label %19, !dbg !15715

19:                                               ; preds = %15, %12
  %20 = load i8*, i8** %3, align 8, !dbg !15716
  ret i8* %20, !dbg !15716
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.hash_node* @hash_get_node_by_key(%struct.hash*, i8*) #0 !dbg !15717 {
  %3 = alloca %struct.hash_node*, align 8
  %4 = alloca %struct.hash*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_node**, align 8
  %7 = alloca %struct.hash_node*, align 8
  store %struct.hash* %0, %struct.hash** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash** %4, metadata !15720, metadata !DIExpression()), !dbg !15721
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15722, metadata !DIExpression()), !dbg !15723
  call void @llvm.dbg.declare(metadata %struct.hash_node*** %6, metadata !15724, metadata !DIExpression()), !dbg !15725
  %8 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15726
  %9 = load i8*, i8** %5, align 8, !dbg !15727
  %10 = call %struct.hash_node** @hash_get_bucket(%struct.hash* %8, i8* %9), !dbg !15728
  store %struct.hash_node** %10, %struct.hash_node*** %6, align 8, !dbg !15725
  call void @llvm.dbg.declare(metadata %struct.hash_node** %7, metadata !15729, metadata !DIExpression()), !dbg !15730
  %11 = load %struct.hash_node**, %struct.hash_node*** %6, align 8, !dbg !15731
  %12 = load %struct.hash_node*, %struct.hash_node** %11, align 8, !dbg !15732
  store %struct.hash_node* %12, %struct.hash_node** %7, align 8, !dbg !15730
  %13 = load %struct.hash_node*, %struct.hash_node** %7, align 8, !dbg !15733
  %14 = icmp ne %struct.hash_node* %13, null, !dbg !15733
  br i1 %14, label %17, label %15, !dbg !15735

15:                                               ; preds = %2
  %16 = load %struct.hash_node*, %struct.hash_node** %7, align 8, !dbg !15736
  store %struct.hash_node* %16, %struct.hash_node** %3, align 8, !dbg !15738
  br label %39, !dbg !15738

17:                                               ; preds = %2
  br label %18, !dbg !15739

18:                                               ; preds = %33, %17
  %19 = load %struct.hash_node*, %struct.hash_node** %7, align 8, !dbg !15740
  %20 = icmp ne %struct.hash_node* %19, null, !dbg !15741
  br i1 %20, label %21, label %31, !dbg !15742

21:                                               ; preds = %18
  %22 = load i8*, i8** %5, align 8, !dbg !15743
  %23 = load %struct.hash_node*, %struct.hash_node** %7, align 8, !dbg !15744
  %24 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %23, i32 0, i32 0, !dbg !15745
  %25 = load i8*, i8** %24, align 8, !dbg !15745
  %26 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15746
  %27 = getelementptr inbounds %struct.hash, %struct.hash* %26, i32 0, i32 1, !dbg !15747
  %28 = load i32, i32* %27, align 4, !dbg !15747
  %29 = call i32 @vsf_sysutil_memcmp(i8* %22, i8* %25, i32 %28), !dbg !15748
  %30 = icmp ne i32 %29, 0, !dbg !15749
  br label %31

31:                                               ; preds = %21, %18
  %32 = phi i1 [ false, %18 ], [ %30, %21 ]
  br i1 %32, label %33, label %37, !dbg !15739

33:                                               ; preds = %31
  %34 = load %struct.hash_node*, %struct.hash_node** %7, align 8, !dbg !15750
  %35 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %34, i32 0, i32 3, !dbg !15752
  %36 = load %struct.hash_node*, %struct.hash_node** %35, align 8, !dbg !15752
  store %struct.hash_node* %36, %struct.hash_node** %7, align 8, !dbg !15753
  br label %18, !dbg !15739, !llvm.loop !15754

37:                                               ; preds = %31
  %38 = load %struct.hash_node*, %struct.hash_node** %7, align 8, !dbg !15756
  store %struct.hash_node* %38, %struct.hash_node** %3, align 8, !dbg !15757
  br label %39, !dbg !15757

39:                                               ; preds = %37, %15
  %40 = load %struct.hash_node*, %struct.hash_node** %3, align 8, !dbg !15758
  ret %struct.hash_node* %40, !dbg !15758
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.hash_node** @hash_get_bucket(%struct.hash*, i8*) #0 !dbg !15759 {
  %3 = alloca %struct.hash*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.hash* %0, %struct.hash** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash** %3, metadata !15762, metadata !DIExpression()), !dbg !15763
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !15764, metadata !DIExpression()), !dbg !15765
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15766, metadata !DIExpression()), !dbg !15767
  %6 = load %struct.hash*, %struct.hash** %3, align 8, !dbg !15768
  %7 = getelementptr inbounds %struct.hash, %struct.hash* %6, i32 0, i32 3, !dbg !15769
  %8 = load i32 (i32, i8*)*, i32 (i32, i8*)** %7, align 8, !dbg !15769
  %9 = load %struct.hash*, %struct.hash** %3, align 8, !dbg !15770
  %10 = getelementptr inbounds %struct.hash, %struct.hash* %9, i32 0, i32 0, !dbg !15771
  %11 = load i32, i32* %10, align 8, !dbg !15771
  %12 = load i8*, i8** %4, align 8, !dbg !15772
  %13 = call i32 %8(i32 %11, i8* %12), !dbg !15773
  store i32 %13, i32* %5, align 4, !dbg !15767
  %14 = load i32, i32* %5, align 4, !dbg !15774
  %15 = load %struct.hash*, %struct.hash** %3, align 8, !dbg !15776
  %16 = getelementptr inbounds %struct.hash, %struct.hash* %15, i32 0, i32 0, !dbg !15777
  %17 = load i32, i32* %16, align 8, !dbg !15777
  %18 = icmp uge i32 %14, %17, !dbg !15778
  br i1 %18, label %19, label %20, !dbg !15779

19:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.848, i32 0, i32 0)), !dbg !15780
  br label %20, !dbg !15782

20:                                               ; preds = %19, %2
  %21 = load %struct.hash*, %struct.hash** %3, align 8, !dbg !15783
  %22 = getelementptr inbounds %struct.hash, %struct.hash* %21, i32 0, i32 4, !dbg !15784
  %23 = load %struct.hash_node**, %struct.hash_node*** %22, align 8, !dbg !15784
  %24 = load i32, i32* %5, align 4, !dbg !15785
  %25 = zext i32 %24 to i64, !dbg !15783
  %26 = getelementptr inbounds %struct.hash_node*, %struct.hash_node** %23, i64 %25, !dbg !15783
  ret %struct.hash_node** %26, !dbg !15786
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @hash_add_entry(%struct.hash*, i8*, i8*) #0 !dbg !15787 {
  %4 = alloca %struct.hash*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_node**, align 8
  %8 = alloca %struct.hash_node*, align 8
  store %struct.hash* %0, %struct.hash** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.hash** %4, metadata !15790, metadata !DIExpression()), !dbg !15791
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15792, metadata !DIExpression()), !dbg !15793
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !15794, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.declare(metadata %struct.hash_node*** %7, metadata !15796, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.declare(metadata %struct.hash_node** %8, metadata !15798, metadata !DIExpression()), !dbg !15799
  %9 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15800
  %10 = load i8*, i8** %5, align 8, !dbg !15802
  %11 = call i8* @hash_lookup_entry(%struct.hash* %9, i8* %10), !dbg !15803
  %12 = icmp ne i8* %11, null, !dbg !15803
  br i1 %12, label %13, label %14, !dbg !15804

13:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.851, i32 0, i32 0)), !dbg !15805
  br label %14, !dbg !15807

14:                                               ; preds = %13, %3
  %15 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15808
  %16 = load i8*, i8** %5, align 8, !dbg !15809
  %17 = call %struct.hash_node** @hash_get_bucket(%struct.hash* %15, i8* %16), !dbg !15810
  store %struct.hash_node** %17, %struct.hash_node*** %7, align 8, !dbg !15811
  %18 = call i8* @vsf_sysutil_malloc(i32 32), !dbg !15812
  %19 = bitcast i8* %18 to %struct.hash_node*, !dbg !15812
  store %struct.hash_node* %19, %struct.hash_node** %8, align 8, !dbg !15813
  %20 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15814
  %21 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %20, i32 0, i32 2, !dbg !15815
  store %struct.hash_node* null, %struct.hash_node** %21, align 8, !dbg !15816
  %22 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15817
  %23 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %22, i32 0, i32 3, !dbg !15818
  store %struct.hash_node* null, %struct.hash_node** %23, align 8, !dbg !15819
  %24 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15820
  %25 = getelementptr inbounds %struct.hash, %struct.hash* %24, i32 0, i32 1, !dbg !15821
  %26 = load i32, i32* %25, align 4, !dbg !15821
  %27 = call i8* @vsf_sysutil_malloc(i32 %26), !dbg !15822
  %28 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15823
  %29 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %28, i32 0, i32 0, !dbg !15824
  store i8* %27, i8** %29, align 8, !dbg !15825
  %30 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15826
  %31 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %30, i32 0, i32 0, !dbg !15827
  %32 = load i8*, i8** %31, align 8, !dbg !15827
  %33 = load i8*, i8** %5, align 8, !dbg !15828
  %34 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15829
  %35 = getelementptr inbounds %struct.hash, %struct.hash* %34, i32 0, i32 1, !dbg !15830
  %36 = load i32, i32* %35, align 4, !dbg !15830
  call void @vsf_sysutil_memcpy(i8* %32, i8* %33, i32 %36), !dbg !15831
  %37 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15832
  %38 = getelementptr inbounds %struct.hash, %struct.hash* %37, i32 0, i32 2, !dbg !15833
  %39 = load i32, i32* %38, align 8, !dbg !15833
  %40 = call i8* @vsf_sysutil_malloc(i32 %39), !dbg !15834
  %41 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15835
  %42 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %41, i32 0, i32 1, !dbg !15836
  store i8* %40, i8** %42, align 8, !dbg !15837
  %43 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15838
  %44 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %43, i32 0, i32 1, !dbg !15839
  %45 = load i8*, i8** %44, align 8, !dbg !15839
  %46 = load i8*, i8** %6, align 8, !dbg !15840
  %47 = load %struct.hash*, %struct.hash** %4, align 8, !dbg !15841
  %48 = getelementptr inbounds %struct.hash, %struct.hash* %47, i32 0, i32 2, !dbg !15842
  %49 = load i32, i32* %48, align 8, !dbg !15842
  call void @vsf_sysutil_memcpy(i8* %45, i8* %46, i32 %49), !dbg !15843
  %50 = load %struct.hash_node**, %struct.hash_node*** %7, align 8, !dbg !15844
  %51 = load %struct.hash_node*, %struct.hash_node** %50, align 8, !dbg !15846
  %52 = icmp ne %struct.hash_node* %51, null, !dbg !15846
  br i1 %52, label %56, label %53, !dbg !15847

53:                                               ; preds = %14
  %54 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15848
  %55 = load %struct.hash_node**, %struct.hash_node*** %7, align 8, !dbg !15850
  store %struct.hash_node* %54, %struct.hash_node** %55, align 8, !dbg !15851
  br label %67, !dbg !15852

56:                                               ; preds = %14
  %57 = load %struct.hash_node**, %struct.hash_node*** %7, align 8, !dbg !15853
  %58 = load %struct.hash_node*, %struct.hash_node** %57, align 8, !dbg !15855
  %59 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15856
  %60 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %59, i32 0, i32 3, !dbg !15857
  store %struct.hash_node* %58, %struct.hash_node** %60, align 8, !dbg !15858
  %61 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15859
  %62 = load %struct.hash_node**, %struct.hash_node*** %7, align 8, !dbg !15860
  %63 = load %struct.hash_node*, %struct.hash_node** %62, align 8, !dbg !15861
  %64 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %63, i32 0, i32 2, !dbg !15862
  store %struct.hash_node* %61, %struct.hash_node** %64, align 8, !dbg !15863
  %65 = load %struct.hash_node*, %struct.hash_node** %8, align 8, !dbg !15864
  %66 = load %struct.hash_node**, %struct.hash_node*** %7, align 8, !dbg !15865
  store %struct.hash_node* %65, %struct.hash_node** %66, align 8, !dbg !15866
  br label %67

67:                                               ; preds = %56, %53
  ret void, !dbg !15867
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @hash_free_entry(%struct.hash*, i8*) #0 !dbg !15868 {
  %3 = alloca %struct.hash*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.hash_node*, align 8
  %6 = alloca %struct.hash_node**, align 8
  store %struct.hash* %0, %struct.hash** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.hash** %3, metadata !15871, metadata !DIExpression()), !dbg !15872
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !15873, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.declare(metadata %struct.hash_node** %5, metadata !15875, metadata !DIExpression()), !dbg !15876
  %7 = load %struct.hash*, %struct.hash** %3, align 8, !dbg !15877
  %8 = load i8*, i8** %4, align 8, !dbg !15878
  %9 = call %struct.hash_node* @hash_get_node_by_key(%struct.hash* %7, i8* %8), !dbg !15879
  store %struct.hash_node* %9, %struct.hash_node** %5, align 8, !dbg !15876
  %10 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15880
  %11 = icmp ne %struct.hash_node* %10, null, !dbg !15880
  br i1 %11, label %13, label %12, !dbg !15882

12:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.854, i32 0, i32 0)), !dbg !15883
  br label %13, !dbg !15885

13:                                               ; preds = %12, %2
  %14 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15886
  %15 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %14, i32 0, i32 0, !dbg !15887
  %16 = load i8*, i8** %15, align 8, !dbg !15887
  call void @vsf_sysutil_free(i8* %16), !dbg !15888
  %17 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15889
  %18 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %17, i32 0, i32 1, !dbg !15890
  %19 = load i8*, i8** %18, align 8, !dbg !15890
  call void @vsf_sysutil_free(i8* %19), !dbg !15891
  %20 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15892
  %21 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %20, i32 0, i32 2, !dbg !15894
  %22 = load %struct.hash_node*, %struct.hash_node** %21, align 8, !dbg !15894
  %23 = icmp ne %struct.hash_node* %22, null, !dbg !15892
  br i1 %23, label %24, label %32, !dbg !15895

24:                                               ; preds = %13
  %25 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15896
  %26 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %25, i32 0, i32 3, !dbg !15898
  %27 = load %struct.hash_node*, %struct.hash_node** %26, align 8, !dbg !15898
  %28 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15899
  %29 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %28, i32 0, i32 2, !dbg !15900
  %30 = load %struct.hash_node*, %struct.hash_node** %29, align 8, !dbg !15900
  %31 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %30, i32 0, i32 3, !dbg !15901
  store %struct.hash_node* %27, %struct.hash_node** %31, align 8, !dbg !15902
  br label %40, !dbg !15903

32:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata %struct.hash_node*** %6, metadata !15904, metadata !DIExpression()), !dbg !15906
  %33 = load %struct.hash*, %struct.hash** %3, align 8, !dbg !15907
  %34 = load i8*, i8** %4, align 8, !dbg !15908
  %35 = call %struct.hash_node** @hash_get_bucket(%struct.hash* %33, i8* %34), !dbg !15909
  store %struct.hash_node** %35, %struct.hash_node*** %6, align 8, !dbg !15906
  %36 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15910
  %37 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %36, i32 0, i32 3, !dbg !15911
  %38 = load %struct.hash_node*, %struct.hash_node** %37, align 8, !dbg !15911
  %39 = load %struct.hash_node**, %struct.hash_node*** %6, align 8, !dbg !15912
  store %struct.hash_node* %38, %struct.hash_node** %39, align 8, !dbg !15913
  br label %40

40:                                               ; preds = %32, %24
  %41 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15914
  %42 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %41, i32 0, i32 3, !dbg !15916
  %43 = load %struct.hash_node*, %struct.hash_node** %42, align 8, !dbg !15916
  %44 = icmp ne %struct.hash_node* %43, null, !dbg !15914
  br i1 %44, label %45, label %53, !dbg !15917

45:                                               ; preds = %40
  %46 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15918
  %47 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %46, i32 0, i32 2, !dbg !15920
  %48 = load %struct.hash_node*, %struct.hash_node** %47, align 8, !dbg !15920
  %49 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15921
  %50 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %49, i32 0, i32 3, !dbg !15922
  %51 = load %struct.hash_node*, %struct.hash_node** %50, align 8, !dbg !15922
  %52 = getelementptr inbounds %struct.hash_node, %struct.hash_node* %51, i32 0, i32 2, !dbg !15923
  store %struct.hash_node* %48, %struct.hash_node** %52, align 8, !dbg !15924
  br label %53, !dbg !15925

53:                                               ; preds = %45, %40
  %54 = load %struct.hash_node*, %struct.hash_node** %5, align 8, !dbg !15926
  %55 = bitcast %struct.hash_node* %54 to i8*, !dbg !15926
  call void @vsf_sysutil_free(i8* %55), !dbg !15927
  ret void, !dbg !15928
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_tcp_wrapper_ok(i32) #0 !dbg !15929 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15930, metadata !DIExpression()), !dbg !15931
  %3 = load i32, i32* %2, align 4, !dbg !15932
  call void @die(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.857, i32 0, i32 0)), !dbg !15933
  ret i32 0, !dbg !15934
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_parse_ipv6(%struct.mystr*) #0 !dbg !1089 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !15935, metadata !DIExpression()), !dbg !15936
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15937, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15939, metadata !DIExpression()), !dbg !15940
  call void @str_empty(%struct.mystr* @vsf_sysutil_parse_ipv6.s_ret), !dbg !15941
  call void @str_empty(%struct.mystr* @vsf_sysutil_parse_ipv6.s_rhs_ret), !dbg !15942
  %7 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !15943
  call void @str_copy(%struct.mystr* @vsf_sysutil_parse_ipv6.s_lhs_str, %struct.mystr* %7), !dbg !15944
  call void @str_split_text(%struct.mystr* @vsf_sysutil_parse_ipv6.s_lhs_str, %struct.mystr* @vsf_sysutil_parse_ipv6.s_rhs_str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.860, i32 0, i32 0)), !dbg !15945
  %8 = call i32 @ipv6_parse_main(%struct.mystr* @vsf_sysutil_parse_ipv6.s_ret, %struct.mystr* @vsf_sysutil_parse_ipv6.s_lhs_str), !dbg !15946
  %9 = icmp ne i32 %8, 0, !dbg !15946
  br i1 %9, label %11, label %10, !dbg !15948

10:                                               ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !15949
  br label %39, !dbg !15949

11:                                               ; preds = %1
  %12 = call i32 @ipv6_parse_main(%struct.mystr* @vsf_sysutil_parse_ipv6.s_rhs_ret, %struct.mystr* @vsf_sysutil_parse_ipv6.s_rhs_str), !dbg !15951
  %13 = icmp ne i32 %12, 0, !dbg !15951
  br i1 %13, label %15, label %14, !dbg !15953

14:                                               ; preds = %11
  store i8* null, i8** %2, align 8, !dbg !15954
  br label %39, !dbg !15954

15:                                               ; preds = %11
  %16 = call i32 @str_getlen(%struct.mystr* @vsf_sysutil_parse_ipv6.s_ret), !dbg !15956
  store i32 %16, i32* %4, align 4, !dbg !15957
  %17 = call i32 @str_getlen(%struct.mystr* @vsf_sysutil_parse_ipv6.s_rhs_ret), !dbg !15958
  store i32 %17, i32* %5, align 4, !dbg !15959
  %18 = load i32, i32* %4, align 4, !dbg !15960
  %19 = load i32, i32* %5, align 4, !dbg !15962
  %20 = add i32 %18, %19, !dbg !15963
  %21 = icmp ugt i32 %20, 16, !dbg !15964
  br i1 %21, label %22, label %23, !dbg !15965

22:                                               ; preds = %15
  store i8* null, i8** %2, align 8, !dbg !15966
  br label %39, !dbg !15966

23:                                               ; preds = %15
  %24 = load i32, i32* %5, align 4, !dbg !15968
  %25 = icmp ugt i32 %24, 0, !dbg !15970
  br i1 %25, label %26, label %37, !dbg !15971

26:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15972, metadata !DIExpression()), !dbg !15974
  %27 = load i32, i32* %4, align 4, !dbg !15975
  %28 = load i32, i32* %5, align 4, !dbg !15976
  %29 = add i32 %27, %28, !dbg !15977
  %30 = sub i32 16, %29, !dbg !15978
  store i32 %30, i32* %6, align 4, !dbg !15974
  br label %31, !dbg !15979

31:                                               ; preds = %35, %26
  %32 = load i32, i32* %6, align 4, !dbg !15980
  %33 = add i32 %32, -1, !dbg !15980
  store i32 %33, i32* %6, align 4, !dbg !15980
  %34 = icmp ne i32 %32, 0, !dbg !15979
  br i1 %34, label %35, label %36, !dbg !15979

35:                                               ; preds = %31
  call void @str_append_char(%struct.mystr* @vsf_sysutil_parse_ipv6.s_ret, i8 signext 0), !dbg !15981
  br label %31, !dbg !15979, !llvm.loop !15983

36:                                               ; preds = %31
  call void @str_append_str(%struct.mystr* @vsf_sysutil_parse_ipv6.s_ret, %struct.mystr* @vsf_sysutil_parse_ipv6.s_rhs_ret), !dbg !15985
  br label %37, !dbg !15986

37:                                               ; preds = %36, %23
  %38 = call i8* @str_getbuf(%struct.mystr* @vsf_sysutil_parse_ipv6.s_ret), !dbg !15987
  store i8* %38, i8** %2, align 8, !dbg !15988
  br label %39, !dbg !15988

39:                                               ; preds = %37, %22, %14, %10
  %40 = load i8*, i8** %2, align 8, !dbg !15989
  ret i8* %40, !dbg !15989
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ipv6_parse_main(%struct.mystr*, %struct.mystr*) #0 !dbg !1125 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca %struct.str_locate_result, align 4
  %7 = alloca %struct.str_locate_result, align 4
  %8 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !15990, metadata !DIExpression()), !dbg !15991
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !15992, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %6, metadata !15994, metadata !DIExpression()), !dbg !16000
  %9 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !16001
  call void @str_copy(%struct.mystr* @ipv6_parse_main.s_lhs_str, %struct.mystr* %9), !dbg !16002
  br label %10, !dbg !16003

10:                                               ; preds = %39, %2
  %11 = call i32 @str_isempty(%struct.mystr* @ipv6_parse_main.s_lhs_str), !dbg !16004
  %12 = icmp ne i32 %11, 0, !dbg !16005
  %13 = xor i1 %12, true, !dbg !16005
  br i1 %13, label %14, label %40, !dbg !16003

14:                                               ; preds = %10
  call void @str_split_char(%struct.mystr* @ipv6_parse_main.s_lhs_str, %struct.mystr* @ipv6_parse_main.s_rhs_str, i8 signext 58), !dbg !16006
  %15 = call i32 @str_isempty(%struct.mystr* @ipv6_parse_main.s_lhs_str), !dbg !16008
  %16 = icmp ne i32 %15, 0, !dbg !16008
  br i1 %16, label %17, label %18, !dbg !16010

17:                                               ; preds = %14
  store i32 0, i32* %3, align 4, !dbg !16011
  br label %41, !dbg !16011

18:                                               ; preds = %14
  %19 = call { i64, i8 } @str_locate_char(%struct.mystr* @ipv6_parse_main.s_lhs_str, i8 signext 46), !dbg !16013
  store { i64, i8 } %19, { i64, i8 }* %8, align 8, !dbg !16013
  %20 = bitcast { i64, i8 }* %8 to i8*, !dbg !16013
  %21 = bitcast %struct.str_locate_result* %7 to i8*, !dbg !16013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %20, i64 12, i1 false), !dbg !16013
  %22 = bitcast %struct.str_locate_result* %6 to i8*, !dbg !16013
  %23 = bitcast %struct.str_locate_result* %7 to i8*, !dbg !16013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false), !dbg !16013
  %24 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %6, i32 0, i32 0, !dbg !16014
  %25 = load i32, i32* %24, align 4, !dbg !16014
  %26 = icmp ne i32 %25, 0, !dbg !16016
  br i1 %26, label %27, label %33, !dbg !16017

27:                                               ; preds = %18
  %28 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16018
  %29 = call i32 @ipv4_parse_dotquad(%struct.mystr* %28, %struct.mystr* @ipv6_parse_main.s_lhs_str), !dbg !16021
  %30 = icmp ne i32 %29, 0, !dbg !16021
  br i1 %30, label %32, label %31, !dbg !16022

31:                                               ; preds = %27
  store i32 0, i32* %3, align 4, !dbg !16023
  br label %41, !dbg !16023

32:                                               ; preds = %27
  br label %39, !dbg !16025

33:                                               ; preds = %18
  %34 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16026
  %35 = call i32 @ipv6_parse_hex(%struct.mystr* %34, %struct.mystr* @ipv6_parse_main.s_lhs_str), !dbg !16028
  %36 = icmp ne i32 %35, 0, !dbg !16028
  br i1 %36, label %38, label %37, !dbg !16029

37:                                               ; preds = %33
  store i32 0, i32* %3, align 4, !dbg !16030
  br label %41, !dbg !16030

38:                                               ; preds = %33
  br label %39

39:                                               ; preds = %38, %32
  call void @str_copy(%struct.mystr* @ipv6_parse_main.s_lhs_str, %struct.mystr* @ipv6_parse_main.s_rhs_str), !dbg !16032
  br label %10, !dbg !16003, !llvm.loop !16033

40:                                               ; preds = %10
  store i32 1, i32* %3, align 4, !dbg !16035
  br label %41, !dbg !16035

41:                                               ; preds = %40, %37, %31, %17
  %42 = load i32, i32* %3, align 4, !dbg !16036
  ret i32 %42, !dbg !16036
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ipv4_parse_dotquad(%struct.mystr*, %struct.mystr*) #0 !dbg !16037 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !16038, metadata !DIExpression()), !dbg !16039
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !16040, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16042, metadata !DIExpression()), !dbg !16043
  %13 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !16044
  %14 = call i32 @str_getlen(%struct.mystr* %13), !dbg !16045
  store i32 %14, i32* %6, align 4, !dbg !16043
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16046, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16048, metadata !DIExpression()), !dbg !16049
  store i32 0, i32* %8, align 4, !dbg !16049
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16050, metadata !DIExpression()), !dbg !16051
  store i32 0, i32* %9, align 4, !dbg !16051
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16052, metadata !DIExpression()), !dbg !16053
  store i32 0, i32* %10, align 4, !dbg !16053
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16054, metadata !DIExpression()), !dbg !16055
  store i32 0, i32* %11, align 4, !dbg !16055
  store i32 0, i32* %7, align 4, !dbg !16056
  br label %15, !dbg !16058

15:                                               ; preds = %62, %2
  %16 = load i32, i32* %7, align 4, !dbg !16059
  %17 = load i32, i32* %6, align 4, !dbg !16061
  %18 = icmp ult i32 %16, %17, !dbg !16062
  br i1 %18, label %19, label %65, !dbg !16063

19:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32* %12, metadata !16064, metadata !DIExpression()), !dbg !16066
  %20 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !16067
  %21 = load i32, i32* %7, align 4, !dbg !16068
  %22 = call signext i8 @str_get_char_at(%struct.mystr* %20, i32 %21), !dbg !16069
  %23 = sext i8 %22 to i32, !dbg !16069
  store i32 %23, i32* %12, align 4, !dbg !16066
  %24 = load i32, i32* %12, align 4, !dbg !16070
  %25 = icmp eq i32 %24, 46, !dbg !16072
  br i1 %25, label %26, label %41, !dbg !16073

26:                                               ; preds = %19
  %27 = load i32, i32* %10, align 4, !dbg !16074
  %28 = icmp ne i32 %27, 0, !dbg !16074
  br i1 %28, label %29, label %32, !dbg !16077

29:                                               ; preds = %26
  %30 = load i32, i32* %11, align 4, !dbg !16078
  %31 = icmp eq i32 %30, 3, !dbg !16079
  br i1 %31, label %32, label %33, !dbg !16080

32:                                               ; preds = %29, %26
  store i32 0, i32* %3, align 4, !dbg !16081
  br label %96, !dbg !16081

33:                                               ; preds = %29
  store i32 0, i32* %10, align 4, !dbg !16083
  %34 = load i32, i32* %11, align 4, !dbg !16084
  %35 = add nsw i32 %34, 1, !dbg !16084
  store i32 %35, i32* %11, align 4, !dbg !16084
  %36 = load i32, i32* %9, align 4, !dbg !16085
  %37 = shl i32 %36, 8, !dbg !16085
  store i32 %37, i32* %9, align 4, !dbg !16085
  %38 = load i32, i32* %8, align 4, !dbg !16086
  %39 = load i32, i32* %9, align 4, !dbg !16087
  %40 = or i32 %39, %38, !dbg !16087
  store i32 %40, i32* %9, align 4, !dbg !16087
  store i32 0, i32* %8, align 4, !dbg !16088
  br label %61, !dbg !16089

41:                                               ; preds = %19
  %42 = load i32, i32* %12, align 4, !dbg !16090
  %43 = icmp sge i32 %42, 48, !dbg !16092
  br i1 %43, label %44, label %59, !dbg !16093

44:                                               ; preds = %41
  %45 = load i32, i32* %12, align 4, !dbg !16094
  %46 = icmp sle i32 %45, 57, !dbg !16095
  br i1 %46, label %47, label %59, !dbg !16096

47:                                               ; preds = %44
  %48 = load i32, i32* %12, align 4, !dbg !16097
  %49 = sub nsw i32 %48, 48, !dbg !16097
  store i32 %49, i32* %12, align 4, !dbg !16097
  %50 = load i32, i32* %8, align 4, !dbg !16099
  %51 = mul i32 %50, 10, !dbg !16099
  store i32 %51, i32* %8, align 4, !dbg !16099
  %52 = load i32, i32* %12, align 4, !dbg !16100
  %53 = load i32, i32* %8, align 4, !dbg !16101
  %54 = add i32 %53, %52, !dbg !16101
  store i32 %54, i32* %8, align 4, !dbg !16101
  %55 = load i32, i32* %8, align 4, !dbg !16102
  %56 = icmp ugt i32 %55, 255, !dbg !16104
  br i1 %56, label %57, label %58, !dbg !16105

57:                                               ; preds = %47
  store i32 0, i32* %3, align 4, !dbg !16106
  br label %96, !dbg !16106

58:                                               ; preds = %47
  store i32 1, i32* %10, align 4, !dbg !16108
  br label %60, !dbg !16109

59:                                               ; preds = %44, %41
  store i32 0, i32* %3, align 4, !dbg !16110
  br label %96, !dbg !16110

60:                                               ; preds = %58
  br label %61

61:                                               ; preds = %60, %33
  br label %62, !dbg !16112

62:                                               ; preds = %61
  %63 = load i32, i32* %7, align 4, !dbg !16113
  %64 = add i32 %63, 1, !dbg !16113
  store i32 %64, i32* %7, align 4, !dbg !16113
  br label %15, !dbg !16114, !llvm.loop !16115

65:                                               ; preds = %15
  %66 = load i32, i32* %11, align 4, !dbg !16117
  %67 = icmp ne i32 %66, 3, !dbg !16119
  br i1 %67, label %71, label %68, !dbg !16120

68:                                               ; preds = %65
  %69 = load i32, i32* %10, align 4, !dbg !16121
  %70 = icmp ne i32 %69, 0, !dbg !16121
  br i1 %70, label %72, label %71, !dbg !16122

71:                                               ; preds = %68, %65
  store i32 0, i32* %3, align 4, !dbg !16123
  br label %96, !dbg !16123

72:                                               ; preds = %68
  %73 = load i32, i32* %9, align 4, !dbg !16125
  %74 = shl i32 %73, 8, !dbg !16125
  store i32 %74, i32* %9, align 4, !dbg !16125
  %75 = load i32, i32* %8, align 4, !dbg !16126
  %76 = load i32, i32* %9, align 4, !dbg !16127
  %77 = or i32 %76, %75, !dbg !16127
  store i32 %77, i32* %9, align 4, !dbg !16127
  %78 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16128
  %79 = load i32, i32* %9, align 4, !dbg !16129
  %80 = lshr i32 %79, 24, !dbg !16130
  %81 = trunc i32 %80 to i8, !dbg !16131
  call void @str_append_char(%struct.mystr* %78, i8 signext %81), !dbg !16132
  %82 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16133
  %83 = load i32, i32* %9, align 4, !dbg !16134
  %84 = lshr i32 %83, 16, !dbg !16135
  %85 = and i32 %84, 255, !dbg !16136
  %86 = trunc i32 %85 to i8, !dbg !16137
  call void @str_append_char(%struct.mystr* %82, i8 signext %86), !dbg !16138
  %87 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16139
  %88 = load i32, i32* %9, align 4, !dbg !16140
  %89 = lshr i32 %88, 8, !dbg !16141
  %90 = and i32 %89, 255, !dbg !16142
  %91 = trunc i32 %90 to i8, !dbg !16143
  call void @str_append_char(%struct.mystr* %87, i8 signext %91), !dbg !16144
  %92 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16145
  %93 = load i32, i32* %9, align 4, !dbg !16146
  %94 = and i32 %93, 255, !dbg !16147
  %95 = trunc i32 %94 to i8, !dbg !16148
  call void @str_append_char(%struct.mystr* %92, i8 signext %95), !dbg !16149
  store i32 1, i32* %3, align 4, !dbg !16150
  br label %96, !dbg !16150

96:                                               ; preds = %72, %71, %59, %57, %32
  %97 = load i32, i32* %3, align 4, !dbg !16151
  ret i32 %97, !dbg !16151
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ipv6_parse_hex(%struct.mystr*, %struct.mystr*) #0 !dbg !16152 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !16153, metadata !DIExpression()), !dbg !16154
  store %struct.mystr* %1, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !16155, metadata !DIExpression()), !dbg !16156
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16157, metadata !DIExpression()), !dbg !16158
  %10 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !16159
  %11 = call i32 @str_getlen(%struct.mystr* %10), !dbg !16160
  store i32 %11, i32* %6, align 4, !dbg !16158
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16161, metadata !DIExpression()), !dbg !16162
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16163, metadata !DIExpression()), !dbg !16164
  store i32 0, i32* %8, align 4, !dbg !16164
  store i32 0, i32* %7, align 4, !dbg !16165
  br label %12, !dbg !16167

12:                                               ; preds = %53, %2
  %13 = load i32, i32* %7, align 4, !dbg !16168
  %14 = load i32, i32* %6, align 4, !dbg !16170
  %15 = icmp ult i32 %13, %14, !dbg !16171
  br i1 %15, label %16, label %56, !dbg !16172

16:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16173, metadata !DIExpression()), !dbg !16175
  %17 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !16176
  %18 = load i32, i32* %7, align 4, !dbg !16177
  %19 = call signext i8 @str_get_char_at(%struct.mystr* %17, i32 %18), !dbg !16178
  %20 = sext i8 %19 to i32, !dbg !16178
  %21 = call i32 @vsf_sysutil_toupper(i32 %20), !dbg !16179
  store i32 %21, i32* %9, align 4, !dbg !16175
  %22 = load i32, i32* %9, align 4, !dbg !16180
  %23 = icmp sge i32 %22, 48, !dbg !16182
  br i1 %23, label %24, label %30, !dbg !16183

24:                                               ; preds = %16
  %25 = load i32, i32* %9, align 4, !dbg !16184
  %26 = icmp sle i32 %25, 57, !dbg !16185
  br i1 %26, label %27, label %30, !dbg !16186

27:                                               ; preds = %24
  %28 = load i32, i32* %9, align 4, !dbg !16187
  %29 = sub nsw i32 %28, 48, !dbg !16187
  store i32 %29, i32* %9, align 4, !dbg !16187
  br label %43, !dbg !16189

30:                                               ; preds = %24, %16
  %31 = load i32, i32* %9, align 4, !dbg !16190
  %32 = icmp sge i32 %31, 65, !dbg !16192
  br i1 %32, label %33, label %41, !dbg !16193

33:                                               ; preds = %30
  %34 = load i32, i32* %9, align 4, !dbg !16194
  %35 = icmp sle i32 %34, 70, !dbg !16195
  br i1 %35, label %36, label %41, !dbg !16196

36:                                               ; preds = %33
  %37 = load i32, i32* %9, align 4, !dbg !16197
  %38 = sub nsw i32 %37, 65, !dbg !16197
  store i32 %38, i32* %9, align 4, !dbg !16197
  %39 = load i32, i32* %9, align 4, !dbg !16199
  %40 = add nsw i32 %39, 10, !dbg !16199
  store i32 %40, i32* %9, align 4, !dbg !16199
  br label %42, !dbg !16200

41:                                               ; preds = %33, %30
  store i32 0, i32* %3, align 4, !dbg !16201
  br label %65, !dbg !16201

42:                                               ; preds = %36
  br label %43

43:                                               ; preds = %42, %27
  %44 = load i32, i32* %8, align 4, !dbg !16203
  %45 = shl i32 %44, 4, !dbg !16203
  store i32 %45, i32* %8, align 4, !dbg !16203
  %46 = load i32, i32* %9, align 4, !dbg !16204
  %47 = load i32, i32* %8, align 4, !dbg !16205
  %48 = or i32 %47, %46, !dbg !16205
  store i32 %48, i32* %8, align 4, !dbg !16205
  %49 = load i32, i32* %8, align 4, !dbg !16206
  %50 = icmp ugt i32 %49, 65535, !dbg !16208
  br i1 %50, label %51, label %52, !dbg !16209

51:                                               ; preds = %43
  store i32 0, i32* %3, align 4, !dbg !16210
  br label %65, !dbg !16210

52:                                               ; preds = %43
  br label %53, !dbg !16212

53:                                               ; preds = %52
  %54 = load i32, i32* %7, align 4, !dbg !16213
  %55 = add i32 %54, 1, !dbg !16213
  store i32 %55, i32* %7, align 4, !dbg !16213
  br label %12, !dbg !16214, !llvm.loop !16215

56:                                               ; preds = %12
  %57 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16217
  %58 = load i32, i32* %8, align 4, !dbg !16218
  %59 = lshr i32 %58, 8, !dbg !16219
  %60 = trunc i32 %59 to i8, !dbg !16220
  call void @str_append_char(%struct.mystr* %57, i8 signext %60), !dbg !16221
  %61 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !16222
  %62 = load i32, i32* %8, align 4, !dbg !16223
  %63 = and i32 %62, 255, !dbg !16224
  %64 = trunc i32 %63 to i8, !dbg !16225
  call void @str_append_char(%struct.mystr* %61, i8 signext %64), !dbg !16226
  store i32 1, i32* %3, align 4, !dbg !16227
  br label %65, !dbg !16227

65:                                               ; preds = %56, %51, %41
  %66 = load i32, i32* %3, align 4, !dbg !16228
  ret i32 %66, !dbg !16228
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_parse_ipv4(%struct.mystr*) #0 !dbg !1111 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !16229, metadata !DIExpression()), !dbg !16230
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !16231
  %4 = call i8* @vsf_sysutil_parse_uchar_string_sep(%struct.mystr* %3, i8 signext 46, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @vsf_sysutil_parse_ipv4.items, i32 0, i32 0), i32 4), !dbg !16232
  ret i8* %4, !dbg !16233
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_parse_uchar_string_sep(%struct.mystr*, i8 signext, i8*, i32) #0 !dbg !1117 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.mystr* %0, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !16234, metadata !DIExpression()), !dbg !16235
  store i8 %1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !16236, metadata !DIExpression()), !dbg !16237
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !16238, metadata !DIExpression()), !dbg !16239
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16240, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16242, metadata !DIExpression()), !dbg !16243
  %12 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16244
  call void @str_copy(%struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_tmp_str, %struct.mystr* %12), !dbg !16245
  store i32 0, i32* %10, align 4, !dbg !16246
  br label %13, !dbg !16248

13:                                               ; preds = %50, %4
  %14 = load i32, i32* %10, align 4, !dbg !16249
  %15 = load i32, i32* %9, align 4, !dbg !16251
  %16 = icmp ult i32 %14, %15, !dbg !16252
  br i1 %16, label %17, label %53, !dbg !16253

17:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16254, metadata !DIExpression()), !dbg !16256
  %18 = load i8, i8* %7, align 1, !dbg !16257
  call void @str_split_char(%struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_tmp_str, %struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_rhs_sep_str, i8 signext %18), !dbg !16258
  %19 = load i32, i32* %10, align 4, !dbg !16259
  %20 = load i32, i32* %9, align 4, !dbg !16261
  %21 = sub i32 %20, 1, !dbg !16262
  %22 = icmp ult i32 %19, %21, !dbg !16263
  br i1 %22, label %23, label %26, !dbg !16264

23:                                               ; preds = %17
  %24 = call i32 @str_isempty(%struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_rhs_sep_str), !dbg !16265
  %25 = icmp ne i32 %24, 0, !dbg !16265
  br i1 %25, label %34, label %26, !dbg !16266

26:                                               ; preds = %23, %17
  %27 = load i32, i32* %10, align 4, !dbg !16267
  %28 = load i32, i32* %9, align 4, !dbg !16268
  %29 = sub i32 %28, 1, !dbg !16269
  %30 = icmp eq i32 %27, %29, !dbg !16270
  br i1 %30, label %31, label %35, !dbg !16271

31:                                               ; preds = %26
  %32 = call i32 @str_isempty(%struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_rhs_sep_str), !dbg !16272
  %33 = icmp ne i32 %32, 0, !dbg !16272
  br i1 %33, label %35, label %34, !dbg !16273

34:                                               ; preds = %31, %23
  store i8* null, i8** %5, align 8, !dbg !16274
  br label %55, !dbg !16274

35:                                               ; preds = %31, %26
  %36 = call i32 @str_atoi(%struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_tmp_str), !dbg !16276
  store i32 %36, i32* %11, align 4, !dbg !16277
  %37 = load i32, i32* %11, align 4, !dbg !16278
  %38 = icmp slt i32 %37, 0, !dbg !16280
  br i1 %38, label %42, label %39, !dbg !16281

39:                                               ; preds = %35
  %40 = load i32, i32* %11, align 4, !dbg !16282
  %41 = icmp sgt i32 %40, 255, !dbg !16283
  br i1 %41, label %42, label %43, !dbg !16284

42:                                               ; preds = %39, %35
  store i8* null, i8** %5, align 8, !dbg !16285
  br label %55, !dbg !16285

43:                                               ; preds = %39
  %44 = load i32, i32* %11, align 4, !dbg !16287
  %45 = trunc i32 %44 to i8, !dbg !16288
  %46 = load i8*, i8** %8, align 8, !dbg !16289
  %47 = load i32, i32* %10, align 4, !dbg !16290
  %48 = zext i32 %47 to i64, !dbg !16289
  %49 = getelementptr inbounds i8, i8* %46, i64 %48, !dbg !16289
  store i8 %45, i8* %49, align 1, !dbg !16291
  call void @str_copy(%struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_tmp_str, %struct.mystr* @vsf_sysutil_parse_uchar_string_sep.s_rhs_sep_str), !dbg !16292
  br label %50, !dbg !16293

50:                                               ; preds = %43
  %51 = load i32, i32* %10, align 4, !dbg !16294
  %52 = add i32 %51, 1, !dbg !16294
  store i32 %52, i32* %10, align 4, !dbg !16294
  br label %13, !dbg !16295, !llvm.loop !16296

53:                                               ; preds = %13
  %54 = load i8*, i8** %8, align 8, !dbg !16298
  store i8* %54, i8** %5, align 8, !dbg !16299
  br label %55, !dbg !16299

55:                                               ; preds = %53, %42, %34
  %56 = load i8*, i8** %5, align 8, !dbg !16300
  ret i8* %56, !dbg !16300
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_access_check_file(%struct.mystr*) #0 !dbg !1133 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.str_locate_result, align 4
  %6 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !16301, metadata !DIExpression()), !dbg !16302
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16303, metadata !DIExpression()), !dbg !16304
  store i32 0, i32* %4, align 4, !dbg !16304
  %7 = load i8*, i8** @tunable_deny_file, align 8, !dbg !16305
  %8 = icmp ne i8* %7, null, !dbg !16305
  br i1 %8, label %10, label %9, !dbg !16307

9:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !16308
  br label %31, !dbg !16308

10:                                               ; preds = %1
  %11 = call i32 @str_isempty(%struct.mystr* @vsf_access_check_file.s_access_str), !dbg !16310
  %12 = icmp ne i32 %11, 0, !dbg !16310
  br i1 %12, label %13, label %15, !dbg !16312

13:                                               ; preds = %10
  %14 = load i8*, i8** @tunable_deny_file, align 8, !dbg !16313
  call void @str_alloc_text(%struct.mystr* @vsf_access_check_file.s_access_str, i8* %14), !dbg !16315
  br label %15, !dbg !16316

15:                                               ; preds = %13, %10
  %16 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !16317
  %17 = call i32 @vsf_filename_passes_filter(%struct.mystr* %16, %struct.mystr* @vsf_access_check_file.s_access_str, i32* %4), !dbg !16319
  %18 = icmp ne i32 %17, 0, !dbg !16319
  br i1 %18, label %19, label %20, !dbg !16320

19:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !16321
  br label %31, !dbg !16321

20:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %5, metadata !16323, metadata !DIExpression()), !dbg !16330
  %21 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !16331
  %22 = call { i64, i8 } @str_locate_str(%struct.mystr* %21, %struct.mystr* @vsf_access_check_file.s_access_str), !dbg !16332
  store { i64, i8 } %22, { i64, i8 }* %6, align 8, !dbg !16332
  %23 = bitcast { i64, i8 }* %6 to i8*, !dbg !16332
  %24 = bitcast %struct.str_locate_result* %5 to i8*, !dbg !16332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %23, i64 12, i1 false), !dbg !16332
  %25 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %5, i32 0, i32 0, !dbg !16333
  %26 = load i32, i32* %25, align 4, !dbg !16333
  %27 = icmp ne i32 %26, 0, !dbg !16335
  br i1 %27, label %28, label %29, !dbg !16336

28:                                               ; preds = %20
  store i32 0, i32* %2, align 4, !dbg !16337
  br label %31, !dbg !16337

29:                                               ; preds = %20
  br label %30

30:                                               ; preds = %29
  store i32 1, i32* %2, align 4, !dbg !16339
  br label %31, !dbg !16339

31:                                               ; preds = %30, %28, %19, %9
  %32 = load i32, i32* %2, align 4, !dbg !16340
  ret i32 %32, !dbg !16340
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_access_check_file_visible(%struct.mystr*) #0 !dbg !1148 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.str_locate_result, align 4
  %6 = alloca { i64, i8 }, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !16341, metadata !DIExpression()), !dbg !16342
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16343, metadata !DIExpression()), !dbg !16344
  store i32 0, i32* %4, align 4, !dbg !16344
  %7 = load i8*, i8** @tunable_hide_file, align 8, !dbg !16345
  %8 = icmp ne i8* %7, null, !dbg !16345
  br i1 %8, label %10, label %9, !dbg !16347

9:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !16348
  br label %31, !dbg !16348

10:                                               ; preds = %1
  %11 = call i32 @str_isempty(%struct.mystr* @vsf_access_check_file_visible.s_access_str), !dbg !16350
  %12 = icmp ne i32 %11, 0, !dbg !16350
  br i1 %12, label %13, label %15, !dbg !16352

13:                                               ; preds = %10
  %14 = load i8*, i8** @tunable_hide_file, align 8, !dbg !16353
  call void @str_alloc_text(%struct.mystr* @vsf_access_check_file_visible.s_access_str, i8* %14), !dbg !16355
  br label %15, !dbg !16356

15:                                               ; preds = %13, %10
  %16 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !16357
  %17 = call i32 @vsf_filename_passes_filter(%struct.mystr* %16, %struct.mystr* @vsf_access_check_file_visible.s_access_str, i32* %4), !dbg !16359
  %18 = icmp ne i32 %17, 0, !dbg !16359
  br i1 %18, label %19, label %20, !dbg !16360

19:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !16361
  br label %31, !dbg !16361

20:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata %struct.str_locate_result* %5, metadata !16363, metadata !DIExpression()), !dbg !16365
  %21 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !16366
  %22 = call { i64, i8 } @str_locate_str(%struct.mystr* %21, %struct.mystr* @vsf_access_check_file_visible.s_access_str), !dbg !16367
  store { i64, i8 } %22, { i64, i8 }* %6, align 8, !dbg !16367
  %23 = bitcast { i64, i8 }* %6 to i8*, !dbg !16367
  %24 = bitcast %struct.str_locate_result* %5 to i8*, !dbg !16367
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %23, i64 12, i1 false), !dbg !16367
  %25 = getelementptr inbounds %struct.str_locate_result, %struct.str_locate_result* %5, i32 0, i32 0, !dbg !16368
  %26 = load i32, i32* %25, align 4, !dbg !16368
  %27 = icmp ne i32 %26, 0, !dbg !16370
  br i1 %27, label %28, label %29, !dbg !16371

28:                                               ; preds = %20
  store i32 0, i32* %2, align 4, !dbg !16372
  br label %31, !dbg !16372

29:                                               ; preds = %20
  br label %30

30:                                               ; preds = %29
  store i32 1, i32* %2, align 4, !dbg !16374
  br label %31, !dbg !16374

31:                                               ; preds = %30, %28, %19, %9
  %32 = load i32, i32* %2, align 4, !dbg !16375
  ret i32 %32, !dbg !16375
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @handle_feat(%struct.vsf_session*) #0 !dbg !16376 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !16382, metadata !DIExpression()), !dbg !16383
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16384
  call void @vsf_cmdio_write_hyphen(%struct.vsf_session* %3, i32 211, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.871, i32 0, i32 0)), !dbg !16385
  %4 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !16386
  %5 = icmp ne i32 %4, 0, !dbg !16386
  br i1 %5, label %6, label %20, !dbg !16388

6:                                                ; preds = %1
  %7 = load i32, i32* @tunable_sslv2, align 4, !dbg !16389
  %8 = icmp ne i32 %7, 0, !dbg !16389
  br i1 %8, label %12, label %9, !dbg !16392

9:                                                ; preds = %6
  %10 = load i32, i32* @tunable_sslv3, align 4, !dbg !16393
  %11 = icmp ne i32 %10, 0, !dbg !16393
  br i1 %11, label %12, label %14, !dbg !16394

12:                                               ; preds = %9, %6
  %13 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16395
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.872, i32 0, i32 0)), !dbg !16397
  br label %14, !dbg !16398

14:                                               ; preds = %12, %9
  %15 = load i32, i32* @tunable_tlsv1, align 4, !dbg !16399
  %16 = icmp ne i32 %15, 0, !dbg !16399
  br i1 %16, label %17, label %19, !dbg !16401

17:                                               ; preds = %14
  %18 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16402
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.873, i32 0, i32 0)), !dbg !16404
  br label %19, !dbg !16405

19:                                               ; preds = %17, %14
  br label %20, !dbg !16406

20:                                               ; preds = %19, %1
  %21 = load i32, i32* @tunable_port_enable, align 4, !dbg !16407
  %22 = icmp ne i32 %21, 0, !dbg !16407
  br i1 %22, label %23, label %25, !dbg !16409

23:                                               ; preds = %20
  %24 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16410
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.874, i32 0, i32 0)), !dbg !16412
  br label %25, !dbg !16413

25:                                               ; preds = %23, %20
  %26 = load i32, i32* @tunable_pasv_enable, align 4, !dbg !16414
  %27 = icmp ne i32 %26, 0, !dbg !16414
  br i1 %27, label %28, label %30, !dbg !16416

28:                                               ; preds = %25
  %29 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16417
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.875, i32 0, i32 0)), !dbg !16419
  br label %30, !dbg !16420

30:                                               ; preds = %28, %25
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16421
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.876, i32 0, i32 0)), !dbg !16422
  %32 = load i32, i32* @tunable_pasv_enable, align 4, !dbg !16423
  %33 = icmp ne i32 %32, 0, !dbg !16423
  br i1 %33, label %34, label %36, !dbg !16425

34:                                               ; preds = %30
  %35 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16426
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.877, i32 0, i32 0)), !dbg !16428
  br label %36, !dbg !16429

36:                                               ; preds = %34, %30
  %37 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !16430
  %38 = icmp ne i32 %37, 0, !dbg !16430
  br i1 %38, label %39, label %42, !dbg !16432

39:                                               ; preds = %36
  %40 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16433
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.878, i32 0, i32 0)), !dbg !16435
  %41 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16436
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.879, i32 0, i32 0)), !dbg !16437
  br label %42, !dbg !16438

42:                                               ; preds = %39, %36
  %43 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16439
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9.880, i32 0, i32 0)), !dbg !16440
  %44 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16441
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %44, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.881, i32 0, i32 0)), !dbg !16442
  %45 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16443
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %45, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.882, i32 0, i32 0)), !dbg !16444
  %46 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16445
  call void @vsf_cmdio_write_raw(%struct.vsf_session* %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.883, i32 0, i32 0)), !dbg !16446
  %47 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16447
  call void @vsf_cmdio_write(%struct.vsf_session* %47, i32 211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.884, i32 0, i32 0)), !dbg !16448
  ret void, !dbg !16449
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ftp_write_str(%struct.vsf_session*, %struct.mystr*, i32) #0 !dbg !16450 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !16521, metadata !DIExpression()), !dbg !16522
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !16523, metadata !DIExpression()), !dbg !16524
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16525, metadata !DIExpression()), !dbg !16526
  %10 = load i32, i32* %7, align 4, !dbg !16527
  %11 = icmp eq i32 %10, 2, !dbg !16529
  br i1 %11, label %12, label %61, !dbg !16530

12:                                               ; preds = %3
  %13 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16531
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 48, !dbg !16534
  %15 = load i32, i32* %14, align 4, !dbg !16534
  %16 = icmp ne i32 %15, 0, !dbg !16531
  br i1 %16, label %17, label %44, !dbg !16535

17:                                               ; preds = %12
  %18 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16536
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 53, !dbg !16537
  %20 = load i32, i32* %19, align 8, !dbg !16537
  %21 = icmp ne i32 %20, 0, !dbg !16536
  br i1 %21, label %22, label %44, !dbg !16538

22:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16539, metadata !DIExpression()), !dbg !16541
  store i32 -1, i32* %8, align 4, !dbg !16541
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16542, metadata !DIExpression()), !dbg !16543
  %23 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16544
  %24 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %23, i32 0, i32 55, !dbg !16545
  %25 = load i32, i32* %24, align 8, !dbg !16545
  call void @priv_sock_send_cmd(i32 %25, i8 signext 9), !dbg !16546
  %26 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16547
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 55, !dbg !16548
  %28 = load i32, i32* %27, align 8, !dbg !16548
  %29 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16549
  call void @priv_sock_send_str(i32 %28, %struct.mystr* %29), !dbg !16550
  %30 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16551
  %31 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %30, i32 0, i32 55, !dbg !16552
  %32 = load i32, i32* %31, align 8, !dbg !16552
  %33 = call i32 @priv_sock_get_int(i32 %32), !dbg !16553
  store i32 %33, i32* %9, align 4, !dbg !16554
  %34 = load i32, i32* %9, align 4, !dbg !16555
  %35 = icmp sgt i32 %34, 0, !dbg !16557
  br i1 %35, label %36, label %42, !dbg !16558

36:                                               ; preds = %22
  %37 = load i32, i32* %9, align 4, !dbg !16559
  %38 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16560
  %39 = call i32 @str_getlen(%struct.mystr* %38), !dbg !16561
  %40 = icmp eq i32 %37, %39, !dbg !16562
  br i1 %40, label %41, label %42, !dbg !16563

41:                                               ; preds = %36
  store i32 0, i32* %8, align 4, !dbg !16564
  br label %42, !dbg !16566

42:                                               ; preds = %41, %36, %22
  %43 = load i32, i32* %8, align 4, !dbg !16567
  store i32 %43, i32* %4, align 4, !dbg !16568
  br label %97, !dbg !16568

44:                                               ; preds = %17, %12
  %45 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16569
  %46 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %45, i32 0, i32 48, !dbg !16571
  %47 = load i32, i32* %46, align 4, !dbg !16571
  %48 = icmp ne i32 %47, 0, !dbg !16569
  br i1 %48, label %49, label %55, !dbg !16572

49:                                               ; preds = %44
  %50 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16573
  %51 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %50, i32 0, i32 51, !dbg !16575
  %52 = load i8*, i8** %51, align 8, !dbg !16575
  %53 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16576
  %54 = call i32 @ssl_write_str(i8* %52, %struct.mystr* %53), !dbg !16577
  store i32 %54, i32* %4, align 4, !dbg !16578
  br label %97, !dbg !16578

55:                                               ; preds = %44
  %56 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16579
  %57 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16581
  %58 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %57, i32 0, i32 7, !dbg !16582
  %59 = load i32, i32* %58, align 8, !dbg !16582
  %60 = call i32 @str_netfd_write(%struct.mystr* %56, i32 %59), !dbg !16583
  store i32 %60, i32* %4, align 4, !dbg !16584
  br label %97, !dbg !16584

61:                                               ; preds = %3
  %62 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16585
  %63 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %62, i32 0, i32 47, !dbg !16588
  %64 = load i32, i32* %63, align 8, !dbg !16588
  %65 = icmp ne i32 %64, 0, !dbg !16585
  br i1 %65, label %66, label %83, !dbg !16589

66:                                               ; preds = %61
  %67 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16590
  %68 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %67, i32 0, i32 53, !dbg !16591
  %69 = load i32, i32* %68, align 8, !dbg !16591
  %70 = icmp ne i32 %69, 0, !dbg !16590
  br i1 %70, label %71, label %83, !dbg !16592

71:                                               ; preds = %66
  %72 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16593
  %73 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %72, i32 0, i32 55, !dbg !16595
  %74 = load i32, i32* %73, align 8, !dbg !16595
  call void @priv_sock_send_cmd(i32 %74, i8 signext 5), !dbg !16596
  %75 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16597
  %76 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %75, i32 0, i32 55, !dbg !16598
  %77 = load i32, i32* %76, align 8, !dbg !16598
  %78 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16599
  call void @priv_sock_send_str(i32 %77, %struct.mystr* %78), !dbg !16600
  %79 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16601
  %80 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %79, i32 0, i32 55, !dbg !16602
  %81 = load i32, i32* %80, align 8, !dbg !16602
  %82 = call i32 @priv_sock_get_int(i32 %81), !dbg !16603
  store i32 %82, i32* %4, align 4, !dbg !16604
  br label %97, !dbg !16604

83:                                               ; preds = %66, %61
  %84 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16605
  %85 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %84, i32 0, i32 47, !dbg !16607
  %86 = load i32, i32* %85, align 8, !dbg !16607
  %87 = icmp ne i32 %86, 0, !dbg !16605
  br i1 %87, label %88, label %94, !dbg !16608

88:                                               ; preds = %83
  %89 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16609
  %90 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %89, i32 0, i32 50, !dbg !16611
  %91 = load i8*, i8** %90, align 8, !dbg !16611
  %92 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16612
  %93 = call i32 @ssl_write_str(i8* %91, %struct.mystr* %92), !dbg !16613
  store i32 %93, i32* %4, align 4, !dbg !16614
  br label %97, !dbg !16614

94:                                               ; preds = %83
  %95 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16615
  %96 = call i32 @str_netfd_write(%struct.mystr* %95, i32 0), !dbg !16617
  store i32 %96, i32* %4, align 4, !dbg !16618
  br label %97, !dbg !16618

97:                                               ; preds = %94, %88, %71, %55, %49, %42
  %98 = load i32, i32* %4, align 4, !dbg !16619
  ret i32 %98, !dbg !16619
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ftp_read_data(%struct.vsf_session*, i8*, i32) #0 !dbg !16620 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !16624, metadata !DIExpression()), !dbg !16625
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16626, metadata !DIExpression()), !dbg !16627
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16628, metadata !DIExpression()), !dbg !16629
  %9 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16630
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 48, !dbg !16632
  %11 = load i32, i32* %10, align 4, !dbg !16632
  %12 = icmp ne i32 %11, 0, !dbg !16630
  br i1 %12, label %13, label %40, !dbg !16633

13:                                               ; preds = %3
  %14 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16634
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 53, !dbg !16635
  %16 = load i32, i32* %15, align 8, !dbg !16635
  %17 = icmp ne i32 %16, 0, !dbg !16634
  br i1 %17, label %18, label %40, !dbg !16636

18:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16637, metadata !DIExpression()), !dbg !16639
  %19 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16640
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 55, !dbg !16641
  %21 = load i32, i32* %20, align 8, !dbg !16641
  call void @priv_sock_send_cmd(i32 %21, i8 signext 8), !dbg !16642
  %22 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16643
  %23 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %22, i32 0, i32 55, !dbg !16644
  %24 = load i32, i32* %23, align 8, !dbg !16644
  %25 = load i32, i32* %7, align 4, !dbg !16645
  call void @priv_sock_send_int(i32 %24, i32 %25), !dbg !16646
  %26 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16647
  %27 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %26, i32 0, i32 55, !dbg !16648
  %28 = load i32, i32* %27, align 8, !dbg !16648
  %29 = call i32 @priv_sock_get_int(i32 %28), !dbg !16649
  store i32 %29, i32* %8, align 4, !dbg !16650
  %30 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16651
  %31 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %30, i32 0, i32 55, !dbg !16652
  %32 = load i32, i32* %31, align 8, !dbg !16652
  %33 = load i8*, i8** %6, align 8, !dbg !16653
  %34 = load i32, i32* %7, align 4, !dbg !16654
  call void @priv_sock_recv_buf(i32 %32, i8* %33, i32 %34), !dbg !16655
  %35 = load i32, i32* %8, align 4, !dbg !16656
  %36 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16657
  %37 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %36, i32 0, i32 7, !dbg !16658
  %38 = load i32, i32* %37, align 8, !dbg !16658
  call void @vsf_sysutil_check_pending_actions(i32 1, i32 %35, i32 %38), !dbg !16659
  %39 = load i32, i32* %8, align 4, !dbg !16660
  store i32 %39, i32* %4, align 4, !dbg !16661
  br label %60, !dbg !16661

40:                                               ; preds = %13, %3
  %41 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16662
  %42 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %41, i32 0, i32 48, !dbg !16664
  %43 = load i32, i32* %42, align 4, !dbg !16664
  %44 = icmp ne i32 %43, 0, !dbg !16662
  br i1 %44, label %45, label %53, !dbg !16665

45:                                               ; preds = %40
  %46 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16666
  %47 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16668
  %48 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %47, i32 0, i32 51, !dbg !16669
  %49 = load i8*, i8** %48, align 8, !dbg !16669
  %50 = load i8*, i8** %6, align 8, !dbg !16670
  %51 = load i32, i32* %7, align 4, !dbg !16671
  %52 = call i32 @ssl_read(%struct.vsf_session* %46, i8* %49, i8* %50, i32 %51), !dbg !16672
  store i32 %52, i32* %4, align 4, !dbg !16673
  br label %60, !dbg !16673

53:                                               ; preds = %40
  %54 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16674
  %55 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %54, i32 0, i32 7, !dbg !16676
  %56 = load i32, i32* %55, align 8, !dbg !16676
  %57 = load i8*, i8** %6, align 8, !dbg !16677
  %58 = load i32, i32* %7, align 4, !dbg !16678
  %59 = call i32 @vsf_sysutil_read(i32 %56, i8* %57, i32 %58), !dbg !16679
  store i32 %59, i32* %4, align 4, !dbg !16680
  br label %60, !dbg !16680

60:                                               ; preds = %53, %45, %18
  %61 = load i32, i32* %4, align 4, !dbg !16681
  ret i32 %61, !dbg !16681
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ftp_write_data(%struct.vsf_session*, i8*, i32) #0 !dbg !16682 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !16685, metadata !DIExpression()), !dbg !16686
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16687, metadata !DIExpression()), !dbg !16688
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16689, metadata !DIExpression()), !dbg !16690
  %9 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16691
  %10 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %9, i32 0, i32 48, !dbg !16693
  %11 = load i32, i32* %10, align 4, !dbg !16693
  %12 = icmp ne i32 %11, 0, !dbg !16691
  br i1 %12, label %13, label %36, !dbg !16694

13:                                               ; preds = %3
  %14 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16695
  %15 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %14, i32 0, i32 53, !dbg !16696
  %16 = load i32, i32* %15, align 8, !dbg !16696
  %17 = icmp ne i32 %16, 0, !dbg !16695
  br i1 %17, label %18, label %36, !dbg !16697

18:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16698, metadata !DIExpression()), !dbg !16700
  %19 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16701
  %20 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %19, i32 0, i32 55, !dbg !16702
  %21 = load i32, i32* %20, align 8, !dbg !16702
  call void @priv_sock_send_cmd(i32 %21, i8 signext 9), !dbg !16703
  %22 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16704
  %23 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %22, i32 0, i32 55, !dbg !16705
  %24 = load i32, i32* %23, align 8, !dbg !16705
  %25 = load i8*, i8** %6, align 8, !dbg !16706
  %26 = load i32, i32* %7, align 4, !dbg !16707
  call void @priv_sock_send_buf(i32 %24, i8* %25, i32 %26), !dbg !16708
  %27 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16709
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 55, !dbg !16710
  %29 = load i32, i32* %28, align 8, !dbg !16710
  %30 = call i32 @priv_sock_get_int(i32 %29), !dbg !16711
  store i32 %30, i32* %8, align 4, !dbg !16712
  %31 = load i32, i32* %8, align 4, !dbg !16713
  %32 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16714
  %33 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %32, i32 0, i32 7, !dbg !16715
  %34 = load i32, i32* %33, align 8, !dbg !16715
  call void @vsf_sysutil_check_pending_actions(i32 1, i32 %31, i32 %34), !dbg !16716
  %35 = load i32, i32* %8, align 4, !dbg !16717
  store i32 %35, i32* %4, align 4, !dbg !16718
  br label %55, !dbg !16718

36:                                               ; preds = %13, %3
  %37 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16719
  %38 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %37, i32 0, i32 48, !dbg !16721
  %39 = load i32, i32* %38, align 4, !dbg !16721
  %40 = icmp ne i32 %39, 0, !dbg !16719
  br i1 %40, label %41, label %48, !dbg !16722

41:                                               ; preds = %36
  %42 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16723
  %43 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %42, i32 0, i32 51, !dbg !16725
  %44 = load i8*, i8** %43, align 8, !dbg !16725
  %45 = load i8*, i8** %6, align 8, !dbg !16726
  %46 = load i32, i32* %7, align 4, !dbg !16727
  %47 = call i32 @ssl_write(i8* %44, i8* %45, i32 %46), !dbg !16728
  store i32 %47, i32* %4, align 4, !dbg !16729
  br label %55, !dbg !16729

48:                                               ; preds = %36
  %49 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16730
  %50 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %49, i32 0, i32 7, !dbg !16732
  %51 = load i32, i32* %50, align 8, !dbg !16732
  %52 = load i8*, i8** %6, align 8, !dbg !16733
  %53 = load i32, i32* %7, align 4, !dbg !16734
  %54 = call i32 @vsf_sysutil_write_loop(i32 %51, i8* %52, i32 %53), !dbg !16735
  store i32 %54, i32* %4, align 4, !dbg !16736
  br label %55, !dbg !16736

55:                                               ; preds = %48, %41, %18
  %56 = load i32, i32* %4, align 4, !dbg !16737
  ret i32 %56, !dbg !16737
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ftp_getline(%struct.vsf_session*, %struct.mystr*, i8*) #0 !dbg !16738 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32 (%struct.vsf_session*, i8*, i32)*, align 8
  %10 = alloca i32 (%struct.vsf_session*, i8*, i32)*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !16742, metadata !DIExpression()), !dbg !16743
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !16744, metadata !DIExpression()), !dbg !16745
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !16746, metadata !DIExpression()), !dbg !16747
  %11 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16748
  %12 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %11, i32 0, i32 47, !dbg !16750
  %13 = load i32, i32* %12, align 8, !dbg !16750
  %14 = icmp ne i32 %13, 0, !dbg !16748
  br i1 %14, label %15, label %37, !dbg !16751

15:                                               ; preds = %3
  %16 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16752
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 53, !dbg !16753
  %18 = load i32, i32* %17, align 8, !dbg !16753
  %19 = icmp ne i32 %18, 0, !dbg !16752
  br i1 %19, label %20, label %37, !dbg !16754

20:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16755, metadata !DIExpression()), !dbg !16757
  %21 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16758
  %22 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %21, i32 0, i32 55, !dbg !16759
  %23 = load i32, i32* %22, align 8, !dbg !16759
  call void @priv_sock_send_cmd(i32 %23, i8 signext 4), !dbg !16760
  %24 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16761
  %25 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %24, i32 0, i32 55, !dbg !16762
  %26 = load i32, i32* %25, align 8, !dbg !16762
  %27 = call i32 @priv_sock_get_int(i32 %26), !dbg !16763
  store i32 %27, i32* %8, align 4, !dbg !16764
  %28 = load i32, i32* %8, align 4, !dbg !16765
  %29 = icmp sge i32 %28, 0, !dbg !16767
  br i1 %29, label %30, label %35, !dbg !16768

30:                                               ; preds = %20
  %31 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16769
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 55, !dbg !16771
  %33 = load i32, i32* %32, align 8, !dbg !16771
  %34 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16772
  call void @priv_sock_get_str(i32 %33, %struct.mystr* %34), !dbg !16773
  br label %35, !dbg !16774

35:                                               ; preds = %30, %20
  %36 = load i32, i32* %8, align 4, !dbg !16775
  store i32 %36, i32* %4, align 4, !dbg !16776
  br label %50, !dbg !16776

37:                                               ; preds = %15, %3
  call void @llvm.dbg.declare(metadata i32 (%struct.vsf_session*, i8*, i32)** %9, metadata !16777, metadata !DIExpression()), !dbg !16781
  store i32 (%struct.vsf_session*, i8*, i32)* @plain_peek_adapter, i32 (%struct.vsf_session*, i8*, i32)** %9, align 8, !dbg !16781
  call void @llvm.dbg.declare(metadata i32 (%struct.vsf_session*, i8*, i32)** %10, metadata !16782, metadata !DIExpression()), !dbg !16783
  store i32 (%struct.vsf_session*, i8*, i32)* @plain_read_adapter, i32 (%struct.vsf_session*, i8*, i32)** %10, align 8, !dbg !16783
  %38 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16784
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 47, !dbg !16786
  %40 = load i32, i32* %39, align 8, !dbg !16786
  %41 = icmp ne i32 %40, 0, !dbg !16784
  br i1 %41, label %42, label %43, !dbg !16787

42:                                               ; preds = %37
  store i32 (%struct.vsf_session*, i8*, i32)* @ssl_peek_adapter, i32 (%struct.vsf_session*, i8*, i32)** %9, align 8, !dbg !16788
  store i32 (%struct.vsf_session*, i8*, i32)* @ssl_read_adapter, i32 (%struct.vsf_session*, i8*, i32)** %10, align 8, !dbg !16790
  br label %43, !dbg !16791

43:                                               ; preds = %42, %37
  %44 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !16792
  %45 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !16793
  %46 = load i8*, i8** %7, align 8, !dbg !16794
  %47 = load i32 (%struct.vsf_session*, i8*, i32)*, i32 (%struct.vsf_session*, i8*, i32)** %9, align 8, !dbg !16795
  %48 = load i32 (%struct.vsf_session*, i8*, i32)*, i32 (%struct.vsf_session*, i8*, i32)** %10, align 8, !dbg !16796
  %49 = call i32 @str_netfd_alloc(%struct.vsf_session* %44, %struct.mystr* %45, i8 signext 10, i8* %46, i32 4096, i32 (%struct.vsf_session*, i8*, i32)* %47, i32 (%struct.vsf_session*, i8*, i32)* %48), !dbg !16797
  store i32 %49, i32* %4, align 4, !dbg !16798
  br label %50, !dbg !16798

50:                                               ; preds = %43, %35
  %51 = load i32, i32* %4, align 4, !dbg !16799
  ret i32 %51, !dbg !16799
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @plain_peek_adapter(%struct.vsf_session*, i8*, i32) #0 !dbg !16800 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !16801, metadata !DIExpression()), !dbg !16802
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16803, metadata !DIExpression()), !dbg !16804
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16805, metadata !DIExpression()), !dbg !16806
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !16807
  %8 = load i8*, i8** %5, align 8, !dbg !16808
  %9 = load i32, i32* %6, align 4, !dbg !16809
  %10 = call i32 @vsf_sysutil_recv_peek(i32 0, i8* %8, i32 %9), !dbg !16810
  ret i32 %10, !dbg !16811
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @plain_read_adapter(%struct.vsf_session*, i8*, i32) #0 !dbg !16812 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !16813, metadata !DIExpression()), !dbg !16814
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16815, metadata !DIExpression()), !dbg !16816
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16817, metadata !DIExpression()), !dbg !16818
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !16819
  %8 = load i8*, i8** %5, align 8, !dbg !16820
  %9 = load i32, i32* %6, align 4, !dbg !16821
  %10 = call i32 @vsf_sysutil_read_loop(i32 0, i8* %8, i32 %9), !dbg !16822
  ret i32 %10, !dbg !16823
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_peek_adapter(%struct.vsf_session*, i8*, i32) #0 !dbg !16824 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !16825, metadata !DIExpression()), !dbg !16826
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16827, metadata !DIExpression()), !dbg !16828
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16829, metadata !DIExpression()), !dbg !16830
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !16831
  %8 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !16832
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 50, !dbg !16833
  %10 = load i8*, i8** %9, align 8, !dbg !16833
  %11 = load i8*, i8** %5, align 8, !dbg !16834
  %12 = load i32, i32* %6, align 4, !dbg !16835
  %13 = call i32 @ssl_peek(%struct.vsf_session* %7, i8* %10, i8* %11, i32 %12), !dbg !16836
  ret i32 %13, !dbg !16837
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_read_adapter(%struct.vsf_session*, i8*, i32) #0 !dbg !16838 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !16839, metadata !DIExpression()), !dbg !16840
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16841, metadata !DIExpression()), !dbg !16842
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16843, metadata !DIExpression()), !dbg !16844
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !16845
  %8 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !16846
  %9 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %8, i32 0, i32 50, !dbg !16847
  %10 = load i8*, i8** %9, align 8, !dbg !16847
  %11 = load i8*, i8** %5, align 8, !dbg !16848
  %12 = load i32, i32* %6, align 4, !dbg !16849
  %13 = call i32 @ssl_read(%struct.vsf_session* %7, i8* %10, i8* %11, i32 %12), !dbg !16850
  ret i32 %13, !dbg !16851
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @handle_opts(%struct.vsf_session*) #0 !dbg !16852 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !16920, metadata !DIExpression()), !dbg !16921
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16922
  %4 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %3, i32 0, i32 41, !dbg !16923
  call void @str_upper(%struct.mystr* %4), !dbg !16924
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16925
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 41, !dbg !16927
  %7 = call i32 @str_equal_text(%struct.mystr* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.895, i32 0, i32 0)), !dbg !16928
  %8 = icmp ne i32 %7, 0, !dbg !16928
  br i1 %8, label %9, label %11, !dbg !16929

9:                                                ; preds = %1
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16930
  call void @vsf_cmdio_write(%struct.vsf_session* %10, i32 200, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.896, i32 0, i32 0)), !dbg !16932
  br label %13, !dbg !16933

11:                                               ; preds = %1
  %12 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !16934
  call void @vsf_cmdio_write(%struct.vsf_session* %12, i32 501, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.897, i32 0, i32 0)), !dbg !16936
  br label %13

13:                                               ; preds = %11, %9
  ret void, !dbg !16937
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ssl_init(%struct.vsf_session*) #0 !dbg !16938 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17006, metadata !DIExpression()), !dbg !17007
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17008
  call void @die(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.900, i32 0, i32 0)), !dbg !17009
  ret void, !dbg !17010
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ssl_control_handshake(%struct.vsf_session*) #0 !dbg !17011 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17012, metadata !DIExpression()), !dbg !17013
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17014
  ret void, !dbg !17015
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @handle_auth(%struct.vsf_session*) #0 !dbg !17016 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17017, metadata !DIExpression()), !dbg !17018
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17019
  ret void, !dbg !17020
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @handle_pbsz(%struct.vsf_session*) #0 !dbg !17021 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17022, metadata !DIExpression()), !dbg !17023
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17024
  ret void, !dbg !17025
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @handle_prot(%struct.vsf_session*) #0 !dbg !17026 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17027, metadata !DIExpression()), !dbg !17028
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17029
  ret void, !dbg !17030
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ssl_read(%struct.vsf_session*, i8*, i8*, i32) #0 !dbg !17031 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !17034, metadata !DIExpression()), !dbg !17035
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17036, metadata !DIExpression()), !dbg !17037
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !17038, metadata !DIExpression()), !dbg !17039
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !17040, metadata !DIExpression()), !dbg !17041
  %9 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !17042
  %10 = load i8*, i8** %6, align 8, !dbg !17043
  %11 = load i8*, i8** %7, align 8, !dbg !17044
  %12 = load i32, i32* %8, align 4, !dbg !17045
  ret i32 -1, !dbg !17046
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ssl_peek(%struct.vsf_session*, i8*, i8*, i32) #0 !dbg !17047 {
  %5 = alloca %struct.vsf_session*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %5, metadata !17048, metadata !DIExpression()), !dbg !17049
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17050, metadata !DIExpression()), !dbg !17051
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !17052, metadata !DIExpression()), !dbg !17053
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !17054, metadata !DIExpression()), !dbg !17055
  %9 = load %struct.vsf_session*, %struct.vsf_session** %5, align 8, !dbg !17056
  %10 = load i8*, i8** %6, align 8, !dbg !17057
  %11 = load i8*, i8** %7, align 8, !dbg !17058
  %12 = load i32, i32* %8, align 4, !dbg !17059
  ret i32 -1, !dbg !17060
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ssl_write(i8*, i8*, i32) #0 !dbg !17061 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !17064, metadata !DIExpression()), !dbg !17065
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !17066, metadata !DIExpression()), !dbg !17067
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !17068, metadata !DIExpression()), !dbg !17069
  %7 = load i8*, i8** %4, align 8, !dbg !17070
  %8 = load i8*, i8** %5, align 8, !dbg !17071
  %9 = load i32, i32* %6, align 4, !dbg !17072
  ret i32 -1, !dbg !17073
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ssl_write_str(i8*, %struct.mystr*) #0 !dbg !17074 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mystr*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !17079, metadata !DIExpression()), !dbg !17080
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !17081, metadata !DIExpression()), !dbg !17082
  %5 = load i8*, i8** %3, align 8, !dbg !17083
  %6 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !17084
  ret i32 -1, !dbg !17085
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ssl_accept(%struct.vsf_session*, i32) #0 !dbg !17086 {
  %3 = alloca %struct.vsf_session*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %3, metadata !17089, metadata !DIExpression()), !dbg !17090
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17091, metadata !DIExpression()), !dbg !17092
  %5 = load %struct.vsf_session*, %struct.vsf_session** %3, align 8, !dbg !17093
  %6 = load i32, i32* %4, align 4, !dbg !17094
  ret i32 -1, !dbg !17095
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ssl_data_close(%struct.vsf_session*) #0 !dbg !17096 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17099, metadata !DIExpression()), !dbg !17100
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17101
  ret i32 1, !dbg !17102
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ssl_comm_channel_init(%struct.vsf_session*) #0 !dbg !17103 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17104, metadata !DIExpression()), !dbg !17105
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17106
  ret void, !dbg !17107
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ssl_comm_channel_set_consumer_context(%struct.vsf_session*) #0 !dbg !17108 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17109, metadata !DIExpression()), !dbg !17110
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17111
  ret void, !dbg !17112
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ssl_comm_channel_set_producer_context(%struct.vsf_session*) #0 !dbg !17113 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17114, metadata !DIExpression()), !dbg !17115
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17116
  ret void, !dbg !17117
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ssl_add_entropy(%struct.vsf_session*) #0 !dbg !17118 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17119, metadata !DIExpression()), !dbg !17120
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17121
  ret void, !dbg !17122
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ssl_read_into_str(%struct.vsf_session*, i8*, %struct.mystr*) #0 !dbg !17123 {
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.mystr*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !17127, metadata !DIExpression()), !dbg !17128
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !17129, metadata !DIExpression()), !dbg !17130
  store %struct.mystr* %2, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !17131, metadata !DIExpression()), !dbg !17132
  %7 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !17133
  %8 = load i8*, i8** %5, align 8, !dbg !17134
  %9 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !17135
  ret i32 -1, !dbg !17136
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ssl_slave(%struct.vsf_session*) #0 !dbg !17137 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca %struct.mystr, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !17205, metadata !DIExpression()), !dbg !17206
  call void @llvm.dbg.declare(metadata %struct.mystr* %3, metadata !17207, metadata !DIExpression()), !dbg !17208
  %9 = bitcast %struct.mystr* %3 to i8*, !dbg !17208
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false), !dbg !17208
  call void @str_reserve(%struct.mystr* %3, i32 65536), !dbg !17209
  call void @vsf_sysutil_clear_alarm(), !dbg !17210
  %10 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17211
  call void @priv_sock_set_parent_context(%struct.vsf_session* %10), !dbg !17212
  %11 = load i32, i32* @tunable_setproctitle_enable, align 4, !dbg !17213
  %12 = icmp ne i32 %11, 0, !dbg !17213
  br i1 %12, label %13, label %14, !dbg !17215

13:                                               ; preds = %1
  call void @vsf_sysutil_setproctitle(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.931, i32 0, i32 0)), !dbg !17216
  br label %14, !dbg !17218

14:                                               ; preds = %13, %1
  br label %15, !dbg !17219

15:                                               ; preds = %14, %221
  call void @llvm.dbg.declare(metadata i8* %4, metadata !17220, metadata !DIExpression()), !dbg !17222
  %16 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17223
  %17 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %16, i32 0, i32 54, !dbg !17224
  %18 = load i32, i32* %17, align 4, !dbg !17224
  %19 = call signext i8 @priv_sock_get_cmd(i32 %18), !dbg !17225
  store i8 %19, i8* %4, align 1, !dbg !17222
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17226, metadata !DIExpression()), !dbg !17227
  %20 = load i8, i8* %4, align 1, !dbg !17228
  %21 = sext i8 %20 to i32, !dbg !17228
  %22 = icmp eq i32 %21, 4, !dbg !17230
  br i1 %22, label %23, label %44, !dbg !17231

23:                                               ; preds = %15
  %24 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17232
  %25 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17234
  %26 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %25, i32 0, i32 40, !dbg !17235
  %27 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17236
  %28 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %27, i32 0, i32 2, !dbg !17237
  %29 = load i8*, i8** %28, align 8, !dbg !17237
  %30 = call i32 @ftp_getline(%struct.vsf_session* %24, %struct.mystr* %26, i8* %29), !dbg !17238
  store i32 %30, i32* %5, align 4, !dbg !17239
  %31 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17240
  %32 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %31, i32 0, i32 54, !dbg !17241
  %33 = load i32, i32* %32, align 4, !dbg !17241
  %34 = load i32, i32* %5, align 4, !dbg !17242
  call void @priv_sock_send_int(i32 %33, i32 %34), !dbg !17243
  %35 = load i32, i32* %5, align 4, !dbg !17244
  %36 = icmp sge i32 %35, 0, !dbg !17246
  br i1 %36, label %37, label %43, !dbg !17247

37:                                               ; preds = %23
  %38 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17248
  %39 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %38, i32 0, i32 54, !dbg !17250
  %40 = load i32, i32* %39, align 4, !dbg !17250
  %41 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17251
  %42 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %41, i32 0, i32 40, !dbg !17252
  call void @priv_sock_send_str(i32 %40, %struct.mystr* %42), !dbg !17253
  br label %43, !dbg !17254

43:                                               ; preds = %37, %23
  br label %221, !dbg !17255

44:                                               ; preds = %15
  %45 = load i8, i8* %4, align 1, !dbg !17256
  %46 = sext i8 %45 to i32, !dbg !17256
  %47 = icmp eq i32 %46, 5, !dbg !17258
  br i1 %47, label %48, label %62, !dbg !17259

48:                                               ; preds = %44
  %49 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17260
  %50 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %49, i32 0, i32 54, !dbg !17262
  %51 = load i32, i32* %50, align 4, !dbg !17262
  %52 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17263
  %53 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %52, i32 0, i32 40, !dbg !17264
  call void @priv_sock_get_str(i32 %51, %struct.mystr* %53), !dbg !17265
  %54 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17266
  %55 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17267
  %56 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %55, i32 0, i32 40, !dbg !17268
  %57 = call i32 @ftp_write_str(%struct.vsf_session* %54, %struct.mystr* %56, i32 1), !dbg !17269
  store i32 %57, i32* %5, align 4, !dbg !17270
  %58 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17271
  %59 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %58, i32 0, i32 54, !dbg !17272
  %60 = load i32, i32* %59, align 4, !dbg !17272
  %61 = load i32, i32* %5, align 4, !dbg !17273
  call void @priv_sock_send_int(i32 %60, i32 %61), !dbg !17274
  br label %220, !dbg !17275

62:                                               ; preds = %44
  %63 = load i8, i8* %4, align 1, !dbg !17276
  %64 = sext i8 %63 to i32, !dbg !17276
  %65 = icmp eq i32 %64, 6, !dbg !17278
  br i1 %65, label %66, label %103, !dbg !17279

66:                                               ; preds = %62
  call void @llvm.dbg.declare(metadata i8* %6, metadata !17280, metadata !DIExpression()), !dbg !17282
  store i8 2, i8* %6, align 1, !dbg !17282
  %67 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17283
  %68 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %67, i32 0, i32 7, !dbg !17285
  %69 = load i32, i32* %68, align 8, !dbg !17285
  %70 = icmp ne i32 %69, -1, !dbg !17286
  br i1 %70, label %76, label %71, !dbg !17287

71:                                               ; preds = %66
  %72 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17288
  %73 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %72, i32 0, i32 51, !dbg !17289
  %74 = load i8*, i8** %73, align 8, !dbg !17289
  %75 = icmp ne i8* %74, null, !dbg !17290
  br i1 %75, label %76, label %77, !dbg !17291

76:                                               ; preds = %71, %66
  call void @bug(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.932, i32 0, i32 0)), !dbg !17292
  br label %77, !dbg !17294

77:                                               ; preds = %76, %71
  %78 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17295
  %79 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %78, i32 0, i32 54, !dbg !17296
  %80 = load i32, i32* %79, align 4, !dbg !17296
  %81 = call i32 @priv_sock_recv_fd(i32 %80), !dbg !17297
  %82 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17298
  %83 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %82, i32 0, i32 7, !dbg !17299
  store i32 %81, i32* %83, align 8, !dbg !17300
  %84 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17301
  %85 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17302
  %86 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %85, i32 0, i32 7, !dbg !17303
  %87 = load i32, i32* %86, align 8, !dbg !17303
  %88 = call i32 @ssl_accept(%struct.vsf_session* %84, i32 %87), !dbg !17304
  store i32 %88, i32* %5, align 4, !dbg !17305
  %89 = load i32, i32* %5, align 4, !dbg !17306
  %90 = icmp eq i32 %89, 1, !dbg !17308
  br i1 %90, label %91, label %92, !dbg !17309

91:                                               ; preds = %77
  store i8 1, i8* %6, align 1, !dbg !17310
  br label %98, !dbg !17312

92:                                               ; preds = %77
  %93 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17313
  %94 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %93, i32 0, i32 7, !dbg !17315
  %95 = load i32, i32* %94, align 8, !dbg !17315
  call void @vsf_sysutil_close(i32 %95), !dbg !17316
  %96 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17317
  %97 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %96, i32 0, i32 7, !dbg !17318
  store i32 -1, i32* %97, align 8, !dbg !17319
  br label %98

98:                                               ; preds = %92, %91
  %99 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17320
  %100 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %99, i32 0, i32 54, !dbg !17321
  %101 = load i32, i32* %100, align 4, !dbg !17321
  %102 = load i8, i8* %6, align 1, !dbg !17322
  call void @priv_sock_send_result(i32 %101, i8 signext %102), !dbg !17323
  br label %219, !dbg !17324

103:                                              ; preds = %62
  %104 = load i8, i8* %4, align 1, !dbg !17325
  %105 = sext i8 %104 to i32, !dbg !17325
  %106 = icmp eq i32 %105, 8, !dbg !17327
  br i1 %106, label %107, label %143, !dbg !17328

107:                                              ; preds = %103
  call void @llvm.dbg.declare(metadata i32* %7, metadata !17329, metadata !DIExpression()), !dbg !17331
  %108 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17332
  %109 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %108, i32 0, i32 54, !dbg !17333
  %110 = load i32, i32* %109, align 4, !dbg !17333
  %111 = call i32 @priv_sock_get_int(i32 %110), !dbg !17334
  store i32 %111, i32* %7, align 4, !dbg !17331
  %112 = load i32, i32* %7, align 4, !dbg !17335
  %113 = icmp sle i32 %112, 0, !dbg !17337
  br i1 %113, label %117, label %114, !dbg !17338

114:                                              ; preds = %107
  %115 = load i32, i32* %7, align 4, !dbg !17339
  %116 = icmp sgt i32 %115, 65536, !dbg !17340
  br i1 %116, label %117, label %118, !dbg !17341

117:                                              ; preds = %114, %107
  call void @bug(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.933, i32 0, i32 0)), !dbg !17342
  br label %118, !dbg !17344

118:                                              ; preds = %117, %114
  %119 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17345
  %120 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %119, i32 0, i32 7, !dbg !17347
  %121 = load i32, i32* %120, align 8, !dbg !17347
  %122 = icmp eq i32 %121, -1, !dbg !17348
  br i1 %122, label %128, label %123, !dbg !17349

123:                                              ; preds = %118
  %124 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17350
  %125 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %124, i32 0, i32 51, !dbg !17351
  %126 = load i8*, i8** %125, align 8, !dbg !17351
  %127 = icmp eq i8* %126, null, !dbg !17352
  br i1 %127, label %128, label %129, !dbg !17353

128:                                              ; preds = %123, %118
  call void @bug(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.934, i32 0, i32 0)), !dbg !17354
  br label %129, !dbg !17356

129:                                              ; preds = %128, %123
  %130 = load i32, i32* %7, align 4, !dbg !17357
  call void @str_trunc(%struct.mystr* %3, i32 %130), !dbg !17358
  %131 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17359
  %132 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17360
  %133 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %132, i32 0, i32 51, !dbg !17361
  %134 = load i8*, i8** %133, align 8, !dbg !17361
  %135 = call i32 @ssl_read_into_str(%struct.vsf_session* %131, i8* %134, %struct.mystr* %3), !dbg !17362
  store i32 %135, i32* %5, align 4, !dbg !17363
  %136 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17364
  %137 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %136, i32 0, i32 54, !dbg !17365
  %138 = load i32, i32* %137, align 4, !dbg !17365
  %139 = load i32, i32* %5, align 4, !dbg !17366
  call void @priv_sock_send_int(i32 %138, i32 %139), !dbg !17367
  %140 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17368
  %141 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %140, i32 0, i32 54, !dbg !17369
  %142 = load i32, i32* %141, align 4, !dbg !17369
  call void @priv_sock_send_str(i32 %142, %struct.mystr* %3), !dbg !17370
  br label %218, !dbg !17371

143:                                              ; preds = %103
  %144 = load i8, i8* %4, align 1, !dbg !17372
  %145 = sext i8 %144 to i32, !dbg !17372
  %146 = icmp eq i32 %145, 9, !dbg !17374
  br i1 %146, label %147, label %172, !dbg !17375

147:                                              ; preds = %143
  %148 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17376
  %149 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %148, i32 0, i32 7, !dbg !17379
  %150 = load i32, i32* %149, align 8, !dbg !17379
  %151 = icmp eq i32 %150, -1, !dbg !17380
  br i1 %151, label %157, label %152, !dbg !17381

152:                                              ; preds = %147
  %153 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17382
  %154 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %153, i32 0, i32 51, !dbg !17383
  %155 = load i8*, i8** %154, align 8, !dbg !17383
  %156 = icmp eq i8* %155, null, !dbg !17384
  br i1 %156, label %157, label %158, !dbg !17385

157:                                              ; preds = %152, %147
  call void @bug(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.934, i32 0, i32 0)), !dbg !17386
  br label %158, !dbg !17388

158:                                              ; preds = %157, %152
  %159 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17389
  %160 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %159, i32 0, i32 54, !dbg !17390
  %161 = load i32, i32* %160, align 4, !dbg !17390
  call void @priv_sock_get_str(i32 %161, %struct.mystr* %3), !dbg !17391
  %162 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17392
  %163 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %162, i32 0, i32 51, !dbg !17393
  %164 = load i8*, i8** %163, align 8, !dbg !17393
  %165 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !17394
  %166 = call i32 @str_getlen(%struct.mystr* %3), !dbg !17395
  %167 = call i32 @ssl_write(i8* %164, i8* %165, i32 %166), !dbg !17396
  store i32 %167, i32* %5, align 4, !dbg !17397
  %168 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17398
  %169 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %168, i32 0, i32 54, !dbg !17399
  %170 = load i32, i32* %169, align 4, !dbg !17399
  %171 = load i32, i32* %5, align 4, !dbg !17400
  call void @priv_sock_send_int(i32 %170, i32 %171), !dbg !17401
  br label %217, !dbg !17402

172:                                              ; preds = %143
  %173 = load i8, i8* %4, align 1, !dbg !17403
  %174 = sext i8 %173 to i32, !dbg !17403
  %175 = icmp eq i32 %174, 7, !dbg !17405
  br i1 %175, label %176, label %215, !dbg !17406

176:                                              ; preds = %172
  call void @llvm.dbg.declare(metadata i8* %8, metadata !17407, metadata !DIExpression()), !dbg !17409
  store i8 2, i8* %8, align 1, !dbg !17409
  %177 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17410
  %178 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %177, i32 0, i32 7, !dbg !17412
  %179 = load i32, i32* %178, align 8, !dbg !17412
  %180 = icmp eq i32 %179, -1, !dbg !17413
  br i1 %180, label %181, label %187, !dbg !17414

181:                                              ; preds = %176
  %182 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17415
  %183 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %182, i32 0, i32 51, !dbg !17416
  %184 = load i8*, i8** %183, align 8, !dbg !17416
  %185 = icmp eq i8* %184, null, !dbg !17417
  br i1 %185, label %186, label %187, !dbg !17418

186:                                              ; preds = %181
  store i8 1, i8* %8, align 1, !dbg !17419
  br label %210, !dbg !17421

187:                                              ; preds = %181, %176
  %188 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17422
  %189 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %188, i32 0, i32 7, !dbg !17425
  %190 = load i32, i32* %189, align 8, !dbg !17425
  %191 = icmp eq i32 %190, -1, !dbg !17426
  br i1 %191, label %197, label %192, !dbg !17427

192:                                              ; preds = %187
  %193 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17428
  %194 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %193, i32 0, i32 51, !dbg !17429
  %195 = load i8*, i8** %194, align 8, !dbg !17429
  %196 = icmp eq i8* %195, null, !dbg !17430
  br i1 %196, label %197, label %198, !dbg !17431

197:                                              ; preds = %192, %187
  call void @bug(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.934, i32 0, i32 0)), !dbg !17432
  br label %198, !dbg !17434

198:                                              ; preds = %197, %192
  %199 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17435
  %200 = call i32 @ssl_data_close(%struct.vsf_session* %199), !dbg !17436
  store i32 %200, i32* %5, align 4, !dbg !17437
  %201 = load i32, i32* %5, align 4, !dbg !17438
  %202 = icmp eq i32 %201, 1, !dbg !17440
  br i1 %202, label %203, label %204, !dbg !17441

203:                                              ; preds = %198
  store i8 1, i8* %8, align 1, !dbg !17442
  br label %204, !dbg !17444

204:                                              ; preds = %203, %198
  %205 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17445
  %206 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %205, i32 0, i32 7, !dbg !17446
  %207 = load i32, i32* %206, align 8, !dbg !17446
  call void @vsf_sysutil_close(i32 %207), !dbg !17447
  %208 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17448
  %209 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %208, i32 0, i32 7, !dbg !17449
  store i32 -1, i32* %209, align 8, !dbg !17450
  br label %210

210:                                              ; preds = %204, %186
  %211 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !17451
  %212 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %211, i32 0, i32 54, !dbg !17452
  %213 = load i32, i32* %212, align 4, !dbg !17452
  %214 = load i8, i8* %8, align 1, !dbg !17453
  call void @priv_sock_send_result(i32 %213, i8 signext %214), !dbg !17454
  br label %216, !dbg !17455

215:                                              ; preds = %172
  call void @die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.935, i32 0, i32 0)), !dbg !17456
  br label %216

216:                                              ; preds = %215, %210
  br label %217

217:                                              ; preds = %216, %158
  br label %218

218:                                              ; preds = %217, %129
  br label %219

219:                                              ; preds = %218, %98
  br label %220

220:                                              ; preds = %219, %48
  br label %221

221:                                              ; preds = %220, %43
  br label %15, !dbg !17219, !llvm.loop !17458

222:                                              ; No predecessors!
  ret void, !dbg !17460
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.pt_sandbox* @ptrace_sandbox_alloc() #0 !dbg !17461 {
  ret %struct.pt_sandbox* null, !dbg !17464
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_free(%struct.pt_sandbox*) #0 !dbg !17465 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17468, metadata !DIExpression()), !dbg !17469
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17470
  ret void, !dbg !17471
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ptrace_sandbox_launch_process(%struct.pt_sandbox*, void (i8*)*, i8*) #0 !dbg !17472 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca void (i8*)*, align 8
  %6 = alloca i8*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17475, metadata !DIExpression()), !dbg !17476
  store void (i8*)* %1, void (i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %5, metadata !17477, metadata !DIExpression()), !dbg !17478
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17479, metadata !DIExpression()), !dbg !17480
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17481
  %8 = load void (i8*)*, void (i8*)** %5, align 8, !dbg !17482
  %9 = load i8*, i8** %6, align 8, !dbg !17483
  ret i32 -1, !dbg !17484
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ptrace_sandbox_run_processes(%struct.pt_sandbox*) #0 !dbg !17485 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17488, metadata !DIExpression()), !dbg !17489
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17490
  ret i32 -1, !dbg !17491
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_attach_point() #0 !dbg !17492 {
  ret void, !dbg !17493
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_exit(%struct.pt_sandbox*) #0 !dbg !17494 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17495, metadata !DIExpression()), !dbg !17496
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17497
  ret void, !dbg !17498
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_read(%struct.pt_sandbox*) #0 !dbg !17499 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17500, metadata !DIExpression()), !dbg !17501
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17502
  ret void, !dbg !17503
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_write(%struct.pt_sandbox*) #0 !dbg !17504 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17505, metadata !DIExpression()), !dbg !17506
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17507
  ret void, !dbg !17508
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_sigaction(%struct.pt_sandbox*) #0 !dbg !17509 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17510, metadata !DIExpression()), !dbg !17511
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17512
  ret void, !dbg !17513
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_alarm(%struct.pt_sandbox*) #0 !dbg !17514 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17515, metadata !DIExpression()), !dbg !17516
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17517
  ret void, !dbg !17518
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_query_time(%struct.pt_sandbox*) #0 !dbg !17519 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17520, metadata !DIExpression()), !dbg !17521
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17522
  ret void, !dbg !17523
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_mmap(%struct.pt_sandbox*) #0 !dbg !17524 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17525, metadata !DIExpression()), !dbg !17526
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17527
  ret void, !dbg !17528
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_mprotect(%struct.pt_sandbox*) #0 !dbg !17529 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17530, metadata !DIExpression()), !dbg !17531
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17532
  ret void, !dbg !17533
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_file_stats(%struct.pt_sandbox*) #0 !dbg !17534 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17535, metadata !DIExpression()), !dbg !17536
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17537
  ret void, !dbg !17538
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_fd_stats(%struct.pt_sandbox*) #0 !dbg !17539 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17540, metadata !DIExpression()), !dbg !17541
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17542
  ret void, !dbg !17543
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_getcwd(%struct.pt_sandbox*) #0 !dbg !17544 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17545, metadata !DIExpression()), !dbg !17546
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17547
  ret void, !dbg !17548
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_chdir(%struct.pt_sandbox*) #0 !dbg !17549 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17550, metadata !DIExpression()), !dbg !17551
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17552
  ret void, !dbg !17553
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_umask(%struct.pt_sandbox*) #0 !dbg !17554 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17555, metadata !DIExpression()), !dbg !17556
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17557
  ret void, !dbg !17558
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_open(%struct.pt_sandbox*, i32) #0 !dbg !17559 {
  %3 = alloca %struct.pt_sandbox*, align 8
  %4 = alloca i32, align 4
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %3, metadata !17562, metadata !DIExpression()), !dbg !17563
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17564, metadata !DIExpression()), !dbg !17565
  %5 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17566
  %6 = load i32, i32* %4, align 4, !dbg !17567
  ret void, !dbg !17568
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_close(%struct.pt_sandbox*) #0 !dbg !17569 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17570, metadata !DIExpression()), !dbg !17571
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17572
  ret void, !dbg !17573
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_getdents(%struct.pt_sandbox*) #0 !dbg !17574 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17575, metadata !DIExpression()), !dbg !17576
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17577
  ret void, !dbg !17578
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_fcntl(%struct.pt_sandbox*) #0 !dbg !17579 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17580, metadata !DIExpression()), !dbg !17581
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17582
  ret void, !dbg !17583
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_sendfile(%struct.pt_sandbox*) #0 !dbg !17584 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17585, metadata !DIExpression()), !dbg !17586
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17587
  ret void, !dbg !17588
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_seek(%struct.pt_sandbox*) #0 !dbg !17589 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17590, metadata !DIExpression()), !dbg !17591
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17592
  ret void, !dbg !17593
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_select(%struct.pt_sandbox*) #0 !dbg !17594 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17595, metadata !DIExpression()), !dbg !17596
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17597
  ret void, !dbg !17598
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_unlink(%struct.pt_sandbox*) #0 !dbg !17599 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17600, metadata !DIExpression()), !dbg !17601
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17602
  ret void, !dbg !17603
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_mkdir(%struct.pt_sandbox*) #0 !dbg !17604 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17605, metadata !DIExpression()), !dbg !17606
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17607
  ret void, !dbg !17608
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_rmdir(%struct.pt_sandbox*) #0 !dbg !17609 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17610, metadata !DIExpression()), !dbg !17611
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17612
  ret void, !dbg !17613
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_rename(%struct.pt_sandbox*) #0 !dbg !17614 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17615, metadata !DIExpression()), !dbg !17616
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17617
  ret void, !dbg !17618
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_utime(%struct.pt_sandbox*) #0 !dbg !17619 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17620, metadata !DIExpression()), !dbg !17621
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17622
  ret void, !dbg !17623
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_utimes(%struct.pt_sandbox*) #0 !dbg !17624 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17625, metadata !DIExpression()), !dbg !17626
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17627
  ret void, !dbg !17628
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_sigreturn(%struct.pt_sandbox*) #0 !dbg !17629 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17630, metadata !DIExpression()), !dbg !17631
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17632
  ret void, !dbg !17633
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_recv(%struct.pt_sandbox*) #0 !dbg !17634 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17635, metadata !DIExpression()), !dbg !17636
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17637
  ret void, !dbg !17638
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_kill_processes(%struct.pt_sandbox*) #0 !dbg !17639 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17640, metadata !DIExpression()), !dbg !17641
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17642
  ret void, !dbg !17643
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ptrace_sandbox_get_arg(%struct.pt_sandbox*, i32, i64*) #0 !dbg !17644 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17648, metadata !DIExpression()), !dbg !17649
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17650, metadata !DIExpression()), !dbg !17651
  store i64* %2, i64** %6, align 8
  call void @llvm.dbg.declare(metadata i64** %6, metadata !17652, metadata !DIExpression()), !dbg !17653
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17654
  %8 = load i32, i32* %5, align 4, !dbg !17655
  %9 = load i64*, i64** %6, align 8, !dbg !17656
  ret i32 -1, !dbg !17657
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox*, i32, i64*) #0 !dbg !17658 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17659, metadata !DIExpression()), !dbg !17660
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17661, metadata !DIExpression()), !dbg !17662
  store i64* %2, i64** %6, align 8
  call void @llvm.dbg.declare(metadata i64** %6, metadata !17663, metadata !DIExpression()), !dbg !17664
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17665
  %8 = load i32, i32* %5, align 4, !dbg !17666
  %9 = load i64*, i64** %6, align 8, !dbg !17667
  ret i32 -1, !dbg !17668
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ptrace_sandbox_get_long(%struct.pt_sandbox*, i64, i64*) #0 !dbg !17669 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17672, metadata !DIExpression()), !dbg !17673
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !17674, metadata !DIExpression()), !dbg !17675
  store i64* %2, i64** %6, align 8
  call void @llvm.dbg.declare(metadata i64** %6, metadata !17676, metadata !DIExpression()), !dbg !17677
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17678
  %8 = load i64, i64* %5, align 8, !dbg !17679
  %9 = load i64*, i64** %6, align 8, !dbg !17680
  ret i32 -1, !dbg !17681
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @ptrace_sandbox_get_buf(%struct.pt_sandbox*, i64, i64, i8*) #0 !dbg !17682 {
  %5 = alloca %struct.pt_sandbox*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %5, metadata !17685, metadata !DIExpression()), !dbg !17686
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !17687, metadata !DIExpression()), !dbg !17688
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !17689, metadata !DIExpression()), !dbg !17690
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !17691, metadata !DIExpression()), !dbg !17692
  %9 = load %struct.pt_sandbox*, %struct.pt_sandbox** %5, align 8, !dbg !17693
  %10 = load i64, i64* %6, align 8, !dbg !17694
  %11 = load i64, i64* %7, align 8, !dbg !17695
  %12 = load i8*, i8** %8, align 8, !dbg !17696
  ret i32 -1, !dbg !17697
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_readlink(%struct.pt_sandbox*) #0 !dbg !17698 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17699, metadata !DIExpression()), !dbg !17700
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17701
  ret void, !dbg !17702
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_brk(%struct.pt_sandbox*) #0 !dbg !17703 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17704, metadata !DIExpression()), !dbg !17705
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17706
  ret void, !dbg !17707
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_sleep(%struct.pt_sandbox*) #0 !dbg !17708 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17709, metadata !DIExpression()), !dbg !17710
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17711
  ret void, !dbg !17712
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_fchmod(%struct.pt_sandbox*) #0 !dbg !17713 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17714, metadata !DIExpression()), !dbg !17715
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17716
  ret void, !dbg !17717
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_chmod(%struct.pt_sandbox*) #0 !dbg !17718 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17719, metadata !DIExpression()), !dbg !17720
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17721
  ret void, !dbg !17722
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_fchown(%struct.pt_sandbox*) #0 !dbg !17723 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17724, metadata !DIExpression()), !dbg !17725
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17726
  ret void, !dbg !17727
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_mremap(%struct.pt_sandbox*) #0 !dbg !17728 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17729, metadata !DIExpression()), !dbg !17730
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17731
  ret void, !dbg !17732
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_ftruncate(%struct.pt_sandbox*) #0 !dbg !17733 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17734, metadata !DIExpression()), !dbg !17735
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17736
  ret void, !dbg !17737
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_socket(%struct.pt_sandbox*) #0 !dbg !17738 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17739, metadata !DIExpression()), !dbg !17740
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17741
  ret void, !dbg !17742
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_set_socket_validator(%struct.pt_sandbox*, i32 (%struct.pt_sandbox*, i8*)*, i8*) #0 !dbg !17743 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i32 (%struct.pt_sandbox*, i8*)*, align 8
  %6 = alloca i8*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17750, metadata !DIExpression()), !dbg !17751
  store i32 (%struct.pt_sandbox*, i8*)* %1, i32 (%struct.pt_sandbox*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.pt_sandbox*, i8*)** %5, metadata !17752, metadata !DIExpression()), !dbg !17753
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17754, metadata !DIExpression()), !dbg !17755
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17756
  %8 = load i32 (%struct.pt_sandbox*, i8*)*, i32 (%struct.pt_sandbox*, i8*)** %5, align 8, !dbg !17757
  %9 = load i8*, i8** %6, align 8, !dbg !17758
  ret void, !dbg !17759
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_bind(%struct.pt_sandbox*) #0 !dbg !17760 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17761, metadata !DIExpression()), !dbg !17762
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17763
  ret void, !dbg !17764
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_set_bind_validator(%struct.pt_sandbox*, i32 (%struct.pt_sandbox*, i8*)*, i8*) #0 !dbg !17765 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i32 (%struct.pt_sandbox*, i8*)*, align 8
  %6 = alloca i8*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17766, metadata !DIExpression()), !dbg !17767
  store i32 (%struct.pt_sandbox*, i8*)* %1, i32 (%struct.pt_sandbox*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.pt_sandbox*, i8*)** %5, metadata !17768, metadata !DIExpression()), !dbg !17769
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17770, metadata !DIExpression()), !dbg !17771
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17772
  %8 = load i32 (%struct.pt_sandbox*, i8*)*, i32 (%struct.pt_sandbox*, i8*)** %5, align 8, !dbg !17773
  %9 = load i8*, i8** %6, align 8, !dbg !17774
  ret void, !dbg !17775
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_connect(%struct.pt_sandbox*) #0 !dbg !17776 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17777, metadata !DIExpression()), !dbg !17778
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17779
  ret void, !dbg !17780
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_set_connect_validator(%struct.pt_sandbox*, i32 (%struct.pt_sandbox*, i8*)*, i8*) #0 !dbg !17781 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i32 (%struct.pt_sandbox*, i8*)*, align 8
  %6 = alloca i8*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17782, metadata !DIExpression()), !dbg !17783
  store i32 (%struct.pt_sandbox*, i8*)* %1, i32 (%struct.pt_sandbox*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.pt_sandbox*, i8*)** %5, metadata !17784, metadata !DIExpression()), !dbg !17785
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17786, metadata !DIExpression()), !dbg !17787
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17788
  %8 = load i32 (%struct.pt_sandbox*, i8*)*, i32 (%struct.pt_sandbox*, i8*)** %5, align 8, !dbg !17789
  %9 = load i8*, i8** %6, align 8, !dbg !17790
  ret void, !dbg !17791
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_listen(%struct.pt_sandbox*) #0 !dbg !17792 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17793, metadata !DIExpression()), !dbg !17794
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17795
  ret void, !dbg !17796
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_accept(%struct.pt_sandbox*) #0 !dbg !17797 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17798, metadata !DIExpression()), !dbg !17799
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17800
  ret void, !dbg !17801
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_setsockopt(%struct.pt_sandbox*) #0 !dbg !17802 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17803, metadata !DIExpression()), !dbg !17804
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17805
  ret void, !dbg !17806
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_set_setsockopt_validator(%struct.pt_sandbox*, i32 (%struct.pt_sandbox*, i8*)*, i8*) #0 !dbg !17807 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i32 (%struct.pt_sandbox*, i8*)*, align 8
  %6 = alloca i8*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17808, metadata !DIExpression()), !dbg !17809
  store i32 (%struct.pt_sandbox*, i8*)* %1, i32 (%struct.pt_sandbox*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.pt_sandbox*, i8*)** %5, metadata !17810, metadata !DIExpression()), !dbg !17811
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17812, metadata !DIExpression()), !dbg !17813
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17814
  %8 = load i32 (%struct.pt_sandbox*, i8*)*, i32 (%struct.pt_sandbox*, i8*)** %5, align 8, !dbg !17815
  %9 = load i8*, i8** %6, align 8, !dbg !17816
  ret void, !dbg !17817
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_getsockopt(%struct.pt_sandbox*) #0 !dbg !17818 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17819, metadata !DIExpression()), !dbg !17820
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17821
  ret void, !dbg !17822
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_set_getsockopt_validator(%struct.pt_sandbox*, i32 (%struct.pt_sandbox*, i8*)*, i8*) #0 !dbg !17823 {
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i32 (%struct.pt_sandbox*, i8*)*, align 8
  %6 = alloca i8*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !17824, metadata !DIExpression()), !dbg !17825
  store i32 (%struct.pt_sandbox*, i8*)* %1, i32 (%struct.pt_sandbox*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.pt_sandbox*, i8*)** %5, metadata !17826, metadata !DIExpression()), !dbg !17827
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17828, metadata !DIExpression()), !dbg !17829
  %7 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !17830
  %8 = load i32 (%struct.pt_sandbox*, i8*)*, i32 (%struct.pt_sandbox*, i8*)** %5, align 8, !dbg !17831
  %9 = load i8*, i8** %6, align 8, !dbg !17832
  ret void, !dbg !17833
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @ptrace_sandbox_permit_shutdown(%struct.pt_sandbox*) #0 !dbg !17834 {
  %2 = alloca %struct.pt_sandbox*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %2, metadata !17835, metadata !DIExpression()), !dbg !17836
  %3 = load %struct.pt_sandbox*, %struct.pt_sandbox** %2, align 8, !dbg !17837
  ret void, !dbg !17838
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @policy_setup(%struct.pt_sandbox*, %struct.vsf_session*) #0 !dbg !17839 {
  %3 = alloca %struct.pt_sandbox*, align 8
  %4 = alloca %struct.vsf_session*, align 8
  %5 = alloca i32, align 4
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %3, metadata !17844, metadata !DIExpression()), !dbg !17845
  store %struct.vsf_session* %1, %struct.vsf_session** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %4, metadata !17846, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17848, metadata !DIExpression()), !dbg !17849
  %6 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !17850
  %7 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %6, i32 0, i32 12, !dbg !17851
  %8 = load i32, i32* %7, align 8, !dbg !17851
  store i32 %8, i32* %5, align 4, !dbg !17849
  %9 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17852
  call void @ptrace_sandbox_permit_exit(%struct.pt_sandbox* %9), !dbg !17853
  %10 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17854
  call void @ptrace_sandbox_permit_mmap(%struct.pt_sandbox* %10), !dbg !17855
  %11 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17856
  call void @ptrace_sandbox_permit_mprotect(%struct.pt_sandbox* %11), !dbg !17857
  %12 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17858
  call void @ptrace_sandbox_permit_brk(%struct.pt_sandbox* %12), !dbg !17859
  %13 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17860
  call void @ptrace_sandbox_permit_read(%struct.pt_sandbox* %13), !dbg !17861
  %14 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17862
  call void @ptrace_sandbox_permit_write(%struct.pt_sandbox* %14), !dbg !17863
  %15 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17864
  call void @ptrace_sandbox_permit_recv(%struct.pt_sandbox* %15), !dbg !17865
  %16 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17866
  call void @ptrace_sandbox_permit_query_time(%struct.pt_sandbox* %16), !dbg !17867
  %17 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17868
  call void @ptrace_sandbox_permit_open(%struct.pt_sandbox* %17, i32 0), !dbg !17869
  %18 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17870
  call void @ptrace_sandbox_permit_close(%struct.pt_sandbox* %18), !dbg !17871
  %19 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17872
  call void @ptrace_sandbox_permit_file_stats(%struct.pt_sandbox* %19), !dbg !17873
  %20 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17874
  call void @ptrace_sandbox_permit_readlink(%struct.pt_sandbox* %20), !dbg !17875
  %21 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17876
  call void @ptrace_sandbox_permit_getcwd(%struct.pt_sandbox* %21), !dbg !17877
  %22 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17878
  call void @ptrace_sandbox_permit_chdir(%struct.pt_sandbox* %22), !dbg !17879
  %23 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17880
  call void @ptrace_sandbox_permit_getdents(%struct.pt_sandbox* %23), !dbg !17881
  %24 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17882
  call void @ptrace_sandbox_permit_fd_stats(%struct.pt_sandbox* %24), !dbg !17883
  %25 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17884
  call void @ptrace_sandbox_permit_seek(%struct.pt_sandbox* %25), !dbg !17885
  %26 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17886
  call void @ptrace_sandbox_permit_shutdown(%struct.pt_sandbox* %26), !dbg !17887
  %27 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17888
  call void @ptrace_sandbox_permit_fcntl(%struct.pt_sandbox* %27), !dbg !17889
  %28 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17890
  call void @ptrace_sandbox_permit_setsockopt(%struct.pt_sandbox* %28), !dbg !17891
  %29 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17892
  call void @ptrace_sandbox_set_setsockopt_validator(%struct.pt_sandbox* %29, i32 (%struct.pt_sandbox*, i8*)* @setsockopt_validator, i8* null), !dbg !17893
  %30 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17894
  call void @ptrace_sandbox_permit_umask(%struct.pt_sandbox* %30), !dbg !17895
  %31 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17896
  call void @ptrace_sandbox_permit_select(%struct.pt_sandbox* %31), !dbg !17897
  %32 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17898
  call void @ptrace_sandbox_permit_sigreturn(%struct.pt_sandbox* %32), !dbg !17899
  %33 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17900
  call void @ptrace_sandbox_permit_sleep(%struct.pt_sandbox* %33), !dbg !17901
  %34 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17902
  call void @ptrace_sandbox_permit_sendfile(%struct.pt_sandbox* %34), !dbg !17903
  %35 = load i32, i32* @tunable_text_userdb_names, align 4, !dbg !17904
  %36 = icmp ne i32 %35, 0, !dbg !17904
  br i1 %36, label %37, label %39, !dbg !17906

37:                                               ; preds = %2
  %38 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17907
  call void @ptrace_sandbox_permit_mremap(%struct.pt_sandbox* %38), !dbg !17909
  br label %39, !dbg !17910

39:                                               ; preds = %37, %2
  %40 = load i32, i32* @tunable_async_abor_enable, align 4, !dbg !17911
  %41 = icmp ne i32 %40, 0, !dbg !17911
  br i1 %41, label %48, label %42, !dbg !17913

42:                                               ; preds = %39
  %43 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !17914
  %44 = icmp ugt i32 %43, 0, !dbg !17915
  br i1 %44, label %48, label %45, !dbg !17916

45:                                               ; preds = %42
  %46 = load i32, i32* @tunable_data_connection_timeout, align 4, !dbg !17917
  %47 = icmp ugt i32 %46, 0, !dbg !17918
  br i1 %47, label %48, label %50, !dbg !17919

48:                                               ; preds = %45, %42, %39
  %49 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17920
  call void @ptrace_sandbox_permit_sigaction(%struct.pt_sandbox* %49), !dbg !17922
  br label %50, !dbg !17923

50:                                               ; preds = %48, %45
  %51 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !17924
  %52 = icmp ugt i32 %51, 0, !dbg !17926
  br i1 %52, label %56, label %53, !dbg !17927

53:                                               ; preds = %50
  %54 = load i32, i32* @tunable_data_connection_timeout, align 4, !dbg !17928
  %55 = icmp ugt i32 %54, 0, !dbg !17929
  br i1 %55, label %56, label %58, !dbg !17930

56:                                               ; preds = %53, %50
  %57 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17931
  call void @ptrace_sandbox_permit_alarm(%struct.pt_sandbox* %57), !dbg !17933
  br label %58, !dbg !17934

58:                                               ; preds = %56, %53
  %59 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17935
  call void @ptrace_sandbox_permit_socket(%struct.pt_sandbox* %59), !dbg !17936
  %60 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17937
  %61 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !17938
  %62 = bitcast %struct.vsf_session* %61 to i8*, !dbg !17939
  call void @ptrace_sandbox_set_socket_validator(%struct.pt_sandbox* %60, i32 (%struct.pt_sandbox*, i8*)* @socket_validator, i8* %62), !dbg !17940
  %63 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17941
  call void @ptrace_sandbox_permit_bind(%struct.pt_sandbox* %63), !dbg !17942
  %64 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17943
  %65 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !17944
  %66 = bitcast %struct.vsf_session* %65 to i8*, !dbg !17945
  call void @ptrace_sandbox_set_bind_validator(%struct.pt_sandbox* %64, i32 (%struct.pt_sandbox*, i8*)* @connect_validator, i8* %66), !dbg !17946
  %67 = load i32, i32* @tunable_port_enable, align 4, !dbg !17947
  %68 = icmp ne i32 %67, 0, !dbg !17947
  br i1 %68, label %69, label %76, !dbg !17949

69:                                               ; preds = %58
  %70 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17950
  call void @ptrace_sandbox_permit_connect(%struct.pt_sandbox* %70), !dbg !17952
  %71 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17953
  %72 = load %struct.vsf_session*, %struct.vsf_session** %4, align 8, !dbg !17954
  %73 = bitcast %struct.vsf_session* %72 to i8*, !dbg !17955
  call void @ptrace_sandbox_set_connect_validator(%struct.pt_sandbox* %71, i32 (%struct.pt_sandbox*, i8*)* @connect_validator, i8* %73), !dbg !17956
  %74 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17957
  call void @ptrace_sandbox_permit_getsockopt(%struct.pt_sandbox* %74), !dbg !17958
  %75 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17959
  call void @ptrace_sandbox_set_getsockopt_validator(%struct.pt_sandbox* %75, i32 (%struct.pt_sandbox*, i8*)* @getsockopt_validator, i8* null), !dbg !17960
  br label %76, !dbg !17961

76:                                               ; preds = %69, %58
  %77 = load i32, i32* @tunable_pasv_enable, align 4, !dbg !17962
  %78 = icmp ne i32 %77, 0, !dbg !17962
  br i1 %78, label %79, label %82, !dbg !17964

79:                                               ; preds = %76
  %80 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17965
  call void @ptrace_sandbox_permit_listen(%struct.pt_sandbox* %80), !dbg !17967
  %81 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17968
  call void @ptrace_sandbox_permit_accept(%struct.pt_sandbox* %81), !dbg !17969
  br label %82, !dbg !17970

82:                                               ; preds = %79, %76
  %83 = load i32, i32* @tunable_write_enable, align 4, !dbg !17971
  %84 = icmp ne i32 %83, 0, !dbg !17971
  br i1 %84, label %85, label %135, !dbg !17973

85:                                               ; preds = %82
  %86 = load i32, i32* %5, align 4, !dbg !17974
  %87 = icmp ne i32 %86, 0, !dbg !17974
  br i1 %87, label %88, label %91, !dbg !17977

88:                                               ; preds = %85
  %89 = load i32, i32* @tunable_anon_upload_enable, align 4, !dbg !17978
  %90 = icmp ne i32 %89, 0, !dbg !17978
  br i1 %90, label %91, label %93, !dbg !17979

91:                                               ; preds = %88, %85
  %92 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17980
  call void @ptrace_sandbox_permit_open(%struct.pt_sandbox* %92, i32 1), !dbg !17982
  br label %93, !dbg !17983

93:                                               ; preds = %91, %88
  %94 = load i32, i32* %5, align 4, !dbg !17984
  %95 = icmp ne i32 %94, 0, !dbg !17984
  br i1 %95, label %96, label %99, !dbg !17986

96:                                               ; preds = %93
  %97 = load i32, i32* @tunable_anon_mkdir_write_enable, align 4, !dbg !17987
  %98 = icmp ne i32 %97, 0, !dbg !17987
  br i1 %98, label %99, label %101, !dbg !17988

99:                                               ; preds = %96, %93
  %100 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17989
  call void @ptrace_sandbox_permit_mkdir(%struct.pt_sandbox* %100), !dbg !17991
  br label %101, !dbg !17992

101:                                              ; preds = %99, %96
  %102 = load i32, i32* %5, align 4, !dbg !17993
  %103 = icmp ne i32 %102, 0, !dbg !17993
  br i1 %103, label %104, label %107, !dbg !17995

104:                                              ; preds = %101
  %105 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !17996
  %106 = icmp ne i32 %105, 0, !dbg !17996
  br i1 %106, label %107, label %117, !dbg !17997

107:                                              ; preds = %104, %101
  %108 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !17998
  call void @ptrace_sandbox_permit_unlink(%struct.pt_sandbox* %108), !dbg !18000
  %109 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !18001
  call void @ptrace_sandbox_permit_rmdir(%struct.pt_sandbox* %109), !dbg !18002
  %110 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !18003
  call void @ptrace_sandbox_permit_rename(%struct.pt_sandbox* %110), !dbg !18004
  %111 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !18005
  call void @ptrace_sandbox_permit_ftruncate(%struct.pt_sandbox* %111), !dbg !18006
  %112 = load i32, i32* @tunable_mdtm_write, align 4, !dbg !18007
  %113 = icmp ne i32 %112, 0, !dbg !18007
  br i1 %113, label %114, label %116, !dbg !18009

114:                                              ; preds = %107
  %115 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !18010
  call void @ptrace_sandbox_permit_utime(%struct.pt_sandbox* %115), !dbg !18012
  br label %116, !dbg !18013

116:                                              ; preds = %114, %107
  br label %117, !dbg !18014

117:                                              ; preds = %116, %104
  %118 = load i32, i32* %5, align 4, !dbg !18015
  %119 = icmp ne i32 %118, 0, !dbg !18015
  br i1 %119, label %125, label %120, !dbg !18017

120:                                              ; preds = %117
  %121 = load i32, i32* @tunable_chmod_enable, align 4, !dbg !18018
  %122 = icmp ne i32 %121, 0, !dbg !18018
  br i1 %122, label %123, label %125, !dbg !18019

123:                                              ; preds = %120
  %124 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !18020
  call void @ptrace_sandbox_permit_chmod(%struct.pt_sandbox* %124), !dbg !18022
  br label %125, !dbg !18023

125:                                              ; preds = %123, %120, %117
  %126 = load i32, i32* %5, align 4, !dbg !18024
  %127 = icmp ne i32 %126, 0, !dbg !18024
  br i1 %127, label %128, label %134, !dbg !18026

128:                                              ; preds = %125
  %129 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !18027
  %130 = icmp ne i32 %129, 0, !dbg !18027
  br i1 %130, label %131, label %134, !dbg !18028

131:                                              ; preds = %128
  %132 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !18029
  call void @ptrace_sandbox_permit_fchmod(%struct.pt_sandbox* %132), !dbg !18031
  %133 = load %struct.pt_sandbox*, %struct.pt_sandbox** %3, align 8, !dbg !18032
  call void @ptrace_sandbox_permit_fchown(%struct.pt_sandbox* %133), !dbg !18033
  br label %134, !dbg !18034

134:                                              ; preds = %131, %128, %125
  br label %135, !dbg !18035

135:                                              ; preds = %134, %82
  ret void, !dbg !18036
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @setsockopt_validator(%struct.pt_sandbox*, i8*) #0 !dbg !18037 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !18038, metadata !DIExpression()), !dbg !18039
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18040, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18042, metadata !DIExpression()), !dbg !18043
  call void @llvm.dbg.declare(metadata i64* %7, metadata !18044, metadata !DIExpression()), !dbg !18045
  call void @llvm.dbg.declare(metadata i64* %8, metadata !18046, metadata !DIExpression()), !dbg !18047
  %9 = load i8*, i8** %5, align 8, !dbg !18048
  %10 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18049
  %11 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %10, i32 1, i64* %7), !dbg !18050
  store i32 %11, i32* %6, align 4, !dbg !18051
  %12 = load i32, i32* %6, align 4, !dbg !18052
  %13 = icmp ne i32 %12, 0, !dbg !18054
  br i1 %13, label %14, label %16, !dbg !18055

14:                                               ; preds = %2
  %15 = load i32, i32* %6, align 4, !dbg !18056
  store i32 %15, i32* %3, align 4, !dbg !18058
  br label %60, !dbg !18058

16:                                               ; preds = %2
  %17 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18059
  %18 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %17, i32 2, i64* %8), !dbg !18060
  store i32 %18, i32* %6, align 4, !dbg !18061
  %19 = load i32, i32* %6, align 4, !dbg !18062
  %20 = icmp ne i32 %19, 0, !dbg !18064
  br i1 %20, label %21, label %23, !dbg !18065

21:                                               ; preds = %16
  %22 = load i32, i32* %6, align 4, !dbg !18066
  store i32 %22, i32* %3, align 4, !dbg !18068
  br label %60, !dbg !18068

23:                                               ; preds = %16
  %24 = load i64, i64* %7, align 8, !dbg !18069
  %25 = icmp eq i64 %24, 1, !dbg !18071
  br i1 %25, label %26, label %40, !dbg !18072

26:                                               ; preds = %23
  %27 = load i64, i64* %8, align 8, !dbg !18073
  %28 = icmp ne i64 %27, 9, !dbg !18076
  br i1 %28, label %29, label %39, !dbg !18077

29:                                               ; preds = %26
  %30 = load i64, i64* %8, align 8, !dbg !18078
  %31 = icmp ne i64 %30, 2, !dbg !18079
  br i1 %31, label %32, label %39, !dbg !18080

32:                                               ; preds = %29
  %33 = load i64, i64* %8, align 8, !dbg !18081
  %34 = icmp ne i64 %33, 10, !dbg !18082
  br i1 %34, label %35, label %39, !dbg !18083

35:                                               ; preds = %32
  %36 = load i64, i64* %8, align 8, !dbg !18084
  %37 = icmp ne i64 %36, 13, !dbg !18085
  br i1 %37, label %38, label %39, !dbg !18086

38:                                               ; preds = %35
  store i32 -1, i32* %3, align 4, !dbg !18087
  br label %60, !dbg !18087

39:                                               ; preds = %35, %32, %29, %26
  br label %59, !dbg !18089

40:                                               ; preds = %23
  %41 = load i64, i64* %7, align 8, !dbg !18090
  %42 = icmp eq i64 %41, 6, !dbg !18092
  br i1 %42, label %43, label %48, !dbg !18093

43:                                               ; preds = %40
  %44 = load i64, i64* %8, align 8, !dbg !18094
  %45 = icmp ne i64 %44, 1, !dbg !18097
  br i1 %45, label %46, label %47, !dbg !18098

46:                                               ; preds = %43
  store i32 -2, i32* %3, align 4, !dbg !18099
  br label %60, !dbg !18099

47:                                               ; preds = %43
  br label %58, !dbg !18101

48:                                               ; preds = %40
  %49 = load i64, i64* %7, align 8, !dbg !18102
  %50 = icmp eq i64 %49, 0, !dbg !18104
  br i1 %50, label %51, label %56, !dbg !18105

51:                                               ; preds = %48
  %52 = load i64, i64* %8, align 8, !dbg !18106
  %53 = icmp ne i64 %52, 1, !dbg !18109
  br i1 %53, label %54, label %55, !dbg !18110

54:                                               ; preds = %51
  store i32 -3, i32* %3, align 4, !dbg !18111
  br label %60, !dbg !18111

55:                                               ; preds = %51
  br label %57, !dbg !18113

56:                                               ; preds = %48
  store i32 -4, i32* %3, align 4, !dbg !18114
  br label %60, !dbg !18114

57:                                               ; preds = %55
  br label %58

58:                                               ; preds = %57, %47
  br label %59

59:                                               ; preds = %58, %39
  store i32 0, i32* %3, align 4, !dbg !18116
  br label %60, !dbg !18116

60:                                               ; preds = %59, %56, %54, %46, %38, %21, %14
  %61 = load i32, i32* %3, align 4, !dbg !18117
  ret i32 %61, !dbg !18117
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @socket_validator(%struct.pt_sandbox*, i8*) #0 !dbg !18118 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.vsf_session*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !18119, metadata !DIExpression()), !dbg !18120
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18121, metadata !DIExpression()), !dbg !18122
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18123, metadata !DIExpression()), !dbg !18124
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %7, metadata !18125, metadata !DIExpression()), !dbg !18126
  %11 = load i8*, i8** %5, align 8, !dbg !18127
  %12 = bitcast i8* %11 to %struct.vsf_session*, !dbg !18128
  store %struct.vsf_session* %12, %struct.vsf_session** %7, align 8, !dbg !18126
  call void @llvm.dbg.declare(metadata i64* %8, metadata !18129, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.declare(metadata i64* %9, metadata !18131, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.declare(metadata i64* %10, metadata !18133, metadata !DIExpression()), !dbg !18134
  store i64 2, i64* %10, align 8, !dbg !18134
  %13 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !18135
  %14 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %13, i32 0, i32 0, !dbg !18137
  %15 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %14, align 8, !dbg !18137
  %16 = call i32 @vsf_sysutil_sockaddr_is_ipv6(%struct.vsf_sysutil_sockaddr* %15), !dbg !18138
  %17 = icmp ne i32 %16, 0, !dbg !18138
  br i1 %17, label %18, label %19, !dbg !18139

18:                                               ; preds = %2
  store i64 10, i64* %10, align 8, !dbg !18140
  br label %19, !dbg !18142

19:                                               ; preds = %18, %2
  %20 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18143
  %21 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %20, i32 0, i64* %8), !dbg !18144
  store i32 %21, i32* %6, align 4, !dbg !18145
  %22 = load i32, i32* %6, align 4, !dbg !18146
  %23 = icmp ne i32 %22, 0, !dbg !18148
  br i1 %23, label %24, label %26, !dbg !18149

24:                                               ; preds = %19
  %25 = load i32, i32* %6, align 4, !dbg !18150
  store i32 %25, i32* %3, align 4, !dbg !18152
  br label %42, !dbg !18152

26:                                               ; preds = %19
  %27 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18153
  %28 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %27, i32 1, i64* %9), !dbg !18154
  store i32 %28, i32* %6, align 4, !dbg !18155
  %29 = load i32, i32* %6, align 4, !dbg !18156
  %30 = icmp ne i32 %29, 0, !dbg !18158
  br i1 %30, label %31, label %33, !dbg !18159

31:                                               ; preds = %26
  %32 = load i32, i32* %6, align 4, !dbg !18160
  store i32 %32, i32* %3, align 4, !dbg !18162
  br label %42, !dbg !18162

33:                                               ; preds = %26
  %34 = load i64, i64* %8, align 8, !dbg !18163
  %35 = load i64, i64* %10, align 8, !dbg !18165
  %36 = icmp ne i64 %34, %35, !dbg !18166
  br i1 %36, label %40, label %37, !dbg !18167

37:                                               ; preds = %33
  %38 = load i64, i64* %9, align 8, !dbg !18168
  %39 = icmp ne i64 %38, 1, !dbg !18169
  br i1 %39, label %40, label %41, !dbg !18170

40:                                               ; preds = %37, %33
  store i32 -1, i32* %3, align 4, !dbg !18171
  br label %42, !dbg !18171

41:                                               ; preds = %37
  store i32 0, i32* %3, align 4, !dbg !18173
  br label %42, !dbg !18173

42:                                               ; preds = %41, %40, %31, %24
  %43 = load i32, i32* %3, align 4, !dbg !18174
  ret i32 %43, !dbg !18174
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @connect_validator(%struct.pt_sandbox*, i8*) #0 !dbg !1151 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.vsf_session*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.sockaddr*, align 8
  %14 = alloca %struct.sockaddr_in*, align 8
  %15 = alloca %struct.sockaddr_in6*, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !18175, metadata !DIExpression()), !dbg !18176
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18177, metadata !DIExpression()), !dbg !18178
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18179, metadata !DIExpression()), !dbg !18180
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %7, metadata !18181, metadata !DIExpression()), !dbg !18182
  %16 = load i8*, i8** %5, align 8, !dbg !18183
  %17 = bitcast i8* %16 to %struct.vsf_session*, !dbg !18184
  store %struct.vsf_session* %17, %struct.vsf_session** %7, align 8, !dbg !18182
  call void @llvm.dbg.declare(metadata i64* %8, metadata !18185, metadata !DIExpression()), !dbg !18186
  call void @llvm.dbg.declare(metadata i64* %9, metadata !18187, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.declare(metadata i64* %10, metadata !18189, metadata !DIExpression()), !dbg !18190
  store i64 2, i64* %10, align 8, !dbg !18190
  call void @llvm.dbg.declare(metadata i64* %11, metadata !18191, metadata !DIExpression()), !dbg !18192
  store i64 16, i64* %11, align 8, !dbg !18192
  call void @llvm.dbg.declare(metadata i8** %12, metadata !18193, metadata !DIExpression()), !dbg !18194
  store i8* null, i8** %12, align 8, !dbg !18194
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %13, metadata !18195, metadata !DIExpression()), !dbg !18196
  %18 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !18197
  %19 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %18, i32 0, i32 0, !dbg !18199
  %20 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %19, align 8, !dbg !18199
  %21 = call i32 @vsf_sysutil_sockaddr_is_ipv6(%struct.vsf_sysutil_sockaddr* %20), !dbg !18200
  %22 = icmp ne i32 %21, 0, !dbg !18200
  br i1 %22, label %23, label %24, !dbg !18201

23:                                               ; preds = %2
  store i64 10, i64* %10, align 8, !dbg !18202
  store i64 28, i64* %11, align 8, !dbg !18204
  br label %24, !dbg !18205

24:                                               ; preds = %23, %2
  %25 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18206
  %26 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %25, i32 1, i64* %8), !dbg !18207
  store i32 %26, i32* %6, align 4, !dbg !18208
  %27 = load i32, i32* %6, align 4, !dbg !18209
  %28 = icmp ne i32 %27, 0, !dbg !18211
  br i1 %28, label %29, label %31, !dbg !18212

29:                                               ; preds = %24
  %30 = load i32, i32* %6, align 4, !dbg !18213
  store i32 %30, i32* %3, align 4, !dbg !18215
  br label %95, !dbg !18215

31:                                               ; preds = %24
  %32 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18216
  %33 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %32, i32 2, i64* %9), !dbg !18217
  store i32 %33, i32* %6, align 4, !dbg !18218
  %34 = load i32, i32* %6, align 4, !dbg !18219
  %35 = icmp ne i32 %34, 0, !dbg !18221
  br i1 %35, label %36, label %38, !dbg !18222

36:                                               ; preds = %31
  %37 = load i32, i32* %6, align 4, !dbg !18223
  store i32 %37, i32* %3, align 4, !dbg !18225
  br label %95, !dbg !18225

38:                                               ; preds = %31
  %39 = load i64, i64* %9, align 8, !dbg !18226
  %40 = load i64, i64* %11, align 8, !dbg !18228
  %41 = icmp ne i64 %39, %40, !dbg !18229
  br i1 %41, label %42, label %43, !dbg !18230

42:                                               ; preds = %38
  store i32 -1, i32* %3, align 4, !dbg !18231
  br label %95, !dbg !18231

43:                                               ; preds = %38
  %44 = load i64, i64* %11, align 8, !dbg !18233
  %45 = trunc i64 %44 to i32, !dbg !18234
  %46 = call i8* @vsf_sysutil_malloc(i32 %45), !dbg !18235
  store i8* %46, i8** %12, align 8, !dbg !18236
  %47 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18237
  %48 = load i64, i64* %8, align 8, !dbg !18238
  %49 = load i64, i64* %11, align 8, !dbg !18239
  %50 = load i8*, i8** %12, align 8, !dbg !18240
  %51 = call i32 @ptrace_sandbox_get_buf(%struct.pt_sandbox* %47, i64 %48, i64 %49, i8* %50), !dbg !18241
  store i32 %51, i32* %6, align 4, !dbg !18242
  %52 = load i32, i32* %6, align 4, !dbg !18243
  %53 = icmp ne i32 %52, 0, !dbg !18245
  br i1 %53, label %54, label %56, !dbg !18246

54:                                               ; preds = %43
  %55 = load i8*, i8** %12, align 8, !dbg !18247
  call void @vsf_sysutil_free(i8* %55), !dbg !18249
  store i32 -2, i32* %3, align 4, !dbg !18250
  br label %95, !dbg !18250

56:                                               ; preds = %43
  %57 = load i8*, i8** %12, align 8, !dbg !18251
  %58 = bitcast i8* %57 to %struct.sockaddr*, !dbg !18252
  store %struct.sockaddr* %58, %struct.sockaddr** %13, align 8, !dbg !18253
  %59 = load %struct.sockaddr*, %struct.sockaddr** %13, align 8, !dbg !18254
  %60 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %59, i32 0, i32 0, !dbg !18256
  %61 = load i16, i16* %60, align 2, !dbg !18256
  %62 = zext i16 %61 to i64, !dbg !18254
  %63 = load i64, i64* %10, align 8, !dbg !18257
  %64 = icmp ne i64 %62, %63, !dbg !18258
  br i1 %64, label %65, label %67, !dbg !18259

65:                                               ; preds = %56
  %66 = load i8*, i8** %12, align 8, !dbg !18260
  call void @vsf_sysutil_free(i8* %66), !dbg !18262
  store i32 -3, i32* %3, align 4, !dbg !18263
  br label %95, !dbg !18263

67:                                               ; preds = %56
  %68 = load i64, i64* %10, align 8, !dbg !18264
  %69 = icmp eq i64 %68, 2, !dbg !18266
  br i1 %69, label %70, label %77, !dbg !18267

70:                                               ; preds = %67
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %14, metadata !18268, metadata !DIExpression()), !dbg !18270
  %71 = load %struct.sockaddr*, %struct.sockaddr** %13, align 8, !dbg !18271
  %72 = bitcast %struct.sockaddr* %71 to %struct.sockaddr_in*, !dbg !18272
  store %struct.sockaddr_in* %72, %struct.sockaddr_in** %14, align 8, !dbg !18270
  call void @vsf_sysutil_sockaddr_alloc_ipv4(%struct.vsf_sysutil_sockaddr** @connect_validator.p_sockptr), !dbg !18273
  %73 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @connect_validator.p_sockptr, align 8, !dbg !18274
  %74 = load %struct.sockaddr_in*, %struct.sockaddr_in** %14, align 8, !dbg !18275
  %75 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %74, i32 0, i32 2, !dbg !18276
  %76 = bitcast %struct.in_addr* %75 to i8*, !dbg !18277
  call void @vsf_sysutil_sockaddr_set_ipv4addr(%struct.vsf_sysutil_sockaddr* %73, i8* %76), !dbg !18278
  br label %84, !dbg !18279

77:                                               ; preds = %67
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %15, metadata !18280, metadata !DIExpression()), !dbg !18282
  %78 = load %struct.sockaddr*, %struct.sockaddr** %13, align 8, !dbg !18283
  %79 = bitcast %struct.sockaddr* %78 to %struct.sockaddr_in6*, !dbg !18284
  store %struct.sockaddr_in6* %79, %struct.sockaddr_in6** %15, align 8, !dbg !18282
  call void @vsf_sysutil_sockaddr_alloc_ipv6(%struct.vsf_sysutil_sockaddr** @connect_validator.p_sockptr), !dbg !18285
  %80 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @connect_validator.p_sockptr, align 8, !dbg !18286
  %81 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %15, align 8, !dbg !18287
  %82 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %81, i32 0, i32 3, !dbg !18288
  %83 = bitcast %struct.in6_addr* %82 to i8*, !dbg !18289
  call void @vsf_sysutil_sockaddr_set_ipv6addr(%struct.vsf_sysutil_sockaddr* %80, i8* %83), !dbg !18290
  br label %84

84:                                               ; preds = %77, %70
  %85 = load %struct.vsf_session*, %struct.vsf_session** %7, align 8, !dbg !18291
  %86 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %85, i32 0, i32 1, !dbg !18293
  %87 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %86, align 8, !dbg !18293
  %88 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @connect_validator.p_sockptr, align 8, !dbg !18294
  %89 = call i32 @vsf_sysutil_sockaddr_addr_equal(%struct.vsf_sysutil_sockaddr* %87, %struct.vsf_sysutil_sockaddr* %88), !dbg !18295
  %90 = icmp ne i32 %89, 0, !dbg !18295
  br i1 %90, label %93, label %91, !dbg !18296

91:                                               ; preds = %84
  %92 = load i8*, i8** %12, align 8, !dbg !18297
  call void @vsf_sysutil_free(i8* %92), !dbg !18299
  store i32 -4, i32* %3, align 4, !dbg !18300
  br label %95, !dbg !18300

93:                                               ; preds = %84
  %94 = load i8*, i8** %12, align 8, !dbg !18301
  call void @vsf_sysutil_free(i8* %94), !dbg !18302
  store i32 0, i32* %3, align 4, !dbg !18303
  br label %95, !dbg !18303

95:                                               ; preds = %93, %91, %65, %54, %42, %36, %29
  %96 = load i32, i32* %3, align 4, !dbg !18304
  ret i32 %96, !dbg !18304
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @getsockopt_validator(%struct.pt_sandbox*, i8*) #0 !dbg !18305 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pt_sandbox*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.pt_sandbox* %0, %struct.pt_sandbox** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_sandbox** %4, metadata !18306, metadata !DIExpression()), !dbg !18307
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18308, metadata !DIExpression()), !dbg !18309
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18310, metadata !DIExpression()), !dbg !18311
  call void @llvm.dbg.declare(metadata i64* %7, metadata !18312, metadata !DIExpression()), !dbg !18313
  call void @llvm.dbg.declare(metadata i64* %8, metadata !18314, metadata !DIExpression()), !dbg !18315
  %9 = load i8*, i8** %5, align 8, !dbg !18316
  %10 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18317
  %11 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %10, i32 1, i64* %7), !dbg !18318
  store i32 %11, i32* %6, align 4, !dbg !18319
  %12 = load i32, i32* %6, align 4, !dbg !18320
  %13 = icmp ne i32 %12, 0, !dbg !18322
  br i1 %13, label %14, label %16, !dbg !18323

14:                                               ; preds = %2
  %15 = load i32, i32* %6, align 4, !dbg !18324
  store i32 %15, i32* %3, align 4, !dbg !18326
  br label %31, !dbg !18326

16:                                               ; preds = %2
  %17 = load %struct.pt_sandbox*, %struct.pt_sandbox** %4, align 8, !dbg !18327
  %18 = call i32 @ptrace_sandbox_get_socketcall_arg(%struct.pt_sandbox* %17, i32 2, i64* %8), !dbg !18328
  store i32 %18, i32* %6, align 4, !dbg !18329
  %19 = load i32, i32* %6, align 4, !dbg !18330
  %20 = icmp ne i32 %19, 0, !dbg !18332
  br i1 %20, label %21, label %23, !dbg !18333

21:                                               ; preds = %16
  %22 = load i32, i32* %6, align 4, !dbg !18334
  store i32 %22, i32* %3, align 4, !dbg !18336
  br label %31, !dbg !18336

23:                                               ; preds = %16
  %24 = load i64, i64* %7, align 8, !dbg !18337
  %25 = icmp ne i64 %24, 1, !dbg !18339
  br i1 %25, label %29, label %26, !dbg !18340

26:                                               ; preds = %23
  %27 = load i64, i64* %8, align 8, !dbg !18341
  %28 = icmp ne i64 %27, 4, !dbg !18342
  br i1 %28, label %29, label %30, !dbg !18343

29:                                               ; preds = %26, %23
  store i32 -1, i32* %3, align 4, !dbg !18344
  br label %31, !dbg !18344

30:                                               ; preds = %26
  store i32 0, i32* %3, align 4, !dbg !18346
  br label %31, !dbg !18346

31:                                               ; preds = %30, %29, %21, %14
  %32 = load i32, i32* %3, align 4, !dbg !18347
  ret i32 %32, !dbg !18347
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_check_pending_actions(i32, i32, i32) #0 !dbg !18348 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18352, metadata !DIExpression()), !dbg !18353
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18354, metadata !DIExpression()), !dbg !18355
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18356, metadata !DIExpression()), !dbg !18357
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18358, metadata !DIExpression()), !dbg !18359
  %8 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** @s_io_handler, align 8, !dbg !18360
  %9 = icmp ne void (i32, i32, i8*)* %8, null, !dbg !18360
  br i1 %9, label %10, label %21, !dbg !18362

10:                                               ; preds = %3
  %11 = load i32, i32* @s_io_handler_running, align 4, !dbg !18363
  %12 = icmp ne i32 %11, 0, !dbg !18363
  br i1 %12, label %21, label %13, !dbg !18364

13:                                               ; preds = %10
  %14 = load i32, i32* %4, align 4, !dbg !18365
  %15 = icmp eq i32 %14, 1, !dbg !18366
  br i1 %15, label %16, label %21, !dbg !18367

16:                                               ; preds = %13
  store i32 1, i32* @s_io_handler_running, align 4, !dbg !18368
  %17 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** @s_io_handler, align 8, !dbg !18370
  %18 = load i32, i32* %5, align 4, !dbg !18371
  %19 = load i32, i32* %6, align 4, !dbg !18372
  %20 = load i8*, i8** @s_p_io_handler_private, align 8, !dbg !18373
  call void %17(i32 %18, i32 %19, i8* %20), !dbg !18374
  store i32 0, i32* @s_io_handler_running, align 4, !dbg !18375
  br label %21, !dbg !18376

21:                                               ; preds = %16, %13, %10, %3
  store i32 0, i32* %7, align 4, !dbg !18377
  br label %22, !dbg !18379

22:                                               ; preds = %80, %21
  %23 = load i32, i32* %7, align 4, !dbg !18380
  %24 = icmp ult i32 %23, 65, !dbg !18382
  br i1 %24, label %25, label %83, !dbg !18383

25:                                               ; preds = %22
  %26 = load i32, i32* %7, align 4, !dbg !18384
  %27 = zext i32 %26 to i64, !dbg !18387
  %28 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %27, !dbg !18387
  %29 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %28, i32 0, i32 2, !dbg !18388
  %30 = load volatile i32, i32* %29, align 16, !dbg !18388
  %31 = icmp ne i32 %30, 0, !dbg !18387
  br i1 %31, label %32, label %79, !dbg !18389

32:                                               ; preds = %25
  %33 = load i32, i32* %7, align 4, !dbg !18390
  %34 = zext i32 %33 to i64, !dbg !18391
  %35 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %34, !dbg !18391
  %36 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %35, i32 0, i32 3, !dbg !18392
  %37 = load i32, i32* %36, align 4, !dbg !18392
  %38 = icmp ne i32 %37, 0, !dbg !18391
  br i1 %38, label %79, label %39, !dbg !18393

39:                                               ; preds = %32
  %40 = load i32, i32* %7, align 4, !dbg !18394
  %41 = zext i32 %40 to i64, !dbg !18396
  %42 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %41, !dbg !18396
  %43 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %42, i32 0, i32 3, !dbg !18397
  store i32 1, i32* %43, align 4, !dbg !18398
  %44 = load i32, i32* %7, align 4, !dbg !18399
  %45 = zext i32 %44 to i64, !dbg !18401
  %46 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %45, !dbg !18401
  %47 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %46, i32 0, i32 4, !dbg !18402
  %48 = load i32, i32* %47, align 8, !dbg !18402
  %49 = icmp ne i32 %48, 0, !dbg !18401
  br i1 %49, label %50, label %52, !dbg !18403

50:                                               ; preds = %39
  %51 = call i32 @alarm(i32 0) #8, !dbg !18404
  br label %52, !dbg !18406

52:                                               ; preds = %50, %39
  %53 = load i32, i32* %7, align 4, !dbg !18407
  %54 = zext i32 %53 to i64, !dbg !18409
  %55 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %54, !dbg !18409
  %56 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %55, i32 0, i32 0, !dbg !18410
  %57 = load void (i8*)*, void (i8*)** %56, align 16, !dbg !18410
  %58 = icmp ne void (i8*)* %57, null, !dbg !18409
  br i1 %58, label %59, label %74, !dbg !18411

59:                                               ; preds = %52
  %60 = load i32, i32* %7, align 4, !dbg !18412
  %61 = zext i32 %60 to i64, !dbg !18414
  %62 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %61, !dbg !18414
  %63 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %62, i32 0, i32 2, !dbg !18415
  store volatile i32 0, i32* %63, align 16, !dbg !18416
  %64 = load i32, i32* %7, align 4, !dbg !18417
  %65 = zext i32 %64 to i64, !dbg !18418
  %66 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %65, !dbg !18418
  %67 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %66, i32 0, i32 0, !dbg !18419
  %68 = load void (i8*)*, void (i8*)** %67, align 16, !dbg !18419
  %69 = load i32, i32* %7, align 4, !dbg !18420
  %70 = zext i32 %69 to i64, !dbg !18421
  %71 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %70, !dbg !18421
  %72 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %71, i32 0, i32 1, !dbg !18422
  %73 = load i8*, i8** %72, align 8, !dbg !18422
  call void %68(i8* %73), !dbg !18423
  br label %74, !dbg !18424

74:                                               ; preds = %59, %52
  %75 = load i32, i32* %7, align 4, !dbg !18425
  %76 = zext i32 %75 to i64, !dbg !18426
  %77 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %76, !dbg !18426
  %78 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %77, i32 0, i32 3, !dbg !18427
  store i32 0, i32* %78, align 4, !dbg !18428
  br label %79, !dbg !18429

79:                                               ; preds = %74, %32, %25
  br label %80, !dbg !18430

80:                                               ; preds = %79
  %81 = load i32, i32* %7, align 4, !dbg !18431
  %82 = add i32 %81, 1, !dbg !18431
  store i32 %82, i32* %7, align 4, !dbg !18431
  br label %22, !dbg !18432, !llvm.loop !18433

83:                                               ; preds = %22
  ret void, !dbg !18435
}

; Function Attrs: nounwind
declare i32 @alarm(i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_install_sighandler(i32, void (i8*)*, i8*, i32) #0 !dbg !18436 {
  %5 = alloca i32, align 4
  %6 = alloca void (i8*)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18440, metadata !DIExpression()), !dbg !18441
  store void (i8*)* %1, void (i8*)** %6, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %6, metadata !18442, metadata !DIExpression()), !dbg !18443
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !18444, metadata !DIExpression()), !dbg !18445
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !18446, metadata !DIExpression()), !dbg !18447
  call void @llvm.dbg.declare(metadata i32* %9, metadata !18448, metadata !DIExpression()), !dbg !18449
  %10 = load i32, i32* %5, align 4, !dbg !18450
  %11 = call i32 @vsf_sysutil_translate_sig(i32 %10), !dbg !18451
  store i32 %11, i32* %9, align 4, !dbg !18449
  %12 = load i8*, i8** %7, align 8, !dbg !18452
  %13 = load i32, i32* %9, align 4, !dbg !18453
  %14 = sext i32 %13 to i64, !dbg !18454
  %15 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %14, !dbg !18454
  %16 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %15, i32 0, i32 1, !dbg !18455
  store i8* %12, i8** %16, align 8, !dbg !18456
  %17 = load void (i8*)*, void (i8*)** %6, align 8, !dbg !18457
  %18 = load i32, i32* %9, align 4, !dbg !18458
  %19 = sext i32 %18 to i64, !dbg !18459
  %20 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %19, !dbg !18459
  %21 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %20, i32 0, i32 0, !dbg !18460
  store void (i8*)* %17, void (i8*)** %21, align 16, !dbg !18461
  %22 = load i32, i32* %8, align 4, !dbg !18462
  %23 = load i32, i32* %9, align 4, !dbg !18463
  %24 = sext i32 %23 to i64, !dbg !18464
  %25 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %24, !dbg !18464
  %26 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %25, i32 0, i32 4, !dbg !18465
  store i32 %22, i32* %26, align 8, !dbg !18466
  %27 = load i32, i32* %9, align 4, !dbg !18467
  call void @vsf_sysutil_set_sighandler(i32 %27, void (i32)* @vsf_sysutil_common_sighandler), !dbg !18468
  %28 = load i32, i32* %8, align 4, !dbg !18469
  %29 = icmp ne i32 %28, 0, !dbg !18469
  br i1 %29, label %30, label %34, !dbg !18471

30:                                               ; preds = %4
  %31 = load i32, i32* %9, align 4, !dbg !18472
  %32 = icmp ne i32 %31, 14, !dbg !18473
  br i1 %32, label %33, label %34, !dbg !18474

33:                                               ; preds = %30
  call void @vsf_sysutil_set_sighandler(i32 14, void (i32)* @vsf_sysutil_alrm_sighandler), !dbg !18475
  br label %34, !dbg !18477

34:                                               ; preds = %33, %30, %4
  ret void, !dbg !18478
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @vsf_sysutil_translate_sig(i32) #0 !dbg !18479 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18482, metadata !DIExpression()), !dbg !18483
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18484, metadata !DIExpression()), !dbg !18485
  store i32 0, i32* %3, align 4, !dbg !18485
  %4 = load i32, i32* %2, align 4, !dbg !18486
  switch i32 %4, label %11 [
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
    i32 5, label %9
    i32 6, label %10
  ], !dbg !18487

5:                                                ; preds = %1
  store i32 14, i32* %3, align 4, !dbg !18488
  br label %12, !dbg !18490

6:                                                ; preds = %1
  store i32 15, i32* %3, align 4, !dbg !18491
  br label %12, !dbg !18492

7:                                                ; preds = %1
  store i32 17, i32* %3, align 4, !dbg !18493
  br label %12, !dbg !18494

8:                                                ; preds = %1
  store i32 13, i32* %3, align 4, !dbg !18495
  br label %12, !dbg !18496

9:                                                ; preds = %1
  store i32 23, i32* %3, align 4, !dbg !18497
  br label %12, !dbg !18498

10:                                               ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !18499
  br label %12, !dbg !18500

11:                                               ; preds = %1
  call void @bug(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.83.956, i32 0, i32 0)), !dbg !18501
  br label %12, !dbg !18502

12:                                               ; preds = %11, %10, %9, %8, %7, %6, %5
  %13 = load i32, i32* %3, align 4, !dbg !18503
  %14 = icmp slt i32 %13, 0, !dbg !18505
  br i1 %14, label %18, label %15, !dbg !18506

15:                                               ; preds = %12
  %16 = load i32, i32* %3, align 4, !dbg !18507
  %17 = icmp sge i32 %16, 65, !dbg !18508
  br i1 %17, label %18, label %19, !dbg !18509

18:                                               ; preds = %15, %12
  call void @bug(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.84.957, i32 0, i32 0)), !dbg !18510
  br label %19, !dbg !18512

19:                                               ; preds = %18, %15
  %20 = load i32, i32* %3, align 4, !dbg !18513
  ret i32 %20, !dbg !18514
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_sysutil_common_sighandler(i32) #0 !dbg !18515 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18516, metadata !DIExpression()), !dbg !18517
  %3 = load i32, i32* %2, align 4, !dbg !18518
  %4 = icmp slt i32 %3, 0, !dbg !18520
  br i1 %4, label %8, label %5, !dbg !18521

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !18522
  %7 = icmp sge i32 %6, 65, !dbg !18523
  br i1 %7, label %8, label %9, !dbg !18524

8:                                                ; preds = %5, %1
  br label %30, !dbg !18525

9:                                                ; preds = %5
  %10 = load i32, i32* %2, align 4, !dbg !18527
  %11 = sext i32 %10 to i64, !dbg !18529
  %12 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %11, !dbg !18529
  %13 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %12, i32 0, i32 0, !dbg !18530
  %14 = load void (i8*)*, void (i8*)** %13, align 16, !dbg !18530
  %15 = icmp ne void (i8*)* %14, null, !dbg !18529
  br i1 %15, label %16, label %30, !dbg !18531

16:                                               ; preds = %9
  %17 = load i32, i32* %2, align 4, !dbg !18532
  %18 = sext i32 %17 to i64, !dbg !18534
  %19 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %18, !dbg !18534
  %20 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %19, i32 0, i32 2, !dbg !18535
  store volatile i32 1, i32* %20, align 16, !dbg !18536
  %21 = load i32, i32* %2, align 4, !dbg !18537
  %22 = sext i32 %21 to i64, !dbg !18539
  %23 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %22, !dbg !18539
  %24 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %23, i32 0, i32 4, !dbg !18540
  %25 = load i32, i32* %24, align 8, !dbg !18540
  %26 = icmp ne i32 %25, 0, !dbg !18539
  br i1 %26, label %27, label %29, !dbg !18541

27:                                               ; preds = %16
  %28 = call i32 @alarm(i32 1) #8, !dbg !18542
  br label %29, !dbg !18544

29:                                               ; preds = %27, %16
  br label %30, !dbg !18545

30:                                               ; preds = %8, %29, %9
  ret void, !dbg !18546
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_sysutil_set_sighandler(i32, void (i32)*) #0 !dbg !18547 {
  %3 = alloca i32, align 4
  %4 = alloca void (i32)*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.sigaction, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18550, metadata !DIExpression()), !dbg !18551
  store void (i32)* %1, void (i32)** %4, align 8
  call void @llvm.dbg.declare(metadata void (i32)** %4, metadata !18552, metadata !DIExpression()), !dbg !18553
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18554, metadata !DIExpression()), !dbg !18555
  call void @llvm.dbg.declare(metadata %struct.sigaction* %6, metadata !18556, metadata !DIExpression()), !dbg !18650
  %7 = bitcast %struct.sigaction* %6 to i8*, !dbg !18651
  call void @vsf_sysutil_memclr(i8* %7, i32 152), !dbg !18652
  %8 = load void (i32)*, void (i32)** %4, align 8, !dbg !18653
  %9 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %6, i32 0, i32 0, !dbg !18654
  %10 = bitcast %union.anon.1* %9 to void (i32)**, !dbg !18654
  store void (i32)* %8, void (i32)** %10, align 8, !dbg !18655
  %11 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %6, i32 0, i32 1, !dbg !18656
  %12 = call i32 @sigfillset(%struct.__sigset_t* %11) #8, !dbg !18657
  store i32 %12, i32* %5, align 4, !dbg !18658
  %13 = load i32, i32* %5, align 4, !dbg !18659
  %14 = icmp ne i32 %13, 0, !dbg !18661
  br i1 %14, label %15, label %16, !dbg !18662

15:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85.954, i32 0, i32 0)), !dbg !18663
  br label %16, !dbg !18665

16:                                               ; preds = %15, %2
  %17 = load i32, i32* %3, align 4, !dbg !18666
  %18 = call i32 @sigaction(i32 %17, %struct.sigaction* %6, %struct.sigaction* null) #8, !dbg !18667
  store i32 %18, i32* %5, align 4, !dbg !18668
  %19 = load i32, i32* %5, align 4, !dbg !18669
  %20 = icmp ne i32 %19, 0, !dbg !18671
  br i1 %20, label %21, label %22, !dbg !18672

21:                                               ; preds = %16
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86.955, i32 0, i32 0)), !dbg !18673
  br label %22, !dbg !18675

22:                                               ; preds = %21, %16
  ret void, !dbg !18676
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_sysutil_alrm_sighandler(i32) #0 !dbg !18677 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18678, metadata !DIExpression()), !dbg !18679
  %3 = load i32, i32* %2, align 4, !dbg !18680
  %4 = call i32 @alarm(i32 1) #8, !dbg !18681
  ret void, !dbg !18682
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_memclr(i8*, i32) #0 !dbg !18683 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !18686, metadata !DIExpression()), !dbg !18687
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18688, metadata !DIExpression()), !dbg !18689
  %5 = load i32, i32* %4, align 4, !dbg !18690
  %6 = icmp eq i32 %5, 0, !dbg !18692
  br i1 %6, label %7, label %8, !dbg !18693

7:                                                ; preds = %2
  br label %12, !dbg !18694

8:                                                ; preds = %2
  %9 = load i8*, i8** %3, align 8, !dbg !18696
  %10 = load i32, i32* %4, align 4, !dbg !18697
  %11 = zext i32 %10 to i64, !dbg !18697
  call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 0, i64 %11, i1 false), !dbg !18698
  br label %12, !dbg !18699

12:                                               ; preds = %8, %7
  ret void, !dbg !18699
}

; Function Attrs: nounwind
declare i32 @sigfillset(%struct.__sigset_t*) #3

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_default_sig(i32) #0 !dbg !18700 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18703, metadata !DIExpression()), !dbg !18704
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18705, metadata !DIExpression()), !dbg !18706
  %4 = load i32, i32* %2, align 4, !dbg !18707
  %5 = call i32 @vsf_sysutil_translate_sig(i32 %4), !dbg !18708
  store i32 %5, i32* %3, align 4, !dbg !18706
  %6 = load i32, i32* %3, align 4, !dbg !18709
  call void @vsf_sysutil_set_sighandler(i32 %6, void (i32)* null), !dbg !18710
  %7 = load i32, i32* %3, align 4, !dbg !18711
  %8 = sext i32 %7 to i64, !dbg !18712
  %9 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %8, !dbg !18712
  %10 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %9, i32 0, i32 1, !dbg !18713
  store i8* null, i8** %10, align 8, !dbg !18714
  %11 = load i32, i32* %3, align 4, !dbg !18715
  %12 = sext i32 %11 to i64, !dbg !18716
  %13 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %12, !dbg !18716
  %14 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %13, i32 0, i32 0, !dbg !18717
  store void (i8*)* null, void (i8*)** %14, align 16, !dbg !18718
  ret void, !dbg !18719
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_install_null_sighandler(i32) #0 !dbg !18720 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18721, metadata !DIExpression()), !dbg !18722
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18723, metadata !DIExpression()), !dbg !18724
  %4 = load i32, i32* %2, align 4, !dbg !18725
  %5 = call i32 @vsf_sysutil_translate_sig(i32 %4), !dbg !18726
  store i32 %5, i32* %3, align 4, !dbg !18724
  %6 = load i32, i32* %3, align 4, !dbg !18727
  %7 = sext i32 %6 to i64, !dbg !18728
  %8 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %7, !dbg !18728
  %9 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %8, i32 0, i32 1, !dbg !18729
  store i8* null, i8** %9, align 8, !dbg !18730
  %10 = load i32, i32* %3, align 4, !dbg !18731
  %11 = sext i32 %10 to i64, !dbg !18732
  %12 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %11, !dbg !18732
  %13 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %12, i32 0, i32 0, !dbg !18733
  store void (i8*)* null, void (i8*)** %13, align 16, !dbg !18734
  %14 = load i32, i32* %3, align 4, !dbg !18735
  call void @vsf_sysutil_set_sighandler(i32 %14, void (i32)* @vsf_sysutil_common_sighandler), !dbg !18736
  ret void, !dbg !18737
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_install_async_sighandler(i32, void (i32)*) #0 !dbg !18738 {
  %3 = alloca i32, align 4
  %4 = alloca void (i32)*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !18742, metadata !DIExpression()), !dbg !18743
  store void (i32)* %1, void (i32)** %4, align 8
  call void @llvm.dbg.declare(metadata void (i32)** %4, metadata !18744, metadata !DIExpression()), !dbg !18745
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18746, metadata !DIExpression()), !dbg !18747
  %6 = load i32, i32* %3, align 4, !dbg !18748
  %7 = call i32 @vsf_sysutil_translate_sig(i32 %6), !dbg !18749
  store i32 %7, i32* %5, align 4, !dbg !18747
  %8 = load i32, i32* %5, align 4, !dbg !18750
  %9 = sext i32 %8 to i64, !dbg !18751
  %10 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %9, !dbg !18751
  %11 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %10, i32 0, i32 1, !dbg !18752
  store i8* null, i8** %11, align 8, !dbg !18753
  %12 = load i32, i32* %5, align 4, !dbg !18754
  %13 = sext i32 %12 to i64, !dbg !18755
  %14 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %13, !dbg !18755
  %15 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %14, i32 0, i32 0, !dbg !18756
  store void (i8*)* null, void (i8*)** %15, align 16, !dbg !18757
  %16 = load i32, i32* %3, align 4, !dbg !18758
  call void @vsf_sysutil_block_sig(i32 %16), !dbg !18759
  %17 = load i32, i32* %5, align 4, !dbg !18760
  %18 = load void (i32)*, void (i32)** %4, align 8, !dbg !18761
  call void @vsf_sysutil_set_sighandler(i32 %17, void (i32)* %18), !dbg !18762
  ret void, !dbg !18763
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_block_sig(i32) #0 !dbg !18764 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.__sigset_t, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18765, metadata !DIExpression()), !dbg !18766
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %3, metadata !18767, metadata !DIExpression()), !dbg !18770
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18771, metadata !DIExpression()), !dbg !18772
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18773, metadata !DIExpression()), !dbg !18774
  %6 = load i32, i32* %2, align 4, !dbg !18775
  %7 = call i32 @vsf_sysutil_translate_sig(i32 %6), !dbg !18776
  store i32 %7, i32* %5, align 4, !dbg !18774
  %8 = call i32 @sigemptyset(%struct.__sigset_t* %3) #8, !dbg !18777
  store i32 %8, i32* %4, align 4, !dbg !18778
  %9 = load i32, i32* %4, align 4, !dbg !18779
  %10 = icmp ne i32 %9, 0, !dbg !18781
  br i1 %10, label %11, label %12, !dbg !18782

11:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.960, i32 0, i32 0)), !dbg !18783
  br label %12, !dbg !18785

12:                                               ; preds = %11, %1
  %13 = load i32, i32* %5, align 4, !dbg !18786
  %14 = call i32 @sigaddset(%struct.__sigset_t* %3, i32 %13) #8, !dbg !18787
  store i32 %14, i32* %4, align 4, !dbg !18788
  %15 = load i32, i32* %4, align 4, !dbg !18789
  %16 = icmp ne i32 %15, 0, !dbg !18791
  br i1 %16, label %17, label %18, !dbg !18792

17:                                               ; preds = %12
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.961, i32 0, i32 0)), !dbg !18793
  br label %18, !dbg !18795

18:                                               ; preds = %17, %12
  %19 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* %3, %struct.__sigset_t* null) #8, !dbg !18796
  store i32 %19, i32* %4, align 4, !dbg !18797
  %20 = load i32, i32* %4, align 4, !dbg !18798
  %21 = icmp ne i32 %20, 0, !dbg !18800
  br i1 %21, label %22, label %23, !dbg !18801

22:                                               ; preds = %18
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.962, i32 0, i32 0)), !dbg !18802
  br label %23, !dbg !18804

23:                                               ; preds = %22, %18
  ret void, !dbg !18805
}

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) #3

; Function Attrs: nounwind
declare i32 @sigaddset(%struct.__sigset_t*, i32) #3

; Function Attrs: nounwind
declare i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_unblock_sig(i32) #0 !dbg !18806 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.__sigset_t, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18807, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %3, metadata !18809, metadata !DIExpression()), !dbg !18810
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18811, metadata !DIExpression()), !dbg !18812
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18813, metadata !DIExpression()), !dbg !18814
  %6 = load i32, i32* %2, align 4, !dbg !18815
  %7 = call i32 @vsf_sysutil_translate_sig(i32 %6), !dbg !18816
  store i32 %7, i32* %5, align 4, !dbg !18814
  %8 = call i32 @sigemptyset(%struct.__sigset_t* %3) #8, !dbg !18817
  store i32 %8, i32* %4, align 4, !dbg !18818
  %9 = load i32, i32* %4, align 4, !dbg !18819
  %10 = icmp ne i32 %9, 0, !dbg !18821
  br i1 %10, label %11, label %12, !dbg !18822

11:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.960, i32 0, i32 0)), !dbg !18823
  br label %12, !dbg !18825

12:                                               ; preds = %11, %1
  %13 = load i32, i32* %5, align 4, !dbg !18826
  %14 = call i32 @sigaddset(%struct.__sigset_t* %3, i32 %13) #8, !dbg !18827
  store i32 %14, i32* %4, align 4, !dbg !18828
  %15 = load i32, i32* %4, align 4, !dbg !18829
  %16 = icmp ne i32 %15, 0, !dbg !18831
  br i1 %16, label %17, label %18, !dbg !18832

17:                                               ; preds = %12
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.961, i32 0, i32 0)), !dbg !18833
  br label %18, !dbg !18835

18:                                               ; preds = %17, %12
  %19 = call i32 @sigprocmask(i32 1, %struct.__sigset_t* %3, %struct.__sigset_t* null) #8, !dbg !18836
  store i32 %19, i32* %4, align 4, !dbg !18837
  %20 = load i32, i32* %4, align 4, !dbg !18838
  %21 = icmp ne i32 %20, 0, !dbg !18840
  br i1 %21, label %22, label %23, !dbg !18841

22:                                               ; preds = %18
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.962, i32 0, i32 0)), !dbg !18842
  br label %23, !dbg !18844

23:                                               ; preds = %22, %18
  ret void, !dbg !18845
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_install_io_handler(void (i32, i32, i8*)*, i8*) #0 !dbg !18846 {
  %3 = alloca void (i32, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  store void (i32, i32, i8*)* %0, void (i32, i32, i8*)** %3, align 8
  call void @llvm.dbg.declare(metadata void (i32, i32, i8*)** %3, metadata !18849, metadata !DIExpression()), !dbg !18850
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !18851, metadata !DIExpression()), !dbg !18852
  %5 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** @s_io_handler, align 8, !dbg !18853
  %6 = icmp ne void (i32, i32, i8*)* %5, null, !dbg !18855
  br i1 %6, label %7, label %8, !dbg !18856

7:                                                ; preds = %2
  call void @bug(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.965, i32 0, i32 0)), !dbg !18857
  br label %8, !dbg !18859

8:                                                ; preds = %7, %2
  %9 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %3, align 8, !dbg !18860
  store void (i32, i32, i8*)* %9, void (i32, i32, i8*)** @s_io_handler, align 8, !dbg !18861
  %10 = load i8*, i8** %4, align 8, !dbg !18862
  store i8* %10, i8** @s_p_io_handler_private, align 8, !dbg !18863
  ret void, !dbg !18864
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_uninstall_io_handler() #0 !dbg !18865 {
  %1 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** @s_io_handler, align 8, !dbg !18866
  %2 = icmp eq void (i32, i32, i8*)* %1, null, !dbg !18868
  br i1 %2, label %3, label %4, !dbg !18869

3:                                                ; preds = %0
  call void @bug(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.968, i32 0, i32 0)), !dbg !18870
  br label %4, !dbg !18872

4:                                                ; preds = %3, %0
  store void (i32, i32, i8*)* null, void (i32, i32, i8*)** @s_io_handler, align 8, !dbg !18873
  store i8* null, i8** @s_p_io_handler_private, align 8, !dbg !18874
  ret void, !dbg !18875
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_alarm(i32) #0 !dbg !18876 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !18879, metadata !DIExpression()), !dbg !18880
  %3 = load i32, i32* %2, align 4, !dbg !18881
  %4 = call i32 @alarm(i32 %3) #8, !dbg !18882
  ret void, !dbg !18883
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_clear_alarm() #0 !dbg !18884 {
  call void @vsf_sysutil_set_alarm(i32 0), !dbg !18885
  ret void, !dbg !18886
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_read(i32, i8*, i32) #0 !dbg !18887 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18890, metadata !DIExpression()), !dbg !18891
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18892, metadata !DIExpression()), !dbg !18893
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18894, metadata !DIExpression()), !dbg !18895
  br label %9, !dbg !18896

9:                                                ; preds = %3, %25
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18897, metadata !DIExpression()), !dbg !18899
  %10 = load i32, i32* %4, align 4, !dbg !18900
  %11 = load i8*, i8** %5, align 8, !dbg !18901
  %12 = load i32, i32* %6, align 4, !dbg !18902
  %13 = zext i32 %12 to i64, !dbg !18902
  %14 = call i64 @read(i32 %10, i8* %11, i64 %13), !dbg !18903
  %15 = trunc i64 %14 to i32, !dbg !18903
  store i32 %15, i32* %7, align 4, !dbg !18899
  call void @llvm.dbg.declare(metadata i32* %8, metadata !18904, metadata !DIExpression()), !dbg !18905
  %16 = call i32* @__errno_location() #9, !dbg !18906
  %17 = load i32, i32* %16, align 4, !dbg !18906
  store i32 %17, i32* %8, align 4, !dbg !18905
  %18 = load i32, i32* %7, align 4, !dbg !18907
  %19 = load i32, i32* %4, align 4, !dbg !18908
  call void @vsf_sysutil_check_pending_actions(i32 1, i32 %18, i32 %19), !dbg !18909
  %20 = load i32, i32* %7, align 4, !dbg !18910
  %21 = icmp slt i32 %20, 0, !dbg !18912
  br i1 %21, label %22, label %26, !dbg !18913

22:                                               ; preds = %9
  %23 = load i32, i32* %8, align 4, !dbg !18914
  %24 = icmp eq i32 %23, 4, !dbg !18915
  br i1 %24, label %25, label %26, !dbg !18916

25:                                               ; preds = %22
  br label %9, !dbg !18917, !llvm.loop !18919

26:                                               ; preds = %22, %9
  %27 = load i32, i32* %7, align 4, !dbg !18921
  ret i32 %27, !dbg !18922
}

declare i64 @read(i32, i8*, i64) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_write(i32, i8*, i32) #0 !dbg !18923 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !18926, metadata !DIExpression()), !dbg !18927
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18928, metadata !DIExpression()), !dbg !18929
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18930, metadata !DIExpression()), !dbg !18931
  br label %9, !dbg !18932

9:                                                ; preds = %3, %25
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18933, metadata !DIExpression()), !dbg !18935
  %10 = load i32, i32* %4, align 4, !dbg !18936
  %11 = load i8*, i8** %5, align 8, !dbg !18937
  %12 = load i32, i32* %6, align 4, !dbg !18938
  %13 = zext i32 %12 to i64, !dbg !18938
  %14 = call i64 @write(i32 %10, i8* %11, i64 %13), !dbg !18939
  %15 = trunc i64 %14 to i32, !dbg !18939
  store i32 %15, i32* %7, align 4, !dbg !18935
  call void @llvm.dbg.declare(metadata i32* %8, metadata !18940, metadata !DIExpression()), !dbg !18941
  %16 = call i32* @__errno_location() #9, !dbg !18942
  %17 = load i32, i32* %16, align 4, !dbg !18942
  store i32 %17, i32* %8, align 4, !dbg !18941
  %18 = load i32, i32* %7, align 4, !dbg !18943
  %19 = load i32, i32* %4, align 4, !dbg !18944
  call void @vsf_sysutil_check_pending_actions(i32 1, i32 %18, i32 %19), !dbg !18945
  %20 = load i32, i32* %7, align 4, !dbg !18946
  %21 = icmp slt i32 %20, 0, !dbg !18948
  br i1 %21, label %22, label %26, !dbg !18949

22:                                               ; preds = %9
  %23 = load i32, i32* %8, align 4, !dbg !18950
  %24 = icmp eq i32 %23, 4, !dbg !18951
  br i1 %24, label %25, label %26, !dbg !18952

25:                                               ; preds = %22
  br label %9, !dbg !18953, !llvm.loop !18955

26:                                               ; preds = %22, %9
  %27 = load i32, i32* %7, align 4, !dbg !18957
  ret i32 %27, !dbg !18958
}

declare i64 @write(i32, i8*, i64) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_read_loop(i32, i8*, i32) #0 !dbg !18959 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18962, metadata !DIExpression()), !dbg !18963
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !18964, metadata !DIExpression()), !dbg !18965
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18966, metadata !DIExpression()), !dbg !18967
  call void @llvm.dbg.declare(metadata i32* %8, metadata !18968, metadata !DIExpression()), !dbg !18969
  call void @llvm.dbg.declare(metadata i32* %9, metadata !18970, metadata !DIExpression()), !dbg !18971
  store i32 0, i32* %9, align 4, !dbg !18971
  %10 = load i32, i32* %7, align 4, !dbg !18972
  %11 = icmp ugt i32 %10, 2147483647, !dbg !18974
  br i1 %11, label %12, label %13, !dbg !18975

12:                                               ; preds = %3
  call void @die(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.977, i32 0, i32 0)), !dbg !18976
  br label %13, !dbg !18978

13:                                               ; preds = %12, %3
  br label %14, !dbg !18979

14:                                               ; preds = %13, %48
  %15 = load i32, i32* %5, align 4, !dbg !18980
  %16 = load i8*, i8** %6, align 8, !dbg !18982
  %17 = load i32, i32* %9, align 4, !dbg !18983
  %18 = sext i32 %17 to i64, !dbg !18984
  %19 = getelementptr inbounds i8, i8* %16, i64 %18, !dbg !18984
  %20 = load i32, i32* %7, align 4, !dbg !18985
  %21 = call i32 @vsf_sysutil_read(i32 %15, i8* %19, i32 %20), !dbg !18986
  store i32 %21, i32* %8, align 4, !dbg !18987
  %22 = load i32, i32* %8, align 4, !dbg !18988
  %23 = icmp slt i32 %22, 0, !dbg !18990
  br i1 %23, label %24, label %26, !dbg !18991

24:                                               ; preds = %14
  %25 = load i32, i32* %8, align 4, !dbg !18992
  store i32 %25, i32* %4, align 4, !dbg !18994
  br label %49, !dbg !18994

26:                                               ; preds = %14
  %27 = load i32, i32* %8, align 4, !dbg !18995
  %28 = icmp eq i32 %27, 0, !dbg !18997
  br i1 %28, label %29, label %31, !dbg !18998

29:                                               ; preds = %26
  %30 = load i32, i32* %9, align 4, !dbg !18999
  store i32 %30, i32* %4, align 4, !dbg !19001
  br label %49, !dbg !19001

31:                                               ; preds = %26
  br label %32

32:                                               ; preds = %31
  %33 = load i32, i32* %8, align 4, !dbg !19002
  %34 = load i32, i32* %7, align 4, !dbg !19004
  %35 = icmp ugt i32 %33, %34, !dbg !19005
  br i1 %35, label %36, label %37, !dbg !19006

36:                                               ; preds = %32
  call void @die(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.978, i32 0, i32 0)), !dbg !19007
  br label %37, !dbg !19009

37:                                               ; preds = %36, %32
  %38 = load i32, i32* %8, align 4, !dbg !19010
  %39 = load i32, i32* %9, align 4, !dbg !19011
  %40 = add nsw i32 %39, %38, !dbg !19011
  store i32 %40, i32* %9, align 4, !dbg !19011
  %41 = load i32, i32* %8, align 4, !dbg !19012
  %42 = load i32, i32* %7, align 4, !dbg !19013
  %43 = sub i32 %42, %41, !dbg !19013
  store i32 %43, i32* %7, align 4, !dbg !19013
  %44 = load i32, i32* %7, align 4, !dbg !19014
  %45 = icmp eq i32 %44, 0, !dbg !19016
  br i1 %45, label %46, label %48, !dbg !19017

46:                                               ; preds = %37
  %47 = load i32, i32* %9, align 4, !dbg !19018
  store i32 %47, i32* %4, align 4, !dbg !19020
  br label %49, !dbg !19020

48:                                               ; preds = %37
  br label %14, !dbg !18979, !llvm.loop !19021

49:                                               ; preds = %46, %29, %24
  %50 = load i32, i32* %4, align 4, !dbg !19023
  ret i32 %50, !dbg !19023
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_write_loop(i32, i8*, i32) #0 !dbg !19024 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !19027, metadata !DIExpression()), !dbg !19028
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19029, metadata !DIExpression()), !dbg !19030
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19031, metadata !DIExpression()), !dbg !19032
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19033, metadata !DIExpression()), !dbg !19034
  call void @llvm.dbg.declare(metadata i32* %9, metadata !19035, metadata !DIExpression()), !dbg !19036
  store i32 0, i32* %9, align 4, !dbg !19036
  %10 = load i32, i32* %7, align 4, !dbg !19037
  %11 = icmp ugt i32 %10, 2147483647, !dbg !19039
  br i1 %11, label %12, label %13, !dbg !19040

12:                                               ; preds = %3
  call void @die(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7.981, i32 0, i32 0)), !dbg !19041
  br label %13, !dbg !19043

13:                                               ; preds = %12, %3
  br label %14, !dbg !19044

14:                                               ; preds = %13, %48
  %15 = load i32, i32* %5, align 4, !dbg !19045
  %16 = load i8*, i8** %6, align 8, !dbg !19047
  %17 = load i32, i32* %9, align 4, !dbg !19048
  %18 = sext i32 %17 to i64, !dbg !19049
  %19 = getelementptr inbounds i8, i8* %16, i64 %18, !dbg !19049
  %20 = load i32, i32* %7, align 4, !dbg !19050
  %21 = call i32 @vsf_sysutil_write(i32 %15, i8* %19, i32 %20), !dbg !19051
  store i32 %21, i32* %8, align 4, !dbg !19052
  %22 = load i32, i32* %8, align 4, !dbg !19053
  %23 = icmp slt i32 %22, 0, !dbg !19055
  br i1 %23, label %24, label %26, !dbg !19056

24:                                               ; preds = %14
  %25 = load i32, i32* %8, align 4, !dbg !19057
  store i32 %25, i32* %4, align 4, !dbg !19059
  br label %49, !dbg !19059

26:                                               ; preds = %14
  %27 = load i32, i32* %8, align 4, !dbg !19060
  %28 = icmp eq i32 %27, 0, !dbg !19062
  br i1 %28, label %29, label %31, !dbg !19063

29:                                               ; preds = %26
  %30 = load i32, i32* %9, align 4, !dbg !19064
  store i32 %30, i32* %4, align 4, !dbg !19066
  br label %49, !dbg !19066

31:                                               ; preds = %26
  br label %32

32:                                               ; preds = %31
  %33 = load i32, i32* %8, align 4, !dbg !19067
  %34 = load i32, i32* %7, align 4, !dbg !19069
  %35 = icmp ugt i32 %33, %34, !dbg !19070
  br i1 %35, label %36, label %37, !dbg !19071

36:                                               ; preds = %32
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8.982, i32 0, i32 0)), !dbg !19072
  br label %37, !dbg !19074

37:                                               ; preds = %36, %32
  %38 = load i32, i32* %8, align 4, !dbg !19075
  %39 = load i32, i32* %9, align 4, !dbg !19076
  %40 = add nsw i32 %39, %38, !dbg !19076
  store i32 %40, i32* %9, align 4, !dbg !19076
  %41 = load i32, i32* %8, align 4, !dbg !19077
  %42 = load i32, i32* %7, align 4, !dbg !19078
  %43 = sub i32 %42, %41, !dbg !19078
  store i32 %43, i32* %7, align 4, !dbg !19078
  %44 = load i32, i32* %7, align 4, !dbg !19079
  %45 = icmp eq i32 %44, 0, !dbg !19081
  br i1 %45, label %46, label %48, !dbg !19082

46:                                               ; preds = %37
  %47 = load i32, i32* %9, align 4, !dbg !19083
  store i32 %47, i32* %4, align 4, !dbg !19085
  br label %49, !dbg !19085

48:                                               ; preds = %37
  br label %14, !dbg !19044, !llvm.loop !19086

49:                                               ; preds = %46, %29, %24
  %50 = load i32, i32* %4, align 4, !dbg !19088
  ret i32 %50, !dbg !19088
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_get_file_offset(i32) #0 !dbg !19089 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19092, metadata !DIExpression()), !dbg !19093
  call void @llvm.dbg.declare(metadata i64* %3, metadata !19094, metadata !DIExpression()), !dbg !19095
  %4 = load i32, i32* %2, align 4, !dbg !19096
  %5 = call i64 @lseek64(i32 %4, i64 0, i32 1) #8, !dbg !19097
  store i64 %5, i64* %3, align 8, !dbg !19095
  %6 = load i64, i64* %3, align 8, !dbg !19098
  %7 = icmp slt i64 %6, 0, !dbg !19100
  br i1 %7, label %8, label %9, !dbg !19101

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.985, i32 0, i32 0)), !dbg !19102
  br label %9, !dbg !19104

9:                                                ; preds = %8, %1
  %10 = load i64, i64* %3, align 8, !dbg !19105
  ret i64 %10, !dbg !19106
}

; Function Attrs: nounwind
declare i64 @lseek64(i32, i64, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_lseek_to(i32, i64) #0 !dbg !19107 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19110, metadata !DIExpression()), !dbg !19111
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !19112, metadata !DIExpression()), !dbg !19113
  call void @llvm.dbg.declare(metadata i64* %5, metadata !19114, metadata !DIExpression()), !dbg !19115
  %6 = load i64, i64* %4, align 8, !dbg !19116
  %7 = icmp slt i64 %6, 0, !dbg !19118
  br i1 %7, label %8, label %9, !dbg !19119

8:                                                ; preds = %2
  call void @die(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10.988, i32 0, i32 0)), !dbg !19120
  br label %9, !dbg !19122

9:                                                ; preds = %8, %2
  %10 = load i32, i32* %3, align 4, !dbg !19123
  %11 = load i64, i64* %4, align 8, !dbg !19124
  %12 = call i64 @lseek64(i32 %10, i64 %11, i32 0) #8, !dbg !19125
  store i64 %12, i64* %5, align 8, !dbg !19126
  %13 = load i64, i64* %5, align 8, !dbg !19127
  %14 = icmp slt i64 %13, 0, !dbg !19129
  br i1 %14, label %15, label %16, !dbg !19130

15:                                               ; preds = %9
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.985, i32 0, i32 0)), !dbg !19131
  br label %16, !dbg !19133

16:                                               ; preds = %15, %9
  ret void, !dbg !19134
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_lseek_end(i32) #0 !dbg !19135 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19138, metadata !DIExpression()), !dbg !19139
  call void @llvm.dbg.declare(metadata i64* %3, metadata !19140, metadata !DIExpression()), !dbg !19141
  %4 = load i32, i32* %2, align 4, !dbg !19142
  %5 = call i64 @lseek64(i32 %4, i64 0, i32 2) #8, !dbg !19143
  store i64 %5, i64* %3, align 8, !dbg !19144
  %6 = load i64, i64* %3, align 8, !dbg !19145
  %7 = icmp slt i64 %6, 0, !dbg !19147
  br i1 %7, label %8, label %9, !dbg !19148

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.985, i32 0, i32 0)), !dbg !19149
  br label %9, !dbg !19151

9:                                                ; preds = %8, %1
  ret void, !dbg !19152
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_malloc(i32) #0 !dbg !19153 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19156, metadata !DIExpression()), !dbg !19157
  call void @llvm.dbg.declare(metadata i8** %3, metadata !19158, metadata !DIExpression()), !dbg !19159
  %4 = load i32, i32* %2, align 4, !dbg !19160
  %5 = icmp eq i32 %4, 0, !dbg !19162
  br i1 %5, label %9, label %6, !dbg !19163

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4, !dbg !19164
  %8 = icmp ugt i32 %7, 2147483647, !dbg !19165
  br i1 %8, label %9, label %10, !dbg !19166

9:                                                ; preds = %6, %1
  call void @bug(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11.993, i32 0, i32 0)), !dbg !19167
  br label %10, !dbg !19169

10:                                               ; preds = %9, %6
  %11 = load i32, i32* %2, align 4, !dbg !19170
  %12 = zext i32 %11 to i64, !dbg !19170
  %13 = call noalias i8* @malloc(i64 %12) #8, !dbg !19171
  store i8* %13, i8** %3, align 8, !dbg !19172
  %14 = load i8*, i8** %3, align 8, !dbg !19173
  %15 = icmp eq i8* %14, null, !dbg !19175
  br i1 %15, label %16, label %17, !dbg !19176

16:                                               ; preds = %10
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12.994, i32 0, i32 0)), !dbg !19177
  br label %17, !dbg !19179

17:                                               ; preds = %16, %10
  %18 = load i8*, i8** %3, align 8, !dbg !19180
  ret i8* %18, !dbg !19181
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_realloc(i8*, i32) #0 !dbg !19182 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !19185, metadata !DIExpression()), !dbg !19186
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19187, metadata !DIExpression()), !dbg !19188
  call void @llvm.dbg.declare(metadata i8** %5, metadata !19189, metadata !DIExpression()), !dbg !19190
  %6 = load i32, i32* %4, align 4, !dbg !19191
  %7 = icmp eq i32 %6, 0, !dbg !19193
  br i1 %7, label %11, label %8, !dbg !19194

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4, !dbg !19195
  %10 = icmp ugt i32 %9, 2147483647, !dbg !19196
  br i1 %10, label %11, label %12, !dbg !19197

11:                                               ; preds = %8, %2
  call void @bug(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.997, i32 0, i32 0)), !dbg !19198
  br label %12, !dbg !19200

12:                                               ; preds = %11, %8
  %13 = load i8*, i8** %3, align 8, !dbg !19201
  %14 = load i32, i32* %4, align 4, !dbg !19202
  %15 = zext i32 %14 to i64, !dbg !19202
  %16 = call i8* @realloc(i8* %13, i64 %15) #8, !dbg !19203
  store i8* %16, i8** %5, align 8, !dbg !19204
  %17 = load i8*, i8** %5, align 8, !dbg !19205
  %18 = icmp eq i8* %17, null, !dbg !19207
  br i1 %18, label %19, label %20, !dbg !19208

19:                                               ; preds = %12
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.998, i32 0, i32 0)), !dbg !19209
  br label %20, !dbg !19211

20:                                               ; preds = %19, %12
  %21 = load i8*, i8** %5, align 8, !dbg !19212
  ret i8* %21, !dbg !19213
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_free(i8*) #0 !dbg !19214 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19215, metadata !DIExpression()), !dbg !19216
  %3 = load i8*, i8** %2, align 8, !dbg !19217
  %4 = icmp eq i8* %3, null, !dbg !19219
  br i1 %4, label %5, label %6, !dbg !19220

5:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15.1001, i32 0, i32 0)), !dbg !19221
  br label %6, !dbg !19223

6:                                                ; preds = %5, %1
  %7 = load i8*, i8** %2, align 8, !dbg !19224
  call void @free(i8* %7) #8, !dbg !19225
  ret void, !dbg !19226
}

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_getpid() #0 !dbg !19227 {
  %1 = load i32, i32* @s_current_pid, align 4, !dbg !19228
  %2 = icmp eq i32 %1, -1, !dbg !19230
  br i1 %2, label %3, label %5, !dbg !19231

3:                                                ; preds = %0
  %4 = call i32 (...) bitcast (i32 ()* @vsf_sysutil_getpid_nocache to i32 (...)*)(), !dbg !19232
  store i32 %4, i32* @s_current_pid, align 4, !dbg !19234
  br label %5, !dbg !19235

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @s_current_pid, align 4, !dbg !19236
  ret i32 %6, !dbg !19237
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_fork() #0 !dbg !19238 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !19239, metadata !DIExpression()), !dbg !19240
  %2 = call i32 @vsf_sysutil_fork_failok(), !dbg !19241
  store i32 %2, i32* %1, align 4, !dbg !19240
  %3 = load i32, i32* %1, align 4, !dbg !19242
  %4 = icmp slt i32 %3, 0, !dbg !19244
  br i1 %4, label %5, label %6, !dbg !19245

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.1008, i32 0, i32 0)), !dbg !19246
  br label %6, !dbg !19248

6:                                                ; preds = %5, %0
  %7 = load i32, i32* %1, align 4, !dbg !19249
  ret i32 %7, !dbg !19250
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_fork_failok() #0 !dbg !19251 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !19252, metadata !DIExpression()), !dbg !19253
  %2 = call i32 @fork() #8, !dbg !19254
  store i32 %2, i32* %1, align 4, !dbg !19255
  %3 = load i32, i32* %1, align 4, !dbg !19256
  %4 = icmp eq i32 %3, 0, !dbg !19258
  br i1 %4, label %5, label %6, !dbg !19259

5:                                                ; preds = %0
  call void @vsf_sysutil_post_fork(), !dbg !19260
  br label %6, !dbg !19262

6:                                                ; preds = %5, %0
  %7 = load i32, i32* %1, align 4, !dbg !19263
  ret i32 %7, !dbg !19264
}

; Function Attrs: nounwind
declare i32 @fork() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_post_fork() #0 !dbg !19265 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !19266, metadata !DIExpression()), !dbg !19267
  store void ()* null, void ()** @s_exit_func, align 8, !dbg !19268
  store i32 -1, i32* @s_current_pid, align 4, !dbg !19269
  store void (i32, i32, i8*)* null, void (i32, i32, i8*)** @s_io_handler, align 8, !dbg !19270
  store i32 0, i32* %1, align 4, !dbg !19271
  br label %2, !dbg !19273

2:                                                ; preds = %10, %0
  %3 = load i32, i32* %1, align 4, !dbg !19274
  %4 = icmp slt i32 %3, 65, !dbg !19276
  br i1 %4, label %5, label %13, !dbg !19277

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4, !dbg !19278
  %7 = sext i32 %6 to i64, !dbg !19280
  %8 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %7, !dbg !19280
  %9 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %8, i32 0, i32 0, !dbg !19281
  store void (i8*)* null, void (i8*)** %9, align 16, !dbg !19282
  br label %10, !dbg !19283

10:                                               ; preds = %5
  %11 = load i32, i32* %1, align 4, !dbg !19284
  %12 = add nsw i32 %11, 1, !dbg !19284
  store i32 %12, i32* %1, align 4, !dbg !19284
  br label %2, !dbg !19285, !llvm.loop !19286

13:                                               ; preds = %2
  store i32 0, i32* %1, align 4, !dbg !19288
  br label %14, !dbg !19290

14:                                               ; preds = %22, %13
  %15 = load i32, i32* %1, align 4, !dbg !19291
  %16 = icmp slt i32 %15, 65, !dbg !19293
  br i1 %16, label %17, label %25, !dbg !19294

17:                                               ; preds = %14
  %18 = load i32, i32* %1, align 4, !dbg !19295
  %19 = sext i32 %18 to i64, !dbg !19297
  %20 = getelementptr inbounds [65 x %struct.vsf_sysutil_sig_details], [65 x %struct.vsf_sysutil_sig_details]* @s_sig_details, i64 0, i64 %19, !dbg !19297
  %21 = getelementptr inbounds %struct.vsf_sysutil_sig_details, %struct.vsf_sysutil_sig_details* %20, i32 0, i32 2, !dbg !19298
  store volatile i32 0, i32* %21, align 16, !dbg !19299
  br label %22, !dbg !19300

22:                                               ; preds = %17
  %23 = load i32, i32* %1, align 4, !dbg !19301
  %24 = add nsw i32 %23, 1, !dbg !19301
  store i32 %24, i32* %1, align 4, !dbg !19301
  br label %14, !dbg !19302, !llvm.loop !19303

25:                                               ; preds = %14
  ret void, !dbg !19305
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_exit_func(void ()*) #0 !dbg !19306 {
  %2 = alloca void ()*, align 8
  store void ()* %0, void ()** %2, align 8
  call void @llvm.dbg.declare(metadata void ()** %2, metadata !19309, metadata !DIExpression()), !dbg !19310
  %3 = load void ()*, void ()** %2, align 8, !dbg !19311
  store void ()* %3, void ()** @s_exit_func, align 8, !dbg !19312
  ret void, !dbg !19313
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_exit(i32) #0 !dbg !19314 {
  %2 = alloca i32, align 4
  %3 = alloca void ()*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19315, metadata !DIExpression()), !dbg !19316
  %4 = load void ()*, void ()** @s_exit_func, align 8, !dbg !19317
  %5 = icmp ne void ()* %4, null, !dbg !19317
  br i1 %5, label %6, label %9, !dbg !19319

6:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata void ()** %3, metadata !19320, metadata !DIExpression()), !dbg !19322
  %7 = load void ()*, void ()** @s_exit_func, align 8, !dbg !19323
  store void ()* %7, void ()** %3, align 8, !dbg !19322
  store void ()* null, void ()** @s_exit_func, align 8, !dbg !19324
  %8 = load void ()*, void ()** %3, align 8, !dbg !19325
  call void %8(), !dbg !19326
  br label %9, !dbg !19327

9:                                                ; preds = %6, %1
  %10 = load i32, i32* %2, align 4, !dbg !19328
  call void @_exit(i32 %10) #10, !dbg !19329
  unreachable, !dbg !19329

11:                                               ; No predecessors!
  ret void, !dbg !19330
}

; Function Attrs: noreturn
declare void @_exit(i32) #6

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_wait() #0 !dbg !19331 {
  %1 = alloca %struct.vsf_client_launch, align 4
  %2 = alloca %struct.vsf_client_launch, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %2, metadata !19334, metadata !DIExpression()), !dbg !19335
  %4 = bitcast %struct.vsf_client_launch* %2 to i8*, !dbg !19336
  call void @vsf_sysutil_memclr(i8* %4, i32 8), !dbg !19337
  br label %5, !dbg !19338

5:                                                ; preds = %0, %14
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19339, metadata !DIExpression()), !dbg !19341
  %6 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %2, i32 0, i32 1, !dbg !19342
  %7 = call i32 @wait(i32* %6), !dbg !19343
  store i32 %7, i32* %3, align 4, !dbg !19341
  %8 = load i32, i32* %3, align 4, !dbg !19344
  %9 = icmp slt i32 %8, 0, !dbg !19346
  br i1 %9, label %10, label %15, !dbg !19347

10:                                               ; preds = %5
  %11 = call i32* @__errno_location() #9, !dbg !19348
  %12 = load i32, i32* %11, align 4, !dbg !19348
  %13 = icmp eq i32 %12, 4, !dbg !19349
  br i1 %13, label %14, label %15, !dbg !19350

14:                                               ; preds = %10
  call void @vsf_sysutil_check_pending_actions(i32 0, i32 0, i32 0), !dbg !19351
  br label %5, !dbg !19353, !llvm.loop !19354

15:                                               ; preds = %10, %5
  %16 = load i32, i32* %3, align 4, !dbg !19356
  %17 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %2, i32 0, i32 0, !dbg !19357
  store i32 %16, i32* %17, align 4, !dbg !19358
  %18 = bitcast %struct.vsf_client_launch* %1 to i8*, !dbg !19359
  %19 = bitcast %struct.vsf_client_launch* %2 to i8*, !dbg !19359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 8, i1 false), !dbg !19359
  %20 = bitcast %struct.vsf_client_launch* %1 to i64*, !dbg !19360
  %21 = load i64, i64* %20, align 4, !dbg !19360
  ret i64 %21, !dbg !19360
}

declare i32 @wait(i32*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_wait_reap_one() #0 !dbg !19361 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19362, metadata !DIExpression()), !dbg !19363
  %3 = call i32 @waitpid(i32 -1, i32* null, i32 1), !dbg !19364
  store i32 %3, i32* %2, align 4, !dbg !19363
  %4 = load i32, i32* %2, align 4, !dbg !19365
  %5 = icmp eq i32 %4, 0, !dbg !19367
  br i1 %5, label %13, label %6, !dbg !19368

6:                                                ; preds = %0
  %7 = load i32, i32* %2, align 4, !dbg !19369
  %8 = icmp slt i32 %7, 0, !dbg !19370
  br i1 %8, label %9, label %14, !dbg !19371

9:                                                ; preds = %6
  %10 = call i32* @__errno_location() #9, !dbg !19372
  %11 = load i32, i32* %10, align 4, !dbg !19372
  %12 = icmp eq i32 %11, 10, !dbg !19373
  br i1 %12, label %13, label %14, !dbg !19374

13:                                               ; preds = %9, %0
  store i32 0, i32* %1, align 4, !dbg !19375
  br label %20, !dbg !19375

14:                                               ; preds = %9, %6
  %15 = load i32, i32* %2, align 4, !dbg !19377
  %16 = icmp slt i32 %15, 0, !dbg !19379
  br i1 %16, label %17, label %18, !dbg !19380

17:                                               ; preds = %14
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.1015, i32 0, i32 0)), !dbg !19381
  br label %18, !dbg !19383

18:                                               ; preds = %17, %14
  %19 = load i32, i32* %2, align 4, !dbg !19384
  store i32 %19, i32* %1, align 4, !dbg !19385
  br label %20, !dbg !19385

20:                                               ; preds = %18, %13
  %21 = load i32, i32* %1, align 4, !dbg !19386
  ret i32 %21, !dbg !19386
}

declare i32 @waitpid(i32, i32*, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_wait_get_retval(%struct.vsf_client_launch*) #0 !dbg !19387 {
  %2 = alloca %struct.vsf_client_launch*, align 8
  store %struct.vsf_client_launch* %0, %struct.vsf_client_launch** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch** %2, metadata !19392, metadata !DIExpression()), !dbg !19393
  %3 = load %struct.vsf_client_launch*, %struct.vsf_client_launch** %2, align 8, !dbg !19394
  %4 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %3, i32 0, i32 0, !dbg !19395
  %5 = load i32, i32* %4, align 4, !dbg !19395
  ret i32 %5, !dbg !19396
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_wait_exited_normally(%struct.vsf_client_launch*) #0 !dbg !19397 {
  %2 = alloca %struct.vsf_client_launch*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_client_launch* %0, %struct.vsf_client_launch** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch** %2, metadata !19398, metadata !DIExpression()), !dbg !19399
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19400, metadata !DIExpression()), !dbg !19401
  %4 = load %struct.vsf_client_launch*, %struct.vsf_client_launch** %2, align 8, !dbg !19402
  %5 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %4, i32 0, i32 1, !dbg !19403
  %6 = load i32, i32* %5, align 4, !dbg !19403
  store i32 %6, i32* %3, align 4, !dbg !19401
  %7 = load i32, i32* %3, align 4, !dbg !19404
  %8 = and i32 %7, 127, !dbg !19404
  %9 = icmp eq i32 %8, 0, !dbg !19404
  %10 = zext i1 %9 to i32, !dbg !19404
  ret i32 %10, !dbg !19405
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_wait_get_exitcode(%struct.vsf_client_launch*) #0 !dbg !19406 {
  %2 = alloca %struct.vsf_client_launch*, align 8
  %3 = alloca i32, align 4
  store %struct.vsf_client_launch* %0, %struct.vsf_client_launch** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch** %2, metadata !19407, metadata !DIExpression()), !dbg !19408
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19409, metadata !DIExpression()), !dbg !19410
  %4 = load %struct.vsf_client_launch*, %struct.vsf_client_launch** %2, align 8, !dbg !19411
  %5 = call i32 @vsf_sysutil_wait_exited_normally(%struct.vsf_client_launch* %4), !dbg !19413
  %6 = icmp ne i32 %5, 0, !dbg !19413
  br i1 %6, label %8, label %7, !dbg !19414

7:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.1020, i32 0, i32 0)), !dbg !19415
  br label %8, !dbg !19417

8:                                                ; preds = %7, %1
  %9 = load %struct.vsf_client_launch*, %struct.vsf_client_launch** %2, align 8, !dbg !19418
  %10 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %9, i32 0, i32 1, !dbg !19419
  %11 = load i32, i32* %10, align 4, !dbg !19419
  store i32 %11, i32* %3, align 4, !dbg !19420
  %12 = load i32, i32* %3, align 4, !dbg !19421
  %13 = and i32 %12, 65280, !dbg !19421
  %14 = ashr i32 %13, 8, !dbg !19421
  ret i32 %14, !dbg !19422
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_activate_keepalive(i32) #0 !dbg !19423 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19424, metadata !DIExpression()), !dbg !19425
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19426, metadata !DIExpression()), !dbg !19427
  store i32 1, i32* %3, align 4, !dbg !19427
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19428, metadata !DIExpression()), !dbg !19429
  %5 = load i32, i32* %2, align 4, !dbg !19430
  %6 = bitcast i32* %3 to i8*, !dbg !19431
  %7 = call i32 @setsockopt(i32 %5, i32 1, i32 9, i8* %6, i32 4) #8, !dbg !19432
  store i32 %7, i32* %4, align 4, !dbg !19429
  %8 = load i32, i32* %4, align 4, !dbg !19433
  %9 = icmp ne i32 %8, 0, !dbg !19435
  br i1 %9, label %10, label %11, !dbg !19436

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.1023, i32 0, i32 0)), !dbg !19437
  br label %11, !dbg !19439

11:                                               ; preds = %10, %1
  ret void, !dbg !19440
}

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_activate_reuseaddr(i32) #0 !dbg !19441 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19442, metadata !DIExpression()), !dbg !19443
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19444, metadata !DIExpression()), !dbg !19445
  store i32 1, i32* %3, align 4, !dbg !19445
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19446, metadata !DIExpression()), !dbg !19447
  %5 = load i32, i32* %2, align 4, !dbg !19448
  %6 = bitcast i32* %3 to i8*, !dbg !19449
  %7 = call i32 @setsockopt(i32 %5, i32 1, i32 2, i8* %6, i32 4) #8, !dbg !19450
  store i32 %7, i32* %4, align 4, !dbg !19447
  %8 = load i32, i32* %4, align 4, !dbg !19451
  %9 = icmp ne i32 %8, 0, !dbg !19453
  br i1 %9, label %10, label %11, !dbg !19454

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20.1026, i32 0, i32 0)), !dbg !19455
  br label %11, !dbg !19457

11:                                               ; preds = %10, %1
  ret void, !dbg !19458
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_nodelay(i32) #0 !dbg !19459 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19460, metadata !DIExpression()), !dbg !19461
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19462, metadata !DIExpression()), !dbg !19463
  store i32 1, i32* %3, align 4, !dbg !19463
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19464, metadata !DIExpression()), !dbg !19465
  %5 = load i32, i32* %2, align 4, !dbg !19466
  %6 = bitcast i32* %3 to i8*, !dbg !19467
  %7 = call i32 @setsockopt(i32 %5, i32 6, i32 1, i8* %6, i32 4) #8, !dbg !19468
  store i32 %7, i32* %4, align 4, !dbg !19465
  %8 = load i32, i32* %4, align 4, !dbg !19469
  %9 = icmp ne i32 %8, 0, !dbg !19471
  br i1 %9, label %10, label %11, !dbg !19472

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21.1029, i32 0, i32 0)), !dbg !19473
  br label %11, !dbg !19475

11:                                               ; preds = %10, %1
  ret void, !dbg !19476
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_activate_sigurg(i32) #0 !dbg !19477 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19478, metadata !DIExpression()), !dbg !19479
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19480, metadata !DIExpression()), !dbg !19481
  %4 = load i32, i32* %2, align 4, !dbg !19482
  %5 = call i32 @vsf_sysutil_getpid(), !dbg !19483
  %6 = call i32 (i32, i32, ...) @fcntl(i32 %4, i32 8, i32 %5), !dbg !19484
  store i32 %6, i32* %3, align 4, !dbg !19481
  %7 = load i32, i32* %3, align 4, !dbg !19485
  %8 = icmp ne i32 %7, 0, !dbg !19487
  br i1 %8, label %9, label %10, !dbg !19488

9:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.1032, i32 0, i32 0)), !dbg !19489
  br label %10, !dbg !19491

10:                                               ; preds = %9, %1
  ret void, !dbg !19492
}

declare i32 @fcntl(i32, i32, ...) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_activate_oobinline(i32) #0 !dbg !19493 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19494, metadata !DIExpression()), !dbg !19495
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19496, metadata !DIExpression()), !dbg !19497
  store i32 1, i32* %3, align 4, !dbg !19497
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19498, metadata !DIExpression()), !dbg !19499
  %5 = load i32, i32* %2, align 4, !dbg !19500
  %6 = bitcast i32* %3 to i8*, !dbg !19501
  %7 = call i32 @setsockopt(i32 %5, i32 1, i32 10, i8* %6, i32 4) #8, !dbg !19502
  store i32 %7, i32* %4, align 4, !dbg !19499
  %8 = load i32, i32* %4, align 4, !dbg !19503
  %9 = icmp ne i32 %8, 0, !dbg !19505
  br i1 %9, label %10, label %11, !dbg !19506

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23.1035, i32 0, i32 0)), !dbg !19507
  br label %11, !dbg !19509

11:                                               ; preds = %10, %1
  ret void, !dbg !19510
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_iptos_throughput(i32) #0 !dbg !19511 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19512, metadata !DIExpression()), !dbg !19513
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19514, metadata !DIExpression()), !dbg !19515
  store i32 8, i32* %3, align 4, !dbg !19515
  %4 = load i32, i32* %2, align 4, !dbg !19516
  %5 = bitcast i32* %3 to i8*, !dbg !19517
  %6 = call i32 @setsockopt(i32 %4, i32 0, i32 1, i8* %5, i32 4) #8, !dbg !19518
  ret void, !dbg !19519
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_activate_linger(i32) #0 !dbg !19520 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_client_launch, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19521, metadata !DIExpression()), !dbg !19522
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19523, metadata !DIExpression()), !dbg !19524
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %4, metadata !19525, metadata !DIExpression()), !dbg !19530
  %5 = bitcast %struct.vsf_client_launch* %4 to i8*, !dbg !19531
  call void @vsf_sysutil_memclr(i8* %5, i32 8), !dbg !19532
  %6 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %4, i32 0, i32 0, !dbg !19533
  store i32 1, i32* %6, align 4, !dbg !19534
  %7 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %4, i32 0, i32 1, !dbg !19535
  store i32 600, i32* %7, align 4, !dbg !19536
  %8 = load i32, i32* %2, align 4, !dbg !19537
  %9 = bitcast %struct.vsf_client_launch* %4 to i8*, !dbg !19538
  %10 = call i32 @setsockopt(i32 %8, i32 1, i32 13, i8* %9, i32 8) #8, !dbg !19539
  store i32 %10, i32* %3, align 4, !dbg !19540
  %11 = load i32, i32* %3, align 4, !dbg !19541
  %12 = icmp ne i32 %11, 0, !dbg !19543
  br i1 %12, label %13, label %14, !dbg !19544

13:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24.1040, i32 0, i32 0)), !dbg !19545
  br label %14, !dbg !19547

14:                                               ; preds = %13, %1
  ret void, !dbg !19548
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_deactivate_linger_failok(i32) #0 !dbg !19549 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_client_launch, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19550, metadata !DIExpression()), !dbg !19551
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %3, metadata !19552, metadata !DIExpression()), !dbg !19553
  %4 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %3, i32 0, i32 0, !dbg !19554
  store i32 0, i32* %4, align 4, !dbg !19555
  %5 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %3, i32 0, i32 1, !dbg !19556
  store i32 0, i32* %5, align 4, !dbg !19557
  %6 = load i32, i32* %2, align 4, !dbg !19558
  %7 = bitcast %struct.vsf_client_launch* %3 to i8*, !dbg !19559
  %8 = call i32 @setsockopt(i32 %6, i32 1, i32 13, i8* %7, i32 8) #8, !dbg !19560
  ret void, !dbg !19561
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_activate_noblock(i32) #0 !dbg !19562 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19563, metadata !DIExpression()), !dbg !19564
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19565, metadata !DIExpression()), !dbg !19566
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19567, metadata !DIExpression()), !dbg !19568
  %5 = load i32, i32* %2, align 4, !dbg !19569
  %6 = call i32 (i32, i32, ...) @fcntl(i32 %5, i32 3), !dbg !19570
  store i32 %6, i32* %4, align 4, !dbg !19568
  %7 = load i32, i32* %4, align 4, !dbg !19571
  %8 = call i32 @vsf_sysutil_retval_is_error(i32 %7), !dbg !19573
  %9 = icmp ne i32 %8, 0, !dbg !19573
  br i1 %9, label %10, label %11, !dbg !19574

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.1032, i32 0, i32 0)), !dbg !19575
  br label %11, !dbg !19577

11:                                               ; preds = %10, %1
  %12 = load i32, i32* %4, align 4, !dbg !19578
  %13 = or i32 %12, 2048, !dbg !19578
  store i32 %13, i32* %4, align 4, !dbg !19578
  %14 = load i32, i32* %2, align 4, !dbg !19579
  %15 = load i32, i32* %4, align 4, !dbg !19580
  %16 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 4, i32 %15), !dbg !19581
  store i32 %16, i32* %3, align 4, !dbg !19582
  %17 = load i32, i32* %3, align 4, !dbg !19583
  %18 = icmp ne i32 %17, 0, !dbg !19585
  br i1 %18, label %19, label %20, !dbg !19586

19:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.1032, i32 0, i32 0)), !dbg !19587
  br label %20, !dbg !19589

20:                                               ; preds = %19, %11
  ret void, !dbg !19590
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_retval_is_error(i32) #0 !dbg !19591 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19592, metadata !DIExpression()), !dbg !19593
  %4 = load i32, i32* %3, align 4, !dbg !19594
  %5 = icmp slt i32 %4, 0, !dbg !19596
  br i1 %5, label %6, label %7, !dbg !19597

6:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !19598
  br label %8, !dbg !19598

7:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !19600
  br label %8, !dbg !19600

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %2, align 4, !dbg !19601
  ret i32 %9, !dbg !19601
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_deactivate_noblock(i32) #0 !dbg !19602 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19603, metadata !DIExpression()), !dbg !19604
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19605, metadata !DIExpression()), !dbg !19606
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19607, metadata !DIExpression()), !dbg !19608
  %5 = load i32, i32* %2, align 4, !dbg !19609
  %6 = call i32 (i32, i32, ...) @fcntl(i32 %5, i32 3), !dbg !19610
  store i32 %6, i32* %4, align 4, !dbg !19608
  %7 = load i32, i32* %4, align 4, !dbg !19611
  %8 = call i32 @vsf_sysutil_retval_is_error(i32 %7), !dbg !19613
  %9 = icmp ne i32 %8, 0, !dbg !19613
  br i1 %9, label %10, label %11, !dbg !19614

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.1032, i32 0, i32 0)), !dbg !19615
  br label %11, !dbg !19617

11:                                               ; preds = %10, %1
  %12 = load i32, i32* %4, align 4, !dbg !19618
  %13 = and i32 %12, -2049, !dbg !19618
  store i32 %13, i32* %4, align 4, !dbg !19618
  %14 = load i32, i32* %2, align 4, !dbg !19619
  %15 = load i32, i32* %4, align 4, !dbg !19620
  %16 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 4, i32 %15), !dbg !19621
  store i32 %16, i32* %3, align 4, !dbg !19622
  %17 = load i32, i32* %3, align 4, !dbg !19623
  %18 = icmp ne i32 %17, 0, !dbg !19625
  br i1 %18, label %19, label %20, !dbg !19626

19:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.1032, i32 0, i32 0)), !dbg !19627
  br label %20, !dbg !19629

20:                                               ; preds = %19, %11
  ret void, !dbg !19630
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_recv_peek(i32, i8*, i32) #0 !dbg !19631 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19632, metadata !DIExpression()), !dbg !19633
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !19634, metadata !DIExpression()), !dbg !19635
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19636, metadata !DIExpression()), !dbg !19637
  br label %9, !dbg !19638

9:                                                ; preds = %3, %25
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19639, metadata !DIExpression()), !dbg !19641
  %10 = load i32, i32* %4, align 4, !dbg !19642
  %11 = load i8*, i8** %5, align 8, !dbg !19643
  %12 = load i32, i32* %6, align 4, !dbg !19644
  %13 = zext i32 %12 to i64, !dbg !19644
  %14 = call i64 @recv(i32 %10, i8* %11, i64 %13, i32 2), !dbg !19645
  %15 = trunc i64 %14 to i32, !dbg !19645
  store i32 %15, i32* %7, align 4, !dbg !19641
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19646, metadata !DIExpression()), !dbg !19647
  %16 = call i32* @__errno_location() #9, !dbg !19648
  %17 = load i32, i32* %16, align 4, !dbg !19648
  store i32 %17, i32* %8, align 4, !dbg !19647
  %18 = load i32, i32* %7, align 4, !dbg !19649
  %19 = load i32, i32* %4, align 4, !dbg !19650
  call void @vsf_sysutil_check_pending_actions(i32 1, i32 %18, i32 %19), !dbg !19651
  %20 = load i32, i32* %7, align 4, !dbg !19652
  %21 = icmp slt i32 %20, 0, !dbg !19654
  br i1 %21, label %22, label %26, !dbg !19655

22:                                               ; preds = %9
  %23 = load i32, i32* %8, align 4, !dbg !19656
  %24 = icmp eq i32 %23, 4, !dbg !19657
  br i1 %24, label %25, label %26, !dbg !19658

25:                                               ; preds = %22
  br label %9, !dbg !19659, !llvm.loop !19661

26:                                               ; preds = %22, %9
  %27 = load i32, i32* %7, align 4, !dbg !19663
  ret i32 %27, !dbg !19664
}

declare i64 @recv(i32, i8*, i64, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_atoi(i8*) #0 !dbg !19665 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19668, metadata !DIExpression()), !dbg !19669
  %3 = load i8*, i8** %2, align 8, !dbg !19670
  %4 = call i32 @atoi(i8* %3) #11, !dbg !19671
  ret i32 %4, !dbg !19672
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #7

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_a_to_filesize_t(i8*) #0 !dbg !19673 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !19676, metadata !DIExpression()), !dbg !19677
  call void @llvm.dbg.declare(metadata i64* %4, metadata !19678, metadata !DIExpression()), !dbg !19679
  store i64 0, i64* %4, align 8, !dbg !19679
  call void @llvm.dbg.declare(metadata i64* %5, metadata !19680, metadata !DIExpression()), !dbg !19681
  store i64 1, i64* %5, align 8, !dbg !19681
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19682, metadata !DIExpression()), !dbg !19683
  %10 = load i8*, i8** %3, align 8, !dbg !19684
  %11 = call i32 @vsf_sysutil_strlen(i8* %10), !dbg !19685
  store i32 %11, i32* %6, align 4, !dbg !19683
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19686, metadata !DIExpression()), !dbg !19687
  %12 = load i32, i32* %6, align 4, !dbg !19688
  %13 = icmp ugt i32 %12, 15, !dbg !19690
  br i1 %13, label %14, label %15, !dbg !19691

14:                                               ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !19692
  br label %55, !dbg !19692

15:                                               ; preds = %1
  store i32 0, i32* %7, align 4, !dbg !19694
  br label %16, !dbg !19696

16:                                               ; preds = %50, %15
  %17 = load i32, i32* %7, align 4, !dbg !19697
  %18 = load i32, i32* %6, align 4, !dbg !19699
  %19 = icmp ult i32 %17, %18, !dbg !19700
  br i1 %19, label %20, label %53, !dbg !19701

20:                                               ; preds = %16
  call void @llvm.dbg.declare(metadata i8* %8, metadata !19702, metadata !DIExpression()), !dbg !19704
  %21 = load i8*, i8** %3, align 8, !dbg !19705
  %22 = load i32, i32* %6, align 4, !dbg !19706
  %23 = load i32, i32* %7, align 4, !dbg !19707
  %24 = add i32 %23, 1, !dbg !19708
  %25 = sub i32 %22, %24, !dbg !19709
  %26 = zext i32 %25 to i64, !dbg !19705
  %27 = getelementptr inbounds i8, i8* %21, i64 %26, !dbg !19705
  %28 = load i8, i8* %27, align 1, !dbg !19705
  store i8 %28, i8* %8, align 1, !dbg !19704
  call void @llvm.dbg.declare(metadata i64* %9, metadata !19710, metadata !DIExpression()), !dbg !19711
  %29 = load i8, i8* %8, align 1, !dbg !19712
  %30 = sext i8 %29 to i32, !dbg !19712
  %31 = icmp slt i32 %30, 48, !dbg !19714
  br i1 %31, label %36, label %32, !dbg !19715

32:                                               ; preds = %20
  %33 = load i8, i8* %8, align 1, !dbg !19716
  %34 = sext i8 %33 to i32, !dbg !19716
  %35 = icmp sgt i32 %34, 57, !dbg !19717
  br i1 %35, label %36, label %37, !dbg !19718

36:                                               ; preds = %32, %20
  store i64 0, i64* %2, align 8, !dbg !19719
  br label %55, !dbg !19719

37:                                               ; preds = %32
  %38 = load i8, i8* %8, align 1, !dbg !19721
  %39 = sext i8 %38 to i32, !dbg !19721
  %40 = sub nsw i32 %39, 48, !dbg !19722
  %41 = sext i32 %40 to i64, !dbg !19721
  store i64 %41, i64* %9, align 8, !dbg !19723
  %42 = load i64, i64* %5, align 8, !dbg !19724
  %43 = load i64, i64* %9, align 8, !dbg !19725
  %44 = mul nsw i64 %43, %42, !dbg !19725
  store i64 %44, i64* %9, align 8, !dbg !19725
  %45 = load i64, i64* %9, align 8, !dbg !19726
  %46 = load i64, i64* %4, align 8, !dbg !19727
  %47 = add nsw i64 %46, %45, !dbg !19727
  store i64 %47, i64* %4, align 8, !dbg !19727
  %48 = load i64, i64* %5, align 8, !dbg !19728
  %49 = mul nsw i64 %48, 10, !dbg !19728
  store i64 %49, i64* %5, align 8, !dbg !19728
  br label %50, !dbg !19729

50:                                               ; preds = %37
  %51 = load i32, i32* %7, align 4, !dbg !19730
  %52 = add i32 %51, 1, !dbg !19730
  store i32 %52, i32* %7, align 4, !dbg !19730
  br label %16, !dbg !19731, !llvm.loop !19732

53:                                               ; preds = %16
  %54 = load i64, i64* %4, align 8, !dbg !19734
  store i64 %54, i64* %2, align 8, !dbg !19735
  br label %55, !dbg !19735

55:                                               ; preds = %53, %36, %14
  %56 = load i64, i64* %2, align 8, !dbg !19736
  ret i64 %56, !dbg !19736
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_strlen(i8*) #0 !dbg !19737 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19740, metadata !DIExpression()), !dbg !19741
  call void @llvm.dbg.declare(metadata i64* %3, metadata !19742, metadata !DIExpression()), !dbg !19743
  %4 = load i8*, i8** %2, align 8, !dbg !19744
  %5 = call i64 @strlen(i8* %4) #11, !dbg !19745
  store i64 %5, i64* %3, align 8, !dbg !19743
  %6 = load i64, i64* %3, align 8, !dbg !19746
  %7 = icmp ugt i64 %6, 268435455, !dbg !19748
  br i1 %7, label %8, label %9, !dbg !19749

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30.1057, i32 0, i32 0)), !dbg !19750
  br label %9, !dbg !19752

9:                                                ; preds = %8, %1
  %10 = load i64, i64* %3, align 8, !dbg !19753
  %11 = trunc i64 %10 to i32, !dbg !19754
  ret i32 %11, !dbg !19755
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_ulong_to_str(i64) #0 !dbg !1496 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !19756, metadata !DIExpression()), !dbg !19757
  %3 = load i64, i64* %2, align 8, !dbg !19758
  %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_ulong_to_str.ulong_buf, i32 0, i32 0), i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.1060, i32 0, i32 0), i64 %3) #8, !dbg !19759
  ret i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_ulong_to_str.ulong_buf, i32 0, i32 0), !dbg !19760
}

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_filesize_t_to_str(i64) #0 !dbg !1504 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !19761, metadata !DIExpression()), !dbg !19762
  %3 = load i64, i64* %2, align 8, !dbg !19763
  %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_filesize_t_to_str.filesize_buf, i32 0, i32 0), i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.1063, i32 0, i32 0), i64 %3) #8, !dbg !19766
  ret i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_filesize_t_to_str.filesize_buf, i32 0, i32 0), !dbg !19767
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_double_to_str(double) #0 !dbg !1509 {
  %2 = alloca double, align 8
  store double %0, double* %2, align 8
  call void @llvm.dbg.declare(metadata double* %2, metadata !19768, metadata !DIExpression()), !dbg !19769
  %3 = load double, double* %2, align 8, !dbg !19770
  %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_double_to_str.double_buf, i32 0, i32 0), i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.1066, i32 0, i32 0), double %3) #8, !dbg !19771
  ret i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_double_to_str.double_buf, i32 0, i32 0), !dbg !19772
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_uint_to_octal(i32) #0 !dbg !1514 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19773, metadata !DIExpression()), !dbg !19774
  %3 = load i32, i32* %2, align 4, !dbg !19775
  %4 = icmp eq i32 %3, 0, !dbg !19777
  br i1 %4, label %5, label %6, !dbg !19778

5:                                                ; preds = %1
  store i8 48, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_uint_to_octal.octal_buf, i64 0, i64 0), align 16, !dbg !19779
  store i8 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_uint_to_octal.octal_buf, i64 0, i64 1), align 1, !dbg !19781
  br label %9, !dbg !19782

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4, !dbg !19783
  %8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_uint_to_octal.octal_buf, i32 0, i32 0), i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.1069, i32 0, i32 0), i32 %7) #8, !dbg !19785
  br label %9

9:                                                ; preds = %6, %5
  ret i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_uint_to_octal.octal_buf, i32 0, i32 0), !dbg !19786
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_octal_to_uint(i8*) #0 !dbg !19787 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19788, metadata !DIExpression()), !dbg !19789
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19790, metadata !DIExpression()), !dbg !19791
  store i32 0, i32* %3, align 4, !dbg !19791
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19792, metadata !DIExpression()), !dbg !19793
  store i32 0, i32* %4, align 4, !dbg !19793
  br label %6, !dbg !19794

6:                                                ; preds = %42, %1
  %7 = load i8*, i8** %2, align 8, !dbg !19795
  %8 = load i8, i8* %7, align 1, !dbg !19796
  %9 = sext i8 %8 to i32, !dbg !19796
  %10 = icmp ne i32 %9, 0, !dbg !19797
  br i1 %10, label %11, label %45, !dbg !19794

11:                                               ; preds = %6
  call void @llvm.dbg.declare(metadata i32* %5, metadata !19798, metadata !DIExpression()), !dbg !19800
  %12 = load i8*, i8** %2, align 8, !dbg !19801
  %13 = load i8, i8* %12, align 1, !dbg !19802
  %14 = sext i8 %13 to i32, !dbg !19802
  store i32 %14, i32* %5, align 4, !dbg !19800
  %15 = call i16** @__ctype_b_loc() #9, !dbg !19803
  %16 = load i16*, i16** %15, align 8, !dbg !19803
  %17 = load i32, i32* %5, align 4, !dbg !19803
  %18 = sext i32 %17 to i64, !dbg !19803
  %19 = getelementptr inbounds i16, i16* %16, i64 %18, !dbg !19803
  %20 = load i16, i16* %19, align 2, !dbg !19803
  %21 = zext i16 %20 to i32, !dbg !19803
  %22 = and i32 %21, 2048, !dbg !19803
  %23 = icmp ne i32 %22, 0, !dbg !19803
  br i1 %23, label %24, label %27, !dbg !19805

24:                                               ; preds = %11
  %25 = load i32, i32* %5, align 4, !dbg !19806
  %26 = icmp sgt i32 %25, 55, !dbg !19807
  br i1 %26, label %27, label %28, !dbg !19808

27:                                               ; preds = %24, %11
  br label %45, !dbg !19809

28:                                               ; preds = %24
  %29 = load i32, i32* %5, align 4, !dbg !19811
  %30 = icmp ne i32 %29, 48, !dbg !19813
  br i1 %30, label %31, label %32, !dbg !19814

31:                                               ; preds = %28
  store i32 1, i32* %4, align 4, !dbg !19815
  br label %32, !dbg !19817

32:                                               ; preds = %31, %28
  %33 = load i32, i32* %4, align 4, !dbg !19818
  %34 = icmp ne i32 %33, 0, !dbg !19818
  br i1 %34, label %35, label %42, !dbg !19820

35:                                               ; preds = %32
  %36 = load i32, i32* %3, align 4, !dbg !19821
  %37 = shl i32 %36, 3, !dbg !19821
  store i32 %37, i32* %3, align 4, !dbg !19821
  %38 = load i32, i32* %5, align 4, !dbg !19823
  %39 = sub nsw i32 %38, 48, !dbg !19824
  %40 = load i32, i32* %3, align 4, !dbg !19825
  %41 = add i32 %40, %39, !dbg !19825
  store i32 %41, i32* %3, align 4, !dbg !19825
  br label %42, !dbg !19826

42:                                               ; preds = %35, %32
  %43 = load i8*, i8** %2, align 8, !dbg !19827
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !19827
  store i8* %44, i8** %2, align 8, !dbg !19827
  br label %6, !dbg !19794, !llvm.loop !19828

45:                                               ; preds = %27, %6
  %46 = load i32, i32* %3, align 4, !dbg !19830
  ret i32 %46, !dbg !19831
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_toupper(i32) #0 !dbg !19832 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19833, metadata !DIExpression()), !dbg !19834
  %3 = load i32, i32* %2, align 4, !dbg !19835
  %4 = trunc i32 %3 to i8, !dbg !19836
  %5 = zext i8 %4 to i32, !dbg !19836
  %6 = call i32 @toupper(i32 %5) #11, !dbg !19837
  ret i32 %6, !dbg !19838
}

; Function Attrs: nounwind readonly
declare i32 @toupper(i32) #7

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_isspace(i32) #0 !dbg !19839 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19840, metadata !DIExpression()), !dbg !19841
  %3 = call i16** @__ctype_b_loc() #9, !dbg !19842
  %4 = load i16*, i16** %3, align 8, !dbg !19842
  %5 = load i32, i32* %2, align 4, !dbg !19842
  %6 = trunc i32 %5 to i8, !dbg !19842
  %7 = zext i8 %6 to i32, !dbg !19842
  %8 = sext i32 %7 to i64, !dbg !19842
  %9 = getelementptr inbounds i16, i16* %4, i64 %8, !dbg !19842
  %10 = load i16, i16* %9, align 2, !dbg !19842
  %11 = zext i16 %10 to i32, !dbg !19842
  %12 = and i32 %11, 8192, !dbg !19842
  ret i32 %12, !dbg !19843
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_isprint(i32) #0 !dbg !19844 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19845, metadata !DIExpression()), !dbg !19846
  call void @llvm.dbg.declare(metadata i8* %4, metadata !19847, metadata !DIExpression()), !dbg !19848
  %5 = load i32, i32* %3, align 4, !dbg !19849
  %6 = trunc i32 %5 to i8, !dbg !19850
  store i8 %6, i8* %4, align 1, !dbg !19848
  %7 = load i8, i8* %4, align 1, !dbg !19851
  %8 = zext i8 %7 to i32, !dbg !19851
  %9 = icmp sle i32 %8, 31, !dbg !19853
  br i1 %9, label %10, label %11, !dbg !19854

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !19855
  br label %34, !dbg !19855

11:                                               ; preds = %1
  %12 = load i8, i8* %4, align 1, !dbg !19857
  %13 = zext i8 %12 to i32, !dbg !19857
  %14 = icmp eq i32 %13, 177, !dbg !19859
  br i1 %14, label %15, label %16, !dbg !19860

15:                                               ; preds = %11
  store i32 0, i32* %2, align 4, !dbg !19861
  br label %34, !dbg !19861

16:                                               ; preds = %11
  %17 = load i8, i8* %4, align 1, !dbg !19863
  %18 = zext i8 %17 to i32, !dbg !19863
  %19 = icmp sge i32 %18, 128, !dbg !19865
  br i1 %19, label %20, label %25, !dbg !19866

20:                                               ; preds = %16
  %21 = load i8, i8* %4, align 1, !dbg !19867
  %22 = zext i8 %21 to i32, !dbg !19867
  %23 = icmp sle i32 %22, 159, !dbg !19868
  br i1 %23, label %24, label %25, !dbg !19869

24:                                               ; preds = %20
  store i32 0, i32* %2, align 4, !dbg !19870
  br label %34, !dbg !19870

25:                                               ; preds = %20, %16
  %26 = call i16** @__ctype_b_loc() #9, !dbg !19872
  %27 = load i16*, i16** %26, align 8, !dbg !19872
  %28 = load i32, i32* %3, align 4, !dbg !19872
  %29 = sext i32 %28 to i64, !dbg !19872
  %30 = getelementptr inbounds i16, i16* %27, i64 %29, !dbg !19872
  %31 = load i16, i16* %30, align 2, !dbg !19872
  %32 = zext i16 %31 to i32, !dbg !19872
  %33 = and i32 %32, 16384, !dbg !19872
  store i32 %33, i32* %2, align 4, !dbg !19873
  br label %34, !dbg !19873

34:                                               ; preds = %25, %24, %15, %10
  %35 = load i32, i32* %2, align 4, !dbg !19874
  ret i32 %35, !dbg !19874
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_isalnum(i32) #0 !dbg !19875 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19876, metadata !DIExpression()), !dbg !19877
  %3 = call i16** @__ctype_b_loc() #9, !dbg !19878
  %4 = load i16*, i16** %3, align 8, !dbg !19878
  %5 = load i32, i32* %2, align 4, !dbg !19878
  %6 = trunc i32 %5 to i8, !dbg !19878
  %7 = zext i8 %6 to i32, !dbg !19878
  %8 = sext i32 %7 to i64, !dbg !19878
  %9 = getelementptr inbounds i16, i16* %4, i64 %8, !dbg !19878
  %10 = load i16, i16* %9, align 2, !dbg !19878
  %11 = zext i16 %10 to i32, !dbg !19878
  %12 = and i32 %11, 8, !dbg !19878
  ret i32 %12, !dbg !19879
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_isdigit(i32) #0 !dbg !19880 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !19881, metadata !DIExpression()), !dbg !19882
  %3 = call i16** @__ctype_b_loc() #9, !dbg !19883
  %4 = load i16*, i16** %3, align 8, !dbg !19883
  %5 = load i32, i32* %2, align 4, !dbg !19883
  %6 = trunc i32 %5 to i8, !dbg !19883
  %7 = zext i8 %6 to i32, !dbg !19883
  %8 = sext i32 %7 to i64, !dbg !19883
  %9 = getelementptr inbounds i16, i16* %4, i64 %8, !dbg !19883
  %10 = load i16, i16* %9, align 2, !dbg !19883
  %11 = zext i16 %10 to i32, !dbg !19883
  %12 = and i32 %11, 2048, !dbg !19883
  ret i32 %12, !dbg !19884
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_getcwd(i8*, i32) #0 !dbg !19885 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !19888, metadata !DIExpression()), !dbg !19889
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !19890, metadata !DIExpression()), !dbg !19891
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19892, metadata !DIExpression()), !dbg !19893
  %7 = load i32, i32* %5, align 4, !dbg !19894
  %8 = icmp eq i32 %7, 0, !dbg !19896
  br i1 %8, label %9, label %11, !dbg !19897

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8, !dbg !19898
  store i8* %10, i8** %3, align 8, !dbg !19900
  br label %22, !dbg !19900

11:                                               ; preds = %2
  %12 = load i8*, i8** %4, align 8, !dbg !19901
  %13 = load i32, i32* %5, align 4, !dbg !19902
  %14 = zext i32 %13 to i64, !dbg !19902
  %15 = call i8* @getcwd(i8* %12, i64 %14) #8, !dbg !19903
  store i8* %15, i8** %6, align 8, !dbg !19904
  %16 = load i8*, i8** %4, align 8, !dbg !19905
  %17 = load i32, i32* %5, align 4, !dbg !19906
  %18 = sub i32 %17, 1, !dbg !19907
  %19 = zext i32 %18 to i64, !dbg !19905
  %20 = getelementptr inbounds i8, i8* %16, i64 %19, !dbg !19905
  store i8 0, i8* %20, align 1, !dbg !19908
  %21 = load i8*, i8** %6, align 8, !dbg !19909
  store i8* %21, i8** %3, align 8, !dbg !19910
  br label %22, !dbg !19910

22:                                               ; preds = %11, %9
  %23 = load i8*, i8** %3, align 8, !dbg !19911
  ret i8* %23, !dbg !19911
}

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_mkdir(i8*, i32) #0 !dbg !19912 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !19915, metadata !DIExpression()), !dbg !19916
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19917, metadata !DIExpression()), !dbg !19918
  %5 = load i8*, i8** %3, align 8, !dbg !19919
  %6 = load i32, i32* %4, align 4, !dbg !19920
  %7 = call i32 @mkdir(i8* %5, i32 %6) #8, !dbg !19921
  ret i32 %7, !dbg !19922
}

; Function Attrs: nounwind
declare i32 @mkdir(i8*, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_rmdir(i8*) #0 !dbg !19923 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19924, metadata !DIExpression()), !dbg !19925
  %3 = load i8*, i8** %2, align 8, !dbg !19926
  %4 = call i32 @rmdir(i8* %3) #8, !dbg !19927
  ret i32 %4, !dbg !19928
}

; Function Attrs: nounwind
declare i32 @rmdir(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_chdir(i8*) #0 !dbg !19929 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19930, metadata !DIExpression()), !dbg !19931
  %3 = load i8*, i8** %2, align 8, !dbg !19932
  %4 = call i32 @chdir(i8* %3) #8, !dbg !19933
  ret i32 %4, !dbg !19934
}

; Function Attrs: nounwind
declare i32 @chdir(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_rename(i8*, i8*) #0 !dbg !19935 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !19938, metadata !DIExpression()), !dbg !19939
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !19940, metadata !DIExpression()), !dbg !19941
  %5 = load i8*, i8** %3, align 8, !dbg !19942
  %6 = load i8*, i8** %4, align 8, !dbg !19943
  %7 = call i32 @rename(i8* %5, i8* %6) #8, !dbg !19944
  ret i32 %7, !dbg !19945
}

; Function Attrs: nounwind
declare i32 @rename(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.vsf_sysutil_dir* @vsf_sysutil_opendir(i8*) #0 !dbg !19946 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !19949, metadata !DIExpression()), !dbg !19950
  %3 = load i8*, i8** %2, align 8, !dbg !19951
  %4 = call %struct.__dirstream* @opendir(i8* %3), !dbg !19952
  %5 = bitcast %struct.__dirstream* %4 to %struct.vsf_sysutil_dir*, !dbg !19953
  ret %struct.vsf_sysutil_dir* %5, !dbg !19954
}

declare %struct.__dirstream* @opendir(i8*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_closedir(%struct.vsf_sysutil_dir*) #0 !dbg !19955 {
  %2 = alloca %struct.vsf_sysutil_dir*, align 8
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_sysutil_dir* %0, %struct.vsf_sysutil_dir** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %2, metadata !19958, metadata !DIExpression()), !dbg !19959
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %3, metadata !19960, metadata !DIExpression()), !dbg !19961
  %5 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %2, align 8, !dbg !19962
  %6 = bitcast %struct.vsf_sysutil_dir* %5 to %struct.__dirstream*, !dbg !19963
  store %struct.__dirstream* %6, %struct.__dirstream** %3, align 8, !dbg !19961
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19964, metadata !DIExpression()), !dbg !19965
  %7 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8, !dbg !19966
  %8 = call i32 @closedir(%struct.__dirstream* %7), !dbg !19967
  store i32 %8, i32* %4, align 4, !dbg !19965
  %9 = load i32, i32* %4, align 4, !dbg !19968
  %10 = icmp ne i32 %9, 0, !dbg !19970
  br i1 %10, label %11, label %12, !dbg !19971

11:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.1096, i32 0, i32 0)), !dbg !19972
  br label %12, !dbg !19974

12:                                               ; preds = %11, %1
  ret void, !dbg !19975
}

declare i32 @closedir(%struct.__dirstream*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_next_dirent(%struct.vsf_sysutil_dir*) #0 !dbg !19976 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_sysutil_dir*, align 8
  %4 = alloca %struct.__dirstream*, align 8
  %5 = alloca %struct.dirent*, align 8
  store %struct.vsf_sysutil_dir* %0, %struct.vsf_sysutil_dir** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %3, metadata !19979, metadata !DIExpression()), !dbg !19980
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %4, metadata !19981, metadata !DIExpression()), !dbg !19982
  %6 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %3, align 8, !dbg !19983
  %7 = bitcast %struct.vsf_sysutil_dir* %6 to %struct.__dirstream*, !dbg !19984
  store %struct.__dirstream* %7, %struct.__dirstream** %4, align 8, !dbg !19982
  call void @llvm.dbg.declare(metadata %struct.dirent** %5, metadata !19985, metadata !DIExpression()), !dbg !19997
  %8 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8, !dbg !19998
  %9 = call %struct.dirent* @readdir64(%struct.__dirstream* %8), !dbg !19999
  store %struct.dirent* %9, %struct.dirent** %5, align 8, !dbg !19997
  %10 = load %struct.dirent*, %struct.dirent** %5, align 8, !dbg !20000
  %11 = icmp eq %struct.dirent* %10, null, !dbg !20002
  br i1 %11, label %12, label %13, !dbg !20003

12:                                               ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !20004
  br label %17, !dbg !20004

13:                                               ; preds = %1
  %14 = load %struct.dirent*, %struct.dirent** %5, align 8, !dbg !20006
  %15 = getelementptr inbounds %struct.dirent, %struct.dirent* %14, i32 0, i32 4, !dbg !20007
  %16 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !20006
  store i8* %16, i8** %2, align 8, !dbg !20008
  br label %17, !dbg !20008

17:                                               ; preds = %13, %12
  %18 = load i8*, i8** %2, align 8, !dbg !20009
  ret i8* %18, !dbg !20009
}

declare %struct.dirent* @readdir64(%struct.__dirstream*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_strdup(i8*) #0 !dbg !20010 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !20013, metadata !DIExpression()), !dbg !20014
  %3 = load i8*, i8** %2, align 8, !dbg !20015
  %4 = call noalias i8* @strdup(i8* %3) #8, !dbg !20016
  ret i8* %4, !dbg !20017
}

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_memcpy(i8*, i8*, i32) #0 !dbg !20018 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !20021, metadata !DIExpression()), !dbg !20022
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !20023, metadata !DIExpression()), !dbg !20024
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20025, metadata !DIExpression()), !dbg !20026
  %7 = load i32, i32* %6, align 4, !dbg !20027
  %8 = icmp eq i32 %7, 0, !dbg !20029
  br i1 %8, label %9, label %10, !dbg !20030

9:                                                ; preds = %3
  br label %19, !dbg !20031

10:                                               ; preds = %3
  %11 = load i32, i32* %6, align 4, !dbg !20033
  %12 = icmp ugt i32 %11, 2147483647, !dbg !20035
  br i1 %12, label %13, label %14, !dbg !20036

13:                                               ; preds = %10
  call void @die(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31.1103, i32 0, i32 0)), !dbg !20037
  br label %14, !dbg !20039

14:                                               ; preds = %13, %10
  %15 = load i8*, i8** %4, align 8, !dbg !20040
  %16 = load i8*, i8** %5, align 8, !dbg !20041
  %17 = load i32, i32* %6, align 4, !dbg !20042
  %18 = zext i32 %17 to i64, !dbg !20042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %16, i64 %18, i1 false), !dbg !20043
  br label %19, !dbg !20044

19:                                               ; preds = %14, %9
  ret void, !dbg !20044
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_strcpy(i8*, i8*, i32) #0 !dbg !20045 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !20048, metadata !DIExpression()), !dbg !20049
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !20050, metadata !DIExpression()), !dbg !20051
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20052, metadata !DIExpression()), !dbg !20053
  %7 = load i32, i32* %6, align 4, !dbg !20054
  %8 = icmp eq i32 %7, 0, !dbg !20056
  br i1 %8, label %9, label %10, !dbg !20057

9:                                                ; preds = %3
  br label %21, !dbg !20058

10:                                               ; preds = %3
  %11 = load i8*, i8** %4, align 8, !dbg !20060
  %12 = load i8*, i8** %5, align 8, !dbg !20061
  %13 = load i32, i32* %6, align 4, !dbg !20062
  %14 = zext i32 %13 to i64, !dbg !20062
  %15 = call i8* @strncpy(i8* %11, i8* %12, i64 %14) #8, !dbg !20063
  %16 = load i8*, i8** %4, align 8, !dbg !20064
  %17 = load i32, i32* %6, align 4, !dbg !20065
  %18 = sub i32 %17, 1, !dbg !20066
  %19 = zext i32 %18 to i64, !dbg !20064
  %20 = getelementptr inbounds i8, i8* %16, i64 %19, !dbg !20064
  store i8 0, i8* %20, align 1, !dbg !20067
  br label %21, !dbg !20068

21:                                               ; preds = %10, %9
  ret void, !dbg !20068
}

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_memcmp(i8*, i8*, i32) #0 !dbg !20069 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !20072, metadata !DIExpression()), !dbg !20073
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !20074, metadata !DIExpression()), !dbg !20075
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !20076, metadata !DIExpression()), !dbg !20077
  %8 = load i32, i32* %7, align 4, !dbg !20078
  %9 = icmp eq i32 %8, 0, !dbg !20080
  br i1 %9, label %10, label %11, !dbg !20081

10:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !20082
  br label %17, !dbg !20082

11:                                               ; preds = %3
  %12 = load i8*, i8** %5, align 8, !dbg !20084
  %13 = load i8*, i8** %6, align 8, !dbg !20085
  %14 = load i32, i32* %7, align 4, !dbg !20086
  %15 = zext i32 %14 to i64, !dbg !20086
  %16 = call i32 @memcmp(i8* %12, i8* %13, i64 %15) #11, !dbg !20087
  store i32 %16, i32* %4, align 4, !dbg !20088
  br label %17, !dbg !20088

17:                                               ; preds = %11, %10
  %18 = load i32, i32* %4, align 4, !dbg !20089
  ret i32 %18, !dbg !20089
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_strcmp(i8*, i8*) #0 !dbg !20090 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20091, metadata !DIExpression()), !dbg !20092
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !20093, metadata !DIExpression()), !dbg !20094
  %5 = load i8*, i8** %3, align 8, !dbg !20095
  %6 = load i8*, i8** %4, align 8, !dbg !20096
  %7 = call i32 @strcmp(i8* %5, i8* %6) #11, !dbg !20097
  ret i32 %7, !dbg !20098
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_getpagesize() #0 !dbg !1519 {
  %1 = load i32, i32* @vsf_sysutil_getpagesize.s_page_size, align 4, !dbg !20099
  %2 = icmp eq i32 %1, 0, !dbg !20101
  br i1 %2, label %3, label %9, !dbg !20102

3:                                                ; preds = %0
  %4 = call i32 @getpagesize() #9, !dbg !20103
  store i32 %4, i32* @vsf_sysutil_getpagesize.s_page_size, align 4, !dbg !20105
  %5 = load i32, i32* @vsf_sysutil_getpagesize.s_page_size, align 4, !dbg !20106
  %6 = icmp eq i32 %5, 0, !dbg !20108
  br i1 %6, label %7, label %8, !dbg !20109

7:                                                ; preds = %3
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.1108, i32 0, i32 0)), !dbg !20110
  br label %8, !dbg !20112

8:                                                ; preds = %7, %3
  br label %9, !dbg !20113

9:                                                ; preds = %8, %0
  %10 = load i32, i32* @vsf_sysutil_getpagesize.s_page_size, align 4, !dbg !20114
  ret i32 %10, !dbg !20115
}

; Function Attrs: nounwind readnone
declare i32 @getpagesize() #5

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_memprotect(i8*, i32, i32) #0 !dbg !20116 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !20120, metadata !DIExpression()), !dbg !20121
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20122, metadata !DIExpression()), !dbg !20123
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20124, metadata !DIExpression()), !dbg !20125
  call void @llvm.dbg.declare(metadata i32* %7, metadata !20126, metadata !DIExpression()), !dbg !20127
  %9 = load i32, i32* %6, align 4, !dbg !20128
  %10 = call i32 @vsf_sysutil_translate_memprot(i32 %9), !dbg !20129
  store i32 %10, i32* %7, align 4, !dbg !20127
  call void @llvm.dbg.declare(metadata i32* %8, metadata !20130, metadata !DIExpression()), !dbg !20131
  %11 = load i8*, i8** %4, align 8, !dbg !20132
  %12 = load i32, i32* %5, align 4, !dbg !20133
  %13 = zext i32 %12 to i64, !dbg !20133
  %14 = load i32, i32* %7, align 4, !dbg !20134
  %15 = call i32 @mprotect(i8* %11, i64 %13, i32 %14) #8, !dbg !20135
  store i32 %15, i32* %8, align 4, !dbg !20131
  %16 = load i32, i32* %8, align 4, !dbg !20136
  %17 = icmp ne i32 %16, 0, !dbg !20138
  br i1 %17, label %18, label %19, !dbg !20139

18:                                               ; preds = %3
  call void @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33.1111, i32 0, i32 0)), !dbg !20140
  br label %19, !dbg !20142

19:                                               ; preds = %18, %3
  ret void, !dbg !20143
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @vsf_sysutil_translate_memprot(i32) #0 !dbg !20144 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20147, metadata !DIExpression()), !dbg !20148
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20149, metadata !DIExpression()), !dbg !20150
  store i32 0, i32* %3, align 4, !dbg !20150
  %4 = load i32, i32* %2, align 4, !dbg !20151
  switch i32 %4, label %7 [
    i32 1, label %5
    i32 2, label %6
  ], !dbg !20152

5:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !20153
  br label %8, !dbg !20155

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4, !dbg !20156
  br label %8, !dbg !20157

7:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.87.1112, i32 0, i32 0)), !dbg !20158
  br label %8, !dbg !20159

8:                                                ; preds = %7, %6, %5
  %9 = load i32, i32* %3, align 4, !dbg !20160
  ret i32 %9, !dbg !20161
}

; Function Attrs: nounwind
declare i32 @mprotect(i8*, i64, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_memunmap(i8*, i32) #0 !dbg !20162 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20163, metadata !DIExpression()), !dbg !20164
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20165, metadata !DIExpression()), !dbg !20166
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20167, metadata !DIExpression()), !dbg !20168
  %6 = load i8*, i8** %3, align 8, !dbg !20169
  %7 = load i32, i32* %4, align 4, !dbg !20170
  %8 = zext i32 %7 to i64, !dbg !20170
  %9 = call i32 @munmap(i8* %6, i64 %8) #8, !dbg !20171
  store i32 %9, i32* %5, align 4, !dbg !20168
  %10 = load i32, i32* %5, align 4, !dbg !20172
  %11 = icmp ne i32 %10, 0, !dbg !20174
  br i1 %11, label %12, label %13, !dbg !20175

12:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34.1115, i32 0, i32 0)), !dbg !20176
  br label %13, !dbg !20178

13:                                               ; preds = %12, %2
  ret void, !dbg !20179
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_open_file(i8*, i32) #0 !dbg !20180 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20184, metadata !DIExpression()), !dbg !20185
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20186, metadata !DIExpression()), !dbg !20187
  %5 = load i8*, i8** %3, align 8, !dbg !20188
  %6 = load i32, i32* %4, align 4, !dbg !20189
  %7 = call i32 @vsf_sysutil_translate_openmode(i32 %6), !dbg !20190
  %8 = or i32 %7, 2048, !dbg !20191
  %9 = call i32 (i8*, i32, ...) @open64(i8* %5, i32 %8), !dbg !20192
  ret i32 %9, !dbg !20193
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @vsf_sysutil_translate_openmode(i32) #0 !dbg !20194 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20197, metadata !DIExpression()), !dbg !20198
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20199, metadata !DIExpression()), !dbg !20200
  store i32 0, i32* %3, align 4, !dbg !20200
  %4 = load i32, i32* %2, align 4, !dbg !20201
  switch i32 %4, label %8 [
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
  ], !dbg !20202

5:                                                ; preds = %1
  store i32 0, i32* %3, align 4, !dbg !20203
  br label %9, !dbg !20205

6:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !20206
  br label %9, !dbg !20207

7:                                                ; preds = %1
  store i32 2, i32* %3, align 4, !dbg !20208
  br label %9, !dbg !20209

8:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.88.1118, i32 0, i32 0)), !dbg !20210
  br label %9, !dbg !20211

9:                                                ; preds = %8, %7, %6, %5
  %10 = load i32, i32* %3, align 4, !dbg !20212
  ret i32 %10, !dbg !20213
}

declare i32 @open64(i8*, i32, ...) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_create_file_exclusive(i8*) #0 !dbg !20214 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !20215, metadata !DIExpression()), !dbg !20216
  %3 = load i8*, i8** %2, align 8, !dbg !20217
  %4 = load i32, i32* @tunable_file_open_mode, align 4, !dbg !20218
  %5 = call i32 (i8*, i32, ...) @open64(i8* %3, i32 1217, i32 %4), !dbg !20219
  ret i32 %5, !dbg !20220
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_create_or_open_file(i8*, i32) #0 !dbg !20221 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20224, metadata !DIExpression()), !dbg !20225
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20226, metadata !DIExpression()), !dbg !20227
  %5 = load i8*, i8** %3, align 8, !dbg !20228
  %6 = load i32, i32* %4, align 4, !dbg !20229
  %7 = call i32 (i8*, i32, ...) @open64(i8* %5, i32 2113, i32 %6), !dbg !20230
  ret i32 %7, !dbg !20231
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_create_or_open_file_append(i8*, i32) #0 !dbg !20232 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20233, metadata !DIExpression()), !dbg !20234
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20235, metadata !DIExpression()), !dbg !20236
  %5 = load i8*, i8** %3, align 8, !dbg !20237
  %6 = load i32, i32* %4, align 4, !dbg !20238
  %7 = call i32 (i8*, i32, ...) @open64(i8* %5, i32 3137, i32 %6), !dbg !20239
  ret i32 %7, !dbg !20240
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_dupfd2(i32, i32) #0 !dbg !20241 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20242, metadata !DIExpression()), !dbg !20243
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20244, metadata !DIExpression()), !dbg !20245
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20246, metadata !DIExpression()), !dbg !20247
  %6 = load i32, i32* %3, align 4, !dbg !20248
  %7 = load i32, i32* %4, align 4, !dbg !20250
  %8 = icmp eq i32 %6, %7, !dbg !20251
  br i1 %8, label %9, label %10, !dbg !20252

9:                                                ; preds = %2
  br label %18, !dbg !20253

10:                                               ; preds = %2
  %11 = load i32, i32* %3, align 4, !dbg !20255
  %12 = load i32, i32* %4, align 4, !dbg !20256
  %13 = call i32 @dup2(i32 %11, i32 %12) #8, !dbg !20257
  store i32 %13, i32* %5, align 4, !dbg !20258
  %14 = load i32, i32* %5, align 4, !dbg !20259
  %15 = load i32, i32* %4, align 4, !dbg !20261
  %16 = icmp ne i32 %14, %15, !dbg !20262
  br i1 %16, label %17, label %18, !dbg !20263

17:                                               ; preds = %10
  call void @die(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35.1127, i32 0, i32 0)), !dbg !20264
  br label %18, !dbg !20266

18:                                               ; preds = %9, %17, %10
  ret void, !dbg !20267
}

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_close(i32) #0 !dbg !20268 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20269, metadata !DIExpression()), !dbg !20270
  br label %4, !dbg !20271

4:                                                ; preds = %1, %13
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20272, metadata !DIExpression()), !dbg !20274
  %5 = load i32, i32* %2, align 4, !dbg !20275
  %6 = call i32 @close(i32 %5), !dbg !20276
  store i32 %6, i32* %3, align 4, !dbg !20274
  %7 = load i32, i32* %3, align 4, !dbg !20277
  %8 = icmp ne i32 %7, 0, !dbg !20279
  br i1 %8, label %9, label %15, !dbg !20280

9:                                                ; preds = %4
  %10 = call i32* @__errno_location() #9, !dbg !20281
  %11 = load i32, i32* %10, align 4, !dbg !20281
  %12 = icmp eq i32 %11, 4, !dbg !20284
  br i1 %12, label %13, label %14, !dbg !20285

13:                                               ; preds = %9
  call void @vsf_sysutil_check_pending_actions(i32 0, i32 0, i32 0), !dbg !20286
  br label %4, !dbg !20288, !llvm.loop !20289

14:                                               ; preds = %9
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.1130, i32 0, i32 0)), !dbg !20291
  br label %15, !dbg !20292

15:                                               ; preds = %14, %4
  ret void, !dbg !20293
}

declare i32 @close(i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_close_failok(i32) #0 !dbg !20294 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20295, metadata !DIExpression()), !dbg !20296
  %3 = load i32, i32* %2, align 4, !dbg !20297
  %4 = call i32 @close(i32 %3), !dbg !20298
  ret i32 %4, !dbg !20299
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_unlink(i8*) #0 !dbg !20300 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !20301, metadata !DIExpression()), !dbg !20302
  %3 = load i8*, i8** %2, align 8, !dbg !20303
  %4 = call i32 @unlink(i8* %3) #8, !dbg !20304
  ret i32 %4, !dbg !20305
}

; Function Attrs: nounwind
declare i32 @unlink(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_write_access(i8*) #0 !dbg !20306 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !20307, metadata !DIExpression()), !dbg !20308
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20309, metadata !DIExpression()), !dbg !20310
  %4 = load i8*, i8** %2, align 8, !dbg !20311
  %5 = call i32 @access(i8* %4, i32 2) #8, !dbg !20312
  store i32 %5, i32* %3, align 4, !dbg !20310
  %6 = load i32, i32* %3, align 4, !dbg !20313
  %7 = icmp eq i32 %6, 0, !dbg !20314
  %8 = zext i1 %7 to i32, !dbg !20314
  ret i32 %8, !dbg !20315
}

; Function Attrs: nounwind
declare i32 @access(i8*, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_fstat(i32, %struct.vsf_sysutil_statbuf**) #0 !dbg !20316 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_sysutil_statbuf**, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20320, metadata !DIExpression()), !dbg !20321
  store %struct.vsf_sysutil_statbuf** %1, %struct.vsf_sysutil_statbuf*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf*** %4, metadata !20322, metadata !DIExpression()), !dbg !20323
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20324, metadata !DIExpression()), !dbg !20325
  %6 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !20326
  call void @vsf_sysutil_alloc_statbuf(%struct.vsf_sysutil_statbuf** %6), !dbg !20327
  %7 = load i32, i32* %3, align 4, !dbg !20328
  %8 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !20329
  %9 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %8, align 8, !dbg !20330
  %10 = bitcast %struct.vsf_sysutil_statbuf* %9 to %struct.stat*, !dbg !20331
  %11 = call i32 @fstat64(i32 %7, %struct.stat* %10) #8, !dbg !20332
  store i32 %11, i32* %5, align 4, !dbg !20333
  %12 = load i32, i32* %5, align 4, !dbg !20334
  %13 = icmp ne i32 %12, 0, !dbg !20336
  br i1 %13, label %14, label %15, !dbg !20337

14:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37.1139, i32 0, i32 0)), !dbg !20338
  br label %15, !dbg !20340

15:                                               ; preds = %14, %2
  ret void, !dbg !20341
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_sysutil_alloc_statbuf(%struct.vsf_sysutil_statbuf**) #0 !dbg !20342 {
  %2 = alloca %struct.vsf_sysutil_statbuf**, align 8
  store %struct.vsf_sysutil_statbuf** %0, %struct.vsf_sysutil_statbuf*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf*** %2, metadata !20345, metadata !DIExpression()), !dbg !20346
  %3 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %2, align 8, !dbg !20347
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %3, align 8, !dbg !20349
  %5 = icmp eq %struct.vsf_sysutil_statbuf* %4, null, !dbg !20350
  br i1 %5, label %6, label %10, !dbg !20351

6:                                                ; preds = %1
  %7 = call i8* @vsf_sysutil_malloc(i32 144), !dbg !20352
  %8 = bitcast i8* %7 to %struct.vsf_sysutil_statbuf*, !dbg !20352
  %9 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %2, align 8, !dbg !20354
  store %struct.vsf_sysutil_statbuf* %8, %struct.vsf_sysutil_statbuf** %9, align 8, !dbg !20355
  br label %10, !dbg !20356

10:                                               ; preds = %6, %1
  ret void, !dbg !20357
}

; Function Attrs: nounwind
declare i32 @fstat64(i32, %struct.stat*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_stat(i8*, %struct.vsf_sysutil_statbuf**) #0 !dbg !20358 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.vsf_sysutil_statbuf**, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20361, metadata !DIExpression()), !dbg !20362
  store %struct.vsf_sysutil_statbuf** %1, %struct.vsf_sysutil_statbuf*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf*** %4, metadata !20363, metadata !DIExpression()), !dbg !20364
  %5 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !20365
  call void @vsf_sysutil_alloc_statbuf(%struct.vsf_sysutil_statbuf** %5), !dbg !20366
  %6 = load i8*, i8** %3, align 8, !dbg !20367
  %7 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !20368
  %8 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !20369
  %9 = bitcast %struct.vsf_sysutil_statbuf* %8 to %struct.stat*, !dbg !20370
  %10 = call i32 @stat64(i8* %6, %struct.stat* %9) #8, !dbg !20371
  ret i32 %10, !dbg !20372
}

; Function Attrs: nounwind
declare i32 @stat64(i8*, %struct.stat*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_lstat(i8*, %struct.vsf_sysutil_statbuf**) #0 !dbg !20373 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.vsf_sysutil_statbuf**, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20374, metadata !DIExpression()), !dbg !20375
  store %struct.vsf_sysutil_statbuf** %1, %struct.vsf_sysutil_statbuf*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf*** %4, metadata !20376, metadata !DIExpression()), !dbg !20377
  %5 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !20378
  call void @vsf_sysutil_alloc_statbuf(%struct.vsf_sysutil_statbuf** %5), !dbg !20379
  %6 = load i8*, i8** %3, align 8, !dbg !20380
  %7 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !20381
  %8 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %7, align 8, !dbg !20382
  %9 = bitcast %struct.vsf_sysutil_statbuf* %8 to %struct.stat*, !dbg !20383
  %10 = call i32 @lstat64(i8* %6, %struct.stat* %9) #8, !dbg !20384
  ret i32 %10, !dbg !20385
}

; Function Attrs: nounwind
declare i32 @lstat64(i8*, %struct.stat*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_dir_stat(%struct.vsf_sysutil_dir*, %struct.vsf_sysutil_statbuf**) #0 !dbg !20386 {
  %3 = alloca %struct.vsf_sysutil_dir*, align 8
  %4 = alloca %struct.vsf_sysutil_statbuf**, align 8
  %5 = alloca i32, align 4
  store %struct.vsf_sysutil_dir* %0, %struct.vsf_sysutil_dir** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_dir** %3, metadata !20391, metadata !DIExpression()), !dbg !20392
  store %struct.vsf_sysutil_statbuf** %1, %struct.vsf_sysutil_statbuf*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf*** %4, metadata !20393, metadata !DIExpression()), !dbg !20394
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20395, metadata !DIExpression()), !dbg !20396
  %6 = load %struct.vsf_sysutil_dir*, %struct.vsf_sysutil_dir** %3, align 8, !dbg !20397
  %7 = bitcast %struct.vsf_sysutil_dir* %6 to %struct.__dirstream*, !dbg !20398
  %8 = call i32 @dirfd(%struct.__dirstream* %7) #8, !dbg !20399
  store i32 %8, i32* %5, align 4, !dbg !20396
  %9 = load i32, i32* %5, align 4, !dbg !20400
  %10 = load %struct.vsf_sysutil_statbuf**, %struct.vsf_sysutil_statbuf*** %4, align 8, !dbg !20401
  call void @vsf_sysutil_fstat(i32 %9, %struct.vsf_sysutil_statbuf** %10), !dbg !20402
  ret void, !dbg !20403
}

; Function Attrs: nounwind
declare i32 @dirfd(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_is_regfile(%struct.vsf_sysutil_statbuf*) #0 !dbg !20404 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20407, metadata !DIExpression()), !dbg !20408
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20409, metadata !DIExpression()), !dbg !20410
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20411
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20412
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20410
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20413
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !20413
  %8 = load i32, i32* %7, align 8, !dbg !20413
  %9 = and i32 %8, 61440, !dbg !20413
  %10 = icmp eq i32 %9, 32768, !dbg !20413
  %11 = zext i1 %10 to i32, !dbg !20413
  ret i32 %11, !dbg !20414
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_is_symlink(%struct.vsf_sysutil_statbuf*) #0 !dbg !20415 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20416, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20418, metadata !DIExpression()), !dbg !20419
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20420
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20421
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20419
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20422
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !20422
  %8 = load i32, i32* %7, align 8, !dbg !20422
  %9 = and i32 %8, 61440, !dbg !20422
  %10 = icmp eq i32 %9, 40960, !dbg !20422
  %11 = zext i1 %10 to i32, !dbg !20422
  ret i32 %11, !dbg !20423
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_is_socket(%struct.vsf_sysutil_statbuf*) #0 !dbg !20424 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20425, metadata !DIExpression()), !dbg !20426
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20427, metadata !DIExpression()), !dbg !20428
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20429
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20430
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20428
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20431
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !20431
  %8 = load i32, i32* %7, align 8, !dbg !20431
  %9 = and i32 %8, 61440, !dbg !20431
  %10 = icmp eq i32 %9, 49152, !dbg !20431
  %11 = zext i1 %10 to i32, !dbg !20431
  ret i32 %11, !dbg !20432
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_is_dir(%struct.vsf_sysutil_statbuf*) #0 !dbg !20433 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20434, metadata !DIExpression()), !dbg !20435
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20436, metadata !DIExpression()), !dbg !20437
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20438
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20439
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20437
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20440
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !20440
  %8 = load i32, i32* %7, align 8, !dbg !20440
  %9 = and i32 %8, 61440, !dbg !20440
  %10 = icmp eq i32 %9, 16384, !dbg !20440
  %11 = zext i1 %10 to i32, !dbg !20440
  ret i32 %11, !dbg !20441
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_statbuf_get_perms(%struct.vsf_sysutil_statbuf*) #0 !dbg !1524 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20442, metadata !DIExpression()), !dbg !20443
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20444, metadata !DIExpression()), !dbg !20445
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !20446, metadata !DIExpression()), !dbg !20447
  %5 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20448
  %6 = bitcast %struct.vsf_sysutil_statbuf* %5 to %struct.stat*, !dbg !20449
  store %struct.stat* %6, %struct.stat** %4, align 8, !dbg !20447
  store i32 0, i32* %3, align 4, !dbg !20450
  br label %7, !dbg !20452

7:                                                ; preds = %14, %1
  %8 = load i32, i32* %3, align 4, !dbg !20453
  %9 = icmp slt i32 %8, 10, !dbg !20455
  br i1 %9, label %10, label %17, !dbg !20456

10:                                               ; preds = %7
  %11 = load i32, i32* %3, align 4, !dbg !20457
  %12 = sext i32 %11 to i64, !dbg !20459
  %13 = getelementptr inbounds [11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 %12, !dbg !20459
  store i8 45, i8* %13, align 1, !dbg !20460
  br label %14, !dbg !20461

14:                                               ; preds = %10
  %15 = load i32, i32* %3, align 4, !dbg !20462
  %16 = add nsw i32 %15, 1, !dbg !20462
  store i32 %16, i32* %3, align 4, !dbg !20462
  br label %7, !dbg !20463, !llvm.loop !20464

17:                                               ; preds = %7
  store i8 63, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20466
  %18 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20467
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !20468
  %20 = load i32, i32* %19, align 8, !dbg !20468
  %21 = and i32 %20, 61440, !dbg !20469
  switch i32 %21, label %29 [
    i32 32768, label %22
    i32 16384, label %23
    i32 40960, label %24
    i32 4096, label %25
    i32 49152, label %26
    i32 8192, label %27
    i32 24576, label %28
  ], !dbg !20470

22:                                               ; preds = %17
  store i8 45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20471
  br label %30, !dbg !20473

23:                                               ; preds = %17
  store i8 100, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20474
  br label %30, !dbg !20475

24:                                               ; preds = %17
  store i8 108, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20476
  br label %30, !dbg !20477

25:                                               ; preds = %17
  store i8 112, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20478
  br label %30, !dbg !20479

26:                                               ; preds = %17
  store i8 115, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20480
  br label %30, !dbg !20481

27:                                               ; preds = %17
  store i8 99, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20482
  br label %30, !dbg !20483

28:                                               ; preds = %17
  store i8 98, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 0), align 1, !dbg !20484
  br label %30, !dbg !20485

29:                                               ; preds = %17
  br label %30, !dbg !20486

30:                                               ; preds = %29, %28, %27, %26, %25, %24, %23, %22
  %31 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20487
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %31, i32 0, i32 3, !dbg !20489
  %33 = load i32, i32* %32, align 8, !dbg !20489
  %34 = and i32 %33, 256, !dbg !20490
  %35 = icmp ne i32 %34, 0, !dbg !20490
  br i1 %35, label %36, label %37, !dbg !20491

36:                                               ; preds = %30
  store i8 114, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 1), align 1, !dbg !20492
  br label %37, !dbg !20493

37:                                               ; preds = %36, %30
  %38 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20494
  %39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 3, !dbg !20496
  %40 = load i32, i32* %39, align 8, !dbg !20496
  %41 = and i32 %40, 128, !dbg !20497
  %42 = icmp ne i32 %41, 0, !dbg !20497
  br i1 %42, label %43, label %44, !dbg !20498

43:                                               ; preds = %37
  store i8 119, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 2), align 1, !dbg !20499
  br label %44, !dbg !20500

44:                                               ; preds = %43, %37
  %45 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20501
  %46 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !20503
  %47 = load i32, i32* %46, align 8, !dbg !20503
  %48 = and i32 %47, 64, !dbg !20504
  %49 = icmp ne i32 %48, 0, !dbg !20504
  br i1 %49, label %50, label %51, !dbg !20505

50:                                               ; preds = %44
  store i8 120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 3), align 1, !dbg !20506
  br label %51, !dbg !20507

51:                                               ; preds = %50, %44
  %52 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20508
  %53 = getelementptr inbounds %struct.stat, %struct.stat* %52, i32 0, i32 3, !dbg !20510
  %54 = load i32, i32* %53, align 8, !dbg !20510
  %55 = and i32 %54, 32, !dbg !20511
  %56 = icmp ne i32 %55, 0, !dbg !20511
  br i1 %56, label %57, label %58, !dbg !20512

57:                                               ; preds = %51
  store i8 114, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 4), align 1, !dbg !20513
  br label %58, !dbg !20514

58:                                               ; preds = %57, %51
  %59 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20515
  %60 = getelementptr inbounds %struct.stat, %struct.stat* %59, i32 0, i32 3, !dbg !20517
  %61 = load i32, i32* %60, align 8, !dbg !20517
  %62 = and i32 %61, 16, !dbg !20518
  %63 = icmp ne i32 %62, 0, !dbg !20518
  br i1 %63, label %64, label %65, !dbg !20519

64:                                               ; preds = %58
  store i8 119, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 5), align 1, !dbg !20520
  br label %65, !dbg !20521

65:                                               ; preds = %64, %58
  %66 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20522
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %66, i32 0, i32 3, !dbg !20524
  %68 = load i32, i32* %67, align 8, !dbg !20524
  %69 = and i32 %68, 8, !dbg !20525
  %70 = icmp ne i32 %69, 0, !dbg !20525
  br i1 %70, label %71, label %72, !dbg !20526

71:                                               ; preds = %65
  store i8 120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 6), align 1, !dbg !20527
  br label %72, !dbg !20528

72:                                               ; preds = %71, %65
  %73 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20529
  %74 = getelementptr inbounds %struct.stat, %struct.stat* %73, i32 0, i32 3, !dbg !20531
  %75 = load i32, i32* %74, align 8, !dbg !20531
  %76 = and i32 %75, 4, !dbg !20532
  %77 = icmp ne i32 %76, 0, !dbg !20532
  br i1 %77, label %78, label %79, !dbg !20533

78:                                               ; preds = %72
  store i8 114, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 7), align 1, !dbg !20534
  br label %79, !dbg !20535

79:                                               ; preds = %78, %72
  %80 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20536
  %81 = getelementptr inbounds %struct.stat, %struct.stat* %80, i32 0, i32 3, !dbg !20538
  %82 = load i32, i32* %81, align 8, !dbg !20538
  %83 = and i32 %82, 2, !dbg !20539
  %84 = icmp ne i32 %83, 0, !dbg !20539
  br i1 %84, label %85, label %86, !dbg !20540

85:                                               ; preds = %79
  store i8 119, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 8), align 1, !dbg !20541
  br label %86, !dbg !20542

86:                                               ; preds = %85, %79
  %87 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20543
  %88 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 3, !dbg !20545
  %89 = load i32, i32* %88, align 8, !dbg !20545
  %90 = and i32 %89, 1, !dbg !20546
  %91 = icmp ne i32 %90, 0, !dbg !20546
  br i1 %91, label %92, label %93, !dbg !20547

92:                                               ; preds = %86
  store i8 120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 9), align 1, !dbg !20548
  br label %93, !dbg !20549

93:                                               ; preds = %92, %86
  %94 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20550
  %95 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !20552
  %96 = load i32, i32* %95, align 8, !dbg !20552
  %97 = and i32 %96, 2048, !dbg !20553
  %98 = icmp ne i32 %97, 0, !dbg !20553
  br i1 %98, label %99, label %106, !dbg !20554

99:                                               ; preds = %93
  %100 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 3), align 1, !dbg !20555
  %101 = sext i8 %100 to i32, !dbg !20555
  %102 = icmp eq i32 %101, 120, !dbg !20556
  %103 = zext i1 %102 to i64, !dbg !20557
  %104 = select i1 %102, i32 115, i32 83, !dbg !20557
  %105 = trunc i32 %104 to i8, !dbg !20557
  store i8 %105, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 3), align 1, !dbg !20558
  br label %106, !dbg !20559

106:                                              ; preds = %99, %93
  %107 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20560
  %108 = getelementptr inbounds %struct.stat, %struct.stat* %107, i32 0, i32 3, !dbg !20562
  %109 = load i32, i32* %108, align 8, !dbg !20562
  %110 = and i32 %109, 1024, !dbg !20563
  %111 = icmp ne i32 %110, 0, !dbg !20563
  br i1 %111, label %112, label %119, !dbg !20564

112:                                              ; preds = %106
  %113 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 6), align 1, !dbg !20565
  %114 = sext i8 %113 to i32, !dbg !20565
  %115 = icmp eq i32 %114, 120, !dbg !20566
  %116 = zext i1 %115 to i64, !dbg !20567
  %117 = select i1 %115, i32 115, i32 83, !dbg !20567
  %118 = trunc i32 %117 to i8, !dbg !20567
  store i8 %118, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 6), align 1, !dbg !20568
  br label %119, !dbg !20569

119:                                              ; preds = %112, %106
  %120 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20570
  %121 = getelementptr inbounds %struct.stat, %struct.stat* %120, i32 0, i32 3, !dbg !20572
  %122 = load i32, i32* %121, align 8, !dbg !20572
  %123 = and i32 %122, 512, !dbg !20573
  %124 = icmp ne i32 %123, 0, !dbg !20573
  br i1 %124, label %125, label %132, !dbg !20574

125:                                              ; preds = %119
  %126 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 9), align 1, !dbg !20575
  %127 = sext i8 %126 to i32, !dbg !20575
  %128 = icmp eq i32 %127, 120, !dbg !20576
  %129 = zext i1 %128 to i64, !dbg !20577
  %130 = select i1 %128, i32 116, i32 84, !dbg !20577
  %131 = trunc i32 %130 to i8, !dbg !20577
  store i8 %131, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 9), align 1, !dbg !20578
  br label %132, !dbg !20579

132:                                              ; preds = %125, %119
  store i8 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i64 0, i64 10), align 1, !dbg !20580
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @vsf_sysutil_statbuf_get_perms.perms, i32 0, i32 0), !dbg !20581
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_statbuf_get_date(%struct.vsf_sysutil_statbuf*, i32, i64) #0 !dbg !1534 {
  %4 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.tm*, align 8
  %9 = alloca %struct.stat*, align 8
  %10 = alloca i8*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %4, metadata !20582, metadata !DIExpression()), !dbg !20583
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20584, metadata !DIExpression()), !dbg !20585
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !20586, metadata !DIExpression()), !dbg !20587
  call void @llvm.dbg.declare(metadata i32* %7, metadata !20588, metadata !DIExpression()), !dbg !20589
  call void @llvm.dbg.declare(metadata %struct.tm** %8, metadata !20590, metadata !DIExpression()), !dbg !20606
  call void @llvm.dbg.declare(metadata %struct.stat** %9, metadata !20607, metadata !DIExpression()), !dbg !20608
  %11 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %4, align 8, !dbg !20609
  %12 = bitcast %struct.vsf_sysutil_statbuf* %11 to %struct.stat*, !dbg !20610
  store %struct.stat* %12, %struct.stat** %9, align 8, !dbg !20608
  call void @llvm.dbg.declare(metadata i8** %10, metadata !20611, metadata !DIExpression()), !dbg !20612
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.1158, i32 0, i32 0), i8** %10, align 8, !dbg !20612
  %13 = load i32, i32* %5, align 4, !dbg !20613
  %14 = icmp ne i32 %13, 0, !dbg !20613
  br i1 %14, label %20, label %15, !dbg !20615

15:                                               ; preds = %3
  %16 = load %struct.stat*, %struct.stat** %9, align 8, !dbg !20616
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 12, !dbg !20618
  %18 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i32 0, i32 0, !dbg !20618
  %19 = call %struct.tm* @gmtime(i64* %18) #8, !dbg !20619
  store %struct.tm* %19, %struct.tm** %8, align 8, !dbg !20620
  br label %25, !dbg !20621

20:                                               ; preds = %3
  %21 = load %struct.stat*, %struct.stat** %9, align 8, !dbg !20622
  %22 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 12, !dbg !20624
  %23 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i32 0, i32 0, !dbg !20624
  %24 = call %struct.tm* @localtime(i64* %23) #8, !dbg !20625
  store %struct.tm* %24, %struct.tm** %8, align 8, !dbg !20626
  br label %25

25:                                               ; preds = %20, %15
  %26 = load %struct.stat*, %struct.stat** %9, align 8, !dbg !20627
  %27 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 12, !dbg !20629
  %28 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i32 0, i32 0, !dbg !20629
  %29 = load i64, i64* %28, align 8, !dbg !20629
  %30 = load i64, i64* %6, align 8, !dbg !20630
  %31 = icmp sgt i64 %29, %30, !dbg !20631
  br i1 %31, label %40, label %32, !dbg !20632

32:                                               ; preds = %25
  %33 = load i64, i64* %6, align 8, !dbg !20633
  %34 = load %struct.stat*, %struct.stat** %9, align 8, !dbg !20634
  %35 = getelementptr inbounds %struct.stat, %struct.stat* %34, i32 0, i32 12, !dbg !20635
  %36 = getelementptr inbounds %struct.timespec, %struct.timespec* %35, i32 0, i32 0, !dbg !20635
  %37 = load i64, i64* %36, align 8, !dbg !20635
  %38 = sub nsw i64 %33, %37, !dbg !20636
  %39 = icmp sgt i64 %38, 15724800, !dbg !20637
  br i1 %39, label %40, label %41, !dbg !20638

40:                                               ; preds = %32, %25
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39.1159, i32 0, i32 0), i8** %10, align 8, !dbg !20639
  br label %41, !dbg !20641

41:                                               ; preds = %40, %32
  %42 = load i8*, i8** %10, align 8, !dbg !20642
  %43 = load %struct.tm*, %struct.tm** %8, align 8, !dbg !20643
  %44 = call i64 @strftime(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_statbuf_get_date.datebuf, i32 0, i32 0), i64 64, i8* %42, %struct.tm* %43) #8, !dbg !20644
  %45 = trunc i64 %44 to i32, !dbg !20644
  store i32 %45, i32* %7, align 4, !dbg !20645
  store i8 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_statbuf_get_date.datebuf, i64 0, i64 63), align 1, !dbg !20646
  %46 = load i32, i32* %7, align 4, !dbg !20647
  %47 = icmp eq i32 %46, 0, !dbg !20649
  br i1 %47, label %48, label %49, !dbg !20650

48:                                               ; preds = %41
  call void @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40.1160, i32 0, i32 0)), !dbg !20651
  br label %49, !dbg !20653

49:                                               ; preds = %48, %41
  ret i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_statbuf_get_date.datebuf, i32 0, i32 0), !dbg !20654
}

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64*) #3

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #3

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_statbuf_get_numeric_date(%struct.vsf_sysutil_statbuf*, i32) #0 !dbg !1542 {
  %3 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.stat*, align 8
  %6 = alloca %struct.tm*, align 8
  %7 = alloca i32, align 4
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %3, metadata !20655, metadata !DIExpression()), !dbg !20656
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20657, metadata !DIExpression()), !dbg !20658
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !20659, metadata !DIExpression()), !dbg !20660
  %8 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %3, align 8, !dbg !20661
  %9 = bitcast %struct.vsf_sysutil_statbuf* %8 to %struct.stat*, !dbg !20662
  store %struct.stat* %9, %struct.stat** %5, align 8, !dbg !20660
  call void @llvm.dbg.declare(metadata %struct.tm** %6, metadata !20663, metadata !DIExpression()), !dbg !20664
  call void @llvm.dbg.declare(metadata i32* %7, metadata !20665, metadata !DIExpression()), !dbg !20666
  %10 = load i32, i32* %4, align 4, !dbg !20667
  %11 = icmp ne i32 %10, 0, !dbg !20667
  br i1 %11, label %17, label %12, !dbg !20669

12:                                               ; preds = %2
  %13 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !20670
  %14 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 12, !dbg !20672
  %15 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i32 0, i32 0, !dbg !20672
  %16 = call %struct.tm* @gmtime(i64* %15) #8, !dbg !20673
  store %struct.tm* %16, %struct.tm** %6, align 8, !dbg !20674
  br label %22, !dbg !20675

17:                                               ; preds = %2
  %18 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !20676
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 12, !dbg !20678
  %20 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i32 0, i32 0, !dbg !20678
  %21 = call %struct.tm* @localtime(i64* %20) #8, !dbg !20679
  store %struct.tm* %21, %struct.tm** %6, align 8, !dbg !20680
  br label %22

22:                                               ; preds = %17, %12
  %23 = load %struct.tm*, %struct.tm** %6, align 8, !dbg !20681
  %24 = call i64 @strftime(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @vsf_sysutil_statbuf_get_numeric_date.datebuf, i32 0, i32 0), i64 15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41.1163, i32 0, i32 0), %struct.tm* %23) #8, !dbg !20682
  %25 = trunc i64 %24 to i32, !dbg !20682
  store i32 %25, i32* %7, align 4, !dbg !20683
  %26 = load i32, i32* %7, align 4, !dbg !20684
  %27 = icmp eq i32 %26, 0, !dbg !20686
  br i1 %27, label %28, label %29, !dbg !20687

28:                                               ; preds = %22
  call void @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40.1160, i32 0, i32 0)), !dbg !20688
  br label %29, !dbg !20690

29:                                               ; preds = %28, %22
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @vsf_sysutil_statbuf_get_numeric_date.datebuf, i32 0, i32 0), !dbg !20691
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_statbuf_get_size(%struct.vsf_sysutil_statbuf*) #0 !dbg !20692 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20695, metadata !DIExpression()), !dbg !20696
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20697, metadata !DIExpression()), !dbg !20698
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20699
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20700
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20698
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20701
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !20703
  %8 = load i64, i64* %7, align 8, !dbg !20703
  %9 = icmp slt i64 %8, 0, !dbg !20704
  br i1 %9, label %10, label %11, !dbg !20705

10:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42.1166, i32 0, i32 0)), !dbg !20706
  br label %11, !dbg !20708

11:                                               ; preds = %10, %1
  %12 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20709
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 8, !dbg !20710
  %14 = load i64, i64* %13, align 8, !dbg !20710
  ret i64 %14, !dbg !20711
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_get_uid(%struct.vsf_sysutil_statbuf*) #0 !dbg !20712 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20713, metadata !DIExpression()), !dbg !20714
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20715, metadata !DIExpression()), !dbg !20716
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20717
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20718
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20716
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20719
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 4, !dbg !20720
  %8 = load i32, i32* %7, align 4, !dbg !20720
  ret i32 %8, !dbg !20721
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_get_gid(%struct.vsf_sysutil_statbuf*) #0 !dbg !20722 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20723, metadata !DIExpression()), !dbg !20724
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20725, metadata !DIExpression()), !dbg !20726
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20727
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20728
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20726
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20729
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 5, !dbg !20730
  %8 = load i32, i32* %7, align 8, !dbg !20730
  ret i32 %8, !dbg !20731
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_get_links(%struct.vsf_sysutil_statbuf*) #0 !dbg !20732 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20735, metadata !DIExpression()), !dbg !20736
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20737, metadata !DIExpression()), !dbg !20738
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20739
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20740
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20738
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20741
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 2, !dbg !20742
  %8 = load i64, i64* %7, align 8, !dbg !20742
  %9 = trunc i64 %8 to i32, !dbg !20741
  ret i32 %9, !dbg !20743
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_statbuf_is_readable_other(%struct.vsf_sysutil_statbuf*) #0 !dbg !20744 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %4 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %3, metadata !20745, metadata !DIExpression()), !dbg !20746
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !20747, metadata !DIExpression()), !dbg !20748
  %5 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %3, align 8, !dbg !20749
  %6 = bitcast %struct.vsf_sysutil_statbuf* %5 to %struct.stat*, !dbg !20750
  store %struct.stat* %6, %struct.stat** %4, align 8, !dbg !20748
  %7 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !20751
  %8 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 3, !dbg !20753
  %9 = load i32, i32* %8, align 8, !dbg !20753
  %10 = and i32 %9, 4, !dbg !20754
  %11 = icmp ne i32 %10, 0, !dbg !20754
  br i1 %11, label %12, label %13, !dbg !20755

12:                                               ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !20756
  br label %14, !dbg !20756

13:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !20758
  br label %14, !dbg !20758

14:                                               ; preds = %13, %12
  %15 = load i32, i32* %2, align 4, !dbg !20759
  ret i32 %15, !dbg !20759
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_statbuf_get_sortkey_mtime(%struct.vsf_sysutil_statbuf*) #0 !dbg !1550 {
  %2 = alloca %struct.vsf_sysutil_statbuf*, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.vsf_sysutil_statbuf* %0, %struct.vsf_sysutil_statbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_statbuf** %2, metadata !20760, metadata !DIExpression()), !dbg !20761
  call void @llvm.dbg.declare(metadata %struct.stat** %3, metadata !20762, metadata !DIExpression()), !dbg !20763
  %4 = load %struct.vsf_sysutil_statbuf*, %struct.vsf_sysutil_statbuf** %2, align 8, !dbg !20764
  %5 = bitcast %struct.vsf_sysutil_statbuf* %4 to %struct.stat*, !dbg !20765
  store %struct.stat* %5, %struct.stat** %3, align 8, !dbg !20763
  %6 = load %struct.stat*, %struct.stat** %3, align 8, !dbg !20766
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 12, !dbg !20767
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 0, !dbg !20767
  %9 = load i64, i64* %8, align 8, !dbg !20767
  %10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_statbuf_get_sortkey_mtime.intbuf, i32 0, i32 0), i64 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43.1177, i32 0, i32 0), i64 %9) #8, !dbg !20768
  ret i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vsf_sysutil_statbuf_get_sortkey_mtime.intbuf, i32 0, i32 0), !dbg !20769
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_fchown(i32, i32, i32) #0 !dbg !20770 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20773, metadata !DIExpression()), !dbg !20774
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !20775, metadata !DIExpression()), !dbg !20776
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20777, metadata !DIExpression()), !dbg !20778
  %7 = load i32, i32* %4, align 4, !dbg !20779
  %8 = load i32, i32* %5, align 4, !dbg !20781
  %9 = load i32, i32* %6, align 4, !dbg !20782
  %10 = call i32 @fchown(i32 %7, i32 %8, i32 %9) #8, !dbg !20783
  %11 = icmp ne i32 %10, 0, !dbg !20784
  br i1 %11, label %12, label %13, !dbg !20785

12:                                               ; preds = %3
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44.1180, i32 0, i32 0)), !dbg !20786
  br label %13, !dbg !20788

13:                                               ; preds = %12, %3
  ret void, !dbg !20789
}

; Function Attrs: nounwind
declare i32 @fchown(i32, i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_fchmod(i32, i32) #0 !dbg !20790 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20793, metadata !DIExpression()), !dbg !20794
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20795, metadata !DIExpression()), !dbg !20796
  %5 = load i32, i32* %4, align 4, !dbg !20797
  %6 = and i32 %5, 511, !dbg !20798
  store i32 %6, i32* %4, align 4, !dbg !20799
  %7 = load i32, i32* %3, align 4, !dbg !20800
  %8 = load i32, i32* %4, align 4, !dbg !20802
  %9 = call i32 @fchmod(i32 %7, i32 %8) #8, !dbg !20803
  %10 = icmp ne i32 %9, 0, !dbg !20803
  br i1 %10, label %11, label %12, !dbg !20804

11:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45.1183, i32 0, i32 0)), !dbg !20805
  br label %12, !dbg !20807

12:                                               ; preds = %11, %2
  ret void, !dbg !20808
}

; Function Attrs: nounwind
declare i32 @fchmod(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_chmod(i8*, i32) #0 !dbg !20809 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20810, metadata !DIExpression()), !dbg !20811
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20812, metadata !DIExpression()), !dbg !20813
  %5 = load i32, i32* %4, align 4, !dbg !20814
  %6 = and i32 %5, 511, !dbg !20815
  store i32 %6, i32* %4, align 4, !dbg !20816
  %7 = load i8*, i8** %3, align 8, !dbg !20817
  %8 = load i32, i32* %4, align 4, !dbg !20818
  %9 = call i32 @chmod(i8* %7, i32 %8) #8, !dbg !20819
  ret i32 %9, !dbg !20820
}

; Function Attrs: nounwind
declare i32 @chmod(i8*, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_lock_file_write(i32) #0 !dbg !20821 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20822, metadata !DIExpression()), !dbg !20823
  %3 = load i32, i32* %2, align 4, !dbg !20824
  %4 = call i32 @lock_internal(i32 %3, i32 1), !dbg !20825
  ret i32 %4, !dbg !20826
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @lock_internal(i32, i32) #0 !dbg !20827 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.flock, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20830, metadata !DIExpression()), !dbg !20831
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20832, metadata !DIExpression()), !dbg !20833
  call void @llvm.dbg.declare(metadata %struct.flock* %5, metadata !20834, metadata !DIExpression()), !dbg !20843
  call void @llvm.dbg.declare(metadata i32* %6, metadata !20844, metadata !DIExpression()), !dbg !20845
  call void @llvm.dbg.declare(metadata i32* %7, metadata !20846, metadata !DIExpression()), !dbg !20847
  %8 = bitcast %struct.flock* %5 to i8*, !dbg !20848
  call void @vsf_sysutil_memclr(i8* %8, i32 32), !dbg !20849
  %9 = load i32, i32* %4, align 4, !dbg !20850
  %10 = trunc i32 %9 to i16, !dbg !20850
  %11 = getelementptr inbounds %struct.flock, %struct.flock* %5, i32 0, i32 0, !dbg !20851
  store i16 %10, i16* %11, align 8, !dbg !20852
  %12 = getelementptr inbounds %struct.flock, %struct.flock* %5, i32 0, i32 1, !dbg !20853
  store i16 0, i16* %12, align 2, !dbg !20854
  %13 = getelementptr inbounds %struct.flock, %struct.flock* %5, i32 0, i32 2, !dbg !20855
  store i64 0, i64* %13, align 8, !dbg !20856
  %14 = getelementptr inbounds %struct.flock, %struct.flock* %5, i32 0, i32 3, !dbg !20857
  store i64 0, i64* %14, align 8, !dbg !20858
  br label %15, !dbg !20859, !llvm.loop !20860

15:                                               ; preds = %26, %2
  %16 = load i32, i32* %3, align 4, !dbg !20862
  %17 = call i32 (i32, i32, ...) @fcntl(i32 %16, i32 7, %struct.flock* %5), !dbg !20864
  store i32 %17, i32* %6, align 4, !dbg !20865
  %18 = call i32* @__errno_location() #9, !dbg !20866
  %19 = load i32, i32* %18, align 4, !dbg !20866
  store i32 %19, i32* %7, align 4, !dbg !20867
  call void @vsf_sysutil_check_pending_actions(i32 0, i32 0, i32 0), !dbg !20868
  br label %20, !dbg !20869

20:                                               ; preds = %15
  %21 = load i32, i32* %6, align 4, !dbg !20870
  %22 = icmp slt i32 %21, 0, !dbg !20871
  br i1 %22, label %23, label %26, !dbg !20872

23:                                               ; preds = %20
  %24 = load i32, i32* %7, align 4, !dbg !20873
  %25 = icmp eq i32 %24, 4, !dbg !20874
  br label %26

26:                                               ; preds = %23, %20
  %27 = phi i1 [ false, %20 ], [ %25, %23 ]
  br i1 %27, label %15, label %28, !dbg !20869, !llvm.loop !20860

28:                                               ; preds = %26
  %29 = load i32, i32* %6, align 4, !dbg !20875
  ret i32 %29, !dbg !20876
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_lock_file_read(i32) #0 !dbg !20877 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20878, metadata !DIExpression()), !dbg !20879
  %3 = load i32, i32* %2, align 4, !dbg !20880
  %4 = call i32 @lock_internal(i32 %3, i32 0), !dbg !20881
  ret i32 %4, !dbg !20882
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_unlock_file(i32) #0 !dbg !20883 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.flock, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20884, metadata !DIExpression()), !dbg !20885
  call void @llvm.dbg.declare(metadata i32* %3, metadata !20886, metadata !DIExpression()), !dbg !20887
  call void @llvm.dbg.declare(metadata %struct.flock* %4, metadata !20888, metadata !DIExpression()), !dbg !20889
  %5 = bitcast %struct.flock* %4 to i8*, !dbg !20890
  call void @vsf_sysutil_memclr(i8* %5, i32 32), !dbg !20891
  %6 = getelementptr inbounds %struct.flock, %struct.flock* %4, i32 0, i32 0, !dbg !20892
  store i16 2, i16* %6, align 8, !dbg !20893
  %7 = getelementptr inbounds %struct.flock, %struct.flock* %4, i32 0, i32 1, !dbg !20894
  store i16 0, i16* %7, align 2, !dbg !20895
  %8 = getelementptr inbounds %struct.flock, %struct.flock* %4, i32 0, i32 2, !dbg !20896
  store i64 0, i64* %8, align 8, !dbg !20897
  %9 = getelementptr inbounds %struct.flock, %struct.flock* %4, i32 0, i32 3, !dbg !20898
  store i64 0, i64* %9, align 8, !dbg !20899
  %10 = load i32, i32* %2, align 4, !dbg !20900
  %11 = call i32 (i32, i32, ...) @fcntl(i32 %10, i32 6, %struct.flock* %4), !dbg !20901
  store i32 %11, i32* %3, align 4, !dbg !20902
  %12 = load i32, i32* %3, align 4, !dbg !20903
  %13 = icmp ne i32 %12, 0, !dbg !20905
  br i1 %13, label %14, label %15, !dbg !20906

14:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.1032, i32 0, i32 0)), !dbg !20907
  br label %15, !dbg !20909

15:                                               ; preds = %14, %1
  ret void, !dbg !20910
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_readlink(i8*, i8*, i32) #0 !dbg !20911 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !20914, metadata !DIExpression()), !dbg !20915
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !20916, metadata !DIExpression()), !dbg !20917
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !20918, metadata !DIExpression()), !dbg !20919
  call void @llvm.dbg.declare(metadata i32* %8, metadata !20920, metadata !DIExpression()), !dbg !20921
  %9 = load i32, i32* %7, align 4, !dbg !20922
  %10 = icmp eq i32 %9, 0, !dbg !20924
  br i1 %10, label %11, label %12, !dbg !20925

11:                                               ; preds = %3
  store i32 -1, i32* %4, align 4, !dbg !20926
  br label %30, !dbg !20926

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 8, !dbg !20928
  %14 = load i8*, i8** %6, align 8, !dbg !20929
  %15 = load i32, i32* %7, align 4, !dbg !20930
  %16 = sub i32 %15, 1, !dbg !20931
  %17 = zext i32 %16 to i64, !dbg !20930
  %18 = call i64 @readlink(i8* %13, i8* %14, i64 %17) #8, !dbg !20932
  %19 = trunc i64 %18 to i32, !dbg !20932
  store i32 %19, i32* %8, align 4, !dbg !20933
  %20 = load i32, i32* %8, align 4, !dbg !20934
  %21 = icmp slt i32 %20, 0, !dbg !20936
  br i1 %21, label %22, label %24, !dbg !20937

22:                                               ; preds = %12
  %23 = load i32, i32* %8, align 4, !dbg !20938
  store i32 %23, i32* %4, align 4, !dbg !20940
  br label %30, !dbg !20940

24:                                               ; preds = %12
  %25 = load i8*, i8** %6, align 8, !dbg !20941
  %26 = load i32, i32* %8, align 4, !dbg !20942
  %27 = sext i32 %26 to i64, !dbg !20941
  %28 = getelementptr inbounds i8, i8* %25, i64 %27, !dbg !20941
  store i8 0, i8* %28, align 1, !dbg !20943
  %29 = load i32, i32* %8, align 4, !dbg !20944
  store i32 %29, i32* %4, align 4, !dbg !20945
  br label %30, !dbg !20945

30:                                               ; preds = %24, %22, %11
  %31 = load i32, i32* %4, align 4, !dbg !20946
  ret i32 %31, !dbg !20946
}

; Function Attrs: nounwind
declare i64 @readlink(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_get_error() #0 !dbg !20947 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !20950, metadata !DIExpression()), !dbg !20951
  store i32 1, i32* %1, align 4, !dbg !20951
  %2 = call i32* @__errno_location() #9, !dbg !20952
  %3 = load i32, i32* %2, align 4, !dbg !20952
  switch i32 %3, label %11 [
    i32 98, label %4
    i32 38, label %5
    i32 4, label %6
    i32 22, label %7
    i32 95, label %8
    i32 13, label %9
    i32 2, label %10
  ], !dbg !20953

4:                                                ; preds = %0
  store i32 2, i32* %1, align 4, !dbg !20954
  br label %12, !dbg !20956

5:                                                ; preds = %0
  store i32 3, i32* %1, align 4, !dbg !20957
  br label %12, !dbg !20958

6:                                                ; preds = %0
  store i32 4, i32* %1, align 4, !dbg !20959
  br label %12, !dbg !20960

7:                                                ; preds = %0
  store i32 5, i32* %1, align 4, !dbg !20961
  br label %12, !dbg !20962

8:                                                ; preds = %0
  store i32 6, i32* %1, align 4, !dbg !20963
  br label %12, !dbg !20964

9:                                                ; preds = %0
  store i32 7, i32* %1, align 4, !dbg !20965
  br label %12, !dbg !20966

10:                                               ; preds = %0
  store i32 8, i32* %1, align 4, !dbg !20967
  br label %12, !dbg !20968

11:                                               ; preds = %0
  br label %12, !dbg !20969

12:                                               ; preds = %11, %10, %9, %8, %7, %6, %5, %4
  %13 = load i32, i32* %1, align 4, !dbg !20970
  ret i32 %13, !dbg !20971
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_get_ipv4_sock() #0 !dbg !20972 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !20973, metadata !DIExpression()), !dbg !20974
  %2 = call i32 @socket(i32 2, i32 1, i32 6) #8, !dbg !20975
  store i32 %2, i32* %1, align 4, !dbg !20974
  %3 = load i32, i32* %1, align 4, !dbg !20976
  %4 = icmp slt i32 %3, 0, !dbg !20978
  br i1 %4, label %5, label %6, !dbg !20979

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46.1198, i32 0, i32 0)), !dbg !20980
  br label %6, !dbg !20982

6:                                                ; preds = %5, %0
  %7 = load i32, i32* %1, align 4, !dbg !20983
  ret i32 %7, !dbg !20984
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_get_ipv6_sock() #0 !dbg !20985 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !20986, metadata !DIExpression()), !dbg !20987
  %2 = call i32 @socket(i32 10, i32 1, i32 6) #8, !dbg !20988
  store i32 %2, i32* %1, align 4, !dbg !20987
  %3 = load i32, i32* %1, align 4, !dbg !20989
  %4 = icmp slt i32 %3, 0, !dbg !20991
  br i1 %4, label %5, label %6, !dbg !20992

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46.1198, i32 0, i32 0)), !dbg !20993
  br label %6, !dbg !20995

6:                                                ; preds = %5, %0
  %7 = load i32, i32* %1, align 4, !dbg !20996
  ret i32 %7, !dbg !20997
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_unix_stream_socketpair() #0 !dbg !20998 {
  %1 = alloca %struct.vsf_client_launch, align 4
  %2 = alloca %struct.vsf_client_launch, align 4
  %3 = alloca [2 x i32], align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.vsf_client_launch* %2, metadata !21005, metadata !DIExpression()), !dbg !21006
  call void @llvm.dbg.declare(metadata [2 x i32]* %3, metadata !21007, metadata !DIExpression()), !dbg !21009
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21010, metadata !DIExpression()), !dbg !21011
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i32 0, i32 0, !dbg !21012
  %6 = call i32 @socketpair(i32 1, i32 1, i32 0, i32* %5) #8, !dbg !21013
  store i32 %6, i32* %4, align 4, !dbg !21011
  %7 = load i32, i32* %4, align 4, !dbg !21014
  %8 = icmp ne i32 %7, 0, !dbg !21016
  br i1 %8, label %9, label %10, !dbg !21017

9:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47.1203, i32 0, i32 0)), !dbg !21018
  br label %10, !dbg !21020

10:                                               ; preds = %9, %0
  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0, !dbg !21021
  %12 = load i32, i32* %11, align 4, !dbg !21021
  %13 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %2, i32 0, i32 0, !dbg !21022
  store i32 %12, i32* %13, align 4, !dbg !21023
  %14 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1, !dbg !21024
  %15 = load i32, i32* %14, align 4, !dbg !21024
  %16 = getelementptr inbounds %struct.vsf_client_launch, %struct.vsf_client_launch* %2, i32 0, i32 1, !dbg !21025
  store i32 %15, i32* %16, align 4, !dbg !21026
  %17 = bitcast %struct.vsf_client_launch* %1 to i8*, !dbg !21027
  %18 = bitcast %struct.vsf_client_launch* %2 to i8*, !dbg !21027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 8, i1 false), !dbg !21027
  %19 = bitcast %struct.vsf_client_launch* %1 to i64*, !dbg !21028
  %20 = load i64, i64* %19, align 4, !dbg !21028
  ret i64 %20, !dbg !21028
}

; Function Attrs: nounwind
declare i32 @socketpair(i32, i32, i32, i32*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_bind(i32, %struct.vsf_sysutil_sockaddr*) #0 !dbg !21029 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %5 = alloca %struct.sockaddr*, align 8
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21032, metadata !DIExpression()), !dbg !21033
  store %struct.vsf_sysutil_sockaddr* %1, %struct.vsf_sysutil_sockaddr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %4, metadata !21034, metadata !DIExpression()), !dbg !21035
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %5, metadata !21036, metadata !DIExpression()), !dbg !21039
  %7 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21040
  %8 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %7, i32 0, i32 0, !dbg !21041
  %9 = bitcast %union.anon.114* %8 to %struct.sockaddr*, !dbg !21042
  store %struct.sockaddr* %9, %struct.sockaddr** %5, align 8, !dbg !21039
  call void @llvm.dbg.declare(metadata i32* %6, metadata !21043, metadata !DIExpression()), !dbg !21044
  store i32 0, i32* %6, align 4, !dbg !21044
  %10 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !21045
  %11 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %10, i32 0, i32 0, !dbg !21047
  %12 = load i16, i16* %11, align 2, !dbg !21047
  %13 = zext i16 %12 to i32, !dbg !21045
  %14 = icmp eq i32 %13, 2, !dbg !21048
  br i1 %14, label %15, label %16, !dbg !21049

15:                                               ; preds = %2
  store i32 16, i32* %6, align 4, !dbg !21050
  br label %25, !dbg !21052

16:                                               ; preds = %2
  %17 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !21053
  %18 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %17, i32 0, i32 0, !dbg !21055
  %19 = load i16, i16* %18, align 2, !dbg !21055
  %20 = zext i16 %19 to i32, !dbg !21053
  %21 = icmp eq i32 %20, 10, !dbg !21056
  br i1 %21, label %22, label %23, !dbg !21057

22:                                               ; preds = %16
  store i32 28, i32* %6, align 4, !dbg !21058
  br label %24, !dbg !21060

23:                                               ; preds = %16
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48.1206, i32 0, i32 0)), !dbg !21061
  br label %24

24:                                               ; preds = %23, %22
  br label %25

25:                                               ; preds = %24, %15
  %26 = load i32, i32* %3, align 4, !dbg !21063
  %27 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !21064
  %28 = load i32, i32* %6, align 4, !dbg !21065
  %29 = call i32 @bind(i32 %26, %struct.sockaddr* %27, i32 %28) #8, !dbg !21066
  ret i32 %29, !dbg !21067
}

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_listen(i32, i32) #0 !dbg !21068 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21071, metadata !DIExpression()), !dbg !21072
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21073, metadata !DIExpression()), !dbg !21074
  call void @llvm.dbg.declare(metadata i32* %5, metadata !21075, metadata !DIExpression()), !dbg !21076
  %6 = load i32, i32* %3, align 4, !dbg !21077
  %7 = load i32, i32* %4, align 4, !dbg !21078
  %8 = call i32 @listen(i32 %6, i32 %7) #8, !dbg !21079
  store i32 %8, i32* %5, align 4, !dbg !21076
  %9 = load i32, i32* %5, align 4, !dbg !21080
  %10 = call i32 @vsf_sysutil_retval_is_error(i32 %9), !dbg !21082
  %11 = icmp ne i32 %10, 0, !dbg !21082
  br i1 %11, label %12, label %16, !dbg !21083

12:                                               ; preds = %2
  %13 = call i32 @vsf_sysutil_get_error(), !dbg !21084
  %14 = icmp ne i32 %13, 2, !dbg !21085
  br i1 %14, label %15, label %16, !dbg !21086

15:                                               ; preds = %12
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49.1209, i32 0, i32 0)), !dbg !21087
  br label %16, !dbg !21089

16:                                               ; preds = %15, %12, %2
  %17 = load i32, i32* %5, align 4, !dbg !21090
  ret i32 %17, !dbg !21091
}

; Function Attrs: nounwind
declare i32 @listen(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_accept_timeout(i32, %struct.vsf_sysutil_sockaddr*, i32) #0 !dbg !21092 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.vsf_sysutil_sockaddr, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.__sigset_t, align 8
  %12 = alloca %struct.timespec, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !21095, metadata !DIExpression()), !dbg !21096
  store %struct.vsf_sysutil_sockaddr* %1, %struct.vsf_sysutil_sockaddr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %6, metadata !21097, metadata !DIExpression()), !dbg !21098
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !21099, metadata !DIExpression()), !dbg !21100
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr* %8, metadata !21101, metadata !DIExpression()), !dbg !21102
  call void @llvm.dbg.declare(metadata i32* %9, metadata !21103, metadata !DIExpression()), !dbg !21104
  call void @llvm.dbg.declare(metadata i32* %10, metadata !21105, metadata !DIExpression()), !dbg !21106
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %11, metadata !21107, metadata !DIExpression()), !dbg !21113
  call void @llvm.dbg.declare(metadata %struct.timespec* %12, metadata !21114, metadata !DIExpression()), !dbg !21115
  call void @llvm.dbg.declare(metadata i32* %13, metadata !21116, metadata !DIExpression()), !dbg !21119
  store i32 28, i32* %13, align 4, !dbg !21119
  %16 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !21120
  %17 = icmp ne %struct.vsf_sysutil_sockaddr* %16, null, !dbg !21120
  br i1 %17, label %18, label %21, !dbg !21122

18:                                               ; preds = %3
  %19 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !21123
  %20 = bitcast %struct.vsf_sysutil_sockaddr* %19 to i8*, !dbg !21123
  call void @vsf_sysutil_memclr(i8* %20, i32 28), !dbg !21125
  br label %21, !dbg !21126

21:                                               ; preds = %18, %3
  %22 = load i32, i32* %7, align 4, !dbg !21127
  %23 = icmp ugt i32 %22, 0, !dbg !21129
  br i1 %23, label %24, label %74, !dbg !21130

24:                                               ; preds = %21
  br label %25, !dbg !21131, !llvm.loop !21133

25:                                               ; preds = %24
  call void @llvm.dbg.declare(metadata i32* %14, metadata !21134, metadata !DIExpression()), !dbg !21136
  call void @llvm.dbg.declare(metadata i32* %15, metadata !21137, metadata !DIExpression()), !dbg !21136
  %26 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0, !dbg !21136
  %27 = getelementptr inbounds [16 x i64], [16 x i64]* %26, i64 0, i64 0, !dbg !21136
  %28 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %27) #8, !dbg !21136, !srcloc !21138
  %29 = extractvalue { i64, i64* } %28, 0, !dbg !21136
  %30 = extractvalue { i64, i64* } %28, 1, !dbg !21136
  %31 = trunc i64 %29 to i32, !dbg !21136
  store i32 %31, i32* %14, align 4, !dbg !21136
  %32 = ptrtoint i64* %30 to i64, !dbg !21136
  %33 = trunc i64 %32 to i32, !dbg !21136
  store i32 %33, i32* %15, align 4, !dbg !21136
  br label %34, !dbg !21136

34:                                               ; preds = %25
  %35 = load i32, i32* %5, align 4, !dbg !21139
  %36 = srem i32 %35, 64, !dbg !21139
  %37 = zext i32 %36 to i64, !dbg !21139
  %38 = shl i64 1, %37, !dbg !21139
  %39 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0, !dbg !21139
  %40 = load i32, i32* %5, align 4, !dbg !21139
  %41 = sdiv i32 %40, 64, !dbg !21139
  %42 = sext i32 %41 to i64, !dbg !21139
  %43 = getelementptr inbounds [16 x i64], [16 x i64]* %39, i64 0, i64 %42, !dbg !21139
  %44 = load i64, i64* %43, align 8, !dbg !21139
  %45 = or i64 %44, %38, !dbg !21139
  store i64 %45, i64* %43, align 8, !dbg !21139
  %46 = load i32, i32* %7, align 4, !dbg !21140
  %47 = zext i32 %46 to i64, !dbg !21140
  %48 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 0, !dbg !21141
  store i64 %47, i64* %48, align 8, !dbg !21142
  %49 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 1, !dbg !21143
  store i64 0, i64* %49, align 8, !dbg !21144
  br label %50, !dbg !21145, !llvm.loop !21146

50:                                               ; preds = %62, %34
  %51 = load i32, i32* %5, align 4, !dbg !21148
  %52 = add nsw i32 %51, 1, !dbg !21150
  %53 = call i32 @select(i32 %52, %struct.__sigset_t* %11, %struct.__sigset_t* null, %struct.__sigset_t* null, %struct.timespec* %12), !dbg !21151
  store i32 %53, i32* %9, align 4, !dbg !21152
  %54 = call i32* @__errno_location() #9, !dbg !21153
  %55 = load i32, i32* %54, align 4, !dbg !21153
  store i32 %55, i32* %10, align 4, !dbg !21154
  call void @vsf_sysutil_check_pending_actions(i32 0, i32 0, i32 0), !dbg !21155
  br label %56, !dbg !21156

56:                                               ; preds = %50
  %57 = load i32, i32* %9, align 4, !dbg !21157
  %58 = icmp slt i32 %57, 0, !dbg !21158
  br i1 %58, label %59, label %62, !dbg !21159

59:                                               ; preds = %56
  %60 = load i32, i32* %10, align 4, !dbg !21160
  %61 = icmp eq i32 %60, 4, !dbg !21161
  br label %62

62:                                               ; preds = %59, %56
  %63 = phi i1 [ false, %56 ], [ %61, %59 ]
  br i1 %63, label %50, label %64, !dbg !21156, !llvm.loop !21146

64:                                               ; preds = %62
  %65 = load i32, i32* %9, align 4, !dbg !21162
  %66 = icmp sle i32 %65, 0, !dbg !21164
  br i1 %66, label %67, label %73, !dbg !21165

67:                                               ; preds = %64
  %68 = load i32, i32* %9, align 4, !dbg !21166
  %69 = icmp eq i32 %68, 0, !dbg !21169
  br i1 %69, label %70, label %72, !dbg !21170

70:                                               ; preds = %67
  %71 = call i32* @__errno_location() #9, !dbg !21171
  store i32 11, i32* %71, align 4, !dbg !21173
  br label %72, !dbg !21174

72:                                               ; preds = %70, %67
  store i32 -1, i32* %4, align 4, !dbg !21175
  br label %131, !dbg !21175

73:                                               ; preds = %64
  br label %74, !dbg !21176

74:                                               ; preds = %73, %21
  %75 = load i32, i32* %5, align 4, !dbg !21177
  %76 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %8, i32 0, i32 0, !dbg !21178
  %77 = bitcast %union.anon.114* %76 to %struct.sockaddr*, !dbg !21179
  %78 = call i32 @accept(i32 %75, %struct.sockaddr* %77, i32* %13), !dbg !21180
  store i32 %78, i32* %9, align 4, !dbg !21181
  call void @vsf_sysutil_check_pending_actions(i32 0, i32 0, i32 0), !dbg !21182
  %79 = load i32, i32* %9, align 4, !dbg !21183
  %80 = icmp slt i32 %79, 0, !dbg !21185
  br i1 %80, label %81, label %83, !dbg !21186

81:                                               ; preds = %74
  %82 = load i32, i32* %9, align 4, !dbg !21187
  store i32 %82, i32* %4, align 4, !dbg !21189
  br label %131, !dbg !21189

83:                                               ; preds = %74
  %84 = load i32, i32* %13, align 4, !dbg !21190
  %85 = icmp eq i32 %84, 0, !dbg !21192
  br i1 %85, label %86, label %87, !dbg !21193

86:                                               ; preds = %83
  store i32 -1, i32* %4, align 4, !dbg !21194
  br label %131, !dbg !21194

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %8, i32 0, i32 0, !dbg !21196
  %89 = bitcast %union.anon.114* %88 to %struct.sockaddr*, !dbg !21198
  %90 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %89, i32 0, i32 0, !dbg !21199
  %91 = load i16, i16* %90, align 4, !dbg !21199
  %92 = zext i16 %91 to i32, !dbg !21200
  %93 = icmp ne i32 %92, 2, !dbg !21201
  br i1 %93, label %94, label %102, !dbg !21202

94:                                               ; preds = %87
  %95 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %8, i32 0, i32 0, !dbg !21203
  %96 = bitcast %union.anon.114* %95 to %struct.sockaddr*, !dbg !21204
  %97 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %96, i32 0, i32 0, !dbg !21205
  %98 = load i16, i16* %97, align 4, !dbg !21205
  %99 = zext i16 %98 to i32, !dbg !21206
  %100 = icmp ne i32 %99, 10, !dbg !21207
  br i1 %100, label %101, label %102, !dbg !21208

101:                                              ; preds = %94
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48.1206, i32 0, i32 0)), !dbg !21209
  br label %102, !dbg !21211

102:                                              ; preds = %101, %94, %87
  %103 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !21212
  %104 = icmp ne %struct.vsf_sysutil_sockaddr* %103, null, !dbg !21212
  br i1 %104, label %105, label %129, !dbg !21214

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %8, i32 0, i32 0, !dbg !21215
  %107 = bitcast %union.anon.114* %106 to %struct.sockaddr*, !dbg !21218
  %108 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %107, i32 0, i32 0, !dbg !21219
  %109 = load i16, i16* %108, align 4, !dbg !21219
  %110 = zext i16 %109 to i32, !dbg !21220
  %111 = icmp eq i32 %110, 2, !dbg !21221
  br i1 %111, label %112, label %122, !dbg !21222

112:                                              ; preds = %105
  %113 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %8, i32 0, i32 0, !dbg !21223
  %114 = bitcast %union.anon.114* %113 to %struct.sockaddr_in*, !dbg !21225
  %115 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %114, i32 0, i32 3, !dbg !21226
  %116 = bitcast [8 x i8]* %115 to i8*, !dbg !21227
  call void @vsf_sysutil_memclr(i8* %116, i32 8), !dbg !21228
  %117 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !21229
  %118 = bitcast %struct.vsf_sysutil_sockaddr* %117 to i8*, !dbg !21229
  %119 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %8, i32 0, i32 0, !dbg !21230
  %120 = bitcast %union.anon.114* %119 to %struct.sockaddr_in*, !dbg !21231
  %121 = bitcast %struct.sockaddr_in* %120 to i8*, !dbg !21232
  call void @vsf_sysutil_memcpy(i8* %118, i8* %121, i32 16), !dbg !21233
  br label %128, !dbg !21234

122:                                              ; preds = %105
  %123 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !21235
  %124 = bitcast %struct.vsf_sysutil_sockaddr* %123 to i8*, !dbg !21235
  %125 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %8, i32 0, i32 0, !dbg !21237
  %126 = bitcast %union.anon.114* %125 to %struct.sockaddr_in6*, !dbg !21238
  %127 = bitcast %struct.sockaddr_in6* %126 to i8*, !dbg !21239
  call void @vsf_sysutil_memcpy(i8* %124, i8* %127, i32 28), !dbg !21240
  br label %128

128:                                              ; preds = %122, %112
  br label %129, !dbg !21241

129:                                              ; preds = %128, %102
  %130 = load i32, i32* %9, align 4, !dbg !21242
  store i32 %130, i32* %4, align 4, !dbg !21243
  br label %131, !dbg !21243

131:                                              ; preds = %129, %86, %81, %72
  %132 = load i32, i32* %4, align 4, !dbg !21244
  ret i32 %132, !dbg !21244
}

declare i32 @select(i32, %struct.__sigset_t*, %struct.__sigset_t*, %struct.__sigset_t*, %struct.timespec*) #4

declare i32 @accept(i32, %struct.sockaddr*, i32*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_connect_timeout(i32, %struct.vsf_sysutil_sockaddr*, i32) #0 !dbg !21245 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.sockaddr*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.__sigset_t, align 8
  %12 = alloca %struct.timespec, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !21248, metadata !DIExpression()), !dbg !21249
  store %struct.vsf_sysutil_sockaddr* %1, %struct.vsf_sysutil_sockaddr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %5, metadata !21250, metadata !DIExpression()), !dbg !21251
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !21252, metadata !DIExpression()), !dbg !21253
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %7, metadata !21254, metadata !DIExpression()), !dbg !21255
  %17 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21256
  %18 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %17, i32 0, i32 0, !dbg !21257
  %19 = bitcast %union.anon.114* %18 to %struct.sockaddr*, !dbg !21258
  store %struct.sockaddr* %19, %struct.sockaddr** %7, align 8, !dbg !21255
  call void @llvm.dbg.declare(metadata i32* %8, metadata !21259, metadata !DIExpression()), !dbg !21260
  store i32 0, i32* %8, align 4, !dbg !21260
  call void @llvm.dbg.declare(metadata i32* %9, metadata !21261, metadata !DIExpression()), !dbg !21262
  call void @llvm.dbg.declare(metadata i32* %10, metadata !21263, metadata !DIExpression()), !dbg !21264
  %20 = load %struct.sockaddr*, %struct.sockaddr** %7, align 8, !dbg !21265
  %21 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i32 0, i32 0, !dbg !21267
  %22 = load i16, i16* %21, align 2, !dbg !21267
  %23 = zext i16 %22 to i32, !dbg !21265
  %24 = icmp eq i32 %23, 2, !dbg !21268
  br i1 %24, label %25, label %26, !dbg !21269

25:                                               ; preds = %3
  store i32 16, i32* %8, align 4, !dbg !21270
  br label %35, !dbg !21272

26:                                               ; preds = %3
  %27 = load %struct.sockaddr*, %struct.sockaddr** %7, align 8, !dbg !21273
  %28 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %27, i32 0, i32 0, !dbg !21275
  %29 = load i16, i16* %28, align 2, !dbg !21275
  %30 = zext i16 %29 to i32, !dbg !21273
  %31 = icmp eq i32 %30, 10, !dbg !21276
  br i1 %31, label %32, label %33, !dbg !21277

32:                                               ; preds = %26
  store i32 28, i32* %8, align 4, !dbg !21278
  br label %34, !dbg !21280

33:                                               ; preds = %26
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48.1206, i32 0, i32 0)), !dbg !21281
  br label %34

34:                                               ; preds = %33, %32
  br label %35

35:                                               ; preds = %34, %25
  %36 = load i32, i32* %6, align 4, !dbg !21283
  %37 = icmp ugt i32 %36, 0, !dbg !21285
  br i1 %37, label %38, label %40, !dbg !21286

38:                                               ; preds = %35
  %39 = load i32, i32* %4, align 4, !dbg !21287
  call void @vsf_sysutil_activate_noblock(i32 %39), !dbg !21289
  br label %40, !dbg !21290

40:                                               ; preds = %38, %35
  %41 = load i32, i32* %4, align 4, !dbg !21291
  %42 = load %struct.sockaddr*, %struct.sockaddr** %7, align 8, !dbg !21292
  %43 = load i32, i32* %8, align 4, !dbg !21293
  %44 = call i32 @connect(i32 %41, %struct.sockaddr* %42, i32 %43), !dbg !21294
  store i32 %44, i32* %9, align 4, !dbg !21295
  %45 = load i32, i32* %9, align 4, !dbg !21296
  %46 = icmp slt i32 %45, 0, !dbg !21298
  br i1 %46, label %47, label %115, !dbg !21299

47:                                               ; preds = %40
  %48 = call i32* @__errno_location() #9, !dbg !21300
  %49 = load i32, i32* %48, align 4, !dbg !21300
  %50 = icmp eq i32 %49, 115, !dbg !21301
  br i1 %50, label %51, label %115, !dbg !21302

51:                                               ; preds = %47
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %11, metadata !21303, metadata !DIExpression()), !dbg !21305
  call void @llvm.dbg.declare(metadata %struct.timespec* %12, metadata !21306, metadata !DIExpression()), !dbg !21307
  br label %52, !dbg !21308, !llvm.loop !21309

52:                                               ; preds = %51
  call void @llvm.dbg.declare(metadata i32* %13, metadata !21310, metadata !DIExpression()), !dbg !21312
  call void @llvm.dbg.declare(metadata i32* %14, metadata !21313, metadata !DIExpression()), !dbg !21312
  %53 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0, !dbg !21312
  %54 = getelementptr inbounds [16 x i64], [16 x i64]* %53, i64 0, i64 0, !dbg !21312
  %55 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %54) #8, !dbg !21312, !srcloc !21314
  %56 = extractvalue { i64, i64* } %55, 0, !dbg !21312
  %57 = extractvalue { i64, i64* } %55, 1, !dbg !21312
  %58 = trunc i64 %56 to i32, !dbg !21312
  store i32 %58, i32* %13, align 4, !dbg !21312
  %59 = ptrtoint i64* %57 to i64, !dbg !21312
  %60 = trunc i64 %59 to i32, !dbg !21312
  store i32 %60, i32* %14, align 4, !dbg !21312
  br label %61, !dbg !21312

61:                                               ; preds = %52
  %62 = load i32, i32* %4, align 4, !dbg !21315
  %63 = srem i32 %62, 64, !dbg !21315
  %64 = zext i32 %63 to i64, !dbg !21315
  %65 = shl i64 1, %64, !dbg !21315
  %66 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0, !dbg !21315
  %67 = load i32, i32* %4, align 4, !dbg !21315
  %68 = sdiv i32 %67, 64, !dbg !21315
  %69 = sext i32 %68 to i64, !dbg !21315
  %70 = getelementptr inbounds [16 x i64], [16 x i64]* %66, i64 0, i64 %69, !dbg !21315
  %71 = load i64, i64* %70, align 8, !dbg !21315
  %72 = or i64 %71, %65, !dbg !21315
  store i64 %72, i64* %70, align 8, !dbg !21315
  %73 = load i32, i32* %6, align 4, !dbg !21316
  %74 = zext i32 %73 to i64, !dbg !21316
  %75 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 0, !dbg !21317
  store i64 %74, i64* %75, align 8, !dbg !21318
  %76 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 1, !dbg !21319
  store i64 0, i64* %76, align 8, !dbg !21320
  br label %77, !dbg !21321, !llvm.loop !21322

77:                                               ; preds = %89, %61
  %78 = load i32, i32* %4, align 4, !dbg !21324
  %79 = add nsw i32 %78, 1, !dbg !21326
  %80 = call i32 @select(i32 %79, %struct.__sigset_t* null, %struct.__sigset_t* %11, %struct.__sigset_t* null, %struct.timespec* %12), !dbg !21327
  store i32 %80, i32* %9, align 4, !dbg !21328
  %81 = call i32* @__errno_location() #9, !dbg !21329
  %82 = load i32, i32* %81, align 4, !dbg !21329
  store i32 %82, i32* %10, align 4, !dbg !21330
  call void @vsf_sysutil_check_pending_actions(i32 0, i32 0, i32 0), !dbg !21331
  br label %83, !dbg !21332

83:                                               ; preds = %77
  %84 = load i32, i32* %9, align 4, !dbg !21333
  %85 = icmp slt i32 %84, 0, !dbg !21334
  br i1 %85, label %86, label %89, !dbg !21335

86:                                               ; preds = %83
  %87 = load i32, i32* %10, align 4, !dbg !21336
  %88 = icmp eq i32 %87, 4, !dbg !21337
  br label %89

89:                                               ; preds = %86, %83
  %90 = phi i1 [ false, %83 ], [ %88, %86 ]
  br i1 %90, label %77, label %91, !dbg !21332, !llvm.loop !21322

91:                                               ; preds = %89
  %92 = load i32, i32* %9, align 4, !dbg !21338
  %93 = icmp sle i32 %92, 0, !dbg !21340
  br i1 %93, label %94, label %100, !dbg !21341

94:                                               ; preds = %91
  %95 = load i32, i32* %9, align 4, !dbg !21342
  %96 = icmp eq i32 %95, 0, !dbg !21345
  br i1 %96, label %97, label %99, !dbg !21346

97:                                               ; preds = %94
  %98 = call i32* @__errno_location() #9, !dbg !21347
  store i32 11, i32* %98, align 4, !dbg !21349
  br label %99, !dbg !21350

99:                                               ; preds = %97, %94
  store i32 -1, i32* %9, align 4, !dbg !21351
  br label %114, !dbg !21352

100:                                              ; preds = %91
  call void @llvm.dbg.declare(metadata i32* %15, metadata !21353, metadata !DIExpression()), !dbg !21355
  store i32 4, i32* %15, align 4, !dbg !21355
  call void @llvm.dbg.declare(metadata i32* %16, metadata !21356, metadata !DIExpression()), !dbg !21357
  %101 = load i32, i32* %4, align 4, !dbg !21358
  %102 = bitcast i32* %9 to i8*, !dbg !21359
  %103 = call i32 @getsockopt(i32 %101, i32 1, i32 4, i8* %102, i32* %15) #8, !dbg !21360
  store i32 %103, i32* %16, align 4, !dbg !21357
  %104 = load i32, i32* %16, align 4, !dbg !21361
  %105 = icmp ne i32 %104, 0, !dbg !21363
  br i1 %105, label %106, label %107, !dbg !21364

106:                                              ; preds = %100
  call void @die(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50.1214, i32 0, i32 0)), !dbg !21365
  br label %107, !dbg !21367

107:                                              ; preds = %106, %100
  %108 = load i32, i32* %9, align 4, !dbg !21368
  %109 = icmp ne i32 %108, 0, !dbg !21370
  br i1 %109, label %110, label %113, !dbg !21371

110:                                              ; preds = %107
  %111 = load i32, i32* %9, align 4, !dbg !21372
  %112 = call i32* @__errno_location() #9, !dbg !21374
  store i32 %111, i32* %112, align 4, !dbg !21375
  store i32 -1, i32* %9, align 4, !dbg !21376
  br label %113, !dbg !21377

113:                                              ; preds = %110, %107
  br label %114

114:                                              ; preds = %113, %99
  br label %115, !dbg !21378

115:                                              ; preds = %114, %47, %40
  %116 = load i32, i32* %6, align 4, !dbg !21379
  %117 = icmp ugt i32 %116, 0, !dbg !21381
  br i1 %117, label %118, label %120, !dbg !21382

118:                                              ; preds = %115
  %119 = load i32, i32* %4, align 4, !dbg !21383
  call void @vsf_sysutil_deactivate_noblock(i32 %119), !dbg !21385
  br label %120, !dbg !21386

120:                                              ; preds = %118, %115
  %121 = load i32, i32* %9, align 4, !dbg !21387
  ret i32 %121, !dbg !21388
}

declare i32 @connect(i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_getsockname(i32, %struct.vsf_sysutil_sockaddr**) #0 !dbg !21389 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  %5 = alloca %struct.vsf_sysutil_sockaddr, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21393, metadata !DIExpression()), !dbg !21394
  store %struct.vsf_sysutil_sockaddr** %1, %struct.vsf_sysutil_sockaddr*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %4, metadata !21395, metadata !DIExpression()), !dbg !21396
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr* %5, metadata !21397, metadata !DIExpression()), !dbg !21398
  call void @llvm.dbg.declare(metadata i32* %6, metadata !21399, metadata !DIExpression()), !dbg !21400
  call void @llvm.dbg.declare(metadata i32* %7, metadata !21401, metadata !DIExpression()), !dbg !21402
  store i32 28, i32* %7, align 4, !dbg !21402
  %8 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %4, align 8, !dbg !21403
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %8), !dbg !21404
  %9 = load i32, i32* %3, align 4, !dbg !21405
  %10 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21406
  %11 = bitcast %union.anon.114* %10 to %struct.sockaddr*, !dbg !21407
  %12 = call i32 @getsockname(i32 %9, %struct.sockaddr* %11, i32* %7) #8, !dbg !21408
  store i32 %12, i32* %6, align 4, !dbg !21409
  %13 = load i32, i32* %6, align 4, !dbg !21410
  %14 = icmp ne i32 %13, 0, !dbg !21412
  br i1 %14, label %15, label %16, !dbg !21413

15:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51.1219, i32 0, i32 0)), !dbg !21414
  br label %16, !dbg !21416

16:                                               ; preds = %15, %2
  %17 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21417
  %18 = bitcast %union.anon.114* %17 to %struct.sockaddr*, !dbg !21419
  %19 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %18, i32 0, i32 0, !dbg !21420
  %20 = load i16, i16* %19, align 4, !dbg !21420
  %21 = zext i16 %20 to i32, !dbg !21421
  %22 = icmp ne i32 %21, 2, !dbg !21422
  br i1 %22, label %23, label %31, !dbg !21423

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21424
  %25 = bitcast %union.anon.114* %24 to %struct.sockaddr*, !dbg !21425
  %26 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %25, i32 0, i32 0, !dbg !21426
  %27 = load i16, i16* %26, align 4, !dbg !21426
  %28 = zext i16 %27 to i32, !dbg !21427
  %29 = icmp ne i32 %28, 10, !dbg !21428
  br i1 %29, label %30, label %31, !dbg !21429

30:                                               ; preds = %23
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48.1206, i32 0, i32 0)), !dbg !21430
  br label %31, !dbg !21432

31:                                               ; preds = %30, %23, %16
  %32 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %4, align 8, !dbg !21433
  call void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr** %32), !dbg !21434
  %33 = load i32, i32* %7, align 4, !dbg !21435
  %34 = zext i32 %33 to i64, !dbg !21435
  %35 = icmp ugt i64 %34, 28, !dbg !21437
  br i1 %35, label %36, label %37, !dbg !21438

36:                                               ; preds = %31
  store i32 28, i32* %7, align 4, !dbg !21439
  br label %37, !dbg !21441

37:                                               ; preds = %36, %31
  %38 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %4, align 8, !dbg !21442
  %39 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %38, align 8, !dbg !21443
  %40 = bitcast %struct.vsf_sysutil_sockaddr* %39 to i8*, !dbg !21443
  %41 = bitcast %struct.vsf_sysutil_sockaddr* %5 to i8*, !dbg !21444
  %42 = load i32, i32* %7, align 4, !dbg !21445
  call void @vsf_sysutil_memcpy(i8* %40, i8* %41, i32 %42), !dbg !21446
  ret void, !dbg !21447
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr**) #0 !dbg !21448 {
  %2 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  store %struct.vsf_sysutil_sockaddr** %0, %struct.vsf_sysutil_sockaddr*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %2, metadata !21451, metadata !DIExpression()), !dbg !21452
  %3 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21453
  %4 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21455
  %5 = icmp ne %struct.vsf_sysutil_sockaddr* %4, null, !dbg !21456
  br i1 %5, label %6, label %11, !dbg !21457

6:                                                ; preds = %1
  %7 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21458
  %8 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !21460
  %9 = bitcast %struct.vsf_sysutil_sockaddr* %8 to i8*, !dbg !21460
  call void @vsf_sysutil_free(i8* %9), !dbg !21461
  %10 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21462
  store %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr** %10, align 8, !dbg !21463
  br label %11, !dbg !21464

11:                                               ; preds = %6, %1
  ret void, !dbg !21465
}

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr**) #0 !dbg !21466 {
  %2 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  store %struct.vsf_sysutil_sockaddr** %0, %struct.vsf_sysutil_sockaddr*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %2, metadata !21467, metadata !DIExpression()), !dbg !21468
  %3 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21469
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %3), !dbg !21470
  %4 = call i8* @vsf_sysutil_malloc(i32 28), !dbg !21471
  %5 = bitcast i8* %4 to %struct.vsf_sysutil_sockaddr*, !dbg !21471
  %6 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21472
  store %struct.vsf_sysutil_sockaddr* %5, %struct.vsf_sysutil_sockaddr** %6, align 8, !dbg !21473
  %7 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21474
  %8 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !21475
  %9 = bitcast %struct.vsf_sysutil_sockaddr* %8 to i8*, !dbg !21475
  call void @vsf_sysutil_memclr(i8* %9, i32 28), !dbg !21476
  ret void, !dbg !21477
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_getpeername(i32, %struct.vsf_sysutil_sockaddr**) #0 !dbg !21478 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  %5 = alloca %struct.vsf_sysutil_sockaddr, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21479, metadata !DIExpression()), !dbg !21480
  store %struct.vsf_sysutil_sockaddr** %1, %struct.vsf_sysutil_sockaddr*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %4, metadata !21481, metadata !DIExpression()), !dbg !21482
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr* %5, metadata !21483, metadata !DIExpression()), !dbg !21484
  call void @llvm.dbg.declare(metadata i32* %6, metadata !21485, metadata !DIExpression()), !dbg !21486
  call void @llvm.dbg.declare(metadata i32* %7, metadata !21487, metadata !DIExpression()), !dbg !21488
  store i32 28, i32* %7, align 4, !dbg !21488
  %8 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %4, align 8, !dbg !21489
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %8), !dbg !21490
  %9 = load i32, i32* %3, align 4, !dbg !21491
  %10 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21492
  %11 = bitcast %union.anon.114* %10 to %struct.sockaddr*, !dbg !21493
  %12 = call i32 @getpeername(i32 %9, %struct.sockaddr* %11, i32* %7) #8, !dbg !21494
  store i32 %12, i32* %6, align 4, !dbg !21495
  %13 = load i32, i32* %6, align 4, !dbg !21496
  %14 = icmp ne i32 %13, 0, !dbg !21498
  br i1 %14, label %15, label %16, !dbg !21499

15:                                               ; preds = %2
  call void @die(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52.1224, i32 0, i32 0)), !dbg !21500
  br label %16, !dbg !21502

16:                                               ; preds = %15, %2
  %17 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21503
  %18 = bitcast %union.anon.114* %17 to %struct.sockaddr*, !dbg !21505
  %19 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %18, i32 0, i32 0, !dbg !21506
  %20 = load i16, i16* %19, align 4, !dbg !21506
  %21 = zext i16 %20 to i32, !dbg !21507
  %22 = icmp ne i32 %21, 2, !dbg !21508
  br i1 %22, label %23, label %31, !dbg !21509

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21510
  %25 = bitcast %union.anon.114* %24 to %struct.sockaddr*, !dbg !21511
  %26 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %25, i32 0, i32 0, !dbg !21512
  %27 = load i16, i16* %26, align 4, !dbg !21512
  %28 = zext i16 %27 to i32, !dbg !21513
  %29 = icmp ne i32 %28, 10, !dbg !21514
  br i1 %29, label %30, label %31, !dbg !21515

30:                                               ; preds = %23
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48.1206, i32 0, i32 0)), !dbg !21516
  br label %31, !dbg !21518

31:                                               ; preds = %30, %23, %16
  %32 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %4, align 8, !dbg !21519
  call void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr** %32), !dbg !21520
  %33 = load i32, i32* %7, align 4, !dbg !21521
  %34 = zext i32 %33 to i64, !dbg !21521
  %35 = icmp ugt i64 %34, 28, !dbg !21523
  br i1 %35, label %36, label %37, !dbg !21524

36:                                               ; preds = %31
  store i32 28, i32* %7, align 4, !dbg !21525
  br label %37, !dbg !21527

37:                                               ; preds = %36, %31
  %38 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %4, align 8, !dbg !21528
  %39 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %38, align 8, !dbg !21529
  %40 = bitcast %struct.vsf_sysutil_sockaddr* %39 to i8*, !dbg !21529
  %41 = bitcast %struct.vsf_sysutil_sockaddr* %5 to i8*, !dbg !21530
  %42 = load i32, i32* %7, align 4, !dbg !21531
  call void @vsf_sysutil_memcpy(i8* %40, i8* %41, i32 %42), !dbg !21532
  ret void, !dbg !21533
}

; Function Attrs: nounwind
declare i32 @getpeername(i32, %struct.sockaddr*, i32*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_shutdown_failok(i32) #0 !dbg !21534 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !21535, metadata !DIExpression()), !dbg !21536
  %3 = load i32, i32* %2, align 4, !dbg !21537
  %4 = call i32 @shutdown(i32 %3, i32 2) #8, !dbg !21538
  ret void, !dbg !21539
}

; Function Attrs: nounwind
declare i32 @shutdown(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_shutdown_read_failok(i32) #0 !dbg !21540 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !21541, metadata !DIExpression()), !dbg !21542
  %3 = load i32, i32* %2, align 4, !dbg !21543
  %4 = call i32 @shutdown(i32 %3, i32 0) #8, !dbg !21544
  ret void, !dbg !21545
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_alloc_ipv4(%struct.vsf_sysutil_sockaddr**) #0 !dbg !21546 {
  %2 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  store %struct.vsf_sysutil_sockaddr** %0, %struct.vsf_sysutil_sockaddr*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %2, metadata !21547, metadata !DIExpression()), !dbg !21548
  %3 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21549
  call void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr** %3), !dbg !21550
  %4 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21551
  %5 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21552
  %6 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21553
  %7 = bitcast %union.anon.114* %6 to %struct.sockaddr*, !dbg !21554
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !21555
  store i16 2, i16* %8, align 4, !dbg !21556
  ret void, !dbg !21557
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_alloc_ipv6(%struct.vsf_sysutil_sockaddr**) #0 !dbg !21558 {
  %2 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  store %struct.vsf_sysutil_sockaddr** %0, %struct.vsf_sysutil_sockaddr*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %2, metadata !21559, metadata !DIExpression()), !dbg !21560
  %3 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21561
  call void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr** %3), !dbg !21562
  %4 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %2, align 8, !dbg !21563
  %5 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21564
  %6 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21565
  %7 = bitcast %union.anon.114* %6 to %struct.sockaddr*, !dbg !21566
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !21567
  store i16 10, i16* %8, align 4, !dbg !21568
  ret void, !dbg !21569
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_clone(%struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*) #0 !dbg !21570 {
  %3 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  %4 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %5 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  store %struct.vsf_sysutil_sockaddr** %0, %struct.vsf_sysutil_sockaddr*** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %3, metadata !21573, metadata !DIExpression()), !dbg !21574
  store %struct.vsf_sysutil_sockaddr* %1, %struct.vsf_sysutil_sockaddr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %4, metadata !21575, metadata !DIExpression()), !dbg !21576
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %5, metadata !21577, metadata !DIExpression()), !dbg !21578
  store %struct.vsf_sysutil_sockaddr* null, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21578
  %6 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %3, align 8, !dbg !21579
  call void @vsf_sysutil_sockaddr_alloc(%struct.vsf_sysutil_sockaddr** %6), !dbg !21580
  %7 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %3, align 8, !dbg !21581
  %8 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %7, align 8, !dbg !21582
  store %struct.vsf_sysutil_sockaddr* %8, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21583
  %9 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21584
  %10 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %9, i32 0, i32 0, !dbg !21586
  %11 = bitcast %union.anon.114* %10 to %struct.sockaddr*, !dbg !21587
  %12 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %11, i32 0, i32 0, !dbg !21588
  %13 = load i16, i16* %12, align 4, !dbg !21588
  %14 = zext i16 %13 to i32, !dbg !21584
  %15 = icmp eq i32 %14, 2, !dbg !21589
  br i1 %15, label %16, label %31, !dbg !21590

16:                                               ; preds = %2
  %17 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21591
  %18 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %17, i32 0, i32 0, !dbg !21593
  %19 = bitcast %union.anon.114* %18 to %struct.sockaddr*, !dbg !21594
  %20 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %19, i32 0, i32 0, !dbg !21595
  store i16 2, i16* %20, align 4, !dbg !21596
  %21 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21597
  %22 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %21, i32 0, i32 0, !dbg !21598
  %23 = bitcast %union.anon.114* %22 to %struct.sockaddr_in*, !dbg !21599
  %24 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 2, !dbg !21600
  %25 = bitcast %struct.in_addr* %24 to i8*, !dbg !21601
  %26 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21602
  %27 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %26, i32 0, i32 0, !dbg !21603
  %28 = bitcast %union.anon.114* %27 to %struct.sockaddr_in*, !dbg !21604
  %29 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %28, i32 0, i32 2, !dbg !21605
  %30 = bitcast %struct.in_addr* %29 to i8*, !dbg !21606
  call void @vsf_sysutil_memcpy(i8* %25, i8* %30, i32 4), !dbg !21607
  br label %65, !dbg !21608

31:                                               ; preds = %2
  %32 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21609
  %33 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %32, i32 0, i32 0, !dbg !21611
  %34 = bitcast %union.anon.114* %33 to %struct.sockaddr*, !dbg !21612
  %35 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %34, i32 0, i32 0, !dbg !21613
  %36 = load i16, i16* %35, align 4, !dbg !21613
  %37 = zext i16 %36 to i32, !dbg !21609
  %38 = icmp eq i32 %37, 10, !dbg !21614
  br i1 %38, label %39, label %63, !dbg !21615

39:                                               ; preds = %31
  %40 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21616
  %41 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %40, i32 0, i32 0, !dbg !21618
  %42 = bitcast %union.anon.114* %41 to %struct.sockaddr*, !dbg !21619
  %43 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %42, i32 0, i32 0, !dbg !21620
  store i16 10, i16* %43, align 4, !dbg !21621
  %44 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21622
  %45 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %44, i32 0, i32 0, !dbg !21623
  %46 = bitcast %union.anon.114* %45 to %struct.sockaddr_in6*, !dbg !21624
  %47 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %46, i32 0, i32 3, !dbg !21625
  %48 = bitcast %struct.in6_addr* %47 to i8*, !dbg !21626
  %49 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21627
  %50 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %49, i32 0, i32 0, !dbg !21628
  %51 = bitcast %union.anon.114* %50 to %struct.sockaddr_in6*, !dbg !21629
  %52 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %51, i32 0, i32 3, !dbg !21630
  %53 = bitcast %struct.in6_addr* %52 to i8*, !dbg !21631
  call void @vsf_sysutil_memcpy(i8* %48, i8* %53, i32 16), !dbg !21632
  %54 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21633
  %55 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %54, i32 0, i32 0, !dbg !21634
  %56 = bitcast %union.anon.114* %55 to %struct.sockaddr_in6*, !dbg !21635
  %57 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %56, i32 0, i32 4, !dbg !21636
  %58 = load i32, i32* %57, align 4, !dbg !21636
  %59 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21637
  %60 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %59, i32 0, i32 0, !dbg !21638
  %61 = bitcast %union.anon.114* %60 to %struct.sockaddr_in6*, !dbg !21639
  %62 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %61, i32 0, i32 4, !dbg !21640
  store i32 %58, i32* %62, align 4, !dbg !21641
  br label %64, !dbg !21642

63:                                               ; preds = %31
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48.1206, i32 0, i32 0)), !dbg !21643
  br label %64

64:                                               ; preds = %63, %39
  br label %65

65:                                               ; preds = %64, %16
  ret void, !dbg !21645
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_sockaddr_addr_equal(%struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr*) #0 !dbg !21646 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %5 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %4, metadata !21649, metadata !DIExpression()), !dbg !21650
  store %struct.vsf_sysutil_sockaddr* %1, %struct.vsf_sysutil_sockaddr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %5, metadata !21651, metadata !DIExpression()), !dbg !21652
  call void @llvm.dbg.declare(metadata i32* %6, metadata !21653, metadata !DIExpression()), !dbg !21654
  %10 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21655
  %11 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %10, i32 0, i32 0, !dbg !21656
  %12 = bitcast %union.anon.114* %11 to %struct.sockaddr*, !dbg !21657
  %13 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %12, i32 0, i32 0, !dbg !21658
  %14 = load i16, i16* %13, align 4, !dbg !21658
  %15 = zext i16 %14 to i32, !dbg !21655
  store i32 %15, i32* %6, align 4, !dbg !21654
  call void @llvm.dbg.declare(metadata i32* %7, metadata !21659, metadata !DIExpression()), !dbg !21660
  %16 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21661
  %17 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %16, i32 0, i32 0, !dbg !21662
  %18 = bitcast %union.anon.114* %17 to %struct.sockaddr*, !dbg !21663
  %19 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %18, i32 0, i32 0, !dbg !21664
  %20 = load i16, i16* %19, align 4, !dbg !21664
  %21 = zext i16 %20 to i32, !dbg !21661
  store i32 %21, i32* %7, align 4, !dbg !21660
  %22 = load i32, i32* %6, align 4, !dbg !21665
  %23 = load i32, i32* %7, align 4, !dbg !21667
  %24 = icmp ne i32 %22, %23, !dbg !21668
  br i1 %24, label %25, label %71, !dbg !21669

25:                                               ; preds = %2
  %26 = load i32, i32* %6, align 4, !dbg !21670
  %27 = icmp eq i32 %26, 2, !dbg !21673
  br i1 %27, label %28, label %47, !dbg !21674

28:                                               ; preds = %25
  %29 = load i32, i32* %7, align 4, !dbg !21675
  %30 = icmp eq i32 %29, 10, !dbg !21676
  br i1 %30, label %31, label %47, !dbg !21677

31:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i8** %8, metadata !21678, metadata !DIExpression()), !dbg !21680
  %32 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21681
  %33 = call i8* @vsf_sysutil_sockaddr_ipv6_v4(%struct.vsf_sysutil_sockaddr* %32), !dbg !21682
  store i8* %33, i8** %8, align 8, !dbg !21680
  %34 = load i8*, i8** %8, align 8, !dbg !21683
  %35 = icmp ne i8* %34, null, !dbg !21683
  br i1 %35, label %36, label %46, !dbg !21685

36:                                               ; preds = %31
  %37 = load i8*, i8** %8, align 8, !dbg !21686
  %38 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21687
  %39 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %38, i32 0, i32 0, !dbg !21688
  %40 = bitcast %union.anon.114* %39 to %struct.sockaddr_in*, !dbg !21689
  %41 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %40, i32 0, i32 2, !dbg !21690
  %42 = bitcast %struct.in_addr* %41 to i8*, !dbg !21691
  %43 = call i32 @vsf_sysutil_memcmp(i8* %37, i8* %42, i32 4), !dbg !21692
  %44 = icmp ne i32 %43, 0, !dbg !21692
  br i1 %44, label %46, label %45, !dbg !21693

45:                                               ; preds = %36
  store i32 1, i32* %3, align 4, !dbg !21694
  br label %109, !dbg !21694

46:                                               ; preds = %36, %31
  br label %70, !dbg !21696

47:                                               ; preds = %28, %25
  %48 = load i32, i32* %6, align 4, !dbg !21697
  %49 = icmp eq i32 %48, 10, !dbg !21699
  br i1 %49, label %50, label %69, !dbg !21700

50:                                               ; preds = %47
  %51 = load i32, i32* %7, align 4, !dbg !21701
  %52 = icmp eq i32 %51, 2, !dbg !21702
  br i1 %52, label %53, label %69, !dbg !21703

53:                                               ; preds = %50
  call void @llvm.dbg.declare(metadata i8** %9, metadata !21704, metadata !DIExpression()), !dbg !21706
  %54 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21707
  %55 = call i8* @vsf_sysutil_sockaddr_ipv6_v4(%struct.vsf_sysutil_sockaddr* %54), !dbg !21708
  store i8* %55, i8** %9, align 8, !dbg !21706
  %56 = load i8*, i8** %9, align 8, !dbg !21709
  %57 = icmp ne i8* %56, null, !dbg !21709
  br i1 %57, label %58, label %68, !dbg !21711

58:                                               ; preds = %53
  %59 = load i8*, i8** %9, align 8, !dbg !21712
  %60 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21713
  %61 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %60, i32 0, i32 0, !dbg !21714
  %62 = bitcast %union.anon.114* %61 to %struct.sockaddr_in*, !dbg !21715
  %63 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %62, i32 0, i32 2, !dbg !21716
  %64 = bitcast %struct.in_addr* %63 to i8*, !dbg !21717
  %65 = call i32 @vsf_sysutil_memcmp(i8* %59, i8* %64, i32 4), !dbg !21718
  %66 = icmp ne i32 %65, 0, !dbg !21718
  br i1 %66, label %68, label %67, !dbg !21719

67:                                               ; preds = %58
  store i32 1, i32* %3, align 4, !dbg !21720
  br label %109, !dbg !21720

68:                                               ; preds = %58, %53
  br label %69, !dbg !21722

69:                                               ; preds = %68, %50, %47
  br label %70

70:                                               ; preds = %69, %46
  store i32 0, i32* %3, align 4, !dbg !21723
  br label %109, !dbg !21723

71:                                               ; preds = %2
  %72 = load i32, i32* %6, align 4, !dbg !21724
  %73 = icmp eq i32 %72, 2, !dbg !21726
  br i1 %73, label %74, label %89, !dbg !21727

74:                                               ; preds = %71
  %75 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21728
  %76 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %75, i32 0, i32 0, !dbg !21731
  %77 = bitcast %union.anon.114* %76 to %struct.sockaddr_in*, !dbg !21732
  %78 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %77, i32 0, i32 2, !dbg !21733
  %79 = bitcast %struct.in_addr* %78 to i8*, !dbg !21734
  %80 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21735
  %81 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %80, i32 0, i32 0, !dbg !21736
  %82 = bitcast %union.anon.114* %81 to %struct.sockaddr_in*, !dbg !21737
  %83 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %82, i32 0, i32 2, !dbg !21738
  %84 = bitcast %struct.in_addr* %83 to i8*, !dbg !21739
  %85 = call i32 @vsf_sysutil_memcmp(i8* %79, i8* %84, i32 4), !dbg !21740
  %86 = icmp eq i32 %85, 0, !dbg !21741
  br i1 %86, label %87, label %88, !dbg !21742

87:                                               ; preds = %74
  store i32 1, i32* %3, align 4, !dbg !21743
  br label %109, !dbg !21743

88:                                               ; preds = %74
  br label %108, !dbg !21745

89:                                               ; preds = %71
  %90 = load i32, i32* %6, align 4, !dbg !21746
  %91 = icmp eq i32 %90, 10, !dbg !21748
  br i1 %91, label %92, label %107, !dbg !21749

92:                                               ; preds = %89
  %93 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %4, align 8, !dbg !21750
  %94 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %93, i32 0, i32 0, !dbg !21753
  %95 = bitcast %union.anon.114* %94 to %struct.sockaddr_in6*, !dbg !21754
  %96 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %95, i32 0, i32 3, !dbg !21755
  %97 = bitcast %struct.in6_addr* %96 to i8*, !dbg !21756
  %98 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !21757
  %99 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %98, i32 0, i32 0, !dbg !21758
  %100 = bitcast %union.anon.114* %99 to %struct.sockaddr_in6*, !dbg !21759
  %101 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %100, i32 0, i32 3, !dbg !21760
  %102 = bitcast %struct.in6_addr* %101 to i8*, !dbg !21761
  %103 = call i32 @vsf_sysutil_memcmp(i8* %97, i8* %102, i32 16), !dbg !21762
  %104 = icmp eq i32 %103, 0, !dbg !21763
  br i1 %104, label %105, label %106, !dbg !21764

105:                                              ; preds = %92
  store i32 1, i32* %3, align 4, !dbg !21765
  br label %109, !dbg !21765

106:                                              ; preds = %92
  br label %107, !dbg !21767

107:                                              ; preds = %106, %89
  br label %108

108:                                              ; preds = %107, %88
  store i32 0, i32* %3, align 4, !dbg !21768
  br label %109, !dbg !21768

109:                                              ; preds = %108, %105, %87, %70, %67, %45
  %110 = load i32, i32* %3, align 4, !dbg !21769
  ret i32 %110, !dbg !21769
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_sockaddr_ipv6_v4(%struct.vsf_sysutil_sockaddr*) #0 !dbg !1592 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %4 = alloca i8*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !21770, metadata !DIExpression()), !dbg !21771
  call void @llvm.dbg.declare(metadata i8** %4, metadata !21772, metadata !DIExpression()), !dbg !21773
  %5 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21774
  %6 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21776
  %7 = bitcast %union.anon.114* %6 to %struct.sockaddr*, !dbg !21777
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !21778
  %9 = load i16, i16* %8, align 4, !dbg !21778
  %10 = zext i16 %9 to i32, !dbg !21774
  %11 = icmp ne i32 %10, 10, !dbg !21779
  br i1 %11, label %12, label %13, !dbg !21780

12:                                               ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !21781
  br label %30, !dbg !21781

13:                                               ; preds = %1
  %14 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21783
  %15 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %14, i32 0, i32 0, !dbg !21785
  %16 = bitcast %union.anon.114* %15 to %struct.sockaddr_in6*, !dbg !21786
  %17 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %16, i32 0, i32 3, !dbg !21787
  %18 = bitcast %struct.in6_addr* %17 to i8*, !dbg !21788
  %19 = call i32 @vsf_sysutil_memcmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @vsf_sysutil_sockaddr_ipv6_v4.pattern, i32 0, i32 0), i8* %18, i32 12), !dbg !21789
  %20 = icmp ne i32 %19, 0, !dbg !21789
  br i1 %20, label %21, label %22, !dbg !21790

21:                                               ; preds = %13
  store i8* null, i8** %2, align 8, !dbg !21791
  br label %30, !dbg !21791

22:                                               ; preds = %13
  %23 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21793
  %24 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %23, i32 0, i32 0, !dbg !21794
  %25 = bitcast %union.anon.114* %24 to %struct.sockaddr_in6*, !dbg !21795
  %26 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %25, i32 0, i32 3, !dbg !21796
  %27 = bitcast %struct.in6_addr* %26 to i8*, !dbg !21797
  store i8* %27, i8** %4, align 8, !dbg !21798
  %28 = load i8*, i8** %4, align 8, !dbg !21799
  %29 = getelementptr inbounds i8, i8* %28, i64 12, !dbg !21799
  store i8* %29, i8** %2, align 8, !dbg !21800
  br label %30, !dbg !21800

30:                                               ; preds = %22, %21, %12
  %31 = load i8*, i8** %2, align 8, !dbg !21801
  ret i8* %31, !dbg !21801
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_sockaddr_is_ipv6(%struct.vsf_sysutil_sockaddr*) #0 !dbg !21802 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !21805, metadata !DIExpression()), !dbg !21806
  %4 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21807
  %5 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %4, i32 0, i32 0, !dbg !21809
  %6 = bitcast %union.anon.114* %5 to %struct.sockaddr*, !dbg !21810
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 0, !dbg !21811
  %8 = load i16, i16* %7, align 4, !dbg !21811
  %9 = zext i16 %8 to i32, !dbg !21807
  %10 = icmp eq i32 %9, 10, !dbg !21812
  br i1 %10, label %11, label %12, !dbg !21813

11:                                               ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !21814
  br label %13, !dbg !21814

12:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !21816
  br label %13, !dbg !21816

13:                                               ; preds = %12, %11
  %14 = load i32, i32* %2, align 4, !dbg !21817
  ret i32 %14, !dbg !21817
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_set_ipv4addr(%struct.vsf_sysutil_sockaddr*, i8*) #0 !dbg !1553 {
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %4 = alloca i8*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !21818, metadata !DIExpression()), !dbg !21819
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !21820, metadata !DIExpression()), !dbg !21821
  %5 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21822
  %6 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21824
  %7 = bitcast %union.anon.114* %6 to %struct.sockaddr*, !dbg !21825
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !21826
  %9 = load i16, i16* %8, align 4, !dbg !21826
  %10 = zext i16 %9 to i32, !dbg !21822
  %11 = icmp eq i32 %10, 2, !dbg !21827
  br i1 %11, label %12, label %19, !dbg !21828

12:                                               ; preds = %2
  %13 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21829
  %14 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %13, i32 0, i32 0, !dbg !21831
  %15 = bitcast %union.anon.114* %14 to %struct.sockaddr_in*, !dbg !21832
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 2, !dbg !21833
  %17 = bitcast %struct.in_addr* %16 to i8*, !dbg !21834
  %18 = load i8*, i8** %4, align 8, !dbg !21835
  call void @vsf_sysutil_memcpy(i8* %17, i8* %18, i32 4), !dbg !21836
  br label %43, !dbg !21837

19:                                               ; preds = %2
  %20 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21838
  %21 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %20, i32 0, i32 0, !dbg !21840
  %22 = bitcast %union.anon.114* %21 to %struct.sockaddr*, !dbg !21841
  %23 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %22, i32 0, i32 0, !dbg !21842
  %24 = load i16, i16* %23, align 4, !dbg !21842
  %25 = zext i16 %24 to i32, !dbg !21838
  %26 = icmp eq i32 %25, 10, !dbg !21843
  br i1 %26, label %27, label %41, !dbg !21844

27:                                               ; preds = %19
  call void @vsf_sysutil_sockaddr_alloc_ipv4(%struct.vsf_sysutil_sockaddr** @vsf_sysutil_sockaddr_set_ipv4addr.s_p_sockaddr), !dbg !21845
  %28 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @vsf_sysutil_sockaddr_set_ipv4addr.s_p_sockaddr, align 8, !dbg !21847
  %29 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %28, i32 0, i32 0, !dbg !21848
  %30 = bitcast %union.anon.114* %29 to %struct.sockaddr_in*, !dbg !21849
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %30, i32 0, i32 2, !dbg !21850
  %32 = bitcast %struct.in_addr* %31 to i8*, !dbg !21851
  %33 = load i8*, i8** %4, align 8, !dbg !21852
  call void @vsf_sysutil_memcpy(i8* %32, i8* %33, i32 4), !dbg !21853
  %34 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21854
  %35 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %34, i32 0, i32 0, !dbg !21855
  %36 = bitcast %union.anon.114* %35 to %struct.sockaddr_in6*, !dbg !21856
  %37 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %36, i32 0, i32 3, !dbg !21857
  %38 = bitcast %struct.in6_addr* %37 to i8*, !dbg !21858
  %39 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** @vsf_sysutil_sockaddr_set_ipv4addr.s_p_sockaddr, align 8, !dbg !21859
  %40 = call i8* @vsf_sysutil_sockaddr_ipv4_v6(%struct.vsf_sysutil_sockaddr* %39), !dbg !21860
  call void @vsf_sysutil_memcpy(i8* %38, i8* %40, i32 16), !dbg !21861
  br label %42, !dbg !21862

41:                                               ; preds = %19
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !21863
  br label %42

42:                                               ; preds = %41, %27
  br label %43

43:                                               ; preds = %42, %12
  ret void, !dbg !21865
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_sockaddr_ipv4_v6(%struct.vsf_sysutil_sockaddr*) #0 !dbg !1604 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !21866, metadata !DIExpression()), !dbg !21867
  %4 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21868
  %5 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %4, i32 0, i32 0, !dbg !21870
  %6 = bitcast %union.anon.114* %5 to %struct.sockaddr*, !dbg !21871
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 0, !dbg !21872
  %8 = load i16, i16* %7, align 4, !dbg !21872
  %9 = zext i16 %8 to i32, !dbg !21868
  %10 = icmp ne i32 %9, 2, !dbg !21873
  br i1 %10, label %11, label %12, !dbg !21874

11:                                               ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !21875
  br label %18, !dbg !21875

12:                                               ; preds = %1
  %13 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21877
  %14 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %13, i32 0, i32 0, !dbg !21878
  %15 = bitcast %union.anon.114* %14 to %struct.sockaddr_in*, !dbg !21879
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 2, !dbg !21880
  %17 = bitcast %struct.in_addr* %16 to i8*, !dbg !21881
  call void @vsf_sysutil_memcpy(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @vsf_sysutil_sockaddr_ipv4_v6.ret, i64 0, i64 12), i8* %17, i32 4), !dbg !21882
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @vsf_sysutil_sockaddr_ipv4_v6.ret, i32 0, i32 0), i8** %2, align 8, !dbg !21883
  br label %18, !dbg !21883

18:                                               ; preds = %12, %11
  %19 = load i8*, i8** %2, align 8, !dbg !21884
  ret i8* %19, !dbg !21884
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_set_ipv6addr(%struct.vsf_sysutil_sockaddr*, i8*) #0 !dbg !21885 {
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %4 = alloca i8*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !21886, metadata !DIExpression()), !dbg !21887
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !21888, metadata !DIExpression()), !dbg !21889
  %5 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21890
  %6 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !21892
  %7 = bitcast %union.anon.114* %6 to %struct.sockaddr*, !dbg !21893
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !21894
  %9 = load i16, i16* %8, align 4, !dbg !21894
  %10 = zext i16 %9 to i32, !dbg !21890
  %11 = icmp eq i32 %10, 10, !dbg !21895
  br i1 %11, label %12, label %19, !dbg !21896

12:                                               ; preds = %2
  %13 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21897
  %14 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %13, i32 0, i32 0, !dbg !21899
  %15 = bitcast %union.anon.114* %14 to %struct.sockaddr_in6*, !dbg !21900
  %16 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %15, i32 0, i32 3, !dbg !21901
  %17 = bitcast %struct.in6_addr* %16 to i8*, !dbg !21902
  %18 = load i8*, i8** %4, align 8, !dbg !21903
  call void @vsf_sysutil_memcpy(i8* %17, i8* %18, i32 16), !dbg !21904
  br label %20, !dbg !21905

19:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !21906
  br label %20

20:                                               ; preds = %19, %12
  ret void, !dbg !21908
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_sockaddr_get_raw_addr(%struct.vsf_sysutil_sockaddr*) #0 !dbg !21909 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !21912, metadata !DIExpression()), !dbg !21913
  %4 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21914
  %5 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %4, i32 0, i32 0, !dbg !21916
  %6 = bitcast %union.anon.114* %5 to %struct.sockaddr*, !dbg !21917
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 0, !dbg !21918
  %8 = load i16, i16* %7, align 4, !dbg !21918
  %9 = zext i16 %8 to i32, !dbg !21914
  %10 = icmp eq i32 %9, 2, !dbg !21919
  br i1 %10, label %11, label %17, !dbg !21920

11:                                               ; preds = %1
  %12 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21921
  %13 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %12, i32 0, i32 0, !dbg !21923
  %14 = bitcast %union.anon.114* %13 to %struct.sockaddr_in*, !dbg !21924
  %15 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 2, !dbg !21925
  %16 = bitcast %struct.in_addr* %15 to i8*, !dbg !21926
  store i8* %16, i8** %2, align 8, !dbg !21927
  br label %34, !dbg !21927

17:                                               ; preds = %1
  %18 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21928
  %19 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %18, i32 0, i32 0, !dbg !21930
  %20 = bitcast %union.anon.114* %19 to %struct.sockaddr*, !dbg !21931
  %21 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i32 0, i32 0, !dbg !21932
  %22 = load i16, i16* %21, align 4, !dbg !21932
  %23 = zext i16 %22 to i32, !dbg !21928
  %24 = icmp eq i32 %23, 10, !dbg !21933
  br i1 %24, label %25, label %31, !dbg !21934

25:                                               ; preds = %17
  %26 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21935
  %27 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %26, i32 0, i32 0, !dbg !21937
  %28 = bitcast %union.anon.114* %27 to %struct.sockaddr_in6*, !dbg !21938
  %29 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %28, i32 0, i32 3, !dbg !21939
  %30 = bitcast %struct.in6_addr* %29 to i8*, !dbg !21940
  store i8* %30, i8** %2, align 8, !dbg !21941
  br label %34, !dbg !21941

31:                                               ; preds = %17
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !21942
  br label %32

32:                                               ; preds = %31
  br label %33

33:                                               ; preds = %32
  store i8* null, i8** %2, align 8, !dbg !21944
  br label %34, !dbg !21944

34:                                               ; preds = %33, %25, %11
  %35 = load i8*, i8** %2, align 8, !dbg !21945
  ret i8* %35, !dbg !21945
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_get_ipaddr_size() #0 !dbg !21946 {
  %1 = alloca %struct.vsf_sysutil_sockaddr, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr* %1, metadata !21947, metadata !DIExpression()), !dbg !21948
  call void @llvm.dbg.declare(metadata i32* %2, metadata !21949, metadata !DIExpression()), !dbg !21950
  store i32 4, i32* %2, align 4, !dbg !21950
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21951, metadata !DIExpression()), !dbg !21952
  store i32 16, i32* %3, align 4, !dbg !21952
  %4 = load i32, i32* %3, align 4, !dbg !21953
  %5 = load i32, i32* %2, align 4, !dbg !21955
  %6 = icmp ugt i32 %4, %5, !dbg !21956
  br i1 %6, label %7, label %9, !dbg !21957

7:                                                ; preds = %0
  %8 = load i32, i32* %3, align 4, !dbg !21958
  store i32 %8, i32* %2, align 4, !dbg !21960
  br label %9, !dbg !21961

9:                                                ; preds = %7, %0
  %10 = load i32, i32* %2, align 4, !dbg !21962
  ret i32 %10, !dbg !21963
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_get_ipsock(%struct.vsf_sysutil_sockaddr*) #0 !dbg !21964 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !21965, metadata !DIExpression()), !dbg !21966
  %4 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21967
  %5 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %4, i32 0, i32 0, !dbg !21969
  %6 = bitcast %union.anon.114* %5 to %struct.sockaddr*, !dbg !21970
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 0, !dbg !21971
  %8 = load i16, i16* %7, align 4, !dbg !21971
  %9 = zext i16 %8 to i32, !dbg !21967
  %10 = icmp eq i32 %9, 2, !dbg !21972
  br i1 %10, label %11, label %13, !dbg !21973

11:                                               ; preds = %1
  %12 = call i32 @vsf_sysutil_get_ipv4_sock(), !dbg !21974
  store i32 %12, i32* %2, align 4, !dbg !21976
  br label %26, !dbg !21976

13:                                               ; preds = %1
  %14 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !21977
  %15 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %14, i32 0, i32 0, !dbg !21979
  %16 = bitcast %union.anon.114* %15 to %struct.sockaddr*, !dbg !21980
  %17 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %16, i32 0, i32 0, !dbg !21981
  %18 = load i16, i16* %17, align 4, !dbg !21981
  %19 = zext i16 %18 to i32, !dbg !21977
  %20 = icmp eq i32 %19, 10, !dbg !21982
  br i1 %20, label %21, label %23, !dbg !21983

21:                                               ; preds = %13
  %22 = call i32 @vsf_sysutil_get_ipv6_sock(), !dbg !21984
  store i32 %22, i32* %2, align 4, !dbg !21986
  br label %26, !dbg !21986

23:                                               ; preds = %13
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !21987
  br label %24

24:                                               ; preds = %23
  br label %25

25:                                               ; preds = %24
  store i32 -1, i32* %2, align 4, !dbg !21989
  br label %26, !dbg !21989

26:                                               ; preds = %25, %21, %11
  %27 = load i32, i32* %2, align 4, !dbg !21990
  ret i32 %27, !dbg !21990
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_set_any(%struct.vsf_sysutil_sockaddr*) #0 !dbg !21991 {
  %2 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %2, metadata !21994, metadata !DIExpression()), !dbg !21995
  %3 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %2, align 8, !dbg !21996
  %4 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %3, i32 0, i32 0, !dbg !21998
  %5 = bitcast %union.anon.114* %4 to %struct.sockaddr*, !dbg !21999
  %6 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %5, i32 0, i32 0, !dbg !22000
  %7 = load i16, i16* %6, align 4, !dbg !22000
  %8 = zext i16 %7 to i32, !dbg !21996
  %9 = icmp eq i32 %8, 2, !dbg !22001
  br i1 %9, label %10, label %16, !dbg !22002

10:                                               ; preds = %1
  %11 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %2, align 8, !dbg !22003
  %12 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %11, i32 0, i32 0, !dbg !22005
  %13 = bitcast %union.anon.114* %12 to %struct.sockaddr_in*, !dbg !22006
  %14 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2, !dbg !22007
  %15 = bitcast %struct.in_addr* %14 to i8*, !dbg !22008
  call void @vsf_sysutil_memclr(i8* %15, i32 4), !dbg !22009
  br label %32, !dbg !22010

16:                                               ; preds = %1
  %17 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %2, align 8, !dbg !22011
  %18 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %17, i32 0, i32 0, !dbg !22013
  %19 = bitcast %union.anon.114* %18 to %struct.sockaddr*, !dbg !22014
  %20 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %19, i32 0, i32 0, !dbg !22015
  %21 = load i16, i16* %20, align 4, !dbg !22015
  %22 = zext i16 %21 to i32, !dbg !22011
  %23 = icmp eq i32 %22, 10, !dbg !22016
  br i1 %23, label %24, label %30, !dbg !22017

24:                                               ; preds = %16
  %25 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %2, align 8, !dbg !22018
  %26 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %25, i32 0, i32 0, !dbg !22020
  %27 = bitcast %union.anon.114* %26 to %struct.sockaddr_in6*, !dbg !22021
  %28 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %27, i32 0, i32 3, !dbg !22022
  %29 = bitcast %struct.in6_addr* %28 to i8*, !dbg !22023
  call void @vsf_sysutil_memclr(i8* %29, i32 16), !dbg !22024
  br label %31, !dbg !22025

30:                                               ; preds = %16
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !22026
  br label %31

31:                                               ; preds = %30, %24
  br label %32

32:                                               ; preds = %31, %10
  ret void, !dbg !22028
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define zeroext i16 @vsf_sysutil_sockaddr_get_port(%struct.vsf_sysutil_sockaddr*) #0 !dbg !22029 {
  %2 = alloca i16, align 2
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !22032, metadata !DIExpression()), !dbg !22033
  %4 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22034
  %5 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %4, i32 0, i32 0, !dbg !22036
  %6 = bitcast %union.anon.114* %5 to %struct.sockaddr*, !dbg !22037
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 0, !dbg !22038
  %8 = load i16, i16* %7, align 4, !dbg !22038
  %9 = zext i16 %8 to i32, !dbg !22034
  %10 = icmp eq i32 %9, 2, !dbg !22039
  br i1 %10, label %11, label %18, !dbg !22040

11:                                               ; preds = %1
  %12 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22041
  %13 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %12, i32 0, i32 0, !dbg !22043
  %14 = bitcast %union.anon.114* %13 to %struct.sockaddr_in*, !dbg !22044
  %15 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 1, !dbg !22045
  %16 = load i16, i16* %15, align 2, !dbg !22045
  %17 = call zeroext i16 @ntohs(i16 zeroext %16) #9, !dbg !22046
  store i16 %17, i16* %2, align 2, !dbg !22047
  br label %36, !dbg !22047

18:                                               ; preds = %1
  %19 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22048
  %20 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %19, i32 0, i32 0, !dbg !22050
  %21 = bitcast %union.anon.114* %20 to %struct.sockaddr*, !dbg !22051
  %22 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %21, i32 0, i32 0, !dbg !22052
  %23 = load i16, i16* %22, align 4, !dbg !22052
  %24 = zext i16 %23 to i32, !dbg !22048
  %25 = icmp eq i32 %24, 10, !dbg !22053
  br i1 %25, label %26, label %33, !dbg !22054

26:                                               ; preds = %18
  %27 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22055
  %28 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %27, i32 0, i32 0, !dbg !22057
  %29 = bitcast %union.anon.114* %28 to %struct.sockaddr_in6*, !dbg !22058
  %30 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %29, i32 0, i32 1, !dbg !22059
  %31 = load i16, i16* %30, align 2, !dbg !22059
  %32 = call zeroext i16 @ntohs(i16 zeroext %31) #9, !dbg !22060
  store i16 %32, i16* %2, align 2, !dbg !22061
  br label %36, !dbg !22061

33:                                               ; preds = %18
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !22062
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  store i16 0, i16* %2, align 2, !dbg !22064
  br label %36, !dbg !22064

36:                                               ; preds = %35, %26, %11
  %37 = load i16, i16* %2, align 2, !dbg !22065
  ret i16 %37, !dbg !22065
}

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #5

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sockaddr_set_port(%struct.vsf_sysutil_sockaddr*, i16 zeroext) #0 !dbg !22066 {
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %4 = alloca i16, align 2
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !22069, metadata !DIExpression()), !dbg !22070
  store i16 %1, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !22071, metadata !DIExpression()), !dbg !22072
  %5 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22073
  %6 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %5, i32 0, i32 0, !dbg !22075
  %7 = bitcast %union.anon.114* %6 to %struct.sockaddr*, !dbg !22076
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !22077
  %9 = load i16, i16* %8, align 4, !dbg !22077
  %10 = zext i16 %9 to i32, !dbg !22073
  %11 = icmp eq i32 %10, 2, !dbg !22078
  br i1 %11, label %12, label %19, !dbg !22079

12:                                               ; preds = %2
  %13 = load i16, i16* %4, align 2, !dbg !22080
  %14 = call zeroext i16 @htons(i16 zeroext %13) #9, !dbg !22082
  %15 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22083
  %16 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %15, i32 0, i32 0, !dbg !22084
  %17 = bitcast %union.anon.114* %16 to %struct.sockaddr_in*, !dbg !22085
  %18 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 1, !dbg !22086
  store i16 %14, i16* %18, align 2, !dbg !22087
  br label %36, !dbg !22088

19:                                               ; preds = %2
  %20 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22089
  %21 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %20, i32 0, i32 0, !dbg !22091
  %22 = bitcast %union.anon.114* %21 to %struct.sockaddr*, !dbg !22092
  %23 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %22, i32 0, i32 0, !dbg !22093
  %24 = load i16, i16* %23, align 4, !dbg !22093
  %25 = zext i16 %24 to i32, !dbg !22089
  %26 = icmp eq i32 %25, 10, !dbg !22094
  br i1 %26, label %27, label %34, !dbg !22095

27:                                               ; preds = %19
  %28 = load i16, i16* %4, align 2, !dbg !22096
  %29 = call zeroext i16 @htons(i16 zeroext %28) #9, !dbg !22098
  %30 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22099
  %31 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %30, i32 0, i32 0, !dbg !22100
  %32 = bitcast %union.anon.114* %31 to %struct.sockaddr_in6*, !dbg !22101
  %33 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %32, i32 0, i32 1, !dbg !22102
  store i16 %29, i16* %33, align 2, !dbg !22103
  br label %35, !dbg !22104

34:                                               ; preds = %19
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !22105
  br label %35

35:                                               ; preds = %34, %27
  br label %36

36:                                               ; preds = %35, %12
  ret void, !dbg !22107
}

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #5

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_is_port_reserved(i16 zeroext) #0 !dbg !22108 {
  %2 = alloca i32, align 4
  %3 = alloca i16, align 2
  store i16 %0, i16* %3, align 2
  call void @llvm.dbg.declare(metadata i16* %3, metadata !22111, metadata !DIExpression()), !dbg !22112
  %4 = load i16, i16* %3, align 2, !dbg !22113
  %5 = zext i16 %4 to i32, !dbg !22113
  %6 = icmp slt i32 %5, 1024, !dbg !22115
  br i1 %6, label %7, label %8, !dbg !22116

7:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !22117
  br label %9, !dbg !22117

8:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !22119
  br label %9, !dbg !22119

9:                                                ; preds = %8, %7
  %10 = load i32, i32* %2, align 4, !dbg !22120
  ret i32 %10, !dbg !22120
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_inet_ntop(%struct.vsf_sysutil_sockaddr*) #0 !dbg !1608 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %4 = alloca %struct.sockaddr*, align 8
  %5 = alloca i8*, align 8
  store %struct.vsf_sysutil_sockaddr* %0, %struct.vsf_sysutil_sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %3, metadata !22121, metadata !DIExpression()), !dbg !22122
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %4, metadata !22123, metadata !DIExpression()), !dbg !22124
  %6 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22125
  %7 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %6, i32 0, i32 0, !dbg !22126
  %8 = bitcast %union.anon.114* %7 to %struct.sockaddr*, !dbg !22127
  store %struct.sockaddr* %8, %struct.sockaddr** %4, align 8, !dbg !22124
  %9 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8, !dbg !22128
  %10 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %9, i32 0, i32 0, !dbg !22130
  %11 = load i16, i16* %10, align 2, !dbg !22130
  %12 = zext i16 %11 to i32, !dbg !22128
  %13 = icmp eq i32 %12, 2, !dbg !22131
  br i1 %13, label %14, label %22, !dbg !22132

14:                                               ; preds = %1
  %15 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22133
  %16 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %15, i32 0, i32 0, !dbg !22135
  %17 = bitcast %union.anon.114* %16 to %struct.sockaddr_in*, !dbg !22136
  %18 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 2, !dbg !22137
  %19 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %18, i32 0, i32 0, !dbg !22138
  %20 = load i32, i32* %19, align 4, !dbg !22138
  %21 = call i8* @inet_ntoa(i32 %20) #8, !dbg !22138
  store i8* %21, i8** %2, align 8, !dbg !22139
  br label %40, !dbg !22139

22:                                               ; preds = %1
  %23 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8, !dbg !22140
  %24 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %23, i32 0, i32 0, !dbg !22142
  %25 = load i16, i16* %24, align 2, !dbg !22142
  %26 = zext i16 %25 to i32, !dbg !22140
  %27 = icmp eq i32 %26, 10, !dbg !22143
  br i1 %27, label %28, label %39, !dbg !22144

28:                                               ; preds = %22
  call void @llvm.dbg.declare(metadata i8** %5, metadata !22145, metadata !DIExpression()), !dbg !22147
  %29 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %3, align 8, !dbg !22148
  %30 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %29, i32 0, i32 0, !dbg !22149
  %31 = bitcast %union.anon.114* %30 to %struct.sockaddr_in6*, !dbg !22150
  %32 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %31, i32 0, i32 3, !dbg !22151
  %33 = bitcast %struct.in6_addr* %32 to i8*, !dbg !22152
  %34 = call i8* @inet_ntop(i32 10, i8* %33, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_inet_ntop.inaddr_buf, i32 0, i32 0), i32 64) #8, !dbg !22153
  store i8* %34, i8** %5, align 8, !dbg !22147
  store i8 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_inet_ntop.inaddr_buf, i64 0, i64 63), align 1, !dbg !22154
  %35 = load i8*, i8** %5, align 8, !dbg !22155
  %36 = icmp eq i8* %35, null, !dbg !22157
  br i1 %36, label %37, label %38, !dbg !22158

37:                                               ; preds = %28
  store i8 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_inet_ntop.inaddr_buf, i64 0, i64 0), align 16, !dbg !22159
  br label %38, !dbg !22161

38:                                               ; preds = %37, %28
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_inet_ntop.inaddr_buf, i32 0, i32 0), i8** %2, align 8, !dbg !22162
  br label %40, !dbg !22162

39:                                               ; preds = %22
  call void @die(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48.1206, i32 0, i32 0)), !dbg !22163
  store i8* null, i8** %2, align 8, !dbg !22165
  br label %40, !dbg !22165

40:                                               ; preds = %39, %38, %14
  %41 = load i8*, i8** %2, align 8, !dbg !22166
  ret i8* %41, !dbg !22166
}

; Function Attrs: nounwind
declare i8* @inet_ntoa(i32) #3

; Function Attrs: nounwind
declare i8* @inet_ntop(i32, i8*, i8*, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_inet_ntoa(i8*) #0 !dbg !22167 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !22170, metadata !DIExpression()), !dbg !22171
  %3 = load i8*, i8** %2, align 8, !dbg !22172
  %4 = bitcast i8* %3 to %struct.in_addr*, !dbg !22173
  %5 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %4, i32 0, i32 0, !dbg !22174
  %6 = load i32, i32* %5, align 4, !dbg !22174
  %7 = call i8* @inet_ntoa(i32 %6) #8, !dbg !22174
  ret i8* %7, !dbg !22175
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_inet_aton(i8*, %struct.vsf_sysutil_sockaddr*) #0 !dbg !22176 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.vsf_sysutil_sockaddr*, align 8
  %6 = alloca %struct.in_addr, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !22179, metadata !DIExpression()), !dbg !22180
  store %struct.vsf_sysutil_sockaddr* %1, %struct.vsf_sysutil_sockaddr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr** %5, metadata !22181, metadata !DIExpression()), !dbg !22182
  call void @llvm.dbg.declare(metadata %struct.in_addr* %6, metadata !22183, metadata !DIExpression()), !dbg !22184
  %7 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !22185
  %8 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %7, i32 0, i32 0, !dbg !22187
  %9 = bitcast %union.anon.114* %8 to %struct.sockaddr*, !dbg !22188
  %10 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %9, i32 0, i32 0, !dbg !22189
  %11 = load i16, i16* %10, align 4, !dbg !22189
  %12 = zext i16 %11 to i32, !dbg !22185
  %13 = icmp ne i32 %12, 2, !dbg !22190
  br i1 %13, label %14, label %15, !dbg !22191

14:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.1243, i32 0, i32 0)), !dbg !22192
  br label %15, !dbg !22194

15:                                               ; preds = %14, %2
  %16 = load i8*, i8** %4, align 8, !dbg !22195
  %17 = call i32 @inet_aton(i8* %16, %struct.in_addr* %6) #8, !dbg !22197
  %18 = icmp ne i32 %17, 0, !dbg !22197
  br i1 %18, label %19, label %26, !dbg !22198

19:                                               ; preds = %15
  %20 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %5, align 8, !dbg !22199
  %21 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %20, i32 0, i32 0, !dbg !22201
  %22 = bitcast %union.anon.114* %21 to %struct.sockaddr_in*, !dbg !22202
  %23 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 2, !dbg !22203
  %24 = bitcast %struct.in_addr* %23 to i8*, !dbg !22204
  %25 = bitcast %struct.in_addr* %6 to i8*, !dbg !22205
  call void @vsf_sysutil_memcpy(i8* %24, i8* %25, i32 4), !dbg !22206
  store i32 1, i32* %3, align 4, !dbg !22207
  br label %27, !dbg !22207

26:                                               ; preds = %15
  store i32 0, i32* %3, align 4, !dbg !22208
  br label %27, !dbg !22208

27:                                               ; preds = %26, %19
  %28 = load i32, i32* %3, align 4, !dbg !22210
  ret i32 %28, !dbg !22210
}

; Function Attrs: nounwind
declare i32 @inet_aton(i8*, %struct.in_addr*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_dns_resolve(%struct.vsf_sysutil_sockaddr**, i8*) #0 !dbg !22211 {
  %3 = alloca %struct.vsf_sysutil_sockaddr**, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.hostent*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.vsf_sysutil_sockaddr** %0, %struct.vsf_sysutil_sockaddr*** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_sockaddr*** %3, metadata !22214, metadata !DIExpression()), !dbg !22215
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !22216, metadata !DIExpression()), !dbg !22217
  call void @llvm.dbg.declare(metadata %struct.hostent** %5, metadata !22218, metadata !DIExpression()), !dbg !22228
  %8 = load i8*, i8** %4, align 8, !dbg !22229
  %9 = call %struct.hostent* @gethostbyname(i8* %8), !dbg !22230
  store %struct.hostent* %9, %struct.hostent** %5, align 8, !dbg !22228
  %10 = load %struct.hostent*, %struct.hostent** %5, align 8, !dbg !22231
  %11 = icmp eq %struct.hostent* %10, null, !dbg !22233
  br i1 %11, label %12, label %14, !dbg !22234

12:                                               ; preds = %2
  %13 = load i8*, i8** %4, align 8, !dbg !22235
  call void @die2(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54.1268, i32 0, i32 0), i8* %13), !dbg !22237
  br label %14, !dbg !22238

14:                                               ; preds = %12, %2
  %15 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %3, align 8, !dbg !22239
  call void @vsf_sysutil_sockaddr_clear(%struct.vsf_sysutil_sockaddr** %15), !dbg !22240
  %16 = load %struct.hostent*, %struct.hostent** %5, align 8, !dbg !22241
  %17 = getelementptr inbounds %struct.hostent, %struct.hostent* %16, i32 0, i32 2, !dbg !22243
  %18 = load i32, i32* %17, align 8, !dbg !22243
  %19 = icmp eq i32 %18, 2, !dbg !22244
  br i1 %19, label %20, label %42, !dbg !22245

20:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i32* %6, metadata !22246, metadata !DIExpression()), !dbg !22248
  %21 = load %struct.hostent*, %struct.hostent** %5, align 8, !dbg !22249
  %22 = getelementptr inbounds %struct.hostent, %struct.hostent* %21, i32 0, i32 3, !dbg !22250
  %23 = load i32, i32* %22, align 4, !dbg !22250
  store i32 %23, i32* %6, align 4, !dbg !22248
  %24 = load i32, i32* %6, align 4, !dbg !22251
  %25 = zext i32 %24 to i64, !dbg !22251
  %26 = icmp ugt i64 %25, 4, !dbg !22253
  br i1 %26, label %27, label %28, !dbg !22254

27:                                               ; preds = %20
  store i32 4, i32* %6, align 4, !dbg !22255
  br label %28, !dbg !22257

28:                                               ; preds = %27, %20
  %29 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %3, align 8, !dbg !22258
  call void @vsf_sysutil_sockaddr_alloc_ipv4(%struct.vsf_sysutil_sockaddr** %29), !dbg !22259
  %30 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %3, align 8, !dbg !22260
  %31 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %30, align 8, !dbg !22261
  %32 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %31, i32 0, i32 0, !dbg !22262
  %33 = bitcast %union.anon.114* %32 to %struct.sockaddr_in*, !dbg !22263
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %33, i32 0, i32 2, !dbg !22264
  %35 = bitcast %struct.in_addr* %34 to i8*, !dbg !22265
  %36 = load %struct.hostent*, %struct.hostent** %5, align 8, !dbg !22266
  %37 = getelementptr inbounds %struct.hostent, %struct.hostent* %36, i32 0, i32 4, !dbg !22267
  %38 = load i8**, i8*** %37, align 8, !dbg !22267
  %39 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !22266
  %40 = load i8*, i8** %39, align 8, !dbg !22266
  %41 = load i32, i32* %6, align 4, !dbg !22268
  call void @vsf_sysutil_memcpy(i8* %35, i8* %40, i32 %41), !dbg !22269
  br label %71, !dbg !22270

42:                                               ; preds = %14
  %43 = load %struct.hostent*, %struct.hostent** %5, align 8, !dbg !22271
  %44 = getelementptr inbounds %struct.hostent, %struct.hostent* %43, i32 0, i32 2, !dbg !22273
  %45 = load i32, i32* %44, align 8, !dbg !22273
  %46 = icmp eq i32 %45, 10, !dbg !22274
  br i1 %46, label %47, label %69, !dbg !22275

47:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i32* %7, metadata !22276, metadata !DIExpression()), !dbg !22278
  %48 = load %struct.hostent*, %struct.hostent** %5, align 8, !dbg !22279
  %49 = getelementptr inbounds %struct.hostent, %struct.hostent* %48, i32 0, i32 3, !dbg !22280
  %50 = load i32, i32* %49, align 4, !dbg !22280
  store i32 %50, i32* %7, align 4, !dbg !22278
  %51 = load i32, i32* %7, align 4, !dbg !22281
  %52 = zext i32 %51 to i64, !dbg !22281
  %53 = icmp ugt i64 %52, 16, !dbg !22283
  br i1 %53, label %54, label %55, !dbg !22284

54:                                               ; preds = %47
  store i32 16, i32* %7, align 4, !dbg !22285
  br label %55, !dbg !22287

55:                                               ; preds = %54, %47
  %56 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %3, align 8, !dbg !22288
  call void @vsf_sysutil_sockaddr_alloc_ipv6(%struct.vsf_sysutil_sockaddr** %56), !dbg !22289
  %57 = load %struct.vsf_sysutil_sockaddr**, %struct.vsf_sysutil_sockaddr*** %3, align 8, !dbg !22290
  %58 = load %struct.vsf_sysutil_sockaddr*, %struct.vsf_sysutil_sockaddr** %57, align 8, !dbg !22291
  %59 = getelementptr inbounds %struct.vsf_sysutil_sockaddr, %struct.vsf_sysutil_sockaddr* %58, i32 0, i32 0, !dbg !22292
  %60 = bitcast %union.anon.114* %59 to %struct.sockaddr_in6*, !dbg !22293
  %61 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %60, i32 0, i32 3, !dbg !22294
  %62 = bitcast %struct.in6_addr* %61 to i8*, !dbg !22295
  %63 = load %struct.hostent*, %struct.hostent** %5, align 8, !dbg !22296
  %64 = getelementptr inbounds %struct.hostent, %struct.hostent* %63, i32 0, i32 4, !dbg !22297
  %65 = load i8**, i8*** %64, align 8, !dbg !22297
  %66 = getelementptr inbounds i8*, i8** %65, i64 0, !dbg !22296
  %67 = load i8*, i8** %66, align 8, !dbg !22296
  %68 = load i32, i32* %7, align 4, !dbg !22298
  call void @vsf_sysutil_memcpy(i8* %62, i8* %67, i32 %68), !dbg !22299
  br label %70, !dbg !22300

69:                                               ; preds = %42
  call void @die(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55.1269, i32 0, i32 0)), !dbg !22301
  br label %70

70:                                               ; preds = %69, %55
  br label %71

71:                                               ; preds = %70, %28
  ret void, !dbg !22303
}

declare %struct.hostent* @gethostbyname(i8*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.vsf_sysutil_user* @vsf_sysutil_getpwuid(i32) #0 !dbg !22304 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22307, metadata !DIExpression()), !dbg !22308
  %3 = load i32, i32* %2, align 4, !dbg !22309
  %4 = icmp slt i32 %3, 0, !dbg !22311
  br i1 %4, label %5, label %6, !dbg !22312

5:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.56.1272, i32 0, i32 0)), !dbg !22313
  br label %6, !dbg !22315

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !22316
  %8 = call %struct.passwd* @getpwuid(i32 %7), !dbg !22317
  %9 = bitcast %struct.passwd* %8 to %struct.vsf_sysutil_user*, !dbg !22318
  ret %struct.vsf_sysutil_user* %9, !dbg !22319
}

declare %struct.passwd* @getpwuid(i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.vsf_sysutil_user* @vsf_sysutil_getpwnam(i8*) #0 !dbg !22320 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !22323, metadata !DIExpression()), !dbg !22324
  %3 = load i8*, i8** %2, align 8, !dbg !22325
  %4 = call %struct.passwd* @getpwnam(i8* %3), !dbg !22326
  %5 = bitcast %struct.passwd* %4 to %struct.vsf_sysutil_user*, !dbg !22327
  ret %struct.vsf_sysutil_user* %5, !dbg !22328
}

declare %struct.passwd* @getpwnam(i8*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_user_getname(%struct.vsf_sysutil_user*) #0 !dbg !22329 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22332, metadata !DIExpression()), !dbg !22333
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22334, metadata !DIExpression()), !dbg !22335
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22336
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22337
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22335
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22338
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 0, !dbg !22339
  %8 = load i8*, i8** %7, align 8, !dbg !22339
  ret i8* %8, !dbg !22340
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_user_get_homedir(%struct.vsf_sysutil_user*) #0 !dbg !22341 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22342, metadata !DIExpression()), !dbg !22343
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22344, metadata !DIExpression()), !dbg !22345
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22346
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22347
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22345
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22348
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 5, !dbg !22349
  %8 = load i8*, i8** %7, align 8, !dbg !22349
  ret i8* %8, !dbg !22350
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_user_getuid(%struct.vsf_sysutil_user*) #0 !dbg !22351 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22354, metadata !DIExpression()), !dbg !22355
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22356, metadata !DIExpression()), !dbg !22357
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22358
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22359
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22357
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22360
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 2, !dbg !22361
  %8 = load i32, i32* %7, align 8, !dbg !22361
  ret i32 %8, !dbg !22362
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_user_getgid(%struct.vsf_sysutil_user*) #0 !dbg !22363 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22364, metadata !DIExpression()), !dbg !22365
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22366, metadata !DIExpression()), !dbg !22367
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22368
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22369
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22367
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22370
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 3, !dbg !22371
  %8 = load i32, i32* %7, align 4, !dbg !22371
  ret i32 %8, !dbg !22372
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.vsf_sysutil_group* @vsf_sysutil_getgrgid(i32) #0 !dbg !22373 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22376, metadata !DIExpression()), !dbg !22377
  %3 = load i32, i32* %2, align 4, !dbg !22378
  %4 = icmp slt i32 %3, 0, !dbg !22380
  br i1 %4, label %5, label %6, !dbg !22381

5:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.57.1283, i32 0, i32 0)), !dbg !22382
  br label %6, !dbg !22384

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !22385
  %8 = call %struct.group* @getgrgid(i32 %7), !dbg !22386
  %9 = bitcast %struct.group* %8 to %struct.vsf_sysutil_group*, !dbg !22387
  ret %struct.vsf_sysutil_group* %9, !dbg !22388
}

declare %struct.group* @getgrgid(i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_group_getname(%struct.vsf_sysutil_group*) #0 !dbg !22389 {
  %2 = alloca %struct.vsf_sysutil_group*, align 8
  %3 = alloca %struct.group*, align 8
  store %struct.vsf_sysutil_group* %0, %struct.vsf_sysutil_group** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_group** %2, metadata !22394, metadata !DIExpression()), !dbg !22395
  call void @llvm.dbg.declare(metadata %struct.group** %3, metadata !22396, metadata !DIExpression()), !dbg !22397
  %4 = load %struct.vsf_sysutil_group*, %struct.vsf_sysutil_group** %2, align 8, !dbg !22398
  %5 = bitcast %struct.vsf_sysutil_group* %4 to %struct.group*, !dbg !22399
  store %struct.group* %5, %struct.group** %3, align 8, !dbg !22397
  %6 = load %struct.group*, %struct.group** %3, align 8, !dbg !22400
  %7 = getelementptr inbounds %struct.group, %struct.group* %6, i32 0, i32 0, !dbg !22401
  %8 = load i8*, i8** %7, align 8, !dbg !22401
  ret i8* %8, !dbg !22402
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define zeroext i8 @vsf_sysutil_get_random_byte() #0 !dbg !1613 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %struct.timespec, align 8
  %7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !22403, metadata !DIExpression()), !dbg !22404
  call void @llvm.dbg.declare(metadata i8* %2, metadata !22405, metadata !DIExpression()), !dbg !22406
  call void @llvm.dbg.declare(metadata i8* %3, metadata !22407, metadata !DIExpression()), !dbg !22408
  call void @llvm.dbg.declare(metadata i8* %4, metadata !22409, metadata !DIExpression()), !dbg !22410
  call void @llvm.dbg.declare(metadata i8* %5, metadata !22411, metadata !DIExpression()), !dbg !22412
  %8 = load i32, i32* @vsf_sysutil_get_random_byte.seeded, align 4, !dbg !22413
  %9 = icmp ne i32 %8, 0, !dbg !22413
  br i1 %9, label %19, label %10, !dbg !22415

10:                                               ; preds = %0
  call void @llvm.dbg.declare(metadata %struct.timespec* %6, metadata !22416, metadata !DIExpression()), !dbg !22418
  call void @llvm.dbg.declare(metadata i32* %7, metadata !22419, metadata !DIExpression()), !dbg !22420
  %11 = call i32 @gettimeofday(%struct.timespec* %6, %struct.vsf_client_launch* null) #8, !dbg !22421
  store i32 %11, i32* %7, align 4, !dbg !22420
  %12 = load i32, i32* %7, align 4, !dbg !22422
  %13 = icmp ne i32 %12, 0, !dbg !22424
  br i1 %13, label %14, label %15, !dbg !22425

14:                                               ; preds = %10
  call void @die(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58.1288, i32 0, i32 0)), !dbg !22426
  br label %15, !dbg !22428

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 1, !dbg !22429
  %17 = load i64, i64* %16, align 8, !dbg !22429
  %18 = trunc i64 %17 to i32, !dbg !22430
  call void @srand(i32 %18) #8, !dbg !22431
  store i32 1, i32* @vsf_sysutil_get_random_byte.seeded, align 4, !dbg !22432
  br label %19, !dbg !22433

19:                                               ; preds = %15, %0
  %20 = call i32 @rand() #8, !dbg !22434
  store i32 %20, i32* %1, align 4, !dbg !22435
  %21 = load i32, i32* %1, align 4, !dbg !22436
  %22 = and i32 %21, 255, !dbg !22437
  %23 = trunc i32 %22 to i8, !dbg !22436
  store i8 %23, i8* %2, align 1, !dbg !22438
  %24 = load i32, i32* %1, align 4, !dbg !22439
  %25 = lshr i32 %24, 8, !dbg !22440
  %26 = and i32 %25, 255, !dbg !22441
  %27 = trunc i32 %26 to i8, !dbg !22442
  store i8 %27, i8* %3, align 1, !dbg !22443
  %28 = load i32, i32* %1, align 4, !dbg !22444
  %29 = lshr i32 %28, 16, !dbg !22445
  %30 = and i32 %29, 255, !dbg !22446
  %31 = trunc i32 %30 to i8, !dbg !22447
  store i8 %31, i8* %4, align 1, !dbg !22448
  %32 = load i32, i32* %1, align 4, !dbg !22449
  %33 = lshr i32 %32, 24, !dbg !22450
  %34 = and i32 %33, 255, !dbg !22451
  %35 = trunc i32 %34 to i8, !dbg !22452
  store i8 %35, i8* %5, align 1, !dbg !22453
  %36 = load i8, i8* %2, align 1, !dbg !22454
  %37 = zext i8 %36 to i32, !dbg !22454
  %38 = load i8, i8* %3, align 1, !dbg !22455
  %39 = zext i8 %38 to i32, !dbg !22455
  %40 = xor i32 %37, %39, !dbg !22456
  %41 = load i8, i8* %4, align 1, !dbg !22457
  %42 = zext i8 %41 to i32, !dbg !22457
  %43 = xor i32 %40, %42, !dbg !22458
  %44 = load i8, i8* %5, align 1, !dbg !22459
  %45 = zext i8 %44 to i32, !dbg !22459
  %46 = xor i32 %43, %45, !dbg !22460
  %47 = trunc i32 %46 to i8, !dbg !22454
  ret i8 %47, !dbg !22461
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timespec*, %struct.vsf_client_launch*) #3

; Function Attrs: nounwind
declare void @srand(i32) #3

; Function Attrs: nounwind
declare i32 @rand() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_running_as_root() #0 !dbg !22462 {
  %1 = call i32 @getuid() #8, !dbg !22463
  %2 = icmp eq i32 %1, 0, !dbg !22464
  %3 = zext i1 %2 to i32, !dbg !22464
  ret i32 %3, !dbg !22465
}

; Function Attrs: nounwind
declare i32 @getuid() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setuid(%struct.vsf_sysutil_user*) #0 !dbg !22466 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22469, metadata !DIExpression()), !dbg !22470
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22471, metadata !DIExpression()), !dbg !22472
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22473
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22474
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22472
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22475
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 2, !dbg !22476
  %8 = load i32, i32* %7, align 8, !dbg !22476
  call void @vsf_sysutil_setuid_numeric(i32 %8), !dbg !22477
  ret void, !dbg !22478
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setuid_numeric(i32) #0 !dbg !22479 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22480, metadata !DIExpression()), !dbg !22481
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22482, metadata !DIExpression()), !dbg !22483
  %4 = load i32, i32* %2, align 4, !dbg !22484
  %5 = call i32 @setuid(i32 %4) #8, !dbg !22485
  store i32 %5, i32* %3, align 4, !dbg !22483
  %6 = load i32, i32* %3, align 4, !dbg !22486
  %7 = icmp ne i32 %6, 0, !dbg !22488
  br i1 %7, label %8, label %9, !dbg !22489

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59.1293, i32 0, i32 0)), !dbg !22490
  br label %9, !dbg !22492

9:                                                ; preds = %8, %1
  ret void, !dbg !22493
}

; Function Attrs: nounwind
declare i32 @setuid(i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setgid(%struct.vsf_sysutil_user*) #0 !dbg !22494 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22495, metadata !DIExpression()), !dbg !22496
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22497, metadata !DIExpression()), !dbg !22498
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22499
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22500
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22498
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22501
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 3, !dbg !22502
  %8 = load i32, i32* %7, align 4, !dbg !22502
  call void @vsf_sysutil_setgid_numeric(i32 %8), !dbg !22503
  ret void, !dbg !22504
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setgid_numeric(i32) #0 !dbg !22505 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22506, metadata !DIExpression()), !dbg !22507
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22508, metadata !DIExpression()), !dbg !22509
  %4 = load i32, i32* %2, align 4, !dbg !22510
  %5 = call i32 @setgid(i32 %4) #8, !dbg !22511
  store i32 %5, i32* %3, align 4, !dbg !22509
  %6 = load i32, i32* %3, align 4, !dbg !22512
  %7 = icmp ne i32 %6, 0, !dbg !22514
  br i1 %7, label %8, label %9, !dbg !22515

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60.1296, i32 0, i32 0)), !dbg !22516
  br label %9, !dbg !22518

9:                                                ; preds = %8, %1
  ret void, !dbg !22519
}

; Function Attrs: nounwind
declare i32 @setgid(i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_geteuid() #0 !dbg !22520 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !22521, metadata !DIExpression()), !dbg !22522
  %2 = call i32 @geteuid() #8, !dbg !22523
  store i32 %2, i32* %1, align 4, !dbg !22522
  %3 = load i32, i32* %1, align 4, !dbg !22524
  %4 = icmp slt i32 %3, 0, !dbg !22526
  br i1 %4, label %5, label %6, !dbg !22527

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61.1299, i32 0, i32 0)), !dbg !22528
  br label %6, !dbg !22530

6:                                                ; preds = %5, %0
  %7 = load i32, i32* %1, align 4, !dbg !22531
  ret i32 %7, !dbg !22532
}

; Function Attrs: nounwind
declare i32 @geteuid() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_getegid() #0 !dbg !22533 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !22534, metadata !DIExpression()), !dbg !22535
  %2 = call i32 @getegid() #8, !dbg !22536
  store i32 %2, i32* %1, align 4, !dbg !22535
  %3 = load i32, i32* %1, align 4, !dbg !22537
  %4 = icmp slt i32 %3, 0, !dbg !22539
  br i1 %4, label %5, label %6, !dbg !22540

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62.1302, i32 0, i32 0)), !dbg !22541
  br label %6, !dbg !22543

6:                                                ; preds = %5, %0
  %7 = load i32, i32* %1, align 4, !dbg !22544
  ret i32 %7, !dbg !22545
}

; Function Attrs: nounwind
declare i32 @getegid() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_seteuid(%struct.vsf_sysutil_user*) #0 !dbg !22546 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22547, metadata !DIExpression()), !dbg !22548
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22549, metadata !DIExpression()), !dbg !22550
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22551
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22552
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22550
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22553
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 2, !dbg !22554
  %8 = load i32, i32* %7, align 8, !dbg !22554
  call void @vsf_sysutil_seteuid_numeric(i32 %8), !dbg !22555
  ret void, !dbg !22556
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_seteuid_numeric(i32) #0 !dbg !22557 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22558, metadata !DIExpression()), !dbg !22559
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22560, metadata !DIExpression()), !dbg !22561
  %4 = load i32, i32* %2, align 4, !dbg !22562
  %5 = call i32 @setreuid(i32 -1, i32 %4) #8, !dbg !22563
  store i32 %5, i32* %3, align 4, !dbg !22561
  %6 = load i32, i32* %3, align 4, !dbg !22564
  %7 = icmp ne i32 %6, 0, !dbg !22566
  br i1 %7, label %8, label %9, !dbg !22567

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63.1307, i32 0, i32 0)), !dbg !22568
  br label %9, !dbg !22570

9:                                                ; preds = %8, %1
  ret void, !dbg !22571
}

; Function Attrs: nounwind
declare i32 @setreuid(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setegid(%struct.vsf_sysutil_user*) #0 !dbg !22572 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22573, metadata !DIExpression()), !dbg !22574
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22575, metadata !DIExpression()), !dbg !22576
  %4 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22577
  %5 = bitcast %struct.vsf_sysutil_user* %4 to %struct.passwd*, !dbg !22578
  store %struct.passwd* %5, %struct.passwd** %3, align 8, !dbg !22576
  %6 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22579
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 3, !dbg !22580
  %8 = load i32, i32* %7, align 4, !dbg !22580
  call void @vsf_sysutil_setegid_numeric(i32 %8), !dbg !22581
  ret void, !dbg !22582
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setegid_numeric(i32) #0 !dbg !22583 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22584, metadata !DIExpression()), !dbg !22585
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22586, metadata !DIExpression()), !dbg !22587
  %4 = load i32, i32* %2, align 4, !dbg !22588
  %5 = call i32 @setregid(i32 -1, i32 %4) #8, !dbg !22589
  store i32 %5, i32* %3, align 4, !dbg !22587
  %6 = load i32, i32* %3, align 4, !dbg !22590
  %7 = icmp ne i32 %6, 0, !dbg !22592
  br i1 %7, label %8, label %9, !dbg !22593

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64.1312, i32 0, i32 0)), !dbg !22594
  br label %9, !dbg !22596

9:                                                ; preds = %8, %1
  ret void, !dbg !22597
}

; Function Attrs: nounwind
declare i32 @setregid(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_clear_supp_groups() #0 !dbg !22598 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !22599, metadata !DIExpression()), !dbg !22600
  %2 = call i32 @setgroups(i64 0, i32* null) #8, !dbg !22601
  store i32 %2, i32* %1, align 4, !dbg !22600
  %3 = load i32, i32* %1, align 4, !dbg !22602
  %4 = icmp ne i32 %3, 0, !dbg !22604
  br i1 %4, label %5, label %6, !dbg !22605

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65.1315, i32 0, i32 0)), !dbg !22606
  br label %6, !dbg !22608

6:                                                ; preds = %5, %0
  ret void, !dbg !22609
}

; Function Attrs: nounwind
declare i32 @setgroups(i64, i32*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_initgroups(%struct.vsf_sysutil_user*) #0 !dbg !22610 {
  %2 = alloca %struct.vsf_sysutil_user*, align 8
  %3 = alloca %struct.passwd*, align 8
  %4 = alloca i32, align 4
  store %struct.vsf_sysutil_user* %0, %struct.vsf_sysutil_user** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_sysutil_user** %2, metadata !22611, metadata !DIExpression()), !dbg !22612
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !22613, metadata !DIExpression()), !dbg !22614
  %5 = load %struct.vsf_sysutil_user*, %struct.vsf_sysutil_user** %2, align 8, !dbg !22615
  %6 = bitcast %struct.vsf_sysutil_user* %5 to %struct.passwd*, !dbg !22616
  store %struct.passwd* %6, %struct.passwd** %3, align 8, !dbg !22614
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22617, metadata !DIExpression()), !dbg !22618
  %7 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22619
  %8 = getelementptr inbounds %struct.passwd, %struct.passwd* %7, i32 0, i32 0, !dbg !22620
  %9 = load i8*, i8** %8, align 8, !dbg !22620
  %10 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !22621
  %11 = getelementptr inbounds %struct.passwd, %struct.passwd* %10, i32 0, i32 3, !dbg !22622
  %12 = load i32, i32* %11, align 4, !dbg !22622
  %13 = call i32 @initgroups(i8* %9, i32 %12), !dbg !22623
  store i32 %13, i32* %4, align 4, !dbg !22618
  %14 = load i32, i32* %4, align 4, !dbg !22624
  %15 = icmp ne i32 %14, 0, !dbg !22626
  br i1 %15, label %16, label %17, !dbg !22627

16:                                               ; preds = %1
  call void @die(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66.1318, i32 0, i32 0)), !dbg !22628
  br label %17, !dbg !22630

17:                                               ; preds = %16, %1
  ret void, !dbg !22631
}

declare i32 @initgroups(i8*, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_chroot(i8*) #0 !dbg !22632 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !22633, metadata !DIExpression()), !dbg !22634
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22635, metadata !DIExpression()), !dbg !22636
  %4 = load i8*, i8** %2, align 8, !dbg !22637
  %5 = call i32 @chroot(i8* %4) #8, !dbg !22638
  store i32 %5, i32* %3, align 4, !dbg !22636
  %6 = load i32, i32* %3, align 4, !dbg !22639
  %7 = icmp ne i32 %6, 0, !dbg !22641
  br i1 %7, label %8, label %9, !dbg !22642

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67.1321, i32 0, i32 0)), !dbg !22643
  br label %9, !dbg !22645

9:                                                ; preds = %8, %1
  ret void, !dbg !22646
}

; Function Attrs: nounwind
declare i32 @chroot(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_get_umask() #0 !dbg !22647 {
  %1 = load i32, i32* @s_current_umask, align 4, !dbg !22648
  ret i32 %1, !dbg !22649
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_umask(i32) #0 !dbg !22650 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22653, metadata !DIExpression()), !dbg !22654
  %3 = load i32, i32* %2, align 4, !dbg !22655
  %4 = and i32 %3, 511, !dbg !22656
  store i32 %4, i32* @s_current_umask, align 4, !dbg !22657
  %5 = load i32, i32* @s_current_umask, align 4, !dbg !22658
  %6 = call i32 @umask(i32 %5) #8, !dbg !22659
  ret void, !dbg !22660
}

; Function Attrs: nounwind
declare i32 @umask(i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_make_session_leader() #0 !dbg !22661 {
  %1 = call i32 @setsid() #8, !dbg !22662
  %2 = call i32 @vsf_sysutil_getpid(), !dbg !22663
  %3 = call i32 @getpgrp() #8, !dbg !22665
  %4 = icmp ne i32 %2, %3, !dbg !22666
  br i1 %4, label %5, label %6, !dbg !22667

5:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.68.1328, i32 0, i32 0)), !dbg !22668
  br label %6, !dbg !22670

6:                                                ; preds = %5, %0
  ret void, !dbg !22671
}

; Function Attrs: nounwind
declare i32 @setsid() #3

; Function Attrs: nounwind
declare i32 @getpgrp() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_reopen_standard_fds() #0 !dbg !22672 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !22673, metadata !DIExpression()), !dbg !22674
  %2 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69.1331, i32 0, i32 0), i32 2, i32 0), !dbg !22675
  store i32 %2, i32* %1, align 4, !dbg !22677
  %3 = icmp slt i32 %2, 0, !dbg !22678
  br i1 %3, label %4, label %5, !dbg !22679

4:                                                ; preds = %0
  br label %14, !dbg !22680

5:                                                ; preds = %0
  %6 = load i32, i32* %1, align 4, !dbg !22682
  call void @vsf_sysutil_dupfd2(i32 %6, i32 0), !dbg !22683
  %7 = load i32, i32* %1, align 4, !dbg !22684
  call void @vsf_sysutil_dupfd2(i32 %7, i32 1), !dbg !22685
  %8 = load i32, i32* %1, align 4, !dbg !22686
  call void @vsf_sysutil_dupfd2(i32 %8, i32 2), !dbg !22687
  %9 = load i32, i32* %1, align 4, !dbg !22688
  %10 = icmp sgt i32 %9, 2, !dbg !22690
  br i1 %10, label %11, label %13, !dbg !22691

11:                                               ; preds = %5
  %12 = load i32, i32* %1, align 4, !dbg !22692
  call void @vsf_sysutil_close(i32 %12), !dbg !22694
  br label %13, !dbg !22695

13:                                               ; preds = %11, %5
  br label %15, !dbg !22696

14:                                               ; preds = %4
  call void @die(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.70.1332, i32 0, i32 0)), !dbg !22697
  br label %15, !dbg !22698

15:                                               ; preds = %14, %13
  ret void, !dbg !22698
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_tzset() #0 !dbg !1618 {
  %1 = alloca i32, align 4
  %2 = alloca [7 x i8], align 1
  %3 = alloca i64, align 8
  %4 = alloca %struct.tm*, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !22699, metadata !DIExpression()), !dbg !22700
  call void @llvm.dbg.declare(metadata [7 x i8]* %2, metadata !22701, metadata !DIExpression()), !dbg !22705
  call void @llvm.dbg.declare(metadata i64* %3, metadata !22706, metadata !DIExpression()), !dbg !22707
  %5 = call i64 @time(i64* null) #8, !dbg !22708
  store i64 %5, i64* %3, align 8, !dbg !22707
  call void @llvm.dbg.declare(metadata %struct.tm** %4, metadata !22709, metadata !DIExpression()), !dbg !22710
  call void @tzset() #8, !dbg !22711
  %6 = call %struct.tm* @localtime(i64* %3) #8, !dbg !22712
  store %struct.tm* %6, %struct.tm** %4, align 8, !dbg !22713
  %7 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !22714
  %8 = icmp eq %struct.tm* %7, null, !dbg !22716
  br i1 %8, label %9, label %10, !dbg !22717

9:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71.1335, i32 0, i32 0)), !dbg !22718
  br label %10, !dbg !22720

10:                                               ; preds = %9, %0
  %11 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i32 0, i32 0, !dbg !22721
  %12 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !22722
  %13 = call i64 @strftime(i8* %11, i64 7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72.1336, i32 0, i32 0), %struct.tm* %12) #8, !dbg !22723
  %14 = trunc i64 %13 to i32, !dbg !22723
  store i32 %14, i32* %1, align 4, !dbg !22724
  %15 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 6, !dbg !22725
  store i8 0, i8* %15, align 1, !dbg !22726
  %16 = load i32, i32* %1, align 4, !dbg !22727
  %17 = icmp eq i32 %16, 5, !dbg !22729
  br i1 %17, label %18, label %73, !dbg !22730

18:                                               ; preds = %10
  %19 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 4, !dbg !22731
  %20 = load i8, i8* %19, align 1, !dbg !22731
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 5, !dbg !22733
  store i8 %20, i8* %21, align 1, !dbg !22734
  %22 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 3, !dbg !22735
  %23 = load i8, i8* %22, align 1, !dbg !22735
  %24 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 4, !dbg !22736
  store i8 %23, i8* %24, align 1, !dbg !22737
  %25 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 3, !dbg !22738
  store i8 58, i8* %25, align 1, !dbg !22739
  %26 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 0, !dbg !22740
  %27 = load i8, i8* %26, align 1, !dbg !22740
  %28 = sext i8 %27 to i32, !dbg !22740
  %29 = icmp eq i32 %28, 43, !dbg !22742
  br i1 %29, label %30, label %32, !dbg !22743

30:                                               ; preds = %18
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 0, !dbg !22744
  store i8 45, i8* %31, align 1, !dbg !22746
  br label %34, !dbg !22747

32:                                               ; preds = %18
  %33 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 0, !dbg !22748
  store i8 43, i8* %33, align 1, !dbg !22750
  br label %34

34:                                               ; preds = %32, %30
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i32 0, i32 0, !dbg !22751
  %36 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @vsf_sysutil_tzset.envtz, i32 0, i32 0), i64 13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73.1337, i32 0, i32 0), i8* %35) #8, !dbg !22752
  %37 = call i32 @putenv(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @vsf_sysutil_tzset.envtz, i32 0, i32 0)) #8, !dbg !22753
  %38 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 1, !dbg !22754
  %39 = load i8, i8* %38, align 1, !dbg !22754
  %40 = sext i8 %39 to i32, !dbg !22754
  %41 = sub nsw i32 %40, 48, !dbg !22755
  %42 = mul nsw i32 %41, 10, !dbg !22756
  %43 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 2, !dbg !22757
  %44 = load i8, i8* %43, align 1, !dbg !22757
  %45 = sext i8 %44 to i32, !dbg !22757
  %46 = sub nsw i32 %45, 48, !dbg !22758
  %47 = add nsw i32 %42, %46, !dbg !22759
  %48 = mul nsw i32 %47, 60, !dbg !22760
  %49 = mul nsw i32 %48, 60, !dbg !22761
  %50 = sext i32 %49 to i64, !dbg !22762
  store i64 %50, i64* @s_timezone, align 8, !dbg !22763
  %51 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 4, !dbg !22764
  %52 = load i8, i8* %51, align 1, !dbg !22764
  %53 = sext i8 %52 to i32, !dbg !22764
  %54 = sub nsw i32 %53, 48, !dbg !22765
  %55 = mul nsw i32 %54, 10, !dbg !22766
  %56 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 5, !dbg !22767
  %57 = load i8, i8* %56, align 1, !dbg !22767
  %58 = sext i8 %57 to i32, !dbg !22767
  %59 = sub nsw i32 %58, 48, !dbg !22768
  %60 = add nsw i32 %55, %59, !dbg !22769
  %61 = mul nsw i32 %60, 60, !dbg !22770
  %62 = sext i32 %61 to i64, !dbg !22771
  %63 = load i64, i64* @s_timezone, align 8, !dbg !22772
  %64 = add nsw i64 %63, %62, !dbg !22772
  store i64 %64, i64* @s_timezone, align 8, !dbg !22772
  %65 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 0, !dbg !22773
  %66 = load i8, i8* %65, align 1, !dbg !22773
  %67 = sext i8 %66 to i32, !dbg !22773
  %68 = icmp eq i32 %67, 45, !dbg !22775
  br i1 %68, label %69, label %72, !dbg !22776

69:                                               ; preds = %34
  %70 = load i64, i64* @s_timezone, align 8, !dbg !22777
  %71 = mul nsw i64 %70, -1, !dbg !22777
  store i64 %71, i64* @s_timezone, align 8, !dbg !22777
  br label %72, !dbg !22779

72:                                               ; preds = %69, %34
  br label %73, !dbg !22780

73:                                               ; preds = %72, %10
  %74 = call %struct.tm* @localtime(i64* %3) #8, !dbg !22781
  store %struct.tm* %74, %struct.tm** %4, align 8, !dbg !22782
  %75 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !22783
  %76 = icmp eq %struct.tm* %75, null, !dbg !22785
  br i1 %76, label %77, label %78, !dbg !22786

77:                                               ; preds = %73
  call void @die(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74.1338, i32 0, i32 0)), !dbg !22787
  br label %78, !dbg !22789

78:                                               ; preds = %77, %73
  %79 = call %struct.tm* @gmtime(i64* %3) #8, !dbg !22790
  store %struct.tm* %79, %struct.tm** %4, align 8, !dbg !22791
  %80 = load %struct.tm*, %struct.tm** %4, align 8, !dbg !22792
  %81 = icmp eq %struct.tm* %80, null, !dbg !22794
  br i1 %81, label %82, label %83, !dbg !22795

82:                                               ; preds = %78
  call void @die(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.75.1339, i32 0, i32 0)), !dbg !22796
  br label %83, !dbg !22798

83:                                               ; preds = %82, %78
  ret void, !dbg !22799
}

; Function Attrs: nounwind
declare i64 @time(i64*) #3

; Function Attrs: nounwind
declare void @tzset() #3

; Function Attrs: nounwind
declare i32 @putenv(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_get_current_date() #0 !dbg !1626 {
  %1 = alloca i64, align 8
  %2 = alloca %struct.tm*, align 8
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i64* %1, metadata !22800, metadata !DIExpression()), !dbg !22801
  call void @llvm.dbg.declare(metadata %struct.tm** %2, metadata !22802, metadata !DIExpression()), !dbg !22805
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22806, metadata !DIExpression()), !dbg !22807
  store i32 0, i32* %3, align 4, !dbg !22807
  %4 = call i64 @vsf_sysutil_get_time_sec(), !dbg !22808
  store i64 %4, i64* %1, align 8, !dbg !22809
  %5 = call %struct.tm* @localtime(i64* %1) #8, !dbg !22810
  store %struct.tm* %5, %struct.tm** %2, align 8, !dbg !22811
  %6 = load %struct.tm*, %struct.tm** %2, align 8, !dbg !22812
  %7 = call i64 @strftime(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i32 0, i32 0), i64 64, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.76.1344, i32 0, i32 0), %struct.tm* %6) #8, !dbg !22814
  %8 = icmp eq i64 %7, 0, !dbg !22815
  br i1 %8, label %9, label %10, !dbg !22816

9:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40.1160, i32 0, i32 0)), !dbg !22817
  br label %10, !dbg !22819

10:                                               ; preds = %9, %0
  store i8 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i64 0, i64 63), align 1, !dbg !22820
  br label %11, !dbg !22821

11:                                               ; preds = %27, %10
  %12 = load i32, i32* %3, align 4, !dbg !22822
  %13 = sext i32 %12 to i64, !dbg !22823
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i64 0, i64 %13, !dbg !22823
  %15 = load i8, i8* %14, align 1, !dbg !22823
  %16 = sext i8 %15 to i32, !dbg !22823
  %17 = icmp ne i32 %16, 33, !dbg !22824
  br i1 %17, label %18, label %25, !dbg !22825

18:                                               ; preds = %11
  %19 = load i32, i32* %3, align 4, !dbg !22826
  %20 = sext i32 %19 to i64, !dbg !22827
  %21 = getelementptr inbounds [64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i64 0, i64 %20, !dbg !22827
  %22 = load i8, i8* %21, align 1, !dbg !22827
  %23 = sext i8 %22 to i32, !dbg !22827
  %24 = icmp ne i32 %23, 0, !dbg !22828
  br label %25

25:                                               ; preds = %18, %11
  %26 = phi i1 [ false, %11 ], [ %24, %18 ]
  br i1 %26, label %27, label %30, !dbg !22821

27:                                               ; preds = %25
  %28 = load i32, i32* %3, align 4, !dbg !22829
  %29 = add nsw i32 %28, 1, !dbg !22829
  store i32 %29, i32* %3, align 4, !dbg !22829
  br label %11, !dbg !22821, !llvm.loop !22831

30:                                               ; preds = %25
  %31 = load i32, i32* %3, align 4, !dbg !22833
  %32 = sext i32 %31 to i64, !dbg !22835
  %33 = getelementptr inbounds [64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i64 0, i64 %32, !dbg !22835
  %34 = load i8, i8* %33, align 1, !dbg !22835
  %35 = sext i8 %34 to i32, !dbg !22835
  %36 = icmp eq i32 %35, 33, !dbg !22836
  br i1 %36, label %37, label %54, !dbg !22837

37:                                               ; preds = %30
  %38 = load i32, i32* %3, align 4, !dbg !22838
  %39 = sext i32 %38 to i64, !dbg !22840
  %40 = getelementptr inbounds [64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i64 0, i64 %39, !dbg !22840
  store i8 32, i8* %40, align 1, !dbg !22841
  %41 = load i32, i32* %3, align 4, !dbg !22842
  %42 = add nsw i32 %41, 1, !dbg !22844
  %43 = sext i32 %42 to i64, !dbg !22845
  %44 = getelementptr inbounds [64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i64 0, i64 %43, !dbg !22845
  %45 = load i8, i8* %44, align 1, !dbg !22845
  %46 = sext i8 %45 to i32, !dbg !22845
  %47 = icmp eq i32 %46, 48, !dbg !22846
  br i1 %47, label %48, label %53, !dbg !22847

48:                                               ; preds = %37
  %49 = load i32, i32* %3, align 4, !dbg !22848
  %50 = add nsw i32 %49, 1, !dbg !22850
  %51 = sext i32 %50 to i64, !dbg !22851
  %52 = getelementptr inbounds [64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i64 0, i64 %51, !dbg !22851
  store i8 32, i8* %52, align 1, !dbg !22852
  br label %53, !dbg !22853

53:                                               ; preds = %48, %37
  br label %54, !dbg !22854

54:                                               ; preds = %53, %30
  ret i8* getelementptr inbounds ([64 x i8], [64 x i8]* @vsf_sysutil_get_current_date.datebuf, i32 0, i32 0), !dbg !22855
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_get_time_sec() #0 !dbg !22856 {
  %1 = call i32 @gettimeofday(%struct.timespec* @s_current_time, %struct.vsf_client_launch* null) #8, !dbg !22859
  %2 = icmp ne i32 %1, 0, !dbg !22861
  br i1 %2, label %3, label %4, !dbg !22862

3:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58.1288, i32 0, i32 0)), !dbg !22863
  br label %4, !dbg !22865

4:                                                ; preds = %3, %0
  %5 = load i64, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @s_current_time, i32 0, i32 0), align 8, !dbg !22866
  ret i64 %5, !dbg !22867
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_get_time_usec() #0 !dbg !22868 {
  %1 = load i64, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @s_current_time, i32 0, i32 1), align 8, !dbg !22869
  ret i64 %1, !dbg !22870
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_qsort(i8*, i32, i32, i32 (i8*, i8*)*) #0 !dbg !22871 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32 (i8*, i8*)*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !22875, metadata !DIExpression()), !dbg !22876
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !22877, metadata !DIExpression()), !dbg !22878
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !22879, metadata !DIExpression()), !dbg !22880
  store i32 (i8*, i8*)* %3, i32 (i8*, i8*)** %8, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %8, metadata !22881, metadata !DIExpression()), !dbg !22882
  %9 = load i8*, i8** %5, align 8, !dbg !22883
  %10 = load i32, i32* %6, align 4, !dbg !22884
  %11 = zext i32 %10 to i64, !dbg !22884
  %12 = load i32, i32* %7, align 4, !dbg !22885
  %13 = zext i32 %12 to i64, !dbg !22885
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 8, !dbg !22886
  call void @qsort(i8* %9, i64 %11, i64 %13, i32 (i8*, i8*)* %14), !dbg !22887
  ret void, !dbg !22888
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_sleep(double) #0 !dbg !22889 {
  %2 = alloca double, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca double, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.timespec, align 8
  store double %0, double* %2, align 8
  call void @llvm.dbg.declare(metadata double* %2, metadata !22892, metadata !DIExpression()), !dbg !22893
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22894, metadata !DIExpression()), !dbg !22895
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22896, metadata !DIExpression()), !dbg !22897
  call void @llvm.dbg.declare(metadata double* %5, metadata !22898, metadata !DIExpression()), !dbg !22899
  call void @llvm.dbg.declare(metadata i64* %6, metadata !22900, metadata !DIExpression()), !dbg !22901
  call void @llvm.dbg.declare(metadata %struct.timespec* %7, metadata !22902, metadata !DIExpression()), !dbg !22903
  %8 = load double, double* %2, align 8, !dbg !22904
  %9 = fptosi double %8 to i64, !dbg !22905
  store i64 %9, i64* %6, align 8, !dbg !22906
  %10 = load double, double* %2, align 8, !dbg !22907
  %11 = load i64, i64* %6, align 8, !dbg !22908
  %12 = sitofp i64 %11 to double, !dbg !22909
  %13 = fsub double %10, %12, !dbg !22910
  store double %13, double* %5, align 8, !dbg !22911
  %14 = load i64, i64* %6, align 8, !dbg !22912
  %15 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 0, !dbg !22913
  store i64 %14, i64* %15, align 8, !dbg !22914
  %16 = load double, double* %5, align 8, !dbg !22915
  %17 = fmul double %16, 1.000000e+09, !dbg !22916
  %18 = fptosi double %17 to i64, !dbg !22917
  %19 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 1, !dbg !22918
  store i64 %18, i64* %19, align 8, !dbg !22919
  br label %20, !dbg !22920, !llvm.loop !22921

20:                                               ; preds = %30, %1
  %21 = call i32 @nanosleep(%struct.timespec* %7, %struct.timespec* %7), !dbg !22923
  store i32 %21, i32* %3, align 4, !dbg !22925
  %22 = call i32* @__errno_location() #9, !dbg !22926
  %23 = load i32, i32* %22, align 4, !dbg !22926
  store i32 %23, i32* %4, align 4, !dbg !22927
  call void @vsf_sysutil_check_pending_actions(i32 0, i32 0, i32 0), !dbg !22928
  br label %24, !dbg !22929

24:                                               ; preds = %20
  %25 = load i32, i32* %3, align 4, !dbg !22930
  %26 = icmp eq i32 %25, -1, !dbg !22931
  br i1 %26, label %27, label %30, !dbg !22932

27:                                               ; preds = %24
  %28 = load i32, i32* %4, align 4, !dbg !22933
  %29 = icmp eq i32 %28, 4, !dbg !22934
  br label %30

30:                                               ; preds = %27, %24
  %31 = phi i1 [ false, %24 ], [ %29, %27 ]
  br i1 %31, label %20, label %32, !dbg !22929, !llvm.loop !22921

32:                                               ; preds = %30
  ret void, !dbg !22935
}

declare i32 @nanosleep(%struct.timespec*, %struct.timespec*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_getenv(i8*) #0 !dbg !22936 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !22937, metadata !DIExpression()), !dbg !22938
  %3 = load i8*, i8** %2, align 8, !dbg !22939
  %4 = call i8* @getenv(i8* %3) #8, !dbg !22940
  ret i8* %4, !dbg !22941
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_openlog(i32) #0 !dbg !22942 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !22943, metadata !DIExpression()), !dbg !22944
  call void @llvm.dbg.declare(metadata i32* %3, metadata !22945, metadata !DIExpression()), !dbg !22946
  store i32 24, i32* %3, align 4, !dbg !22946
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22947, metadata !DIExpression()), !dbg !22948
  store i32 1, i32* %4, align 4, !dbg !22948
  %5 = load i32, i32* %2, align 4, !dbg !22949
  %6 = icmp ne i32 %5, 0, !dbg !22949
  br i1 %6, label %10, label %7, !dbg !22951

7:                                                ; preds = %1
  %8 = load i32, i32* %4, align 4, !dbg !22952
  %9 = or i32 %8, 8, !dbg !22952
  store i32 %9, i32* %4, align 4, !dbg !22952
  br label %10, !dbg !22954

10:                                               ; preds = %7, %1
  store i32 88, i32* %3, align 4, !dbg !22955
  %11 = load i32, i32* %4, align 4, !dbg !22956
  %12 = load i32, i32* %3, align 4, !dbg !22957
  call void @openlog(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77.1355, i32 0, i32 0), i32 %11, i32 %12), !dbg !22958
  ret void, !dbg !22959
}

declare void @openlog(i8*, i32, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_closelog() #0 !dbg !22960 {
  call void @closelog(), !dbg !22961
  ret void, !dbg !22962
}

declare void @closelog() #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_syslog(i8*, i32) #0 !dbg !22963 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !22964, metadata !DIExpression()), !dbg !22965
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22966, metadata !DIExpression()), !dbg !22967
  call void @llvm.dbg.declare(metadata i32* %5, metadata !22968, metadata !DIExpression()), !dbg !22969
  store i32 6, i32* %5, align 4, !dbg !22969
  %6 = load i32, i32* %4, align 4, !dbg !22970
  %7 = icmp ne i32 %6, 0, !dbg !22970
  br i1 %7, label %8, label %9, !dbg !22972

8:                                                ; preds = %2
  store i32 4, i32* %5, align 4, !dbg !22973
  br label %9, !dbg !22975

9:                                                ; preds = %8, %2
  %10 = load i32, i32* %5, align 4, !dbg !22976
  %11 = load i8*, i8** %3, align 8, !dbg !22977
  call void (i32, i8*, ...) @syslog(i32 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78.1358, i32 0, i32 0), i8* %11), !dbg !22978
  ret void, !dbg !22979
}

declare void @syslog(i32, i8*, ...) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @vsf_sysutil_parse_time(i8*) #0 !dbg !22980 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.tm, align 8
  %4 = alloca i32, align 4
  %5 = alloca [5 x i8], align 1
  %6 = alloca [3 x i8], align 1
  %7 = alloca [3 x i8], align 1
  %8 = alloca [3 x i8], align 1
  %9 = alloca [3 x i8], align 1
  %10 = alloca [3 x i8], align 1
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !22983, metadata !DIExpression()), !dbg !22984
  call void @llvm.dbg.declare(metadata %struct.tm* %3, metadata !22985, metadata !DIExpression()), !dbg !22986
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22987, metadata !DIExpression()), !dbg !22988
  %11 = load i8*, i8** %2, align 8, !dbg !22989
  %12 = call i32 @vsf_sysutil_strlen(i8* %11), !dbg !22990
  store i32 %12, i32* %4, align 4, !dbg !22988
  %13 = bitcast %struct.tm* %3 to i8*, !dbg !22991
  call void @vsf_sysutil_memclr(i8* %13, i32 56), !dbg !22992
  %14 = load i32, i32* %4, align 4, !dbg !22993
  %15 = icmp uge i32 %14, 8, !dbg !22995
  br i1 %15, label %16, label %36, !dbg !22996

16:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata [5 x i8]* %5, metadata !22997, metadata !DIExpression()), !dbg !23002
  call void @llvm.dbg.declare(metadata [3 x i8]* %6, metadata !23003, metadata !DIExpression()), !dbg !23005
  call void @llvm.dbg.declare(metadata [3 x i8]* %7, metadata !23006, metadata !DIExpression()), !dbg !23007
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i32 0, i32 0, !dbg !23008
  %18 = load i8*, i8** %2, align 8, !dbg !23009
  call void @vsf_sysutil_strcpy(i8* %17, i8* %18, i32 5), !dbg !23010
  %19 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i32 0, i32 0, !dbg !23011
  %20 = load i8*, i8** %2, align 8, !dbg !23012
  %21 = getelementptr inbounds i8, i8* %20, i64 4, !dbg !23013
  call void @vsf_sysutil_strcpy(i8* %19, i8* %21, i32 3), !dbg !23014
  %22 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i32 0, i32 0, !dbg !23015
  %23 = load i8*, i8** %2, align 8, !dbg !23016
  %24 = getelementptr inbounds i8, i8* %23, i64 6, !dbg !23017
  call void @vsf_sysutil_strcpy(i8* %22, i8* %24, i32 3), !dbg !23018
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i32 0, i32 0, !dbg !23019
  %26 = call i32 @vsf_sysutil_atoi(i8* %25), !dbg !23020
  %27 = sub nsw i32 %26, 1900, !dbg !23021
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 5, !dbg !23022
  store i32 %27, i32* %28, align 4, !dbg !23023
  %29 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i32 0, i32 0, !dbg !23024
  %30 = call i32 @vsf_sysutil_atoi(i8* %29), !dbg !23025
  %31 = sub nsw i32 %30, 1, !dbg !23026
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 4, !dbg !23027
  store i32 %31, i32* %32, align 8, !dbg !23028
  %33 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i32 0, i32 0, !dbg !23029
  %34 = call i32 @vsf_sysutil_atoi(i8* %33), !dbg !23030
  %35 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 3, !dbg !23031
  store i32 %34, i32* %35, align 4, !dbg !23032
  br label %36, !dbg !23033

36:                                               ; preds = %16, %1
  %37 = load i32, i32* %4, align 4, !dbg !23034
  %38 = icmp uge i32 %37, 14, !dbg !23036
  br i1 %38, label %39, label %58, !dbg !23037

39:                                               ; preds = %36
  call void @llvm.dbg.declare(metadata [3 x i8]* %8, metadata !23038, metadata !DIExpression()), !dbg !23040
  call void @llvm.dbg.declare(metadata [3 x i8]* %9, metadata !23041, metadata !DIExpression()), !dbg !23042
  call void @llvm.dbg.declare(metadata [3 x i8]* %10, metadata !23043, metadata !DIExpression()), !dbg !23044
  %40 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i32 0, i32 0, !dbg !23045
  %41 = load i8*, i8** %2, align 8, !dbg !23046
  %42 = getelementptr inbounds i8, i8* %41, i64 8, !dbg !23047
  call void @vsf_sysutil_strcpy(i8* %40, i8* %42, i32 3), !dbg !23048
  %43 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i32 0, i32 0, !dbg !23049
  %44 = load i8*, i8** %2, align 8, !dbg !23050
  %45 = getelementptr inbounds i8, i8* %44, i64 10, !dbg !23051
  call void @vsf_sysutil_strcpy(i8* %43, i8* %45, i32 3), !dbg !23052
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i32 0, i32 0, !dbg !23053
  %47 = load i8*, i8** %2, align 8, !dbg !23054
  %48 = getelementptr inbounds i8, i8* %47, i64 12, !dbg !23055
  call void @vsf_sysutil_strcpy(i8* %46, i8* %48, i32 3), !dbg !23056
  %49 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i32 0, i32 0, !dbg !23057
  %50 = call i32 @vsf_sysutil_atoi(i8* %49), !dbg !23058
  %51 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 2, !dbg !23059
  store i32 %50, i32* %51, align 8, !dbg !23060
  %52 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i32 0, i32 0, !dbg !23061
  %53 = call i32 @vsf_sysutil_atoi(i8* %52), !dbg !23062
  %54 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 1, !dbg !23063
  store i32 %53, i32* %54, align 4, !dbg !23064
  %55 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i32 0, i32 0, !dbg !23065
  %56 = call i32 @vsf_sysutil_atoi(i8* %55), !dbg !23066
  %57 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 0, !dbg !23067
  store i32 %56, i32* %57, align 8, !dbg !23068
  br label %58, !dbg !23069

58:                                               ; preds = %39, %36
  %59 = call i64 @mktime(%struct.tm* %3) #8, !dbg !23070
  ret i64 %59, !dbg !23071
}

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_setmodtime(i8*, i64, i32) #0 !dbg !23072 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.timespec, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !23075, metadata !DIExpression()), !dbg !23076
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !23077, metadata !DIExpression()), !dbg !23078
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !23079, metadata !DIExpression()), !dbg !23080
  call void @llvm.dbg.declare(metadata %struct.timespec* %7, metadata !23081, metadata !DIExpression()), !dbg !23087
  %8 = load i32, i32* %6, align 4, !dbg !23088
  %9 = icmp ne i32 %8, 0, !dbg !23088
  br i1 %9, label %14, label %10, !dbg !23090

10:                                               ; preds = %3
  %11 = load i64, i64* @s_timezone, align 8, !dbg !23091
  %12 = load i64, i64* %5, align 8, !dbg !23093
  %13 = sub nsw i64 %12, %11, !dbg !23093
  store i64 %13, i64* %5, align 8, !dbg !23093
  br label %14, !dbg !23094

14:                                               ; preds = %10, %3
  %15 = bitcast %struct.timespec* %7 to i8*, !dbg !23095
  call void @vsf_sysutil_memclr(i8* %15, i32 16), !dbg !23096
  %16 = load i64, i64* %5, align 8, !dbg !23097
  %17 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 0, !dbg !23098
  store i64 %16, i64* %17, align 8, !dbg !23099
  %18 = load i64, i64* %5, align 8, !dbg !23100
  %19 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 1, !dbg !23101
  store i64 %18, i64* %19, align 8, !dbg !23102
  %20 = load i8*, i8** %4, align 8, !dbg !23103
  %21 = call i32 @utime(i8* %20, %struct.timespec* %7) #8, !dbg !23104
  ret i32 %21, !dbg !23105
}

; Function Attrs: nounwind
declare i32 @utime(i8*, %struct.timespec*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_ftruncate(i32) #0 !dbg !23106 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !23107, metadata !DIExpression()), !dbg !23108
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23109, metadata !DIExpression()), !dbg !23110
  %4 = load i32, i32* %2, align 4, !dbg !23111
  %5 = call i32 @ftruncate64(i32 %4, i64 0) #8, !dbg !23112
  store i32 %5, i32* %3, align 4, !dbg !23110
  %6 = load i32, i32* %3, align 4, !dbg !23113
  %7 = icmp ne i32 %6, 0, !dbg !23115
  br i1 %7, label %8, label %9, !dbg !23116

8:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79.1365, i32 0, i32 0)), !dbg !23117
  br label %9, !dbg !23119

9:                                                ; preds = %8, %1
  ret void, !dbg !23120
}

; Function Attrs: nounwind
declare i32 @ftruncate64(i32, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_getuid() #0 !dbg !23121 {
  %1 = call i32 @getuid() #8, !dbg !23122
  ret i32 %1, !dbg !23123
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_address_space_limit(i64) #0 !dbg !23124 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.timespec, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !23127, metadata !DIExpression()), !dbg !23128
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23129, metadata !DIExpression()), !dbg !23130
  call void @llvm.dbg.declare(metadata %struct.timespec* %4, metadata !23131, metadata !DIExpression()), !dbg !23138
  %5 = load i64, i64* %2, align 8, !dbg !23139
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !23140
  store i64 %5, i64* %6, align 8, !dbg !23141
  %7 = load i64, i64* %2, align 8, !dbg !23142
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 1, !dbg !23143
  store i64 %7, i64* %8, align 8, !dbg !23144
  %9 = call i32 @setrlimit64(i32 9, %struct.timespec* %4) #8, !dbg !23145
  store i32 %9, i32* %3, align 4, !dbg !23146
  %10 = load i32, i32* %3, align 4, !dbg !23147
  %11 = icmp ne i32 %10, 0, !dbg !23149
  br i1 %11, label %12, label %17, !dbg !23150

12:                                               ; preds = %1
  %13 = call i32* @__errno_location() #9, !dbg !23151
  %14 = load i32, i32* %13, align 4, !dbg !23151
  %15 = icmp ne i32 %14, 1, !dbg !23152
  br i1 %15, label %16, label %17, !dbg !23153

16:                                               ; preds = %12
  call void @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80.1370, i32 0, i32 0)), !dbg !23154
  br label %17, !dbg !23156

17:                                               ; preds = %16, %12, %1
  %18 = load i64, i64* %2, align 8, !dbg !23157
  ret void, !dbg !23158
}

; Function Attrs: nounwind
declare i32 @setrlimit64(i32, %struct.timespec*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_no_fds() #0 !dbg !23159 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !23160, metadata !DIExpression()), !dbg !23161
  call void @llvm.dbg.declare(metadata %struct.timespec* %2, metadata !23162, metadata !DIExpression()), !dbg !23163
  %3 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !23164
  store i64 0, i64* %3, align 8, !dbg !23165
  %4 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1, !dbg !23166
  store i64 0, i64* %4, align 8, !dbg !23167
  %5 = call i32 @setrlimit64(i32 7, %struct.timespec* %2) #8, !dbg !23168
  store i32 %5, i32* %1, align 4, !dbg !23169
  %6 = load i32, i32* %1, align 4, !dbg !23170
  %7 = icmp ne i32 %6, 0, !dbg !23172
  br i1 %7, label %8, label %9, !dbg !23173

8:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.81.1373, i32 0, i32 0)), !dbg !23174
  br label %9, !dbg !23176

9:                                                ; preds = %8, %0
  ret void, !dbg !23177
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_no_procs() #0 !dbg !23178 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !23179, metadata !DIExpression()), !dbg !23180
  call void @llvm.dbg.declare(metadata %struct.timespec* %2, metadata !23181, metadata !DIExpression()), !dbg !23182
  %3 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !23183
  store i64 0, i64* %3, align 8, !dbg !23184
  %4 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1, !dbg !23185
  store i64 0, i64* %4, align 8, !dbg !23186
  %5 = call i32 @setrlimit64(i32 6, %struct.timespec* %2) #8, !dbg !23187
  store i32 %5, i32* %1, align 4, !dbg !23188
  %6 = load i32, i32* %1, align 4, !dbg !23189
  %7 = icmp ne i32 %6, 0, !dbg !23191
  br i1 %7, label %8, label %9, !dbg !23192

8:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82.1376, i32 0, i32 0)), !dbg !23193
  br label %9, !dbg !23195

9:                                                ; preds = %8, %0
  ret void, !dbg !23196
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysdep_check_auth(%struct.mystr*, %struct.mystr*, %struct.mystr*) #0 !dbg !23197 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mystr*, align 8
  %6 = alloca %struct.mystr*, align 8
  %7 = alloca %struct.mystr*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.pam_conv, align 8
  store %struct.mystr* %0, %struct.mystr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %5, metadata !23203, metadata !DIExpression()), !dbg !23204
  store %struct.mystr* %1, %struct.mystr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %6, metadata !23205, metadata !DIExpression()), !dbg !23206
  store %struct.mystr* %2, %struct.mystr** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %7, metadata !23207, metadata !DIExpression()), !dbg !23208
  call void @llvm.dbg.declare(metadata i32* %8, metadata !23209, metadata !DIExpression()), !dbg !23210
  store i32 -1, i32* %8, align 4, !dbg !23210
  call void @llvm.dbg.declare(metadata i8** %9, metadata !23211, metadata !DIExpression()), !dbg !23213
  call void @llvm.dbg.declare(metadata i8** %10, metadata !23214, metadata !DIExpression()), !dbg !23215
  store i8* null, i8** %10, align 8, !dbg !23215
  call void @llvm.dbg.declare(metadata %struct.pam_conv* %11, metadata !23216, metadata !DIExpression()), !dbg !23237
  %12 = bitcast %struct.pam_conv* %11 to i8*, !dbg !23237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 bitcast (%struct.pam_conv* @vsf_sysdep_check_auth.the_conv to i8*), i64 16, i1 false), !dbg !23237
  %13 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23238
  %14 = icmp ne %struct.pam_handle* %13, null, !dbg !23240
  br i1 %14, label %15, label %16, !dbg !23241

15:                                               ; preds = %3
  call void @bug(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1379, i32 0, i32 0)), !dbg !23242
  br label %16, !dbg !23244

16:                                               ; preds = %15, %3
  %17 = load %struct.mystr*, %struct.mystr** %6, align 8, !dbg !23245
  call void @str_copy(%struct.mystr* @s_pword_str, %struct.mystr* %17), !dbg !23246
  %18 = load i8*, i8** @tunable_pam_service_name, align 8, !dbg !23247
  %19 = icmp ne i8* %18, null, !dbg !23247
  br i1 %19, label %20, label %25, !dbg !23249

20:                                               ; preds = %16
  %21 = load i8*, i8** @tunable_pam_service_name, align 8, !dbg !23250
  %22 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !23252
  %23 = call i8* @str_getbuf(%struct.mystr* %22), !dbg !23253
  %24 = call i32 @pam_start(i8* %21, i8* %23, %struct.pam_conv* %11, %struct.pam_handle** @s_pamh), !dbg !23254
  store i32 %24, i32* %8, align 4, !dbg !23255
  br label %25, !dbg !23256

25:                                               ; preds = %20, %16
  %26 = load i32, i32* %8, align 4, !dbg !23257
  %27 = icmp ne i32 %26, 0, !dbg !23259
  br i1 %27, label %28, label %29, !dbg !23260

28:                                               ; preds = %25
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23261
  store i32 0, i32* %4, align 4, !dbg !23263
  br label %120, !dbg !23263

29:                                               ; preds = %25
  %30 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23264
  %31 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !23265
  %32 = call i8* @str_getbuf(%struct.mystr* %31), !dbg !23266
  %33 = call i32 @pam_set_item(%struct.pam_handle* %30, i32 4, i8* %32), !dbg !23267
  store i32 %33, i32* %8, align 4, !dbg !23268
  %34 = load i32, i32* %8, align 4, !dbg !23269
  %35 = icmp ne i32 %34, 0, !dbg !23271
  br i1 %35, label %36, label %40, !dbg !23272

36:                                               ; preds = %29
  %37 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23273
  %38 = load i32, i32* %8, align 4, !dbg !23275
  %39 = call i32 @pam_end(%struct.pam_handle* %37, i32 %38), !dbg !23276
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23277
  store i32 0, i32* %4, align 4, !dbg !23278
  br label %120, !dbg !23278

40:                                               ; preds = %29
  %41 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23279
  %42 = call i32 @pam_set_item(%struct.pam_handle* %41, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.1380, i32 0, i32 0)), !dbg !23280
  store i32 %42, i32* %8, align 4, !dbg !23281
  %43 = load i32, i32* %8, align 4, !dbg !23282
  %44 = icmp ne i32 %43, 0, !dbg !23284
  br i1 %44, label %45, label %49, !dbg !23285

45:                                               ; preds = %40
  %46 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23286
  %47 = load i32, i32* %8, align 4, !dbg !23288
  %48 = call i32 @pam_end(%struct.pam_handle* %46, i32 %47), !dbg !23289
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23290
  store i32 0, i32* %4, align 4, !dbg !23291
  br label %120, !dbg !23291

49:                                               ; preds = %40
  %50 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23292
  %51 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !23293
  %52 = call i8* @str_getbuf(%struct.mystr* %51), !dbg !23294
  %53 = call i32 @pam_set_item(%struct.pam_handle* %50, i32 8, i8* %52), !dbg !23295
  store i32 %53, i32* %8, align 4, !dbg !23296
  %54 = load i32, i32* %8, align 4, !dbg !23297
  %55 = icmp ne i32 %54, 0, !dbg !23299
  br i1 %55, label %56, label %60, !dbg !23300

56:                                               ; preds = %49
  %57 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23301
  %58 = load i32, i32* %8, align 4, !dbg !23303
  %59 = call i32 @pam_end(%struct.pam_handle* %57, i32 %58), !dbg !23304
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23305
  store i32 0, i32* %4, align 4, !dbg !23306
  br label %120, !dbg !23306

60:                                               ; preds = %49
  %61 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23307
  %62 = call i32 @pam_authenticate(%struct.pam_handle* %61, i32 0), !dbg !23308
  store i32 %62, i32* %8, align 4, !dbg !23309
  %63 = load i32, i32* %8, align 4, !dbg !23310
  %64 = icmp ne i32 %63, 0, !dbg !23312
  br i1 %64, label %65, label %69, !dbg !23313

65:                                               ; preds = %60
  %66 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23314
  %67 = load i32, i32* %8, align 4, !dbg !23316
  %68 = call i32 @pam_end(%struct.pam_handle* %66, i32 %67), !dbg !23317
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23318
  store i32 0, i32* %4, align 4, !dbg !23319
  br label %120, !dbg !23319

69:                                               ; preds = %60
  %70 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23320
  %71 = call i32 @pam_get_item(%struct.pam_handle* %70, i32 2, i8** %9), !dbg !23321
  store i32 %71, i32* %8, align 4, !dbg !23322
  %72 = load i32, i32* %8, align 4, !dbg !23323
  %73 = icmp ne i32 %72, 0, !dbg !23325
  br i1 %73, label %74, label %78, !dbg !23326

74:                                               ; preds = %69
  %75 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23327
  %76 = load i32, i32* %8, align 4, !dbg !23329
  %77 = call i32 @pam_end(%struct.pam_handle* %75, i32 %76), !dbg !23330
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23331
  store i32 0, i32* %4, align 4, !dbg !23332
  br label %120, !dbg !23332

78:                                               ; preds = %69
  %79 = load i8*, i8** %9, align 8, !dbg !23333
  store i8* %79, i8** %10, align 8, !dbg !23334
  %80 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !23335
  %81 = load i8*, i8** %10, align 8, !dbg !23336
  call void @str_alloc_text(%struct.mystr* %80, i8* %81), !dbg !23337
  %82 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23338
  %83 = call i32 @pam_acct_mgmt(%struct.pam_handle* %82, i32 0), !dbg !23339
  store i32 %83, i32* %8, align 4, !dbg !23340
  %84 = load i32, i32* %8, align 4, !dbg !23341
  %85 = icmp ne i32 %84, 0, !dbg !23343
  br i1 %85, label %86, label %90, !dbg !23344

86:                                               ; preds = %78
  %87 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23345
  %88 = load i32, i32* %8, align 4, !dbg !23347
  %89 = call i32 @pam_end(%struct.pam_handle* %87, i32 %88), !dbg !23348
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23349
  store i32 0, i32* %4, align 4, !dbg !23350
  br label %120, !dbg !23350

90:                                               ; preds = %78
  %91 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23351
  %92 = call i32 @pam_setcred(%struct.pam_handle* %91, i32 2), !dbg !23352
  store i32 %92, i32* %8, align 4, !dbg !23353
  %93 = load i32, i32* %8, align 4, !dbg !23354
  %94 = icmp ne i32 %93, 0, !dbg !23356
  br i1 %94, label %95, label %99, !dbg !23357

95:                                               ; preds = %90
  %96 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23358
  %97 = load i32, i32* %8, align 4, !dbg !23360
  %98 = call i32 @pam_end(%struct.pam_handle* %96, i32 %97), !dbg !23361
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23362
  store i32 0, i32* %4, align 4, !dbg !23363
  br label %120, !dbg !23363

99:                                               ; preds = %90
  %100 = load i32, i32* @tunable_session_support, align 4, !dbg !23364
  %101 = icmp ne i32 %100, 0, !dbg !23364
  br i1 %101, label %106, label %102, !dbg !23366

102:                                              ; preds = %99
  %103 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23367
  %104 = load i32, i32* %8, align 4, !dbg !23369
  %105 = call i32 @pam_end(%struct.pam_handle* %103, i32 %104), !dbg !23370
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23371
  store i32 1, i32* %4, align 4, !dbg !23372
  br label %120, !dbg !23372

106:                                              ; preds = %99
  %107 = load %struct.mystr*, %struct.mystr** %5, align 8, !dbg !23373
  %108 = load %struct.mystr*, %struct.mystr** %7, align 8, !dbg !23374
  call void @vsf_insert_uwtmp(%struct.mystr* %107, %struct.mystr* %108), !dbg !23375
  %109 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23376
  %110 = call i32 @pam_open_session(%struct.pam_handle* %109, i32 0), !dbg !23377
  store i32 %110, i32* %8, align 4, !dbg !23378
  %111 = load i32, i32* %8, align 4, !dbg !23379
  %112 = icmp ne i32 %111, 0, !dbg !23381
  br i1 %112, label %113, label %119, !dbg !23382

113:                                              ; preds = %106
  call void @vsf_remove_uwtmp(), !dbg !23383
  %114 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23385
  %115 = call i32 @pam_setcred(%struct.pam_handle* %114, i32 4), !dbg !23386
  %116 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23387
  %117 = load i32, i32* %8, align 4, !dbg !23388
  %118 = call i32 @pam_end(%struct.pam_handle* %116, i32 %117), !dbg !23389
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23390
  store i32 0, i32* %4, align 4, !dbg !23391
  br label %120, !dbg !23391

119:                                              ; preds = %106
  call void @vsf_sysutil_set_exit_func(void ()* @vsf_auth_shutdown), !dbg !23392
  store i32 1, i32* %4, align 4, !dbg !23393
  br label %120, !dbg !23393

120:                                              ; preds = %119, %113, %102, %95, %86, %74, %65, %56, %45, %36, %28
  %121 = load i32, i32* %4, align 4, !dbg !23394
  ret i32 %121, !dbg !23394
}

declare i32 @pam_start(i8*, i8*, %struct.pam_conv*, %struct.pam_handle**) #4

declare i32 @pam_set_item(%struct.pam_handle*, i32, i8*) #4

declare i32 @pam_end(%struct.pam_handle*, i32) #4

declare i32 @pam_authenticate(%struct.pam_handle*, i32) #4

declare i32 @pam_get_item(%struct.pam_handle*, i32, i8**) #4

declare i32 @pam_acct_mgmt(%struct.pam_handle*, i32) #4

declare i32 @pam_setcred(%struct.pam_handle*, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_insert_uwtmp(%struct.mystr*, %struct.mystr*) #0 !dbg !23395 {
  %3 = alloca %struct.mystr*, align 8
  %4 = alloca %struct.mystr*, align 8
  %5 = alloca %struct.mystr, align 8
  store %struct.mystr* %0, %struct.mystr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %3, metadata !23398, metadata !DIExpression()), !dbg !23399
  store %struct.mystr* %1, %struct.mystr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %4, metadata !23400, metadata !DIExpression()), !dbg !23401
  %6 = load i32, i32* @s_uwtmp_inserted, align 4, !dbg !23402
  %7 = icmp ne i32 %6, 0, !dbg !23402
  br i1 %7, label %8, label %9, !dbg !23404

8:                                                ; preds = %2
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13.1383, i32 0, i32 0)), !dbg !23405
  br label %9, !dbg !23407

9:                                                ; preds = %8, %2
  call void @llvm.dbg.declare(metadata %struct.mystr* %5, metadata !23408, metadata !DIExpression()), !dbg !23410
  %10 = bitcast %struct.mystr* %5 to i8*, !dbg !23410
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false), !dbg !23410
  call void @str_alloc_text(%struct.mystr* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.1384, i32 0, i32 0)), !dbg !23411
  %11 = call i32 @vsf_sysutil_getpid(), !dbg !23412
  %12 = zext i32 %11 to i64, !dbg !23412
  call void @str_append_ulong(%struct.mystr* %5, i64 %12), !dbg !23413
  %13 = call i32 @str_getlen(%struct.mystr* %5), !dbg !23414
  %14 = zext i32 %13 to i64, !dbg !23414
  %15 = icmp uge i64 %14, 32, !dbg !23416
  br i1 %15, label %16, label %17, !dbg !23417

16:                                               ; preds = %9
  call void @str_free(%struct.mystr* %5), !dbg !23418
  br label %27, !dbg !23420

17:                                               ; preds = %9
  %18 = call i8* @str_getbuf(%struct.mystr* %5), !dbg !23421
  call void @vsf_sysutil_strcpy(i8* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 2, i32 0), i8* %18, i32 32), !dbg !23422
  call void @str_free(%struct.mystr* %5), !dbg !23423
  store i32 1, i32* @s_uwtmp_inserted, align 4, !dbg !23424
  store i16 7, i16* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 0), align 4, !dbg !23425
  %19 = call i32 @vsf_sysutil_getpid(), !dbg !23426
  store i32 %19, i32* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 1), align 4, !dbg !23427
  %20 = load %struct.mystr*, %struct.mystr** %3, align 8, !dbg !23428
  %21 = call i8* @str_getbuf(%struct.mystr* %20), !dbg !23429
  call void @vsf_sysutil_strcpy(i8* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 4, i32 0), i8* %21, i32 32), !dbg !23430
  %22 = load %struct.mystr*, %struct.mystr** %4, align 8, !dbg !23431
  %23 = call i8* @str_getbuf(%struct.mystr* %22), !dbg !23432
  call void @vsf_sysutil_strcpy(i8* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 5, i32 0), i8* %23, i32 256), !dbg !23433
  %24 = call i64 @vsf_sysutil_get_time_sec(), !dbg !23434
  %25 = trunc i64 %24 to i32, !dbg !23434
  store i32 %25, i32* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 8, i32 0), align 4, !dbg !23435
  call void @setutxent(), !dbg !23436
  %26 = call %struct.utmpx* @pututxline(%struct.utmpx* @s_utent), !dbg !23437
  call void @endutxent(), !dbg !23438
  call void @updwtmpx(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15.1382, i32 0, i32 0), %struct.utmpx* @s_utent), !dbg !23439
  br label %27, !dbg !23440

27:                                               ; preds = %17, %16
  ret void, !dbg !23440
}

declare i32 @pam_open_session(%struct.pam_handle*, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_remove_uwtmp() #0 !dbg !23441 {
  %1 = load i32, i32* @s_uwtmp_inserted, align 4, !dbg !23442
  %2 = icmp ne i32 %1, 0, !dbg !23442
  br i1 %2, label %4, label %3, !dbg !23444

3:                                                ; preds = %0
  br label %8, !dbg !23445

4:                                                ; preds = %0
  store i32 0, i32* @s_uwtmp_inserted, align 4, !dbg !23447
  store i16 8, i16* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 0), align 4, !dbg !23448
  call void @vsf_sysutil_memclr(i8* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 4, i32 0), i32 32), !dbg !23449
  call void @vsf_sysutil_memclr(i8* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 5, i32 0), i32 256), !dbg !23450
  store i32 0, i32* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 8, i32 0), align 4, !dbg !23451
  call void @setutxent(), !dbg !23452
  %5 = call %struct.utmpx* @pututxline(%struct.utmpx* @s_utent), !dbg !23453
  call void @endutxent(), !dbg !23454
  %6 = call i64 @vsf_sysutil_get_time_sec(), !dbg !23455
  %7 = trunc i64 %6 to i32, !dbg !23455
  store i32 %7, i32* getelementptr inbounds (%struct.utmpx, %struct.utmpx* @s_utent, i32 0, i32 8, i32 0), align 4, !dbg !23456
  call void @updwtmpx(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15.1382, i32 0, i32 0), %struct.utmpx* @s_utent), !dbg !23457
  br label %8, !dbg !23458

8:                                                ; preds = %4, %3
  ret void, !dbg !23458
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_auth_shutdown() #0 !dbg !23459 {
  %1 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23460
  %2 = icmp eq %struct.pam_handle* %1, null, !dbg !23462
  br i1 %2, label %3, label %4, !dbg !23463

3:                                                ; preds = %0
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16.1381, i32 0, i32 0)), !dbg !23464
  br label %4, !dbg !23466

4:                                                ; preds = %3, %0
  %5 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23467
  %6 = call i32 @pam_close_session(%struct.pam_handle* %5, i32 0), !dbg !23468
  %7 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23469
  %8 = call i32 @pam_setcred(%struct.pam_handle* %7, i32 4), !dbg !23470
  %9 = load %struct.pam_handle*, %struct.pam_handle** @s_pamh, align 8, !dbg !23471
  %10 = call i32 @pam_end(%struct.pam_handle* %9, i32 0), !dbg !23472
  store %struct.pam_handle* null, %struct.pam_handle** @s_pamh, align 8, !dbg !23473
  call void @vsf_remove_uwtmp(), !dbg !23474
  ret void, !dbg !23475
}

declare i32 @pam_close_session(%struct.pam_handle*, i32) #4

declare void @setutxent() #4

declare %struct.utmpx* @pututxline(%struct.utmpx*) #4

declare void @endutxent() #4

declare void @updwtmpx(i8*, %struct.utmpx*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pam_conv_func(i32, %struct.pam_message**, %struct.pam_response**, i8*) #0 !dbg !23476 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.pam_message**, align 8
  %8 = alloca %struct.pam_response**, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.pam_response*, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !23477, metadata !DIExpression()), !dbg !23478
  store %struct.pam_message** %1, %struct.pam_message*** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.pam_message*** %7, metadata !23479, metadata !DIExpression()), !dbg !23480
  store %struct.pam_response** %2, %struct.pam_response*** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.pam_response*** %8, metadata !23481, metadata !DIExpression()), !dbg !23482
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !23483, metadata !DIExpression()), !dbg !23484
  call void @llvm.dbg.declare(metadata i32* %10, metadata !23485, metadata !DIExpression()), !dbg !23486
  call void @llvm.dbg.declare(metadata %struct.pam_response** %11, metadata !23487, metadata !DIExpression()), !dbg !23488
  store %struct.pam_response* null, %struct.pam_response** %11, align 8, !dbg !23488
  %12 = load i8*, i8** %9, align 8, !dbg !23489
  %13 = load i32, i32* %6, align 4, !dbg !23490
  %14 = icmp slt i32 %13, 0, !dbg !23492
  br i1 %14, label %15, label %16, !dbg !23493

15:                                               ; preds = %4
  call void @bug(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.1385, i32 0, i32 0)), !dbg !23494
  br label %16, !dbg !23496

16:                                               ; preds = %15, %4
  %17 = load i32, i32* %6, align 4, !dbg !23497
  %18 = sext i32 %17 to i64, !dbg !23497
  %19 = mul i64 16, %18, !dbg !23498
  %20 = trunc i64 %19 to i32, !dbg !23499
  %21 = call i8* @vsf_sysutil_malloc(i32 %20), !dbg !23500
  %22 = bitcast i8* %21 to %struct.pam_response*, !dbg !23500
  store %struct.pam_response* %22, %struct.pam_response** %11, align 8, !dbg !23501
  store i32 0, i32* %10, align 4, !dbg !23502
  br label %23, !dbg !23504

23:                                               ; preds = %63, %16
  %24 = load i32, i32* %10, align 4, !dbg !23505
  %25 = load i32, i32* %6, align 4, !dbg !23507
  %26 = icmp slt i32 %24, %25, !dbg !23508
  br i1 %26, label %27, label %66, !dbg !23509

27:                                               ; preds = %23
  %28 = load %struct.pam_message**, %struct.pam_message*** %7, align 8, !dbg !23510
  %29 = load i32, i32* %10, align 4, !dbg !23512
  %30 = sext i32 %29 to i64, !dbg !23510
  %31 = getelementptr inbounds %struct.pam_message*, %struct.pam_message** %28, i64 %30, !dbg !23510
  %32 = load %struct.pam_message*, %struct.pam_message** %31, align 8, !dbg !23510
  %33 = getelementptr inbounds %struct.pam_message, %struct.pam_message* %32, i32 0, i32 0, !dbg !23513
  %34 = load i32, i32* %33, align 8, !dbg !23513
  switch i32 %34, label %59 [
    i32 1, label %35
    i32 4, label %47
    i32 3, label %47
    i32 2, label %58
  ], !dbg !23514

35:                                               ; preds = %27
  %36 = load %struct.pam_response*, %struct.pam_response** %11, align 8, !dbg !23515
  %37 = load i32, i32* %10, align 4, !dbg !23517
  %38 = sext i32 %37 to i64, !dbg !23515
  %39 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %36, i64 %38, !dbg !23515
  %40 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %39, i32 0, i32 1, !dbg !23518
  store i32 0, i32* %40, align 8, !dbg !23519
  %41 = call i8* @str_strdup(%struct.mystr* @s_pword_str), !dbg !23520
  %42 = load %struct.pam_response*, %struct.pam_response** %11, align 8, !dbg !23521
  %43 = load i32, i32* %10, align 4, !dbg !23522
  %44 = sext i32 %43 to i64, !dbg !23521
  %45 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %42, i64 %44, !dbg !23521
  %46 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %45, i32 0, i32 0, !dbg !23523
  store i8* %41, i8** %46, align 8, !dbg !23524
  br label %62, !dbg !23525

47:                                               ; preds = %27, %27
  %48 = load %struct.pam_response*, %struct.pam_response** %11, align 8, !dbg !23526
  %49 = load i32, i32* %10, align 4, !dbg !23527
  %50 = sext i32 %49 to i64, !dbg !23526
  %51 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %48, i64 %50, !dbg !23526
  %52 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %51, i32 0, i32 1, !dbg !23528
  store i32 0, i32* %52, align 8, !dbg !23529
  %53 = load %struct.pam_response*, %struct.pam_response** %11, align 8, !dbg !23530
  %54 = load i32, i32* %10, align 4, !dbg !23531
  %55 = sext i32 %54 to i64, !dbg !23530
  %56 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %53, i64 %55, !dbg !23530
  %57 = getelementptr inbounds %struct.pam_response, %struct.pam_response* %56, i32 0, i32 0, !dbg !23532
  store i8* null, i8** %57, align 8, !dbg !23533
  br label %62, !dbg !23534

58:                                               ; preds = %27
  br label %59, !dbg !23534

59:                                               ; preds = %27, %58
  %60 = load %struct.pam_response*, %struct.pam_response** %11, align 8, !dbg !23535
  %61 = bitcast %struct.pam_response* %60 to i8*, !dbg !23535
  call void @vsf_sysutil_free(i8* %61), !dbg !23536
  store i32 19, i32* %5, align 4, !dbg !23537
  br label %69, !dbg !23537

62:                                               ; preds = %47, %35
  br label %63, !dbg !23538

63:                                               ; preds = %62
  %64 = load i32, i32* %10, align 4, !dbg !23539
  %65 = add nsw i32 %64, 1, !dbg !23539
  store i32 %65, i32* %10, align 4, !dbg !23539
  br label %23, !dbg !23540, !llvm.loop !23541

66:                                               ; preds = %23
  %67 = load %struct.pam_response*, %struct.pam_response** %11, align 8, !dbg !23543
  %68 = load %struct.pam_response**, %struct.pam_response*** %8, align 8, !dbg !23544
  store %struct.pam_response* %67, %struct.pam_response** %68, align 8, !dbg !23545
  store i32 0, i32* %5, align 4, !dbg !23546
  br label %69, !dbg !23546

69:                                               ; preds = %66, %59
  %70 = load i32, i32* %5, align 4, !dbg !23547
  ret i32 %70, !dbg !23547
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysdep_keep_capabilities() #0 !dbg !23548 {
  %1 = alloca i32, align 4
  %2 = call i32 @vsf_sysdep_has_capabilities_as_non_root(), !dbg !23549
  %3 = icmp ne i32 %2, 0, !dbg !23549
  br i1 %3, label %5, label %4, !dbg !23551

4:                                                ; preds = %0
  call void @bug(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2.1390, i32 0, i32 0)), !dbg !23552
  br label %5, !dbg !23554

5:                                                ; preds = %4, %0
  call void @llvm.dbg.declare(metadata i32* %1, metadata !23555, metadata !DIExpression()), !dbg !23557
  %6 = call i32 (i32, ...) @prctl(i32 8, i32 1) #8, !dbg !23558
  store i32 %6, i32* %1, align 4, !dbg !23557
  %7 = load i32, i32* %1, align 4, !dbg !23559
  %8 = call i32 @vsf_sysutil_retval_is_error(i32 %7), !dbg !23561
  %9 = icmp ne i32 %8, 0, !dbg !23561
  br i1 %9, label %10, label %11, !dbg !23562

10:                                               ; preds = %5
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.1391, i32 0, i32 0)), !dbg !23563
  br label %11, !dbg !23565

11:                                               ; preds = %10, %5
  ret void, !dbg !23566
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysdep_has_capabilities_as_non_root() #0 !dbg !1712 {
  %1 = load i32, i32* @vsf_sysdep_has_capabilities_as_non_root.s_prctl_checked, align 4, !dbg !23567
  %2 = icmp ne i32 %1, 0, !dbg !23567
  br i1 %2, label %9, label %3, !dbg !23569

3:                                                ; preds = %0
  %4 = call i32 (i32, ...) @prctl(i32 8, i32 0) #8, !dbg !23570
  %5 = call i32 @vsf_sysutil_retval_is_error(i32 %4), !dbg !23573
  %6 = icmp ne i32 %5, 0, !dbg !23573
  br i1 %6, label %8, label %7, !dbg !23574

7:                                                ; preds = %3
  store i32 1, i32* @vsf_sysdep_has_capabilities_as_non_root.s_runtime_prctl_works, align 4, !dbg !23575
  br label %8, !dbg !23577

8:                                                ; preds = %7, %3
  store i32 1, i32* @vsf_sysdep_has_capabilities_as_non_root.s_prctl_checked, align 4, !dbg !23578
  br label %9, !dbg !23579

9:                                                ; preds = %8, %0
  %10 = load i32, i32* @vsf_sysdep_has_capabilities_as_non_root.s_runtime_prctl_works, align 4, !dbg !23580
  ret i32 %10, !dbg !23581
}

; Function Attrs: nounwind
declare i32 @prctl(i32, ...) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysdep_has_capabilities() #0 !dbg !1719 {
  %1 = load i32, i32* @vsf_sysdep_has_capabilities.s_caps_checked, align 4, !dbg !23582
  %2 = icmp ne i32 %1, 0, !dbg !23582
  br i1 %2, label %5, label %3, !dbg !23584

3:                                                ; preds = %0
  %4 = call i32 @do_checkcap(), !dbg !23585
  store i32 %4, i32* @vsf_sysdep_has_capabilities.s_runtime_has_caps, align 4, !dbg !23587
  store i32 1, i32* @vsf_sysdep_has_capabilities.s_caps_checked, align 4, !dbg !23588
  br label %5, !dbg !23589

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @vsf_sysdep_has_capabilities.s_runtime_has_caps, align 4, !dbg !23590
  ret i32 %6, !dbg !23591
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @do_checkcap() #0 !dbg !23592 {
  %1 = alloca i32, align 4
  %2 = alloca %struct._cap_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct._cap_struct** %2, metadata !23593, metadata !DIExpression()), !dbg !23597
  %3 = call %struct._cap_struct* @cap_get_proc(), !dbg !23598
  store %struct._cap_struct* %3, %struct._cap_struct** %2, align 8, !dbg !23597
  %4 = load %struct._cap_struct*, %struct._cap_struct** %2, align 8, !dbg !23599
  %5 = bitcast %struct._cap_struct* %4 to i8*, !dbg !23599
  %6 = call i32 @cap_free(i8* %5), !dbg !23600
  %7 = load %struct._cap_struct*, %struct._cap_struct** %2, align 8, !dbg !23601
  %8 = icmp ne %struct._cap_struct* %7, null, !dbg !23603
  br i1 %8, label %9, label %10, !dbg !23604

9:                                                ; preds = %0
  store i32 1, i32* %1, align 4, !dbg !23605
  br label %11, !dbg !23605

10:                                               ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !23607
  br label %11, !dbg !23607

11:                                               ; preds = %10, %9
  %12 = load i32, i32* %1, align 4, !dbg !23608
  ret i32 %12, !dbg !23608
}

declare %struct._cap_struct* @cap_get_proc() #4

declare i32 @cap_free(i8*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysdep_adopt_capabilities(i32) #0 !dbg !23609 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct._cap_struct*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !23610, metadata !DIExpression()), !dbg !23611
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23612, metadata !DIExpression()), !dbg !23613
  call void @llvm.dbg.declare(metadata i32* %4, metadata !23614, metadata !DIExpression()), !dbg !23616
  call void @llvm.dbg.declare(metadata %struct._cap_struct** %5, metadata !23617, metadata !DIExpression()), !dbg !23618
  %6 = call %struct._cap_struct* @cap_init(), !dbg !23619
  store %struct._cap_struct* %6, %struct._cap_struct** %5, align 8, !dbg !23618
  %7 = load i32, i32* %2, align 4, !dbg !23620
  %8 = and i32 %7, 1, !dbg !23622
  %9 = icmp ne i32 %8, 0, !dbg !23622
  br i1 %9, label %10, label %15, !dbg !23623

10:                                               ; preds = %1
  store i32 0, i32* %4, align 4, !dbg !23624
  %11 = load %struct._cap_struct*, %struct._cap_struct** %5, align 8, !dbg !23626
  %12 = call i32 @cap_set_flag(%struct._cap_struct* %11, i32 0, i32 1, i32* %4, i32 1), !dbg !23627
  %13 = load %struct._cap_struct*, %struct._cap_struct** %5, align 8, !dbg !23628
  %14 = call i32 @cap_set_flag(%struct._cap_struct* %13, i32 1, i32 1, i32* %4, i32 1), !dbg !23629
  br label %15, !dbg !23630

15:                                               ; preds = %10, %1
  %16 = load i32, i32* %2, align 4, !dbg !23631
  %17 = and i32 %16, 2, !dbg !23633
  %18 = icmp ne i32 %17, 0, !dbg !23633
  br i1 %18, label %19, label %24, !dbg !23634

19:                                               ; preds = %15
  store i32 10, i32* %4, align 4, !dbg !23635
  %20 = load %struct._cap_struct*, %struct._cap_struct** %5, align 8, !dbg !23637
  %21 = call i32 @cap_set_flag(%struct._cap_struct* %20, i32 0, i32 1, i32* %4, i32 1), !dbg !23638
  %22 = load %struct._cap_struct*, %struct._cap_struct** %5, align 8, !dbg !23639
  %23 = call i32 @cap_set_flag(%struct._cap_struct* %22, i32 1, i32 1, i32* %4, i32 1), !dbg !23640
  br label %24, !dbg !23641

24:                                               ; preds = %19, %15
  %25 = load %struct._cap_struct*, %struct._cap_struct** %5, align 8, !dbg !23642
  %26 = call i32 @cap_set_proc(%struct._cap_struct* %25), !dbg !23643
  store i32 %26, i32* %3, align 4, !dbg !23644
  %27 = load i32, i32* %3, align 4, !dbg !23645
  %28 = icmp ne i32 %27, 0, !dbg !23647
  br i1 %28, label %29, label %30, !dbg !23648

29:                                               ; preds = %24
  call void @die(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.1396, i32 0, i32 0)), !dbg !23649
  br label %30, !dbg !23651

30:                                               ; preds = %29, %24
  %31 = load %struct._cap_struct*, %struct._cap_struct** %5, align 8, !dbg !23652
  %32 = bitcast %struct._cap_struct* %31 to i8*, !dbg !23652
  %33 = call i32 @cap_free(i8* %32), !dbg !23653
  ret void, !dbg !23654
}

declare %struct._cap_struct* @cap_init() #4

declare i32 @cap_set_flag(%struct._cap_struct*, i32, i32, i32*, i32) #4

declare i32 @cap_set_proc(%struct._cap_struct*) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_sendfile(i32, i32, i64*, i64, i32) #0 !dbg !23655 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !23659, metadata !DIExpression()), !dbg !23660
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !23661, metadata !DIExpression()), !dbg !23662
  store i64* %2, i64** %9, align 8
  call void @llvm.dbg.declare(metadata i64** %9, metadata !23663, metadata !DIExpression()), !dbg !23664
  store i64 %3, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !23665, metadata !DIExpression()), !dbg !23666
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !23667, metadata !DIExpression()), !dbg !23668
  %14 = load i64*, i64** %9, align 8, !dbg !23669
  %15 = load i64, i64* %14, align 8, !dbg !23671
  %16 = icmp slt i64 %15, 0, !dbg !23672
  br i1 %16, label %20, label %17, !dbg !23673

17:                                               ; preds = %5
  %18 = load i64, i64* %10, align 8, !dbg !23674
  %19 = icmp slt i64 %18, 0, !dbg !23675
  br i1 %19, label %20, label %21, !dbg !23676

20:                                               ; preds = %17, %5
  call void @die(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5.1399, i32 0, i32 0)), !dbg !23677
  br label %21, !dbg !23679

21:                                               ; preds = %20, %17
  %22 = load i32, i32* %11, align 4, !dbg !23680
  %23 = icmp eq i32 %22, 0, !dbg !23682
  br i1 %23, label %24, label %25, !dbg !23683

24:                                               ; preds = %21
  store i32 2147483647, i32* %11, align 4, !dbg !23684
  br label %25, !dbg !23686

25:                                               ; preds = %24, %21
  br label %26, !dbg !23687

26:                                               ; preds = %57, %25
  %27 = load i64, i64* %10, align 8, !dbg !23688
  %28 = icmp sgt i64 %27, 0, !dbg !23689
  br i1 %28, label %29, label %67, !dbg !23687

29:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %12, metadata !23690, metadata !DIExpression()), !dbg !23692
  call void @llvm.dbg.declare(metadata i32* %13, metadata !23693, metadata !DIExpression()), !dbg !23694
  %30 = load i64, i64* %10, align 8, !dbg !23695
  %31 = load i32, i32* %11, align 4, !dbg !23697
  %32 = zext i32 %31 to i64, !dbg !23697
  %33 = icmp sgt i64 %30, %32, !dbg !23698
  br i1 %33, label %34, label %36, !dbg !23699

34:                                               ; preds = %29
  %35 = load i32, i32* %11, align 4, !dbg !23700
  store i32 %35, i32* %13, align 4, !dbg !23702
  br label %39, !dbg !23703

36:                                               ; preds = %29
  %37 = load i64, i64* %10, align 8, !dbg !23704
  %38 = trunc i64 %37 to i32, !dbg !23706
  store i32 %38, i32* %13, align 4, !dbg !23707
  br label %39

39:                                               ; preds = %36, %34
  %40 = load i32, i32* %8, align 4, !dbg !23708
  %41 = load i64*, i64** %9, align 8, !dbg !23709
  %42 = load i64, i64* %41, align 8, !dbg !23710
  call void @vsf_sysutil_lseek_to(i32 %40, i64 %42), !dbg !23711
  %43 = load i32, i32* %7, align 4, !dbg !23712
  %44 = load i32, i32* %8, align 4, !dbg !23713
  %45 = load i32, i32* %13, align 4, !dbg !23714
  %46 = load i64*, i64** %9, align 8, !dbg !23715
  %47 = load i64, i64* %46, align 8, !dbg !23716
  %48 = call i32 @do_sendfile(i32 %43, i32 %44, i32 %45, i64 %47), !dbg !23717
  store i32 %48, i32* %12, align 4, !dbg !23718
  %49 = load i32, i32* %12, align 4, !dbg !23719
  %50 = call i32 @vsf_sysutil_retval_is_error(i32 %49), !dbg !23721
  %51 = icmp ne i32 %50, 0, !dbg !23721
  br i1 %51, label %55, label %52, !dbg !23722

52:                                               ; preds = %39
  %53 = load i32, i32* %12, align 4, !dbg !23723
  %54 = icmp eq i32 %53, 0, !dbg !23724
  br i1 %54, label %55, label %57, !dbg !23725

55:                                               ; preds = %52, %39
  %56 = load i32, i32* %12, align 4, !dbg !23726
  store i32 %56, i32* %6, align 4, !dbg !23728
  br label %68, !dbg !23728

57:                                               ; preds = %52
  %58 = load i32, i32* %12, align 4, !dbg !23729
  %59 = sext i32 %58 to i64, !dbg !23729
  %60 = load i64, i64* %10, align 8, !dbg !23730
  %61 = sub nsw i64 %60, %59, !dbg !23730
  store i64 %61, i64* %10, align 8, !dbg !23730
  %62 = load i32, i32* %12, align 4, !dbg !23731
  %63 = sext i32 %62 to i64, !dbg !23731
  %64 = load i64*, i64** %9, align 8, !dbg !23732
  %65 = load i64, i64* %64, align 8, !dbg !23733
  %66 = add nsw i64 %65, %63, !dbg !23733
  store i64 %66, i64* %64, align 8, !dbg !23733
  br label %26, !dbg !23687, !llvm.loop !23734

67:                                               ; preds = %26
  store i32 0, i32* %6, align 4, !dbg !23736
  br label %68, !dbg !23736

68:                                               ; preds = %67, %55
  %69 = load i32, i32* %6, align 4, !dbg !23737
  ret i32 %69, !dbg !23737
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @do_sendfile(i32, i32, i32, i64) #0 !dbg !1779 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !23738, metadata !DIExpression()), !dbg !23739
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !23740, metadata !DIExpression()), !dbg !23741
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !23742, metadata !DIExpression()), !dbg !23743
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !23744, metadata !DIExpression()), !dbg !23745
  call void @llvm.dbg.declare(metadata i32* %10, metadata !23746, metadata !DIExpression()), !dbg !23747
  store i32 0, i32* %10, align 4, !dbg !23747
  call void @llvm.dbg.declare(metadata i32* %11, metadata !23748, metadata !DIExpression()), !dbg !23749
  call void @llvm.dbg.declare(metadata i32* %12, metadata !23750, metadata !DIExpression()), !dbg !23751
  %16 = load i64, i64* %9, align 8, !dbg !23752
  %17 = load i32, i32* %12, align 4, !dbg !23753
  %18 = load i32, i32* @tunable_use_sendfile, align 4, !dbg !23754
  %19 = icmp ne i32 %18, 0, !dbg !23754
  br i1 %19, label %20, label %77, !dbg !23756

20:                                               ; preds = %4
  %21 = load i32, i32* @do_sendfile.s_sendfile_checked, align 4, !dbg !23757
  %22 = icmp ne i32 %21, 0, !dbg !23757
  br i1 %22, label %23, label %26, !dbg !23760

23:                                               ; preds = %20
  %24 = load i32, i32* @do_sendfile.s_runtime_sendfile_works, align 4, !dbg !23761
  %25 = icmp ne i32 %24, 0, !dbg !23761
  br i1 %25, label %26, label %76, !dbg !23762

26:                                               ; preds = %23, %20
  br label %27, !dbg !23763, !llvm.loop !23765

27:                                               ; preds = %44, %26
  %28 = load i32, i32* %6, align 4, !dbg !23767
  %29 = load i32, i32* %7, align 4, !dbg !23769
  %30 = load i32, i32* %8, align 4, !dbg !23770
  %31 = zext i32 %30 to i64, !dbg !23770
  %32 = call i64 @sendfile(i32 %28, i32 %29, i64* null, i64 %31) #8, !dbg !23771
  %33 = trunc i64 %32 to i32, !dbg !23771
  store i32 %33, i32* %11, align 4, !dbg !23772
  %34 = call i32 @vsf_sysutil_get_error(), !dbg !23773
  store i32 %34, i32* %12, align 4, !dbg !23774
  %35 = load i32, i32* %11, align 4, !dbg !23775
  %36 = load i32, i32* %6, align 4, !dbg !23776
  call void @vsf_sysutil_check_pending_actions(i32 1, i32 %35, i32 %36), !dbg !23777
  br label %37, !dbg !23778

37:                                               ; preds = %27
  %38 = load i32, i32* %11, align 4, !dbg !23779
  %39 = call i32 @vsf_sysutil_retval_is_error(i32 %38), !dbg !23780
  %40 = icmp ne i32 %39, 0, !dbg !23780
  br i1 %40, label %41, label %44, !dbg !23781

41:                                               ; preds = %37
  %42 = load i32, i32* %12, align 4, !dbg !23782
  %43 = icmp eq i32 %42, 4, !dbg !23783
  br label %44

44:                                               ; preds = %41, %37
  %45 = phi i1 [ false, %37 ], [ %43, %41 ]
  br i1 %45, label %27, label %46, !dbg !23778, !llvm.loop !23765

46:                                               ; preds = %44
  %47 = load i32, i32* @do_sendfile.s_sendfile_checked, align 4, !dbg !23784
  %48 = icmp ne i32 %47, 0, !dbg !23784
  br i1 %48, label %58, label %49, !dbg !23786

49:                                               ; preds = %46
  store i32 1, i32* @do_sendfile.s_sendfile_checked, align 4, !dbg !23787
  %50 = load i32, i32* %11, align 4, !dbg !23789
  %51 = call i32 @vsf_sysutil_retval_is_error(i32 %50), !dbg !23791
  %52 = icmp ne i32 %51, 0, !dbg !23791
  br i1 %52, label %53, label %56, !dbg !23792

53:                                               ; preds = %49
  %54 = load i32, i32* %12, align 4, !dbg !23793
  %55 = icmp ne i32 %54, 3, !dbg !23794
  br i1 %55, label %56, label %57, !dbg !23795

56:                                               ; preds = %53, %49
  store i32 1, i32* @do_sendfile.s_runtime_sendfile_works, align 4, !dbg !23796
  br label %57, !dbg !23798

57:                                               ; preds = %56, %53
  br label %58, !dbg !23799

58:                                               ; preds = %57, %46
  %59 = load i32, i32* %11, align 4, !dbg !23800
  %60 = call i32 @vsf_sysutil_retval_is_error(i32 %59), !dbg !23802
  %61 = icmp ne i32 %60, 0, !dbg !23802
  br i1 %61, label %64, label %62, !dbg !23803

62:                                               ; preds = %58
  %63 = load i32, i32* %11, align 4, !dbg !23804
  store i32 %63, i32* %5, align 4, !dbg !23806
  br label %136, !dbg !23806

64:                                               ; preds = %58
  %65 = load i32, i32* @do_sendfile.s_runtime_sendfile_works, align 4, !dbg !23807
  %66 = icmp ne i32 %65, 0, !dbg !23807
  br i1 %66, label %67, label %75, !dbg !23809

67:                                               ; preds = %64
  %68 = load i32, i32* %12, align 4, !dbg !23810
  %69 = icmp ne i32 %68, 5, !dbg !23811
  br i1 %69, label %70, label %75, !dbg !23812

70:                                               ; preds = %67
  %71 = load i32, i32* %12, align 4, !dbg !23813
  %72 = icmp ne i32 %71, 6, !dbg !23814
  br i1 %72, label %73, label %75, !dbg !23815

73:                                               ; preds = %70
  %74 = load i32, i32* %11, align 4, !dbg !23816
  store i32 %74, i32* %5, align 4, !dbg !23818
  br label %136, !dbg !23818

75:                                               ; preds = %70, %67, %64
  br label %76, !dbg !23819

76:                                               ; preds = %75, %23
  br label %77, !dbg !23820

77:                                               ; preds = %76, %4
  %78 = load i8*, i8** @do_sendfile.p_recvbuf, align 8, !dbg !23821
  %79 = icmp eq i8* %78, null, !dbg !23823
  br i1 %79, label %80, label %81, !dbg !23824

80:                                               ; preds = %77
  call void @vsf_secbuf_alloc(i8** @do_sendfile.p_recvbuf, i32 65536), !dbg !23825
  br label %81, !dbg !23827

81:                                               ; preds = %80, %77
  br label %82, !dbg !23828

82:                                               ; preds = %81, %135
  call void @llvm.dbg.declare(metadata i32* %13, metadata !23829, metadata !DIExpression()), !dbg !23831
  call void @llvm.dbg.declare(metadata i32* %14, metadata !23832, metadata !DIExpression()), !dbg !23833
  call void @llvm.dbg.declare(metadata i32* %15, metadata !23834, metadata !DIExpression()), !dbg !23835
  store i32 65536, i32* %15, align 4, !dbg !23835
  %83 = load i32, i32* %15, align 4, !dbg !23836
  %84 = load i32, i32* %8, align 4, !dbg !23838
  %85 = icmp ugt i32 %83, %84, !dbg !23839
  br i1 %85, label %86, label %88, !dbg !23840

86:                                               ; preds = %82
  %87 = load i32, i32* %8, align 4, !dbg !23841
  store i32 %87, i32* %15, align 4, !dbg !23843
  br label %88, !dbg !23844

88:                                               ; preds = %86, %82
  %89 = load i32, i32* %7, align 4, !dbg !23845
  %90 = load i8*, i8** @do_sendfile.p_recvbuf, align 8, !dbg !23846
  %91 = load i32, i32* %15, align 4, !dbg !23847
  %92 = call i32 @vsf_sysutil_read(i32 %89, i8* %90, i32 %91), !dbg !23848
  store i32 %92, i32* %11, align 4, !dbg !23849
  %93 = load i32, i32* %11, align 4, !dbg !23850
  %94 = icmp slt i32 %93, 0, !dbg !23852
  br i1 %94, label %95, label %97, !dbg !23853

95:                                               ; preds = %88
  %96 = load i32, i32* %11, align 4, !dbg !23854
  store i32 %96, i32* %5, align 4, !dbg !23856
  br label %136, !dbg !23856

97:                                               ; preds = %88
  %98 = load i32, i32* %11, align 4, !dbg !23857
  %99 = icmp eq i32 %98, 0, !dbg !23859
  br i1 %99, label %100, label %101, !dbg !23860

100:                                              ; preds = %97
  store i32 -1, i32* %5, align 4, !dbg !23861
  br label %136, !dbg !23861

101:                                              ; preds = %97
  br label %102

102:                                              ; preds = %101
  %103 = load i32, i32* %11, align 4, !dbg !23863
  store i32 %103, i32* %13, align 4, !dbg !23864
  %104 = load i32, i32* %6, align 4, !dbg !23865
  %105 = load i8*, i8** @do_sendfile.p_recvbuf, align 8, !dbg !23866
  %106 = load i32, i32* %13, align 4, !dbg !23867
  %107 = call i32 @vsf_sysutil_write_loop(i32 %104, i8* %105, i32 %106), !dbg !23868
  store i32 %107, i32* %11, align 4, !dbg !23869
  %108 = load i32, i32* %11, align 4, !dbg !23870
  %109 = icmp slt i32 %108, 0, !dbg !23872
  br i1 %109, label %110, label %112, !dbg !23873

110:                                              ; preds = %102
  %111 = load i32, i32* %11, align 4, !dbg !23874
  store i32 %111, i32* %5, align 4, !dbg !23876
  br label %136, !dbg !23876

112:                                              ; preds = %102
  %113 = load i32, i32* %11, align 4, !dbg !23877
  store i32 %113, i32* %14, align 4, !dbg !23878
  %114 = load i32, i32* %14, align 4, !dbg !23879
  %115 = load i32, i32* %10, align 4, !dbg !23880
  %116 = add i32 %115, %114, !dbg !23880
  store i32 %116, i32* %10, align 4, !dbg !23880
  %117 = load i32, i32* %14, align 4, !dbg !23881
  %118 = load i32, i32* %13, align 4, !dbg !23883
  %119 = icmp ne i32 %117, %118, !dbg !23884
  br i1 %119, label %120, label %122, !dbg !23885

120:                                              ; preds = %112
  %121 = load i32, i32* %14, align 4, !dbg !23886
  store i32 %121, i32* %5, align 4, !dbg !23888
  br label %136, !dbg !23888

122:                                              ; preds = %112
  %123 = load i32, i32* %14, align 4, !dbg !23889
  %124 = load i32, i32* %8, align 4, !dbg !23891
  %125 = icmp ugt i32 %123, %124, !dbg !23892
  br i1 %125, label %126, label %127, !dbg !23893

126:                                              ; preds = %122
  call void @bug(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18.1400, i32 0, i32 0)), !dbg !23894
  br label %127, !dbg !23896

127:                                              ; preds = %126, %122
  %128 = load i32, i32* %14, align 4, !dbg !23897
  %129 = load i32, i32* %8, align 4, !dbg !23898
  %130 = sub i32 %129, %128, !dbg !23898
  store i32 %130, i32* %8, align 4, !dbg !23898
  %131 = load i32, i32* %8, align 4, !dbg !23899
  %132 = icmp eq i32 %131, 0, !dbg !23901
  br i1 %132, label %133, label %135, !dbg !23902

133:                                              ; preds = %127
  %134 = load i32, i32* %10, align 4, !dbg !23903
  store i32 %134, i32* %5, align 4, !dbg !23905
  br label %136, !dbg !23905

135:                                              ; preds = %127
  br label %82, !dbg !23828, !llvm.loop !23906

136:                                              ; preds = %133, %120, %110, %100, %95, %73, %62
  %137 = load i32, i32* %5, align 4, !dbg !23908
  ret i32 %137, !dbg !23908
}

; Function Attrs: nounwind
declare i64 @sendfile(i32, i32, i64*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_set_proctitle_prefix(%struct.mystr*) #0 !dbg !23909 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !23912, metadata !DIExpression()), !dbg !23913
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !23914
  call void @str_copy(%struct.mystr* @s_proctitle_prefix_str, %struct.mystr* %3), !dbg !23915
  ret void, !dbg !23916
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setproctitle_str(%struct.mystr*) #0 !dbg !23917 {
  %2 = alloca %struct.mystr*, align 8
  store %struct.mystr* %0, %struct.mystr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mystr** %2, metadata !23918, metadata !DIExpression()), !dbg !23919
  %3 = load %struct.mystr*, %struct.mystr** %2, align 8, !dbg !23920
  %4 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !23921
  call void @vsf_sysutil_setproctitle(i8* %4), !dbg !23922
  ret void, !dbg !23923
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setproctitle(i8*) #0 !dbg !23924 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.mystr, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !23925, metadata !DIExpression()), !dbg !23926
  call void @llvm.dbg.declare(metadata %struct.mystr* %3, metadata !23927, metadata !DIExpression()), !dbg !23928
  %4 = bitcast %struct.mystr* %3 to i8*, !dbg !23928
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false), !dbg !23928
  call void @str_copy(%struct.mystr* %3, %struct.mystr* @s_proctitle_prefix_str), !dbg !23929
  %5 = call i32 @str_isempty(%struct.mystr* %3), !dbg !23930
  %6 = icmp ne i32 %5, 0, !dbg !23930
  br i1 %6, label %8, label %7, !dbg !23932

7:                                                ; preds = %1
  call void @str_append_text(%struct.mystr* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.1407, i32 0, i32 0)), !dbg !23933
  br label %8, !dbg !23935

8:                                                ; preds = %7, %1
  %9 = load i8*, i8** %2, align 8, !dbg !23936
  call void @str_append_text(%struct.mystr* %3, i8* %9), !dbg !23937
  %10 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !23938
  call void @vsf_sysutil_setproctitle_internal(i8* %10), !dbg !23939
  call void @str_free(%struct.mystr* %3), !dbg !23940
  ret void, !dbg !23941
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @vsf_sysutil_setproctitle_internal(i8*) #0 !dbg !23942 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.mystr, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !23943, metadata !DIExpression()), !dbg !23944
  call void @llvm.dbg.declare(metadata %struct.mystr* %3, metadata !23945, metadata !DIExpression()), !dbg !23946
  %5 = bitcast %struct.mystr* %3 to i8*, !dbg !23946
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false), !dbg !23946
  call void @llvm.dbg.declare(metadata i32* %4, metadata !23947, metadata !DIExpression()), !dbg !23948
  %6 = load i32, i32* @s_proctitle_inited, align 4, !dbg !23949
  %7 = icmp ne i32 %6, 0, !dbg !23949
  br i1 %7, label %9, label %8, !dbg !23951

8:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19.1408, i32 0, i32 0)), !dbg !23952
  br label %9, !dbg !23954

9:                                                ; preds = %8, %1
  %10 = load i8*, i8** @s_p_proctitle, align 8, !dbg !23955
  %11 = load i32, i32* @s_proctitle_space, align 4, !dbg !23956
  call void @vsf_sysutil_memclr(i8* %10, i32 %11), !dbg !23957
  %12 = load i32, i32* @s_proctitle_space, align 4, !dbg !23958
  %13 = icmp ult i32 %12, 32, !dbg !23960
  br i1 %13, label %14, label %15, !dbg !23961

14:                                               ; preds = %9
  br label %33, !dbg !23962

15:                                               ; preds = %9
  call void @str_alloc_text(%struct.mystr* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20.1409, i32 0, i32 0)), !dbg !23964
  %16 = load i8*, i8** %2, align 8, !dbg !23965
  call void @str_append_text(%struct.mystr* %3, i8* %16), !dbg !23966
  %17 = call i32 @str_getlen(%struct.mystr* %3), !dbg !23967
  store i32 %17, i32* %4, align 4, !dbg !23968
  %18 = load i32, i32* %4, align 4, !dbg !23969
  %19 = load i32, i32* @s_proctitle_space, align 4, !dbg !23971
  %20 = sub i32 %19, 1, !dbg !23972
  %21 = icmp ugt i32 %18, %20, !dbg !23973
  br i1 %21, label %22, label %25, !dbg !23974

22:                                               ; preds = %15
  %23 = load i32, i32* @s_proctitle_space, align 4, !dbg !23975
  %24 = sub i32 %23, 1, !dbg !23977
  store i32 %24, i32* %4, align 4, !dbg !23978
  br label %25, !dbg !23979

25:                                               ; preds = %22, %15
  %26 = load i8*, i8** @s_p_proctitle, align 8, !dbg !23980
  %27 = call i8* @str_getbuf(%struct.mystr* %3), !dbg !23981
  %28 = load i32, i32* %4, align 4, !dbg !23982
  call void @vsf_sysutil_memcpy(i8* %26, i8* %27, i32 %28), !dbg !23983
  call void @str_free(%struct.mystr* %3), !dbg !23984
  %29 = load i8*, i8** @s_p_proctitle, align 8, !dbg !23985
  %30 = load i32, i32* %4, align 4, !dbg !23986
  %31 = zext i32 %30 to i64, !dbg !23985
  %32 = getelementptr inbounds i8, i8* %29, i64 %31, !dbg !23985
  store i8 0, i8* %32, align 1, !dbg !23987
  br label %33, !dbg !23988

33:                                               ; preds = %25, %14
  ret void, !dbg !23988
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_setproctitle_init(i32, i8**) #0 !dbg !23989 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23992, metadata !DIExpression()), !dbg !23993
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !23994, metadata !DIExpression()), !dbg !23995
  call void @llvm.dbg.declare(metadata i32* %5, metadata !23996, metadata !DIExpression()), !dbg !23997
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !23998, metadata !DIExpression()), !dbg !23999
  %7 = load i8**, i8*** @environ, align 8, !dbg !24000
  store i8** %7, i8*** %6, align 8, !dbg !23999
  %8 = load i32, i32* @s_proctitle_inited, align 4, !dbg !24001
  %9 = icmp ne i32 %8, 0, !dbg !24001
  br i1 %9, label %10, label %11, !dbg !24003

10:                                               ; preds = %2
  call void @bug(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7.1412, i32 0, i32 0)), !dbg !24004
  br label %11, !dbg !24006

11:                                               ; preds = %10, %2
  store i32 1, i32* @s_proctitle_inited, align 4, !dbg !24007
  %12 = load i8**, i8*** %4, align 8, !dbg !24008
  %13 = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !24008
  %14 = load i8*, i8** %13, align 8, !dbg !24008
  %15 = icmp eq i8* %14, null, !dbg !24010
  br i1 %15, label %16, label %17, !dbg !24011

16:                                               ; preds = %11
  call void @die(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8.1413, i32 0, i32 0)), !dbg !24012
  br label %17, !dbg !24014

17:                                               ; preds = %16, %11
  store i32 0, i32* %5, align 4, !dbg !24015
  br label %18, !dbg !24017

18:                                               ; preds = %40, %17
  %19 = load i32, i32* %5, align 4, !dbg !24018
  %20 = load i32, i32* %3, align 4, !dbg !24020
  %21 = icmp slt i32 %19, %20, !dbg !24021
  br i1 %21, label %22, label %43, !dbg !24022

22:                                               ; preds = %18
  %23 = load i8**, i8*** %4, align 8, !dbg !24023
  %24 = load i32, i32* %5, align 4, !dbg !24025
  %25 = sext i32 %24 to i64, !dbg !24023
  %26 = getelementptr inbounds i8*, i8** %23, i64 %25, !dbg !24023
  %27 = load i8*, i8** %26, align 8, !dbg !24023
  %28 = call i32 @vsf_sysutil_strlen(i8* %27), !dbg !24026
  %29 = add i32 %28, 1, !dbg !24027
  %30 = load i32, i32* @s_proctitle_space, align 4, !dbg !24028
  %31 = add i32 %30, %29, !dbg !24028
  store i32 %31, i32* @s_proctitle_space, align 4, !dbg !24028
  %32 = load i32, i32* %5, align 4, !dbg !24029
  %33 = icmp sgt i32 %32, 0, !dbg !24031
  br i1 %33, label %34, label %39, !dbg !24032

34:                                               ; preds = %22
  %35 = load i8**, i8*** %4, align 8, !dbg !24033
  %36 = load i32, i32* %5, align 4, !dbg !24035
  %37 = sext i32 %36 to i64, !dbg !24033
  %38 = getelementptr inbounds i8*, i8** %35, i64 %37, !dbg !24033
  store i8* null, i8** %38, align 8, !dbg !24036
  br label %39, !dbg !24037

39:                                               ; preds = %34, %22
  br label %40, !dbg !24038

40:                                               ; preds = %39
  %41 = load i32, i32* %5, align 4, !dbg !24039
  %42 = add nsw i32 %41, 1, !dbg !24039
  store i32 %42, i32* %5, align 4, !dbg !24039
  br label %18, !dbg !24040, !llvm.loop !24041

43:                                               ; preds = %18
  br label %44, !dbg !24043

44:                                               ; preds = %48, %43
  %45 = load i8**, i8*** %6, align 8, !dbg !24044
  %46 = load i8*, i8** %45, align 8, !dbg !24045
  %47 = icmp ne i8* %46, null, !dbg !24046
  br i1 %47, label %48, label %57, !dbg !24043

48:                                               ; preds = %44
  %49 = load i8**, i8*** %6, align 8, !dbg !24047
  %50 = load i8*, i8** %49, align 8, !dbg !24049
  %51 = call i32 @vsf_sysutil_strlen(i8* %50), !dbg !24050
  %52 = add i32 %51, 1, !dbg !24051
  %53 = load i32, i32* @s_proctitle_space, align 4, !dbg !24052
  %54 = add i32 %53, %52, !dbg !24052
  store i32 %54, i32* @s_proctitle_space, align 4, !dbg !24052
  %55 = load i8**, i8*** %6, align 8, !dbg !24053
  %56 = getelementptr inbounds i8*, i8** %55, i32 1, !dbg !24053
  store i8** %56, i8*** %6, align 8, !dbg !24053
  br label %44, !dbg !24043, !llvm.loop !24054

57:                                               ; preds = %44
  store i8** null, i8*** @environ, align 8, !dbg !24056
  %58 = load i8**, i8*** %4, align 8, !dbg !24057
  %59 = getelementptr inbounds i8*, i8** %58, i64 0, !dbg !24057
  %60 = load i8*, i8** %59, align 8, !dbg !24057
  store i8* %60, i8** @s_p_proctitle, align 8, !dbg !24058
  %61 = load i8*, i8** @s_p_proctitle, align 8, !dbg !24059
  %62 = load i32, i32* @s_proctitle_space, align 4, !dbg !24060
  call void @vsf_sysutil_memclr(i8* %61, i32 %62), !dbg !24061
  ret void, !dbg !24062
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_map_anon_pages_init() #0 !dbg !24063 {
  ret void, !dbg !24064
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @vsf_sysutil_map_anon_pages(i32) #0 !dbg !24065 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24066, metadata !DIExpression()), !dbg !24067
  call void @llvm.dbg.declare(metadata i8** %3, metadata !24068, metadata !DIExpression()), !dbg !24069
  %4 = load i32, i32* %2, align 4, !dbg !24070
  %5 = zext i32 %4 to i64, !dbg !24070
  %6 = call i8* @mmap(i8* null, i64 %5, i32 3, i32 34, i32 -1, i64 0) #8, !dbg !24071
  store i8* %6, i8** %3, align 8, !dbg !24069
  %7 = load i8*, i8** %3, align 8, !dbg !24072
  %8 = icmp eq i8* %7, inttoptr (i64 -1 to i8*), !dbg !24074
  br i1 %8, label %9, label %10, !dbg !24075

9:                                                ; preds = %1
  call void @die(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.1418, i32 0, i32 0)), !dbg !24076
  br label %10, !dbg !24078

10:                                               ; preds = %9, %1
  %11 = load i8*, i8** %3, align 8, !dbg !24079
  ret i8* %11, !dbg !24080
}

; Function Attrs: nounwind
declare i8* @mmap(i8*, i64, i32, i32, i32, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_sysutil_send_fd(i32, i32) #0 !dbg !24081 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.msghdr, align 8
  %7 = alloca %struct.cmsghdr*, align 8
  %8 = alloca %struct.iovec, align 8
  %9 = alloca [24 x i8], align 16
  %10 = alloca i32*, align 8
  %11 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24082, metadata !DIExpression()), !dbg !24083
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24084, metadata !DIExpression()), !dbg !24085
  call void @llvm.dbg.declare(metadata i32* %5, metadata !24086, metadata !DIExpression()), !dbg !24087
  call void @llvm.dbg.declare(metadata %struct.msghdr* %6, metadata !24088, metadata !DIExpression()), !dbg !24104
  call void @llvm.dbg.declare(metadata %struct.cmsghdr** %7, metadata !24105, metadata !DIExpression()), !dbg !24106
  call void @llvm.dbg.declare(metadata %struct.iovec* %8, metadata !24107, metadata !DIExpression()), !dbg !24108
  call void @llvm.dbg.declare(metadata [24 x i8]* %9, metadata !24109, metadata !DIExpression()), !dbg !24113
  call void @llvm.dbg.declare(metadata i32** %10, metadata !24114, metadata !DIExpression()), !dbg !24115
  call void @llvm.dbg.declare(metadata i8* %11, metadata !24116, metadata !DIExpression()), !dbg !24117
  store i8 0, i8* %11, align 1, !dbg !24117
  %12 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i32 0, i32 0, !dbg !24118
  %13 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 4, !dbg !24119
  store i8* %12, i8** %13, align 8, !dbg !24120
  %14 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 5, !dbg !24121
  store i64 24, i64* %14, align 8, !dbg !24122
  %15 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 5, !dbg !24123
  %16 = load i64, i64* %15, align 8, !dbg !24123
  %17 = icmp uge i64 %16, 16, !dbg !24123
  br i1 %17, label %18, label %22, !dbg !24123

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 4, !dbg !24123
  %20 = load i8*, i8** %19, align 8, !dbg !24123
  %21 = bitcast i8* %20 to %struct.cmsghdr*, !dbg !24123
  br label %23, !dbg !24123

22:                                               ; preds = %2
  br label %23, !dbg !24123

23:                                               ; preds = %22, %18
  %24 = phi %struct.cmsghdr* [ %21, %18 ], [ null, %22 ], !dbg !24123
  store %struct.cmsghdr* %24, %struct.cmsghdr** %7, align 8, !dbg !24124
  %25 = load %struct.cmsghdr*, %struct.cmsghdr** %7, align 8, !dbg !24125
  %26 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %25, i32 0, i32 1, !dbg !24126
  store i32 1, i32* %26, align 8, !dbg !24127
  %27 = load %struct.cmsghdr*, %struct.cmsghdr** %7, align 8, !dbg !24128
  %28 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %27, i32 0, i32 2, !dbg !24129
  store i32 1, i32* %28, align 4, !dbg !24130
  %29 = load %struct.cmsghdr*, %struct.cmsghdr** %7, align 8, !dbg !24131
  %30 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %29, i32 0, i32 0, !dbg !24132
  store i64 20, i64* %30, align 8, !dbg !24133
  %31 = load %struct.cmsghdr*, %struct.cmsghdr** %7, align 8, !dbg !24134
  %32 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %31, i32 0, i32 3, !dbg !24134
  %33 = getelementptr inbounds [0 x i8], [0 x i8]* %32, i32 0, i32 0, !dbg !24134
  %34 = bitcast i8* %33 to i32*, !dbg !24135
  store i32* %34, i32** %10, align 8, !dbg !24136
  %35 = load i32, i32* %4, align 4, !dbg !24137
  %36 = load i32*, i32** %10, align 8, !dbg !24138
  store i32 %35, i32* %36, align 4, !dbg !24139
  %37 = load %struct.cmsghdr*, %struct.cmsghdr** %7, align 8, !dbg !24140
  %38 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %37, i32 0, i32 0, !dbg !24141
  %39 = load i64, i64* %38, align 8, !dbg !24141
  %40 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 5, !dbg !24142
  store i64 %39, i64* %40, align 8, !dbg !24143
  %41 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 0, !dbg !24144
  store i8* null, i8** %41, align 8, !dbg !24145
  %42 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 1, !dbg !24146
  store i32 0, i32* %42, align 8, !dbg !24147
  %43 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 2, !dbg !24148
  store %struct.iovec* %8, %struct.iovec** %43, align 8, !dbg !24149
  %44 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 3, !dbg !24150
  store i64 1, i64* %44, align 8, !dbg !24151
  %45 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 6, !dbg !24152
  store i32 0, i32* %45, align 8, !dbg !24153
  %46 = getelementptr inbounds %struct.iovec, %struct.iovec* %8, i32 0, i32 0, !dbg !24154
  store i8* %11, i8** %46, align 8, !dbg !24155
  %47 = getelementptr inbounds %struct.iovec, %struct.iovec* %8, i32 0, i32 1, !dbg !24156
  store i64 1, i64* %47, align 8, !dbg !24157
  %48 = load i32, i32* %3, align 4, !dbg !24158
  %49 = call i64 @sendmsg(i32 %48, %struct.msghdr* %6, i32 0), !dbg !24159
  %50 = trunc i64 %49 to i32, !dbg !24159
  store i32 %50, i32* %5, align 4, !dbg !24160
  %51 = load i32, i32* %5, align 4, !dbg !24161
  %52 = icmp ne i32 %51, 1, !dbg !24163
  br i1 %52, label %53, label %54, !dbg !24164

53:                                               ; preds = %23
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.1421, i32 0, i32 0)), !dbg !24165
  br label %54, !dbg !24167

54:                                               ; preds = %53, %23
  ret void, !dbg !24168
}

declare i64 @sendmsg(i32, %struct.msghdr*, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_recv_fd(i32) #0 !dbg !24169 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.msghdr, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.iovec, align 8
  %7 = alloca i32, align 4
  %8 = alloca [24 x i8], align 16
  %9 = alloca %struct.cmsghdr*, align 8
  %10 = alloca i32*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24172, metadata !DIExpression()), !dbg !24173
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24174, metadata !DIExpression()), !dbg !24175
  call void @llvm.dbg.declare(metadata %struct.msghdr* %4, metadata !24176, metadata !DIExpression()), !dbg !24177
  call void @llvm.dbg.declare(metadata i8* %5, metadata !24178, metadata !DIExpression()), !dbg !24179
  call void @llvm.dbg.declare(metadata %struct.iovec* %6, metadata !24180, metadata !DIExpression()), !dbg !24181
  call void @llvm.dbg.declare(metadata i32* %7, metadata !24182, metadata !DIExpression()), !dbg !24183
  call void @llvm.dbg.declare(metadata [24 x i8]* %8, metadata !24184, metadata !DIExpression()), !dbg !24185
  call void @llvm.dbg.declare(metadata %struct.cmsghdr** %9, metadata !24186, metadata !DIExpression()), !dbg !24187
  call void @llvm.dbg.declare(metadata i32** %10, metadata !24188, metadata !DIExpression()), !dbg !24189
  %11 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i32 0, i32 0, !dbg !24190
  store i8* %5, i8** %11, align 8, !dbg !24191
  %12 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i32 0, i32 1, !dbg !24192
  store i64 1, i64* %12, align 8, !dbg !24193
  %13 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 0, !dbg !24194
  store i8* null, i8** %13, align 8, !dbg !24195
  %14 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 1, !dbg !24196
  store i32 0, i32* %14, align 8, !dbg !24197
  %15 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 2, !dbg !24198
  store %struct.iovec* %6, %struct.iovec** %15, align 8, !dbg !24199
  %16 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 3, !dbg !24200
  store i64 1, i64* %16, align 8, !dbg !24201
  %17 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i32 0, i32 0, !dbg !24202
  %18 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 4, !dbg !24203
  store i8* %17, i8** %18, align 8, !dbg !24204
  %19 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 5, !dbg !24205
  store i64 24, i64* %19, align 8, !dbg !24206
  %20 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 6, !dbg !24207
  store i32 0, i32* %20, align 8, !dbg !24208
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 5, !dbg !24209
  %22 = load i64, i64* %21, align 8, !dbg !24209
  %23 = icmp uge i64 %22, 16, !dbg !24209
  br i1 %23, label %24, label %28, !dbg !24209

24:                                               ; preds = %1
  %25 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 4, !dbg !24209
  %26 = load i8*, i8** %25, align 8, !dbg !24209
  %27 = bitcast i8* %26 to %struct.cmsghdr*, !dbg !24209
  br label %29, !dbg !24209

28:                                               ; preds = %1
  br label %29, !dbg !24209

29:                                               ; preds = %28, %24
  %30 = phi %struct.cmsghdr* [ %27, %24 ], [ null, %28 ], !dbg !24209
  %31 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %30, i32 0, i32 3, !dbg !24209
  %32 = getelementptr inbounds [0 x i8], [0 x i8]* %31, i32 0, i32 0, !dbg !24209
  %33 = bitcast i8* %32 to i32*, !dbg !24210
  store i32* %33, i32** %10, align 8, !dbg !24211
  %34 = load i32*, i32** %10, align 8, !dbg !24212
  store i32 -1, i32* %34, align 4, !dbg !24213
  %35 = load i32, i32* %2, align 4, !dbg !24214
  %36 = call i64 @recvmsg(i32 %35, %struct.msghdr* %4, i32 0), !dbg !24215
  %37 = trunc i64 %36 to i32, !dbg !24215
  store i32 %37, i32* %3, align 4, !dbg !24216
  %38 = load i32, i32* %3, align 4, !dbg !24217
  %39 = icmp ne i32 %38, 1, !dbg !24219
  br i1 %39, label %40, label %41, !dbg !24220

40:                                               ; preds = %29
  call void @die(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.1424, i32 0, i32 0)), !dbg !24221
  br label %41, !dbg !24223

41:                                               ; preds = %40, %29
  %42 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 5, !dbg !24224
  %43 = load i64, i64* %42, align 8, !dbg !24224
  %44 = icmp uge i64 %43, 16, !dbg !24224
  br i1 %44, label %45, label %49, !dbg !24224

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i32 0, i32 4, !dbg !24224
  %47 = load i8*, i8** %46, align 8, !dbg !24224
  %48 = bitcast i8* %47 to %struct.cmsghdr*, !dbg !24224
  br label %50, !dbg !24224

49:                                               ; preds = %41
  br label %50, !dbg !24224

50:                                               ; preds = %49, %45
  %51 = phi %struct.cmsghdr* [ %48, %45 ], [ null, %49 ], !dbg !24224
  store %struct.cmsghdr* %51, %struct.cmsghdr** %9, align 8, !dbg !24225
  %52 = load %struct.cmsghdr*, %struct.cmsghdr** %9, align 8, !dbg !24226
  %53 = icmp eq %struct.cmsghdr* %52, null, !dbg !24228
  br i1 %53, label %54, label %55, !dbg !24229

54:                                               ; preds = %50
  call void @die(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.1425, i32 0, i32 0)), !dbg !24230
  br label %55, !dbg !24232

55:                                               ; preds = %54, %50
  %56 = load %struct.cmsghdr*, %struct.cmsghdr** %9, align 8, !dbg !24233
  %57 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %56, i32 0, i32 3, !dbg !24233
  %58 = getelementptr inbounds [0 x i8], [0 x i8]* %57, i32 0, i32 0, !dbg !24233
  %59 = bitcast i8* %58 to i32*, !dbg !24234
  store i32* %59, i32** %10, align 8, !dbg !24235
  %60 = load i32*, i32** %10, align 8, !dbg !24236
  %61 = load i32, i32* %60, align 4, !dbg !24237
  store i32 %61, i32* %7, align 4, !dbg !24238
  %62 = load i32, i32* %7, align 4, !dbg !24239
  %63 = icmp eq i32 %62, -1, !dbg !24241
  br i1 %63, label %64, label %65, !dbg !24242

64:                                               ; preds = %55
  call void @die(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.1425, i32 0, i32 0)), !dbg !24243
  br label %65, !dbg !24245

65:                                               ; preds = %64, %55
  %66 = load i32, i32* %7, align 4, !dbg !24246
  ret i32 %66, !dbg !24247
}

declare i64 @recvmsg(i32, %struct.msghdr*, i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_set_die_if_parent_dies() #0 !dbg !24248 {
  %1 = call i32 (i32, ...) @prctl(i32 1, i32 9, i32 0, i32 0, i32 0) #8, !dbg !24249
  %2 = icmp ne i32 %1, 0, !dbg !24251
  br i1 %2, label %3, label %4, !dbg !24252

3:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.1391, i32 0, i32 0)), !dbg !24253
  br label %4, !dbg !24255

4:                                                ; preds = %3, %0
  ret void, !dbg !24256
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @vsf_set_term_if_parent_dies() #0 !dbg !24257 {
  %1 = call i32 (i32, ...) @prctl(i32 1, i32 15, i32 0, i32 0, i32 0) #8, !dbg !24258
  %2 = icmp ne i32 %1, 0, !dbg !24260
  br i1 %2, label %3, label %4, !dbg !24261

3:                                                ; preds = %0
  call void @die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.1391, i32 0, i32 0)), !dbg !24262
  br label %4, !dbg !24264

4:                                                ; preds = %3, %0
  ret void, !dbg !24265
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_fork_isolate_all_failok() #0 !dbg !1724 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @vsf_sysutil_fork_isolate_all_failok.cloneflags_work, align 4, !dbg !24266
  %4 = icmp ne i32 %3, 0, !dbg !24266
  br i1 %4, label %5, label %25, !dbg !24268

5:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24269, metadata !DIExpression()), !dbg !24271
  %6 = call i64 (i64, ...) @syscall(i64 56, i32 1744830481, i8* null) #8, !dbg !24272
  %7 = trunc i64 %6 to i32, !dbg !24272
  store i32 %7, i32* %2, align 4, !dbg !24271
  %8 = load i32, i32* %2, align 4, !dbg !24273
  %9 = icmp ne i32 %8, -1, !dbg !24275
  br i1 %9, label %18, label %10, !dbg !24276

10:                                               ; preds = %5
  %11 = call i32* @__errno_location() #9, !dbg !24277
  %12 = load i32, i32* %11, align 4, !dbg !24277
  %13 = icmp ne i32 %12, 22, !dbg !24278
  br i1 %13, label %14, label %24, !dbg !24279

14:                                               ; preds = %10
  %15 = call i32* @__errno_location() #9, !dbg !24280
  %16 = load i32, i32* %15, align 4, !dbg !24280
  %17 = icmp ne i32 %16, 1, !dbg !24281
  br i1 %17, label %18, label %24, !dbg !24282

18:                                               ; preds = %14, %5
  %19 = load i32, i32* %2, align 4, !dbg !24283
  %20 = icmp eq i32 %19, 0, !dbg !24286
  br i1 %20, label %21, label %22, !dbg !24287

21:                                               ; preds = %18
  call void @vsf_sysutil_post_fork(), !dbg !24288
  br label %22, !dbg !24290

22:                                               ; preds = %21, %18
  %23 = load i32, i32* %2, align 4, !dbg !24291
  store i32 %23, i32* %1, align 4, !dbg !24292
  br label %27, !dbg !24292

24:                                               ; preds = %14, %10
  store i32 0, i32* @vsf_sysutil_fork_isolate_all_failok.cloneflags_work, align 4, !dbg !24293
  br label %25, !dbg !24294

25:                                               ; preds = %24, %0
  %26 = call i32 @vsf_sysutil_fork_isolate_failok(), !dbg !24295
  store i32 %26, i32* %1, align 4, !dbg !24296
  br label %27, !dbg !24296

27:                                               ; preds = %25, %22
  %28 = load i32, i32* %1, align 4, !dbg !24297
  ret i32 %28, !dbg !24297
}

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_fork_isolate_failok() #0 !dbg !1727 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @vsf_sysutil_fork_isolate_failok.cloneflags_work, align 4, !dbg !24298
  %4 = icmp ne i32 %3, 0, !dbg !24298
  br i1 %4, label %5, label %25, !dbg !24300

5:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24301, metadata !DIExpression()), !dbg !24303
  %6 = call i64 (i64, ...) @syscall(i64 56, i32 671088657, i8* null) #8, !dbg !24304
  %7 = trunc i64 %6 to i32, !dbg !24304
  store i32 %7, i32* %2, align 4, !dbg !24303
  %8 = load i32, i32* %2, align 4, !dbg !24305
  %9 = icmp ne i32 %8, -1, !dbg !24307
  br i1 %9, label %18, label %10, !dbg !24308

10:                                               ; preds = %5
  %11 = call i32* @__errno_location() #9, !dbg !24309
  %12 = load i32, i32* %11, align 4, !dbg !24309
  %13 = icmp ne i32 %12, 22, !dbg !24310
  br i1 %13, label %14, label %24, !dbg !24311

14:                                               ; preds = %10
  %15 = call i32* @__errno_location() #9, !dbg !24312
  %16 = load i32, i32* %15, align 4, !dbg !24312
  %17 = icmp ne i32 %16, 1, !dbg !24313
  br i1 %17, label %18, label %24, !dbg !24314

18:                                               ; preds = %14, %5
  %19 = load i32, i32* %2, align 4, !dbg !24315
  %20 = icmp eq i32 %19, 0, !dbg !24318
  br i1 %20, label %21, label %22, !dbg !24319

21:                                               ; preds = %18
  call void @vsf_sysutil_post_fork(), !dbg !24320
  br label %22, !dbg !24322

22:                                               ; preds = %21, %18
  %23 = load i32, i32* %2, align 4, !dbg !24323
  store i32 %23, i32* %1, align 4, !dbg !24324
  br label %27, !dbg !24324

24:                                               ; preds = %14, %10
  store i32 0, i32* @vsf_sysutil_fork_isolate_failok.cloneflags_work, align 4, !dbg !24325
  br label %25, !dbg !24326

25:                                               ; preds = %24, %0
  %26 = call i32 @vsf_sysutil_fork_failok(), !dbg !24327
  store i32 %26, i32* %1, align 4, !dbg !24328
  br label %27, !dbg !24328

27:                                               ; preds = %25, %22
  %28 = load i32, i32* %1, align 4, !dbg !24329
  ret i32 %28, !dbg !24329
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_fork_newnet() #0 !dbg !1730 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @vsf_sysutil_fork_newnet.cloneflags_work, align 4, !dbg !24330
  %4 = icmp ne i32 %3, 0, !dbg !24330
  br i1 %4, label %5, label %25, !dbg !24332

5:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24333, metadata !DIExpression()), !dbg !24335
  %6 = call i64 (i64, ...) @syscall(i64 56, i32 1073741841, i8* null) #8, !dbg !24336
  %7 = trunc i64 %6 to i32, !dbg !24336
  store i32 %7, i32* %2, align 4, !dbg !24335
  %8 = load i32, i32* %2, align 4, !dbg !24337
  %9 = icmp ne i32 %8, -1, !dbg !24339
  br i1 %9, label %18, label %10, !dbg !24340

10:                                               ; preds = %5
  %11 = call i32* @__errno_location() #9, !dbg !24341
  %12 = load i32, i32* %11, align 4, !dbg !24341
  %13 = icmp ne i32 %12, 22, !dbg !24342
  br i1 %13, label %14, label %24, !dbg !24343

14:                                               ; preds = %10
  %15 = call i32* @__errno_location() #9, !dbg !24344
  %16 = load i32, i32* %15, align 4, !dbg !24344
  %17 = icmp ne i32 %16, 1, !dbg !24345
  br i1 %17, label %18, label %24, !dbg !24346

18:                                               ; preds = %14, %5
  %19 = load i32, i32* %2, align 4, !dbg !24347
  %20 = icmp eq i32 %19, 0, !dbg !24350
  br i1 %20, label %21, label %22, !dbg !24351

21:                                               ; preds = %18
  call void @vsf_sysutil_post_fork(), !dbg !24352
  br label %22, !dbg !24354

22:                                               ; preds = %21, %18
  %23 = load i32, i32* %2, align 4, !dbg !24355
  store i32 %23, i32* %1, align 4, !dbg !24356
  br label %27, !dbg !24356

24:                                               ; preds = %14, %10
  store i32 0, i32* @vsf_sysutil_fork_newnet.cloneflags_work, align 4, !dbg !24357
  br label %25, !dbg !24358

25:                                               ; preds = %24, %0
  %26 = call i32 @vsf_sysutil_fork(), !dbg !24359
  store i32 %26, i32* %1, align 4, !dbg !24360
  br label %27, !dbg !24360

27:                                               ; preds = %25, %22
  %28 = load i32, i32* %1, align 4, !dbg !24361
  ret i32 %28, !dbg !24361
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @vsf_sysutil_getpid_nocache() #0 !dbg !24362 {
  %1 = call i64 (i64, ...) @syscall(i64 39) #8, !dbg !24363
  %2 = trunc i64 %1 to i32, !dbg !24363
  ret i32 %2, !dbg !24364
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @seccomp_sandbox_init() #0 !dbg !24365 {
  %1 = load i64, i64* @s_syscall_index, align 8, !dbg !24366
  %2 = icmp ne i64 %1, 0, !dbg !24368
  br i1 %2, label %3, label %4, !dbg !24369

3:                                                ; preds = %0
  call void @bug(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1440, i32 0, i32 0)), !dbg !24370
  br label %4, !dbg !24372

4:                                                ; preds = %3, %0
  ret void, !dbg !24373
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @seccomp_sandbox_setup_prelogin(%struct.vsf_session*) #0 !dbg !24374 {
  %2 = alloca %struct.vsf_session*, align 8
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !24443, metadata !DIExpression()), !dbg !24444
  %3 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !24445
  call void @seccomp_sandbox_setup_base(), !dbg !24446
  call void @allow_nr_1_arg_match(i32 45, i32 4, i32 2), !dbg !24447
  call void @allow_nr(i32 35), !dbg !24448
  call void @allow_nr(i32 39), !dbg !24449
  call void @allow_nr(i32 48), !dbg !24450
  call void @allow_nr_1_arg_match(i32 72, i32 2, i32 3), !dbg !24451
  call void @allow_nr_2_arg_mask_match(i32 72, i32 3, i32 625859, i32 2, i32 4), !dbg !24452
  %4 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !24453
  %5 = icmp ugt i32 %4, 0, !dbg !24455
  br i1 %5, label %6, label %7, !dbg !24456

6:                                                ; preds = %1
  call void @allow_nr(i32 13), !dbg !24457
  call void @allow_nr(i32 37), !dbg !24459
  br label %7, !dbg !24460

7:                                                ; preds = %6, %1
  %8 = load i32, i32* @tunable_xferlog_enable, align 4, !dbg !24461
  %9 = icmp ne i32 %8, 0, !dbg !24461
  br i1 %9, label %13, label %10, !dbg !24463

10:                                               ; preds = %7
  %11 = load i32, i32* @tunable_dual_log_enable, align 4, !dbg !24464
  %12 = icmp ne i32 %11, 0, !dbg !24464
  br i1 %12, label %13, label %14, !dbg !24465

13:                                               ; preds = %10, %7
  call void @allow_nr_1_arg_match(i32 72, i32 2, i32 7), !dbg !24466
  call void @allow_nr_1_arg_match(i32 72, i32 2, i32 6), !dbg !24468
  br label %14, !dbg !24469

14:                                               ; preds = %13, %10
  %15 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !24470
  %16 = icmp ne i32 %15, 0, !dbg !24470
  br i1 %16, label %17, label %18, !dbg !24472

17:                                               ; preds = %14
  call void @allow_nr_1_arg_match(i32 47, i32 3, i32 0), !dbg !24473
  call void @allow_nr_2_arg_match(i32 54, i32 2, i32 6, i32 3, i32 1), !dbg !24475
  br label %18, !dbg !24476

18:                                               ; preds = %17, %14
  %19 = load i32, i32* @tunable_syslog_enable, align 4, !dbg !24477
  %20 = icmp ne i32 %19, 0, !dbg !24477
  br i1 %20, label %21, label %22, !dbg !24479

21:                                               ; preds = %18
  call void @reject_nr(i32 41, i32 13), !dbg !24480
  br label %22, !dbg !24482

22:                                               ; preds = %21, %18
  ret void, !dbg !24483
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @seccomp_sandbox_setup_base() #0 !dbg !24484 {
  call void @allow_nr(i32 0), !dbg !24485
  call void @allow_nr(i32 1), !dbg !24486
  call void @allow_nr_2_arg_match(i32 9, i32 3, i32 3, i32 4, i32 34), !dbg !24487
  call void @allow_nr_1_arg_mask(i32 10, i32 3, i32 1), !dbg !24488
  call void @allow_nr(i32 11), !dbg !24489
  call void @allow_nr(i32 12), !dbg !24490
  call void @reject_nr(i32 25, i32 38), !dbg !24491
  call void @allow_nr(i32 96), !dbg !24492
  call void @allow_nr(i32 15), !dbg !24493
  call void @allow_nr(i32 219), !dbg !24494
  call void @allow_nr(i32 3), !dbg !24495
  call void @allow_nr(i32 231), !dbg !24496
  ret void, !dbg !24497
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @allow_nr_1_arg_match(i32, i32, i32) #0 !dbg !24498 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24501, metadata !DIExpression()), !dbg !24502
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !24503, metadata !DIExpression()), !dbg !24504
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !24505, metadata !DIExpression()), !dbg !24506
  %7 = load i64, i64* @s_syscall_index, align 8, !dbg !24507
  %8 = icmp uge i64 %7, 100, !dbg !24509
  br i1 %8, label %9, label %10, !dbg !24510

9:                                                ; preds = %3
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.1443, i32 0, i32 0)), !dbg !24511
  br label %10, !dbg !24513

10:                                               ; preds = %9, %3
  %11 = load i32, i32* %4, align 4, !dbg !24514
  %12 = icmp slt i32 %11, 0, !dbg !24516
  br i1 %12, label %13, label %14, !dbg !24517

13:                                               ; preds = %10
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.1444, i32 0, i32 0)), !dbg !24518
  br label %14, !dbg !24520

14:                                               ; preds = %13, %10
  %15 = load i32, i32* %5, align 4, !dbg !24521
  %16 = icmp slt i32 %15, 1, !dbg !24523
  br i1 %16, label %20, label %17, !dbg !24524

17:                                               ; preds = %14
  %18 = load i32, i32* %5, align 4, !dbg !24525
  %19 = icmp sgt i32 %18, 6, !dbg !24526
  br i1 %19, label %20, label %21, !dbg !24527

20:                                               ; preds = %17, %14
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5.1448, i32 0, i32 0)), !dbg !24528
  br label %21, !dbg !24530

21:                                               ; preds = %20, %17
  %22 = load i32, i32* %5, align 4, !dbg !24531
  %23 = load i64, i64* @s_syscall_index, align 8, !dbg !24532
  %24 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %23, !dbg !24533
  store i32 %22, i32* %24, align 4, !dbg !24534
  %25 = load i32, i32* %6, align 4, !dbg !24535
  %26 = load i64, i64* @s_syscall_index, align 8, !dbg !24536
  %27 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_1, i64 0, i64 %26, !dbg !24537
  store i32 %25, i32* %27, align 4, !dbg !24538
  %28 = load i64, i64* @s_syscall_index, align 8, !dbg !24539
  %29 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %28, !dbg !24540
  store i32 0, i32* %29, align 4, !dbg !24541
  %30 = load i32, i32* %4, align 4, !dbg !24542
  %31 = load i64, i64* @s_syscall_index, align 8, !dbg !24543
  %32 = add i64 %31, 1, !dbg !24543
  store i64 %32, i64* @s_syscall_index, align 8, !dbg !24543
  %33 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %31, !dbg !24544
  store i32 %30, i32* %33, align 4, !dbg !24545
  %34 = load i64, i64* @s_1_arg_validations, align 8, !dbg !24546
  %35 = add i64 %34, 1, !dbg !24546
  store i64 %35, i64* @s_1_arg_validations, align 8, !dbg !24546
  ret void, !dbg !24547
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @allow_nr(i32) #0 !dbg !24548 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !24549, metadata !DIExpression()), !dbg !24550
  %3 = load i64, i64* @s_syscall_index, align 8, !dbg !24551
  %4 = icmp uge i64 %3, 100, !dbg !24553
  br i1 %4, label %5, label %6, !dbg !24554

5:                                                ; preds = %1
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.1443, i32 0, i32 0)), !dbg !24555
  br label %6, !dbg !24557

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !24558
  %8 = icmp slt i32 %7, 0, !dbg !24560
  br i1 %8, label %9, label %10, !dbg !24561

9:                                                ; preds = %6
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.1444, i32 0, i32 0)), !dbg !24562
  br label %10, !dbg !24564

10:                                               ; preds = %9, %6
  %11 = load i64, i64* @s_syscall_index, align 8, !dbg !24565
  %12 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %11, !dbg !24566
  store i32 0, i32* %12, align 4, !dbg !24567
  %13 = load i32, i32* %2, align 4, !dbg !24568
  %14 = load i64, i64* @s_syscall_index, align 8, !dbg !24569
  %15 = add i64 %14, 1, !dbg !24569
  store i64 %15, i64* @s_syscall_index, align 8, !dbg !24569
  %16 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %14, !dbg !24570
  store i32 %13, i32* %16, align 4, !dbg !24571
  ret void, !dbg !24572
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @allow_nr_2_arg_mask_match(i32, i32, i32, i32, i32) #0 !dbg !24573 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !24576, metadata !DIExpression()), !dbg !24577
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !24578, metadata !DIExpression()), !dbg !24579
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !24580, metadata !DIExpression()), !dbg !24581
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !24582, metadata !DIExpression()), !dbg !24583
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !24584, metadata !DIExpression()), !dbg !24585
  %11 = load i64, i64* @s_syscall_index, align 8, !dbg !24586
  %12 = icmp uge i64 %11, 100, !dbg !24588
  br i1 %12, label %13, label %14, !dbg !24589

13:                                               ; preds = %5
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.1443, i32 0, i32 0)), !dbg !24590
  br label %14, !dbg !24592

14:                                               ; preds = %13, %5
  %15 = load i32, i32* %6, align 4, !dbg !24593
  %16 = icmp slt i32 %15, 0, !dbg !24595
  br i1 %16, label %17, label %18, !dbg !24596

17:                                               ; preds = %14
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.1444, i32 0, i32 0)), !dbg !24597
  br label %18, !dbg !24599

18:                                               ; preds = %17, %14
  %19 = load i32, i32* %7, align 4, !dbg !24600
  %20 = icmp slt i32 %19, 1, !dbg !24602
  br i1 %20, label %24, label %21, !dbg !24603

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4, !dbg !24604
  %23 = icmp sgt i32 %22, 6, !dbg !24605
  br i1 %23, label %24, label %25, !dbg !24606

24:                                               ; preds = %21, %18
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.1446, i32 0, i32 0)), !dbg !24607
  br label %25, !dbg !24609

25:                                               ; preds = %24, %21
  %26 = load i32, i32* %9, align 4, !dbg !24610
  %27 = icmp slt i32 %26, 1, !dbg !24612
  br i1 %27, label %31, label %28, !dbg !24613

28:                                               ; preds = %25
  %29 = load i32, i32* %9, align 4, !dbg !24614
  %30 = icmp sgt i32 %29, 6, !dbg !24615
  br i1 %30, label %31, label %32, !dbg !24616

31:                                               ; preds = %28, %25
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.1447, i32 0, i32 0)), !dbg !24617
  br label %32, !dbg !24619

32:                                               ; preds = %31, %28
  %33 = load i32, i32* %7, align 4, !dbg !24620
  %34 = add nsw i32 100, %33, !dbg !24621
  %35 = load i64, i64* @s_syscall_index, align 8, !dbg !24622
  %36 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %35, !dbg !24623
  store i32 %34, i32* %36, align 4, !dbg !24624
  %37 = load i32, i32* %8, align 4, !dbg !24625
  %38 = load i64, i64* @s_syscall_index, align 8, !dbg !24626
  %39 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_1, i64 0, i64 %38, !dbg !24627
  store i32 %37, i32* %39, align 4, !dbg !24628
  %40 = load i32, i32* %9, align 4, !dbg !24629
  %41 = load i64, i64* @s_syscall_index, align 8, !dbg !24630
  %42 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_2, i64 0, i64 %41, !dbg !24631
  store i32 %40, i32* %42, align 4, !dbg !24632
  %43 = load i32, i32* %10, align 4, !dbg !24633
  %44 = load i64, i64* @s_syscall_index, align 8, !dbg !24634
  %45 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_2, i64 0, i64 %44, !dbg !24635
  store i32 %43, i32* %45, align 4, !dbg !24636
  %46 = load i64, i64* @s_syscall_index, align 8, !dbg !24637
  %47 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %46, !dbg !24638
  store i32 0, i32* %47, align 4, !dbg !24639
  %48 = load i32, i32* %6, align 4, !dbg !24640
  %49 = load i64, i64* @s_syscall_index, align 8, !dbg !24641
  %50 = add i64 %49, 1, !dbg !24641
  store i64 %50, i64* @s_syscall_index, align 8, !dbg !24641
  %51 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %49, !dbg !24642
  store i32 %48, i32* %51, align 4, !dbg !24643
  %52 = load i64, i64* @s_2_arg_validations, align 8, !dbg !24644
  %53 = add i64 %52, 1, !dbg !24644
  store i64 %53, i64* @s_2_arg_validations, align 8, !dbg !24644
  ret void, !dbg !24645
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @allow_nr_2_arg_match(i32, i32, i32, i32, i32) #0 !dbg !24646 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !24647, metadata !DIExpression()), !dbg !24648
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !24649, metadata !DIExpression()), !dbg !24650
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !24651, metadata !DIExpression()), !dbg !24652
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !24653, metadata !DIExpression()), !dbg !24654
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !24655, metadata !DIExpression()), !dbg !24656
  %11 = load i64, i64* @s_syscall_index, align 8, !dbg !24657
  %12 = icmp uge i64 %11, 100, !dbg !24659
  br i1 %12, label %13, label %14, !dbg !24660

13:                                               ; preds = %5
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.1443, i32 0, i32 0)), !dbg !24661
  br label %14, !dbg !24663

14:                                               ; preds = %13, %5
  %15 = load i32, i32* %6, align 4, !dbg !24664
  %16 = icmp slt i32 %15, 0, !dbg !24666
  br i1 %16, label %17, label %18, !dbg !24667

17:                                               ; preds = %14
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.1444, i32 0, i32 0)), !dbg !24668
  br label %18, !dbg !24670

18:                                               ; preds = %17, %14
  %19 = load i32, i32* %7, align 4, !dbg !24671
  %20 = icmp slt i32 %19, 1, !dbg !24673
  br i1 %20, label %24, label %21, !dbg !24674

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4, !dbg !24675
  %23 = icmp sgt i32 %22, 6, !dbg !24676
  br i1 %23, label %24, label %25, !dbg !24677

24:                                               ; preds = %21, %18
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.1446, i32 0, i32 0)), !dbg !24678
  br label %25, !dbg !24680

25:                                               ; preds = %24, %21
  %26 = load i32, i32* %9, align 4, !dbg !24681
  %27 = icmp slt i32 %26, 1, !dbg !24683
  br i1 %27, label %31, label %28, !dbg !24684

28:                                               ; preds = %25
  %29 = load i32, i32* %9, align 4, !dbg !24685
  %30 = icmp sgt i32 %29, 6, !dbg !24686
  br i1 %30, label %31, label %32, !dbg !24687

31:                                               ; preds = %28, %25
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.1447, i32 0, i32 0)), !dbg !24688
  br label %32, !dbg !24690

32:                                               ; preds = %31, %28
  %33 = load i32, i32* %7, align 4, !dbg !24691
  %34 = load i64, i64* @s_syscall_index, align 8, !dbg !24692
  %35 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %34, !dbg !24693
  store i32 %33, i32* %35, align 4, !dbg !24694
  %36 = load i32, i32* %8, align 4, !dbg !24695
  %37 = load i64, i64* @s_syscall_index, align 8, !dbg !24696
  %38 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_1, i64 0, i64 %37, !dbg !24697
  store i32 %36, i32* %38, align 4, !dbg !24698
  %39 = load i32, i32* %9, align 4, !dbg !24699
  %40 = load i64, i64* @s_syscall_index, align 8, !dbg !24700
  %41 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_2, i64 0, i64 %40, !dbg !24701
  store i32 %39, i32* %41, align 4, !dbg !24702
  %42 = load i32, i32* %10, align 4, !dbg !24703
  %43 = load i64, i64* @s_syscall_index, align 8, !dbg !24704
  %44 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_2, i64 0, i64 %43, !dbg !24705
  store i32 %42, i32* %44, align 4, !dbg !24706
  %45 = load i64, i64* @s_syscall_index, align 8, !dbg !24707
  %46 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %45, !dbg !24708
  store i32 0, i32* %46, align 4, !dbg !24709
  %47 = load i32, i32* %6, align 4, !dbg !24710
  %48 = load i64, i64* @s_syscall_index, align 8, !dbg !24711
  %49 = add i64 %48, 1, !dbg !24711
  store i64 %49, i64* @s_syscall_index, align 8, !dbg !24711
  %50 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %48, !dbg !24712
  store i32 %47, i32* %50, align 4, !dbg !24713
  %51 = load i64, i64* @s_2_arg_validations, align 8, !dbg !24714
  %52 = add i64 %51, 1, !dbg !24714
  store i64 %52, i64* @s_2_arg_validations, align 8, !dbg !24714
  ret void, !dbg !24715
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @reject_nr(i32, i32) #0 !dbg !24716 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24717, metadata !DIExpression()), !dbg !24718
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24719, metadata !DIExpression()), !dbg !24720
  %5 = load i64, i64* @s_syscall_index, align 8, !dbg !24721
  %6 = icmp uge i64 %5, 100, !dbg !24723
  br i1 %6, label %7, label %8, !dbg !24724

7:                                                ; preds = %2
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.1443, i32 0, i32 0)), !dbg !24725
  br label %8, !dbg !24727

8:                                                ; preds = %7, %2
  %9 = load i32, i32* %3, align 4, !dbg !24728
  %10 = icmp slt i32 %9, 0, !dbg !24730
  br i1 %10, label %11, label %12, !dbg !24731

11:                                               ; preds = %8
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.1444, i32 0, i32 0)), !dbg !24732
  br label %12, !dbg !24734

12:                                               ; preds = %11, %8
  %13 = load i32, i32* %4, align 4, !dbg !24735
  %14 = icmp slt i32 %13, 0, !dbg !24737
  br i1 %14, label %18, label %15, !dbg !24738

15:                                               ; preds = %12
  %16 = load i32, i32* %4, align 4, !dbg !24739
  %17 = icmp sgt i32 %16, 255, !dbg !24740
  br i1 %17, label %18, label %19, !dbg !24741

18:                                               ; preds = %15, %12
  call void @bug(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.1445, i32 0, i32 0)), !dbg !24742
  br label %19, !dbg !24744

19:                                               ; preds = %18, %15
  %20 = load i32, i32* %4, align 4, !dbg !24745
  %21 = load i64, i64* @s_syscall_index, align 8, !dbg !24746
  %22 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %21, !dbg !24747
  store i32 %20, i32* %22, align 4, !dbg !24748
  %23 = load i32, i32* %3, align 4, !dbg !24749
  %24 = load i64, i64* @s_syscall_index, align 8, !dbg !24750
  %25 = add i64 %24, 1, !dbg !24750
  store i64 %25, i64* @s_syscall_index, align 8, !dbg !24750
  %26 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %24, !dbg !24751
  store i32 %23, i32* %26, align 4, !dbg !24752
  ret void, !dbg !24753
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @allow_nr_1_arg_mask(i32, i32, i32) #0 !dbg !24754 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24755, metadata !DIExpression()), !dbg !24756
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !24757, metadata !DIExpression()), !dbg !24758
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !24759, metadata !DIExpression()), !dbg !24760
  %7 = load i64, i64* @s_syscall_index, align 8, !dbg !24761
  %8 = icmp uge i64 %7, 100, !dbg !24763
  br i1 %8, label %9, label %10, !dbg !24764

9:                                                ; preds = %3
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.1443, i32 0, i32 0)), !dbg !24765
  br label %10, !dbg !24767

10:                                               ; preds = %9, %3
  %11 = load i32, i32* %4, align 4, !dbg !24768
  %12 = icmp slt i32 %11, 0, !dbg !24770
  br i1 %12, label %13, label %14, !dbg !24771

13:                                               ; preds = %10
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.1444, i32 0, i32 0)), !dbg !24772
  br label %14, !dbg !24774

14:                                               ; preds = %13, %10
  %15 = load i32, i32* %5, align 4, !dbg !24775
  %16 = icmp slt i32 %15, 1, !dbg !24777
  br i1 %16, label %20, label %17, !dbg !24778

17:                                               ; preds = %14
  %18 = load i32, i32* %5, align 4, !dbg !24779
  %19 = icmp sgt i32 %18, 6, !dbg !24780
  br i1 %19, label %20, label %21, !dbg !24781

20:                                               ; preds = %17, %14
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5.1448, i32 0, i32 0)), !dbg !24782
  br label %21, !dbg !24784

21:                                               ; preds = %20, %17
  %22 = load i32, i32* %5, align 4, !dbg !24785
  %23 = add nsw i32 100, %22, !dbg !24786
  %24 = load i64, i64* @s_syscall_index, align 8, !dbg !24787
  %25 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %24, !dbg !24788
  store i32 %23, i32* %25, align 4, !dbg !24789
  %26 = load i32, i32* %6, align 4, !dbg !24790
  %27 = load i64, i64* @s_syscall_index, align 8, !dbg !24791
  %28 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_1, i64 0, i64 %27, !dbg !24792
  store i32 %26, i32* %28, align 4, !dbg !24793
  %29 = load i64, i64* @s_syscall_index, align 8, !dbg !24794
  %30 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %29, !dbg !24795
  store i32 0, i32* %30, align 4, !dbg !24796
  %31 = load i32, i32* %4, align 4, !dbg !24797
  %32 = load i64, i64* @s_syscall_index, align 8, !dbg !24798
  %33 = add i64 %32, 1, !dbg !24798
  store i64 %33, i64* @s_syscall_index, align 8, !dbg !24798
  %34 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %32, !dbg !24799
  store i32 %31, i32* %34, align 4, !dbg !24800
  %35 = load i64, i64* @s_1_arg_validations, align 8, !dbg !24801
  %36 = add i64 %35, 1, !dbg !24801
  store i64 %36, i64* @s_1_arg_validations, align 8, !dbg !24801
  ret void, !dbg !24802
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @seccomp_sandbox_setup_postlogin(%struct.vsf_session*) #0 !dbg !24803 {
  %2 = alloca %struct.vsf_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.vsf_session* %0, %struct.vsf_session** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.vsf_session** %2, metadata !24804, metadata !DIExpression()), !dbg !24805
  call void @llvm.dbg.declare(metadata i32* %3, metadata !24806, metadata !DIExpression()), !dbg !24807
  %5 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !24808
  %6 = getelementptr inbounds %struct.vsf_session, %struct.vsf_session* %5, i32 0, i32 12, !dbg !24809
  %7 = load i32, i32* %6, align 8, !dbg !24809
  store i32 %7, i32* %3, align 4, !dbg !24807
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24810, metadata !DIExpression()), !dbg !24811
  store i32 625856, i32* %4, align 4, !dbg !24811
  %8 = load i32, i32* @tunable_write_enable, align 4, !dbg !24812
  %9 = icmp ne i32 %8, 0, !dbg !24812
  br i1 %9, label %10, label %13, !dbg !24814

10:                                               ; preds = %1
  %11 = load i32, i32* %4, align 4, !dbg !24815
  %12 = or i32 %11, 3, !dbg !24815
  store i32 %12, i32* %4, align 4, !dbg !24815
  br label %13, !dbg !24817

13:                                               ; preds = %10, %1
  call void @allow_nr(i32 6), !dbg !24818
  %14 = load %struct.vsf_session*, %struct.vsf_session** %2, align 8, !dbg !24819
  call void @seccomp_sandbox_setup_prelogin(%struct.vsf_session* %14), !dbg !24820
  %15 = load i32, i32* @tunable_xferlog_enable, align 4, !dbg !24821
  %16 = icmp ne i32 %15, 0, !dbg !24821
  br i1 %16, label %23, label %17, !dbg !24823

17:                                               ; preds = %13
  %18 = load i32, i32* @tunable_dual_log_enable, align 4, !dbg !24824
  %19 = icmp ne i32 %18, 0, !dbg !24824
  br i1 %19, label %23, label %20, !dbg !24825

20:                                               ; preds = %17
  %21 = load i32, i32* @tunable_lock_upload_files, align 4, !dbg !24826
  %22 = icmp ne i32 %21, 0, !dbg !24826
  br i1 %22, label %23, label %24, !dbg !24827

23:                                               ; preds = %20, %17, %13
  call void @allow_nr_1_arg_match(i32 72, i32 2, i32 7), !dbg !24828
  call void @allow_nr_1_arg_match(i32 72, i32 2, i32 6), !dbg !24830
  br label %24, !dbg !24831

24:                                               ; preds = %23, %20
  %25 = load i32, i32* @tunable_async_abor_enable, align 4, !dbg !24832
  %26 = icmp ne i32 %25, 0, !dbg !24832
  br i1 %26, label %27, label %29, !dbg !24834

27:                                               ; preds = %24
  %28 = call i32 @vsf_sysutil_getpid(), !dbg !24835
  call void @allow_nr_2_arg_match(i32 72, i32 2, i32 8, i32 3, i32 %28), !dbg !24837
  br label %29, !dbg !24838

29:                                               ; preds = %27, %24
  call void @allow_nr_2_arg_match(i32 54, i32 2, i32 1, i32 3, i32 9), !dbg !24839
  call void @allow_nr_2_arg_match(i32 54, i32 2, i32 1, i32 3, i32 13), !dbg !24840
  call void @allow_nr_2_arg_match(i32 54, i32 2, i32 0, i32 3, i32 1), !dbg !24841
  call void @allow_nr(i32 5), !dbg !24842
  call void @allow_nr(i32 8), !dbg !24843
  %30 = load i32, i32* %4, align 4, !dbg !24844
  call void @allow_nr_1_arg_mask(i32 2, i32 2, i32 %30), !dbg !24845
  %31 = load i32, i32* %4, align 4, !dbg !24846
  call void @allow_nr_1_arg_mask(i32 257, i32 3, i32 %31), !dbg !24847
  call void @allow_nr(i32 4), !dbg !24848
  call void @allow_nr(i32 89), !dbg !24849
  call void @allow_nr(i32 79), !dbg !24850
  call void @allow_nr(i32 80), !dbg !24851
  call void @allow_nr(i32 78), !dbg !24852
  call void @allow_nr(i32 95), !dbg !24853
  %32 = load i32, i32* @tunable_use_sendfile, align 4, !dbg !24854
  %33 = icmp ne i32 %32, 0, !dbg !24854
  br i1 %33, label %34, label %35, !dbg !24856

34:                                               ; preds = %29
  call void @allow_nr(i32 40), !dbg !24857
  br label %35, !dbg !24859

35:                                               ; preds = %34, %29
  %36 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !24860
  %37 = icmp ugt i32 %36, 0, !dbg !24862
  br i1 %37, label %44, label %38, !dbg !24863

38:                                               ; preds = %35
  %39 = load i32, i32* @tunable_data_connection_timeout, align 4, !dbg !24864
  %40 = icmp ugt i32 %39, 0, !dbg !24865
  br i1 %40, label %44, label %41, !dbg !24866

41:                                               ; preds = %38
  %42 = load i32, i32* @tunable_async_abor_enable, align 4, !dbg !24867
  %43 = icmp ne i32 %42, 0, !dbg !24867
  br i1 %43, label %44, label %45, !dbg !24868

44:                                               ; preds = %41, %38, %35
  call void @allow_nr(i32 13), !dbg !24869
  br label %45, !dbg !24871

45:                                               ; preds = %44, %41
  %46 = load i32, i32* @tunable_idle_session_timeout, align 4, !dbg !24872
  %47 = icmp ugt i32 %46, 0, !dbg !24874
  br i1 %47, label %51, label %48, !dbg !24875

48:                                               ; preds = %45
  %49 = load i32, i32* @tunable_data_connection_timeout, align 4, !dbg !24876
  %50 = icmp ugt i32 %49, 0, !dbg !24877
  br i1 %50, label %51, label %52, !dbg !24878

51:                                               ; preds = %48, %45
  call void @allow_nr(i32 37), !dbg !24879
  br label %52, !dbg !24881

52:                                               ; preds = %51, %48
  %53 = load i32, i32* @tunable_one_process_model, align 4, !dbg !24882
  %54 = icmp ne i32 %53, 0, !dbg !24882
  br i1 %54, label %55, label %63, !dbg !24884

55:                                               ; preds = %52
  call void @seccomp_sandbox_setup_data_connections(), !dbg !24885
  %56 = load i32, i32* %3, align 4, !dbg !24887
  %57 = icmp ne i32 %56, 0, !dbg !24887
  br i1 %57, label %58, label %62, !dbg !24889

58:                                               ; preds = %55
  %59 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !24890
  %60 = icmp ne i32 %59, 0, !dbg !24890
  br i1 %60, label %61, label %62, !dbg !24891

61:                                               ; preds = %58
  call void @allow_nr(i32 91), !dbg !24892
  call void @allow_nr(i32 93), !dbg !24894
  br label %62, !dbg !24895

62:                                               ; preds = %61, %58, %55
  br label %74, !dbg !24896

63:                                               ; preds = %52
  call void @allow_nr_1_arg_match(i32 47, i32 3, i32 0), !dbg !24897
  %64 = load i32, i32* %3, align 4, !dbg !24899
  %65 = icmp ne i32 %64, 0, !dbg !24899
  br i1 %65, label %66, label %69, !dbg !24901

66:                                               ; preds = %63
  %67 = load i32, i32* @tunable_chown_uploads, align 4, !dbg !24902
  %68 = icmp ne i32 %67, 0, !dbg !24902
  br i1 %68, label %72, label %69, !dbg !24903

69:                                               ; preds = %66, %63
  %70 = load i32, i32* @tunable_ssl_enable, align 4, !dbg !24904
  %71 = icmp ne i32 %70, 0, !dbg !24904
  br i1 %71, label %72, label %73, !dbg !24905

72:                                               ; preds = %69, %66
  call void @allow_nr_1_arg_match(i32 46, i32 3, i32 0), !dbg !24906
  br label %73, !dbg !24908

73:                                               ; preds = %72, %69
  br label %74

74:                                               ; preds = %73, %62
  %75 = load i32, i32* @tunable_syslog_enable, align 4, !dbg !24909
  %76 = icmp ne i32 %75, 0, !dbg !24909
  br i1 %76, label %77, label %78, !dbg !24911

77:                                               ; preds = %74
  call void @allow_nr_1_arg_match(i32 44, i32 6, i32 0), !dbg !24912
  br label %78, !dbg !24914

78:                                               ; preds = %77, %74
  %79 = load i32, i32* @tunable_text_userdb_names, align 4, !dbg !24915
  %80 = icmp ne i32 %79, 0, !dbg !24915
  br i1 %80, label %81, label %82, !dbg !24917

81:                                               ; preds = %78
  call void @reject_nr(i32 41, i32 13), !dbg !24918
  call void @allow_nr_2_arg_match(i32 9, i32 3, i32 1, i32 4, i32 1), !dbg !24920
  br label %82, !dbg !24921

82:                                               ; preds = %81, %78
  %83 = load i32, i32* @tunable_write_enable, align 4, !dbg !24922
  %84 = icmp ne i32 %83, 0, !dbg !24922
  br i1 %84, label %85, label %121, !dbg !24924

85:                                               ; preds = %82
  %86 = load i32, i32* %3, align 4, !dbg !24925
  %87 = icmp ne i32 %86, 0, !dbg !24925
  br i1 %87, label %88, label %91, !dbg !24928

88:                                               ; preds = %85
  %89 = load i32, i32* @tunable_anon_mkdir_write_enable, align 4, !dbg !24929
  %90 = icmp ne i32 %89, 0, !dbg !24929
  br i1 %90, label %91, label %92, !dbg !24930

91:                                               ; preds = %88, %85
  call void @allow_nr(i32 83), !dbg !24931
  br label %92, !dbg !24933

92:                                               ; preds = %91, %88
  %93 = load i32, i32* %3, align 4, !dbg !24934
  %94 = icmp ne i32 %93, 0, !dbg !24934
  br i1 %94, label %95, label %101, !dbg !24936

95:                                               ; preds = %92
  %96 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !24937
  %97 = icmp ne i32 %96, 0, !dbg !24937
  br i1 %97, label %101, label %98, !dbg !24938

98:                                               ; preds = %95
  %99 = load i32, i32* @tunable_delete_failed_uploads, align 4, !dbg !24939
  %100 = icmp ne i32 %99, 0, !dbg !24939
  br i1 %100, label %101, label %102, !dbg !24940

101:                                              ; preds = %98, %95, %92
  call void @allow_nr(i32 87), !dbg !24941
  br label %102, !dbg !24943

102:                                              ; preds = %101, %98
  %103 = load i32, i32* %3, align 4, !dbg !24944
  %104 = icmp ne i32 %103, 0, !dbg !24944
  br i1 %104, label %105, label %108, !dbg !24946

105:                                              ; preds = %102
  %106 = load i32, i32* @tunable_anon_other_write_enable, align 4, !dbg !24947
  %107 = icmp ne i32 %106, 0, !dbg !24947
  br i1 %107, label %108, label %113, !dbg !24948

108:                                              ; preds = %105, %102
  call void @allow_nr(i32 84), !dbg !24949
  call void @allow_nr(i32 82), !dbg !24951
  call void @allow_nr(i32 77), !dbg !24952
  %109 = load i32, i32* @tunable_mdtm_write, align 4, !dbg !24953
  %110 = icmp ne i32 %109, 0, !dbg !24953
  br i1 %110, label %111, label %112, !dbg !24955

111:                                              ; preds = %108
  call void @allow_nr(i32 132), !dbg !24956
  call void @allow_nr(i32 235), !dbg !24958
  br label %112, !dbg !24959

112:                                              ; preds = %111, %108
  br label %113, !dbg !24960

113:                                              ; preds = %112, %105
  %114 = load i32, i32* %3, align 4, !dbg !24961
  %115 = icmp ne i32 %114, 0, !dbg !24961
  br i1 %115, label %120, label %116, !dbg !24963

116:                                              ; preds = %113
  %117 = load i32, i32* @tunable_chmod_enable, align 4, !dbg !24964
  %118 = icmp ne i32 %117, 0, !dbg !24964
  br i1 %118, label %119, label %120, !dbg !24965

119:                                              ; preds = %116
  call void @allow_nr(i32 90), !dbg !24966
  br label %120, !dbg !24968

120:                                              ; preds = %119, %116, %113
  br label %121, !dbg !24969

121:                                              ; preds = %120, %82
  ret void, !dbg !24970
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @seccomp_sandbox_setup_data_connections() #0 !dbg !24971 {
  call void @allow_nr_3_arg_match(i32 41, i32 1, i32 2, i32 2, i32 1, i32 3, i32 6), !dbg !24972
  call void @allow_nr_3_arg_match(i32 41, i32 1, i32 10, i32 2, i32 1, i32 3, i32 6), !dbg !24973
  call void @allow_nr(i32 49), !dbg !24974
  call void @allow_nr(i32 23), !dbg !24975
  %1 = load i32, i32* @tunable_port_enable, align 4, !dbg !24976
  %2 = icmp ne i32 %1, 0, !dbg !24976
  br i1 %2, label %3, label %4, !dbg !24978

3:                                                ; preds = %0
  call void @allow_nr(i32 42), !dbg !24979
  call void @allow_nr_2_arg_match(i32 55, i32 2, i32 1, i32 3, i32 4), !dbg !24981
  call void @allow_nr_2_arg_match(i32 54, i32 2, i32 1, i32 3, i32 2), !dbg !24982
  call void @allow_nr_1_arg_match(i32 72, i32 2, i32 3), !dbg !24983
  call void @allow_nr_2_arg_match(i32 72, i32 2, i32 4, i32 3, i32 2050), !dbg !24984
  call void @allow_nr_2_arg_match(i32 72, i32 2, i32 4, i32 3, i32 2), !dbg !24985
  br label %4, !dbg !24986

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @tunable_pasv_enable, align 4, !dbg !24987
  %6 = icmp ne i32 %5, 0, !dbg !24987
  br i1 %6, label %7, label %8, !dbg !24989

7:                                                ; preds = %4
  call void @allow_nr(i32 50), !dbg !24990
  call void @allow_nr(i32 43), !dbg !24992
  br label %8, !dbg !24993

8:                                                ; preds = %7, %4
  ret void, !dbg !24994
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @allow_nr_3_arg_match(i32, i32, i32, i32, i32, i32, i32) #0 !dbg !24995 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !24998, metadata !DIExpression()), !dbg !24999
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !25000, metadata !DIExpression()), !dbg !25001
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25002, metadata !DIExpression()), !dbg !25003
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !25004, metadata !DIExpression()), !dbg !25005
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25006, metadata !DIExpression()), !dbg !25007
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !25008, metadata !DIExpression()), !dbg !25009
  store i32 %6, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !25010, metadata !DIExpression()), !dbg !25011
  %15 = load i64, i64* @s_syscall_index, align 8, !dbg !25012
  %16 = icmp uge i64 %15, 100, !dbg !25014
  br i1 %16, label %17, label %18, !dbg !25015

17:                                               ; preds = %7
  call void @bug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.1443, i32 0, i32 0)), !dbg !25016
  br label %18, !dbg !25018

18:                                               ; preds = %17, %7
  %19 = load i32, i32* %8, align 4, !dbg !25019
  %20 = icmp slt i32 %19, 0, !dbg !25021
  br i1 %20, label %21, label %22, !dbg !25022

21:                                               ; preds = %18
  call void @bug(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.1444, i32 0, i32 0)), !dbg !25023
  br label %22, !dbg !25025

22:                                               ; preds = %21, %18
  %23 = load i32, i32* %9, align 4, !dbg !25026
  %24 = icmp slt i32 %23, 1, !dbg !25028
  br i1 %24, label %28, label %25, !dbg !25029

25:                                               ; preds = %22
  %26 = load i32, i32* %9, align 4, !dbg !25030
  %27 = icmp sgt i32 %26, 6, !dbg !25031
  br i1 %27, label %28, label %29, !dbg !25032

28:                                               ; preds = %25, %22
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.1446, i32 0, i32 0)), !dbg !25033
  br label %29, !dbg !25035

29:                                               ; preds = %28, %25
  %30 = load i32, i32* %11, align 4, !dbg !25036
  %31 = icmp slt i32 %30, 1, !dbg !25038
  br i1 %31, label %35, label %32, !dbg !25039

32:                                               ; preds = %29
  %33 = load i32, i32* %11, align 4, !dbg !25040
  %34 = icmp sgt i32 %33, 6, !dbg !25041
  br i1 %34, label %35, label %36, !dbg !25042

35:                                               ; preds = %32, %29
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.1447, i32 0, i32 0)), !dbg !25043
  br label %36, !dbg !25045

36:                                               ; preds = %35, %32
  %37 = load i32, i32* %13, align 4, !dbg !25046
  %38 = icmp slt i32 %37, 1, !dbg !25048
  br i1 %38, label %42, label %39, !dbg !25049

39:                                               ; preds = %36
  %40 = load i32, i32* %13, align 4, !dbg !25050
  %41 = icmp sgt i32 %40, 6, !dbg !25051
  br i1 %41, label %42, label %43, !dbg !25052

42:                                               ; preds = %39, %36
  call void @bug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.1451, i32 0, i32 0)), !dbg !25053
  br label %43, !dbg !25055

43:                                               ; preds = %42, %39
  %44 = load i32, i32* %9, align 4, !dbg !25056
  %45 = load i64, i64* @s_syscall_index, align 8, !dbg !25057
  %46 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %45, !dbg !25058
  store i32 %44, i32* %46, align 4, !dbg !25059
  %47 = load i32, i32* %10, align 4, !dbg !25060
  %48 = load i64, i64* @s_syscall_index, align 8, !dbg !25061
  %49 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_1, i64 0, i64 %48, !dbg !25062
  store i32 %47, i32* %49, align 4, !dbg !25063
  %50 = load i32, i32* %11, align 4, !dbg !25064
  %51 = load i64, i64* @s_syscall_index, align 8, !dbg !25065
  %52 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_2, i64 0, i64 %51, !dbg !25066
  store i32 %50, i32* %52, align 4, !dbg !25067
  %53 = load i32, i32* %12, align 4, !dbg !25068
  %54 = load i64, i64* @s_syscall_index, align 8, !dbg !25069
  %55 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_2, i64 0, i64 %54, !dbg !25070
  store i32 %53, i32* %55, align 4, !dbg !25071
  %56 = load i32, i32* %13, align 4, !dbg !25072
  %57 = load i64, i64* @s_syscall_index, align 8, !dbg !25073
  %58 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_3, i64 0, i64 %57, !dbg !25074
  store i32 %56, i32* %58, align 4, !dbg !25075
  %59 = load i32, i32* %14, align 4, !dbg !25076
  %60 = load i64, i64* @s_syscall_index, align 8, !dbg !25077
  %61 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_3, i64 0, i64 %60, !dbg !25078
  store i32 %59, i32* %61, align 4, !dbg !25079
  %62 = load i64, i64* @s_syscall_index, align 8, !dbg !25080
  %63 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %62, !dbg !25081
  store i32 0, i32* %63, align 4, !dbg !25082
  %64 = load i32, i32* %8, align 4, !dbg !25083
  %65 = load i64, i64* @s_syscall_index, align 8, !dbg !25084
  %66 = add i64 %65, 1, !dbg !25084
  store i64 %66, i64* @s_syscall_index, align 8, !dbg !25084
  %67 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %65, !dbg !25085
  store i32 %64, i32* %67, align 4, !dbg !25086
  %68 = load i64, i64* @s_3_arg_validations, align 8, !dbg !25087
  %69 = add i64 %68, 1, !dbg !25087
  store i64 %69, i64* @s_3_arg_validations, align 8, !dbg !25087
  ret void, !dbg !25088
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @seccomp_sandbox_setup_postlogin_broker() #0 !dbg !25089 {
  call void @seccomp_sandbox_setup_base(), !dbg !25090
  call void @seccomp_sandbox_setup_data_connections(), !dbg !25091
  call void @allow_nr_1_arg_match(i32 46, i32 3, i32 0), !dbg !25092
  ret void, !dbg !25093
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @seccomp_sandbox_lockdown() #0 !dbg !25094 {
  %1 = alloca i64, align 8
  %2 = alloca i8*, align 8
  %3 = alloca %struct.sock_filter*, align 8
  %4 = alloca %struct.sock_fprog, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32
  call void @llvm.dbg.declare(metadata i64* %1, metadata !25095, metadata !DIExpression()), !dbg !25096
  %14 = load i64, i64* @s_syscall_index, align 8, !dbg !25097
  %15 = mul i64 %14, 2, !dbg !25098
  %16 = load i64, i64* @s_1_arg_validations, align 8, !dbg !25099
  %17 = mul i64 %16, 3, !dbg !25100
  %18 = add i64 %15, %17, !dbg !25101
  %19 = load i64, i64* @s_2_arg_validations, align 8, !dbg !25102
  %20 = mul i64 %19, 5, !dbg !25103
  %21 = add i64 %18, %20, !dbg !25104
  %22 = load i64, i64* @s_3_arg_validations, align 8, !dbg !25105
  %23 = mul i64 %22, 7, !dbg !25106
  %24 = add i64 %21, %23, !dbg !25107
  %25 = add i64 %24, 5, !dbg !25108
  store i64 %25, i64* %1, align 8, !dbg !25096
  %26 = load i64, i64* %1, align 8, !dbg !25109
  %27 = call i8* @llvm.stacksave(), !dbg !25110
  store i8* %27, i8** %2, align 8, !dbg !25110
  %28 = alloca %struct.sock_filter, i64 %26, align 16, !dbg !25110
  call void @llvm.dbg.declare(metadata %struct.sock_filter* %28, metadata !25111, metadata !DIExpression()), !dbg !25124
  call void @llvm.dbg.declare(metadata %struct.sock_filter** %3, metadata !25125, metadata !DIExpression()), !dbg !25127
  store %struct.sock_filter* %28, %struct.sock_filter** %3, align 8, !dbg !25127
  call void @llvm.dbg.declare(metadata %struct.sock_fprog* %4, metadata !25128, metadata !DIExpression()), !dbg !25133
  call void @llvm.dbg.declare(metadata i64* %5, metadata !25134, metadata !DIExpression()), !dbg !25135
  call void @llvm.dbg.declare(metadata i32* %6, metadata !25136, metadata !DIExpression()), !dbg !25137
  %29 = load i64, i64* %1, align 8, !dbg !25138
  %30 = trunc i64 %29 to i16, !dbg !25138
  %31 = getelementptr inbounds %struct.sock_fprog, %struct.sock_fprog* %4, i32 0, i32 0, !dbg !25139
  store i16 %30, i16* %31, align 8, !dbg !25140
  %32 = getelementptr inbounds %struct.sock_fprog, %struct.sock_fprog* %4, i32 0, i32 1, !dbg !25141
  store %struct.sock_filter* %28, %struct.sock_filter** %32, align 8, !dbg !25142
  %33 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25143
  %34 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %33, i32 0, i32 0, !dbg !25144
  store i16 32, i16* %34, align 4, !dbg !25145
  %35 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25146
  %36 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %35, i32 0, i32 1, !dbg !25147
  store i8 0, i8* %36, align 2, !dbg !25148
  %37 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25149
  %38 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %37, i32 0, i32 2, !dbg !25150
  store i8 0, i8* %38, align 1, !dbg !25151
  %39 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25152
  %40 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %39, i32 0, i32 3, !dbg !25153
  store i32 4, i32* %40, align 4, !dbg !25154
  %41 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25155
  %42 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %41, i32 1, !dbg !25155
  store %struct.sock_filter* %42, %struct.sock_filter** %3, align 8, !dbg !25155
  %43 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25156
  %44 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %43, i32 0, i32 0, !dbg !25157
  store i16 21, i16* %44, align 4, !dbg !25158
  %45 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25159
  %46 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %45, i32 0, i32 1, !dbg !25160
  store i8 1, i8* %46, align 2, !dbg !25161
  %47 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25162
  %48 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %47, i32 0, i32 2, !dbg !25163
  store i8 0, i8* %48, align 1, !dbg !25164
  %49 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25165
  %50 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %49, i32 0, i32 3, !dbg !25166
  store i32 -1073741762, i32* %50, align 4, !dbg !25167
  %51 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25168
  %52 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %51, i32 1, !dbg !25168
  store %struct.sock_filter* %52, %struct.sock_filter** %3, align 8, !dbg !25168
  %53 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25169
  %54 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %53, i32 0, i32 0, !dbg !25170
  store i16 6, i16* %54, align 4, !dbg !25171
  %55 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25172
  %56 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %55, i32 0, i32 1, !dbg !25173
  store i8 0, i8* %56, align 2, !dbg !25174
  %57 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25175
  %58 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %57, i32 0, i32 2, !dbg !25176
  store i8 0, i8* %58, align 1, !dbg !25177
  %59 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25178
  %60 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %59, i32 0, i32 3, !dbg !25179
  store i32 0, i32* %60, align 4, !dbg !25180
  %61 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25181
  %62 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %61, i32 1, !dbg !25181
  store %struct.sock_filter* %62, %struct.sock_filter** %3, align 8, !dbg !25181
  %63 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25182
  %64 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %63, i32 0, i32 0, !dbg !25183
  store i16 32, i16* %64, align 4, !dbg !25184
  %65 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25185
  %66 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %65, i32 0, i32 1, !dbg !25186
  store i8 0, i8* %66, align 2, !dbg !25187
  %67 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25188
  %68 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %67, i32 0, i32 2, !dbg !25189
  store i8 0, i8* %68, align 1, !dbg !25190
  %69 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25191
  %70 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %69, i32 0, i32 3, !dbg !25192
  store i32 0, i32* %70, align 4, !dbg !25193
  %71 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25194
  %72 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %71, i32 1, !dbg !25194
  store %struct.sock_filter* %72, %struct.sock_filter** %3, align 8, !dbg !25194
  store i64 0, i64* %5, align 8, !dbg !25195
  br label %73, !dbg !25197

73:                                               ; preds = %273, %0
  %74 = load i64, i64* %5, align 8, !dbg !25198
  %75 = load i64, i64* @s_syscall_index, align 8, !dbg !25200
  %76 = icmp ult i64 %74, %75, !dbg !25201
  br i1 %76, label %77, label %276, !dbg !25202

77:                                               ; preds = %73
  call void @llvm.dbg.declare(metadata i32* %7, metadata !25203, metadata !DIExpression()), !dbg !25205
  store i32 1, i32* %7, align 4, !dbg !25205
  %78 = load i64, i64* %5, align 8, !dbg !25206
  %79 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_3, i64 0, i64 %78, !dbg !25208
  %80 = load i32, i32* %79, align 4, !dbg !25208
  %81 = icmp ne i32 %80, 0, !dbg !25208
  br i1 %81, label %82, label %83, !dbg !25209

82:                                               ; preds = %77
  store i32 8, i32* %7, align 4, !dbg !25210
  br label %97, !dbg !25212

83:                                               ; preds = %77
  %84 = load i64, i64* %5, align 8, !dbg !25213
  %85 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_2, i64 0, i64 %84, !dbg !25215
  %86 = load i32, i32* %85, align 4, !dbg !25215
  %87 = icmp ne i32 %86, 0, !dbg !25215
  br i1 %87, label %88, label %89, !dbg !25216

88:                                               ; preds = %83
  store i32 6, i32* %7, align 4, !dbg !25217
  br label %96, !dbg !25219

89:                                               ; preds = %83
  %90 = load i64, i64* %5, align 8, !dbg !25220
  %91 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %90, !dbg !25222
  %92 = load i32, i32* %91, align 4, !dbg !25222
  %93 = icmp ne i32 %92, 0, !dbg !25222
  br i1 %93, label %94, label %95, !dbg !25223

94:                                               ; preds = %89
  store i32 4, i32* %7, align 4, !dbg !25224
  br label %95, !dbg !25226

95:                                               ; preds = %94, %89
  br label %96

96:                                               ; preds = %95, %88
  br label %97

97:                                               ; preds = %96, %82
  %98 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25227
  %99 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %98, i32 0, i32 0, !dbg !25228
  store i16 21, i16* %99, align 4, !dbg !25229
  %100 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25230
  %101 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %100, i32 0, i32 1, !dbg !25231
  store i8 0, i8* %101, align 2, !dbg !25232
  %102 = load i32, i32* %7, align 4, !dbg !25233
  %103 = trunc i32 %102 to i8, !dbg !25233
  %104 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25234
  %105 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %104, i32 0, i32 2, !dbg !25235
  store i8 %103, i8* %105, align 1, !dbg !25236
  %106 = load i64, i64* %5, align 8, !dbg !25237
  %107 = getelementptr inbounds [100 x i32], [100 x i32]* @s_syscalls, i64 0, i64 %106, !dbg !25238
  %108 = load i32, i32* %107, align 4, !dbg !25238
  %109 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25239
  %110 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %109, i32 0, i32 3, !dbg !25240
  store i32 %108, i32* %110, align 4, !dbg !25241
  %111 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25242
  %112 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %111, i32 1, !dbg !25242
  store %struct.sock_filter* %112, %struct.sock_filter** %3, align 8, !dbg !25242
  %113 = load i64, i64* %5, align 8, !dbg !25243
  %114 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_3, i64 0, i64 %113, !dbg !25245
  %115 = load i32, i32* %114, align 4, !dbg !25245
  %116 = icmp ne i32 %115, 0, !dbg !25245
  br i1 %116, label %117, label %147, !dbg !25246

117:                                              ; preds = %97
  %118 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25247
  %119 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %118, i32 0, i32 0, !dbg !25249
  store i16 32, i16* %119, align 4, !dbg !25250
  %120 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25251
  %121 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %120, i32 0, i32 1, !dbg !25252
  store i8 0, i8* %121, align 2, !dbg !25253
  %122 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25254
  %123 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %122, i32 0, i32 2, !dbg !25255
  store i8 0, i8* %123, align 1, !dbg !25256
  %124 = load i64, i64* %5, align 8, !dbg !25257
  %125 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_3, i64 0, i64 %124, !dbg !25258
  %126 = load i32, i32* %125, align 4, !dbg !25258
  %127 = sub nsw i32 %126, 1, !dbg !25259
  %128 = mul nsw i32 %127, 8, !dbg !25260
  %129 = add nsw i32 16, %128, !dbg !25261
  %130 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25262
  %131 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %130, i32 0, i32 3, !dbg !25263
  store i32 %129, i32* %131, align 4, !dbg !25264
  %132 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25265
  %133 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %132, i32 1, !dbg !25265
  store %struct.sock_filter* %133, %struct.sock_filter** %3, align 8, !dbg !25265
  %134 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25266
  %135 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %134, i32 0, i32 0, !dbg !25267
  store i16 21, i16* %135, align 4, !dbg !25268
  %136 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25269
  %137 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %136, i32 0, i32 1, !dbg !25270
  store i8 0, i8* %137, align 2, !dbg !25271
  %138 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25272
  %139 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %138, i32 0, i32 2, !dbg !25273
  store i8 5, i8* %139, align 1, !dbg !25274
  %140 = load i64, i64* %5, align 8, !dbg !25275
  %141 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_3, i64 0, i64 %140, !dbg !25276
  %142 = load i32, i32* %141, align 4, !dbg !25276
  %143 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25277
  %144 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %143, i32 0, i32 3, !dbg !25278
  store i32 %142, i32* %144, align 4, !dbg !25279
  %145 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25280
  %146 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %145, i32 1, !dbg !25280
  store %struct.sock_filter* %146, %struct.sock_filter** %3, align 8, !dbg !25280
  br label %147, !dbg !25281

147:                                              ; preds = %117, %97
  %148 = load i64, i64* %5, align 8, !dbg !25282
  %149 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_2, i64 0, i64 %148, !dbg !25284
  %150 = load i32, i32* %149, align 4, !dbg !25284
  %151 = icmp ne i32 %150, 0, !dbg !25284
  br i1 %151, label %152, label %182, !dbg !25285

152:                                              ; preds = %147
  %153 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25286
  %154 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %153, i32 0, i32 0, !dbg !25288
  store i16 32, i16* %154, align 4, !dbg !25289
  %155 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25290
  %156 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %155, i32 0, i32 1, !dbg !25291
  store i8 0, i8* %156, align 2, !dbg !25292
  %157 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25293
  %158 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i32 0, i32 2, !dbg !25294
  store i8 0, i8* %158, align 1, !dbg !25295
  %159 = load i64, i64* %5, align 8, !dbg !25296
  %160 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_2, i64 0, i64 %159, !dbg !25297
  %161 = load i32, i32* %160, align 4, !dbg !25297
  %162 = sub nsw i32 %161, 1, !dbg !25298
  %163 = mul nsw i32 %162, 8, !dbg !25299
  %164 = add nsw i32 16, %163, !dbg !25300
  %165 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25301
  %166 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %165, i32 0, i32 3, !dbg !25302
  store i32 %164, i32* %166, align 4, !dbg !25303
  %167 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25304
  %168 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %167, i32 1, !dbg !25304
  store %struct.sock_filter* %168, %struct.sock_filter** %3, align 8, !dbg !25304
  %169 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25305
  %170 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %169, i32 0, i32 0, !dbg !25306
  store i16 21, i16* %170, align 4, !dbg !25307
  %171 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25308
  %172 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %171, i32 0, i32 1, !dbg !25309
  store i8 0, i8* %172, align 2, !dbg !25310
  %173 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25311
  %174 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %173, i32 0, i32 2, !dbg !25312
  store i8 3, i8* %174, align 1, !dbg !25313
  %175 = load i64, i64* %5, align 8, !dbg !25314
  %176 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_2, i64 0, i64 %175, !dbg !25315
  %177 = load i32, i32* %176, align 4, !dbg !25315
  %178 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25316
  %179 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %178, i32 0, i32 3, !dbg !25317
  store i32 %177, i32* %179, align 4, !dbg !25318
  %180 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25319
  %181 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %180, i32 1, !dbg !25319
  store %struct.sock_filter* %181, %struct.sock_filter** %3, align 8, !dbg !25319
  br label %182, !dbg !25320

182:                                              ; preds = %152, %147
  %183 = load i64, i64* %5, align 8, !dbg !25321
  %184 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %183, !dbg !25323
  %185 = load i32, i32* %184, align 4, !dbg !25323
  %186 = icmp ne i32 %185, 0, !dbg !25323
  br i1 %186, label %187, label %233, !dbg !25324

187:                                              ; preds = %182
  call void @llvm.dbg.declare(metadata i32* %8, metadata !25325, metadata !DIExpression()), !dbg !25327
  %188 = load i64, i64* %5, align 8, !dbg !25328
  %189 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %188, !dbg !25329
  %190 = load i32, i32* %189, align 4, !dbg !25329
  store i32 %190, i32* %8, align 4, !dbg !25327
  call void @llvm.dbg.declare(metadata i32* %9, metadata !25330, metadata !DIExpression()), !dbg !25331
  store i32 21, i32* %9, align 4, !dbg !25331
  call void @llvm.dbg.declare(metadata i32* %10, metadata !25332, metadata !DIExpression()), !dbg !25333
  %191 = load i64, i64* %5, align 8, !dbg !25334
  %192 = getelementptr inbounds [100 x i32], [100 x i32]* @s_vals_1, i64 0, i64 %191, !dbg !25335
  %193 = load i32, i32* %192, align 4, !dbg !25335
  store i32 %193, i32* %10, align 4, !dbg !25333
  call void @llvm.dbg.declare(metadata i32* %11, metadata !25336, metadata !DIExpression()), !dbg !25337
  store i32 0, i32* %11, align 4, !dbg !25337
  call void @llvm.dbg.declare(metadata i32* %12, metadata !25338, metadata !DIExpression()), !dbg !25339
  store i32 1, i32* %12, align 4, !dbg !25339
  %194 = load i32, i32* %8, align 4, !dbg !25340
  %195 = icmp sgt i32 %194, 100, !dbg !25342
  br i1 %195, label %196, label %201, !dbg !25343

196:                                              ; preds = %187
  %197 = load i32, i32* %8, align 4, !dbg !25344
  %198 = sub nsw i32 %197, 100, !dbg !25344
  store i32 %198, i32* %8, align 4, !dbg !25344
  store i32 69, i32* %9, align 4, !dbg !25346
  %199 = load i32, i32* %10, align 4, !dbg !25347
  %200 = xor i32 %199, -1, !dbg !25348
  store i32 %200, i32* %10, align 4, !dbg !25349
  store i32 1, i32* %11, align 4, !dbg !25350
  store i32 0, i32* %12, align 4, !dbg !25351
  br label %201, !dbg !25352

201:                                              ; preds = %196, %187
  %202 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25353
  %203 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %202, i32 0, i32 0, !dbg !25354
  store i16 32, i16* %203, align 4, !dbg !25355
  %204 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25356
  %205 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %204, i32 0, i32 1, !dbg !25357
  store i8 0, i8* %205, align 2, !dbg !25358
  %206 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25359
  %207 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %206, i32 0, i32 2, !dbg !25360
  store i8 0, i8* %207, align 1, !dbg !25361
  %208 = load i32, i32* %8, align 4, !dbg !25362
  %209 = sub nsw i32 %208, 1, !dbg !25363
  %210 = mul nsw i32 %209, 8, !dbg !25364
  %211 = add nsw i32 16, %210, !dbg !25365
  %212 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25366
  %213 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %212, i32 0, i32 3, !dbg !25367
  store i32 %211, i32* %213, align 4, !dbg !25368
  %214 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25369
  %215 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %214, i32 1, !dbg !25369
  store %struct.sock_filter* %215, %struct.sock_filter** %3, align 8, !dbg !25369
  %216 = load i32, i32* %9, align 4, !dbg !25370
  %217 = trunc i32 %216 to i16, !dbg !25370
  %218 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25371
  %219 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %218, i32 0, i32 0, !dbg !25372
  store i16 %217, i16* %219, align 4, !dbg !25373
  %220 = load i32, i32* %11, align 4, !dbg !25374
  %221 = trunc i32 %220 to i8, !dbg !25374
  %222 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25375
  %223 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %222, i32 0, i32 1, !dbg !25376
  store i8 %221, i8* %223, align 2, !dbg !25377
  %224 = load i32, i32* %12, align 4, !dbg !25378
  %225 = trunc i32 %224 to i8, !dbg !25378
  %226 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25379
  %227 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %226, i32 0, i32 2, !dbg !25380
  store i8 %225, i8* %227, align 1, !dbg !25381
  %228 = load i32, i32* %10, align 4, !dbg !25382
  %229 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25383
  %230 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %229, i32 0, i32 3, !dbg !25384
  store i32 %228, i32* %230, align 4, !dbg !25385
  %231 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25386
  %232 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %231, i32 1, !dbg !25386
  store %struct.sock_filter* %232, %struct.sock_filter** %3, align 8, !dbg !25386
  br label %233, !dbg !25387

233:                                              ; preds = %201, %182
  %234 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25388
  %235 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %234, i32 0, i32 0, !dbg !25389
  store i16 6, i16* %235, align 4, !dbg !25390
  %236 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25391
  %237 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %236, i32 0, i32 1, !dbg !25392
  store i8 0, i8* %237, align 2, !dbg !25393
  %238 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25394
  %239 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %238, i32 0, i32 2, !dbg !25395
  store i8 0, i8* %239, align 1, !dbg !25396
  %240 = load i64, i64* %5, align 8, !dbg !25397
  %241 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %240, !dbg !25399
  %242 = load i32, i32* %241, align 4, !dbg !25399
  %243 = icmp ne i32 %242, 0, !dbg !25399
  br i1 %243, label %247, label %244, !dbg !25400

244:                                              ; preds = %233
  %245 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25401
  %246 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %245, i32 0, i32 3, !dbg !25403
  store i32 2147418112, i32* %246, align 4, !dbg !25404
  br label %254, !dbg !25405

247:                                              ; preds = %233
  %248 = load i64, i64* %5, align 8, !dbg !25406
  %249 = getelementptr inbounds [100 x i32], [100 x i32]* @s_errnos, i64 0, i64 %248, !dbg !25408
  %250 = load i32, i32* %249, align 4, !dbg !25408
  %251 = add nsw i32 327680, %250, !dbg !25409
  %252 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25410
  %253 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %252, i32 0, i32 3, !dbg !25411
  store i32 %251, i32* %253, align 4, !dbg !25412
  br label %254

254:                                              ; preds = %247, %244
  %255 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25413
  %256 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %255, i32 1, !dbg !25413
  store %struct.sock_filter* %256, %struct.sock_filter** %3, align 8, !dbg !25413
  %257 = load i64, i64* %5, align 8, !dbg !25414
  %258 = getelementptr inbounds [100 x i32], [100 x i32]* @s_args_1, i64 0, i64 %257, !dbg !25416
  %259 = load i32, i32* %258, align 4, !dbg !25416
  %260 = icmp ne i32 %259, 0, !dbg !25416
  br i1 %260, label %261, label %272, !dbg !25417

261:                                              ; preds = %254
  %262 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25418
  %263 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %262, i32 0, i32 0, !dbg !25420
  store i16 32, i16* %263, align 4, !dbg !25421
  %264 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25422
  %265 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %264, i32 0, i32 1, !dbg !25423
  store i8 0, i8* %265, align 2, !dbg !25424
  %266 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25425
  %267 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %266, i32 0, i32 2, !dbg !25426
  store i8 0, i8* %267, align 1, !dbg !25427
  %268 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25428
  %269 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %268, i32 0, i32 3, !dbg !25429
  store i32 0, i32* %269, align 4, !dbg !25430
  %270 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25431
  %271 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %270, i32 1, !dbg !25431
  store %struct.sock_filter* %271, %struct.sock_filter** %3, align 8, !dbg !25431
  br label %272, !dbg !25432

272:                                              ; preds = %261, %254
  br label %273, !dbg !25433

273:                                              ; preds = %272
  %274 = load i64, i64* %5, align 8, !dbg !25434
  %275 = add i64 %274, 1, !dbg !25434
  store i64 %275, i64* %5, align 8, !dbg !25434
  br label %73, !dbg !25435, !llvm.loop !25436

276:                                              ; preds = %73
  %277 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25438
  %278 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %277, i32 0, i32 0, !dbg !25439
  store i16 6, i16* %278, align 4, !dbg !25440
  %279 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25441
  %280 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %279, i32 0, i32 1, !dbg !25442
  store i8 0, i8* %280, align 2, !dbg !25443
  %281 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25444
  %282 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %281, i32 0, i32 2, !dbg !25445
  store i8 0, i8* %282, align 1, !dbg !25446
  %283 = load %struct.sock_filter*, %struct.sock_filter** %3, align 8, !dbg !25447
  %284 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %283, i32 0, i32 3, !dbg !25448
  store i32 0, i32* %284, align 4, !dbg !25449
  %285 = call i32 (i32, ...) @prctl(i32 38, i32 1, i32 0, i32 0, i32 0) #8, !dbg !25450
  store i32 %285, i32* %6, align 4, !dbg !25451
  %286 = load i32, i32* %6, align 4, !dbg !25452
  %287 = icmp ne i32 %286, 0, !dbg !25454
  br i1 %287, label %288, label %294, !dbg !25455

288:                                              ; preds = %276
  %289 = call i32* @__errno_location() #9, !dbg !25456
  %290 = load i32, i32* %289, align 4, !dbg !25456
  %291 = icmp eq i32 %290, 22, !dbg !25459
  br i1 %291, label %292, label %293, !dbg !25460

292:                                              ; preds = %288
  store i32 1, i32* %13, align 4
  br label %309, !dbg !25461

293:                                              ; preds = %288
  call void @die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.1456, i32 0, i32 0)), !dbg !25463
  br label %294, !dbg !25464

294:                                              ; preds = %293, %276
  %295 = load i32, i32* @tunable_seccomp_sandbox, align 4, !dbg !25465
  %296 = icmp ne i32 %295, 0, !dbg !25465
  br i1 %296, label %298, label %297, !dbg !25467

297:                                              ; preds = %294
  store i32 1, i32* %13, align 4
  br label %309, !dbg !25468

298:                                              ; preds = %294
  %299 = call i32 (i32, ...) @prctl(i32 22, i32 2, %struct.sock_fprog* %4, i32 0, i32 0) #8, !dbg !25470
  store i32 %299, i32* %6, align 4, !dbg !25471
  %300 = load i32, i32* %6, align 4, !dbg !25472
  %301 = icmp ne i32 %300, 0, !dbg !25474
  br i1 %301, label %302, label %308, !dbg !25475

302:                                              ; preds = %298
  %303 = call i32* @__errno_location() #9, !dbg !25476
  %304 = load i32, i32* %303, align 4, !dbg !25476
  %305 = icmp eq i32 %304, 22, !dbg !25479
  br i1 %305, label %306, label %307, !dbg !25480

306:                                              ; preds = %302
  store i32 1, i32* %13, align 4
  br label %309, !dbg !25481

307:                                              ; preds = %302
  call void @die(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.1457, i32 0, i32 0)), !dbg !25483
  br label %308, !dbg !25484

308:                                              ; preds = %307, %298
  store i32 0, i32* %13, align 4, !dbg !25485
  br label %309, !dbg !25485

309:                                              ; preds = %308, %306, %297, %292
  %310 = load i8*, i8** %2, align 8, !dbg !25485
  call void @llvm.stackrestore(i8* %310), !dbg !25485
  %311 = load i32, i32* %13, align 4
  switch i32 %311, label %313 [
    i32 0, label %312
    i32 1, label %312
  ]

312:                                              ; preds = %309, %309
  ret void, !dbg !25485

313:                                              ; preds = %309
  unreachable
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #8

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #8

attributes #0 = { noinline nounwind optnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }
attributes #10 = { noreturn }
attributes #11 = { nounwind readonly }

!llvm.dbg.cu = !{!1830, !1832, !1834, !90, !217, !1837, !336, !689, !1840, !728, !1844, !828, !851, !1848, !880, !897, !1851, !1853, !916, !1856, !1858, !1860, !1929, !1032, !1065, !1932, !1934, !1100, !1144, !1936, !1938, !1941, !1943, !1945, !1948, !1158, !1325, !1675, !1799}
!llvm.ident = !{!1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950, !1950}
!llvm.module.flags = !{!1951, !1952, !1953, !1954, !1955}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "s_the_str", scope: !2, file: !3, line: 98, type: !33, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "ftp_write_text_common", scope: !3, file: !3, line: 94, type: !4, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3 = !DIFile(filename: "ftpcmdio.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !19, !88, !17}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !9)
!8 = !DIFile(filename: "./session.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!9 = !{!10, !14, !15, !18, !20, !21, !22, !23, !24, !25, !27, !29, !30, !31, !32, !39, !40, !44, !45, !46, !47, !48, !49, !50, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !81, !82, !83, !84, !85, !86, !87}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !7, file: !8, line: 21, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_sockaddr", file: !13, line: 210, flags: DIFlagFwdDecl)
!13 = !DIFile(filename: "./sysutil.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!14 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !7, file: !8, line: 22, baseType: !11, size: 64, offset: 64)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !7, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !7, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!19 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !7, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !7, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !7, file: !8, line: 29, baseType: !11, size: 64, offset: 320)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !7, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !7, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !7, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!26 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !7, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!28 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !7, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !7, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !7, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !7, file: !8, line: 39, baseType: !33, size: 128, offset: 704)
!33 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !35)
!34 = !DIFile(filename: "./str.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!35 = !{!36, !37, !38}
!36 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !33, file: !34, line: 12, baseType: !16, size: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !33, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !33, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !7, file: !8, line: 40, baseType: !33, size: 128, offset: 832)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !7, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "filesize_t", file: !42, line: 4, baseType: !43)
!42 = !DIFile(filename: "./filesize.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!43 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !7, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !7, file: !8, line: 45, baseType: !33, size: 128, offset: 1088)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !7, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !7, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !7, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !7, file: !8, line: 51, baseType: !33, size: 128, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !7, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "mystr_list", file: !8, line: 13, flags: DIFlagFwdDecl)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !7, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !7, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !7, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !7, file: !8, line: 62, baseType: !33, size: 128, offset: 1664)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !7, file: !8, line: 63, baseType: !33, size: 128, offset: 1792)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !7, file: !8, line: 64, baseType: !33, size: 128, offset: 1920)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !7, file: !8, line: 65, baseType: !33, size: 128, offset: 2048)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !7, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !7, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !7, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !7, file: !8, line: 71, baseType: !33, size: 128, offset: 2304)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !7, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!65 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !7, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !7, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !7, file: !8, line: 75, baseType: !33, size: 128, offset: 2624)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !7, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !7, file: !8, line: 79, baseType: !33, size: 128, offset: 2816)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !7, file: !8, line: 80, baseType: !33, size: 128, offset: 2944)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !7, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !7, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !7, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !7, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !7, file: !8, line: 89, baseType: !33, size: 128, offset: 3200)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !7, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !7, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !7, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !7, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !7, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !7, file: !8, line: 97, baseType: !33, size: 128, offset: 3584)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !7, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !7, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !7, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !7, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!90 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !91, retainedTypes: !121, globals: !122)
!91 = !{!92, !108, !113}
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFLogEntryType", file: !93, line: 8, size: 32, elements: !94)
!93 = !DIFile(filename: "./logging.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!94 = !{!95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107}
!95 = !DIEnumerator(name: "kVSFLogEntryNull", value: 1)
!96 = !DIEnumerator(name: "kVSFLogEntryDownload", value: 2)
!97 = !DIEnumerator(name: "kVSFLogEntryUpload", value: 3)
!98 = !DIEnumerator(name: "kVSFLogEntryMkdir", value: 4)
!99 = !DIEnumerator(name: "kVSFLogEntryLogin", value: 5)
!100 = !DIEnumerator(name: "kVSFLogEntryFTPInput", value: 6)
!101 = !DIEnumerator(name: "kVSFLogEntryFTPOutput", value: 7)
!102 = !DIEnumerator(name: "kVSFLogEntryConnection", value: 8)
!103 = !DIEnumerator(name: "kVSFLogEntryDelete", value: 9)
!104 = !DIEnumerator(name: "kVSFLogEntryRename", value: 10)
!105 = !DIEnumerator(name: "kVSFLogEntryRmdir", value: 11)
!106 = !DIEnumerator(name: "kVSFLogEntryChmod", value: 12)
!107 = !DIEnumerator(name: "kVSFLogEntryDebug", value: 13)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFRWTarget", file: !109, line: 7, size: 32, elements: !110)
!109 = !DIFile(filename: "./readwrite.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!110 = !{!111, !112}
!111 = !DIEnumerator(name: "kVSFRWControl", value: 1)
!112 = !DIEnumerator(name: "kVSFRWData", value: 2)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFSysUtilSignal", file: !13, line: 26, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120}
!115 = !DIEnumerator(name: "kVSFSysUtilSigALRM", value: 1)
!116 = !DIEnumerator(name: "kVSFSysUtilSigTERM", value: 2)
!117 = !DIEnumerator(name: "kVSFSysUtilSigCHLD", value: 3)
!118 = !DIEnumerator(name: "kVSFSysUtilSigPIPE", value: 4)
!119 = !DIEnumerator(name: "kVSFSysUtilSigURG", value: 5)
!120 = !DIEnumerator(name: "kVSFSysUtilSigHUP", value: 6)
!121 = !{!65, !6}
!122 = !{!123, !129, !0, !135, !142}
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "s_the_str", scope: !125, file: !3, line: 64, type: !33, isLocal: true, isDefinition: true)
!125 = distinct !DISubprogram(name: "vsf_cmdio_write_raw", scope: !3, file: !3, line: 62, type: !126, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!126 = !DISubroutineType(types: !127)
!127 = !{null, !6, !88}
!128 = !{}
!129 = !DIGlobalVariableExpression(var: !130, expr: !DIExpression())
!130 = distinct !DIGlobalVariable(name: "s_log_str", scope: !131, file: !3, line: 200, type: !33, isLocal: true, isDefinition: true)
!131 = distinct !DISubprogram(name: "vsf_cmdio_get_cmd_and_arg", scope: !3, file: !3, line: 163, type: !132, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!132 = !DISubroutineType(types: !133)
!133 = !{null, !6, !134, !134, !19}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!135 = !DIGlobalVariableExpression(var: !136, expr: !DIExpression())
!136 = distinct !DIGlobalVariable(name: "s_write_buf_str", scope: !137, file: !3, line: 121, type: !33, isLocal: true, isDefinition: true)
!137 = distinct !DISubprogram(name: "ftp_write_str_common", scope: !3, file: !3, line: 118, type: !138, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !90, retainedNodes: !128)
!138 = !DISubroutineType(types: !139)
!139 = !{null, !6, !19, !17, !140}
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "s_text_mangle_str", scope: !137, file: !3, line: 122, type: !33, isLocal: true, isDefinition: true)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "s_src_str", scope: !146, file: !147, line: 143, type: !170, isLocal: true, isDefinition: true)
!146 = distinct !DISubprogram(name: "process_post_login", scope: !147, file: !147, line: 84, type: !148, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !217, retainedNodes: !128)
!147 = !DIFile(filename: "postlogin.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!148 = !DISubroutineType(types: !149)
!149 = !{null, !150}
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !152)
!152 = !{!153, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !151, file: !8, line: 21, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!155 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_sockaddr", file: !8, line: 12, flags: DIFlagFwdDecl)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !151, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !151, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !151, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !151, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !151, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !151, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !151, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !151, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !151, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !151, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !151, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !151, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !151, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !151, file: !8, line: 39, baseType: !170, size: 128, offset: 704)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !171)
!171 = !{!172, !173, !174}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !170, file: !34, line: 12, baseType: !16, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !170, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !170, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !151, file: !8, line: 40, baseType: !170, size: 128, offset: 832)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !151, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !151, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !151, file: !8, line: 45, baseType: !170, size: 128, offset: 1088)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !151, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !151, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !151, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !151, file: !8, line: 51, baseType: !170, size: 128, offset: 1344)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !151, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !151, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !151, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !151, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !151, file: !8, line: 62, baseType: !170, size: 128, offset: 1664)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !151, file: !8, line: 63, baseType: !170, size: 128, offset: 1792)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !151, file: !8, line: 64, baseType: !170, size: 128, offset: 1920)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !151, file: !8, line: 65, baseType: !170, size: 128, offset: 2048)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !151, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !151, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !151, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !151, file: !8, line: 71, baseType: !170, size: 128, offset: 2304)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !151, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !151, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !151, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !151, file: !8, line: 75, baseType: !170, size: 128, offset: 2624)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !151, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !151, file: !8, line: 79, baseType: !170, size: 128, offset: 2816)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !151, file: !8, line: 80, baseType: !170, size: 128, offset: 2944)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !151, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !151, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !151, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !151, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !151, file: !8, line: 89, baseType: !170, size: 128, offset: 3200)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !151, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !151, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !151, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !151, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !151, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !151, file: !8, line: 97, baseType: !170, size: 128, offset: 3584)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !151, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !151, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !151, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !151, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !147, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !218, retainedTypes: !224, globals: !226)
!218 = !{!113, !92, !219}
!219 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFSysStrOpenMode", file: !220, line: 18, size: 32, elements: !221)
!220 = !DIFile(filename: "./sysstr.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!221 = !{!222, !223}
!222 = !DIEnumerator(name: "kVSFSysStrOpenUnknown", value: 0)
!223 = !DIEnumerator(name: "kVSFSysStrOpenReadOnly", value: 1)
!224 = !{!65, !225, !150}
!225 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!226 = !{!144, !227, !229, !231, !233, !236, !238, !244, !246, !251, !253, !256, !260, !265, !270, !272, !274, !276, !279, !281, !288, !290, !293, !295, !298, !301, !304, !307, !309, !312, !317, !320, !323, !325, !327, !330, !332}
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "s_rhs_str", scope: !146, file: !147, line: 144, type: !170, isLocal: true, isDefinition: true)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "s_src_str", scope: !146, file: !147, line: 163, type: !170, isLocal: true, isDefinition: true)
!231 = !DIGlobalVariableExpression(var: !232, expr: !DIExpression())
!232 = distinct !DIGlobalVariable(name: "s_rhs_str", scope: !146, file: !147, line: 164, type: !170, isLocal: true, isDefinition: true)
!233 = !DIGlobalVariableExpression(var: !234, expr: !DIExpression())
!234 = distinct !DIGlobalVariable(name: "s_cwd_buf_mangle_str", scope: !235, file: !147, line: 470, type: !170, isLocal: true, isDefinition: true)
!235 = distinct !DISubprogram(name: "handle_pwd", scope: !147, file: !147, line: 468, type: !148, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!236 = !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!237 = distinct !DIGlobalVariable(name: "s_pwd_res_str", scope: !235, file: !147, line: 471, type: !170, isLocal: true, isDefinition: true)
!238 = !DIGlobalVariableExpression(var: !239, expr: !DIExpression())
!239 = distinct !DIGlobalVariable(name: "s_rhs_str", scope: !240, file: !147, line: 1922, type: !170, isLocal: true, isDefinition: true)
!240 = distinct !DISubprogram(name: "resolve_tilde", scope: !147, file: !147, line: 1917, type: !241, scopeLine: 1918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!241 = !DISubroutineType(types: !242)
!242 = !{null, !243, !150}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!244 = !DIGlobalVariableExpression(var: !245, expr: !DIExpression())
!245 = distinct !DIGlobalVariable(name: "s_user_str", scope: !240, file: !147, line: 1931, type: !170, isLocal: true, isDefinition: true)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "s_pasv_res_str", scope: !248, file: !147, line: 572, type: !170, isLocal: true, isDefinition: true)
!248 = distinct !DISubprogram(name: "handle_pasv", scope: !147, file: !147, line: 569, type: !249, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!249 = !DISubroutineType(types: !250)
!250 = !{null, !150, !19}
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(name: "s_p_sockaddr", scope: !248, file: !147, line: 573, type: !154, isLocal: true, isDefinition: true)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "s_mark_str", scope: !255, file: !147, line: 652, type: !170, isLocal: true, isDefinition: true)
!255 = distinct !DISubprogram(name: "handle_retr", scope: !147, file: !147, line: 650, type: !249, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !255, file: !147, line: 653, type: !258, isLocal: true, isDefinition: true)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_statbuf", file: !220, line: 6, flags: DIFlagFwdDecl)
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "s_tmp_str", scope: !262, file: !147, line: 1364, type: !170, isLocal: true, isDefinition: true)
!262 = distinct !DISubprogram(name: "prepend_path_to_filename", scope: !147, file: !147, line: 1362, type: !263, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!263 = !DISubroutineType(types: !264)
!264 = !{null, !243}
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(name: "s_option_str", scope: !267, file: !147, line: 803, type: !170, isLocal: true, isDefinition: true)
!267 = distinct !DISubprogram(name: "handle_dir_common", scope: !147, file: !147, line: 801, type: !268, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!268 = !DISubroutineType(types: !269)
!269 = !{null, !150, !19, !19}
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "s_filter_str", scope: !267, file: !147, line: 804, type: !170, isLocal: true, isDefinition: true)
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "s_dir_name_str", scope: !267, file: !147, line: 805, type: !170, isLocal: true, isDefinition: true)
!274 = !DIGlobalVariableExpression(var: !275, expr: !DIExpression())
!275 = distinct !DIGlobalVariable(name: "s_p_dirstat", scope: !267, file: !147, line: 806, type: !258, isLocal: true, isDefinition: true)
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !278, file: !147, line: 1018, type: !258, isLocal: true, isDefinition: true)
!278 = distinct !DISubprogram(name: "handle_upload_common", scope: !147, file: !147, line: 1016, type: !268, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "s_filename", scope: !278, file: !147, line: 1019, type: !170, isLocal: true, isDefinition: true)
!281 = !DIGlobalVariableExpression(var: !282, expr: !DIExpression())
!282 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !283, file: !147, line: 1790, type: !258, isLocal: true, isDefinition: true)
!283 = distinct !DISubprogram(name: "get_unique_filename", scope: !147, file: !147, line: 1785, type: !284, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!284 = !DISubroutineType(types: !285)
!285 = !{null, !243, !286}
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "s_stou_str", scope: !283, file: !147, line: 1791, type: !170, isLocal: true, isDefinition: true)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s_mkd_res", scope: !292, file: !147, line: 1198, type: !170, isLocal: true, isDefinition: true)
!292 = distinct !DISubprogram(name: "handle_mkd", scope: !147, file: !147, line: 1176, type: !148, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "s_tmp_str", scope: !292, file: !147, line: 1199, type: !170, isLocal: true, isDefinition: true)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "s_rest_str", scope: !297, file: !147, line: 1267, type: !170, isLocal: true, isDefinition: true)
!297 = distinct !DISubprogram(name: "handle_rest", scope: !147, file: !147, line: 1265, type: !148, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "p_statbuf", scope: !300, file: !147, line: 1283, type: !258, isLocal: true, isDefinition: true)
!300 = distinct !DISubprogram(name: "handle_rnfr", scope: !147, file: !147, line: 1281, type: !148, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "s_tmp_str", scope: !303, file: !147, line: 1316, type: !170, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "handle_rnto", scope: !147, file: !147, line: 1314, type: !148, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !306, file: !147, line: 1476, type: !258, isLocal: true, isDefinition: true)
!306 = distinct !DISubprogram(name: "handle_size", scope: !147, file: !147, line: 1469, type: !148, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "s_size_res_str", scope: !306, file: !147, line: 1491, type: !170, isLocal: true, isDefinition: true)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "s_site_args_str", scope: !311, file: !147, line: 1501, type: !170, isLocal: true, isDefinition: true)
!311 = distinct !DISubprogram(name: "handle_site", scope: !147, file: !147, line: 1499, type: !148, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!312 = !DIGlobalVariableExpression(var: !313, expr: !DIExpression())
!313 = distinct !DIGlobalVariable(name: "s_chmod_file_str", scope: !314, file: !147, line: 1536, type: !170, isLocal: true, isDefinition: true)
!314 = distinct !DISubprogram(name: "handle_site_chmod", scope: !147, file: !147, line: 1534, type: !315, scopeLine: 1535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!315 = !DISubroutineType(types: !316)
!316 = !{null, !150, !243}
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "s_umask_resp_str", scope: !319, file: !147, line: 1578, type: !170, isLocal: true, isDefinition: true)
!319 = distinct !DISubprogram(name: "handle_site_umask", scope: !147, file: !147, line: 1576, type: !315, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "s_filename_str", scope: !322, file: !147, line: 1607, type: !170, isLocal: true, isDefinition: true)
!322 = distinct !DISubprogram(name: "handle_mdtm", scope: !147, file: !147, line: 1605, type: !148, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !322, file: !147, line: 1608, type: !258, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "s_mdtm_res_str", scope: !322, file: !147, line: 1668, type: !170, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "s_part1_str", scope: !329, file: !147, line: 1680, type: !170, isLocal: true, isDefinition: true)
!329 = distinct !DISubprogram(name: "handle_eprt", scope: !147, file: !147, line: 1678, type: !148, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "s_part2_str", scope: !329, file: !147, line: 1681, type: !170, isLocal: true, isDefinition: true)
!332 = !DIGlobalVariableExpression(var: !333, expr: !DIExpression())
!333 = distinct !DIGlobalVariable(name: "s_scopeid_str", scope: !329, file: !147, line: 1682, type: !170, isLocal: true, isDefinition: true)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "tunable_anonymous_enable", scope: !336, file: !337, line: 11, type: !19, isLocal: false, isDefinition: true)
!336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !337, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !338, globals: !339)
!337 = !DIFile(filename: "tunables.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!338 = !{!16}
!339 = !{!334, !340, !342, !344, !346, !348, !350, !352, !354, !356, !358, !360, !362, !364, !366, !368, !370, !372, !374, !376, !378, !380, !382, !384, !386, !388, !390, !392, !394, !396, !398, !400, !402, !404, !406, !408, !410, !412, !414, !416, !418, !420, !422, !424, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !448, !450, !452, !454, !456, !458, !460, !462, !464, !466, !468, !470, !472, !474, !476, !478, !480, !482, !484, !486, !488, !490, !492, !494, !496, !498, !500, !502, !504, !506, !508, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !568, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588, !590, !592, !594, !596, !598, !600}
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "tunable_local_enable", scope: !336, file: !337, line: 12, type: !19, isLocal: false, isDefinition: true)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "tunable_pasv_enable", scope: !336, file: !337, line: 13, type: !19, isLocal: false, isDefinition: true)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "tunable_port_enable", scope: !336, file: !337, line: 14, type: !19, isLocal: false, isDefinition: true)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "tunable_chroot_local_user", scope: !336, file: !337, line: 15, type: !19, isLocal: false, isDefinition: true)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "tunable_write_enable", scope: !336, file: !337, line: 16, type: !19, isLocal: false, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "tunable_anon_upload_enable", scope: !336, file: !337, line: 17, type: !19, isLocal: false, isDefinition: true)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "tunable_anon_mkdir_write_enable", scope: !336, file: !337, line: 18, type: !19, isLocal: false, isDefinition: true)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "tunable_anon_other_write_enable", scope: !336, file: !337, line: 19, type: !19, isLocal: false, isDefinition: true)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "tunable_chown_uploads", scope: !336, file: !337, line: 20, type: !19, isLocal: false, isDefinition: true)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "tunable_connect_from_port_20", scope: !336, file: !337, line: 21, type: !19, isLocal: false, isDefinition: true)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "tunable_xferlog_enable", scope: !336, file: !337, line: 22, type: !19, isLocal: false, isDefinition: true)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "tunable_dirmessage_enable", scope: !336, file: !337, line: 23, type: !19, isLocal: false, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "tunable_anon_world_readable_only", scope: !336, file: !337, line: 24, type: !19, isLocal: false, isDefinition: true)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "tunable_async_abor_enable", scope: !336, file: !337, line: 25, type: !19, isLocal: false, isDefinition: true)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(name: "tunable_ascii_upload_enable", scope: !336, file: !337, line: 26, type: !19, isLocal: false, isDefinition: true)
!370 = !DIGlobalVariableExpression(var: !371, expr: !DIExpression())
!371 = distinct !DIGlobalVariable(name: "tunable_ascii_download_enable", scope: !336, file: !337, line: 27, type: !19, isLocal: false, isDefinition: true)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "tunable_one_process_model", scope: !336, file: !337, line: 28, type: !19, isLocal: false, isDefinition: true)
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "tunable_xferlog_std_format", scope: !336, file: !337, line: 29, type: !19, isLocal: false, isDefinition: true)
!376 = !DIGlobalVariableExpression(var: !377, expr: !DIExpression())
!377 = distinct !DIGlobalVariable(name: "tunable_pasv_promiscuous", scope: !336, file: !337, line: 30, type: !19, isLocal: false, isDefinition: true)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "tunable_deny_email_enable", scope: !336, file: !337, line: 31, type: !19, isLocal: false, isDefinition: true)
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "tunable_chroot_list_enable", scope: !336, file: !337, line: 32, type: !19, isLocal: false, isDefinition: true)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(name: "tunable_setproctitle_enable", scope: !336, file: !337, line: 33, type: !19, isLocal: false, isDefinition: true)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "tunable_text_userdb_names", scope: !336, file: !337, line: 34, type: !19, isLocal: false, isDefinition: true)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "tunable_ls_recurse_enable", scope: !336, file: !337, line: 35, type: !19, isLocal: false, isDefinition: true)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "tunable_log_ftp_protocol", scope: !336, file: !337, line: 36, type: !19, isLocal: false, isDefinition: true)
!390 = !DIGlobalVariableExpression(var: !391, expr: !DIExpression())
!391 = distinct !DIGlobalVariable(name: "tunable_guest_enable", scope: !336, file: !337, line: 37, type: !19, isLocal: false, isDefinition: true)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "tunable_userlist_enable", scope: !336, file: !337, line: 38, type: !19, isLocal: false, isDefinition: true)
!394 = !DIGlobalVariableExpression(var: !395, expr: !DIExpression())
!395 = distinct !DIGlobalVariable(name: "tunable_userlist_deny", scope: !336, file: !337, line: 39, type: !19, isLocal: false, isDefinition: true)
!396 = !DIGlobalVariableExpression(var: !397, expr: !DIExpression())
!397 = distinct !DIGlobalVariable(name: "tunable_use_localtime", scope: !336, file: !337, line: 40, type: !19, isLocal: false, isDefinition: true)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "tunable_check_shell", scope: !336, file: !337, line: 41, type: !19, isLocal: false, isDefinition: true)
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "tunable_hide_ids", scope: !336, file: !337, line: 42, type: !19, isLocal: false, isDefinition: true)
!402 = !DIGlobalVariableExpression(var: !403, expr: !DIExpression())
!403 = distinct !DIGlobalVariable(name: "tunable_listen", scope: !336, file: !337, line: 43, type: !19, isLocal: false, isDefinition: true)
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "tunable_port_promiscuous", scope: !336, file: !337, line: 44, type: !19, isLocal: false, isDefinition: true)
!406 = !DIGlobalVariableExpression(var: !407, expr: !DIExpression())
!407 = distinct !DIGlobalVariable(name: "tunable_passwd_chroot_enable", scope: !336, file: !337, line: 45, type: !19, isLocal: false, isDefinition: true)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "tunable_no_anon_password", scope: !336, file: !337, line: 46, type: !19, isLocal: false, isDefinition: true)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "tunable_tcp_wrappers", scope: !336, file: !337, line: 47, type: !19, isLocal: false, isDefinition: true)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "tunable_use_sendfile", scope: !336, file: !337, line: 48, type: !19, isLocal: false, isDefinition: true)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "tunable_force_dot_files", scope: !336, file: !337, line: 49, type: !19, isLocal: false, isDefinition: true)
!416 = !DIGlobalVariableExpression(var: !417, expr: !DIExpression())
!417 = distinct !DIGlobalVariable(name: "tunable_listen_ipv6", scope: !336, file: !337, line: 50, type: !19, isLocal: false, isDefinition: true)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "tunable_dual_log_enable", scope: !336, file: !337, line: 51, type: !19, isLocal: false, isDefinition: true)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "tunable_syslog_enable", scope: !336, file: !337, line: 52, type: !19, isLocal: false, isDefinition: true)
!422 = !DIGlobalVariableExpression(var: !423, expr: !DIExpression())
!423 = distinct !DIGlobalVariable(name: "tunable_background", scope: !336, file: !337, line: 53, type: !19, isLocal: false, isDefinition: true)
!424 = !DIGlobalVariableExpression(var: !425, expr: !DIExpression())
!425 = distinct !DIGlobalVariable(name: "tunable_virtual_use_local_privs", scope: !336, file: !337, line: 54, type: !19, isLocal: false, isDefinition: true)
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "tunable_session_support", scope: !336, file: !337, line: 55, type: !19, isLocal: false, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "tunable_download_enable", scope: !336, file: !337, line: 56, type: !19, isLocal: false, isDefinition: true)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "tunable_dirlist_enable", scope: !336, file: !337, line: 57, type: !19, isLocal: false, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "tunable_chmod_enable", scope: !336, file: !337, line: 58, type: !19, isLocal: false, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "tunable_secure_email_list_enable", scope: !336, file: !337, line: 59, type: !19, isLocal: false, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "tunable_run_as_launching_user", scope: !336, file: !337, line: 60, type: !19, isLocal: false, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "tunable_no_log_lock", scope: !336, file: !337, line: 61, type: !19, isLocal: false, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "tunable_ssl_enable", scope: !336, file: !337, line: 62, type: !19, isLocal: false, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "tunable_allow_anon_ssl", scope: !336, file: !337, line: 63, type: !19, isLocal: false, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "tunable_force_local_logins_ssl", scope: !336, file: !337, line: 64, type: !19, isLocal: false, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "tunable_force_local_data_ssl", scope: !336, file: !337, line: 65, type: !19, isLocal: false, isDefinition: true)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "tunable_sslv2", scope: !336, file: !337, line: 66, type: !19, isLocal: false, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "tunable_sslv3", scope: !336, file: !337, line: 67, type: !19, isLocal: false, isDefinition: true)
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "tunable_tlsv1", scope: !336, file: !337, line: 68, type: !19, isLocal: false, isDefinition: true)
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "tunable_tilde_user_enable", scope: !336, file: !337, line: 69, type: !19, isLocal: false, isDefinition: true)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "tunable_force_anon_logins_ssl", scope: !336, file: !337, line: 70, type: !19, isLocal: false, isDefinition: true)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "tunable_force_anon_data_ssl", scope: !336, file: !337, line: 71, type: !19, isLocal: false, isDefinition: true)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "tunable_mdtm_write", scope: !336, file: !337, line: 72, type: !19, isLocal: false, isDefinition: true)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "tunable_lock_upload_files", scope: !336, file: !337, line: 73, type: !19, isLocal: false, isDefinition: true)
!464 = !DIGlobalVariableExpression(var: !465, expr: !DIExpression())
!465 = distinct !DIGlobalVariable(name: "tunable_pasv_addr_resolve", scope: !336, file: !337, line: 74, type: !19, isLocal: false, isDefinition: true)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "tunable_debug_ssl", scope: !336, file: !337, line: 75, type: !19, isLocal: false, isDefinition: true)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "tunable_require_cert", scope: !336, file: !337, line: 76, type: !19, isLocal: false, isDefinition: true)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "tunable_validate_cert", scope: !336, file: !337, line: 77, type: !19, isLocal: false, isDefinition: true)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "tunable_strict_ssl_read_eof", scope: !336, file: !337, line: 78, type: !19, isLocal: false, isDefinition: true)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "tunable_strict_ssl_write_shutdown", scope: !336, file: !337, line: 79, type: !19, isLocal: false, isDefinition: true)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "tunable_ssl_request_cert", scope: !336, file: !337, line: 80, type: !19, isLocal: false, isDefinition: true)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "tunable_delete_failed_uploads", scope: !336, file: !337, line: 81, type: !19, isLocal: false, isDefinition: true)
!480 = !DIGlobalVariableExpression(var: !481, expr: !DIExpression())
!481 = distinct !DIGlobalVariable(name: "tunable_implicit_ssl", scope: !336, file: !337, line: 82, type: !19, isLocal: false, isDefinition: true)
!482 = !DIGlobalVariableExpression(var: !483, expr: !DIExpression())
!483 = distinct !DIGlobalVariable(name: "tunable_ptrace_sandbox", scope: !336, file: !337, line: 83, type: !19, isLocal: false, isDefinition: true)
!484 = !DIGlobalVariableExpression(var: !485, expr: !DIExpression())
!485 = distinct !DIGlobalVariable(name: "tunable_require_ssl_reuse", scope: !336, file: !337, line: 84, type: !19, isLocal: false, isDefinition: true)
!486 = !DIGlobalVariableExpression(var: !487, expr: !DIExpression())
!487 = distinct !DIGlobalVariable(name: "tunable_isolate", scope: !336, file: !337, line: 85, type: !19, isLocal: false, isDefinition: true)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "tunable_isolate_network", scope: !336, file: !337, line: 86, type: !19, isLocal: false, isDefinition: true)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "tunable_ftp_enable", scope: !336, file: !337, line: 87, type: !19, isLocal: false, isDefinition: true)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "tunable_http_enable", scope: !336, file: !337, line: 88, type: !19, isLocal: false, isDefinition: true)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "tunable_seccomp_sandbox", scope: !336, file: !337, line: 89, type: !19, isLocal: false, isDefinition: true)
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "tunable_allow_writeable_chroot", scope: !336, file: !337, line: 90, type: !19, isLocal: false, isDefinition: true)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "tunable_accept_timeout", scope: !336, file: !337, line: 92, type: !26, isLocal: false, isDefinition: true)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "tunable_connect_timeout", scope: !336, file: !337, line: 93, type: !26, isLocal: false, isDefinition: true)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "tunable_local_umask", scope: !336, file: !337, line: 94, type: !26, isLocal: false, isDefinition: true)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "tunable_anon_umask", scope: !336, file: !337, line: 95, type: !26, isLocal: false, isDefinition: true)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "tunable_ftp_data_port", scope: !336, file: !337, line: 96, type: !26, isLocal: false, isDefinition: true)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "tunable_idle_session_timeout", scope: !336, file: !337, line: 97, type: !26, isLocal: false, isDefinition: true)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "tunable_data_connection_timeout", scope: !336, file: !337, line: 98, type: !26, isLocal: false, isDefinition: true)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "tunable_pasv_min_port", scope: !336, file: !337, line: 99, type: !26, isLocal: false, isDefinition: true)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "tunable_pasv_max_port", scope: !336, file: !337, line: 100, type: !26, isLocal: false, isDefinition: true)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "tunable_anon_max_rate", scope: !336, file: !337, line: 101, type: !26, isLocal: false, isDefinition: true)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "tunable_local_max_rate", scope: !336, file: !337, line: 102, type: !26, isLocal: false, isDefinition: true)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "tunable_listen_port", scope: !336, file: !337, line: 103, type: !26, isLocal: false, isDefinition: true)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "tunable_max_clients", scope: !336, file: !337, line: 104, type: !26, isLocal: false, isDefinition: true)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "tunable_file_open_mode", scope: !336, file: !337, line: 105, type: !26, isLocal: false, isDefinition: true)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "tunable_max_per_ip", scope: !336, file: !337, line: 106, type: !26, isLocal: false, isDefinition: true)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "tunable_trans_chunk_size", scope: !336, file: !337, line: 107, type: !26, isLocal: false, isDefinition: true)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "tunable_delay_failed_login", scope: !336, file: !337, line: 108, type: !26, isLocal: false, isDefinition: true)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "tunable_delay_successful_login", scope: !336, file: !337, line: 109, type: !26, isLocal: false, isDefinition: true)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "tunable_max_login_fails", scope: !336, file: !337, line: 110, type: !26, isLocal: false, isDefinition: true)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "tunable_chown_upload_mode", scope: !336, file: !337, line: 111, type: !26, isLocal: false, isDefinition: true)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "tunable_secure_chroot_dir", scope: !336, file: !337, line: 113, type: !88, isLocal: false, isDefinition: true)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "tunable_ftp_username", scope: !336, file: !337, line: 114, type: !88, isLocal: false, isDefinition: true)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "tunable_chown_username", scope: !336, file: !337, line: 115, type: !88, isLocal: false, isDefinition: true)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "tunable_xferlog_file", scope: !336, file: !337, line: 116, type: !88, isLocal: false, isDefinition: true)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "tunable_vsftpd_log_file", scope: !336, file: !337, line: 117, type: !88, isLocal: false, isDefinition: true)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "tunable_message_file", scope: !336, file: !337, line: 118, type: !88, isLocal: false, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "tunable_nopriv_user", scope: !336, file: !337, line: 119, type: !88, isLocal: false, isDefinition: true)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "tunable_ftpd_banner", scope: !336, file: !337, line: 120, type: !88, isLocal: false, isDefinition: true)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "tunable_banned_email_file", scope: !336, file: !337, line: 121, type: !88, isLocal: false, isDefinition: true)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "tunable_chroot_list_file", scope: !336, file: !337, line: 122, type: !88, isLocal: false, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "tunable_pam_service_name", scope: !336, file: !337, line: 123, type: !88, isLocal: false, isDefinition: true)
!560 = !DIGlobalVariableExpression(var: !561, expr: !DIExpression())
!561 = distinct !DIGlobalVariable(name: "tunable_guest_username", scope: !336, file: !337, line: 124, type: !88, isLocal: false, isDefinition: true)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "tunable_userlist_file", scope: !336, file: !337, line: 125, type: !88, isLocal: false, isDefinition: true)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "tunable_anon_root", scope: !336, file: !337, line: 126, type: !88, isLocal: false, isDefinition: true)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "tunable_local_root", scope: !336, file: !337, line: 127, type: !88, isLocal: false, isDefinition: true)
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "tunable_banner_file", scope: !336, file: !337, line: 128, type: !88, isLocal: false, isDefinition: true)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "tunable_pasv_address", scope: !336, file: !337, line: 129, type: !88, isLocal: false, isDefinition: true)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "tunable_listen_address", scope: !336, file: !337, line: 130, type: !88, isLocal: false, isDefinition: true)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "tunable_user_config_dir", scope: !336, file: !337, line: 131, type: !88, isLocal: false, isDefinition: true)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "tunable_listen_address6", scope: !336, file: !337, line: 132, type: !88, isLocal: false, isDefinition: true)
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "tunable_cmds_allowed", scope: !336, file: !337, line: 133, type: !88, isLocal: false, isDefinition: true)
!580 = !DIGlobalVariableExpression(var: !581, expr: !DIExpression())
!581 = distinct !DIGlobalVariable(name: "tunable_cmds_denied", scope: !336, file: !337, line: 134, type: !88, isLocal: false, isDefinition: true)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "tunable_hide_file", scope: !336, file: !337, line: 135, type: !88, isLocal: false, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "tunable_deny_file", scope: !336, file: !337, line: 136, type: !88, isLocal: false, isDefinition: true)
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "tunable_user_sub_token", scope: !336, file: !337, line: 137, type: !88, isLocal: false, isDefinition: true)
!588 = !DIGlobalVariableExpression(var: !589, expr: !DIExpression())
!589 = distinct !DIGlobalVariable(name: "tunable_email_password_file", scope: !336, file: !337, line: 138, type: !88, isLocal: false, isDefinition: true)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "tunable_rsa_cert_file", scope: !336, file: !337, line: 139, type: !88, isLocal: false, isDefinition: true)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "tunable_dsa_cert_file", scope: !336, file: !337, line: 140, type: !88, isLocal: false, isDefinition: true)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "tunable_ssl_ciphers", scope: !336, file: !337, line: 141, type: !88, isLocal: false, isDefinition: true)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "tunable_rsa_private_key_file", scope: !336, file: !337, line: 142, type: !88, isLocal: false, isDefinition: true)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "tunable_dsa_private_key_file", scope: !336, file: !337, line: 143, type: !88, isLocal: false, isDefinition: true)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "tunable_ca_certs_file", scope: !336, file: !337, line: 144, type: !88, isLocal: false, isDefinition: true)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "p_recvbuf", scope: !604, file: !605, line: 592, type: !16, isLocal: true, isDefinition: true)
!604 = distinct !DISubprogram(name: "do_file_recv", scope: !605, file: !605, line: 590, type: !606, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!605 = !DIFile(filename: "ftpdataio.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!606 = !DISubroutineType(types: !607)
!607 = !{!608, !613, !19, !19}
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_transfer_ret", file: !609, line: 72, size: 128, elements: !610)
!609 = !DIFile(filename: "./ftpdataio.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!610 = !{!611, !612}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !608, file: !609, line: 74, baseType: !19, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "transferred", scope: !608, file: !609, line: 75, baseType: !41, size: 64, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !615)
!615 = !{!616, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !638, !639, !640, !641, !642, !643, !644, !645, !646, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !614, file: !8, line: 21, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_sockaddr", file: !609, line: 7, flags: DIFlagFwdDecl)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !614, file: !8, line: 22, baseType: !617, size: 64, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !614, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !614, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !614, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !614, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !614, file: !8, line: 29, baseType: !617, size: 64, offset: 320)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !614, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !614, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !614, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !614, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !614, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !614, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !614, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !614, file: !8, line: 39, baseType: !633, size: 128, offset: 704)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !634)
!634 = !{!635, !636, !637}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !633, file: !34, line: 12, baseType: !16, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !633, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !633, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !614, file: !8, line: 40, baseType: !633, size: 128, offset: 832)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !614, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !614, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !614, file: !8, line: 45, baseType: !633, size: 128, offset: 1088)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !614, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !614, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !614, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !614, file: !8, line: 51, baseType: !633, size: 128, offset: 1344)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !614, file: !8, line: 54, baseType: !647, size: 64, offset: 1472)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr_list", file: !649, line: 8, size: 128, elements: !650)
!649 = !DIFile(filename: "./strlist.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!650 = !{!651, !652, !653}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_len", scope: !648, file: !649, line: 10, baseType: !26, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_list_len", scope: !648, file: !649, line: 11, baseType: !26, size: 32, offset: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_nodes", scope: !648, file: !649, line: 12, baseType: !654, size: 64, offset: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "mystr_list_node", file: !649, line: 6, flags: DIFlagFwdDecl)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !614, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !614, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !614, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !614, file: !8, line: 62, baseType: !633, size: 128, offset: 1664)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !614, file: !8, line: 63, baseType: !633, size: 128, offset: 1792)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !614, file: !8, line: 64, baseType: !633, size: 128, offset: 1920)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !614, file: !8, line: 65, baseType: !633, size: 128, offset: 2048)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !614, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !614, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !614, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !614, file: !8, line: 71, baseType: !633, size: 128, offset: 2304)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !614, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !614, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !614, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !614, file: !8, line: 75, baseType: !633, size: 128, offset: 2624)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !614, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !614, file: !8, line: 79, baseType: !633, size: 128, offset: 2816)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !614, file: !8, line: 80, baseType: !633, size: 128, offset: 2944)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !614, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !614, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !614, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !614, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !614, file: !8, line: 89, baseType: !633, size: 128, offset: 3200)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !614, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !614, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !614, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !614, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !614, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !614, file: !8, line: 97, baseType: !633, size: 128, offset: 3584)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !614, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !614, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !614, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !614, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !605, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !690, retainedTypes: !691, globals: !693)
!690 = !{!113, !108}
!691 = !{!613, !692, !26}
!692 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!693 = !{!694, !697, !699, !602}
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "p_readbuf", scope: !696, file: !605, line: 467, type: !16, isLocal: true, isDefinition: true)
!696 = distinct !DISubprogram(name: "do_file_send_rwloop", scope: !605, file: !605, line: 465, type: !606, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "p_asciibuf", scope: !696, file: !605, line: 468, type: !16, isLocal: true, isDefinition: true)
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !701, file: !605, line: 568, type: !704, isLocal: true, isDefinition: true)
!701 = distinct !DISubprogram(name: "calc_num_send", scope: !605, file: !605, line: 566, type: !702, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!702 = !DISubroutineType(types: !703)
!703 = !{!41, !19, !41}
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_statbuf", file: !13, line: 111, flags: DIFlagFwdDecl)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "s_next_filename_str", scope: !708, file: !709, line: 91, type: !723, isLocal: true, isDefinition: true)
!708 = distinct !DISubprogram(name: "vsf_ls_populate_dir_list", scope: !709, file: !709, line: 25, type: !710, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !128)
!709 = !DIFile(filename: "ls.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!710 = !DISubroutineType(types: !711)
!711 = !{null, !712, !712, !718, !721, !721, !721, !19}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr_list", file: !649, line: 8, size: 128, elements: !714)
!714 = !{!715, !716, !717}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_len", scope: !713, file: !649, line: 10, baseType: !26, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_list_len", scope: !713, file: !649, line: 11, baseType: !26, size: 32, offset: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_nodes", scope: !713, file: !649, line: 12, baseType: !654, size: 64, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_dir", file: !720, line: 6, flags: DIFlagFwdDecl)
!720 = !DIFile(filename: "./ls.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !724)
!724 = !{!725, !726, !727}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !723, file: !34, line: 12, baseType: !16, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !723, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !723, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!728 = distinct !DICompileUnit(language: DW_LANG_C99, file: !709, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !729, globals: !730)
!729 = !{!65}
!730 = !{!706, !731, !733, !735, !737, !739, !741, !747}
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "s_next_path_and_filename_str", scope: !708, file: !709, line: 92, type: !723, isLocal: true, isDefinition: true)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !708, file: !709, line: 93, type: !258, isLocal: true, isDefinition: true)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "s_final_file_str", scope: !708, file: !709, line: 149, type: !723, isLocal: true, isDefinition: true)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "s_temp_str", scope: !708, file: !709, line: 154, type: !723, isLocal: true, isDefinition: true)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "s_temp_str", scope: !708, file: !709, line: 192, type: !723, isLocal: true, isDefinition: true)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "s_match_needed_str", scope: !743, file: !709, line: 254, type: !723, isLocal: true, isDefinition: true)
!743 = distinct !DISubprogram(name: "vsf_filename_passes_filter", scope: !709, file: !709, line: 223, type: !744, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !128)
!744 = !DISubroutineType(types: !745)
!745 = !{!19, !721, !721, !746}
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "s_tmp_str", scope: !749, file: !709, line: 375, type: !723, isLocal: true, isDefinition: true)
!749 = distinct !DISubprogram(name: "build_dir_line", scope: !709, file: !709, line: 372, type: !750, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !128)
!750 = !DISubroutineType(types: !751)
!751 = !{null, !752, !721, !753, !28}
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "s_log_str", scope: !757, file: !758, line: 134, type: !779, isLocal: true, isDefinition: true)
!757 = distinct !DISubprogram(name: "vsf_log_common", scope: !758, file: !758, line: 131, type: !759, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !828, retainedNodes: !128)
!758 = !DIFile(filename: "logging.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!759 = !DISubroutineType(types: !760)
!760 = !{null, !761, !19, !92, !826}
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !763)
!763 = !{!764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !762, file: !8, line: 21, baseType: !11, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !762, file: !8, line: 22, baseType: !11, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !762, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !762, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !762, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !762, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !762, file: !8, line: 29, baseType: !11, size: 64, offset: 320)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !762, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !762, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !762, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !762, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !762, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !762, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !762, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !762, file: !8, line: 39, baseType: !779, size: 128, offset: 704)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !780)
!780 = !{!781, !782, !783}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !779, file: !34, line: 12, baseType: !16, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !779, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !779, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !762, file: !8, line: 40, baseType: !779, size: 128, offset: 832)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !762, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !762, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !762, file: !8, line: 45, baseType: !779, size: 128, offset: 1088)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !762, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !762, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !762, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !762, file: !8, line: 51, baseType: !779, size: 128, offset: 1344)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !762, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !762, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !762, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !762, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !762, file: !8, line: 62, baseType: !779, size: 128, offset: 1664)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !762, file: !8, line: 63, baseType: !779, size: 128, offset: 1792)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !762, file: !8, line: 64, baseType: !779, size: 128, offset: 1920)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !762, file: !8, line: 65, baseType: !779, size: 128, offset: 2048)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !762, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !762, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !762, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !762, file: !8, line: 71, baseType: !779, size: 128, offset: 2304)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !762, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !762, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !762, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !762, file: !8, line: 75, baseType: !779, size: 128, offset: 2624)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !762, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !762, file: !8, line: 79, baseType: !779, size: 128, offset: 2816)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !762, file: !8, line: 80, baseType: !779, size: 128, offset: 2944)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !762, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !762, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !762, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !762, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !762, file: !8, line: 89, baseType: !779, size: 128, offset: 3200)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !762, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !762, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !762, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !762, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !762, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !762, file: !8, line: 97, baseType: !779, size: 128, offset: 3584)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !762, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !762, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !762, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !762, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !758, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !829, retainedTypes: !830, globals: !831)
!829 = !{!92}
!830 = !{!65, !92, !692}
!831 = !{!755, !832}
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "s_filename_str", scope: !834, file: !758, line: 185, type: !779, isLocal: true, isDefinition: true)
!834 = distinct !DISubprogram(name: "vsf_log_do_log_wuftpd_format", scope: !758, file: !758, line: 182, type: !835, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !828, retainedNodes: !128)
!835 = !DISubroutineType(types: !836)
!836 = !{null, !761, !837, !19}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "s_tmp_str", scope: !840, file: !841, line: 314, type: !845, isLocal: true, isDefinition: true)
!840 = distinct !DISubprogram(name: "str_lpad", scope: !841, file: !841, line: 312, type: !842, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!841 = !DIFile(filename: "str.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!842 = !DISubroutineType(types: !843)
!843 = !{null, !844, !850}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !846)
!846 = !{!847, !848, !849}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "p_buf", scope: !845, file: !34, line: 12, baseType: !16, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !845, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_bytes", scope: !845, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !841, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !852, globals: !853)
!852 = !{!844, !17, !19}
!853 = !{!838, !854, !859, !861}
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "s_lhs_chunk_str", scope: !856, file: !841, line: 346, type: !845, isLocal: true, isDefinition: true)
!856 = distinct !DISubprogram(name: "str_replace_text", scope: !841, file: !841, line: 344, type: !857, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!857 = !DISubroutineType(types: !858)
!858 = !{null, !844, !88, !88}
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "s_rhs_chunk_str", scope: !856, file: !841, line: 347, type: !845, isLocal: true, isDefinition: true)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "s_curr_line_str", scope: !863, file: !841, line: 689, type: !845, isLocal: true, isDefinition: true)
!863 = distinct !DISubprogram(name: "str_contains_line", scope: !841, file: !841, line: 687, type: !864, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!864 = !DISubroutineType(types: !865)
!865 = !{!19, !866, !866}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "p_getcwd_buf", scope: !870, file: !871, line: 22, type: !16, isLocal: true, isDefinition: true)
!870 = distinct !DISubprogram(name: "str_getcwd", scope: !871, file: !871, line: 20, type: !872, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!871 = !DIFile(filename: "sysstr.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!872 = !DISubroutineType(types: !873)
!873 = !{null, !874}
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !876)
!876 = !{!877, !878, !879}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !875, file: !34, line: 12, baseType: !16, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !875, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !875, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !871, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !881, retainedTypes: !338, globals: !887)
!881 = !{!219, !882}
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFSysUtilOpenMode", file: !13, line: 76, size: 32, elements: !883)
!883 = !{!884, !885, !886}
!884 = !DIEnumerator(name: "kVSFSysUtilOpenReadOnly", value: 1)
!885 = !DIEnumerator(name: "kVSFSysUtilOpenWriteOnly", value: 2)
!886 = !DIEnumerator(name: "kVSFSysUtilOpenReadWrite", value: 3)
!887 = !{!868, !888}
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "p_readlink_buf", scope: !890, file: !871, line: 149, type: !16, isLocal: true, isDefinition: true)
!890 = distinct !DISubprogram(name: "str_readlink", scope: !871, file: !871, line: 147, type: !891, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!891 = !DISubroutineType(types: !892)
!892 = !{!19, !874, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "s_null_str", scope: !897, file: !898, line: 27, type: !905, isLocal: true, isDefinition: true)
!897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !898, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !899, globals: !911)
!898 = !DIFile(filename: "strlist.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!899 = !{!26, !900}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr_list_node", file: !898, line: 18, size: 256, elements: !903)
!903 = !{!904, !910}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !902, file: !898, line: 20, baseType: !905, size: 128)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !906)
!906 = !{!907, !908, !909}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !905, file: !34, line: 12, baseType: !16, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !905, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !905, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "sort_key_str", scope: !902, file: !898, line: 21, baseType: !905, size: 128, offset: 128)
!911 = !{!912, !895}
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression(DW_OP_constu, 10000000, DW_OP_stack_value))
!913 = distinct !DIGlobalVariable(name: "kMaxStrlist", scope: !897, file: !898, line: 25, type: !850, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "s_p_saved_filename", scope: !916, file: !917, line: 19, type: !88, isLocal: true, isDefinition: true)
!916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !917, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !918, globals: !919)
!917 = !DIFile(filename: "parseconf.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!918 = !{!16, !26}
!919 = !{!920, !930, !914, !932, !942, !952}
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "s_setting_str", scope: !922, file: !917, line: 255, type: !925, isLocal: true, isDefinition: true)
!922 = distinct !DISubprogram(name: "vsf_parseconf_load_setting", scope: !917, file: !917, line: 253, type: !923, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !916, retainedNodes: !128)
!923 = !DISubroutineType(types: !924)
!924 = !{null, !88, !19}
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !926)
!926 = !{!927, !928, !929}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !925, file: !34, line: 12, baseType: !16, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !925, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !925, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "s_value_str", scope: !922, file: !917, line: 256, type: !925, isLocal: true, isDefinition: true)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "parseconf_str_array", scope: !916, file: !917, line: 148, type: !934, isLocal: true, isDefinition: true)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 4224, elements: !940)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parseconf_str_setting", file: !917, line: 143, size: 128, elements: !936)
!936 = !{!937, !938}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "p_setting_name", scope: !935, file: !917, line: 145, baseType: !88, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "p_variable", scope: !935, file: !917, line: 146, baseType: !939, size: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!940 = !{!941}
!941 = !DISubrange(count: 33)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "parseconf_bool_array", scope: !916, file: !917, line: 28, type: !944, isLocal: true, isDefinition: true)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !945, size: 10368, elements: !950)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parseconf_bool_setting", file: !917, line: 23, size: 128, elements: !946)
!946 = !{!947, !948}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "p_setting_name", scope: !945, file: !917, line: 25, baseType: !88, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "p_variable", scope: !945, file: !917, line: 26, baseType: !949, size: 64, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!950 = !{!951}
!951 = !DISubrange(count: 81)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "parseconf_uint_array", scope: !916, file: !917, line: 118, type: !954, isLocal: true, isDefinition: true)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 2688, elements: !959)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parseconf_uint_setting", file: !917, line: 113, size: 128, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "p_setting_name", scope: !955, file: !917, line: 115, baseType: !88, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "p_variable", scope: !955, file: !917, line: 116, baseType: !746, size: 64, offset: 64)
!959 = !{!960}
!960 = !DISubrange(count: 21)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "p_sockaddr", scope: !963, file: !964, line: 39, type: !154, isLocal: true, isDefinition: true)
!963 = distinct !DISubprogram(name: "vsf_privop_get_ftp_port_sock", scope: !964, file: !964, line: 35, type: !965, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!964 = !DIFile(filename: "privops.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!965 = !DISubroutineType(types: !966)
!966 = !{!19, !967, !225, !19}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !969)
!969 = !{!970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !968, file: !8, line: 21, baseType: !154, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !968, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !968, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !968, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !968, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !968, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !968, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !968, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !968, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !968, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !968, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !968, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !968, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !968, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !968, file: !8, line: 39, baseType: !985, size: 128, offset: 704)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !986)
!986 = !{!987, !988, !989}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !985, file: !34, line: 12, baseType: !16, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !985, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !985, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !968, file: !8, line: 40, baseType: !985, size: 128, offset: 832)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !968, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !968, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !968, file: !8, line: 45, baseType: !985, size: 128, offset: 1088)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !968, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !968, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !968, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !968, file: !8, line: 51, baseType: !985, size: 128, offset: 1344)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !968, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !968, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !968, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !968, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !968, file: !8, line: 62, baseType: !985, size: 128, offset: 1664)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !968, file: !8, line: 63, baseType: !985, size: 128, offset: 1792)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !968, file: !8, line: 64, baseType: !985, size: 128, offset: 1920)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !968, file: !8, line: 65, baseType: !985, size: 128, offset: 2048)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !968, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !968, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !968, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !968, file: !8, line: 71, baseType: !985, size: 128, offset: 2304)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !968, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !968, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !968, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !968, file: !8, line: 75, baseType: !985, size: 128, offset: 2624)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !968, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !968, file: !8, line: 79, baseType: !985, size: 128, offset: 2816)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !968, file: !8, line: 80, baseType: !985, size: 128, offset: 2944)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !968, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !968, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !968, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !968, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !968, file: !8, line: 89, baseType: !985, size: 128, offset: 3200)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !968, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !968, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !968, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !968, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !968, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !968, file: !8, line: 97, baseType: !985, size: 128, offset: 3584)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !968, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !968, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !968, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !968, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!1032 = distinct !DICompileUnit(language: DW_LANG_C99, file: !964, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1033, retainedTypes: !1051, globals: !1052)
!1033 = !{!1034, !1044, !92}
!1034 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFSysUtilError", file: !13, line: 12, size: 32, elements: !1035)
!1035 = !{!1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043}
!1036 = !DIEnumerator(name: "kVSFSysUtilErrUnknown", value: 1)
!1037 = !DIEnumerator(name: "kVSFSysUtilErrADDRINUSE", value: 2)
!1038 = !DIEnumerator(name: "kVSFSysUtilErrNOSYS", value: 3)
!1039 = !DIEnumerator(name: "kVSFSysUtilErrINTR", value: 4)
!1040 = !DIEnumerator(name: "kVSFSysUtilErrINVAL", value: 5)
!1041 = !DIEnumerator(name: "kVSFSysUtilErrOPNOTSUPP", value: 6)
!1042 = !DIEnumerator(name: "kVSFSysUtilErrACCES", value: 7)
!1043 = !DIEnumerator(name: "kVSFSysUtilErrNOENT", value: 8)
!1044 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFPrivopLoginResult", file: !1045, line: 75, size: 32, elements: !1046)
!1045 = !DIFile(filename: "./privops.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1046 = !{!1047, !1048, !1049, !1050}
!1047 = !DIEnumerator(name: "kVSFLoginNull", value: 0)
!1048 = !DIEnumerator(name: "kVSFLoginFail", value: 1)
!1049 = !DIEnumerator(name: "kVSFLoginAnon", value: 2)
!1050 = !DIEnumerator(name: "kVSFLoginReal", value: 3)
!1051 = !{!225, !692}
!1052 = !{!961, !1053, !1058}
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "s_p_sockaddr", scope: !1055, file: !964, line: 122, type: !154, isLocal: true, isDefinition: true)
!1055 = distinct !DISubprogram(name: "vsf_privop_pasv_listen", scope: !964, file: !964, line: 120, type: !1056, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!225, !967}
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "s_p_statbuf", scope: !1060, file: !964, line: 228, type: !704, isLocal: true, isDefinition: true)
!1060 = distinct !DISubprogram(name: "vsf_privop_do_file_chown", scope: !964, file: !964, line: 226, type: !1061, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{null, !967, !19}
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "s_ipaddr_size", scope: !1065, file: !1066, line: 25, type: !26, isLocal: true, isDefinition: true)
!1065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1066, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1067, retainedTypes: !1068, globals: !1077)
!1066 = !DIFile(filename: "standalone.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1067 = !{!113}
!1068 = !{!225, !80, !746, !26, !1069, !1074}
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_ipaddr", scope: !1071, file: !1066, line: 247, flags: DIFlagFwdDecl)
!1071 = distinct !DISubprogram(name: "handle_sigchld", scope: !1066, file: !1066, line: 238, type: !1072, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{null, !80}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1077 = !{!1078, !1080, !1085, !1063}
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "s_children", scope: !1065, file: !1066, line: 22, type: !26, isLocal: true, isDefinition: true)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "s_p_ip_count_hash", scope: !1065, file: !1066, line: 23, type: !1082, isLocal: true, isDefinition: true)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash", file: !1084, line: 4, flags: DIFlagFwdDecl)
!1084 = !DIFile(filename: "./hash.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "s_p_pid_ip_hash", scope: !1065, file: !1066, line: 24, type: !1082, isLocal: true, isDefinition: true)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "s_ret", scope: !1089, file: !1090, line: 25, type: !1095, isLocal: true, isDefinition: true)
!1089 = distinct !DISubprogram(name: "vsf_sysutil_parse_ipv6", scope: !1090, file: !1090, line: 23, type: !1091, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !128)
!1090 = !DIFile(filename: "ipaddrparse.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!1074, !1093}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !1096)
!1096 = !{!1097, !1098, !1099}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !1095, file: !34, line: 12, baseType: !16, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !1095, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !1095, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!1100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1090, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !1101, globals: !1102)
!1101 = !{!1074, !1076}
!1102 = !{!1087, !1103, !1105, !1107, !1109, !1115, !1121, !1123, !1129}
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "s_rhs_ret", scope: !1089, file: !1090, line: 26, type: !1095, isLocal: true, isDefinition: true)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "s_lhs_str", scope: !1089, file: !1090, line: 27, type: !1095, isLocal: true, isDefinition: true)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "s_rhs_str", scope: !1089, file: !1090, line: 28, type: !1095, isLocal: true, isDefinition: true)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "items", scope: !1111, file: !1090, line: 64, type: !1112, isLocal: true, isDefinition: true)
!1111 = distinct !DISubprogram(name: "vsf_sysutil_parse_ipv4", scope: !1090, file: !1090, line: 62, type: !1091, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !128)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 32, elements: !1113)
!1113 = !{!1114}
!1114 = !DISubrange(count: 4)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "s_tmp_str", scope: !1117, file: !1090, line: 73, type: !1095, isLocal: true, isDefinition: true)
!1117 = distinct !DISubprogram(name: "vsf_sysutil_parse_uchar_string_sep", scope: !1090, file: !1090, line: 69, type: !1118, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !128)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!1074, !1093, !17, !1120, !26}
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "s_rhs_sep_str", scope: !1117, file: !1090, line: 78, type: !1095, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "s_lhs_str", scope: !1125, file: !1090, line: 106, type: !1095, isLocal: true, isDefinition: true)
!1125 = distinct !DISubprogram(name: "ipv6_parse_main", scope: !1090, file: !1090, line: 104, type: !1126, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1100, retainedNodes: !128)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!19, !1128, !1093}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "s_rhs_str", scope: !1125, file: !1090, line: 107, type: !1095, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "s_access_str", scope: !1133, file: !1134, line: 18, type: !1139, isLocal: true, isDefinition: true)
!1133 = distinct !DISubprogram(name: "vsf_access_check_file", scope: !1134, file: !1134, line: 16, type: !1135, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1144, retainedNodes: !128)
!1134 = !DIFile(filename: "access.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!19, !1137}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !1140)
!1140 = !{!1141, !1142, !1143}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !1139, file: !34, line: 12, baseType: !16, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !1139, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !1139, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!1144 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1134, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, globals: !1145)
!1145 = !{!1131, !1146}
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "s_access_str", scope: !1148, file: !1134, line: 48, type: !1139, isLocal: true, isDefinition: true)
!1148 = distinct !DISubprogram(name: "vsf_access_check_file_visible", scope: !1134, file: !1134, line: 46, type: !1135, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1144, retainedNodes: !128)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "p_sockptr", scope: !1151, file: !1152, line: 200, type: !154, isLocal: true, isDefinition: true)
!1151 = distinct !DISubprogram(name: "connect_validator", scope: !1152, file: !1152, line: 190, type: !1153, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1158, retainedNodes: !128)
!1152 = !DIFile(filename: "ftppolicy.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!19, !1155, !80}
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DICompositeType(tag: DW_TAG_structure_type, name: "pt_sandbox", file: !1157, line: 5, flags: DIFlagFwdDecl)
!1157 = !DIFile(filename: "./ftppolicy.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1159, retainedTypes: !1201, globals: !1322)
!1159 = !{!1160, !1172}
!1160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !1161, line: 24, size: 32, elements: !1162)
!1161 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1162 = !{!1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171}
!1163 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!1164 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!1165 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!1166 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!1167 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!1168 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!1169 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!1170 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!1171 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!1172 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1173, line: 40, size: 32, elements: !1174)
!1173 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1174 = !{!1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200}
!1175 = !DIEnumerator(name: "IPPROTO_IP", value: 0)
!1176 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1)
!1177 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2)
!1178 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4)
!1179 = !DIEnumerator(name: "IPPROTO_TCP", value: 6)
!1180 = !DIEnumerator(name: "IPPROTO_EGP", value: 8)
!1181 = !DIEnumerator(name: "IPPROTO_PUP", value: 12)
!1182 = !DIEnumerator(name: "IPPROTO_UDP", value: 17)
!1183 = !DIEnumerator(name: "IPPROTO_IDP", value: 22)
!1184 = !DIEnumerator(name: "IPPROTO_TP", value: 29)
!1185 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33)
!1186 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41)
!1187 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46)
!1188 = !DIEnumerator(name: "IPPROTO_GRE", value: 47)
!1189 = !DIEnumerator(name: "IPPROTO_ESP", value: 50)
!1190 = !DIEnumerator(name: "IPPROTO_AH", value: 51)
!1191 = !DIEnumerator(name: "IPPROTO_MTP", value: 92)
!1192 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94)
!1193 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98)
!1194 = !DIEnumerator(name: "IPPROTO_PIM", value: 103)
!1195 = !DIEnumerator(name: "IPPROTO_COMP", value: 108)
!1196 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132)
!1197 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136)
!1198 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137)
!1199 = !DIEnumerator(name: "IPPROTO_RAW", value: 255)
!1200 = !DIEnumerator(name: "IPPROTO_MAX", value: 256)
!1201 = !{!80, !1202, !19, !1267, !1278, !1074, !1299}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !1203, file: !8, line: 21, baseType: !154, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !1203, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !1203, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !1203, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !1203, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !1203, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !1203, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !1203, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !1203, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !1203, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !1203, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !1203, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !1203, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !1203, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !1203, file: !8, line: 39, baseType: !1220, size: 128, offset: 704)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !1221)
!1221 = !{!1222, !1223, !1224}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !1220, file: !34, line: 12, baseType: !16, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !1220, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !1220, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !1203, file: !8, line: 40, baseType: !1220, size: 128, offset: 832)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !1203, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !1203, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !1203, file: !8, line: 45, baseType: !1220, size: 128, offset: 1088)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !1203, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !1203, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !1203, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !1203, file: !8, line: 51, baseType: !1220, size: 128, offset: 1344)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !1203, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !1203, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !1203, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !1203, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !1203, file: !8, line: 62, baseType: !1220, size: 128, offset: 1664)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !1203, file: !8, line: 63, baseType: !1220, size: 128, offset: 1792)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !1203, file: !8, line: 64, baseType: !1220, size: 128, offset: 1920)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !1203, file: !8, line: 65, baseType: !1220, size: 128, offset: 2048)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !1203, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !1203, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !1203, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !1203, file: !8, line: 71, baseType: !1220, size: 128, offset: 2304)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !1203, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !1203, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !1203, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !1203, file: !8, line: 75, baseType: !1220, size: 128, offset: 2624)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !1203, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !1203, file: !8, line: 79, baseType: !1220, size: 128, offset: 2816)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !1203, file: !8, line: 80, baseType: !1220, size: 128, offset: 2944)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !1203, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !1203, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !1203, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !1203, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !1203, file: !8, line: 89, baseType: !1220, size: 128, offset: 3200)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !1203, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !1203, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !1203, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !1203, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !1203, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !1203, file: !8, line: 97, baseType: !1220, size: 128, offset: 3584)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !1203, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !1203, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !1203, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !1203, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1269, line: 175, size: 128, elements: !1270)
!1269 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1270 = !{!1271, !1274}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1268, file: !1269, line: 177, baseType: !1272, size: 16)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !1273, line: 28, baseType: !225)
!1273 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1268, file: !1269, line: 178, baseType: !1275, size: 112, offset: 16)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 112, elements: !1276)
!1276 = !{!1277}
!1277 = !DISubrange(count: 14)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !1173, line: 237, size: 128, elements: !1280)
!1280 = !{!1281, !1282, !1288, !1295}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !1279, file: !1173, line: 239, baseType: !1272, size: 16)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !1279, file: !1173, line: 240, baseType: !1283, size: 16, offset: 16)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !1173, line: 119, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1285, line: 25, baseType: !1286)
!1285 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !1287, line: 39, baseType: !225)
!1287 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !1279, file: !1173, line: 241, baseType: !1289, size: 32, offset: 32)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !1173, line: 31, size: 32, elements: !1290)
!1290 = !{!1291}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !1289, file: !1173, line: 33, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !1173, line: 30, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1285, line: 26, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1287, line: 41, baseType: !26)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !1279, file: !1173, line: 244, baseType: !1296, size: 64, offset: 64)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 64, elements: !1297)
!1297 = !{!1298}
!1298 = !DISubrange(count: 8)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !1173, line: 252, size: 224, elements: !1301)
!1301 = !{!1302, !1303, !1304, !1305, !1321}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1300, file: !1173, line: 254, baseType: !1272, size: 16)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1300, file: !1173, line: 255, baseType: !1283, size: 16, offset: 16)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1300, file: !1173, line: 256, baseType: !1293, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1300, file: !1173, line: 257, baseType: !1306, size: 128, offset: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !1173, line: 211, size: 128, elements: !1307)
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !1306, file: !1173, line: 218, baseType: !1309, size: 128)
!1309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1306, file: !1173, line: 213, size: 128, elements: !1310)
!1310 = !{!1311, !1317, !1319}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !1309, file: !1173, line: 215, baseType: !1312, size: 128)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1313, size: 128, elements: !1315)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1285, line: 24, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !1287, line: 37, baseType: !1076)
!1315 = !{!1316}
!1316 = !DISubrange(count: 16)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !1309, file: !1173, line: 216, baseType: !1318, size: 128)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 128, elements: !1297)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !1309, file: !1173, line: 217, baseType: !1320, size: 128)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1293, size: 128, elements: !1113)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1300, file: !1173, line: 258, baseType: !1293, size: 32, offset: 192)
!1322 = !{!1149}
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "s_io_handler", scope: !1325, file: !1326, line: 81, type: !1669, isLocal: true, isDefinition: true)
!1325 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1326, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1327, retainedTypes: !1402, globals: !1493)
!1326 = !DIFile(filename: "sysutil.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1327 = !{!1328, !113, !1172, !1332, !1355, !1370, !882, !1034, !1160, !1374, !1380}
!1328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFSysUtilInterruptContext", file: !13, line: 35, size: 32, elements: !1329)
!1329 = !{!1330, !1331}
!1330 = !DIEnumerator(name: "kVSFSysUtilUnknown", value: 0)
!1331 = !DIEnumerator(name: "kVSFSysUtilIO", value: 1)
!1332 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1269, line: 197, size: 32, elements: !1333)
!1333 = !{!1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354}
!1334 = !DIEnumerator(name: "MSG_OOB", value: 1)
!1335 = !DIEnumerator(name: "MSG_PEEK", value: 2)
!1336 = !DIEnumerator(name: "MSG_DONTROUTE", value: 4)
!1337 = !DIEnumerator(name: "MSG_CTRUNC", value: 8)
!1338 = !DIEnumerator(name: "MSG_PROXY", value: 16)
!1339 = !DIEnumerator(name: "MSG_TRUNC", value: 32)
!1340 = !DIEnumerator(name: "MSG_DONTWAIT", value: 64)
!1341 = !DIEnumerator(name: "MSG_EOR", value: 128)
!1342 = !DIEnumerator(name: "MSG_WAITALL", value: 256)
!1343 = !DIEnumerator(name: "MSG_FIN", value: 512)
!1344 = !DIEnumerator(name: "MSG_SYN", value: 1024)
!1345 = !DIEnumerator(name: "MSG_CONFIRM", value: 2048)
!1346 = !DIEnumerator(name: "MSG_RST", value: 4096)
!1347 = !DIEnumerator(name: "MSG_ERRQUEUE", value: 8192)
!1348 = !DIEnumerator(name: "MSG_NOSIGNAL", value: 16384)
!1349 = !DIEnumerator(name: "MSG_MORE", value: 32768)
!1350 = !DIEnumerator(name: "MSG_WAITFORONE", value: 65536)
!1351 = !DIEnumerator(name: "MSG_BATCH", value: 262144)
!1352 = !DIEnumerator(name: "MSG_ZEROCOPY", value: 67108864)
!1353 = !DIEnumerator(name: "MSG_FASTOPEN", value: 536870912)
!1354 = !DIEnumerator(name: "MSG_CMSG_CLOEXEC", value: 1073741824)
!1355 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1356, line: 46, size: 32, elements: !1357)
!1356 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1357 = !{!1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1358 = !DIEnumerator(name: "_ISupper", value: 256)
!1359 = !DIEnumerator(name: "_ISlower", value: 512)
!1360 = !DIEnumerator(name: "_ISalpha", value: 1024)
!1361 = !DIEnumerator(name: "_ISdigit", value: 2048)
!1362 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!1363 = !DIEnumerator(name: "_ISspace", value: 8192)
!1364 = !DIEnumerator(name: "_ISprint", value: 16384)
!1365 = !DIEnumerator(name: "_ISgraph", value: 32768)
!1366 = !DIEnumerator(name: "_ISblank", value: 1)
!1367 = !DIEnumerator(name: "_IScntrl", value: 2)
!1368 = !DIEnumerator(name: "_ISpunct", value: 4)
!1369 = !DIEnumerator(name: "_ISalnum", value: 8)
!1370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EVSFSysUtilMapPermission", file: !13, line: 152, size: 32, elements: !1371)
!1371 = !{!1372, !1373}
!1372 = !DIEnumerator(name: "kVSFSysUtilMapProtReadOnly", value: 1)
!1373 = !DIEnumerator(name: "kVSFSysUtilMapProtNone", value: 2)
!1374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 41, size: 32, elements: !1376)
!1375 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/socket.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1376 = !{!1377, !1378, !1379}
!1377 = !DIEnumerator(name: "SHUT_RD", value: 0)
!1378 = !DIEnumerator(name: "SHUT_WR", value: 1)
!1379 = !DIEnumerator(name: "SHUT_RDWR", value: 2)
!1380 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !1381, line: 31, size: 32, elements: !1382)
!1381 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1382 = !{!1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401}
!1383 = !DIEnumerator(name: "RLIMIT_CPU", value: 0)
!1384 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1)
!1385 = !DIEnumerator(name: "RLIMIT_DATA", value: 2)
!1386 = !DIEnumerator(name: "RLIMIT_STACK", value: 3)
!1387 = !DIEnumerator(name: "RLIMIT_CORE", value: 4)
!1388 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5)
!1389 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7)
!1390 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7)
!1391 = !DIEnumerator(name: "RLIMIT_AS", value: 9)
!1392 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6)
!1393 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8)
!1394 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10)
!1395 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11)
!1396 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12)
!1397 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13)
!1398 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14)
!1399 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15)
!1400 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16)
!1401 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16)
!1402 = !{!1403, !80, !16, !26, !88, !1408, !28, !19, !225, !1076, !1413, !1415, !1419, !1457, !1459, !1074, !1461, !1465, !1467, !1479, !1481, !1491, !692}
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1404, line: 72, baseType: !1405)
!1404 = !DIFile(filename: "/usr/include/signal.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{null, !19}
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_wait_retval", file: !13, line: 172, size: 64, elements: !1410)
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_retval", scope: !1409, file: !13, line: 174, baseType: !19, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "exit_status", scope: !1409, file: !13, line: 175, baseType: !19, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_dir", file: !13, line: 70, flags: DIFlagFwdDecl)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !1417, line: 127, baseType: !1418)
!1417 = !DIFile(filename: "/usr/include/dirent.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1418 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !1417, line: 127, flags: DIFlagFwdDecl)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1421, line: 46, size: 1152, elements: !1422)
!1421 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1422 = !{!1423, !1425, !1427, !1429, !1431, !1433, !1435, !1436, !1437, !1439, !1441, !1443, !1451, !1452, !1453}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1420, file: !1421, line: 48, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1287, line: 133, baseType: !65)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1420, file: !1421, line: 53, baseType: !1426, size: 64, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1287, line: 136, baseType: !65)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1420, file: !1421, line: 61, baseType: !1428, size: 64, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1287, line: 139, baseType: !65)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1420, file: !1421, line: 62, baseType: !1430, size: 32, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1287, line: 138, baseType: !26)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1420, file: !1421, line: 64, baseType: !1432, size: 32, offset: 224)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1287, line: 134, baseType: !26)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1420, file: !1421, line: 65, baseType: !1434, size: 32, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1287, line: 135, baseType: !26)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1420, file: !1421, line: 67, baseType: !19, size: 32, offset: 288)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1420, file: !1421, line: 69, baseType: !1424, size: 64, offset: 320)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1420, file: !1421, line: 74, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1287, line: 140, baseType: !28)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1420, file: !1421, line: 78, baseType: !1440, size: 64, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1287, line: 162, baseType: !28)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1420, file: !1421, line: 80, baseType: !1442, size: 64, offset: 512)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1287, line: 167, baseType: !28)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1420, file: !1421, line: 91, baseType: !1444, size: 128, offset: 576)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1445, line: 9, size: 128, elements: !1446)
!1445 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1446 = !{!1447, !1449}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1444, file: !1445, line: 11, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1287, line: 148, baseType: !28)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1444, file: !1445, line: 12, baseType: !1450, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1287, line: 184, baseType: !28)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1420, file: !1421, line: 92, baseType: !1444, size: 128, offset: 704)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1420, file: !1421, line: 93, baseType: !1444, size: 128, offset: 832)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1420, file: !1421, line: 106, baseType: !1454, size: 192, offset: 960)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1450, size: 192, elements: !1455)
!1455 = !{!1456}
!1456 = !DISubrange(count: 3)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1420)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !1460, line: 49, baseType: !28)
!1460 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !1173, line: 31, size: 32, elements: !1463)
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !1462, file: !1173, line: 33, baseType: !1292, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_user", file: !13, line: 284, flags: DIFlagFwdDecl)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !1470, line: 49, size: 384, elements: !1471)
!1470 = !DIFile(filename: "/usr/include/pwd.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1471 = !{!1472, !1473, !1474, !1475, !1476, !1477, !1478}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1469, file: !1470, line: 51, baseType: !16, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1469, file: !1470, line: 52, baseType: !16, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1469, file: !1470, line: 53, baseType: !1432, size: 32, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1469, file: !1470, line: 54, baseType: !1434, size: 32, offset: 160)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1469, file: !1470, line: 55, baseType: !16, size: 64, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1469, file: !1470, line: 56, baseType: !16, size: 64, offset: 256)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1469, file: !1470, line: 57, baseType: !16, size: 64, offset: 320)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_group", file: !13, line: 285, flags: DIFlagFwdDecl)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1484, line: 42, size: 256, elements: !1485)
!1484 = !DIFile(filename: "/usr/include/grp.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1485 = !{!1486, !1487, !1488, !1489}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1483, file: !1484, line: 44, baseType: !16, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1483, file: !1484, line: 45, baseType: !16, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1483, file: !1484, line: 46, baseType: !1434, size: 32, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1483, file: !1484, line: 47, baseType: !1490, size: 64, offset: 192)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1492, line: 7, baseType: !1448)
!1492 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1493 = !{!1494, !1502, !1507, !1512, !1517, !1522, !1532, !1540, !1548, !1551, !1590, !1602, !1606, !1611, !1616, !1624, !1629, !1631, !1639, !1643, !1645, !1323, !1663, !1665, !1667}
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "ulong_buf", scope: !1496, file: !1326, line: 836, type: !1499, isLocal: true, isDefinition: true)
!1496 = distinct !DISubprogram(name: "vsf_sysutil_ulong_to_str", scope: !1326, file: !1326, line: 834, type: !1497, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!88, !65}
!1499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 256, elements: !1500)
!1500 = !{!1501}
!1501 = !DISubrange(count: 32)
!1502 = !DIGlobalVariableExpression(var: !1503, expr: !DIExpression())
!1503 = distinct !DIGlobalVariable(name: "filesize_buf", scope: !1504, file: !1326, line: 844, type: !1499, isLocal: true, isDefinition: true)
!1504 = distinct !DISubprogram(name: "vsf_sysutil_filesize_t_to_str", scope: !1326, file: !1326, line: 842, type: !1505, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!88, !41}
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "double_buf", scope: !1509, file: !1326, line: 861, type: !1499, isLocal: true, isDefinition: true)
!1509 = distinct !DISubprogram(name: "vsf_sysutil_double_to_str", scope: !1326, file: !1326, line: 859, type: !1510, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!88, !692}
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "octal_buf", scope: !1514, file: !1326, line: 869, type: !1499, isLocal: true, isDefinition: true)
!1514 = distinct !DISubprogram(name: "vsf_sysutil_uint_to_octal", scope: !1326, file: !1326, line: 867, type: !1515, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!88, !26}
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "s_page_size", scope: !1519, file: !1326, line: 1096, type: !26, isLocal: true, isDefinition: true)
!1519 = distinct !DISubprogram(name: "vsf_sysutil_getpagesize", scope: !1326, file: !1326, line: 1094, type: !1520, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!26}
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "perms", scope: !1524, file: !1326, line: 1326, type: !1529, isLocal: true, isDefinition: true)
!1524 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_perms", scope: !1326, file: !1326, line: 1324, type: !1525, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!88, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 88, elements: !1530)
!1530 = !{!1531}
!1531 = !DISubrange(count: 11)
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "datebuf", scope: !1534, file: !1326, line: 1365, type: !1537, isLocal: true, isDefinition: true)
!1534 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_date", scope: !1326, file: !1326, line: 1362, type: !1535, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!88, !1527, !19, !28}
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 512, elements: !1538)
!1538 = !{!1539}
!1539 = !DISubrange(count: 64)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "datebuf", scope: !1542, file: !1326, line: 1398, type: !1545, isLocal: true, isDefinition: true)
!1542 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_numeric_date", scope: !1326, file: !1326, line: 1394, type: !1543, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!88, !1527, !19}
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 120, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 15)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "intbuf", scope: !1550, file: !1326, line: 1466, type: !1499, isLocal: true, isDefinition: true)
!1550 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_sortkey_mtime", scope: !1326, file: !1326, line: 1463, type: !1525, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "s_p_sockaddr", scope: !1553, file: !1326, line: 2028, type: !1556, isLocal: true, isDefinition: true)
!1553 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_set_ipv4addr", scope: !1326, file: !1326, line: 2018, type: !1554, scopeLine: 2020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{null, !1556, !1074}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_sockaddr", file: !1326, line: 85, size: 224, elements: !1558)
!1558 = !{!1559}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1557, file: !1326, line: 92, baseType: !1560, size: 224)
!1560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1557, file: !1326, line: 87, size: 224, elements: !1561)
!1561 = !{!1562, !1567, !1574}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "u_sockaddr", scope: !1560, file: !1326, line: 89, baseType: !1563, size: 128)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1269, line: 175, size: 128, elements: !1564)
!1564 = !{!1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1563, file: !1269, line: 177, baseType: !1272, size: 16)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1563, file: !1269, line: 178, baseType: !1275, size: 112, offset: 16)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "u_sockaddr_in", scope: !1560, file: !1326, line: 90, baseType: !1568, size: 128)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !1173, line: 237, size: 128, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !1568, file: !1173, line: 239, baseType: !1272, size: 16)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !1568, file: !1173, line: 240, baseType: !1283, size: 16, offset: 16)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !1568, file: !1173, line: 241, baseType: !1462, size: 32, offset: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !1568, file: !1173, line: 244, baseType: !1296, size: 64, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "u_sockaddr_in6", scope: !1560, file: !1326, line: 91, baseType: !1575, size: 224)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !1173, line: 252, size: 224, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580, !1589}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1575, file: !1173, line: 254, baseType: !1272, size: 16)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1575, file: !1173, line: 255, baseType: !1283, size: 16, offset: 16)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1575, file: !1173, line: 256, baseType: !1293, size: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1575, file: !1173, line: 257, baseType: !1581, size: 128, offset: 64)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !1173, line: 211, size: 128, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !1581, file: !1173, line: 218, baseType: !1584, size: 128)
!1584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1581, file: !1173, line: 213, size: 128, elements: !1585)
!1585 = !{!1586, !1587, !1588}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !1584, file: !1173, line: 215, baseType: !1312, size: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !1584, file: !1173, line: 216, baseType: !1318, size: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !1584, file: !1173, line: 217, baseType: !1320, size: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1575, file: !1173, line: 258, baseType: !1293, size: 32, offset: 192)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "pattern", scope: !1592, file: !1326, line: 2060, type: !1599, isLocal: true, isDefinition: true)
!1592 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_ipv6_v4", scope: !1326, file: !1326, line: 2058, type: !1593, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!1595, !1597}
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 96, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 12)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "ret", scope: !1604, file: !1326, line: 2078, type: !1605, isLocal: true, isDefinition: true)
!1604 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_ipv4_v6", scope: !1326, file: !1326, line: 2076, type: !1593, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 128, elements: !1315)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "inaddr_buf", scope: !1608, file: !1326, line: 2212, type: !1537, isLocal: true, isDefinition: true)
!1608 = distinct !DISubprogram(name: "vsf_sysutil_inet_ntop", scope: !1326, file: !1326, line: 2203, type: !1609, scopeLine: 2204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!88, !1597}
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "seeded", scope: !1613, file: !1326, line: 2358, type: !19, isLocal: true, isDefinition: true)
!1613 = distinct !DISubprogram(name: "vsf_sysutil_get_random_byte", scope: !1326, file: !1326, line: 2356, type: !1614, scopeLine: 2357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!1076}
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "envtz", scope: !1618, file: !1326, line: 2578, type: !1621, isLocal: true, isDefinition: true)
!1618 = distinct !DISubprogram(name: "vsf_sysutil_tzset", scope: !1326, file: !1326, line: 2557, type: !1619, scopeLine: 2558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{null}
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 104, elements: !1622)
!1622 = !{!1623}
!1623 = !DISubrange(count: 13)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "datebuf", scope: !1626, file: !1326, line: 2621, type: !1537, isLocal: true, isDefinition: true)
!1626 = distinct !DISubprogram(name: "vsf_sysutil_get_current_date", scope: !1326, file: !1326, line: 2619, type: !1627, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!88}
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "s_current_umask", scope: !1325, file: !1326, line: 61, type: !26, isLocal: true, isDefinition: true)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "s_current_time", scope: !1325, file: !1326, line: 63, type: !1633, isLocal: true, isDefinition: true)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1634, line: 8, size: 128, elements: !1635)
!1634 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1633, file: !1634, line: 10, baseType: !1448, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1633, file: !1634, line: 11, baseType: !1638, size: 64, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !1287, line: 150, baseType: !28)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "s_exit_func", scope: !1325, file: !1326, line: 67, type: !1641, isLocal: true, isDefinition: true)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitfunc_t", file: !13, line: 311, baseType: !1642)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "s_timezone", scope: !1325, file: !1326, line: 69, type: !28, isLocal: true, isDefinition: true)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "s_sig_details", scope: !1325, file: !1326, line: 79, type: !1647, isLocal: true, isDefinition: true)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 16640, elements: !1661)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_sig_details", file: !1326, line: 72, size: 256, elements: !1649)
!1649 = !{!1650, !1653, !1654, !1659, !1660}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "sync_sig_handler", scope: !1648, file: !1326, line: 74, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "vsf_sighandle_t", file: !13, line: 40, baseType: !1652)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "p_private", scope: !1648, file: !1326, line: 75, baseType: !80, size: 64, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1648, file: !1326, line: 76, baseType: !1655, size: 32, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !1657, line: 8, baseType: !1658)
!1657 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sig_atomic_t.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !1287, line: 202, baseType: !19)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1648, file: !1326, line: 77, baseType: !19, size: 32, offset: 160)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "use_alarm", scope: !1648, file: !1326, line: 78, baseType: !19, size: 32, offset: 192)
!1661 = !{!1662}
!1662 = !DISubrange(count: 65)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "s_p_io_handler_private", scope: !1325, file: !1326, line: 82, type: !80, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "s_io_handler_running", scope: !1325, file: !1326, line: 83, type: !19, isLocal: true, isDefinition: true)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "s_current_pid", scope: !1325, file: !1326, line: 65, type: !19, isLocal: true, isDefinition: true)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "vsf_context_io_t", file: !13, line: 42, baseType: !1670)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{null, !19, !19, !80}
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "s_pamh", scope: !1675, file: !1676, line: 314, type: !1793, isLocal: true, isDefinition: true)
!1675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1676, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1677, retainedTypes: !1696, globals: !1709)
!1676 = !DIFile(filename: "sysdeputil.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1677 = !{!1678, !1683, !1689, !1693, !1034, !1328}
!1678 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ESysdepCapabilities", file: !1679, line: 26, size: 32, elements: !1680)
!1679 = !DIFile(filename: "./sysdeputil.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1680 = !{!1681, !1682}
!1681 = !DIEnumerator(name: "kCapabilityCAP_CHOWN", value: 1)
!1682 = !DIEnumerator(name: "kCapabilityCAP_NET_BIND_SERVICE", value: 2)
!1683 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1684, line: 52, size: 32, elements: !1685)
!1684 = !DIFile(filename: "/usr/include/sys/capability.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1685 = !{!1686, !1687, !1688}
!1686 = !DIEnumerator(name: "CAP_EFFECTIVE", value: 0)
!1687 = !DIEnumerator(name: "CAP_PERMITTED", value: 1)
!1688 = !DIEnumerator(name: "CAP_INHERITABLE", value: 2)
!1689 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1684, line: 61, size: 32, elements: !1690)
!1690 = !{!1691, !1692}
!1691 = !DIEnumerator(name: "CAP_CLEAR", value: 0)
!1692 = !DIEnumerator(name: "CAP_SET", value: 1)
!1693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1269, line: 329, size: 32, elements: !1694)
!1694 = !{!1695}
!1695 = !DIEnumerator(name: "SCM_RIGHTS", value: 1)
!1696 = !{!26, !16, !80, !1697, !1699, !949}
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1698, line: 62, baseType: !65)
!1698 = !DIFile(filename: "/usr/lib/llvm-6.0/lib/clang/6.0.0/include/stddef.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmsghdr", file: !1269, line: 272, size: 128, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "cmsg_len", scope: !1700, file: !1269, line: 274, baseType: !1697, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cmsg_level", scope: !1700, file: !1269, line: 279, baseType: !19, size: 32, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "cmsg_type", scope: !1700, file: !1269, line: 280, baseType: !19, size: 32, offset: 96)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "__cmsg_data", scope: !1700, file: !1269, line: 282, baseType: !1706, offset: 128)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: -1)
!1709 = !{!1710, !1715, !1717, !1720, !1722, !1725, !1728, !1731, !1673, !1738, !1740, !1742, !1777, !1783, !1785, !1787, !1789, !1791}
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "s_prctl_checked", scope: !1712, file: !1676, line: 531, type: !19, isLocal: true, isDefinition: true)
!1712 = distinct !DISubprogram(name: "vsf_sysdep_has_capabilities_as_non_root", scope: !1676, file: !1676, line: 529, type: !1713, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!19}
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "s_runtime_prctl_works", scope: !1712, file: !1676, line: 532, type: !19, isLocal: true, isDefinition: true)
!1717 = !DIGlobalVariableExpression(var: !1718, expr: !DIExpression())
!1718 = distinct !DIGlobalVariable(name: "s_caps_checked", scope: !1719, file: !1676, line: 553, type: !19, isLocal: true, isDefinition: true)
!1719 = distinct !DISubprogram(name: "vsf_sysdep_has_capabilities", scope: !1676, file: !1676, line: 548, type: !1713, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "s_runtime_has_caps", scope: !1719, file: !1676, line: 554, type: !19, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "cloneflags_work", scope: !1724, file: !1676, line: 1269, type: !19, isLocal: true, isDefinition: true)
!1724 = distinct !DISubprogram(name: "vsf_sysutil_fork_isolate_all_failok", scope: !1676, file: !1676, line: 1266, type: !1713, scopeLine: 1267, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "cloneflags_work", scope: !1727, file: !1676, line: 1293, type: !19, isLocal: true, isDefinition: true)
!1727 = distinct !DISubprogram(name: "vsf_sysutil_fork_isolate_failok", scope: !1676, file: !1676, line: 1290, type: !1713, scopeLine: 1291, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "cloneflags_work", scope: !1730, file: !1676, line: 1315, type: !19, isLocal: true, isDefinition: true)
!1730 = distinct !DISubprogram(name: "vsf_sysutil_fork_newnet", scope: !1676, file: !1676, line: 1312, type: !1713, scopeLine: 1313, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "s_proctitle_prefix_str", scope: !1675, file: !1676, line: 232, type: !1733, isLocal: true, isDefinition: true)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !1734)
!1734 = !{!1735, !1736, !1737}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !1733, file: !34, line: 12, baseType: !16, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !1733, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !1733, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "s_pword_str", scope: !1675, file: !1676, line: 315, type: !1733, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "s_uwtmp_inserted", scope: !1675, file: !1676, line: 1180, type: !19, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "s_utent", scope: !1675, file: !1676, line: 1181, type: !1744, isLocal: true, isDefinition: true)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !1745, line: 55, size: 3072, elements: !1746)
!1745 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/utmpx.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1746 = !{!1747, !1749, !1751, !1752, !1754, !1755, !1759, !1764, !1766, !1771, !1773}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !1744, file: !1745, line: 57, baseType: !1748, size: 16)
!1748 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !1744, file: !1745, line: 58, baseType: !1750, size: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !1287, line: 142, baseType: !19)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !1744, file: !1745, line: 59, baseType: !1499, size: 256, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !1744, file: !1745, line: 60, baseType: !1753, size: 32, offset: 320)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 32, elements: !1113)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !1744, file: !1745, line: 61, baseType: !1499, size: 256, offset: 352)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !1744, file: !1745, line: 62, baseType: !1756, size: 2048, offset: 608)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 2048, elements: !1757)
!1757 = !{!1758}
!1758 = !DISubrange(count: 256)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !1744, file: !1745, line: 63, baseType: !1760, size: 32, offset: 2656)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !1745, line: 42, size: 32, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !1760, file: !1745, line: 45, baseType: !1748, size: 16)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !1760, file: !1745, line: 46, baseType: !1748, size: 16, offset: 16)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !1744, file: !1745, line: 70, baseType: !1765, size: 32, offset: 2688)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !1287, line: 40, baseType: !19)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !1744, file: !1745, line: 75, baseType: !1767, size: 64, offset: 2720)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1744, file: !1745, line: 71, size: 64, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1767, file: !1745, line: 73, baseType: !1765, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1767, file: !1745, line: 74, baseType: !1765, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !1744, file: !1745, line: 80, baseType: !1772, size: 128, offset: 2784)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1765, size: 128, elements: !1113)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1744, file: !1745, line: 81, baseType: !1774, size: 160, offset: 2912)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 160, elements: !1775)
!1775 = !{!1776}
!1776 = !DISubrange(count: 20)
!1777 = !DIGlobalVariableExpression(var: !1778, expr: !DIExpression())
!1778 = distinct !DIGlobalVariable(name: "p_recvbuf", scope: !1779, file: !1676, line: 695, type: !16, isLocal: true, isDefinition: true)
!1779 = distinct !DISubprogram(name: "do_sendfile", scope: !1676, file: !1676, line: 691, type: !1780, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!19, !1782, !1782, !26, !41}
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "s_sendfile_checked", scope: !1779, file: !1676, line: 708, type: !19, isLocal: true, isDefinition: true)
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "s_runtime_sendfile_works", scope: !1779, file: !1676, line: 709, type: !19, isLocal: true, isDefinition: true)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "s_proctitle_inited", scope: !1675, file: !1676, line: 217, type: !19, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "s_proctitle_space", scope: !1675, file: !1676, line: 216, type: !26, isLocal: true, isDefinition: true)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "s_p_proctitle", scope: !1675, file: !1676, line: 218, type: !16, isLocal: true, isDefinition: true)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "pam_handle_t", file: !1795, line: 18, baseType: !1796)
!1795 = !DIFile(filename: "/usr/include/security/_pam_types.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "pam_handle", file: !1795, line: 18, flags: DIFlagFwdDecl)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "s_syscall_index", scope: !1799, file: !1800, line: 78, type: !1697, isLocal: true, isDefinition: true)
!1799 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1800, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1801, globals: !1802)
!1800 = !DIFile(filename: "seccompsandbox.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1801 = !{!1332, !1172, !1160}
!1802 = !{!1803, !1797, !1805, !1807, !1809, !1811, !1816, !1818, !1820, !1822, !1824, !1826, !1828}
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression(DW_OP_constu, 625856, DW_OP_stack_value))
!1804 = distinct !DIGlobalVariable(name: "kOpenFlags", scope: !1799, file: !1800, line: 75, type: !1782, isLocal: true, isDefinition: true)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "s_1_arg_validations", scope: !1799, file: !1800, line: 79, type: !1697, isLocal: true, isDefinition: true)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "s_2_arg_validations", scope: !1799, file: !1800, line: 80, type: !1697, isLocal: true, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "s_3_arg_validations", scope: !1799, file: !1800, line: 81, type: !1697, isLocal: true, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "s_syscalls", scope: !1799, file: !1800, line: 82, type: !1813, isLocal: true, isDefinition: true)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 3200, elements: !1814)
!1814 = !{!1815}
!1815 = !DISubrange(count: 100)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(name: "s_errnos", scope: !1799, file: !1800, line: 83, type: !1813, isLocal: true, isDefinition: true)
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "s_args_1", scope: !1799, file: !1800, line: 84, type: !1813, isLocal: true, isDefinition: true)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "s_vals_1", scope: !1799, file: !1800, line: 85, type: !1813, isLocal: true, isDefinition: true)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "s_args_2", scope: !1799, file: !1800, line: 86, type: !1813, isLocal: true, isDefinition: true)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "s_vals_2", scope: !1799, file: !1800, line: 87, type: !1813, isLocal: true, isDefinition: true)
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "s_args_3", scope: !1799, file: !1800, line: 88, type: !1813, isLocal: true, isDefinition: true)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "s_vals_3", scope: !1799, file: !1800, line: 89, type: !1813, isLocal: true, isDefinition: true)
!1830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1831, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1067, retainedTypes: !338)
!1831 = !DIFile(filename: "main.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1832 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1833, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1833 = !DIFile(filename: "utility.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1834 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1835, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !829, retainedTypes: !1836)
!1835 = !DIFile(filename: "prelogin.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1836 = !{!692}
!1837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1838, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !1839)
!1838 = !DIFile(filename: "privsock.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1839 = !{!19, !26}
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1842, retainedTypes: !1843)
!1841 = !DIFile(filename: "secbuf.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1842 = !{!1370}
!1843 = !{!746, !65}
!1844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1845, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1846, retainedTypes: !1847)
!1845 = !DIFile(filename: "postprivparent.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1846 = !{!1678}
!1847 = !{!225}
!1848 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1849, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !1850)
!1849 = !DIFile(filename: "netstr.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1850 = !{!26, !19}
!1851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1852, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1852 = !DIFile(filename: "banner.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1854, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1855, retainedTypes: !1521)
!1854 = !DIFile(filename: "filestr.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1855 = !{!882}
!1856 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1857, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1857 = !DIFile(filename: "secutil.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1859, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1859 = !DIFile(filename: "ascii.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1861, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1862, retainedTypes: !1863)
!1861 = !DIFile(filename: "oneprocess.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1862 = !{!1044, !1678}
!1863 = !{!80, !1864}
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !1865, file: !8, line: 21, baseType: !154, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !1865, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !1865, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !1865, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !1865, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !1865, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !1865, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !1865, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !1865, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !1865, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !1865, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !1865, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !1865, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !1865, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !1865, file: !8, line: 39, baseType: !1882, size: 128, offset: 704)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !1883)
!1883 = !{!1884, !1885, !1886}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !1882, file: !34, line: 12, baseType: !16, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !1882, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !1882, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !1865, file: !8, line: 40, baseType: !1882, size: 128, offset: 832)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !1865, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !1865, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !1865, file: !8, line: 45, baseType: !1882, size: 128, offset: 1088)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !1865, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !1865, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !1865, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !1865, file: !8, line: 51, baseType: !1882, size: 128, offset: 1344)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !1865, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !1865, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !1865, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !1865, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !1865, file: !8, line: 62, baseType: !1882, size: 128, offset: 1664)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !1865, file: !8, line: 63, baseType: !1882, size: 128, offset: 1792)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !1865, file: !8, line: 64, baseType: !1882, size: 128, offset: 1920)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !1865, file: !8, line: 65, baseType: !1882, size: 128, offset: 2048)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !1865, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !1865, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !1865, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !1865, file: !8, line: 71, baseType: !1882, size: 128, offset: 2304)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !1865, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !1865, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !1865, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !1865, file: !8, line: 75, baseType: !1882, size: 128, offset: 2624)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !1865, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !1865, file: !8, line: 79, baseType: !1882, size: 128, offset: 2816)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !1865, file: !8, line: 80, baseType: !1882, size: 128, offset: 2944)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !1865, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !1865, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !1865, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !1865, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !1865, file: !8, line: 89, baseType: !1882, size: 128, offset: 3200)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !1865, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !1865, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !1865, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !1865, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !1865, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !1865, file: !8, line: 97, baseType: !1882, size: 128, offset: 3584)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !1865, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !1865, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !1865, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !1865, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!1929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1930, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1931, retainedTypes: !1847)
!1930 = !DIFile(filename: "twoprocess.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1931 = !{!113, !1044, !1034}
!1932 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1933, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !1521)
!1933 = !DIFile(filename: "hash.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1934 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1935, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1935 = !DIFile(filename: "tcpwrap.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1937, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1937 = !DIFile(filename: "features.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1940, retainedTypes: !1714)
!1939 = !DIFile(filename: "readwrite.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1940 = !{!108, !1328}
!1941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1942, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1942 = !DIFile(filename: "opts.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1943 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1944, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1944 = !DIFile(filename: "ssl.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1946, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1947, retainedTypes: !1521)
!1946 = !DIFile(filename: "sslslave.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1947 = !{!108}
!1948 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1949, producer: "clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !128)
!1949 = !DIFile(filename: "ptracesandbox.c", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!1950 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!1951 = !{i32 2, !"Dwarf Version", i32 4}
!1952 = !{i32 2, !"Debug Info Version", i32 3}
!1953 = !{i32 1, !"wchar_size", i32 4}
!1954 = !{i32 7, !"PIC Level", i32 2}
!1955 = !{i32 7, !"PIE Level", i32 2}
!1956 = distinct !DISubprogram(name: "main", scope: !1831, file: !1831, line: 36, type: !1957, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1830, retainedNodes: !128)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!19, !19, !939}
!1959 = !DILocalVariable(name: "argc", arg: 1, scope: !1956, file: !1831, line: 36, type: !19)
!1960 = !DILocation(line: 36, column: 10, scope: !1956)
!1961 = !DILocalVariable(name: "argv", arg: 2, scope: !1956, file: !1831, line: 36, type: !939)
!1962 = !DILocation(line: 36, column: 28, scope: !1956)
!1963 = !DILocalVariable(name: "the_session", scope: !1956, file: !1831, line: 38, type: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !1964, file: !8, line: 21, baseType: !154, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !1964, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !1964, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !1964, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !1964, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !1964, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !1964, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !1964, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !1964, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !1964, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !1964, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !1964, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !1964, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !1964, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !1964, file: !8, line: 39, baseType: !1981, size: 128, offset: 704)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !1982)
!1982 = !{!1983, !1984, !1985}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !1981, file: !34, line: 12, baseType: !16, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !1981, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !1981, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !1964, file: !8, line: 40, baseType: !1981, size: 128, offset: 832)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !1964, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !1964, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !1964, file: !8, line: 45, baseType: !1981, size: 128, offset: 1088)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !1964, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !1964, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !1964, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !1964, file: !8, line: 51, baseType: !1981, size: 128, offset: 1344)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !1964, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !1964, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !1964, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !1964, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !1964, file: !8, line: 62, baseType: !1981, size: 128, offset: 1664)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !1964, file: !8, line: 63, baseType: !1981, size: 128, offset: 1792)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !1964, file: !8, line: 64, baseType: !1981, size: 128, offset: 1920)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !1964, file: !8, line: 65, baseType: !1981, size: 128, offset: 2048)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !1964, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !1964, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !1964, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !1964, file: !8, line: 71, baseType: !1981, size: 128, offset: 2304)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !1964, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !1964, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !1964, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !1964, file: !8, line: 75, baseType: !1981, size: 128, offset: 2624)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !1964, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !1964, file: !8, line: 79, baseType: !1981, size: 128, offset: 2816)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !1964, file: !8, line: 80, baseType: !1981, size: 128, offset: 2944)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !1964, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !1964, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !1964, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !1964, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !1964, file: !8, line: 89, baseType: !1981, size: 128, offset: 3200)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !1964, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !1964, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !1964, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !1964, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !1964, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !1964, file: !8, line: 97, baseType: !1981, size: 128, offset: 3584)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !1964, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !1964, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !1964, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !1964, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!2028 = !DILocation(line: 38, column: 22, scope: !1956)
!2029 = !DILocalVariable(name: "config_loaded", scope: !1956, file: !1831, line: 71, type: !19)
!2030 = !DILocation(line: 71, column: 7, scope: !1956)
!2031 = !DILocalVariable(name: "i", scope: !1956, file: !1831, line: 72, type: !19)
!2032 = !DILocation(line: 72, column: 7, scope: !1956)
!2033 = !DILocation(line: 73, column: 3, scope: !1956)
!2034 = !DILocation(line: 78, column: 3, scope: !1956)
!2035 = !DILocation(line: 85, column: 7, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 85, column: 7)
!2037 = !DILocation(line: 85, column: 12, scope: !2036)
!2038 = !DILocation(line: 85, column: 7, scope: !1956)
!2039 = !DILocation(line: 87, column: 5, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2036, file: !1831, line: 86, column: 3)
!2041 = !DILocation(line: 88, column: 3, scope: !2040)
!2042 = !DILocation(line: 89, column: 10, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 89, column: 3)
!2044 = !DILocation(line: 89, column: 8, scope: !2043)
!2045 = !DILocation(line: 89, column: 15, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2043, file: !1831, line: 89, column: 3)
!2047 = !DILocation(line: 89, column: 19, scope: !2046)
!2048 = !DILocation(line: 89, column: 17, scope: !2046)
!2049 = !DILocation(line: 89, column: 3, scope: !2043)
!2050 = !DILocalVariable(name: "p_arg", scope: !2051, file: !1831, line: 91, type: !88)
!2051 = distinct !DILexicalBlock(scope: !2046, file: !1831, line: 90, column: 3)
!2052 = !DILocation(line: 91, column: 17, scope: !2051)
!2053 = !DILocation(line: 91, column: 25, scope: !2051)
!2054 = !DILocation(line: 91, column: 30, scope: !2051)
!2055 = !DILocation(line: 92, column: 9, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !2051, file: !1831, line: 92, column: 9)
!2057 = !DILocation(line: 92, column: 18, scope: !2056)
!2058 = !DILocation(line: 92, column: 9, scope: !2051)
!2059 = !DILocation(line: 94, column: 21, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2056, file: !1831, line: 93, column: 5)
!2061 = !DILocation(line: 95, column: 31, scope: !2060)
!2062 = !DILocation(line: 95, column: 7, scope: !2060)
!2063 = !DILocation(line: 96, column: 5, scope: !2060)
!2064 = !DILocation(line: 99, column: 11, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2066, file: !1831, line: 99, column: 11)
!2066 = distinct !DILexicalBlock(scope: !2056, file: !1831, line: 98, column: 5)
!2067 = !DILocation(line: 99, column: 20, scope: !2065)
!2068 = !DILocation(line: 99, column: 11, scope: !2066)
!2069 = !DILocation(line: 101, column: 9, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !2065, file: !1831, line: 100, column: 7)
!2071 = !DILocation(line: 102, column: 7, scope: !2070)
!2072 = !DILocation(line: 103, column: 16, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2065, file: !1831, line: 103, column: 16)
!2074 = !DILocation(line: 103, column: 25, scope: !2073)
!2075 = !DILocation(line: 103, column: 16, scope: !2065)
!2076 = !DILocation(line: 105, column: 37, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2073, file: !1831, line: 104, column: 7)
!2078 = !DILocation(line: 105, column: 9, scope: !2077)
!2079 = !DILocation(line: 106, column: 7, scope: !2077)
!2080 = !DILocation(line: 109, column: 38, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2073, file: !1831, line: 108, column: 7)
!2082 = !DILocation(line: 109, column: 9, scope: !2081)
!2083 = !DILocation(line: 112, column: 3, scope: !2051)
!2084 = !DILocation(line: 89, column: 25, scope: !2046)
!2085 = !DILocation(line: 89, column: 3, scope: !2046)
!2086 = distinct !{!2086, !2049, !2087}
!2087 = !DILocation(line: 112, column: 3, scope: !2043)
!2088 = !DILocation(line: 114, column: 8, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 114, column: 7)
!2090 = !DILocation(line: 114, column: 7, scope: !1956)
!2091 = !DILocalVariable(name: "p_statbuf", scope: !2092, file: !1831, line: 115, type: !704)
!2092 = distinct !DILexicalBlock(scope: !2089, file: !1831, line: 114, column: 23)
!2093 = !DILocation(line: 115, column: 33, scope: !2092)
!2094 = !DILocalVariable(name: "retval", scope: !2092, file: !1831, line: 116, type: !19)
!2095 = !DILocation(line: 116, column: 9, scope: !2092)
!2096 = !DILocation(line: 116, column: 18, scope: !2092)
!2097 = !DILocation(line: 117, column: 38, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2092, file: !1831, line: 117, column: 9)
!2099 = !DILocation(line: 117, column: 10, scope: !2098)
!2100 = !DILocation(line: 117, column: 9, scope: !2092)
!2101 = !DILocation(line: 119, column: 7, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2098, file: !1831, line: 118, column: 5)
!2103 = !DILocation(line: 120, column: 5, scope: !2102)
!2104 = !DILocation(line: 121, column: 22, scope: !2092)
!2105 = !DILocation(line: 121, column: 5, scope: !2092)
!2106 = !DILocation(line: 122, column: 3, scope: !2092)
!2107 = !DILocation(line: 124, column: 7, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 124, column: 7)
!2109 = !DILocation(line: 124, column: 28, scope: !2108)
!2110 = !DILocation(line: 124, column: 31, scope: !2108)
!2111 = !DILocation(line: 124, column: 7, scope: !1956)
!2112 = !DILocalVariable(name: "p_addr", scope: !2113, file: !1831, line: 126, type: !154)
!2113 = distinct !DILexicalBlock(scope: !2108, file: !1831, line: 125, column: 3)
!2114 = !DILocation(line: 126, column: 34, scope: !2113)
!2115 = !DILocalVariable(name: "p_numeric_addr", scope: !2113, file: !1831, line: 127, type: !88)
!2116 = !DILocation(line: 127, column: 17, scope: !2113)
!2117 = !DILocation(line: 128, column: 38, scope: !2113)
!2118 = !DILocation(line: 128, column: 5, scope: !2113)
!2119 = !DILocation(line: 129, column: 30, scope: !2113)
!2120 = !DILocation(line: 129, column: 5, scope: !2113)
!2121 = !DILocation(line: 130, column: 44, scope: !2113)
!2122 = !DILocation(line: 130, column: 22, scope: !2113)
!2123 = !DILocation(line: 130, column: 20, scope: !2113)
!2124 = !DILocation(line: 131, column: 47, scope: !2113)
!2125 = !DILocation(line: 131, column: 28, scope: !2113)
!2126 = !DILocation(line: 131, column: 26, scope: !2113)
!2127 = !DILocation(line: 132, column: 22, scope: !2113)
!2128 = !DILocation(line: 132, column: 5, scope: !2113)
!2129 = !DILocation(line: 133, column: 3, scope: !2113)
!2130 = !DILocation(line: 134, column: 8, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 134, column: 7)
!2132 = !DILocation(line: 134, column: 7, scope: !1956)
!2133 = !DILocation(line: 137, column: 5, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2131, file: !1831, line: 135, column: 3)
!2135 = !DILocation(line: 138, column: 3, scope: !2134)
!2136 = !DILocation(line: 139, column: 7, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 139, column: 7)
!2138 = !DILocation(line: 139, column: 7, scope: !1956)
!2139 = !DILocation(line: 142, column: 35, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2137, file: !1831, line: 140, column: 3)
!2141 = !DILocation(line: 142, column: 41, scope: !2140)
!2142 = !DILocation(line: 142, column: 5, scope: !2140)
!2143 = !DILocation(line: 143, column: 3, scope: !2140)
!2144 = !DILocation(line: 147, column: 7, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 147, column: 7)
!2146 = !DILocation(line: 147, column: 7, scope: !1956)
!2147 = !DILocation(line: 149, column: 5, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2145, file: !1831, line: 148, column: 3)
!2149 = !DILocation(line: 150, column: 3, scope: !2148)
!2150 = !DILocation(line: 151, column: 7, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 151, column: 7)
!2152 = !DILocation(line: 151, column: 22, scope: !2151)
!2153 = !DILocation(line: 151, column: 25, scope: !2151)
!2154 = !DILocation(line: 151, column: 7, scope: !1956)
!2155 = !DILocalVariable(name: "ret", scope: !2156, file: !1831, line: 154, type: !2157)
!2156 = distinct !DILexicalBlock(scope: !2151, file: !1831, line: 152, column: 3)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_client_launch", file: !2158, line: 4, size: 64, elements: !2159)
!2158 = !DIFile(filename: "./standalone.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "num_children", scope: !2157, file: !2158, line: 6, baseType: !26, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !2157, file: !2158, line: 7, baseType: !26, size: 32, offset: 32)
!2162 = !DILocation(line: 154, column: 30, scope: !2156)
!2163 = !DILocation(line: 154, column: 36, scope: !2156)
!2164 = !DILocation(line: 155, column: 35, scope: !2156)
!2165 = !DILocation(line: 155, column: 17, scope: !2156)
!2166 = !DILocation(line: 155, column: 29, scope: !2156)
!2167 = !DILocation(line: 156, column: 35, scope: !2156)
!2168 = !DILocation(line: 156, column: 17, scope: !2156)
!2169 = !DILocation(line: 156, column: 29, scope: !2156)
!2170 = !DILocation(line: 157, column: 3, scope: !2156)
!2171 = !DILocation(line: 158, column: 7, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 158, column: 7)
!2173 = !DILocation(line: 158, column: 7, scope: !1956)
!2174 = !DILocation(line: 160, column: 34, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2172, file: !1831, line: 159, column: 3)
!2176 = !DILocation(line: 160, column: 17, scope: !2175)
!2177 = !DILocation(line: 160, column: 32, scope: !2175)
!2178 = !DILocation(line: 161, column: 3, scope: !2175)
!2179 = !DILocalVariable(name: "p_load_conf", scope: !2180, file: !1831, line: 163, type: !88)
!2180 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 162, column: 3)
!2181 = !DILocation(line: 163, column: 17, scope: !2180)
!2182 = !DILocation(line: 163, column: 31, scope: !2180)
!2183 = !DILocation(line: 164, column: 9, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2180, file: !1831, line: 164, column: 9)
!2185 = !DILocation(line: 164, column: 9, scope: !2180)
!2186 = !DILocation(line: 166, column: 31, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !2184, file: !1831, line: 165, column: 5)
!2188 = !DILocation(line: 166, column: 7, scope: !2187)
!2189 = !DILocation(line: 167, column: 5, scope: !2187)
!2190 = !DILocation(line: 172, column: 3, scope: !1956)
!2191 = !DILocation(line: 174, column: 3, scope: !1956)
!2192 = !DILocation(line: 176, column: 3, scope: !1956)
!2193 = !DILocation(line: 178, column: 3, scope: !1956)
!2194 = !DILocation(line: 182, column: 3, scope: !1956)
!2195 = !DILocation(line: 183, column: 31, scope: !1956)
!2196 = !DILocation(line: 184, column: 52, scope: !1956)
!2197 = !DILocation(line: 184, column: 18, scope: !1956)
!2198 = !DILocation(line: 183, column: 3, scope: !1956)
!2199 = !DILocation(line: 186, column: 3, scope: !1956)
!2200 = !DILocation(line: 187, column: 7, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 187, column: 7)
!2202 = !DILocation(line: 187, column: 7, scope: !1956)
!2203 = !DILocation(line: 189, column: 51, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2201, file: !1831, line: 188, column: 3)
!2205 = !DILocation(line: 189, column: 5, scope: !2204)
!2206 = !DILocation(line: 190, column: 5, scope: !2204)
!2207 = !DILocation(line: 191, column: 3, scope: !2204)
!2208 = !DILocation(line: 196, column: 7, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 196, column: 7)
!2210 = !DILocation(line: 196, column: 7, scope: !1956)
!2211 = !DILocation(line: 198, column: 5, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2209, file: !1831, line: 197, column: 3)
!2213 = !DILocation(line: 199, column: 5, scope: !2212)
!2214 = !DILocation(line: 200, column: 3, scope: !2212)
!2215 = !DILocation(line: 201, column: 7, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 201, column: 7)
!2217 = !DILocation(line: 201, column: 7, scope: !1956)
!2218 = !DILocalVariable(name: "retval", scope: !2219, file: !1831, line: 203, type: !19)
!2219 = distinct !DILexicalBlock(scope: !2216, file: !1831, line: 202, column: 3)
!2220 = !DILocation(line: 203, column: 9, scope: !2219)
!2221 = !DILocation(line: 204, column: 9, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !2219, file: !1831, line: 204, column: 9)
!2223 = !DILocation(line: 204, column: 9, scope: !2219)
!2224 = !DILocation(line: 206, column: 42, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2222, file: !1831, line: 205, column: 5)
!2226 = !DILocation(line: 207, column: 29, scope: !2225)
!2227 = !DILocation(line: 206, column: 16, scope: !2225)
!2228 = !DILocation(line: 206, column: 14, scope: !2225)
!2229 = !DILocation(line: 208, column: 5, scope: !2225)
!2230 = !DILocation(line: 209, column: 37, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2219, file: !1831, line: 209, column: 9)
!2232 = !DILocation(line: 209, column: 9, scope: !2231)
!2233 = !DILocation(line: 209, column: 9, scope: !2219)
!2234 = !DILocation(line: 211, column: 50, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2231, file: !1831, line: 210, column: 5)
!2236 = !DILocation(line: 211, column: 7, scope: !2235)
!2237 = !DILocation(line: 212, column: 5, scope: !2235)
!2238 = !DILocation(line: 213, column: 3, scope: !2219)
!2239 = !DILocation(line: 214, column: 7, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 214, column: 7)
!2241 = !DILocation(line: 214, column: 7, scope: !1956)
!2242 = !DILocalVariable(name: "retval", scope: !2243, file: !1831, line: 216, type: !19)
!2243 = distinct !DILexicalBlock(scope: !2240, file: !1831, line: 215, column: 3)
!2244 = !DILocation(line: 216, column: 9, scope: !2243)
!2245 = !DILocation(line: 216, column: 44, scope: !2243)
!2246 = !DILocation(line: 216, column: 56, scope: !2243)
!2247 = !DILocation(line: 216, column: 18, scope: !2243)
!2248 = !DILocation(line: 218, column: 37, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2243, file: !1831, line: 218, column: 9)
!2250 = !DILocation(line: 218, column: 9, scope: !2249)
!2251 = !DILocation(line: 218, column: 9, scope: !2243)
!2252 = !DILocation(line: 220, column: 40, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2249, file: !1831, line: 219, column: 5)
!2254 = !DILocation(line: 220, column: 7, scope: !2253)
!2255 = !DILocation(line: 221, column: 5, scope: !2253)
!2256 = !DILocation(line: 222, column: 3, scope: !2243)
!2257 = !DILocation(line: 223, column: 7, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 223, column: 7)
!2259 = !DILocation(line: 223, column: 7, scope: !1956)
!2260 = !DILocalVariable(name: "retval", scope: !2261, file: !1831, line: 225, type: !19)
!2261 = distinct !DILexicalBlock(scope: !2258, file: !1831, line: 224, column: 3)
!2262 = !DILocation(line: 225, column: 9, scope: !2261)
!2263 = !DILocation(line: 226, column: 9, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2261, file: !1831, line: 226, column: 9)
!2265 = !DILocation(line: 226, column: 9, scope: !2261)
!2266 = !DILocation(line: 228, column: 42, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2264, file: !1831, line: 227, column: 5)
!2268 = !DILocation(line: 229, column: 29, scope: !2267)
!2269 = !DILocation(line: 228, column: 16, scope: !2267)
!2270 = !DILocation(line: 228, column: 14, scope: !2267)
!2271 = !DILocation(line: 231, column: 5, scope: !2267)
!2272 = !DILocation(line: 232, column: 37, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2261, file: !1831, line: 232, column: 9)
!2274 = !DILocation(line: 232, column: 9, scope: !2273)
!2275 = !DILocation(line: 232, column: 9, scope: !2261)
!2276 = !DILocation(line: 234, column: 49, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2273, file: !1831, line: 233, column: 5)
!2278 = !DILocation(line: 234, column: 7, scope: !2277)
!2279 = !DILocation(line: 235, column: 5, scope: !2277)
!2280 = !DILocation(line: 236, column: 3, scope: !2261)
!2281 = !DILocation(line: 237, column: 7, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 237, column: 7)
!2283 = !DILocation(line: 237, column: 7, scope: !1956)
!2284 = !DILocation(line: 239, column: 31, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2282, file: !1831, line: 238, column: 3)
!2286 = !DILocation(line: 240, column: 10, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2285, file: !1831, line: 240, column: 9)
!2288 = !DILocation(line: 240, column: 9, scope: !2285)
!2289 = !DILocation(line: 242, column: 36, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2287, file: !1831, line: 241, column: 5)
!2291 = !DILocation(line: 243, column: 29, scope: !2290)
!2292 = !DILocation(line: 244, column: 5, scope: !2290)
!2293 = !DILocation(line: 245, column: 3, scope: !2285)
!2294 = !DILocation(line: 246, column: 7, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !1956, file: !1831, line: 246, column: 7)
!2296 = !DILocation(line: 246, column: 7, scope: !1956)
!2297 = !DILocation(line: 248, column: 5, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2295, file: !1831, line: 247, column: 3)
!2299 = !DILocation(line: 249, column: 3, scope: !2298)
!2300 = !DILocation(line: 252, column: 5, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2295, file: !1831, line: 251, column: 3)
!2302 = !DILocation(line: 255, column: 3, scope: !1956)
!2303 = !DILocation(line: 256, column: 3, scope: !1956)
!2304 = distinct !DISubprogram(name: "die_unless_privileged", scope: !1831, file: !1831, line: 260, type: !1619, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1830, retainedNodes: !128)
!2305 = !DILocation(line: 262, column: 8, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2304, file: !1831, line: 262, column: 7)
!2307 = !DILocation(line: 262, column: 7, scope: !2304)
!2308 = !DILocation(line: 264, column: 5, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2306, file: !1831, line: 263, column: 3)
!2310 = !DILocation(line: 265, column: 3, scope: !2309)
!2311 = !DILocation(line: 266, column: 1, scope: !2304)
!2312 = distinct !DISubprogram(name: "do_sanity_checks", scope: !1831, file: !1831, line: 269, type: !1619, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1830, retainedNodes: !128)
!2313 = !DILocalVariable(name: "p_statbuf", scope: !2314, file: !1831, line: 272, type: !704)
!2314 = distinct !DILexicalBlock(scope: !2312, file: !1831, line: 271, column: 3)
!2315 = !DILocation(line: 272, column: 33, scope: !2314)
!2316 = !DILocation(line: 273, column: 5, scope: !2314)
!2317 = !DILocation(line: 274, column: 40, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2314, file: !1831, line: 274, column: 9)
!2319 = !DILocation(line: 274, column: 10, scope: !2318)
!2320 = !DILocation(line: 274, column: 9, scope: !2314)
!2321 = !DILocation(line: 276, column: 7, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2318, file: !1831, line: 275, column: 5)
!2323 = !DILocation(line: 277, column: 5, scope: !2322)
!2324 = !DILocation(line: 278, column: 22, scope: !2314)
!2325 = !DILocation(line: 278, column: 5, scope: !2314)
!2326 = !DILocation(line: 280, column: 7, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2312, file: !1831, line: 280, column: 7)
!2328 = !DILocation(line: 280, column: 7, scope: !2312)
!2329 = !DILocation(line: 282, column: 9, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2331, file: !1831, line: 282, column: 9)
!2331 = distinct !DILexicalBlock(scope: !2327, file: !1831, line: 281, column: 3)
!2332 = !DILocation(line: 282, column: 9, scope: !2331)
!2333 = !DILocation(line: 284, column: 7, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2330, file: !1831, line: 283, column: 5)
!2335 = !DILocation(line: 285, column: 5, scope: !2334)
!2336 = !DILocation(line: 286, column: 10, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2331, file: !1831, line: 286, column: 9)
!2338 = !DILocation(line: 286, column: 9, scope: !2331)
!2339 = !DILocation(line: 288, column: 7, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2337, file: !1831, line: 287, column: 5)
!2341 = !DILocation(line: 289, column: 5, scope: !2340)
!2342 = !DILocation(line: 290, column: 3, scope: !2331)
!2343 = !DILocation(line: 291, column: 8, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2312, file: !1831, line: 291, column: 7)
!2345 = !DILocation(line: 291, column: 29, scope: !2344)
!2346 = !DILocation(line: 291, column: 33, scope: !2344)
!2347 = !DILocation(line: 291, column: 7, scope: !2312)
!2348 = !DILocation(line: 293, column: 5, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2344, file: !1831, line: 292, column: 3)
!2350 = !DILocation(line: 294, column: 3, scope: !2349)
!2351 = !DILocation(line: 295, column: 8, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2312, file: !1831, line: 295, column: 7)
!2353 = !DILocation(line: 295, column: 27, scope: !2352)
!2354 = !DILocation(line: 295, column: 31, scope: !2352)
!2355 = !DILocation(line: 295, column: 7, scope: !2312)
!2356 = !DILocation(line: 297, column: 5, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2352, file: !1831, line: 296, column: 3)
!2358 = !DILocation(line: 298, column: 3, scope: !2357)
!2359 = !DILocation(line: 299, column: 7, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2312, file: !1831, line: 299, column: 7)
!2361 = !DILocation(line: 299, column: 27, scope: !2360)
!2362 = !DILocation(line: 299, column: 31, scope: !2360)
!2363 = !DILocation(line: 299, column: 7, scope: !2312)
!2364 = !DILocation(line: 301, column: 5, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2360, file: !1831, line: 300, column: 3)
!2366 = !DILocation(line: 302, column: 3, scope: !2365)
!2367 = !DILocation(line: 303, column: 1, scope: !2312)
!2368 = distinct !DISubprogram(name: "session_init", scope: !1831, file: !1831, line: 332, type: !2369, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1830, retainedNodes: !128)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{null, !2371}
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!2372 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2368, file: !1831, line: 332, type: !2371)
!2373 = !DILocation(line: 332, column: 34, scope: !2368)
!2374 = !DILocation(line: 335, column: 46, scope: !2368)
!2375 = !DILocation(line: 335, column: 54, scope: !2368)
!2376 = !DILocation(line: 335, column: 3, scope: !2368)
!2377 = !DILocation(line: 336, column: 46, scope: !2368)
!2378 = !DILocation(line: 336, column: 54, scope: !2368)
!2379 = !DILocation(line: 336, column: 3, scope: !2368)
!2380 = !DILocation(line: 338, column: 7, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2368, file: !1831, line: 338, column: 7)
!2382 = !DILocation(line: 338, column: 7, scope: !2368)
!2383 = !DILocalVariable(name: "p_user", scope: !2384, file: !1831, line: 340, type: !2385)
!2384 = distinct !DILexicalBlock(scope: !2381, file: !1831, line: 339, column: 3)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!2387 = !DILocation(line: 340, column: 36, scope: !2384)
!2388 = !DILocation(line: 341, column: 9, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2384, file: !1831, line: 341, column: 9)
!2390 = !DILocation(line: 341, column: 9, scope: !2384)
!2391 = !DILocation(line: 343, column: 37, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2389, file: !1831, line: 342, column: 5)
!2393 = !DILocation(line: 343, column: 16, scope: !2392)
!2394 = !DILocation(line: 343, column: 14, scope: !2392)
!2395 = !DILocation(line: 344, column: 5, scope: !2392)
!2396 = !DILocation(line: 345, column: 9, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2384, file: !1831, line: 345, column: 9)
!2398 = !DILocation(line: 345, column: 16, scope: !2397)
!2399 = !DILocation(line: 345, column: 9, scope: !2384)
!2400 = !DILocation(line: 348, column: 12, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2397, file: !1831, line: 346, column: 5)
!2402 = !DILocation(line: 347, column: 7, scope: !2401)
!2403 = !DILocation(line: 349, column: 5, scope: !2401)
!2404 = !DILocation(line: 350, column: 52, scope: !2384)
!2405 = !DILocation(line: 350, column: 28, scope: !2384)
!2406 = !DILocation(line: 350, column: 5, scope: !2384)
!2407 = !DILocation(line: 350, column: 13, scope: !2384)
!2408 = !DILocation(line: 350, column: 26, scope: !2384)
!2409 = !DILocation(line: 351, column: 3, scope: !2384)
!2410 = !DILocation(line: 352, column: 7, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2368, file: !1831, line: 352, column: 7)
!2412 = !DILocation(line: 352, column: 7, scope: !2368)
!2413 = !DILocalVariable(name: "p_user", scope: !2414, file: !1831, line: 354, type: !2385)
!2414 = distinct !DILexicalBlock(scope: !2411, file: !1831, line: 353, column: 3)
!2415 = !DILocation(line: 354, column: 36, scope: !2414)
!2416 = !DILocation(line: 355, column: 9, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2414, file: !1831, line: 355, column: 9)
!2418 = !DILocation(line: 355, column: 9, scope: !2414)
!2419 = !DILocation(line: 357, column: 37, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2417, file: !1831, line: 356, column: 5)
!2421 = !DILocation(line: 357, column: 16, scope: !2420)
!2422 = !DILocation(line: 357, column: 14, scope: !2420)
!2423 = !DILocation(line: 358, column: 5, scope: !2420)
!2424 = !DILocation(line: 359, column: 9, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2414, file: !1831, line: 359, column: 9)
!2426 = !DILocation(line: 359, column: 16, scope: !2425)
!2427 = !DILocation(line: 359, column: 9, scope: !2414)
!2428 = !DILocation(line: 362, column: 12, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2425, file: !1831, line: 360, column: 5)
!2430 = !DILocation(line: 361, column: 7, scope: !2429)
!2431 = !DILocation(line: 363, column: 5, scope: !2429)
!2432 = !DILocation(line: 364, column: 54, scope: !2414)
!2433 = !DILocation(line: 364, column: 30, scope: !2414)
!2434 = !DILocation(line: 364, column: 5, scope: !2414)
!2435 = !DILocation(line: 364, column: 13, scope: !2414)
!2436 = !DILocation(line: 364, column: 28, scope: !2414)
!2437 = !DILocation(line: 365, column: 3, scope: !2414)
!2438 = !DILocation(line: 366, column: 7, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2368, file: !1831, line: 366, column: 7)
!2440 = !DILocation(line: 366, column: 7, scope: !2368)
!2441 = !DILocalVariable(name: "p_user", scope: !2442, file: !1831, line: 368, type: !2385)
!2442 = distinct !DILexicalBlock(scope: !2439, file: !1831, line: 367, column: 3)
!2443 = !DILocation(line: 368, column: 36, scope: !2442)
!2444 = !DILocation(line: 369, column: 9, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2442, file: !1831, line: 369, column: 9)
!2446 = !DILocation(line: 369, column: 9, scope: !2442)
!2447 = !DILocation(line: 371, column: 37, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2445, file: !1831, line: 370, column: 5)
!2449 = !DILocation(line: 371, column: 16, scope: !2448)
!2450 = !DILocation(line: 371, column: 14, scope: !2448)
!2451 = !DILocation(line: 372, column: 5, scope: !2448)
!2452 = !DILocation(line: 373, column: 9, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2442, file: !1831, line: 373, column: 9)
!2454 = !DILocation(line: 373, column: 16, scope: !2453)
!2455 = !DILocation(line: 373, column: 9, scope: !2442)
!2456 = !DILocation(line: 376, column: 12, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2453, file: !1831, line: 374, column: 5)
!2458 = !DILocation(line: 375, column: 7, scope: !2457)
!2459 = !DILocation(line: 377, column: 5, scope: !2457)
!2460 = !DILocation(line: 378, column: 61, scope: !2442)
!2461 = !DILocation(line: 378, column: 37, scope: !2442)
!2462 = !DILocation(line: 378, column: 5, scope: !2442)
!2463 = !DILocation(line: 378, column: 13, scope: !2442)
!2464 = !DILocation(line: 378, column: 35, scope: !2442)
!2465 = !DILocation(line: 379, column: 3, scope: !2442)
!2466 = !DILocation(line: 380, column: 1, scope: !2368)
!2467 = distinct !DISubprogram(name: "env_init", scope: !1831, file: !1831, line: 306, type: !1619, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1830, retainedNodes: !128)
!2468 = !DILocation(line: 308, column: 3, scope: !2467)
!2469 = !DILocation(line: 310, column: 3, scope: !2467)
!2470 = !DILocation(line: 312, column: 3, scope: !2467)
!2471 = !DILocation(line: 314, column: 3, scope: !2467)
!2472 = !DILocation(line: 315, column: 1, scope: !2467)
!2473 = distinct !DISubprogram(name: "limits_init", scope: !1831, file: !1831, line: 318, type: !1619, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1830, retainedNodes: !128)
!2474 = !DILocalVariable(name: "limit", scope: !2473, file: !1831, line: 320, type: !65)
!2475 = !DILocation(line: 320, column: 17, scope: !2473)
!2476 = !DILocation(line: 321, column: 7, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2473, file: !1831, line: 321, column: 7)
!2478 = !DILocation(line: 321, column: 7, scope: !2473)
!2479 = !DILocation(line: 326, column: 11, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2477, file: !1831, line: 322, column: 3)
!2481 = !DILocation(line: 327, column: 3, scope: !2480)
!2482 = !DILocation(line: 328, column: 39, scope: !2473)
!2483 = !DILocation(line: 328, column: 3, scope: !2473)
!2484 = !DILocation(line: 329, column: 1, scope: !2473)
!2485 = distinct !DISubprogram(name: "die", scope: !1833, file: !1833, line: 16, type: !2486, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1832, retainedNodes: !128)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !88}
!2488 = !DILocalVariable(name: "p_text", arg: 1, scope: !2485, file: !1833, line: 16, type: !88)
!2489 = !DILocation(line: 16, column: 17, scope: !2485)
!2490 = !DILocation(line: 19, column: 7, scope: !2485)
!2491 = !DILocation(line: 19, column: 3, scope: !2485)
!2492 = !DILocation(line: 21, column: 3, scope: !2485)
!2493 = !DILocation(line: 22, column: 1, scope: !2485)
!2494 = distinct !DISubprogram(name: "bug", scope: !1833, file: !1833, line: 41, type: !2486, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1832, retainedNodes: !128)
!2495 = !DILocalVariable(name: "p_text", arg: 1, scope: !2494, file: !1833, line: 41, type: !88)
!2496 = !DILocation(line: 41, column: 17, scope: !2494)
!2497 = !DILocation(line: 44, column: 3, scope: !2494)
!2498 = !DILocation(line: 45, column: 10, scope: !2494)
!2499 = !DILocation(line: 46, column: 51, scope: !2494)
!2500 = !DILocation(line: 47, column: 52, scope: !2494)
!2501 = !DILocation(line: 47, column: 33, scope: !2494)
!2502 = !DILocation(line: 46, column: 10, scope: !2494)
!2503 = !DILocation(line: 48, column: 10, scope: !2494)
!2504 = !DILocation(line: 49, column: 3, scope: !2494)
!2505 = !DILocation(line: 50, column: 1, scope: !2494)
!2506 = distinct !DISubprogram(name: "die2", scope: !1833, file: !1833, line: 25, type: !2507, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1832, retainedNodes: !128)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !88, !88}
!2509 = !DILocalVariable(name: "p_text1", arg: 1, scope: !2506, file: !1833, line: 25, type: !88)
!2510 = !DILocation(line: 25, column: 18, scope: !2506)
!2511 = !DILocalVariable(name: "p_text2", arg: 2, scope: !2506, file: !1833, line: 25, type: !88)
!2512 = !DILocation(line: 25, column: 39, scope: !2506)
!2513 = !DILocalVariable(name: "die_str", scope: !2506, file: !1833, line: 27, type: !2514)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !2515)
!2515 = !{!2516, !2517, !2518}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !2514, file: !34, line: 12, baseType: !16, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !2514, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !2514, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!2519 = !DILocation(line: 27, column: 16, scope: !2506)
!2520 = !DILocation(line: 28, column: 28, scope: !2506)
!2521 = !DILocation(line: 28, column: 3, scope: !2506)
!2522 = !DILocation(line: 29, column: 7, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2506, file: !1833, line: 29, column: 7)
!2524 = !DILocation(line: 29, column: 7, scope: !2506)
!2525 = !DILocation(line: 31, column: 31, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2523, file: !1833, line: 30, column: 3)
!2527 = !DILocation(line: 31, column: 5, scope: !2526)
!2528 = !DILocation(line: 32, column: 3, scope: !2526)
!2529 = !DILocation(line: 35, column: 5, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2523, file: !1833, line: 34, column: 3)
!2531 = !DILocation(line: 37, column: 7, scope: !2506)
!2532 = !DILocation(line: 37, column: 3, scope: !2506)
!2533 = !DILocation(line: 38, column: 1, scope: !2506)
!2534 = distinct !DISubprogram(name: "vsf_exit", scope: !1833, file: !1833, line: 53, type: !2486, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1832, retainedNodes: !128)
!2535 = !DILocalVariable(name: "p_text", arg: 1, scope: !2534, file: !1833, line: 53, type: !88)
!2536 = !DILocation(line: 53, column: 22, scope: !2534)
!2537 = !DILocation(line: 55, column: 51, scope: !2534)
!2538 = !DILocation(line: 56, column: 52, scope: !2534)
!2539 = !DILocation(line: 56, column: 33, scope: !2534)
!2540 = !DILocation(line: 55, column: 10, scope: !2534)
!2541 = !DILocation(line: 57, column: 3, scope: !2534)
!2542 = !DILocation(line: 58, column: 1, scope: !2534)
!2543 = distinct !DISubprogram(name: "init_connection", scope: !1835, file: !1835, line: 39, type: !2544, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{null, !2546}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !2548)
!2548 = !{!2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !2547, file: !8, line: 21, baseType: !11, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !2547, file: !8, line: 22, baseType: !11, size: 64, offset: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !2547, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !2547, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !2547, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !2547, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !2547, file: !8, line: 29, baseType: !11, size: 64, offset: 320)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !2547, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !2547, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !2547, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !2547, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !2547, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !2547, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !2547, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !2547, file: !8, line: 39, baseType: !2564, size: 128, offset: 704)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !2565)
!2565 = !{!2566, !2567, !2568}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !2564, file: !34, line: 12, baseType: !16, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !2564, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !2564, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !2547, file: !8, line: 40, baseType: !2564, size: 128, offset: 832)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !2547, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !2547, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !2547, file: !8, line: 45, baseType: !2564, size: 128, offset: 1088)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !2547, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !2547, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !2547, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !2547, file: !8, line: 51, baseType: !2564, size: 128, offset: 1344)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !2547, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !2547, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !2547, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !2547, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !2547, file: !8, line: 62, baseType: !2564, size: 128, offset: 1664)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !2547, file: !8, line: 63, baseType: !2564, size: 128, offset: 1792)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !2547, file: !8, line: 64, baseType: !2564, size: 128, offset: 1920)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !2547, file: !8, line: 65, baseType: !2564, size: 128, offset: 2048)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !2547, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !2547, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !2547, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !2547, file: !8, line: 71, baseType: !2564, size: 128, offset: 2304)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !2547, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !2547, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !2547, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !2547, file: !8, line: 75, baseType: !2564, size: 128, offset: 2624)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !2547, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !2547, file: !8, line: 79, baseType: !2564, size: 128, offset: 2816)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !2547, file: !8, line: 80, baseType: !2564, size: 128, offset: 2944)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !2547, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !2547, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !2547, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !2547, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !2547, file: !8, line: 89, baseType: !2564, size: 128, offset: 3200)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !2547, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !2547, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !2547, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !2547, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !2547, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !2547, file: !8, line: 97, baseType: !2564, size: 128, offset: 3584)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !2547, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !2547, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !2547, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !2547, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!2611 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2543, file: !1835, line: 39, type: !2546)
!2612 = !DILocation(line: 39, column: 37, scope: !2543)
!2613 = !DILocation(line: 41, column: 7, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2543, file: !1835, line: 41, column: 7)
!2615 = !DILocation(line: 41, column: 7, scope: !2543)
!2616 = !DILocation(line: 43, column: 5, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2614, file: !1835, line: 42, column: 3)
!2618 = !DILocation(line: 44, column: 3, scope: !2617)
!2619 = !DILocation(line: 48, column: 23, scope: !2543)
!2620 = !DILocation(line: 48, column: 3, scope: !2543)
!2621 = !DILocation(line: 53, column: 16, scope: !2543)
!2622 = !DILocation(line: 53, column: 3, scope: !2543)
!2623 = !DILocation(line: 54, column: 7, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2543, file: !1835, line: 54, column: 7)
!2625 = !DILocation(line: 54, column: 26, scope: !2624)
!2626 = !DILocation(line: 54, column: 29, scope: !2624)
!2627 = !DILocation(line: 54, column: 7, scope: !2543)
!2628 = !DILocation(line: 56, column: 27, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2624, file: !1835, line: 55, column: 3)
!2630 = !DILocation(line: 56, column: 5, scope: !2629)
!2631 = !DILocation(line: 57, column: 3, scope: !2629)
!2632 = !DILocation(line: 58, column: 7, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2543, file: !1835, line: 58, column: 7)
!2634 = !DILocation(line: 58, column: 7, scope: !2543)
!2635 = !DILocation(line: 60, column: 19, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2633, file: !1835, line: 59, column: 3)
!2637 = !DILocation(line: 60, column: 5, scope: !2636)
!2638 = !DILocation(line: 61, column: 3, scope: !2636)
!2639 = !DILocation(line: 62, column: 27, scope: !2543)
!2640 = !DILocation(line: 62, column: 3, scope: !2543)
!2641 = !DILocation(line: 63, column: 1, scope: !2543)
!2642 = distinct !DISubprogram(name: "check_limits", scope: !1835, file: !1835, line: 66, type: !2544, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!2643 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2642, file: !1835, line: 66, type: !2546)
!2644 = !DILocation(line: 66, column: 34, scope: !2642)
!2645 = !DILocalVariable(name: "str_log_line", scope: !2642, file: !1835, line: 68, type: !2564)
!2646 = !DILocation(line: 68, column: 16, scope: !2642)
!2647 = !DILocation(line: 70, column: 7, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2642, file: !1835, line: 70, column: 7)
!2649 = !DILocation(line: 70, column: 27, scope: !2648)
!2650 = !DILocation(line: 70, column: 31, scope: !2648)
!2651 = !DILocation(line: 71, column: 7, scope: !2648)
!2652 = !DILocation(line: 71, column: 15, scope: !2648)
!2653 = !DILocation(line: 71, column: 29, scope: !2648)
!2654 = !DILocation(line: 71, column: 27, scope: !2648)
!2655 = !DILocation(line: 70, column: 7, scope: !2642)
!2656 = !DILocation(line: 73, column: 5, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2648, file: !1835, line: 72, column: 3)
!2658 = !DILocation(line: 74, column: 18, scope: !2657)
!2659 = !DILocation(line: 74, column: 5, scope: !2657)
!2660 = !DILocation(line: 75, column: 26, scope: !2657)
!2661 = !DILocation(line: 75, column: 5, scope: !2657)
!2662 = !DILocation(line: 77, column: 3, scope: !2657)
!2663 = !DILocation(line: 78, column: 7, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2642, file: !1835, line: 78, column: 7)
!2665 = !DILocation(line: 78, column: 26, scope: !2664)
!2666 = !DILocation(line: 78, column: 30, scope: !2664)
!2667 = !DILocation(line: 79, column: 7, scope: !2664)
!2668 = !DILocation(line: 79, column: 15, scope: !2664)
!2669 = !DILocation(line: 79, column: 29, scope: !2664)
!2670 = !DILocation(line: 79, column: 27, scope: !2664)
!2671 = !DILocation(line: 78, column: 7, scope: !2642)
!2672 = !DILocation(line: 81, column: 5, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2664, file: !1835, line: 80, column: 3)
!2674 = !DILocation(line: 83, column: 18, scope: !2673)
!2675 = !DILocation(line: 83, column: 5, scope: !2673)
!2676 = !DILocation(line: 84, column: 26, scope: !2673)
!2677 = !DILocation(line: 84, column: 5, scope: !2673)
!2678 = !DILocation(line: 86, column: 3, scope: !2673)
!2679 = !DILocation(line: 87, column: 8, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2642, file: !1835, line: 87, column: 7)
!2681 = !DILocation(line: 87, column: 16, scope: !2680)
!2682 = !DILocation(line: 87, column: 7, scope: !2642)
!2683 = !DILocation(line: 89, column: 5, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2680, file: !1835, line: 88, column: 3)
!2685 = !DILocation(line: 91, column: 18, scope: !2684)
!2686 = !DILocation(line: 91, column: 5, scope: !2684)
!2687 = !DILocation(line: 92, column: 26, scope: !2684)
!2688 = !DILocation(line: 92, column: 5, scope: !2684)
!2689 = !DILocation(line: 93, column: 3, scope: !2684)
!2690 = !DILocation(line: 94, column: 16, scope: !2642)
!2691 = !DILocation(line: 94, column: 3, scope: !2642)
!2692 = !DILocation(line: 95, column: 1, scope: !2642)
!2693 = distinct !DISubprogram(name: "emit_greeting", scope: !1835, file: !1835, line: 98, type: !2544, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!2694 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2693, file: !1835, line: 98, type: !2546)
!2695 = !DILocation(line: 98, column: 35, scope: !2693)
!2696 = !DILocation(line: 100, column: 21, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2693, file: !1835, line: 100, column: 7)
!2698 = !DILocation(line: 100, column: 29, scope: !2697)
!2699 = !DILocation(line: 100, column: 8, scope: !2697)
!2700 = !DILocation(line: 100, column: 7, scope: !2693)
!2701 = !DILocation(line: 102, column: 22, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !1835, line: 101, column: 3)
!2703 = !DILocation(line: 102, column: 31, scope: !2702)
!2704 = !DILocation(line: 102, column: 39, scope: !2702)
!2705 = !DILocation(line: 102, column: 5, scope: !2702)
!2706 = !DILocation(line: 103, column: 15, scope: !2702)
!2707 = !DILocation(line: 103, column: 23, scope: !2702)
!2708 = !DILocation(line: 103, column: 5, scope: !2702)
!2709 = !DILocation(line: 104, column: 21, scope: !2702)
!2710 = !DILocation(line: 104, column: 5, scope: !2702)
!2711 = !DILocation(line: 105, column: 3, scope: !2702)
!2712 = !DILocation(line: 106, column: 12, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2697, file: !1835, line: 106, column: 12)
!2714 = !DILocation(line: 106, column: 32, scope: !2713)
!2715 = !DILocation(line: 106, column: 12, scope: !2697)
!2716 = !DILocation(line: 108, column: 21, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2713, file: !1835, line: 107, column: 3)
!2718 = !DILocation(line: 108, column: 5, scope: !2717)
!2719 = !DILocation(line: 110, column: 3, scope: !2717)
!2720 = !DILocation(line: 113, column: 21, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2713, file: !1835, line: 112, column: 3)
!2722 = !DILocation(line: 113, column: 40, scope: !2721)
!2723 = !DILocation(line: 113, column: 5, scope: !2721)
!2724 = !DILocation(line: 115, column: 1, scope: !2693)
!2725 = distinct !DISubprogram(name: "parse_username_password", scope: !1835, file: !1835, line: 118, type: !2544, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!2726 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2725, file: !1835, line: 118, type: !2546)
!2727 = !DILocation(line: 118, column: 45, scope: !2725)
!2728 = !DILocation(line: 120, column: 3, scope: !2725)
!2729 = !DILocation(line: 122, column: 31, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2725, file: !1835, line: 121, column: 3)
!2731 = !DILocation(line: 122, column: 40, scope: !2730)
!2732 = !DILocation(line: 122, column: 48, scope: !2730)
!2733 = !DILocation(line: 123, column: 32, scope: !2730)
!2734 = !DILocation(line: 123, column: 40, scope: !2730)
!2735 = !DILocation(line: 122, column: 5, scope: !2730)
!2736 = !DILocation(line: 124, column: 9, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2730, file: !1835, line: 124, column: 9)
!2738 = !DILocation(line: 124, column: 9, scope: !2730)
!2739 = !DILocation(line: 126, column: 27, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2741, file: !1835, line: 126, column: 11)
!2741 = distinct !DILexicalBlock(scope: !2737, file: !1835, line: 125, column: 5)
!2742 = !DILocation(line: 126, column: 35, scope: !2740)
!2743 = !DILocation(line: 126, column: 11, scope: !2740)
!2744 = !DILocation(line: 126, column: 11, scope: !2741)
!2745 = !DILocation(line: 128, column: 29, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2740, file: !1835, line: 127, column: 7)
!2747 = !DILocation(line: 128, column: 9, scope: !2746)
!2748 = !DILocation(line: 129, column: 7, scope: !2746)
!2749 = !DILocation(line: 130, column: 32, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2740, file: !1835, line: 130, column: 16)
!2751 = !DILocation(line: 130, column: 40, scope: !2750)
!2752 = !DILocation(line: 130, column: 16, scope: !2750)
!2753 = !DILocation(line: 130, column: 16, scope: !2740)
!2754 = !DILocation(line: 132, column: 29, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2750, file: !1835, line: 131, column: 7)
!2756 = !DILocation(line: 132, column: 9, scope: !2755)
!2757 = !DILocation(line: 133, column: 7, scope: !2755)
!2758 = !DILocation(line: 134, column: 32, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2750, file: !1835, line: 134, column: 16)
!2760 = !DILocation(line: 134, column: 40, scope: !2759)
!2761 = !DILocation(line: 134, column: 16, scope: !2759)
!2762 = !DILocation(line: 134, column: 16, scope: !2750)
!2763 = !DILocation(line: 136, column: 30, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2759, file: !1835, line: 135, column: 7)
!2765 = !DILocation(line: 136, column: 9, scope: !2764)
!2766 = !DILocation(line: 137, column: 7, scope: !2764)
!2767 = !DILocation(line: 138, column: 32, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2759, file: !1835, line: 138, column: 16)
!2769 = !DILocation(line: 138, column: 40, scope: !2768)
!2770 = !DILocation(line: 138, column: 16, scope: !2768)
!2771 = !DILocation(line: 138, column: 16, scope: !2759)
!2772 = !DILocation(line: 140, column: 21, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2768, file: !1835, line: 139, column: 7)
!2774 = !DILocation(line: 140, column: 9, scope: !2773)
!2775 = !DILocation(line: 141, column: 7, scope: !2773)
!2776 = !DILocation(line: 142, column: 32, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2768, file: !1835, line: 142, column: 16)
!2778 = !DILocation(line: 142, column: 40, scope: !2777)
!2779 = !DILocation(line: 142, column: 16, scope: !2777)
!2780 = !DILocation(line: 142, column: 16, scope: !2768)
!2781 = !DILocation(line: 144, column: 21, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2777, file: !1835, line: 143, column: 7)
!2783 = !DILocation(line: 144, column: 9, scope: !2782)
!2784 = !DILocation(line: 145, column: 7, scope: !2782)
!2785 = !DILocation(line: 146, column: 16, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2777, file: !1835, line: 146, column: 16)
!2787 = !DILocation(line: 146, column: 35, scope: !2786)
!2788 = !DILocation(line: 147, column: 32, scope: !2786)
!2789 = !DILocation(line: 147, column: 40, scope: !2786)
!2790 = !DILocation(line: 147, column: 16, scope: !2786)
!2791 = !DILocation(line: 147, column: 61, scope: !2786)
!2792 = !DILocation(line: 148, column: 17, scope: !2786)
!2793 = !DILocation(line: 148, column: 25, scope: !2786)
!2794 = !DILocation(line: 146, column: 16, scope: !2777)
!2795 = !DILocation(line: 150, column: 21, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2786, file: !1835, line: 149, column: 7)
!2797 = !DILocation(line: 150, column: 9, scope: !2796)
!2798 = !DILocation(line: 151, column: 7, scope: !2796)
!2799 = !DILocation(line: 152, column: 16, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2786, file: !1835, line: 152, column: 16)
!2801 = !DILocation(line: 152, column: 35, scope: !2800)
!2802 = !DILocation(line: 153, column: 32, scope: !2800)
!2803 = !DILocation(line: 153, column: 40, scope: !2800)
!2804 = !DILocation(line: 153, column: 16, scope: !2800)
!2805 = !DILocation(line: 152, column: 16, scope: !2786)
!2806 = !DILocation(line: 155, column: 21, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2800, file: !1835, line: 154, column: 7)
!2808 = !DILocation(line: 155, column: 9, scope: !2807)
!2809 = !DILocation(line: 156, column: 7, scope: !2807)
!2810 = !DILocation(line: 157, column: 16, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2800, file: !1835, line: 157, column: 16)
!2812 = !DILocation(line: 157, column: 35, scope: !2811)
!2813 = !DILocation(line: 158, column: 32, scope: !2811)
!2814 = !DILocation(line: 158, column: 40, scope: !2811)
!2815 = !DILocation(line: 158, column: 16, scope: !2811)
!2816 = !DILocation(line: 157, column: 16, scope: !2800)
!2817 = !DILocation(line: 160, column: 21, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2811, file: !1835, line: 159, column: 7)
!2819 = !DILocation(line: 160, column: 9, scope: !2818)
!2820 = !DILocation(line: 161, column: 7, scope: !2818)
!2821 = !DILocation(line: 162, column: 29, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2811, file: !1835, line: 162, column: 16)
!2823 = !DILocation(line: 162, column: 37, scope: !2822)
!2824 = !DILocation(line: 162, column: 16, scope: !2822)
!2825 = !DILocation(line: 162, column: 50, scope: !2822)
!2826 = !DILocation(line: 163, column: 29, scope: !2822)
!2827 = !DILocation(line: 163, column: 37, scope: !2822)
!2828 = !DILocation(line: 163, column: 16, scope: !2822)
!2829 = !DILocation(line: 162, column: 16, scope: !2811)
!2830 = !DILocation(line: 166, column: 7, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2822, file: !1835, line: 164, column: 7)
!2832 = !DILocation(line: 169, column: 25, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2822, file: !1835, line: 168, column: 7)
!2834 = !DILocation(line: 169, column: 9, scope: !2833)
!2835 = !DILocation(line: 172, column: 5, scope: !2741)
!2836 = !DILocation(line: 173, column: 14, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2737, file: !1835, line: 173, column: 14)
!2838 = !DILocation(line: 173, column: 14, scope: !2737)
!2839 = !DILocation(line: 175, column: 27, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2841, file: !1835, line: 175, column: 11)
!2841 = distinct !DILexicalBlock(scope: !2837, file: !1835, line: 174, column: 5)
!2842 = !DILocation(line: 175, column: 35, scope: !2840)
!2843 = !DILocation(line: 175, column: 11, scope: !2840)
!2844 = !DILocation(line: 175, column: 11, scope: !2841)
!2845 = !DILocation(line: 177, column: 20, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2840, file: !1835, line: 176, column: 7)
!2847 = !DILocation(line: 177, column: 9, scope: !2846)
!2848 = !DILocation(line: 178, column: 7, scope: !2846)
!2849 = !DILocation(line: 181, column: 25, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2840, file: !1835, line: 180, column: 7)
!2851 = !DILocation(line: 181, column: 9, scope: !2850)
!2852 = !DILocation(line: 183, column: 7, scope: !2841)
!2853 = !DILocation(line: 184, column: 5, scope: !2841)
!2854 = distinct !{!2854, !2728, !2855}
!2855 = !DILocation(line: 185, column: 3, scope: !2725)
!2856 = !DILocation(line: 186, column: 1, scope: !2725)
!2857 = distinct !DISubprogram(name: "handle_user_command", scope: !1835, file: !1835, line: 199, type: !2544, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!2858 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2857, file: !1835, line: 199, type: !2546)
!2859 = !DILocation(line: 199, column: 41, scope: !2857)
!2860 = !DILocalVariable(name: "is_anon", scope: !2857, file: !1835, line: 205, type: !19)
!2861 = !DILocation(line: 205, column: 7, scope: !2857)
!2862 = !DILocation(line: 206, column: 13, scope: !2857)
!2863 = !DILocation(line: 206, column: 21, scope: !2857)
!2864 = !DILocation(line: 206, column: 32, scope: !2857)
!2865 = !DILocation(line: 206, column: 40, scope: !2857)
!2866 = !DILocation(line: 206, column: 3, scope: !2857)
!2867 = !DILocation(line: 207, column: 14, scope: !2857)
!2868 = !DILocation(line: 207, column: 22, scope: !2857)
!2869 = !DILocation(line: 207, column: 3, scope: !2857)
!2870 = !DILocation(line: 208, column: 24, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2857, file: !1835, line: 208, column: 7)
!2872 = !DILocation(line: 208, column: 32, scope: !2871)
!2873 = !DILocation(line: 208, column: 8, scope: !2871)
!2874 = !DILocation(line: 208, column: 52, scope: !2871)
!2875 = !DILocation(line: 209, column: 24, scope: !2871)
!2876 = !DILocation(line: 209, column: 32, scope: !2871)
!2877 = !DILocation(line: 209, column: 8, scope: !2871)
!2878 = !DILocation(line: 208, column: 7, scope: !2857)
!2879 = !DILocation(line: 211, column: 13, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2871, file: !1835, line: 210, column: 3)
!2881 = !DILocation(line: 212, column: 3, scope: !2880)
!2882 = !DILocation(line: 213, column: 8, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2857, file: !1835, line: 213, column: 7)
!2884 = !DILocation(line: 213, column: 29, scope: !2883)
!2885 = !DILocation(line: 213, column: 33, scope: !2883)
!2886 = !DILocation(line: 213, column: 7, scope: !2857)
!2887 = !DILocation(line: 216, column: 7, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2883, file: !1835, line: 214, column: 3)
!2889 = !DILocation(line: 215, column: 5, scope: !2888)
!2890 = !DILocation(line: 217, column: 16, scope: !2888)
!2891 = !DILocation(line: 217, column: 24, scope: !2888)
!2892 = !DILocation(line: 217, column: 5, scope: !2888)
!2893 = !DILocation(line: 218, column: 5, scope: !2888)
!2894 = !DILocation(line: 220, column: 7, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2857, file: !1835, line: 220, column: 7)
!2896 = !DILocation(line: 220, column: 15, scope: !2895)
!2897 = !DILocation(line: 220, column: 18, scope: !2895)
!2898 = !DILocation(line: 220, column: 26, scope: !2895)
!2899 = !DILocation(line: 220, column: 42, scope: !2895)
!2900 = !DILocation(line: 220, column: 46, scope: !2895)
!2901 = !DILocation(line: 220, column: 69, scope: !2895)
!2902 = !DILocation(line: 221, column: 8, scope: !2895)
!2903 = !DILocation(line: 220, column: 7, scope: !2857)
!2904 = !DILocation(line: 224, column: 7, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2895, file: !1835, line: 222, column: 3)
!2906 = !DILocation(line: 223, column: 5, scope: !2905)
!2907 = !DILocation(line: 225, column: 16, scope: !2905)
!2908 = !DILocation(line: 225, column: 24, scope: !2905)
!2909 = !DILocation(line: 225, column: 5, scope: !2905)
!2910 = !DILocation(line: 226, column: 5, scope: !2905)
!2911 = !DILocation(line: 228, column: 7, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2857, file: !1835, line: 228, column: 7)
!2913 = !DILocation(line: 228, column: 26, scope: !2912)
!2914 = !DILocation(line: 228, column: 30, scope: !2912)
!2915 = !DILocation(line: 228, column: 38, scope: !2912)
!2916 = !DILocation(line: 228, column: 42, scope: !2912)
!2917 = !DILocation(line: 228, column: 50, scope: !2912)
!2918 = !DILocation(line: 228, column: 66, scope: !2912)
!2919 = !DILocation(line: 229, column: 7, scope: !2912)
!2920 = !DILocation(line: 228, column: 7, scope: !2857)
!2921 = !DILocation(line: 232, column: 7, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2912, file: !1835, line: 230, column: 3)
!2923 = !DILocation(line: 231, column: 5, scope: !2922)
!2924 = !DILocation(line: 233, column: 3, scope: !2922)
!2925 = !DILocation(line: 234, column: 7, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2857, file: !1835, line: 234, column: 7)
!2927 = !DILocation(line: 234, column: 26, scope: !2926)
!2928 = !DILocation(line: 234, column: 29, scope: !2926)
!2929 = !DILocation(line: 234, column: 37, scope: !2926)
!2930 = !DILocation(line: 234, column: 41, scope: !2926)
!2931 = !DILocation(line: 234, column: 49, scope: !2926)
!2932 = !DILocation(line: 234, column: 65, scope: !2926)
!2933 = !DILocation(line: 235, column: 7, scope: !2926)
!2934 = !DILocation(line: 234, column: 7, scope: !2857)
!2935 = !DILocation(line: 238, column: 7, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2926, file: !1835, line: 236, column: 3)
!2937 = !DILocation(line: 237, column: 5, scope: !2936)
!2938 = !DILocation(line: 239, column: 3, scope: !2936)
!2939 = !DILocation(line: 240, column: 7, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2857, file: !1835, line: 240, column: 7)
!2941 = !DILocation(line: 240, column: 7, scope: !2857)
!2942 = !DILocalVariable(name: "located", scope: !2943, file: !1835, line: 242, type: !19)
!2943 = distinct !DILexicalBlock(scope: !2940, file: !1835, line: 241, column: 3)
!2944 = !DILocation(line: 242, column: 9, scope: !2943)
!2945 = !DILocation(line: 242, column: 38, scope: !2943)
!2946 = !DILocation(line: 242, column: 46, scope: !2943)
!2947 = !DILocation(line: 242, column: 61, scope: !2943)
!2948 = !DILocation(line: 242, column: 69, scope: !2943)
!2949 = !DILocation(line: 242, column: 19, scope: !2943)
!2950 = !DILocation(line: 243, column: 10, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2943, file: !1835, line: 243, column: 9)
!2952 = !DILocation(line: 243, column: 18, scope: !2951)
!2953 = !DILocation(line: 243, column: 21, scope: !2951)
!2954 = !DILocation(line: 243, column: 44, scope: !2951)
!2955 = !DILocation(line: 244, column: 11, scope: !2951)
!2956 = !DILocation(line: 244, column: 19, scope: !2951)
!2957 = !DILocation(line: 244, column: 23, scope: !2951)
!2958 = !DILocation(line: 243, column: 9, scope: !2943)
!2959 = !DILocation(line: 246, column: 7, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2951, file: !1835, line: 245, column: 5)
!2961 = !DILocation(line: 247, column: 23, scope: !2960)
!2962 = !DILocation(line: 247, column: 7, scope: !2960)
!2963 = !DILocation(line: 248, column: 25, scope: !2960)
!2964 = !DILocation(line: 248, column: 7, scope: !2960)
!2965 = !DILocation(line: 249, column: 18, scope: !2960)
!2966 = !DILocation(line: 249, column: 26, scope: !2960)
!2967 = !DILocation(line: 249, column: 7, scope: !2960)
!2968 = !DILocation(line: 250, column: 7, scope: !2960)
!2969 = !DILocation(line: 252, column: 3, scope: !2943)
!2970 = !DILocation(line: 253, column: 7, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2857, file: !1835, line: 253, column: 7)
!2972 = !DILocation(line: 253, column: 15, scope: !2971)
!2973 = !DILocation(line: 253, column: 18, scope: !2971)
!2974 = !DILocation(line: 253, column: 7, scope: !2857)
!2975 = !DILocation(line: 256, column: 21, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2971, file: !1835, line: 254, column: 3)
!2977 = !DILocation(line: 256, column: 29, scope: !2976)
!2978 = !DILocation(line: 256, column: 5, scope: !2976)
!2979 = !DILocation(line: 257, column: 25, scope: !2976)
!2980 = !DILocation(line: 257, column: 5, scope: !2976)
!2981 = !DILocation(line: 258, column: 3, scope: !2976)
!2982 = !DILocation(line: 261, column: 21, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2971, file: !1835, line: 260, column: 3)
!2984 = !DILocation(line: 261, column: 5, scope: !2983)
!2985 = !DILocation(line: 263, column: 1, scope: !2857)
!2986 = distinct !DISubprogram(name: "handle_pass_command", scope: !1835, file: !1835, line: 266, type: !2544, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!2987 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2986, file: !1835, line: 266, type: !2546)
!2988 = !DILocation(line: 266, column: 41, scope: !2986)
!2989 = !DILocation(line: 268, column: 20, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2986, file: !1835, line: 268, column: 7)
!2991 = !DILocation(line: 268, column: 28, scope: !2990)
!2992 = !DILocation(line: 268, column: 7, scope: !2990)
!2993 = !DILocation(line: 268, column: 7, scope: !2986)
!2994 = !DILocation(line: 270, column: 21, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2990, file: !1835, line: 269, column: 3)
!2996 = !DILocation(line: 270, column: 5, scope: !2995)
!2997 = !DILocation(line: 271, column: 5, scope: !2995)
!2998 = !DILocation(line: 274, column: 7, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2986, file: !1835, line: 274, column: 7)
!3000 = !DILocation(line: 274, column: 7, scope: !2986)
!3001 = !DILocation(line: 276, column: 27, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2999, file: !1835, line: 275, column: 3)
!3003 = !DILocation(line: 276, column: 36, scope: !3002)
!3004 = !DILocation(line: 276, column: 44, scope: !3002)
!3005 = !DILocation(line: 276, column: 5, scope: !3002)
!3006 = !DILocation(line: 277, column: 3, scope: !3002)
!3007 = !DILocation(line: 280, column: 27, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !2999, file: !1835, line: 279, column: 3)
!3009 = !DILocation(line: 280, column: 36, scope: !3008)
!3010 = !DILocation(line: 280, column: 44, scope: !3008)
!3011 = !DILocation(line: 280, column: 5, scope: !3008)
!3012 = !DILocation(line: 282, column: 19, scope: !2986)
!3013 = !DILocation(line: 282, column: 3, scope: !2986)
!3014 = !DILocation(line: 283, column: 21, scope: !2986)
!3015 = !DILocation(line: 283, column: 3, scope: !2986)
!3016 = !DILocation(line: 284, column: 14, scope: !2986)
!3017 = !DILocation(line: 284, column: 22, scope: !2986)
!3018 = !DILocation(line: 284, column: 3, scope: !2986)
!3019 = !DILocation(line: 286, column: 1, scope: !2986)
!3020 = distinct !DISubprogram(name: "handle_get", scope: !1835, file: !1835, line: 189, type: !2544, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!3021 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3020, file: !1835, line: 189, type: !2546)
!3022 = !DILocation(line: 189, column: 32, scope: !3020)
!3023 = !DILocation(line: 191, column: 3, scope: !3020)
!3024 = !DILocation(line: 191, column: 11, scope: !3020)
!3025 = !DILocation(line: 191, column: 19, scope: !3020)
!3026 = !DILocation(line: 192, column: 13, scope: !3020)
!3027 = !DILocation(line: 192, column: 21, scope: !3020)
!3028 = !DILocation(line: 192, column: 36, scope: !3020)
!3029 = !DILocation(line: 192, column: 44, scope: !3020)
!3030 = !DILocation(line: 192, column: 3, scope: !3020)
!3031 = !DILocation(line: 193, column: 19, scope: !3020)
!3032 = !DILocation(line: 193, column: 27, scope: !3020)
!3033 = !DILocation(line: 193, column: 3, scope: !3020)
!3034 = !DILocation(line: 194, column: 19, scope: !3020)
!3035 = !DILocation(line: 194, column: 27, scope: !3020)
!3036 = !DILocation(line: 194, column: 3, scope: !3020)
!3037 = !DILocation(line: 195, column: 23, scope: !3020)
!3038 = !DILocation(line: 195, column: 3, scope: !3020)
!3039 = !DILocation(line: 196, column: 1, scope: !3020)
!3040 = distinct !DISubprogram(name: "check_login_fails", scope: !1835, file: !1835, line: 296, type: !2544, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!3041 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3040, file: !1835, line: 296, type: !2546)
!3042 = !DILocation(line: 296, column: 51, scope: !3040)
!3043 = !DILocation(line: 298, column: 9, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3040, file: !1835, line: 298, column: 7)
!3045 = !DILocation(line: 298, column: 17, scope: !3044)
!3046 = !DILocation(line: 298, column: 7, scope: !3044)
!3047 = !DILocation(line: 298, column: 32, scope: !3044)
!3048 = !DILocation(line: 298, column: 29, scope: !3044)
!3049 = !DILocation(line: 298, column: 7, scope: !3040)
!3050 = !DILocation(line: 300, column: 5, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3044, file: !1835, line: 299, column: 3)
!3052 = !DILocation(line: 301, column: 5, scope: !3051)
!3053 = !DILocation(line: 302, column: 3, scope: !3051)
!3054 = !DILocation(line: 303, column: 1, scope: !3040)
!3055 = distinct !DISubprogram(name: "check_login_delay", scope: !1835, file: !1835, line: 288, type: !1619, scopeLine: 289, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1834, retainedNodes: !128)
!3056 = !DILocation(line: 290, column: 7, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3055, file: !1835, line: 290, column: 7)
!3058 = !DILocation(line: 290, column: 7, scope: !3055)
!3059 = !DILocation(line: 292, column: 32, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3057, file: !1835, line: 291, column: 3)
!3061 = !DILocation(line: 292, column: 23, scope: !3060)
!3062 = !DILocation(line: 292, column: 5, scope: !3060)
!3063 = !DILocation(line: 293, column: 3, scope: !3060)
!3064 = !DILocation(line: 294, column: 1, scope: !3055)
!3065 = distinct !DISubprogram(name: "vsf_cmdio_sock_setup", scope: !3, file: !3, line: 32, type: !1619, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3066 = !DILocation(line: 34, column: 3, scope: !3065)
!3067 = !DILocation(line: 35, column: 3, scope: !3065)
!3068 = !DILocation(line: 36, column: 3, scope: !3065)
!3069 = !DILocation(line: 37, column: 1, scope: !3065)
!3070 = distinct !DISubprogram(name: "vsf_cmdio_write", scope: !3, file: !3, line: 49, type: !3071, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{null, !6, !19, !88}
!3073 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3070, file: !3, line: 49, type: !6)
!3074 = !DILocation(line: 49, column: 37, scope: !3070)
!3075 = !DILocalVariable(name: "status", arg: 2, scope: !3070, file: !3, line: 49, type: !19)
!3076 = !DILocation(line: 49, column: 49, scope: !3070)
!3077 = !DILocalVariable(name: "p_text", arg: 3, scope: !3070, file: !3, line: 49, type: !88)
!3078 = !DILocation(line: 49, column: 69, scope: !3070)
!3079 = !DILocation(line: 51, column: 25, scope: !3070)
!3080 = !DILocation(line: 51, column: 33, scope: !3070)
!3081 = !DILocation(line: 51, column: 41, scope: !3070)
!3082 = !DILocation(line: 51, column: 3, scope: !3070)
!3083 = !DILocation(line: 52, column: 1, scope: !3070)
!3084 = !DILocalVariable(name: "p_sess", arg: 1, scope: !2, file: !3, line: 94, type: !6)
!3085 = !DILocation(line: 94, column: 43, scope: !2)
!3086 = !DILocalVariable(name: "status", arg: 2, scope: !2, file: !3, line: 94, type: !19)
!3087 = !DILocation(line: 94, column: 55, scope: !2)
!3088 = !DILocalVariable(name: "p_text", arg: 3, scope: !2, file: !3, line: 95, type: !88)
!3089 = !DILocation(line: 95, column: 35, scope: !2)
!3090 = !DILocalVariable(name: "sep", arg: 4, scope: !2, file: !3, line: 95, type: !17)
!3091 = !DILocation(line: 95, column: 48, scope: !2)
!3092 = !DILocation(line: 99, column: 30, scope: !2)
!3093 = !DILocation(line: 99, column: 3, scope: !2)
!3094 = !DILocation(line: 100, column: 24, scope: !2)
!3095 = !DILocation(line: 100, column: 32, scope: !2)
!3096 = !DILocation(line: 100, column: 40, scope: !2)
!3097 = !DILocation(line: 100, column: 3, scope: !2)
!3098 = !DILocation(line: 101, column: 1, scope: !2)
!3099 = !DILocalVariable(name: "p_sess", arg: 1, scope: !137, file: !3, line: 118, type: !6)
!3100 = !DILocation(line: 118, column: 42, scope: !137)
!3101 = !DILocalVariable(name: "status", arg: 2, scope: !137, file: !3, line: 118, type: !19)
!3102 = !DILocation(line: 118, column: 54, scope: !137)
!3103 = !DILocalVariable(name: "sep", arg: 3, scope: !137, file: !3, line: 118, type: !17)
!3104 = !DILocation(line: 118, column: 67, scope: !137)
!3105 = !DILocalVariable(name: "p_str", arg: 4, scope: !137, file: !3, line: 119, type: !140)
!3106 = !DILocation(line: 119, column: 42, scope: !137)
!3107 = !DILocalVariable(name: "retval", scope: !137, file: !3, line: 123, type: !19)
!3108 = !DILocation(line: 123, column: 7, scope: !137)
!3109 = !DILocation(line: 124, column: 7, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !137, file: !3, line: 124, column: 7)
!3111 = !DILocation(line: 124, column: 7, scope: !137)
!3112 = !DILocation(line: 126, column: 55, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 125, column: 3)
!3114 = !DILocation(line: 126, column: 39, scope: !3113)
!3115 = !DILocation(line: 126, column: 5, scope: !3113)
!3116 = !DILocation(line: 127, column: 39, scope: !3113)
!3117 = !DILocation(line: 127, column: 5, scope: !3113)
!3118 = !DILocation(line: 128, column: 38, scope: !3113)
!3119 = !DILocation(line: 128, column: 5, scope: !3113)
!3120 = !DILocation(line: 129, column: 18, scope: !3113)
!3121 = !DILocation(line: 129, column: 5, scope: !3113)
!3122 = !DILocation(line: 130, column: 3, scope: !3113)
!3123 = !DILocation(line: 131, column: 32, scope: !137)
!3124 = !DILocation(line: 131, column: 3, scope: !137)
!3125 = !DILocation(line: 134, column: 3, scope: !137)
!3126 = !DILocation(line: 136, column: 3, scope: !137)
!3127 = !DILocation(line: 138, column: 53, scope: !137)
!3128 = !DILocation(line: 138, column: 37, scope: !137)
!3129 = !DILocation(line: 138, column: 3, scope: !137)
!3130 = !DILocation(line: 139, column: 37, scope: !137)
!3131 = !DILocation(line: 139, column: 3, scope: !137)
!3132 = !DILocation(line: 140, column: 3, scope: !137)
!3133 = !DILocation(line: 141, column: 3, scope: !137)
!3134 = !DILocation(line: 142, column: 26, scope: !137)
!3135 = !DILocation(line: 142, column: 12, scope: !137)
!3136 = !DILocation(line: 142, column: 10, scope: !137)
!3137 = !DILocation(line: 143, column: 7, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !137, file: !3, line: 143, column: 7)
!3139 = !DILocation(line: 143, column: 14, scope: !3138)
!3140 = !DILocation(line: 143, column: 7, scope: !137)
!3141 = !DILocation(line: 145, column: 5, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 144, column: 3)
!3143 = !DILocation(line: 146, column: 3, scope: !3142)
!3144 = !DILocation(line: 147, column: 1, scope: !137)
!3145 = distinct !DISubprogram(name: "vsf_cmdio_write_hyphen", scope: !3, file: !3, line: 55, type: !3071, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3146 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3145, file: !3, line: 55, type: !6)
!3147 = !DILocation(line: 55, column: 44, scope: !3145)
!3148 = !DILocalVariable(name: "status", arg: 2, scope: !3145, file: !3, line: 55, type: !19)
!3149 = !DILocation(line: 55, column: 56, scope: !3145)
!3150 = !DILocalVariable(name: "p_text", arg: 3, scope: !3145, file: !3, line: 56, type: !88)
!3151 = !DILocation(line: 56, column: 36, scope: !3145)
!3152 = !DILocation(line: 58, column: 25, scope: !3145)
!3153 = !DILocation(line: 58, column: 33, scope: !3145)
!3154 = !DILocation(line: 58, column: 41, scope: !3145)
!3155 = !DILocation(line: 58, column: 3, scope: !3145)
!3156 = !DILocation(line: 59, column: 1, scope: !3145)
!3157 = !DILocalVariable(name: "p_sess", arg: 1, scope: !125, file: !3, line: 62, type: !6)
!3158 = !DILocation(line: 62, column: 41, scope: !125)
!3159 = !DILocalVariable(name: "p_text", arg: 2, scope: !125, file: !3, line: 62, type: !88)
!3160 = !DILocation(line: 62, column: 61, scope: !125)
!3161 = !DILocalVariable(name: "retval", scope: !125, file: !3, line: 65, type: !19)
!3162 = !DILocation(line: 65, column: 7, scope: !125)
!3163 = !DILocation(line: 66, column: 30, scope: !125)
!3164 = !DILocation(line: 66, column: 3, scope: !125)
!3165 = !DILocation(line: 67, column: 7, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !125, file: !3, line: 67, column: 7)
!3167 = !DILocation(line: 67, column: 7, scope: !125)
!3168 = !DILocation(line: 69, column: 18, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 68, column: 3)
!3170 = !DILocation(line: 69, column: 5, scope: !3169)
!3171 = !DILocation(line: 70, column: 3, scope: !3169)
!3172 = !DILocation(line: 71, column: 26, scope: !125)
!3173 = !DILocation(line: 71, column: 12, scope: !125)
!3174 = !DILocation(line: 71, column: 10, scope: !125)
!3175 = !DILocation(line: 72, column: 7, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !125, file: !3, line: 72, column: 7)
!3177 = !DILocation(line: 72, column: 14, scope: !3176)
!3178 = !DILocation(line: 72, column: 7, scope: !125)
!3179 = !DILocation(line: 74, column: 5, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 73, column: 3)
!3181 = !DILocation(line: 75, column: 3, scope: !3180)
!3182 = !DILocation(line: 76, column: 1, scope: !125)
!3183 = distinct !DISubprogram(name: "vsf_cmdio_write_exit", scope: !3, file: !3, line: 79, type: !3184, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{null, !6, !19, !88, !19}
!3186 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3183, file: !3, line: 79, type: !6)
!3187 = !DILocation(line: 79, column: 42, scope: !3183)
!3188 = !DILocalVariable(name: "status", arg: 2, scope: !3183, file: !3, line: 79, type: !19)
!3189 = !DILocation(line: 79, column: 54, scope: !3183)
!3190 = !DILocalVariable(name: "p_text", arg: 3, scope: !3183, file: !3, line: 79, type: !88)
!3191 = !DILocation(line: 79, column: 74, scope: !3183)
!3192 = !DILocalVariable(name: "exit_val", arg: 4, scope: !3183, file: !3, line: 80, type: !19)
!3193 = !DILocation(line: 80, column: 26, scope: !3183)
!3194 = !DILocation(line: 86, column: 3, scope: !3183)
!3195 = !DILocation(line: 87, column: 3, scope: !3183)
!3196 = !DILocation(line: 88, column: 19, scope: !3183)
!3197 = !DILocation(line: 88, column: 27, scope: !3183)
!3198 = !DILocation(line: 88, column: 35, scope: !3183)
!3199 = !DILocation(line: 88, column: 3, scope: !3183)
!3200 = !DILocation(line: 89, column: 3, scope: !3183)
!3201 = !DILocation(line: 90, column: 20, scope: !3183)
!3202 = !DILocation(line: 90, column: 3, scope: !3183)
!3203 = !DILocation(line: 91, column: 1, scope: !3183)
!3204 = distinct !DISubprogram(name: "vsf_cmdio_write_str_hyphen", scope: !3, file: !3, line: 104, type: !3205, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{null, !6, !19, !140}
!3207 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3204, file: !3, line: 104, type: !6)
!3208 = !DILocation(line: 104, column: 48, scope: !3204)
!3209 = !DILocalVariable(name: "status", arg: 2, scope: !3204, file: !3, line: 104, type: !19)
!3210 = !DILocation(line: 104, column: 60, scope: !3204)
!3211 = !DILocalVariable(name: "p_str", arg: 3, scope: !3204, file: !3, line: 105, type: !140)
!3212 = !DILocation(line: 105, column: 48, scope: !3204)
!3213 = !DILocation(line: 107, column: 24, scope: !3204)
!3214 = !DILocation(line: 107, column: 32, scope: !3204)
!3215 = !DILocation(line: 107, column: 45, scope: !3204)
!3216 = !DILocation(line: 107, column: 3, scope: !3204)
!3217 = !DILocation(line: 108, column: 1, scope: !3204)
!3218 = distinct !DISubprogram(name: "vsf_cmdio_write_str", scope: !3, file: !3, line: 111, type: !3205, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3219 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3218, file: !3, line: 111, type: !6)
!3220 = !DILocation(line: 111, column: 41, scope: !3218)
!3221 = !DILocalVariable(name: "status", arg: 2, scope: !3218, file: !3, line: 111, type: !19)
!3222 = !DILocation(line: 111, column: 53, scope: !3218)
!3223 = !DILocalVariable(name: "p_str", arg: 3, scope: !3218, file: !3, line: 112, type: !140)
!3224 = !DILocation(line: 112, column: 41, scope: !3218)
!3225 = !DILocation(line: 114, column: 24, scope: !3218)
!3226 = !DILocation(line: 114, column: 32, scope: !3218)
!3227 = !DILocation(line: 114, column: 45, scope: !3218)
!3228 = !DILocation(line: 114, column: 3, scope: !3218)
!3229 = !DILocation(line: 115, column: 1, scope: !3218)
!3230 = distinct !DISubprogram(name: "vsf_cmdio_set_alarm", scope: !3, file: !3, line: 150, type: !3231, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{null, !6}
!3233 = !DILocalVariable(name: "p_sess", arg: 1, scope: !3230, file: !3, line: 150, type: !6)
!3234 = !DILocation(line: 150, column: 41, scope: !3230)
!3235 = !DILocation(line: 152, column: 7, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 152, column: 7)
!3237 = !DILocation(line: 152, column: 36, scope: !3236)
!3238 = !DILocation(line: 152, column: 7, scope: !3230)
!3239 = !DILocation(line: 156, column: 36, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 153, column: 3)
!3241 = !DILocation(line: 154, column: 5, scope: !3240)
!3242 = !DILocation(line: 158, column: 27, scope: !3240)
!3243 = !DILocation(line: 158, column: 5, scope: !3240)
!3244 = !DILocation(line: 159, column: 3, scope: !3240)
!3245 = !DILocation(line: 160, column: 1, scope: !3230)
!3246 = distinct !DISubprogram(name: "handle_alarm_timeout", scope: !3, file: !3, line: 40, type: !1072, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3247 = !DILocalVariable(name: "p_private", arg: 1, scope: !3246, file: !3, line: 40, type: !80)
!3248 = !DILocation(line: 40, column: 28, scope: !3246)
!3249 = !DILocalVariable(name: "p_sess", scope: !3246, file: !3, line: 42, type: !6)
!3250 = !DILocation(line: 42, column: 23, scope: !3246)
!3251 = !DILocation(line: 42, column: 54, scope: !3246)
!3252 = !DILocation(line: 42, column: 32, scope: !3246)
!3253 = !DILocation(line: 43, column: 3, scope: !3246)
!3254 = !DILocation(line: 43, column: 11, scope: !3246)
!3255 = !DILocation(line: 43, column: 24, scope: !3246)
!3256 = !DILocation(line: 44, column: 3, scope: !3246)
!3257 = !DILocation(line: 45, column: 3, scope: !3246)
!3258 = !DILocation(line: 46, column: 1, scope: !3246)
!3259 = !DILocalVariable(name: "p_sess", arg: 1, scope: !131, file: !3, line: 163, type: !6)
!3260 = !DILocation(line: 163, column: 47, scope: !131)
!3261 = !DILocalVariable(name: "p_cmd_str", arg: 2, scope: !131, file: !3, line: 163, type: !134)
!3262 = !DILocation(line: 163, column: 69, scope: !131)
!3263 = !DILocalVariable(name: "p_arg_str", arg: 3, scope: !131, file: !3, line: 164, type: !134)
!3264 = !DILocation(line: 164, column: 41, scope: !131)
!3265 = !DILocalVariable(name: "set_alarm", arg: 4, scope: !131, file: !3, line: 164, type: !19)
!3266 = !DILocation(line: 164, column: 56, scope: !131)
!3267 = !DILocalVariable(name: "ret", scope: !131, file: !3, line: 166, type: !19)
!3268 = !DILocation(line: 166, column: 7, scope: !131)
!3269 = !DILocation(line: 168, column: 7, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !131, file: !3, line: 168, column: 7)
!3271 = !DILocation(line: 168, column: 7, scope: !131)
!3272 = !DILocation(line: 170, column: 25, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 169, column: 3)
!3274 = !DILocation(line: 170, column: 5, scope: !3273)
!3275 = !DILocation(line: 171, column: 3, scope: !3273)
!3276 = !DILocation(line: 173, column: 25, scope: !131)
!3277 = !DILocation(line: 173, column: 36, scope: !131)
!3278 = !DILocation(line: 173, column: 9, scope: !131)
!3279 = !DILocation(line: 173, column: 7, scope: !131)
!3280 = !DILocation(line: 174, column: 7, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !131, file: !3, line: 174, column: 7)
!3282 = !DILocation(line: 174, column: 15, scope: !3281)
!3283 = !DILocation(line: 174, column: 7, scope: !131)
!3284 = !DILocation(line: 176, column: 26, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 175, column: 3)
!3286 = !DILocation(line: 176, column: 5, scope: !3285)
!3287 = !DILocation(line: 177, column: 3, scope: !3285)
!3288 = !DILocation(line: 178, column: 7, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !131, file: !3, line: 178, column: 7)
!3290 = !DILocation(line: 178, column: 11, scope: !3289)
!3291 = !DILocation(line: 178, column: 7, scope: !131)
!3292 = !DILocation(line: 183, column: 5, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3289, file: !3, line: 179, column: 3)
!3294 = !DILocation(line: 184, column: 5, scope: !3293)
!3295 = !DILocation(line: 185, column: 3, scope: !3293)
!3296 = !DILocation(line: 189, column: 18, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !131, file: !3, line: 189, column: 7)
!3298 = !DILocation(line: 189, column: 7, scope: !3297)
!3299 = !DILocation(line: 189, column: 29, scope: !3297)
!3300 = !DILocation(line: 189, column: 34, scope: !3297)
!3301 = !DILocation(line: 189, column: 53, scope: !3297)
!3302 = !DILocation(line: 189, column: 37, scope: !3297)
!3303 = !DILocation(line: 189, column: 67, scope: !3297)
!3304 = !DILocation(line: 189, column: 7, scope: !131)
!3305 = !DILocation(line: 191, column: 15, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 190, column: 3)
!3307 = !DILocation(line: 191, column: 5, scope: !3306)
!3308 = !DILocation(line: 192, column: 3, scope: !3306)
!3309 = !DILocation(line: 195, column: 20, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 194, column: 3)
!3311 = !DILocation(line: 195, column: 31, scope: !3310)
!3312 = !DILocation(line: 195, column: 5, scope: !3310)
!3313 = !DILocation(line: 197, column: 13, scope: !131)
!3314 = !DILocation(line: 197, column: 3, scope: !131)
!3315 = !DILocation(line: 198, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !131, file: !3, line: 198, column: 7)
!3317 = !DILocation(line: 198, column: 7, scope: !131)
!3318 = !DILocation(line: 201, column: 24, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 201, column: 9)
!3320 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 199, column: 3)
!3321 = !DILocation(line: 201, column: 9, scope: !3319)
!3322 = !DILocation(line: 201, column: 9, scope: !3320)
!3323 = !DILocation(line: 203, column: 7, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 202, column: 5)
!3325 = !DILocation(line: 204, column: 5, scope: !3324)
!3326 = !DILocation(line: 207, column: 28, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 206, column: 5)
!3328 = !DILocation(line: 207, column: 7, scope: !3327)
!3329 = !DILocation(line: 208, column: 24, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 208, column: 11)
!3331 = !DILocation(line: 208, column: 12, scope: !3330)
!3332 = !DILocation(line: 208, column: 11, scope: !3327)
!3333 = !DILocation(line: 210, column: 9, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 209, column: 7)
!3335 = !DILocation(line: 211, column: 36, scope: !3334)
!3336 = !DILocation(line: 211, column: 9, scope: !3334)
!3337 = !DILocation(line: 212, column: 7, scope: !3334)
!3338 = !DILocation(line: 214, column: 18, scope: !3320)
!3339 = !DILocation(line: 214, column: 5, scope: !3320)
!3340 = !DILocation(line: 215, column: 3, scope: !3320)
!3341 = !DILocation(line: 216, column: 1, scope: !131)
!3342 = distinct !DISubprogram(name: "control_getline", scope: !3, file: !3, line: 219, type: !3343, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !90, retainedNodes: !128)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!19, !134, !6}
!3345 = !DILocalVariable(name: "p_str", arg: 1, scope: !3342, file: !3, line: 219, type: !134)
!3346 = !DILocation(line: 219, column: 31, scope: !3342)
!3347 = !DILocalVariable(name: "p_sess", arg: 2, scope: !3342, file: !3, line: 219, type: !6)
!3348 = !DILocation(line: 219, column: 58, scope: !3342)
!3349 = !DILocalVariable(name: "ret", scope: !3342, file: !3, line: 221, type: !19)
!3350 = !DILocation(line: 221, column: 7, scope: !3342)
!3351 = !DILocation(line: 222, column: 7, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 222, column: 7)
!3353 = !DILocation(line: 222, column: 15, scope: !3352)
!3354 = !DILocation(line: 222, column: 34, scope: !3352)
!3355 = !DILocation(line: 222, column: 7, scope: !3342)
!3356 = !DILocation(line: 224, column: 23, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 223, column: 3)
!3358 = !DILocation(line: 224, column: 31, scope: !3357)
!3359 = !DILocation(line: 224, column: 5, scope: !3357)
!3360 = !DILocation(line: 225, column: 3, scope: !3357)
!3361 = !DILocation(line: 226, column: 21, scope: !3342)
!3362 = !DILocation(line: 226, column: 29, scope: !3342)
!3363 = !DILocation(line: 226, column: 36, scope: !3342)
!3364 = !DILocation(line: 226, column: 44, scope: !3342)
!3365 = !DILocation(line: 226, column: 9, scope: !3342)
!3366 = !DILocation(line: 226, column: 7, scope: !3342)
!3367 = !DILocation(line: 227, column: 7, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 227, column: 7)
!3369 = !DILocation(line: 227, column: 11, scope: !3368)
!3370 = !DILocation(line: 227, column: 7, scope: !3342)
!3371 = !DILocation(line: 229, column: 12, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 228, column: 3)
!3373 = !DILocation(line: 229, column: 5, scope: !3372)
!3374 = !DILocation(line: 231, column: 12, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 231, column: 12)
!3376 = !DILocation(line: 231, column: 16, scope: !3375)
!3377 = !DILocation(line: 231, column: 12, scope: !3368)
!3378 = !DILocation(line: 233, column: 26, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 232, column: 3)
!3380 = !DILocation(line: 233, column: 5, scope: !3379)
!3381 = !DILocation(line: 234, column: 3, scope: !3379)
!3382 = !DILocation(line: 236, column: 20, scope: !3342)
!3383 = !DILocation(line: 236, column: 3, scope: !3342)
!3384 = !DILocalVariable(name: "len", scope: !3385, file: !3, line: 239, type: !26)
!3385 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 238, column: 3)
!3386 = !DILocation(line: 239, column: 18, scope: !3385)
!3387 = !DILocation(line: 239, column: 35, scope: !3385)
!3388 = !DILocation(line: 239, column: 24, scope: !3385)
!3389 = !DILocation(line: 240, column: 5, scope: !3385)
!3390 = !DILocation(line: 240, column: 12, scope: !3385)
!3391 = !DILocation(line: 240, column: 16, scope: !3385)
!3392 = !DILocation(line: 240, column: 20, scope: !3385)
!3393 = !DILocation(line: 240, column: 39, scope: !3385)
!3394 = !DILocation(line: 240, column: 46, scope: !3385)
!3395 = !DILocation(line: 240, column: 50, scope: !3385)
!3396 = !DILocation(line: 240, column: 23, scope: !3385)
!3397 = !DILocation(line: 240, column: 55, scope: !3385)
!3398 = !DILocation(line: 242, column: 17, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 241, column: 5)
!3400 = !DILocation(line: 242, column: 24, scope: !3399)
!3401 = !DILocation(line: 242, column: 28, scope: !3399)
!3402 = !DILocation(line: 242, column: 7, scope: !3399)
!3403 = !DILocation(line: 243, column: 7, scope: !3399)
!3404 = distinct !{!3404, !3389, !3405}
!3405 = !DILocation(line: 244, column: 5, scope: !3385)
!3406 = !DILocation(line: 246, column: 3, scope: !3342)
!3407 = !DILocation(line: 247, column: 1, scope: !3342)
!3408 = !DILocalVariable(name: "p_sess", arg: 1, scope: !146, file: !147, line: 84, type: !150)
!3409 = !DILocation(line: 84, column: 40, scope: !146)
!3410 = !DILocation(line: 86, column: 15, scope: !146)
!3411 = !DILocation(line: 86, column: 23, scope: !146)
!3412 = !DILocation(line: 86, column: 3, scope: !146)
!3413 = !DILocation(line: 87, column: 7, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !146, file: !147, line: 87, column: 7)
!3415 = !DILocation(line: 87, column: 15, scope: !3414)
!3416 = !DILocation(line: 87, column: 7, scope: !146)
!3417 = !DILocation(line: 89, column: 27, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3414, file: !147, line: 88, column: 3)
!3419 = !DILocation(line: 89, column: 5, scope: !3418)
!3420 = !DILocation(line: 90, column: 27, scope: !3418)
!3421 = !DILocation(line: 90, column: 5, scope: !3418)
!3422 = !DILocation(line: 90, column: 13, scope: !3418)
!3423 = !DILocation(line: 90, column: 25, scope: !3418)
!3424 = !DILocation(line: 91, column: 3, scope: !3418)
!3425 = !DILocation(line: 94, column: 27, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3414, file: !147, line: 93, column: 3)
!3427 = !DILocation(line: 94, column: 5, scope: !3426)
!3428 = !DILocation(line: 95, column: 27, scope: !3426)
!3429 = !DILocation(line: 95, column: 5, scope: !3426)
!3430 = !DILocation(line: 95, column: 13, scope: !3426)
!3431 = !DILocation(line: 95, column: 25, scope: !3426)
!3432 = !DILocation(line: 97, column: 7, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !146, file: !147, line: 97, column: 7)
!3434 = !DILocation(line: 97, column: 15, scope: !3433)
!3435 = !DILocation(line: 97, column: 7, scope: !146)
!3436 = !DILocation(line: 99, column: 17, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3433, file: !147, line: 98, column: 3)
!3438 = !DILocation(line: 99, column: 5, scope: !3437)
!3439 = !DILocation(line: 100, column: 5, scope: !3437)
!3440 = !DILocation(line: 101, column: 3, scope: !3437)
!3441 = !DILocation(line: 107, column: 7, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !146, file: !147, line: 107, column: 7)
!3443 = !DILocation(line: 107, column: 33, scope: !3442)
!3444 = !DILocation(line: 107, column: 37, scope: !3442)
!3445 = !DILocation(line: 107, column: 45, scope: !3442)
!3446 = !DILocation(line: 107, column: 7, scope: !146)
!3447 = !DILocation(line: 109, column: 70, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3442, file: !147, line: 108, column: 3)
!3449 = !DILocation(line: 109, column: 5, scope: !3448)
!3450 = !DILocation(line: 110, column: 5, scope: !3448)
!3451 = !DILocation(line: 111, column: 3, scope: !3448)
!3452 = !DILocation(line: 113, column: 26, scope: !146)
!3453 = !DILocation(line: 113, column: 3, scope: !146)
!3454 = !DILocation(line: 114, column: 19, scope: !146)
!3455 = !DILocation(line: 114, column: 3, scope: !146)
!3456 = !DILocation(line: 116, column: 3, scope: !146)
!3457 = !DILocalVariable(name: "cmd_ok", scope: !3458, file: !147, line: 118, type: !19)
!3458 = distinct !DILexicalBlock(scope: !146, file: !147, line: 117, column: 3)
!3459 = !DILocation(line: 118, column: 9, scope: !3458)
!3460 = !DILocation(line: 119, column: 9, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3458, file: !147, line: 119, column: 9)
!3462 = !DILocation(line: 119, column: 9, scope: !3458)
!3463 = !DILocation(line: 121, column: 7, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3461, file: !147, line: 120, column: 5)
!3465 = !DILocation(line: 122, column: 5, scope: !3464)
!3466 = !DILocation(line: 124, column: 31, scope: !3458)
!3467 = !DILocation(line: 124, column: 40, scope: !3458)
!3468 = !DILocation(line: 124, column: 48, scope: !3458)
!3469 = !DILocation(line: 125, column: 32, scope: !3458)
!3470 = !DILocation(line: 125, column: 40, scope: !3458)
!3471 = !DILocation(line: 124, column: 5, scope: !3458)
!3472 = !DILocation(line: 126, column: 9, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3458, file: !147, line: 126, column: 9)
!3474 = !DILocation(line: 126, column: 9, scope: !3458)
!3475 = !DILocalVariable(name: "proctitle_str", scope: !3476, file: !147, line: 128, type: !170)
!3476 = distinct !DILexicalBlock(scope: !3473, file: !147, line: 127, column: 5)
!3477 = !DILocation(line: 128, column: 20, scope: !3476)
!3478 = !DILocation(line: 129, column: 33, scope: !3476)
!3479 = !DILocation(line: 129, column: 41, scope: !3476)
!3480 = !DILocation(line: 129, column: 7, scope: !3476)
!3481 = !DILocation(line: 130, column: 25, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3476, file: !147, line: 130, column: 11)
!3483 = !DILocation(line: 130, column: 33, scope: !3482)
!3484 = !DILocation(line: 130, column: 12, scope: !3482)
!3485 = !DILocation(line: 130, column: 11, scope: !3476)
!3486 = !DILocation(line: 132, column: 9, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3482, file: !147, line: 131, column: 7)
!3488 = !DILocation(line: 133, column: 41, scope: !3487)
!3489 = !DILocation(line: 133, column: 49, scope: !3487)
!3490 = !DILocation(line: 133, column: 9, scope: !3487)
!3491 = !DILocation(line: 134, column: 7, scope: !3487)
!3492 = !DILocation(line: 136, column: 7, scope: !3476)
!3493 = !DILocation(line: 137, column: 7, scope: !3476)
!3494 = !DILocation(line: 138, column: 7, scope: !3476)
!3495 = !DILocation(line: 139, column: 5, scope: !3476)
!3496 = !DILocation(line: 141, column: 9, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3458, file: !147, line: 141, column: 9)
!3498 = !DILocation(line: 141, column: 9, scope: !3458)
!3499 = !DILocation(line: 145, column: 34, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3497, file: !147, line: 142, column: 5)
!3501 = !DILocation(line: 145, column: 7, scope: !3500)
!3502 = !DILocation(line: 146, column: 7, scope: !3500)
!3503 = !DILocation(line: 148, column: 9, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3500, file: !147, line: 147, column: 7)
!3505 = !DILocation(line: 149, column: 13, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3504, file: !147, line: 149, column: 13)
!3507 = !DILocation(line: 149, column: 13, scope: !3504)
!3508 = !DILocation(line: 151, column: 18, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3506, file: !147, line: 150, column: 9)
!3510 = !DILocation(line: 152, column: 11, scope: !3509)
!3511 = !DILocation(line: 154, column: 41, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3506, file: !147, line: 154, column: 18)
!3513 = !DILocation(line: 154, column: 49, scope: !3512)
!3514 = !DILocation(line: 154, column: 18, scope: !3512)
!3515 = !DILocation(line: 154, column: 18, scope: !3506)
!3516 = !DILocation(line: 156, column: 11, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3512, file: !147, line: 155, column: 9)
!3518 = !DILocation(line: 158, column: 9, scope: !3504)
!3519 = distinct !{!3519, !3502, !3520}
!3520 = !DILocation(line: 159, column: 7, scope: !3500)
!3521 = !DILocation(line: 160, column: 5, scope: !3500)
!3522 = !DILocation(line: 161, column: 9, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3458, file: !147, line: 161, column: 9)
!3524 = !DILocation(line: 161, column: 9, scope: !3458)
!3525 = !DILocation(line: 165, column: 34, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3523, file: !147, line: 162, column: 5)
!3527 = !DILocation(line: 165, column: 7, scope: !3526)
!3528 = !DILocation(line: 166, column: 7, scope: !3526)
!3529 = !DILocation(line: 168, column: 9, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3526, file: !147, line: 167, column: 7)
!3531 = !DILocation(line: 169, column: 13, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3530, file: !147, line: 169, column: 13)
!3533 = !DILocation(line: 169, column: 13, scope: !3530)
!3534 = !DILocation(line: 171, column: 11, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3532, file: !147, line: 170, column: 9)
!3536 = !DILocation(line: 173, column: 41, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3532, file: !147, line: 173, column: 18)
!3538 = !DILocation(line: 173, column: 49, scope: !3537)
!3539 = !DILocation(line: 173, column: 18, scope: !3537)
!3540 = !DILocation(line: 173, column: 18, scope: !3532)
!3541 = !DILocation(line: 175, column: 18, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3537, file: !147, line: 174, column: 9)
!3543 = !DILocation(line: 176, column: 11, scope: !3542)
!3544 = !DILocation(line: 178, column: 9, scope: !3530)
!3545 = distinct !{!3545, !3528, !3546}
!3546 = !DILocation(line: 179, column: 7, scope: !3526)
!3547 = !DILocation(line: 180, column: 5, scope: !3526)
!3548 = !DILocation(line: 181, column: 10, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3458, file: !147, line: 181, column: 9)
!3550 = !DILocation(line: 181, column: 9, scope: !3458)
!3551 = !DILocation(line: 183, column: 23, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3549, file: !147, line: 182, column: 5)
!3553 = !DILocation(line: 183, column: 7, scope: !3552)
!3554 = !DILocation(line: 184, column: 5, scope: !3552)
!3555 = !DILocation(line: 185, column: 30, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3549, file: !147, line: 185, column: 14)
!3557 = !DILocation(line: 185, column: 38, scope: !3556)
!3558 = !DILocation(line: 185, column: 14, scope: !3556)
!3559 = !DILocation(line: 185, column: 14, scope: !3549)
!3560 = !DILocation(line: 187, column: 28, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3556, file: !147, line: 186, column: 5)
!3562 = !DILocation(line: 187, column: 7, scope: !3561)
!3563 = !DILocation(line: 188, column: 5, scope: !3561)
!3564 = !DILocation(line: 189, column: 30, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3556, file: !147, line: 189, column: 14)
!3566 = !DILocation(line: 189, column: 38, scope: !3565)
!3567 = !DILocation(line: 189, column: 14, scope: !3565)
!3568 = !DILocation(line: 189, column: 58, scope: !3565)
!3569 = !DILocation(line: 190, column: 30, scope: !3565)
!3570 = !DILocation(line: 190, column: 38, scope: !3565)
!3571 = !DILocation(line: 190, column: 14, scope: !3565)
!3572 = !DILocation(line: 189, column: 14, scope: !3556)
!3573 = !DILocation(line: 192, column: 18, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3565, file: !147, line: 191, column: 5)
!3575 = !DILocation(line: 192, column: 7, scope: !3574)
!3576 = !DILocation(line: 193, column: 5, scope: !3574)
!3577 = !DILocation(line: 194, column: 30, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3565, file: !147, line: 194, column: 14)
!3579 = !DILocation(line: 194, column: 38, scope: !3578)
!3580 = !DILocation(line: 194, column: 14, scope: !3578)
!3581 = !DILocation(line: 194, column: 58, scope: !3578)
!3582 = !DILocation(line: 195, column: 30, scope: !3578)
!3583 = !DILocation(line: 195, column: 38, scope: !3578)
!3584 = !DILocation(line: 195, column: 14, scope: !3578)
!3585 = !DILocation(line: 194, column: 14, scope: !3565)
!3586 = !DILocation(line: 197, column: 18, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3578, file: !147, line: 196, column: 5)
!3588 = !DILocation(line: 197, column: 7, scope: !3587)
!3589 = !DILocation(line: 198, column: 5, scope: !3587)
!3590 = !DILocation(line: 199, column: 30, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3578, file: !147, line: 199, column: 14)
!3592 = !DILocation(line: 199, column: 38, scope: !3591)
!3593 = !DILocation(line: 199, column: 14, scope: !3591)
!3594 = !DILocation(line: 199, column: 59, scope: !3591)
!3595 = !DILocation(line: 200, column: 30, scope: !3591)
!3596 = !DILocation(line: 200, column: 38, scope: !3591)
!3597 = !DILocation(line: 200, column: 14, scope: !3591)
!3598 = !DILocation(line: 199, column: 14, scope: !3578)
!3599 = !DILocation(line: 202, column: 19, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3591, file: !147, line: 201, column: 5)
!3601 = !DILocation(line: 202, column: 7, scope: !3600)
!3602 = !DILocation(line: 203, column: 5, scope: !3600)
!3603 = !DILocation(line: 204, column: 14, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3591, file: !147, line: 204, column: 14)
!3605 = !DILocation(line: 204, column: 34, scope: !3604)
!3606 = !DILocation(line: 205, column: 15, scope: !3604)
!3607 = !DILocation(line: 205, column: 23, scope: !3604)
!3608 = !DILocation(line: 205, column: 32, scope: !3604)
!3609 = !DILocation(line: 206, column: 31, scope: !3604)
!3610 = !DILocation(line: 206, column: 39, scope: !3604)
!3611 = !DILocation(line: 206, column: 15, scope: !3604)
!3612 = !DILocation(line: 206, column: 60, scope: !3604)
!3613 = !DILocation(line: 207, column: 31, scope: !3604)
!3614 = !DILocation(line: 207, column: 39, scope: !3604)
!3615 = !DILocation(line: 207, column: 15, scope: !3604)
!3616 = !DILocation(line: 204, column: 14, scope: !3591)
!3617 = !DILocation(line: 209, column: 19, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3604, file: !147, line: 208, column: 5)
!3619 = !DILocation(line: 209, column: 7, scope: !3618)
!3620 = !DILocation(line: 210, column: 5, scope: !3618)
!3621 = !DILocation(line: 211, column: 14, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3604, file: !147, line: 211, column: 14)
!3623 = !DILocation(line: 211, column: 34, scope: !3622)
!3624 = !DILocation(line: 212, column: 30, scope: !3622)
!3625 = !DILocation(line: 212, column: 38, scope: !3622)
!3626 = !DILocation(line: 212, column: 14, scope: !3622)
!3627 = !DILocation(line: 211, column: 14, scope: !3604)
!3628 = !DILocation(line: 214, column: 19, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3622, file: !147, line: 213, column: 5)
!3630 = !DILocation(line: 214, column: 7, scope: !3629)
!3631 = !DILocation(line: 215, column: 5, scope: !3629)
!3632 = !DILocation(line: 216, column: 14, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3622, file: !147, line: 216, column: 14)
!3634 = !DILocation(line: 216, column: 38, scope: !3633)
!3635 = !DILocation(line: 217, column: 30, scope: !3633)
!3636 = !DILocation(line: 217, column: 38, scope: !3633)
!3637 = !DILocation(line: 217, column: 14, scope: !3633)
!3638 = !DILocation(line: 216, column: 14, scope: !3622)
!3639 = !DILocation(line: 219, column: 19, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3633, file: !147, line: 218, column: 5)
!3641 = !DILocation(line: 219, column: 7, scope: !3640)
!3642 = !DILocation(line: 220, column: 5, scope: !3640)
!3643 = !DILocation(line: 221, column: 30, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3633, file: !147, line: 221, column: 14)
!3645 = !DILocation(line: 221, column: 38, scope: !3644)
!3646 = !DILocation(line: 221, column: 14, scope: !3644)
!3647 = !DILocation(line: 221, column: 14, scope: !3633)
!3648 = !DILocation(line: 223, column: 23, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3644, file: !147, line: 222, column: 5)
!3650 = !DILocation(line: 223, column: 7, scope: !3649)
!3651 = !DILocation(line: 224, column: 5, scope: !3649)
!3652 = !DILocation(line: 225, column: 30, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3644, file: !147, line: 225, column: 14)
!3654 = !DILocation(line: 225, column: 38, scope: !3653)
!3655 = !DILocation(line: 225, column: 14, scope: !3653)
!3656 = !DILocation(line: 225, column: 14, scope: !3644)
!3657 = !DILocation(line: 227, column: 23, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3653, file: !147, line: 226, column: 5)
!3659 = !DILocation(line: 227, column: 7, scope: !3658)
!3660 = !DILocation(line: 228, column: 5, scope: !3658)
!3661 = !DILocation(line: 229, column: 30, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3653, file: !147, line: 229, column: 14)
!3663 = !DILocation(line: 229, column: 38, scope: !3662)
!3664 = !DILocation(line: 229, column: 14, scope: !3662)
!3665 = !DILocation(line: 229, column: 14, scope: !3653)
!3666 = !DILocation(line: 231, column: 19, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3662, file: !147, line: 230, column: 5)
!3668 = !DILocation(line: 231, column: 7, scope: !3667)
!3669 = !DILocation(line: 232, column: 5, scope: !3667)
!3670 = !DILocation(line: 233, column: 14, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3662, file: !147, line: 233, column: 14)
!3672 = !DILocation(line: 233, column: 37, scope: !3671)
!3673 = !DILocation(line: 234, column: 30, scope: !3671)
!3674 = !DILocation(line: 234, column: 38, scope: !3671)
!3675 = !DILocation(line: 234, column: 14, scope: !3671)
!3676 = !DILocation(line: 233, column: 14, scope: !3662)
!3677 = !DILocation(line: 236, column: 19, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3671, file: !147, line: 235, column: 5)
!3679 = !DILocation(line: 236, column: 7, scope: !3678)
!3680 = !DILocation(line: 237, column: 5, scope: !3678)
!3681 = !DILocation(line: 238, column: 30, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3671, file: !147, line: 238, column: 14)
!3683 = !DILocation(line: 238, column: 38, scope: !3682)
!3684 = !DILocation(line: 238, column: 14, scope: !3682)
!3685 = !DILocation(line: 238, column: 14, scope: !3671)
!3686 = !DILocation(line: 240, column: 19, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3682, file: !147, line: 239, column: 5)
!3688 = !DILocation(line: 240, column: 7, scope: !3687)
!3689 = !DILocation(line: 241, column: 5, scope: !3687)
!3690 = !DILocation(line: 242, column: 14, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3682, file: !147, line: 242, column: 14)
!3692 = !DILocation(line: 242, column: 34, scope: !3691)
!3693 = !DILocation(line: 243, column: 15, scope: !3691)
!3694 = !DILocation(line: 243, column: 23, scope: !3691)
!3695 = !DILocation(line: 243, column: 32, scope: !3691)
!3696 = !DILocation(line: 244, column: 30, scope: !3691)
!3697 = !DILocation(line: 244, column: 38, scope: !3691)
!3698 = !DILocation(line: 244, column: 14, scope: !3691)
!3699 = !DILocation(line: 242, column: 14, scope: !3682)
!3700 = !DILocation(line: 246, column: 19, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3691, file: !147, line: 245, column: 5)
!3702 = !DILocation(line: 246, column: 7, scope: !3701)
!3703 = !DILocation(line: 247, column: 5, scope: !3701)
!3704 = !DILocation(line: 248, column: 14, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3691, file: !147, line: 248, column: 14)
!3706 = !DILocation(line: 248, column: 35, scope: !3705)
!3707 = !DILocation(line: 249, column: 15, scope: !3705)
!3708 = !DILocation(line: 249, column: 42, scope: !3705)
!3709 = !DILocation(line: 249, column: 46, scope: !3705)
!3710 = !DILocation(line: 249, column: 54, scope: !3705)
!3711 = !DILocation(line: 249, column: 68, scope: !3705)
!3712 = !DILocation(line: 250, column: 30, scope: !3705)
!3713 = !DILocation(line: 250, column: 38, scope: !3705)
!3714 = !DILocation(line: 250, column: 14, scope: !3705)
!3715 = !DILocation(line: 248, column: 14, scope: !3691)
!3716 = !DILocation(line: 252, column: 19, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3705, file: !147, line: 251, column: 5)
!3718 = !DILocation(line: 252, column: 7, scope: !3717)
!3719 = !DILocation(line: 253, column: 5, scope: !3717)
!3720 = !DILocation(line: 254, column: 14, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3705, file: !147, line: 254, column: 14)
!3722 = !DILocation(line: 254, column: 35, scope: !3721)
!3723 = !DILocation(line: 255, column: 15, scope: !3721)
!3724 = !DILocation(line: 255, column: 47, scope: !3721)
!3725 = !DILocation(line: 255, column: 51, scope: !3721)
!3726 = !DILocation(line: 255, column: 59, scope: !3721)
!3727 = !DILocation(line: 255, column: 73, scope: !3721)
!3728 = !DILocation(line: 256, column: 31, scope: !3721)
!3729 = !DILocation(line: 256, column: 39, scope: !3721)
!3730 = !DILocation(line: 256, column: 15, scope: !3721)
!3731 = !DILocation(line: 256, column: 59, scope: !3721)
!3732 = !DILocation(line: 257, column: 31, scope: !3721)
!3733 = !DILocation(line: 257, column: 39, scope: !3721)
!3734 = !DILocation(line: 257, column: 15, scope: !3721)
!3735 = !DILocation(line: 254, column: 14, scope: !3705)
!3736 = !DILocation(line: 259, column: 18, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3721, file: !147, line: 258, column: 5)
!3738 = !DILocation(line: 259, column: 7, scope: !3737)
!3739 = !DILocation(line: 260, column: 5, scope: !3737)
!3740 = !DILocation(line: 261, column: 14, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3721, file: !147, line: 261, column: 14)
!3742 = !DILocation(line: 261, column: 35, scope: !3741)
!3743 = !DILocation(line: 262, column: 15, scope: !3741)
!3744 = !DILocation(line: 262, column: 47, scope: !3741)
!3745 = !DILocation(line: 262, column: 51, scope: !3741)
!3746 = !DILocation(line: 262, column: 59, scope: !3741)
!3747 = !DILocation(line: 262, column: 73, scope: !3741)
!3748 = !DILocation(line: 263, column: 31, scope: !3741)
!3749 = !DILocation(line: 263, column: 39, scope: !3741)
!3750 = !DILocation(line: 263, column: 15, scope: !3741)
!3751 = !DILocation(line: 263, column: 59, scope: !3741)
!3752 = !DILocation(line: 264, column: 31, scope: !3741)
!3753 = !DILocation(line: 264, column: 39, scope: !3741)
!3754 = !DILocation(line: 264, column: 15, scope: !3741)
!3755 = !DILocation(line: 261, column: 14, scope: !3721)
!3756 = !DILocation(line: 266, column: 18, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3741, file: !147, line: 265, column: 5)
!3758 = !DILocation(line: 266, column: 7, scope: !3757)
!3759 = !DILocation(line: 267, column: 5, scope: !3757)
!3760 = !DILocation(line: 268, column: 14, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3741, file: !147, line: 268, column: 14)
!3762 = !DILocation(line: 268, column: 35, scope: !3761)
!3763 = !DILocation(line: 269, column: 15, scope: !3761)
!3764 = !DILocation(line: 269, column: 47, scope: !3761)
!3765 = !DILocation(line: 269, column: 51, scope: !3761)
!3766 = !DILocation(line: 269, column: 59, scope: !3761)
!3767 = !DILocation(line: 269, column: 73, scope: !3761)
!3768 = !DILocation(line: 270, column: 30, scope: !3761)
!3769 = !DILocation(line: 270, column: 38, scope: !3761)
!3770 = !DILocation(line: 270, column: 14, scope: !3761)
!3771 = !DILocation(line: 268, column: 14, scope: !3741)
!3772 = !DILocation(line: 272, column: 19, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3761, file: !147, line: 271, column: 5)
!3774 = !DILocation(line: 272, column: 7, scope: !3773)
!3775 = !DILocation(line: 273, column: 5, scope: !3773)
!3776 = !DILocation(line: 274, column: 30, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3761, file: !147, line: 274, column: 14)
!3778 = !DILocation(line: 274, column: 38, scope: !3777)
!3779 = !DILocation(line: 274, column: 14, scope: !3777)
!3780 = !DILocation(line: 274, column: 14, scope: !3761)
!3781 = !DILocation(line: 276, column: 19, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3777, file: !147, line: 275, column: 5)
!3783 = !DILocation(line: 276, column: 7, scope: !3782)
!3784 = !DILocation(line: 277, column: 5, scope: !3782)
!3785 = !DILocation(line: 278, column: 14, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3777, file: !147, line: 278, column: 14)
!3787 = !DILocation(line: 278, column: 35, scope: !3786)
!3788 = !DILocation(line: 279, column: 15, scope: !3786)
!3789 = !DILocation(line: 279, column: 47, scope: !3786)
!3790 = !DILocation(line: 279, column: 51, scope: !3786)
!3791 = !DILocation(line: 279, column: 59, scope: !3786)
!3792 = !DILocation(line: 279, column: 73, scope: !3786)
!3793 = !DILocation(line: 280, column: 30, scope: !3786)
!3794 = !DILocation(line: 280, column: 38, scope: !3786)
!3795 = !DILocation(line: 280, column: 14, scope: !3786)
!3796 = !DILocation(line: 278, column: 14, scope: !3777)
!3797 = !DILocation(line: 282, column: 19, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3786, file: !147, line: 281, column: 5)
!3799 = !DILocation(line: 282, column: 7, scope: !3798)
!3800 = !DILocation(line: 283, column: 5, scope: !3798)
!3801 = !DILocation(line: 284, column: 14, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3786, file: !147, line: 284, column: 14)
!3803 = !DILocation(line: 284, column: 35, scope: !3802)
!3804 = !DILocation(line: 285, column: 15, scope: !3802)
!3805 = !DILocation(line: 285, column: 47, scope: !3802)
!3806 = !DILocation(line: 285, column: 51, scope: !3802)
!3807 = !DILocation(line: 285, column: 59, scope: !3802)
!3808 = !DILocation(line: 285, column: 73, scope: !3802)
!3809 = !DILocation(line: 286, column: 30, scope: !3802)
!3810 = !DILocation(line: 286, column: 38, scope: !3802)
!3811 = !DILocation(line: 286, column: 14, scope: !3802)
!3812 = !DILocation(line: 284, column: 14, scope: !3786)
!3813 = !DILocation(line: 288, column: 19, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3802, file: !147, line: 287, column: 5)
!3815 = !DILocation(line: 288, column: 7, scope: !3814)
!3816 = !DILocation(line: 289, column: 5, scope: !3814)
!3817 = !DILocation(line: 290, column: 14, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3802, file: !147, line: 290, column: 14)
!3819 = !DILocation(line: 290, column: 37, scope: !3818)
!3820 = !DILocation(line: 291, column: 30, scope: !3818)
!3821 = !DILocation(line: 291, column: 38, scope: !3818)
!3822 = !DILocation(line: 291, column: 14, scope: !3818)
!3823 = !DILocation(line: 290, column: 14, scope: !3802)
!3824 = !DILocation(line: 293, column: 19, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3818, file: !147, line: 292, column: 5)
!3826 = !DILocation(line: 293, column: 7, scope: !3825)
!3827 = !DILocation(line: 294, column: 5, scope: !3825)
!3828 = !DILocation(line: 295, column: 30, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3818, file: !147, line: 295, column: 14)
!3830 = !DILocation(line: 295, column: 38, scope: !3829)
!3831 = !DILocation(line: 295, column: 14, scope: !3829)
!3832 = !DILocation(line: 295, column: 14, scope: !3818)
!3833 = !DILocation(line: 297, column: 19, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !147, line: 296, column: 5)
!3835 = !DILocation(line: 297, column: 7, scope: !3834)
!3836 = !DILocation(line: 298, column: 5, scope: !3834)
!3837 = !DILocation(line: 299, column: 15, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3829, file: !147, line: 299, column: 14)
!3839 = !DILocation(line: 299, column: 23, scope: !3838)
!3840 = !DILocation(line: 299, column: 36, scope: !3838)
!3841 = !DILocation(line: 300, column: 30, scope: !3838)
!3842 = !DILocation(line: 300, column: 38, scope: !3838)
!3843 = !DILocation(line: 300, column: 14, scope: !3838)
!3844 = !DILocation(line: 299, column: 14, scope: !3829)
!3845 = !DILocation(line: 302, column: 19, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3838, file: !147, line: 301, column: 5)
!3847 = !DILocation(line: 302, column: 7, scope: !3846)
!3848 = !DILocation(line: 303, column: 5, scope: !3846)
!3849 = !DILocation(line: 307, column: 30, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3838, file: !147, line: 307, column: 14)
!3851 = !DILocation(line: 307, column: 38, scope: !3850)
!3852 = !DILocation(line: 307, column: 14, scope: !3850)
!3853 = !DILocation(line: 307, column: 59, scope: !3850)
!3854 = !DILocation(line: 308, column: 30, scope: !3850)
!3855 = !DILocation(line: 308, column: 38, scope: !3850)
!3856 = !DILocation(line: 308, column: 14, scope: !3850)
!3857 = !DILocation(line: 307, column: 14, scope: !3838)
!3858 = !DILocation(line: 310, column: 23, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3850, file: !147, line: 309, column: 5)
!3860 = !DILocation(line: 310, column: 7, scope: !3859)
!3861 = !DILocation(line: 311, column: 5, scope: !3859)
!3862 = !DILocation(line: 312, column: 14, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3850, file: !147, line: 312, column: 14)
!3864 = !DILocation(line: 312, column: 35, scope: !3863)
!3865 = !DILocation(line: 313, column: 15, scope: !3863)
!3866 = !DILocation(line: 313, column: 47, scope: !3863)
!3867 = !DILocation(line: 313, column: 51, scope: !3863)
!3868 = !DILocation(line: 313, column: 59, scope: !3863)
!3869 = !DILocation(line: 313, column: 73, scope: !3863)
!3870 = !DILocation(line: 314, column: 30, scope: !3863)
!3871 = !DILocation(line: 314, column: 38, scope: !3863)
!3872 = !DILocation(line: 314, column: 14, scope: !3863)
!3873 = !DILocation(line: 312, column: 14, scope: !3850)
!3874 = !DILocation(line: 316, column: 19, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3863, file: !147, line: 315, column: 5)
!3876 = !DILocation(line: 316, column: 7, scope: !3875)
!3877 = !DILocation(line: 317, column: 5, scope: !3875)
!3878 = !DILocation(line: 318, column: 30, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3863, file: !147, line: 318, column: 14)
!3880 = !DILocation(line: 318, column: 38, scope: !3879)
!3881 = !DILocation(line: 318, column: 14, scope: !3879)
!3882 = !DILocation(line: 318, column: 14, scope: !3863)
!3883 = !DILocation(line: 320, column: 19, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3879, file: !147, line: 319, column: 5)
!3885 = !DILocation(line: 320, column: 7, scope: !3884)
!3886 = !DILocation(line: 321, column: 5, scope: !3884)
!3887 = !DILocation(line: 322, column: 14, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3879, file: !147, line: 322, column: 14)
!3889 = !DILocation(line: 322, column: 34, scope: !3888)
!3890 = !DILocation(line: 323, column: 30, scope: !3888)
!3891 = !DILocation(line: 323, column: 38, scope: !3888)
!3892 = !DILocation(line: 323, column: 14, scope: !3888)
!3893 = !DILocation(line: 322, column: 14, scope: !3879)
!3894 = !DILocation(line: 325, column: 19, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3888, file: !147, line: 324, column: 5)
!3896 = !DILocation(line: 325, column: 7, scope: !3895)
!3897 = !DILocation(line: 326, column: 5, scope: !3895)
!3898 = !DILocation(line: 327, column: 30, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3888, file: !147, line: 327, column: 14)
!3900 = !DILocation(line: 327, column: 38, scope: !3899)
!3901 = !DILocation(line: 327, column: 14, scope: !3899)
!3902 = !DILocation(line: 327, column: 14, scope: !3888)
!3903 = !DILocation(line: 329, column: 18, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3899, file: !147, line: 328, column: 5)
!3905 = !DILocation(line: 329, column: 26, scope: !3904)
!3906 = !DILocation(line: 329, column: 7, scope: !3904)
!3907 = !DILocation(line: 330, column: 27, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !147, line: 330, column: 11)
!3909 = !DILocation(line: 330, column: 35, scope: !3908)
!3910 = !DILocation(line: 330, column: 11, scope: !3908)
!3911 = !DILocation(line: 330, column: 11, scope: !3904)
!3912 = !DILocation(line: 332, column: 25, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3908, file: !147, line: 331, column: 7)
!3914 = !DILocation(line: 332, column: 9, scope: !3913)
!3915 = !DILocation(line: 333, column: 7, scope: !3913)
!3916 = !DILocation(line: 336, column: 25, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3908, file: !147, line: 335, column: 7)
!3918 = !DILocation(line: 336, column: 9, scope: !3917)
!3919 = !DILocation(line: 338, column: 5, scope: !3904)
!3920 = !DILocation(line: 339, column: 30, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3899, file: !147, line: 339, column: 14)
!3922 = !DILocation(line: 339, column: 38, scope: !3921)
!3923 = !DILocation(line: 339, column: 14, scope: !3921)
!3924 = !DILocation(line: 339, column: 14, scope: !3899)
!3925 = !DILocation(line: 341, column: 18, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3921, file: !147, line: 340, column: 5)
!3927 = !DILocation(line: 341, column: 26, scope: !3926)
!3928 = !DILocation(line: 341, column: 7, scope: !3926)
!3929 = !DILocation(line: 342, column: 27, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3926, file: !147, line: 342, column: 11)
!3931 = !DILocation(line: 342, column: 35, scope: !3930)
!3932 = !DILocation(line: 342, column: 11, scope: !3930)
!3933 = !DILocation(line: 342, column: 11, scope: !3926)
!3934 = !DILocation(line: 344, column: 25, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3930, file: !147, line: 343, column: 7)
!3936 = !DILocation(line: 344, column: 9, scope: !3935)
!3937 = !DILocation(line: 345, column: 7, scope: !3935)
!3938 = !DILocation(line: 348, column: 25, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3930, file: !147, line: 347, column: 7)
!3940 = !DILocation(line: 348, column: 9, scope: !3939)
!3941 = !DILocation(line: 350, column: 5, scope: !3926)
!3942 = !DILocation(line: 351, column: 14, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3921, file: !147, line: 351, column: 14)
!3944 = !DILocation(line: 351, column: 35, scope: !3943)
!3945 = !DILocation(line: 352, column: 15, scope: !3943)
!3946 = !DILocation(line: 352, column: 42, scope: !3943)
!3947 = !DILocation(line: 352, column: 46, scope: !3943)
!3948 = !DILocation(line: 352, column: 54, scope: !3943)
!3949 = !DILocation(line: 352, column: 68, scope: !3943)
!3950 = !DILocation(line: 353, column: 30, scope: !3943)
!3951 = !DILocation(line: 353, column: 38, scope: !3943)
!3952 = !DILocation(line: 353, column: 14, scope: !3943)
!3953 = !DILocation(line: 351, column: 14, scope: !3921)
!3954 = !DILocation(line: 355, column: 19, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3943, file: !147, line: 354, column: 5)
!3956 = !DILocation(line: 355, column: 7, scope: !3955)
!3957 = !DILocation(line: 356, column: 5, scope: !3955)
!3958 = !DILocation(line: 357, column: 30, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3943, file: !147, line: 357, column: 14)
!3960 = !DILocation(line: 357, column: 38, scope: !3959)
!3961 = !DILocation(line: 357, column: 14, scope: !3959)
!3962 = !DILocation(line: 357, column: 14, scope: !3943)
!3963 = !DILocation(line: 359, column: 23, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3959, file: !147, line: 358, column: 5)
!3965 = !DILocation(line: 359, column: 7, scope: !3964)
!3966 = !DILocation(line: 360, column: 5, scope: !3964)
!3967 = !DILocation(line: 361, column: 30, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3959, file: !147, line: 361, column: 14)
!3969 = !DILocation(line: 361, column: 38, scope: !3968)
!3970 = !DILocation(line: 361, column: 14, scope: !3968)
!3971 = !DILocation(line: 361, column: 14, scope: !3959)
!3972 = !DILocation(line: 363, column: 23, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3968, file: !147, line: 362, column: 5)
!3974 = !DILocation(line: 363, column: 7, scope: !3973)
!3975 = !DILocation(line: 364, column: 5, scope: !3973)
!3976 = !DILocation(line: 365, column: 30, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3968, file: !147, line: 365, column: 14)
!3978 = !DILocation(line: 365, column: 38, scope: !3977)
!3979 = !DILocation(line: 365, column: 14, scope: !3977)
!3980 = !DILocation(line: 365, column: 14, scope: !3968)
!3981 = !DILocation(line: 367, column: 23, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !147, line: 366, column: 5)
!3983 = !DILocation(line: 367, column: 7, scope: !3982)
!3984 = !DILocation(line: 368, column: 5, scope: !3982)
!3985 = !DILocation(line: 369, column: 30, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3977, file: !147, line: 369, column: 14)
!3987 = !DILocation(line: 369, column: 38, scope: !3986)
!3988 = !DILocation(line: 369, column: 14, scope: !3986)
!3989 = !DILocation(line: 369, column: 14, scope: !3977)
!3990 = !DILocation(line: 371, column: 23, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3986, file: !147, line: 370, column: 5)
!3992 = !DILocation(line: 371, column: 7, scope: !3991)
!3993 = !DILocation(line: 372, column: 5, scope: !3991)
!3994 = !DILocation(line: 373, column: 30, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3986, file: !147, line: 373, column: 14)
!3996 = !DILocation(line: 373, column: 38, scope: !3995)
!3997 = !DILocation(line: 373, column: 14, scope: !3995)
!3998 = !DILocation(line: 373, column: 14, scope: !3986)
!3999 = !DILocation(line: 375, column: 19, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3995, file: !147, line: 374, column: 5)
!4001 = !DILocation(line: 375, column: 7, scope: !4000)
!4002 = !DILocation(line: 376, column: 5, scope: !4000)
!4003 = !DILocation(line: 377, column: 30, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3995, file: !147, line: 377, column: 14)
!4005 = !DILocation(line: 377, column: 38, scope: !4004)
!4006 = !DILocation(line: 377, column: 14, scope: !4004)
!4007 = !DILocation(line: 377, column: 14, scope: !3995)
!4008 = !DILocation(line: 379, column: 19, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4004, file: !147, line: 378, column: 5)
!4010 = !DILocation(line: 379, column: 7, scope: !4009)
!4011 = !DILocation(line: 380, column: 5, scope: !4009)
!4012 = !DILocation(line: 381, column: 30, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4004, file: !147, line: 381, column: 14)
!4014 = !DILocation(line: 381, column: 38, scope: !4013)
!4015 = !DILocation(line: 381, column: 14, scope: !4013)
!4016 = !DILocation(line: 381, column: 59, scope: !4013)
!4017 = !DILocation(line: 382, column: 27, scope: !4013)
!4018 = !DILocation(line: 382, column: 35, scope: !4013)
!4019 = !DILocation(line: 382, column: 14, scope: !4013)
!4020 = !DILocation(line: 381, column: 14, scope: !4004)
!4021 = !DILocation(line: 384, column: 19, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4013, file: !147, line: 383, column: 5)
!4023 = !DILocation(line: 384, column: 7, scope: !4022)
!4024 = !DILocation(line: 385, column: 5, scope: !4022)
!4025 = !DILocation(line: 386, column: 14, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4013, file: !147, line: 386, column: 14)
!4027 = !DILocation(line: 386, column: 37, scope: !4026)
!4028 = !DILocation(line: 387, column: 30, scope: !4026)
!4029 = !DILocation(line: 387, column: 38, scope: !4026)
!4030 = !DILocation(line: 387, column: 14, scope: !4026)
!4031 = !DILocation(line: 386, column: 14, scope: !4013)
!4032 = !DILocation(line: 389, column: 24, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4026, file: !147, line: 388, column: 5)
!4034 = !DILocation(line: 389, column: 7, scope: !4033)
!4035 = !DILocation(line: 390, column: 5, scope: !4033)
!4036 = !DILocation(line: 391, column: 14, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4026, file: !147, line: 391, column: 14)
!4038 = !DILocation(line: 391, column: 33, scope: !4037)
!4039 = !DILocation(line: 391, column: 52, scope: !4037)
!4040 = !DILocation(line: 391, column: 60, scope: !4037)
!4041 = !DILocation(line: 391, column: 36, scope: !4037)
!4042 = !DILocation(line: 391, column: 14, scope: !4026)
!4043 = !DILocation(line: 393, column: 19, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4037, file: !147, line: 392, column: 5)
!4045 = !DILocation(line: 393, column: 7, scope: !4044)
!4046 = !DILocation(line: 394, column: 5, scope: !4044)
!4047 = !DILocation(line: 395, column: 14, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4037, file: !147, line: 395, column: 14)
!4049 = !DILocation(line: 395, column: 33, scope: !4048)
!4050 = !DILocation(line: 395, column: 52, scope: !4048)
!4051 = !DILocation(line: 395, column: 60, scope: !4048)
!4052 = !DILocation(line: 395, column: 36, scope: !4048)
!4053 = !DILocation(line: 395, column: 14, scope: !4037)
!4054 = !DILocation(line: 397, column: 19, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4048, file: !147, line: 396, column: 5)
!4056 = !DILocation(line: 397, column: 7, scope: !4055)
!4057 = !DILocation(line: 398, column: 5, scope: !4055)
!4058 = !DILocation(line: 399, column: 30, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4048, file: !147, line: 399, column: 14)
!4060 = !DILocation(line: 399, column: 38, scope: !4059)
!4061 = !DILocation(line: 399, column: 14, scope: !4059)
!4062 = !DILocation(line: 399, column: 14, scope: !4048)
!4063 = !DILocation(line: 401, column: 29, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4059, file: !147, line: 400, column: 5)
!4065 = !DILocation(line: 401, column: 7, scope: !4064)
!4066 = !DILocation(line: 402, column: 5, scope: !4064)
!4067 = !DILocation(line: 403, column: 30, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4059, file: !147, line: 403, column: 14)
!4069 = !DILocation(line: 403, column: 38, scope: !4068)
!4070 = !DILocation(line: 403, column: 14, scope: !4068)
!4071 = !DILocation(line: 403, column: 14, scope: !4059)
!4072 = !DILocation(line: 405, column: 29, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4068, file: !147, line: 404, column: 5)
!4074 = !DILocation(line: 405, column: 7, scope: !4073)
!4075 = !DILocation(line: 406, column: 5, scope: !4073)
!4076 = !DILocation(line: 407, column: 30, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4068, file: !147, line: 407, column: 14)
!4078 = !DILocation(line: 407, column: 38, scope: !4077)
!4079 = !DILocation(line: 407, column: 14, scope: !4077)
!4080 = !DILocation(line: 407, column: 59, scope: !4077)
!4081 = !DILocation(line: 408, column: 30, scope: !4077)
!4082 = !DILocation(line: 408, column: 38, scope: !4077)
!4083 = !DILocation(line: 408, column: 14, scope: !4077)
!4084 = !DILocation(line: 408, column: 59, scope: !4077)
!4085 = !DILocation(line: 409, column: 30, scope: !4077)
!4086 = !DILocation(line: 409, column: 38, scope: !4077)
!4087 = !DILocation(line: 409, column: 14, scope: !4077)
!4088 = !DILocation(line: 409, column: 59, scope: !4077)
!4089 = !DILocation(line: 410, column: 30, scope: !4077)
!4090 = !DILocation(line: 410, column: 38, scope: !4077)
!4091 = !DILocation(line: 410, column: 14, scope: !4077)
!4092 = !DILocation(line: 410, column: 58, scope: !4077)
!4093 = !DILocation(line: 411, column: 30, scope: !4077)
!4094 = !DILocation(line: 411, column: 38, scope: !4077)
!4095 = !DILocation(line: 411, column: 14, scope: !4077)
!4096 = !DILocation(line: 411, column: 59, scope: !4077)
!4097 = !DILocation(line: 412, column: 30, scope: !4077)
!4098 = !DILocation(line: 412, column: 38, scope: !4077)
!4099 = !DILocation(line: 412, column: 14, scope: !4077)
!4100 = !DILocation(line: 412, column: 58, scope: !4077)
!4101 = !DILocation(line: 413, column: 30, scope: !4077)
!4102 = !DILocation(line: 413, column: 38, scope: !4077)
!4103 = !DILocation(line: 413, column: 14, scope: !4077)
!4104 = !DILocation(line: 413, column: 59, scope: !4077)
!4105 = !DILocation(line: 414, column: 30, scope: !4077)
!4106 = !DILocation(line: 414, column: 38, scope: !4077)
!4107 = !DILocation(line: 414, column: 14, scope: !4077)
!4108 = !DILocation(line: 414, column: 59, scope: !4077)
!4109 = !DILocation(line: 415, column: 30, scope: !4077)
!4110 = !DILocation(line: 415, column: 38, scope: !4077)
!4111 = !DILocation(line: 415, column: 14, scope: !4077)
!4112 = !DILocation(line: 415, column: 59, scope: !4077)
!4113 = !DILocation(line: 416, column: 30, scope: !4077)
!4114 = !DILocation(line: 416, column: 38, scope: !4077)
!4115 = !DILocation(line: 416, column: 14, scope: !4077)
!4116 = !DILocation(line: 416, column: 59, scope: !4077)
!4117 = !DILocation(line: 417, column: 30, scope: !4077)
!4118 = !DILocation(line: 417, column: 38, scope: !4077)
!4119 = !DILocation(line: 417, column: 14, scope: !4077)
!4120 = !DILocation(line: 417, column: 59, scope: !4077)
!4121 = !DILocation(line: 418, column: 30, scope: !4077)
!4122 = !DILocation(line: 418, column: 38, scope: !4077)
!4123 = !DILocation(line: 418, column: 14, scope: !4077)
!4124 = !DILocation(line: 418, column: 59, scope: !4077)
!4125 = !DILocation(line: 419, column: 30, scope: !4077)
!4126 = !DILocation(line: 419, column: 38, scope: !4077)
!4127 = !DILocation(line: 419, column: 14, scope: !4077)
!4128 = !DILocation(line: 419, column: 59, scope: !4077)
!4129 = !DILocation(line: 420, column: 30, scope: !4077)
!4130 = !DILocation(line: 420, column: 38, scope: !4077)
!4131 = !DILocation(line: 420, column: 14, scope: !4077)
!4132 = !DILocation(line: 420, column: 59, scope: !4077)
!4133 = !DILocation(line: 421, column: 30, scope: !4077)
!4134 = !DILocation(line: 421, column: 38, scope: !4077)
!4135 = !DILocation(line: 421, column: 14, scope: !4077)
!4136 = !DILocation(line: 421, column: 59, scope: !4077)
!4137 = !DILocation(line: 422, column: 30, scope: !4077)
!4138 = !DILocation(line: 422, column: 38, scope: !4077)
!4139 = !DILocation(line: 422, column: 14, scope: !4077)
!4140 = !DILocation(line: 422, column: 59, scope: !4077)
!4141 = !DILocation(line: 423, column: 30, scope: !4077)
!4142 = !DILocation(line: 423, column: 38, scope: !4077)
!4143 = !DILocation(line: 423, column: 14, scope: !4077)
!4144 = !DILocation(line: 423, column: 59, scope: !4077)
!4145 = !DILocation(line: 424, column: 30, scope: !4077)
!4146 = !DILocation(line: 424, column: 38, scope: !4077)
!4147 = !DILocation(line: 424, column: 14, scope: !4077)
!4148 = !DILocation(line: 424, column: 59, scope: !4077)
!4149 = !DILocation(line: 425, column: 30, scope: !4077)
!4150 = !DILocation(line: 425, column: 38, scope: !4077)
!4151 = !DILocation(line: 425, column: 14, scope: !4077)
!4152 = !DILocation(line: 425, column: 59, scope: !4077)
!4153 = !DILocation(line: 426, column: 30, scope: !4077)
!4154 = !DILocation(line: 426, column: 38, scope: !4077)
!4155 = !DILocation(line: 426, column: 14, scope: !4077)
!4156 = !DILocation(line: 426, column: 59, scope: !4077)
!4157 = !DILocation(line: 427, column: 30, scope: !4077)
!4158 = !DILocation(line: 427, column: 38, scope: !4077)
!4159 = !DILocation(line: 427, column: 14, scope: !4077)
!4160 = !DILocation(line: 427, column: 59, scope: !4077)
!4161 = !DILocation(line: 428, column: 30, scope: !4077)
!4162 = !DILocation(line: 428, column: 38, scope: !4077)
!4163 = !DILocation(line: 428, column: 14, scope: !4077)
!4164 = !DILocation(line: 428, column: 59, scope: !4077)
!4165 = !DILocation(line: 429, column: 30, scope: !4077)
!4166 = !DILocation(line: 429, column: 38, scope: !4077)
!4167 = !DILocation(line: 429, column: 14, scope: !4077)
!4168 = !DILocation(line: 429, column: 59, scope: !4077)
!4169 = !DILocation(line: 430, column: 30, scope: !4077)
!4170 = !DILocation(line: 430, column: 38, scope: !4077)
!4171 = !DILocation(line: 430, column: 14, scope: !4077)
!4172 = !DILocation(line: 430, column: 59, scope: !4077)
!4173 = !DILocation(line: 431, column: 30, scope: !4077)
!4174 = !DILocation(line: 431, column: 38, scope: !4077)
!4175 = !DILocation(line: 431, column: 14, scope: !4077)
!4176 = !DILocation(line: 431, column: 59, scope: !4077)
!4177 = !DILocation(line: 432, column: 30, scope: !4077)
!4178 = !DILocation(line: 432, column: 38, scope: !4077)
!4179 = !DILocation(line: 432, column: 14, scope: !4077)
!4180 = !DILocation(line: 432, column: 59, scope: !4077)
!4181 = !DILocation(line: 433, column: 30, scope: !4077)
!4182 = !DILocation(line: 433, column: 38, scope: !4077)
!4183 = !DILocation(line: 433, column: 14, scope: !4077)
!4184 = !DILocation(line: 407, column: 14, scope: !4068)
!4185 = !DILocation(line: 435, column: 23, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4077, file: !147, line: 434, column: 5)
!4187 = !DILocation(line: 435, column: 7, scope: !4186)
!4188 = !DILocation(line: 436, column: 5, scope: !4186)
!4189 = !DILocation(line: 437, column: 27, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4077, file: !147, line: 437, column: 14)
!4191 = !DILocation(line: 437, column: 35, scope: !4190)
!4192 = !DILocation(line: 437, column: 14, scope: !4190)
!4193 = !DILocation(line: 437, column: 48, scope: !4190)
!4194 = !DILocation(line: 438, column: 27, scope: !4190)
!4195 = !DILocation(line: 438, column: 35, scope: !4190)
!4196 = !DILocation(line: 438, column: 14, scope: !4190)
!4197 = !DILocation(line: 437, column: 14, scope: !4077)
!4198 = !DILocation(line: 441, column: 5, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4190, file: !147, line: 439, column: 5)
!4200 = !DILocation(line: 442, column: 30, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4190, file: !147, line: 442, column: 14)
!4202 = !DILocation(line: 442, column: 38, scope: !4201)
!4203 = !DILocation(line: 442, column: 14, scope: !4201)
!4204 = !DILocation(line: 442, column: 58, scope: !4201)
!4205 = !DILocation(line: 443, column: 30, scope: !4201)
!4206 = !DILocation(line: 443, column: 38, scope: !4201)
!4207 = !DILocation(line: 443, column: 14, scope: !4201)
!4208 = !DILocation(line: 443, column: 59, scope: !4201)
!4209 = !DILocation(line: 444, column: 30, scope: !4201)
!4210 = !DILocation(line: 444, column: 38, scope: !4201)
!4211 = !DILocation(line: 444, column: 14, scope: !4201)
!4212 = !DILocation(line: 444, column: 59, scope: !4201)
!4213 = !DILocation(line: 445, column: 30, scope: !4201)
!4214 = !DILocation(line: 445, column: 38, scope: !4201)
!4215 = !DILocation(line: 445, column: 14, scope: !4201)
!4216 = !DILocation(line: 445, column: 62, scope: !4201)
!4217 = !DILocation(line: 446, column: 30, scope: !4201)
!4218 = !DILocation(line: 446, column: 38, scope: !4201)
!4219 = !DILocation(line: 446, column: 14, scope: !4201)
!4220 = !DILocation(line: 442, column: 14, scope: !4190)
!4221 = !DILocation(line: 448, column: 28, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4201, file: !147, line: 447, column: 5)
!4223 = !DILocation(line: 448, column: 7, scope: !4222)
!4224 = !DILocation(line: 450, column: 5, scope: !4222)
!4225 = !DILocation(line: 453, column: 23, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4201, file: !147, line: 452, column: 5)
!4227 = !DILocation(line: 453, column: 7, scope: !4226)
!4228 = !DILocation(line: 455, column: 31, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !3458, file: !147, line: 455, column: 9)
!4230 = !DILocation(line: 455, column: 9, scope: !4229)
!4231 = !DILocation(line: 455, column: 9, scope: !3458)
!4232 = !DILocation(line: 457, column: 22, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4229, file: !147, line: 456, column: 5)
!4234 = !DILocation(line: 457, column: 7, scope: !4233)
!4235 = !DILocation(line: 458, column: 5, scope: !4233)
!4236 = !DILocation(line: 459, column: 9, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !3458, file: !147, line: 459, column: 9)
!4238 = !DILocation(line: 459, column: 17, scope: !4237)
!4239 = !DILocation(line: 459, column: 9, scope: !3458)
!4240 = !DILocation(line: 461, column: 28, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !147, line: 460, column: 5)
!4242 = !DILocation(line: 461, column: 7, scope: !4241)
!4243 = !DILocation(line: 463, column: 5, scope: !4241)
!4244 = distinct !{!4244, !3456, !4245}
!4245 = !DILocation(line: 464, column: 3, scope: !146)
!4246 = !DILocation(line: 465, column: 1, scope: !146)
!4247 = distinct !DISubprogram(name: "handle_http", scope: !147, file: !147, line: 1972, type: !148, scopeLine: 1973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4248 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4247, file: !147, line: 1972, type: !150)
!4249 = !DILocation(line: 1972, column: 33, scope: !4247)
!4250 = !DILocation(line: 1979, column: 8, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !147, line: 1979, column: 7)
!4252 = !DILocation(line: 1979, column: 7, scope: !4247)
!4253 = !DILocation(line: 1981, column: 5, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4251, file: !147, line: 1980, column: 3)
!4255 = !DILocation(line: 1982, column: 3, scope: !4254)
!4256 = !DILocation(line: 1984, column: 3, scope: !4247)
!4257 = distinct !{!4257, !4256, !4258}
!4258 = !DILocation(line: 1990, column: 44, scope: !4247)
!4259 = !DILocation(line: 1986, column: 31, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4247, file: !147, line: 1985, column: 3)
!4261 = !DILocation(line: 1986, column: 40, scope: !4260)
!4262 = !DILocation(line: 1986, column: 48, scope: !4260)
!4263 = !DILocation(line: 1987, column: 32, scope: !4260)
!4264 = !DILocation(line: 1987, column: 40, scope: !4260)
!4265 = !DILocation(line: 1986, column: 5, scope: !4260)
!4266 = !DILocation(line: 1988, column: 3, scope: !4260)
!4267 = !DILocation(line: 1989, column: 24, scope: !4247)
!4268 = !DILocation(line: 1989, column: 32, scope: !4247)
!4269 = !DILocation(line: 1989, column: 11, scope: !4247)
!4270 = !DILocation(line: 1989, column: 45, scope: !4247)
!4271 = !DILocation(line: 1990, column: 24, scope: !4247)
!4272 = !DILocation(line: 1990, column: 32, scope: !4247)
!4273 = !DILocation(line: 1990, column: 11, scope: !4247)
!4274 = !DILocation(line: 1990, column: 10, scope: !4247)
!4275 = !DILocation(line: 1991, column: 23, scope: !4247)
!4276 = !DILocation(line: 1991, column: 3, scope: !4247)
!4277 = !DILocation(line: 1992, column: 23, scope: !4247)
!4278 = !DILocation(line: 1992, column: 3, scope: !4247)
!4279 = !DILocation(line: 1993, column: 23, scope: !4247)
!4280 = !DILocation(line: 1993, column: 3, scope: !4247)
!4281 = !DILocation(line: 1994, column: 23, scope: !4247)
!4282 = !DILocation(line: 1994, column: 3, scope: !4247)
!4283 = !DILocation(line: 1995, column: 23, scope: !4247)
!4284 = !DILocation(line: 1995, column: 3, scope: !4247)
!4285 = !DILocation(line: 1997, column: 19, scope: !4247)
!4286 = !DILocation(line: 1997, column: 27, scope: !4247)
!4287 = !DILocation(line: 1997, column: 42, scope: !4247)
!4288 = !DILocation(line: 1997, column: 50, scope: !4247)
!4289 = !DILocation(line: 1997, column: 3, scope: !4247)
!4290 = !DILocation(line: 1998, column: 13, scope: !4247)
!4291 = !DILocation(line: 1998, column: 21, scope: !4247)
!4292 = !DILocation(line: 1998, column: 35, scope: !4247)
!4293 = !DILocation(line: 1998, column: 43, scope: !4247)
!4294 = !DILocation(line: 1998, column: 3, scope: !4247)
!4295 = !DILocation(line: 1999, column: 19, scope: !4247)
!4296 = !DILocation(line: 1999, column: 27, scope: !4247)
!4297 = !DILocation(line: 1999, column: 42, scope: !4247)
!4298 = !DILocation(line: 1999, column: 50, scope: !4247)
!4299 = !DILocation(line: 1999, column: 3, scope: !4247)
!4300 = !DILocation(line: 2000, column: 14, scope: !4247)
!4301 = !DILocation(line: 2000, column: 22, scope: !4247)
!4302 = !DILocation(line: 2000, column: 3, scope: !4247)
!4303 = !DILocation(line: 2001, column: 23, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4247, file: !147, line: 2001, column: 7)
!4305 = !DILocation(line: 2001, column: 31, scope: !4304)
!4306 = !DILocation(line: 2001, column: 7, scope: !4304)
!4307 = !DILocation(line: 2001, column: 52, scope: !4304)
!4308 = !DILocation(line: 2002, column: 23, scope: !4304)
!4309 = !DILocation(line: 2002, column: 31, scope: !4304)
!4310 = !DILocation(line: 2002, column: 7, scope: !4304)
!4311 = !DILocation(line: 2001, column: 7, scope: !4247)
!4312 = !DILocation(line: 2004, column: 25, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4304, file: !147, line: 2003, column: 3)
!4314 = !DILocation(line: 2004, column: 5, scope: !4313)
!4315 = !DILocation(line: 2005, column: 3, scope: !4313)
!4316 = !DILocation(line: 2008, column: 25, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4304, file: !147, line: 2007, column: 3)
!4318 = !DILocation(line: 2008, column: 5, scope: !4317)
!4319 = !DILocation(line: 2010, column: 23, scope: !4247)
!4320 = !DILocation(line: 2010, column: 3, scope: !4247)
!4321 = !DILocation(line: 2011, column: 3, scope: !4247)
!4322 = !DILocation(line: 2011, column: 11, scope: !4247)
!4323 = !DILocation(line: 2011, column: 20, scope: !4247)
!4324 = !DILocation(line: 2012, column: 3, scope: !4247)
!4325 = !DILocation(line: 2012, column: 11, scope: !4247)
!4326 = !DILocation(line: 2012, column: 23, scope: !4247)
!4327 = !DILocation(line: 2013, column: 15, scope: !4247)
!4328 = !DILocation(line: 2013, column: 3, scope: !4247)
!4329 = !DILocation(line: 2014, column: 29, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4247, file: !147, line: 2014, column: 7)
!4331 = !DILocation(line: 2014, column: 7, scope: !4330)
!4332 = !DILocation(line: 2014, column: 7, scope: !4247)
!4333 = !DILocation(line: 2016, column: 20, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4330, file: !147, line: 2015, column: 3)
!4335 = !DILocation(line: 2016, column: 5, scope: !4334)
!4336 = !DILocation(line: 2017, column: 3, scope: !4334)
!4337 = !DILocation(line: 2018, column: 3, scope: !4247)
!4338 = !DILocation(line: 2019, column: 1, scope: !4247)
!4339 = distinct !DISubprogram(name: "handle_sigurg", scope: !147, file: !147, line: 1385, type: !1072, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4340 = !DILocalVariable(name: "p_private", arg: 1, scope: !4339, file: !147, line: 1385, type: !80)
!4341 = !DILocation(line: 1385, column: 21, scope: !4339)
!4342 = !DILocalVariable(name: "async_cmd_str", scope: !4339, file: !147, line: 1387, type: !170)
!4343 = !DILocation(line: 1387, column: 16, scope: !4339)
!4344 = !DILocalVariable(name: "async_arg_str", scope: !4339, file: !147, line: 1388, type: !170)
!4345 = !DILocation(line: 1388, column: 16, scope: !4339)
!4346 = !DILocalVariable(name: "real_cmd_str", scope: !4339, file: !147, line: 1389, type: !170)
!4347 = !DILocation(line: 1389, column: 16, scope: !4339)
!4348 = !DILocalVariable(name: "len", scope: !4339, file: !147, line: 1390, type: !26)
!4349 = !DILocation(line: 1390, column: 16, scope: !4339)
!4350 = !DILocalVariable(name: "p_sess", scope: !4339, file: !147, line: 1391, type: !150)
!4351 = !DILocation(line: 1391, column: 23, scope: !4339)
!4352 = !DILocation(line: 1391, column: 54, scope: !4339)
!4353 = !DILocation(line: 1391, column: 32, scope: !4339)
!4354 = !DILocation(line: 1393, column: 7, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4339, file: !147, line: 1393, column: 7)
!4356 = !DILocation(line: 1393, column: 15, scope: !4355)
!4357 = !DILocation(line: 1393, column: 23, scope: !4355)
!4358 = !DILocation(line: 1393, column: 7, scope: !4339)
!4359 = !DILocation(line: 1395, column: 5, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4355, file: !147, line: 1394, column: 3)
!4361 = !DILocation(line: 1398, column: 29, scope: !4339)
!4362 = !DILocation(line: 1398, column: 3, scope: !4339)
!4363 = !DILocation(line: 1403, column: 9, scope: !4339)
!4364 = !DILocation(line: 1403, column: 7, scope: !4339)
!4365 = !DILocation(line: 1404, column: 7, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4339, file: !147, line: 1404, column: 7)
!4367 = !DILocation(line: 1404, column: 11, scope: !4366)
!4368 = !DILocation(line: 1404, column: 7, scope: !4339)
!4369 = !DILocation(line: 1406, column: 46, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4366, file: !147, line: 1405, column: 3)
!4371 = !DILocation(line: 1406, column: 50, scope: !4370)
!4372 = !DILocation(line: 1406, column: 5, scope: !4370)
!4373 = !DILocation(line: 1407, column: 3, scope: !4370)
!4374 = !DILocation(line: 1408, column: 7, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4339, file: !147, line: 1408, column: 7)
!4376 = !DILocation(line: 1408, column: 7, scope: !4339)
!4377 = !DILocation(line: 1410, column: 5, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4375, file: !147, line: 1409, column: 3)
!4379 = !DILocation(line: 1410, column: 13, scope: !4378)
!4380 = !DILocation(line: 1410, column: 27, scope: !4378)
!4381 = !DILocation(line: 1415, column: 33, scope: !4378)
!4382 = !DILocation(line: 1415, column: 41, scope: !4378)
!4383 = !DILocation(line: 1415, column: 5, scope: !4378)
!4384 = !DILocation(line: 1416, column: 3, scope: !4378)
!4385 = !DILocation(line: 1420, column: 21, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4375, file: !147, line: 1418, column: 3)
!4387 = !DILocation(line: 1420, column: 5, scope: !4386)
!4388 = !DILocation(line: 1422, column: 3, scope: !4339)
!4389 = !DILocation(line: 1423, column: 3, scope: !4339)
!4390 = !DILocation(line: 1424, column: 3, scope: !4339)
!4391 = !DILocation(line: 1425, column: 1, scope: !4339)
!4392 = !DILocalVariable(name: "p_sess", arg: 1, scope: !235, file: !147, line: 468, type: !150)
!4393 = !DILocation(line: 468, column: 32, scope: !235)
!4394 = !DILocation(line: 472, column: 3, scope: !235)
!4395 = !DILocation(line: 474, column: 3, scope: !235)
!4396 = !DILocation(line: 476, column: 3, scope: !235)
!4397 = !DILocation(line: 477, column: 3, scope: !235)
!4398 = !DILocation(line: 478, column: 3, scope: !235)
!4399 = !DILocation(line: 479, column: 23, scope: !235)
!4400 = !DILocation(line: 479, column: 3, scope: !235)
!4401 = !DILocation(line: 480, column: 1, scope: !235)
!4402 = distinct !DISubprogram(name: "handle_cwd", scope: !147, file: !147, line: 483, type: !148, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4403 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4402, file: !147, line: 483, type: !150)
!4404 = !DILocation(line: 483, column: 32, scope: !4402)
!4405 = !DILocalVariable(name: "retval", scope: !4402, file: !147, line: 485, type: !19)
!4406 = !DILocation(line: 485, column: 7, scope: !4402)
!4407 = !DILocation(line: 486, column: 18, scope: !4402)
!4408 = !DILocation(line: 486, column: 26, scope: !4402)
!4409 = !DILocation(line: 486, column: 39, scope: !4402)
!4410 = !DILocation(line: 486, column: 3, scope: !4402)
!4411 = !DILocation(line: 487, column: 31, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4402, file: !147, line: 487, column: 7)
!4413 = !DILocation(line: 487, column: 39, scope: !4412)
!4414 = !DILocation(line: 487, column: 8, scope: !4412)
!4415 = !DILocation(line: 487, column: 7, scope: !4402)
!4416 = !DILocation(line: 489, column: 21, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4412, file: !147, line: 488, column: 3)
!4418 = !DILocation(line: 489, column: 5, scope: !4417)
!4419 = !DILocation(line: 490, column: 5, scope: !4417)
!4420 = !DILocation(line: 492, column: 23, scope: !4402)
!4421 = !DILocation(line: 492, column: 31, scope: !4402)
!4422 = !DILocation(line: 492, column: 12, scope: !4402)
!4423 = !DILocation(line: 492, column: 10, scope: !4402)
!4424 = !DILocation(line: 493, column: 7, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4402, file: !147, line: 493, column: 7)
!4426 = !DILocation(line: 493, column: 14, scope: !4425)
!4427 = !DILocation(line: 493, column: 7, scope: !4402)
!4428 = !DILocation(line: 496, column: 28, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4425, file: !147, line: 494, column: 3)
!4430 = !DILocation(line: 496, column: 5, scope: !4429)
!4431 = !DILocation(line: 497, column: 21, scope: !4429)
!4432 = !DILocation(line: 497, column: 5, scope: !4429)
!4433 = !DILocation(line: 498, column: 3, scope: !4429)
!4434 = !DILocation(line: 501, column: 21, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4425, file: !147, line: 500, column: 3)
!4436 = !DILocation(line: 501, column: 5, scope: !4435)
!4437 = !DILocation(line: 503, column: 1, scope: !4402)
!4438 = distinct !DISubprogram(name: "handle_cdup", scope: !147, file: !147, line: 506, type: !148, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4439 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4438, file: !147, line: 506, type: !150)
!4440 = !DILocation(line: 506, column: 33, scope: !4438)
!4441 = !DILocation(line: 508, column: 19, scope: !4438)
!4442 = !DILocation(line: 508, column: 27, scope: !4438)
!4443 = !DILocation(line: 508, column: 3, scope: !4438)
!4444 = !DILocation(line: 509, column: 14, scope: !4438)
!4445 = !DILocation(line: 509, column: 3, scope: !4438)
!4446 = !DILocation(line: 510, column: 1, scope: !4438)
!4447 = !DILocalVariable(name: "p_sess", arg: 1, scope: !248, file: !147, line: 569, type: !150)
!4448 = !DILocation(line: 569, column: 33, scope: !248)
!4449 = !DILocalVariable(name: "is_epsv", arg: 2, scope: !248, file: !147, line: 569, type: !19)
!4450 = !DILocation(line: 569, column: 45, scope: !248)
!4451 = !DILocalVariable(name: "the_port", scope: !248, file: !147, line: 571, type: !225)
!4452 = !DILocation(line: 571, column: 18, scope: !248)
!4453 = !DILocalVariable(name: "is_ipv6", scope: !248, file: !147, line: 574, type: !19)
!4454 = !DILocation(line: 574, column: 7, scope: !248)
!4455 = !DILocation(line: 574, column: 46, scope: !248)
!4456 = !DILocation(line: 574, column: 54, scope: !248)
!4457 = !DILocation(line: 574, column: 17, scope: !248)
!4458 = !DILocation(line: 575, column: 7, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !248, file: !147, line: 575, column: 7)
!4460 = !DILocation(line: 575, column: 15, scope: !4459)
!4461 = !DILocation(line: 575, column: 32, scope: !4459)
!4462 = !DILocation(line: 575, column: 40, scope: !4459)
!4463 = !DILocation(line: 575, column: 19, scope: !4459)
!4464 = !DILocation(line: 575, column: 7, scope: !248)
!4465 = !DILocalVariable(name: "argval", scope: !4466, file: !147, line: 577, type: !19)
!4466 = distinct !DILexicalBlock(scope: !4459, file: !147, line: 576, column: 3)
!4467 = !DILocation(line: 577, column: 9, scope: !4466)
!4468 = !DILocation(line: 578, column: 16, scope: !4466)
!4469 = !DILocation(line: 578, column: 24, scope: !4466)
!4470 = !DILocation(line: 578, column: 5, scope: !4466)
!4471 = !DILocation(line: 579, column: 25, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4466, file: !147, line: 579, column: 9)
!4473 = !DILocation(line: 579, column: 33, scope: !4472)
!4474 = !DILocation(line: 579, column: 9, scope: !4472)
!4475 = !DILocation(line: 579, column: 9, scope: !4466)
!4476 = !DILocation(line: 581, column: 7, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4472, file: !147, line: 580, column: 5)
!4478 = !DILocation(line: 581, column: 15, scope: !4477)
!4479 = !DILocation(line: 581, column: 24, scope: !4477)
!4480 = !DILocation(line: 582, column: 23, scope: !4477)
!4481 = !DILocation(line: 582, column: 7, scope: !4477)
!4482 = !DILocation(line: 583, column: 7, scope: !4477)
!4483 = !DILocation(line: 585, column: 43, scope: !4466)
!4484 = !DILocation(line: 585, column: 51, scope: !4466)
!4485 = !DILocation(line: 585, column: 31, scope: !4466)
!4486 = !DILocation(line: 585, column: 14, scope: !4466)
!4487 = !DILocation(line: 585, column: 12, scope: !4466)
!4488 = !DILocation(line: 586, column: 9, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4466, file: !147, line: 586, column: 9)
!4490 = !DILocation(line: 586, column: 16, scope: !4489)
!4491 = !DILocation(line: 586, column: 20, scope: !4489)
!4492 = !DILocation(line: 586, column: 23, scope: !4489)
!4493 = !DILocation(line: 586, column: 30, scope: !4489)
!4494 = !DILocation(line: 586, column: 34, scope: !4489)
!4495 = !DILocation(line: 586, column: 39, scope: !4489)
!4496 = !DILocation(line: 586, column: 47, scope: !4489)
!4497 = !DILocation(line: 586, column: 50, scope: !4489)
!4498 = !DILocation(line: 586, column: 57, scope: !4489)
!4499 = !DILocation(line: 586, column: 9, scope: !4466)
!4500 = !DILocation(line: 588, column: 23, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4489, file: !147, line: 587, column: 5)
!4502 = !DILocation(line: 588, column: 7, scope: !4501)
!4503 = !DILocation(line: 589, column: 7, scope: !4501)
!4504 = !DILocation(line: 591, column: 3, scope: !4466)
!4505 = !DILocation(line: 592, column: 16, scope: !248)
!4506 = !DILocation(line: 592, column: 3, scope: !248)
!4507 = !DILocation(line: 593, column: 16, scope: !248)
!4508 = !DILocation(line: 593, column: 3, scope: !248)
!4509 = !DILocation(line: 594, column: 7, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !248, file: !147, line: 594, column: 7)
!4511 = !DILocation(line: 594, column: 7, scope: !248)
!4512 = !DILocation(line: 596, column: 39, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4510, file: !147, line: 595, column: 3)
!4514 = !DILocation(line: 596, column: 16, scope: !4513)
!4515 = !DILocation(line: 596, column: 14, scope: !4513)
!4516 = !DILocation(line: 597, column: 3, scope: !4513)
!4517 = !DILocation(line: 600, column: 39, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4510, file: !147, line: 599, column: 3)
!4519 = !DILocation(line: 600, column: 16, scope: !4518)
!4520 = !DILocation(line: 600, column: 14, scope: !4518)
!4521 = !DILocation(line: 602, column: 7, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !248, file: !147, line: 602, column: 7)
!4523 = !DILocation(line: 602, column: 7, scope: !248)
!4524 = !DILocation(line: 604, column: 5, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4522, file: !147, line: 603, column: 3)
!4526 = !DILocation(line: 605, column: 55, scope: !4525)
!4527 = !DILocation(line: 605, column: 39, scope: !4525)
!4528 = !DILocation(line: 605, column: 5, scope: !4525)
!4529 = !DILocation(line: 606, column: 5, scope: !4525)
!4530 = !DILocation(line: 607, column: 25, scope: !4525)
!4531 = !DILocation(line: 607, column: 5, scope: !4525)
!4532 = !DILocation(line: 608, column: 5, scope: !4525)
!4533 = !DILocation(line: 610, column: 7, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !248, file: !147, line: 610, column: 7)
!4535 = !DILocation(line: 610, column: 28, scope: !4534)
!4536 = !DILocation(line: 610, column: 7, scope: !248)
!4537 = !DILocation(line: 612, column: 5, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4534, file: !147, line: 611, column: 3)
!4539 = !DILocation(line: 614, column: 31, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4538, file: !147, line: 614, column: 9)
!4541 = !DILocation(line: 614, column: 53, scope: !4540)
!4542 = !DILocation(line: 614, column: 9, scope: !4540)
!4543 = !DILocation(line: 614, column: 67, scope: !4540)
!4544 = !DILocation(line: 614, column: 9, scope: !4538)
!4545 = !DILocation(line: 616, column: 7, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4540, file: !147, line: 615, column: 5)
!4547 = !DILocation(line: 617, column: 5, scope: !4546)
!4548 = !DILocation(line: 618, column: 3, scope: !4538)
!4549 = !DILocation(line: 621, column: 47, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4534, file: !147, line: 620, column: 3)
!4551 = !DILocation(line: 621, column: 55, scope: !4550)
!4552 = !DILocation(line: 621, column: 5, scope: !4550)
!4553 = !DILocation(line: 623, column: 3, scope: !248)
!4554 = !DILocation(line: 624, column: 8, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !248, file: !147, line: 624, column: 7)
!4556 = !DILocation(line: 624, column: 7, scope: !248)
!4557 = !DILocation(line: 626, column: 60, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4555, file: !147, line: 625, column: 3)
!4559 = !DILocation(line: 626, column: 38, scope: !4558)
!4560 = !DILocation(line: 626, column: 5, scope: !4558)
!4561 = !DILocation(line: 627, column: 3, scope: !4558)
!4562 = !DILocalVariable(name: "p_v4addr", scope: !4563, file: !147, line: 630, type: !1595)
!4563 = distinct !DILexicalBlock(scope: !4555, file: !147, line: 629, column: 3)
!4564 = !DILocation(line: 630, column: 17, scope: !4563)
!4565 = !DILocation(line: 630, column: 57, scope: !4563)
!4566 = !DILocation(line: 630, column: 28, scope: !4563)
!4567 = !DILocation(line: 631, column: 9, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4563, file: !147, line: 631, column: 9)
!4569 = !DILocation(line: 631, column: 9, scope: !4563)
!4570 = !DILocation(line: 633, column: 62, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4568, file: !147, line: 632, column: 5)
!4572 = !DILocation(line: 633, column: 40, scope: !4571)
!4573 = !DILocation(line: 633, column: 7, scope: !4571)
!4574 = !DILocation(line: 634, column: 5, scope: !4571)
!4575 = !DILocation(line: 637, column: 7, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4568, file: !147, line: 636, column: 5)
!4577 = !DILocation(line: 640, column: 3, scope: !248)
!4578 = !DILocation(line: 641, column: 3, scope: !248)
!4579 = !DILocation(line: 642, column: 37, scope: !248)
!4580 = !DILocation(line: 642, column: 46, scope: !248)
!4581 = !DILocation(line: 642, column: 3, scope: !248)
!4582 = !DILocation(line: 643, column: 3, scope: !248)
!4583 = !DILocation(line: 644, column: 37, scope: !248)
!4584 = !DILocation(line: 644, column: 46, scope: !248)
!4585 = !DILocation(line: 644, column: 3, scope: !248)
!4586 = !DILocation(line: 645, column: 3, scope: !248)
!4587 = !DILocation(line: 646, column: 23, scope: !248)
!4588 = !DILocation(line: 646, column: 3, scope: !248)
!4589 = !DILocation(line: 647, column: 1, scope: !248)
!4590 = !DILocalVariable(name: "p_sess", arg: 1, scope: !255, file: !147, line: 650, type: !150)
!4591 = !DILocation(line: 650, column: 33, scope: !255)
!4592 = !DILocalVariable(name: "is_http", arg: 2, scope: !255, file: !147, line: 650, type: !19)
!4593 = !DILocation(line: 650, column: 45, scope: !255)
!4594 = !DILocalVariable(name: "trans_ret", scope: !255, file: !147, line: 654, type: !4595)
!4595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_transfer_ret", file: !609, line: 72, size: 128, elements: !4596)
!4596 = !{!4597, !4598}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !4595, file: !609, line: 74, baseType: !19, size: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "transferred", scope: !4595, file: !609, line: 75, baseType: !41, size: 64, offset: 64)
!4599 = !DILocation(line: 654, column: 27, scope: !255)
!4600 = !DILocalVariable(name: "remote_fd", scope: !255, file: !147, line: 655, type: !19)
!4601 = !DILocation(line: 655, column: 7, scope: !255)
!4602 = !DILocalVariable(name: "opened_file", scope: !255, file: !147, line: 656, type: !19)
!4603 = !DILocation(line: 656, column: 7, scope: !255)
!4604 = !DILocalVariable(name: "is_ascii", scope: !255, file: !147, line: 657, type: !19)
!4605 = !DILocation(line: 657, column: 7, scope: !255)
!4606 = !DILocalVariable(name: "offset", scope: !255, file: !147, line: 658, type: !41)
!4607 = !DILocation(line: 658, column: 14, scope: !255)
!4608 = !DILocation(line: 658, column: 23, scope: !255)
!4609 = !DILocation(line: 658, column: 31, scope: !255)
!4610 = !DILocation(line: 659, column: 3, scope: !255)
!4611 = !DILocation(line: 659, column: 11, scope: !255)
!4612 = !DILocation(line: 659, column: 23, scope: !255)
!4613 = !DILocation(line: 660, column: 8, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !255, file: !147, line: 660, column: 7)
!4615 = !DILocation(line: 660, column: 16, scope: !4614)
!4616 = !DILocation(line: 660, column: 44, scope: !4614)
!4617 = !DILocation(line: 660, column: 20, scope: !4614)
!4618 = !DILocation(line: 660, column: 7, scope: !255)
!4619 = !DILocation(line: 662, column: 5, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4614, file: !147, line: 661, column: 3)
!4621 = !DILocation(line: 664, column: 7, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !255, file: !147, line: 664, column: 7)
!4623 = !DILocation(line: 664, column: 15, scope: !4622)
!4624 = !DILocation(line: 664, column: 24, scope: !4622)
!4625 = !DILocation(line: 664, column: 27, scope: !4622)
!4626 = !DILocation(line: 664, column: 34, scope: !4622)
!4627 = !DILocation(line: 664, column: 7, scope: !255)
!4628 = !DILocation(line: 666, column: 21, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4622, file: !147, line: 665, column: 3)
!4630 = !DILocation(line: 666, column: 5, scope: !4629)
!4631 = !DILocation(line: 668, column: 5, scope: !4629)
!4632 = !DILocation(line: 670, column: 18, scope: !255)
!4633 = !DILocation(line: 670, column: 26, scope: !255)
!4634 = !DILocation(line: 670, column: 39, scope: !255)
!4635 = !DILocation(line: 670, column: 3, scope: !255)
!4636 = !DILocation(line: 671, column: 23, scope: !255)
!4637 = !DILocation(line: 671, column: 3, scope: !255)
!4638 = !DILocation(line: 672, column: 13, scope: !255)
!4639 = !DILocation(line: 672, column: 21, scope: !255)
!4640 = !DILocation(line: 672, column: 31, scope: !255)
!4641 = !DILocation(line: 672, column: 39, scope: !255)
!4642 = !DILocation(line: 672, column: 3, scope: !255)
!4643 = !DILocation(line: 673, column: 29, scope: !255)
!4644 = !DILocation(line: 673, column: 37, scope: !255)
!4645 = !DILocation(line: 673, column: 3, scope: !255)
!4646 = !DILocation(line: 674, column: 31, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !255, file: !147, line: 674, column: 7)
!4648 = !DILocation(line: 674, column: 39, scope: !4647)
!4649 = !DILocation(line: 674, column: 8, scope: !4647)
!4650 = !DILocation(line: 674, column: 7, scope: !255)
!4651 = !DILocation(line: 676, column: 21, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !147, line: 675, column: 3)
!4653 = !DILocation(line: 676, column: 5, scope: !4652)
!4654 = !DILocation(line: 677, column: 5, scope: !4652)
!4655 = !DILocation(line: 679, column: 27, scope: !255)
!4656 = !DILocation(line: 679, column: 35, scope: !255)
!4657 = !DILocation(line: 679, column: 17, scope: !255)
!4658 = !DILocation(line: 679, column: 15, scope: !255)
!4659 = !DILocation(line: 680, column: 35, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !255, file: !147, line: 680, column: 7)
!4661 = !DILocation(line: 680, column: 7, scope: !4660)
!4662 = !DILocation(line: 680, column: 7, scope: !255)
!4663 = !DILocation(line: 682, column: 21, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4660, file: !147, line: 681, column: 3)
!4665 = !DILocation(line: 682, column: 5, scope: !4664)
!4666 = !DILocation(line: 683, column: 5, scope: !4664)
!4667 = !DILocation(line: 686, column: 7, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !255, file: !147, line: 686, column: 7)
!4669 = !DILocation(line: 686, column: 7, scope: !255)
!4670 = !DILocation(line: 688, column: 32, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4668, file: !147, line: 687, column: 3)
!4672 = !DILocation(line: 688, column: 5, scope: !4671)
!4673 = !DILocation(line: 689, column: 3, scope: !4671)
!4674 = !DILocation(line: 690, column: 21, scope: !255)
!4675 = !DILocation(line: 690, column: 3, scope: !255)
!4676 = !DILocation(line: 692, column: 39, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !255, file: !147, line: 692, column: 7)
!4678 = !DILocation(line: 692, column: 8, scope: !4677)
!4679 = !DILocation(line: 692, column: 7, scope: !255)
!4680 = !DILocation(line: 695, column: 21, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4677, file: !147, line: 693, column: 3)
!4682 = !DILocation(line: 695, column: 5, scope: !4681)
!4683 = !DILocation(line: 699, column: 36, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !147, line: 699, column: 9)
!4685 = !DILocation(line: 699, column: 9, scope: !4684)
!4686 = !DILocation(line: 699, column: 9, scope: !4681)
!4687 = !DILocation(line: 701, column: 27, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4684, file: !147, line: 700, column: 5)
!4689 = !DILocation(line: 701, column: 7, scope: !4688)
!4690 = !DILocation(line: 702, column: 5, scope: !4688)
!4691 = !DILocation(line: 703, column: 5, scope: !4681)
!4692 = !DILocation(line: 708, column: 34, scope: !255)
!4693 = !DILocation(line: 708, column: 3, scope: !255)
!4694 = !DILocation(line: 710, column: 7, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !255, file: !147, line: 710, column: 7)
!4696 = !DILocation(line: 710, column: 15, scope: !4695)
!4697 = !DILocation(line: 710, column: 28, scope: !4695)
!4698 = !DILocation(line: 710, column: 31, scope: !4695)
!4699 = !DILocation(line: 710, column: 64, scope: !4695)
!4700 = !DILocation(line: 711, column: 46, scope: !4695)
!4701 = !DILocation(line: 711, column: 8, scope: !4695)
!4702 = !DILocation(line: 710, column: 7, scope: !255)
!4703 = !DILocation(line: 713, column: 21, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4695, file: !147, line: 712, column: 3)
!4705 = !DILocation(line: 713, column: 5, scope: !4704)
!4706 = !DILocation(line: 714, column: 5, scope: !4704)
!4707 = !DILocation(line: 717, column: 7, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !255, file: !147, line: 717, column: 7)
!4709 = !DILocation(line: 717, column: 14, scope: !4708)
!4710 = !DILocation(line: 717, column: 7, scope: !255)
!4711 = !DILocation(line: 719, column: 26, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4708, file: !147, line: 718, column: 3)
!4713 = !DILocation(line: 719, column: 39, scope: !4712)
!4714 = !DILocation(line: 719, column: 5, scope: !4712)
!4715 = !DILocation(line: 720, column: 3, scope: !4712)
!4716 = !DILocation(line: 721, column: 3, scope: !255)
!4717 = !DILocation(line: 722, column: 7, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !255, file: !147, line: 722, column: 7)
!4719 = !DILocation(line: 722, column: 37, scope: !4718)
!4720 = !DILocation(line: 722, column: 40, scope: !4718)
!4721 = !DILocation(line: 722, column: 48, scope: !4718)
!4722 = !DILocation(line: 722, column: 7, scope: !255)
!4723 = !DILocation(line: 724, column: 5, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4718, file: !147, line: 723, column: 3)
!4725 = !DILocation(line: 725, column: 14, scope: !4724)
!4726 = !DILocation(line: 726, column: 3, scope: !4724)
!4727 = !DILocation(line: 729, column: 5, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4718, file: !147, line: 728, column: 3)
!4729 = !DILocation(line: 731, column: 3, scope: !255)
!4730 = !DILocation(line: 732, column: 32, scope: !255)
!4731 = !DILocation(line: 732, column: 40, scope: !255)
!4732 = !DILocation(line: 732, column: 3, scope: !255)
!4733 = !DILocation(line: 733, column: 3, scope: !255)
!4734 = !DILocation(line: 735, column: 54, scope: !255)
!4735 = !DILocation(line: 735, column: 25, scope: !255)
!4736 = !DILocation(line: 734, column: 3, scope: !255)
!4737 = !DILocation(line: 736, column: 3, scope: !255)
!4738 = !DILocation(line: 737, column: 7, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !255, file: !147, line: 737, column: 7)
!4740 = !DILocation(line: 737, column: 7, scope: !255)
!4741 = !DILocation(line: 739, column: 15, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !147, line: 738, column: 3)
!4743 = !DILocation(line: 740, column: 3, scope: !4742)
!4744 = !DILocation(line: 743, column: 40, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4739, file: !147, line: 742, column: 3)
!4746 = !DILocation(line: 743, column: 48, scope: !4745)
!4747 = !DILocation(line: 743, column: 17, scope: !4745)
!4748 = !DILocation(line: 743, column: 15, scope: !4745)
!4749 = !DILocation(line: 744, column: 37, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4745, file: !147, line: 744, column: 9)
!4751 = !DILocation(line: 744, column: 9, scope: !4750)
!4752 = !DILocation(line: 744, column: 9, scope: !4745)
!4753 = !DILocation(line: 746, column: 7, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !147, line: 745, column: 5)
!4755 = !DILocation(line: 749, column: 43, scope: !255)
!4756 = !DILocation(line: 749, column: 51, scope: !255)
!4757 = !DILocation(line: 750, column: 43, scope: !255)
!4758 = !DILocation(line: 750, column: 59, scope: !255)
!4759 = !DILocation(line: 749, column: 15, scope: !255)
!4760 = !DILocation(line: 751, column: 8, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !255, file: !147, line: 751, column: 7)
!4762 = !DILocation(line: 751, column: 16, scope: !4761)
!4763 = !DILocation(line: 752, column: 41, scope: !4761)
!4764 = !DILocation(line: 752, column: 7, scope: !4761)
!4765 = !DILocation(line: 752, column: 49, scope: !4761)
!4766 = !DILocation(line: 752, column: 54, scope: !4761)
!4767 = !DILocation(line: 753, column: 17, scope: !4761)
!4768 = !DILocation(line: 753, column: 24, scope: !4761)
!4769 = !DILocation(line: 751, column: 7, scope: !255)
!4770 = !DILocation(line: 755, column: 15, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4761, file: !147, line: 754, column: 3)
!4772 = !DILocation(line: 755, column: 22, scope: !4771)
!4773 = !DILocation(line: 756, column: 3, scope: !4771)
!4774 = !DILocation(line: 757, column: 37, scope: !255)
!4775 = !DILocation(line: 757, column: 3, scope: !255)
!4776 = !DILocation(line: 757, column: 11, scope: !255)
!4777 = !DILocation(line: 757, column: 25, scope: !255)
!4778 = !DILocation(line: 759, column: 17, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !255, file: !147, line: 759, column: 7)
!4780 = !DILocation(line: 759, column: 24, scope: !4779)
!4781 = !DILocation(line: 759, column: 7, scope: !255)
!4782 = !DILocation(line: 761, column: 20, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4779, file: !147, line: 760, column: 3)
!4784 = !DILocation(line: 761, column: 5, scope: !4783)
!4785 = !DILocation(line: 762, column: 3, scope: !4783)
!4786 = !DILocation(line: 763, column: 7, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !255, file: !147, line: 763, column: 7)
!4788 = !DILocation(line: 763, column: 7, scope: !255)
!4789 = !DILocation(line: 765, column: 5, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !147, line: 764, column: 3)
!4791 = !DILocation(line: 770, column: 17, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !255, file: !147, line: 770, column: 7)
!4793 = !DILocation(line: 770, column: 24, scope: !4792)
!4794 = !DILocation(line: 770, column: 7, scope: !255)
!4795 = !DILocation(line: 772, column: 21, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4792, file: !147, line: 771, column: 3)
!4797 = !DILocation(line: 772, column: 5, scope: !4796)
!4798 = !DILocation(line: 773, column: 3, scope: !4796)
!4799 = !DILocation(line: 774, column: 22, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4792, file: !147, line: 774, column: 12)
!4801 = !DILocation(line: 774, column: 29, scope: !4800)
!4802 = !DILocation(line: 774, column: 12, scope: !4792)
!4803 = !DILocation(line: 776, column: 10, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !147, line: 776, column: 9)
!4805 = distinct !DILexicalBlock(scope: !4800, file: !147, line: 775, column: 3)
!4806 = !DILocation(line: 776, column: 18, scope: !4804)
!4807 = !DILocation(line: 776, column: 9, scope: !4805)
!4808 = !DILocation(line: 778, column: 23, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4804, file: !147, line: 777, column: 5)
!4810 = !DILocation(line: 778, column: 7, scope: !4809)
!4811 = !DILocation(line: 780, column: 5, scope: !4809)
!4812 = !DILocation(line: 781, column: 3, scope: !4805)
!4813 = !DILocation(line: 784, column: 21, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4800, file: !147, line: 783, column: 3)
!4815 = !DILocation(line: 784, column: 5, scope: !4814)
!4816 = !DILocation(line: 786, column: 14, scope: !255)
!4817 = !DILocation(line: 786, column: 3, scope: !255)
!4818 = !DILocation(line: 788, column: 16, scope: !255)
!4819 = !DILocation(line: 788, column: 3, scope: !255)
!4820 = !DILocation(line: 789, column: 16, scope: !255)
!4821 = !DILocation(line: 789, column: 3, scope: !255)
!4822 = !DILocation(line: 791, column: 21, scope: !255)
!4823 = !DILocation(line: 791, column: 3, scope: !255)
!4824 = !DILocation(line: 792, column: 1, scope: !255)
!4825 = distinct !DISubprogram(name: "handle_help", scope: !147, file: !147, line: 1763, type: !148, scopeLine: 1764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4826 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4825, file: !147, line: 1763, type: !150)
!4827 = !DILocation(line: 1763, column: 33, scope: !4825)
!4828 = !DILocation(line: 1765, column: 26, scope: !4825)
!4829 = !DILocation(line: 1765, column: 3, scope: !4825)
!4830 = !DILocation(line: 1767, column: 23, scope: !4825)
!4831 = !DILocation(line: 1767, column: 3, scope: !4825)
!4832 = !DILocation(line: 1769, column: 23, scope: !4825)
!4833 = !DILocation(line: 1769, column: 3, scope: !4825)
!4834 = !DILocation(line: 1771, column: 23, scope: !4825)
!4835 = !DILocation(line: 1771, column: 3, scope: !4825)
!4836 = !DILocation(line: 1773, column: 23, scope: !4825)
!4837 = !DILocation(line: 1773, column: 3, scope: !4825)
!4838 = !DILocation(line: 1775, column: 19, scope: !4825)
!4839 = !DILocation(line: 1775, column: 3, scope: !4825)
!4840 = !DILocation(line: 1776, column: 1, scope: !4825)
!4841 = distinct !DISubprogram(name: "handle_list", scope: !147, file: !147, line: 795, type: !148, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4842 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4841, file: !147, line: 795, type: !150)
!4843 = !DILocation(line: 795, column: 33, scope: !4841)
!4844 = !DILocation(line: 797, column: 21, scope: !4841)
!4845 = !DILocation(line: 797, column: 3, scope: !4841)
!4846 = !DILocation(line: 798, column: 1, scope: !4841)
!4847 = distinct !DISubprogram(name: "handle_type", scope: !147, file: !147, line: 949, type: !148, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4848 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4847, file: !147, line: 949, type: !150)
!4849 = !DILocation(line: 949, column: 33, scope: !4847)
!4850 = !DILocation(line: 951, column: 14, scope: !4847)
!4851 = !DILocation(line: 951, column: 22, scope: !4847)
!4852 = !DILocation(line: 951, column: 3, scope: !4847)
!4853 = !DILocation(line: 952, column: 23, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4847, file: !147, line: 952, column: 7)
!4855 = !DILocation(line: 952, column: 31, scope: !4854)
!4856 = !DILocation(line: 952, column: 7, scope: !4854)
!4857 = !DILocation(line: 952, column: 49, scope: !4854)
!4858 = !DILocation(line: 953, column: 23, scope: !4854)
!4859 = !DILocation(line: 953, column: 31, scope: !4854)
!4860 = !DILocation(line: 953, column: 7, scope: !4854)
!4861 = !DILocation(line: 953, column: 50, scope: !4854)
!4862 = !DILocation(line: 954, column: 23, scope: !4854)
!4863 = !DILocation(line: 954, column: 31, scope: !4854)
!4864 = !DILocation(line: 954, column: 7, scope: !4854)
!4865 = !DILocation(line: 952, column: 7, scope: !4847)
!4866 = !DILocation(line: 956, column: 5, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4854, file: !147, line: 955, column: 3)
!4868 = !DILocation(line: 956, column: 13, scope: !4867)
!4869 = !DILocation(line: 956, column: 22, scope: !4867)
!4870 = !DILocation(line: 957, column: 21, scope: !4867)
!4871 = !DILocation(line: 957, column: 5, scope: !4867)
!4872 = !DILocation(line: 958, column: 3, scope: !4867)
!4873 = !DILocation(line: 959, column: 28, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4854, file: !147, line: 959, column: 12)
!4875 = !DILocation(line: 959, column: 36, scope: !4874)
!4876 = !DILocation(line: 959, column: 12, scope: !4874)
!4877 = !DILocation(line: 959, column: 54, scope: !4874)
!4878 = !DILocation(line: 960, column: 28, scope: !4874)
!4879 = !DILocation(line: 960, column: 36, scope: !4874)
!4880 = !DILocation(line: 960, column: 12, scope: !4874)
!4881 = !DILocation(line: 959, column: 12, scope: !4854)
!4882 = !DILocation(line: 962, column: 5, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4874, file: !147, line: 961, column: 3)
!4884 = !DILocation(line: 962, column: 13, scope: !4883)
!4885 = !DILocation(line: 962, column: 22, scope: !4883)
!4886 = !DILocation(line: 963, column: 21, scope: !4883)
!4887 = !DILocation(line: 963, column: 5, scope: !4883)
!4888 = !DILocation(line: 964, column: 3, scope: !4883)
!4889 = !DILocation(line: 967, column: 21, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4874, file: !147, line: 966, column: 3)
!4891 = !DILocation(line: 967, column: 5, scope: !4890)
!4892 = !DILocation(line: 969, column: 1, scope: !4847)
!4893 = distinct !DISubprogram(name: "handle_port", scope: !147, file: !147, line: 972, type: !148, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4894 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4893, file: !147, line: 972, type: !150)
!4895 = !DILocation(line: 972, column: 33, scope: !4893)
!4896 = !DILocalVariable(name: "the_port", scope: !4893, file: !147, line: 974, type: !225)
!4897 = !DILocation(line: 974, column: 18, scope: !4893)
!4898 = !DILocalVariable(name: "vals", scope: !4893, file: !147, line: 975, type: !4899)
!4899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 48, elements: !4900)
!4900 = !{!4901}
!4901 = !DISubrange(count: 6)
!4902 = !DILocation(line: 975, column: 17, scope: !4893)
!4903 = !DILocalVariable(name: "p_raw", scope: !4893, file: !147, line: 976, type: !1074)
!4904 = !DILocation(line: 976, column: 24, scope: !4893)
!4905 = !DILocation(line: 977, column: 16, scope: !4893)
!4906 = !DILocation(line: 977, column: 3, scope: !4893)
!4907 = !DILocation(line: 978, column: 16, scope: !4893)
!4908 = !DILocation(line: 978, column: 3, scope: !4893)
!4909 = !DILocation(line: 979, column: 47, scope: !4893)
!4910 = !DILocation(line: 979, column: 55, scope: !4893)
!4911 = !DILocation(line: 979, column: 73, scope: !4893)
!4912 = !DILocation(line: 979, column: 11, scope: !4893)
!4913 = !DILocation(line: 979, column: 9, scope: !4893)
!4914 = !DILocation(line: 981, column: 7, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4893, file: !147, line: 981, column: 7)
!4916 = !DILocation(line: 981, column: 13, scope: !4915)
!4917 = !DILocation(line: 981, column: 7, scope: !4893)
!4918 = !DILocation(line: 983, column: 21, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4915, file: !147, line: 982, column: 3)
!4920 = !DILocation(line: 983, column: 5, scope: !4919)
!4921 = !DILocation(line: 984, column: 5, scope: !4919)
!4922 = !DILocation(line: 986, column: 33, scope: !4893)
!4923 = !DILocation(line: 986, column: 41, scope: !4893)
!4924 = !DILocation(line: 986, column: 49, scope: !4893)
!4925 = !DILocation(line: 986, column: 47, scope: !4893)
!4926 = !DILocation(line: 986, column: 14, scope: !4893)
!4927 = !DILocation(line: 986, column: 12, scope: !4893)
!4928 = !DILocation(line: 987, column: 31, scope: !4893)
!4929 = !DILocation(line: 987, column: 39, scope: !4893)
!4930 = !DILocation(line: 987, column: 56, scope: !4893)
!4931 = !DILocation(line: 987, column: 64, scope: !4893)
!4932 = !DILocation(line: 987, column: 3, scope: !4893)
!4933 = !DILocation(line: 988, column: 37, scope: !4893)
!4934 = !DILocation(line: 988, column: 45, scope: !4893)
!4935 = !DILocation(line: 988, column: 62, scope: !4893)
!4936 = !DILocation(line: 988, column: 3, scope: !4893)
!4937 = !DILocation(line: 989, column: 33, scope: !4893)
!4938 = !DILocation(line: 989, column: 41, scope: !4893)
!4939 = !DILocation(line: 989, column: 58, scope: !4893)
!4940 = !DILocation(line: 989, column: 3, scope: !4893)
!4941 = !DILocation(line: 994, column: 8, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4893, file: !147, line: 994, column: 7)
!4943 = !DILocation(line: 994, column: 7, scope: !4893)
!4944 = !DILocation(line: 996, column: 42, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4946, file: !147, line: 996, column: 9)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !147, line: 995, column: 3)
!4947 = !DILocation(line: 996, column: 50, scope: !4945)
!4948 = !DILocation(line: 997, column: 42, scope: !4945)
!4949 = !DILocation(line: 997, column: 50, scope: !4945)
!4950 = !DILocation(line: 996, column: 10, scope: !4945)
!4951 = !DILocation(line: 997, column: 67, scope: !4945)
!4952 = !DILocation(line: 998, column: 38, scope: !4945)
!4953 = !DILocation(line: 998, column: 9, scope: !4945)
!4954 = !DILocation(line: 996, column: 9, scope: !4946)
!4955 = !DILocation(line: 1000, column: 23, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4945, file: !147, line: 999, column: 5)
!4957 = !DILocation(line: 1000, column: 7, scope: !4956)
!4958 = !DILocation(line: 1001, column: 20, scope: !4956)
!4959 = !DILocation(line: 1001, column: 7, scope: !4956)
!4960 = !DILocation(line: 1002, column: 7, scope: !4956)
!4961 = !DILocation(line: 1004, column: 3, scope: !4946)
!4962 = !DILocation(line: 1005, column: 19, scope: !4893)
!4963 = !DILocation(line: 1005, column: 3, scope: !4893)
!4964 = !DILocation(line: 1007, column: 1, scope: !4893)
!4965 = distinct !DISubprogram(name: "handle_stor", scope: !147, file: !147, line: 1010, type: !148, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!4966 = !DILocalVariable(name: "p_sess", arg: 1, scope: !4965, file: !147, line: 1010, type: !150)
!4967 = !DILocation(line: 1010, column: 33, scope: !4965)
!4968 = !DILocation(line: 1012, column: 24, scope: !4965)
!4969 = !DILocation(line: 1012, column: 3, scope: !4965)
!4970 = !DILocation(line: 1013, column: 1, scope: !4965)
!4971 = !DILocalVariable(name: "p_sess", arg: 1, scope: !292, file: !147, line: 1176, type: !150)
!4972 = !DILocation(line: 1176, column: 32, scope: !292)
!4973 = !DILocalVariable(name: "retval", scope: !292, file: !147, line: 1178, type: !19)
!4974 = !DILocation(line: 1178, column: 7, scope: !292)
!4975 = !DILocation(line: 1179, column: 18, scope: !292)
!4976 = !DILocation(line: 1179, column: 26, scope: !292)
!4977 = !DILocation(line: 1179, column: 39, scope: !292)
!4978 = !DILocation(line: 1179, column: 3, scope: !292)
!4979 = !DILocation(line: 1180, column: 23, scope: !292)
!4980 = !DILocation(line: 1180, column: 3, scope: !292)
!4981 = !DILocation(line: 1181, column: 13, scope: !292)
!4982 = !DILocation(line: 1181, column: 21, scope: !292)
!4983 = !DILocation(line: 1181, column: 31, scope: !292)
!4984 = !DILocation(line: 1181, column: 39, scope: !292)
!4985 = !DILocation(line: 1181, column: 3, scope: !292)
!4986 = !DILocation(line: 1182, column: 29, scope: !292)
!4987 = !DILocation(line: 1182, column: 37, scope: !292)
!4988 = !DILocation(line: 1182, column: 3, scope: !292)
!4989 = !DILocation(line: 1183, column: 31, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !292, file: !147, line: 1183, column: 7)
!4991 = !DILocation(line: 1183, column: 39, scope: !4990)
!4992 = !DILocation(line: 1183, column: 8, scope: !4990)
!4993 = !DILocation(line: 1183, column: 7, scope: !292)
!4994 = !DILocation(line: 1185, column: 21, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4990, file: !147, line: 1184, column: 3)
!4996 = !DILocation(line: 1185, column: 5, scope: !4995)
!4997 = !DILocation(line: 1186, column: 5, scope: !4995)
!4998 = !DILocation(line: 1189, column: 23, scope: !292)
!4999 = !DILocation(line: 1189, column: 31, scope: !292)
!5000 = !DILocation(line: 1189, column: 12, scope: !292)
!5001 = !DILocation(line: 1189, column: 10, scope: !292)
!5002 = !DILocation(line: 1190, column: 7, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !292, file: !147, line: 1190, column: 7)
!5004 = !DILocation(line: 1190, column: 14, scope: !5003)
!5005 = !DILocation(line: 1190, column: 7, scope: !292)
!5006 = !DILocation(line: 1192, column: 21, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !147, line: 1191, column: 3)
!5008 = !DILocation(line: 1192, column: 5, scope: !5007)
!5009 = !DILocation(line: 1194, column: 5, scope: !5007)
!5010 = !DILocation(line: 1196, column: 18, scope: !292)
!5011 = !DILocation(line: 1196, column: 3, scope: !292)
!5012 = !DILocation(line: 1200, column: 27, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !292, file: !147, line: 1197, column: 3)
!5014 = !DILocation(line: 1200, column: 35, scope: !5013)
!5015 = !DILocation(line: 1200, column: 5, scope: !5013)
!5016 = !DILocation(line: 1201, column: 5, scope: !5013)
!5017 = !DILocation(line: 1203, column: 5, scope: !5013)
!5018 = !DILocation(line: 1205, column: 5, scope: !5013)
!5019 = !DILocation(line: 1206, column: 5, scope: !5013)
!5020 = !DILocation(line: 1207, column: 5, scope: !5013)
!5021 = !DILocation(line: 1208, column: 25, scope: !5013)
!5022 = !DILocation(line: 1208, column: 5, scope: !5013)
!5023 = !DILocation(line: 1210, column: 1, scope: !292)
!5024 = distinct !DISubprogram(name: "handle_rmd", scope: !147, file: !147, line: 1213, type: !148, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5025 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5024, file: !147, line: 1213, type: !150)
!5026 = !DILocation(line: 1213, column: 32, scope: !5024)
!5027 = !DILocalVariable(name: "retval", scope: !5024, file: !147, line: 1215, type: !19)
!5028 = !DILocation(line: 1215, column: 7, scope: !5024)
!5029 = !DILocation(line: 1216, column: 18, scope: !5024)
!5030 = !DILocation(line: 1216, column: 26, scope: !5024)
!5031 = !DILocation(line: 1216, column: 39, scope: !5024)
!5032 = !DILocation(line: 1216, column: 3, scope: !5024)
!5033 = !DILocation(line: 1217, column: 23, scope: !5024)
!5034 = !DILocation(line: 1217, column: 3, scope: !5024)
!5035 = !DILocation(line: 1218, column: 13, scope: !5024)
!5036 = !DILocation(line: 1218, column: 21, scope: !5024)
!5037 = !DILocation(line: 1218, column: 31, scope: !5024)
!5038 = !DILocation(line: 1218, column: 39, scope: !5024)
!5039 = !DILocation(line: 1218, column: 3, scope: !5024)
!5040 = !DILocation(line: 1219, column: 29, scope: !5024)
!5041 = !DILocation(line: 1219, column: 37, scope: !5024)
!5042 = !DILocation(line: 1219, column: 3, scope: !5024)
!5043 = !DILocation(line: 1220, column: 31, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5024, file: !147, line: 1220, column: 7)
!5045 = !DILocation(line: 1220, column: 39, scope: !5044)
!5046 = !DILocation(line: 1220, column: 8, scope: !5044)
!5047 = !DILocation(line: 1220, column: 7, scope: !5024)
!5048 = !DILocation(line: 1222, column: 21, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5044, file: !147, line: 1221, column: 3)
!5050 = !DILocation(line: 1222, column: 5, scope: !5049)
!5051 = !DILocation(line: 1223, column: 5, scope: !5049)
!5052 = !DILocation(line: 1225, column: 23, scope: !5024)
!5053 = !DILocation(line: 1225, column: 31, scope: !5024)
!5054 = !DILocation(line: 1225, column: 12, scope: !5024)
!5055 = !DILocation(line: 1225, column: 10, scope: !5024)
!5056 = !DILocation(line: 1226, column: 7, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5024, file: !147, line: 1226, column: 7)
!5058 = !DILocation(line: 1226, column: 14, scope: !5057)
!5059 = !DILocation(line: 1226, column: 7, scope: !5024)
!5060 = !DILocation(line: 1228, column: 21, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !147, line: 1227, column: 3)
!5062 = !DILocation(line: 1228, column: 5, scope: !5061)
!5063 = !DILocation(line: 1230, column: 3, scope: !5061)
!5064 = !DILocation(line: 1233, column: 20, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5057, file: !147, line: 1232, column: 3)
!5066 = !DILocation(line: 1233, column: 5, scope: !5065)
!5067 = !DILocation(line: 1234, column: 21, scope: !5065)
!5068 = !DILocation(line: 1234, column: 5, scope: !5065)
!5069 = !DILocation(line: 1237, column: 1, scope: !5024)
!5070 = distinct !DISubprogram(name: "handle_dele", scope: !147, file: !147, line: 1240, type: !148, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5071 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5070, file: !147, line: 1240, type: !150)
!5072 = !DILocation(line: 1240, column: 33, scope: !5070)
!5073 = !DILocalVariable(name: "retval", scope: !5070, file: !147, line: 1242, type: !19)
!5074 = !DILocation(line: 1242, column: 7, scope: !5070)
!5075 = !DILocation(line: 1243, column: 18, scope: !5070)
!5076 = !DILocation(line: 1243, column: 26, scope: !5070)
!5077 = !DILocation(line: 1243, column: 39, scope: !5070)
!5078 = !DILocation(line: 1243, column: 3, scope: !5070)
!5079 = !DILocation(line: 1244, column: 23, scope: !5070)
!5080 = !DILocation(line: 1244, column: 3, scope: !5070)
!5081 = !DILocation(line: 1245, column: 13, scope: !5070)
!5082 = !DILocation(line: 1245, column: 21, scope: !5070)
!5083 = !DILocation(line: 1245, column: 31, scope: !5070)
!5084 = !DILocation(line: 1245, column: 39, scope: !5070)
!5085 = !DILocation(line: 1245, column: 3, scope: !5070)
!5086 = !DILocation(line: 1246, column: 29, scope: !5070)
!5087 = !DILocation(line: 1246, column: 37, scope: !5070)
!5088 = !DILocation(line: 1246, column: 3, scope: !5070)
!5089 = !DILocation(line: 1247, column: 31, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5070, file: !147, line: 1247, column: 7)
!5091 = !DILocation(line: 1247, column: 39, scope: !5090)
!5092 = !DILocation(line: 1247, column: 8, scope: !5090)
!5093 = !DILocation(line: 1247, column: 7, scope: !5070)
!5094 = !DILocation(line: 1249, column: 21, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5090, file: !147, line: 1248, column: 3)
!5096 = !DILocation(line: 1249, column: 5, scope: !5095)
!5097 = !DILocation(line: 1250, column: 5, scope: !5095)
!5098 = !DILocation(line: 1252, column: 24, scope: !5070)
!5099 = !DILocation(line: 1252, column: 32, scope: !5070)
!5100 = !DILocation(line: 1252, column: 12, scope: !5070)
!5101 = !DILocation(line: 1252, column: 10, scope: !5070)
!5102 = !DILocation(line: 1253, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5070, file: !147, line: 1253, column: 7)
!5104 = !DILocation(line: 1253, column: 14, scope: !5103)
!5105 = !DILocation(line: 1253, column: 7, scope: !5070)
!5106 = !DILocation(line: 1255, column: 21, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5103, file: !147, line: 1254, column: 3)
!5108 = !DILocation(line: 1255, column: 5, scope: !5107)
!5109 = !DILocation(line: 1256, column: 3, scope: !5107)
!5110 = !DILocation(line: 1259, column: 20, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5103, file: !147, line: 1258, column: 3)
!5112 = !DILocation(line: 1259, column: 5, scope: !5111)
!5113 = !DILocation(line: 1260, column: 21, scope: !5111)
!5114 = !DILocation(line: 1260, column: 5, scope: !5111)
!5115 = !DILocation(line: 1262, column: 1, scope: !5070)
!5116 = !DILocalVariable(name: "p_sess", arg: 1, scope: !297, file: !147, line: 1265, type: !150)
!5117 = !DILocation(line: 1265, column: 33, scope: !297)
!5118 = !DILocalVariable(name: "val", scope: !297, file: !147, line: 1268, type: !41)
!5119 = !DILocation(line: 1268, column: 14, scope: !297)
!5120 = !DILocation(line: 1268, column: 41, scope: !297)
!5121 = !DILocation(line: 1268, column: 49, scope: !297)
!5122 = !DILocation(line: 1268, column: 20, scope: !297)
!5123 = !DILocation(line: 1269, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !297, file: !147, line: 1269, column: 7)
!5125 = !DILocation(line: 1269, column: 11, scope: !5124)
!5126 = !DILocation(line: 1269, column: 7, scope: !297)
!5127 = !DILocation(line: 1271, column: 9, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5124, file: !147, line: 1270, column: 3)
!5129 = !DILocation(line: 1272, column: 3, scope: !5128)
!5130 = !DILocation(line: 1273, column: 25, scope: !297)
!5131 = !DILocation(line: 1273, column: 3, scope: !297)
!5132 = !DILocation(line: 1273, column: 11, scope: !297)
!5133 = !DILocation(line: 1273, column: 23, scope: !297)
!5134 = !DILocation(line: 1274, column: 3, scope: !297)
!5135 = !DILocation(line: 1275, column: 38, scope: !297)
!5136 = !DILocation(line: 1275, column: 3, scope: !297)
!5137 = !DILocation(line: 1276, column: 3, scope: !297)
!5138 = !DILocation(line: 1277, column: 23, scope: !297)
!5139 = !DILocation(line: 1277, column: 3, scope: !297)
!5140 = !DILocation(line: 1278, column: 1, scope: !297)
!5141 = !DILocalVariable(name: "p_sess", arg: 1, scope: !300, file: !147, line: 1281, type: !150)
!5142 = !DILocation(line: 1281, column: 33, scope: !300)
!5143 = !DILocalVariable(name: "retval", scope: !300, file: !147, line: 1284, type: !19)
!5144 = !DILocation(line: 1284, column: 7, scope: !300)
!5145 = !DILocation(line: 1286, column: 13, scope: !300)
!5146 = !DILocation(line: 1286, column: 21, scope: !300)
!5147 = !DILocation(line: 1286, column: 3, scope: !300)
!5148 = !DILocation(line: 1287, column: 18, scope: !300)
!5149 = !DILocation(line: 1287, column: 26, scope: !300)
!5150 = !DILocation(line: 1287, column: 39, scope: !300)
!5151 = !DILocation(line: 1287, column: 3, scope: !300)
!5152 = !DILocation(line: 1288, column: 31, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !300, file: !147, line: 1288, column: 7)
!5154 = !DILocation(line: 1288, column: 39, scope: !5153)
!5155 = !DILocation(line: 1288, column: 8, scope: !5153)
!5156 = !DILocation(line: 1288, column: 7, scope: !300)
!5157 = !DILocation(line: 1290, column: 25, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5153, file: !147, line: 1289, column: 3)
!5159 = !DILocation(line: 1290, column: 5, scope: !5158)
!5160 = !DILocation(line: 1291, column: 15, scope: !5158)
!5161 = !DILocation(line: 1291, column: 23, scope: !5158)
!5162 = !DILocation(line: 1291, column: 33, scope: !5158)
!5163 = !DILocation(line: 1291, column: 41, scope: !5158)
!5164 = !DILocation(line: 1291, column: 5, scope: !5158)
!5165 = !DILocation(line: 1292, column: 31, scope: !5158)
!5166 = !DILocation(line: 1292, column: 39, scope: !5158)
!5167 = !DILocation(line: 1292, column: 5, scope: !5158)
!5168 = !DILocation(line: 1293, column: 21, scope: !5158)
!5169 = !DILocation(line: 1293, column: 5, scope: !5158)
!5170 = !DILocation(line: 1294, column: 5, scope: !5158)
!5171 = !DILocation(line: 1297, column: 22, scope: !300)
!5172 = !DILocation(line: 1297, column: 30, scope: !300)
!5173 = !DILocation(line: 1297, column: 12, scope: !300)
!5174 = !DILocation(line: 1297, column: 10, scope: !300)
!5175 = !DILocation(line: 1298, column: 7, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !300, file: !147, line: 1298, column: 7)
!5177 = !DILocation(line: 1298, column: 14, scope: !5176)
!5178 = !DILocation(line: 1298, column: 7, scope: !300)
!5179 = !DILocation(line: 1301, column: 15, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !147, line: 1299, column: 3)
!5181 = !DILocation(line: 1301, column: 23, scope: !5180)
!5182 = !DILocation(line: 1301, column: 43, scope: !5180)
!5183 = !DILocation(line: 1301, column: 51, scope: !5180)
!5184 = !DILocation(line: 1301, column: 5, scope: !5180)
!5185 = !DILocation(line: 1302, column: 21, scope: !5180)
!5186 = !DILocation(line: 1302, column: 5, scope: !5180)
!5187 = !DILocation(line: 1303, column: 3, scope: !5180)
!5188 = !DILocation(line: 1306, column: 25, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5176, file: !147, line: 1305, column: 3)
!5190 = !DILocation(line: 1306, column: 5, scope: !5189)
!5191 = !DILocation(line: 1307, column: 15, scope: !5189)
!5192 = !DILocation(line: 1307, column: 23, scope: !5189)
!5193 = !DILocation(line: 1307, column: 33, scope: !5189)
!5194 = !DILocation(line: 1307, column: 41, scope: !5189)
!5195 = !DILocation(line: 1307, column: 5, scope: !5189)
!5196 = !DILocation(line: 1308, column: 31, scope: !5189)
!5197 = !DILocation(line: 1308, column: 39, scope: !5189)
!5198 = !DILocation(line: 1308, column: 5, scope: !5189)
!5199 = !DILocation(line: 1309, column: 21, scope: !5189)
!5200 = !DILocation(line: 1309, column: 5, scope: !5189)
!5201 = !DILocation(line: 1311, column: 1, scope: !300)
!5202 = !DILocalVariable(name: "p_sess", arg: 1, scope: !303, file: !147, line: 1314, type: !150)
!5203 = !DILocation(line: 1314, column: 33, scope: !303)
!5204 = !DILocalVariable(name: "retval", scope: !303, file: !147, line: 1317, type: !19)
!5205 = !DILocation(line: 1317, column: 7, scope: !303)
!5206 = !DILocation(line: 1319, column: 20, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !303, file: !147, line: 1319, column: 7)
!5208 = !DILocation(line: 1319, column: 28, scope: !5207)
!5209 = !DILocation(line: 1319, column: 7, scope: !5207)
!5210 = !DILocation(line: 1319, column: 7, scope: !303)
!5211 = !DILocation(line: 1321, column: 21, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5207, file: !147, line: 1320, column: 3)
!5213 = !DILocation(line: 1321, column: 5, scope: !5212)
!5214 = !DILocation(line: 1323, column: 5, scope: !5212)
!5215 = !DILocation(line: 1325, column: 18, scope: !303)
!5216 = !DILocation(line: 1325, column: 26, scope: !303)
!5217 = !DILocation(line: 1325, column: 39, scope: !303)
!5218 = !DILocation(line: 1325, column: 3, scope: !303)
!5219 = !DILocation(line: 1326, column: 23, scope: !303)
!5220 = !DILocation(line: 1326, column: 3, scope: !303)
!5221 = !DILocation(line: 1327, column: 13, scope: !303)
!5222 = !DILocation(line: 1327, column: 21, scope: !303)
!5223 = !DILocation(line: 1327, column: 31, scope: !303)
!5224 = !DILocation(line: 1327, column: 39, scope: !303)
!5225 = !DILocation(line: 1327, column: 3, scope: !303)
!5226 = !DILocation(line: 1328, column: 29, scope: !303)
!5227 = !DILocation(line: 1328, column: 37, scope: !303)
!5228 = !DILocation(line: 1328, column: 3, scope: !303)
!5229 = !DILocation(line: 1329, column: 20, scope: !303)
!5230 = !DILocation(line: 1329, column: 28, scope: !303)
!5231 = !DILocation(line: 1329, column: 3, scope: !303)
!5232 = !DILocation(line: 1330, column: 25, scope: !303)
!5233 = !DILocation(line: 1330, column: 33, scope: !303)
!5234 = !DILocation(line: 1330, column: 3, scope: !303)
!5235 = !DILocation(line: 1331, column: 3, scope: !303)
!5236 = !DILocation(line: 1332, column: 19, scope: !303)
!5237 = !DILocation(line: 1332, column: 27, scope: !303)
!5238 = !DILocation(line: 1332, column: 3, scope: !303)
!5239 = !DILocation(line: 1333, column: 31, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !303, file: !147, line: 1333, column: 7)
!5241 = !DILocation(line: 1333, column: 39, scope: !5240)
!5242 = !DILocation(line: 1333, column: 8, scope: !5240)
!5243 = !DILocation(line: 1333, column: 7, scope: !303)
!5244 = !DILocation(line: 1335, column: 21, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5240, file: !147, line: 1334, column: 3)
!5246 = !DILocation(line: 1335, column: 5, scope: !5245)
!5247 = !DILocation(line: 1336, column: 5, scope: !5245)
!5248 = !DILocation(line: 1341, column: 24, scope: !303)
!5249 = !DILocation(line: 1341, column: 32, scope: !303)
!5250 = !DILocation(line: 1341, column: 52, scope: !303)
!5251 = !DILocation(line: 1341, column: 60, scope: !303)
!5252 = !DILocation(line: 1341, column: 12, scope: !303)
!5253 = !DILocation(line: 1341, column: 10, scope: !303)
!5254 = !DILocation(line: 1343, column: 13, scope: !303)
!5255 = !DILocation(line: 1343, column: 21, scope: !303)
!5256 = !DILocation(line: 1343, column: 3, scope: !303)
!5257 = !DILocation(line: 1344, column: 7, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !303, file: !147, line: 1344, column: 7)
!5259 = !DILocation(line: 1344, column: 14, scope: !5258)
!5260 = !DILocation(line: 1344, column: 7, scope: !303)
!5261 = !DILocation(line: 1346, column: 20, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !147, line: 1345, column: 3)
!5263 = !DILocation(line: 1346, column: 5, scope: !5262)
!5264 = !DILocation(line: 1347, column: 21, scope: !5262)
!5265 = !DILocation(line: 1347, column: 5, scope: !5262)
!5266 = !DILocation(line: 1348, column: 3, scope: !5262)
!5267 = !DILocation(line: 1351, column: 21, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5258, file: !147, line: 1350, column: 3)
!5269 = !DILocation(line: 1351, column: 5, scope: !5268)
!5270 = !DILocation(line: 1353, column: 1, scope: !303)
!5271 = distinct !DISubprogram(name: "handle_nlst", scope: !147, file: !147, line: 1356, type: !148, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5272 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5271, file: !147, line: 1356, type: !150)
!5273 = !DILocation(line: 1356, column: 33, scope: !5271)
!5274 = !DILocation(line: 1358, column: 21, scope: !5271)
!5275 = !DILocation(line: 1358, column: 3, scope: !5271)
!5276 = !DILocation(line: 1359, column: 1, scope: !5271)
!5277 = !DILocalVariable(name: "p_sess", arg: 1, scope: !306, file: !147, line: 1469, type: !150)
!5278 = !DILocation(line: 1469, column: 33, scope: !306)
!5279 = !DILocalVariable(name: "retval", scope: !306, file: !147, line: 1477, type: !19)
!5280 = !DILocation(line: 1477, column: 7, scope: !306)
!5281 = !DILocation(line: 1478, column: 18, scope: !306)
!5282 = !DILocation(line: 1478, column: 26, scope: !306)
!5283 = !DILocation(line: 1478, column: 39, scope: !306)
!5284 = !DILocation(line: 1478, column: 3, scope: !306)
!5285 = !DILocation(line: 1479, column: 31, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !306, file: !147, line: 1479, column: 7)
!5287 = !DILocation(line: 1479, column: 39, scope: !5286)
!5288 = !DILocation(line: 1479, column: 8, scope: !5286)
!5289 = !DILocation(line: 1479, column: 7, scope: !306)
!5290 = !DILocation(line: 1481, column: 21, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5286, file: !147, line: 1480, column: 3)
!5292 = !DILocation(line: 1481, column: 5, scope: !5291)
!5293 = !DILocation(line: 1482, column: 5, scope: !5291)
!5294 = !DILocation(line: 1484, column: 22, scope: !306)
!5295 = !DILocation(line: 1484, column: 30, scope: !306)
!5296 = !DILocation(line: 1484, column: 12, scope: !306)
!5297 = !DILocation(line: 1484, column: 10, scope: !306)
!5298 = !DILocation(line: 1485, column: 7, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !306, file: !147, line: 1485, column: 7)
!5300 = !DILocation(line: 1485, column: 14, scope: !5299)
!5301 = !DILocation(line: 1485, column: 19, scope: !5299)
!5302 = !DILocation(line: 1485, column: 54, scope: !5299)
!5303 = !DILocation(line: 1485, column: 23, scope: !5299)
!5304 = !DILocation(line: 1485, column: 7, scope: !306)
!5305 = !DILocation(line: 1487, column: 21, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5299, file: !147, line: 1486, column: 3)
!5307 = !DILocation(line: 1487, column: 5, scope: !5306)
!5308 = !DILocation(line: 1488, column: 3, scope: !5306)
!5309 = !DILocation(line: 1493, column: 55, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5299, file: !147, line: 1490, column: 3)
!5311 = !DILocation(line: 1493, column: 26, scope: !5310)
!5312 = !DILocation(line: 1492, column: 5, scope: !5310)
!5313 = !DILocation(line: 1494, column: 25, scope: !5310)
!5314 = !DILocation(line: 1494, column: 5, scope: !5310)
!5315 = !DILocation(line: 1496, column: 1, scope: !306)
!5316 = !DILocalVariable(name: "p_sess", arg: 1, scope: !311, file: !147, line: 1499, type: !150)
!5317 = !DILocation(line: 1499, column: 33, scope: !311)
!5318 = !DILocation(line: 1503, column: 19, scope: !311)
!5319 = !DILocation(line: 1503, column: 27, scope: !311)
!5320 = !DILocation(line: 1503, column: 3, scope: !311)
!5321 = !DILocation(line: 1504, column: 14, scope: !311)
!5322 = !DILocation(line: 1504, column: 22, scope: !311)
!5323 = !DILocation(line: 1504, column: 3, scope: !311)
!5324 = !DILocation(line: 1505, column: 7, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !311, file: !147, line: 1505, column: 7)
!5326 = !DILocation(line: 1505, column: 28, scope: !5325)
!5327 = !DILocation(line: 1506, column: 7, scope: !5325)
!5328 = !DILocation(line: 1506, column: 28, scope: !5325)
!5329 = !DILocation(line: 1507, column: 23, scope: !5325)
!5330 = !DILocation(line: 1507, column: 31, scope: !5325)
!5331 = !DILocation(line: 1507, column: 7, scope: !5325)
!5332 = !DILocation(line: 1505, column: 7, scope: !311)
!5333 = !DILocation(line: 1509, column: 23, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5325, file: !147, line: 1508, column: 3)
!5335 = !DILocation(line: 1509, column: 5, scope: !5334)
!5336 = !DILocation(line: 1510, column: 3, scope: !5334)
!5337 = !DILocation(line: 1511, column: 28, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5325, file: !147, line: 1511, column: 12)
!5339 = !DILocation(line: 1511, column: 36, scope: !5338)
!5340 = !DILocation(line: 1511, column: 12, scope: !5338)
!5341 = !DILocation(line: 1511, column: 12, scope: !5325)
!5342 = !DILocation(line: 1513, column: 23, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5338, file: !147, line: 1512, column: 3)
!5344 = !DILocation(line: 1513, column: 5, scope: !5343)
!5345 = !DILocation(line: 1514, column: 3, scope: !5343)
!5346 = !DILocation(line: 1515, column: 28, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5338, file: !147, line: 1515, column: 12)
!5348 = !DILocation(line: 1515, column: 36, scope: !5347)
!5349 = !DILocation(line: 1515, column: 12, scope: !5347)
!5350 = !DILocation(line: 1515, column: 12, scope: !5338)
!5351 = !DILocation(line: 1517, column: 9, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !147, line: 1517, column: 9)
!5353 = distinct !DILexicalBlock(scope: !5347, file: !147, line: 1516, column: 3)
!5354 = !DILocation(line: 1517, column: 30, scope: !5352)
!5355 = !DILocation(line: 1518, column: 9, scope: !5352)
!5356 = !DILocation(line: 1517, column: 9, scope: !5353)
!5357 = !DILocation(line: 1520, column: 23, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5352, file: !147, line: 1519, column: 5)
!5359 = !DILocation(line: 1520, column: 7, scope: !5358)
!5360 = !DILocation(line: 1521, column: 5, scope: !5358)
!5361 = !DILocation(line: 1524, column: 23, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5352, file: !147, line: 1523, column: 5)
!5363 = !DILocation(line: 1524, column: 7, scope: !5362)
!5364 = !DILocation(line: 1526, column: 3, scope: !5353)
!5365 = !DILocation(line: 1529, column: 21, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5347, file: !147, line: 1528, column: 3)
!5367 = !DILocation(line: 1529, column: 5, scope: !5366)
!5368 = !DILocation(line: 1531, column: 1, scope: !311)
!5369 = distinct !DISubprogram(name: "handle_appe", scope: !147, file: !147, line: 1599, type: !148, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5370 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5369, file: !147, line: 1599, type: !150)
!5371 = !DILocation(line: 1599, column: 33, scope: !5369)
!5372 = !DILocation(line: 1601, column: 24, scope: !5369)
!5373 = !DILocation(line: 1601, column: 3, scope: !5369)
!5374 = !DILocation(line: 1602, column: 1, scope: !5369)
!5375 = !DILocalVariable(name: "p_sess", arg: 1, scope: !322, file: !147, line: 1605, type: !150)
!5376 = !DILocation(line: 1605, column: 33, scope: !322)
!5377 = !DILocalVariable(name: "do_write", scope: !322, file: !147, line: 1609, type: !19)
!5378 = !DILocation(line: 1609, column: 7, scope: !322)
!5379 = !DILocalVariable(name: "modtime", scope: !322, file: !147, line: 1610, type: !28)
!5380 = !DILocation(line: 1610, column: 8, scope: !322)
!5381 = !DILocalVariable(name: "loc", scope: !322, file: !147, line: 1611, type: !5382)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_locate_result", file: !34, line: 68, size: 96, elements: !5383)
!5383 = !{!5384, !5385, !5386}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !5382, file: !34, line: 70, baseType: !19, size: 32)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5382, file: !34, line: 71, baseType: !26, size: 32, offset: 32)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "char_found", scope: !5382, file: !34, line: 72, baseType: !17, size: 8, offset: 64)
!5387 = !DILocation(line: 1611, column: 28, scope: !322)
!5388 = !DILocation(line: 1611, column: 51, scope: !322)
!5389 = !DILocation(line: 1611, column: 59, scope: !322)
!5390 = !DILocation(line: 1611, column: 34, scope: !322)
!5391 = !DILocalVariable(name: "retval", scope: !322, file: !147, line: 1612, type: !19)
!5392 = !DILocation(line: 1612, column: 7, scope: !322)
!5393 = !DILocation(line: 1612, column: 26, scope: !322)
!5394 = !DILocation(line: 1612, column: 34, scope: !322)
!5395 = !DILocation(line: 1612, column: 16, scope: !322)
!5396 = !DILocation(line: 1613, column: 7, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !322, file: !147, line: 1613, column: 7)
!5398 = !DILocation(line: 1613, column: 26, scope: !5397)
!5399 = !DILocation(line: 1613, column: 29, scope: !5397)
!5400 = !DILocation(line: 1613, column: 36, scope: !5397)
!5401 = !DILocation(line: 1613, column: 41, scope: !5397)
!5402 = !DILocation(line: 1613, column: 48, scope: !5397)
!5403 = !DILocation(line: 1613, column: 44, scope: !5397)
!5404 = !DILocation(line: 1613, column: 54, scope: !5397)
!5405 = !DILocation(line: 1614, column: 44, scope: !5397)
!5406 = !DILocation(line: 1614, column: 52, scope: !5397)
!5407 = !DILocation(line: 1614, column: 27, scope: !5397)
!5408 = !DILocation(line: 1614, column: 7, scope: !5397)
!5409 = !DILocation(line: 1613, column: 7, scope: !322)
!5410 = !DILocation(line: 1616, column: 13, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !147, line: 1616, column: 9)
!5412 = distinct !DILexicalBlock(scope: !5397, file: !147, line: 1615, column: 3)
!5413 = !DILocation(line: 1616, column: 19, scope: !5411)
!5414 = !DILocation(line: 1616, column: 24, scope: !5411)
!5415 = !DILocation(line: 1616, column: 31, scope: !5411)
!5416 = !DILocation(line: 1616, column: 37, scope: !5411)
!5417 = !DILocation(line: 1616, column: 43, scope: !5411)
!5418 = !DILocation(line: 1617, column: 14, scope: !5411)
!5419 = !DILocation(line: 1617, column: 20, scope: !5411)
!5420 = !DILocation(line: 1617, column: 25, scope: !5411)
!5421 = !DILocation(line: 1617, column: 45, scope: !5411)
!5422 = !DILocation(line: 1617, column: 53, scope: !5411)
!5423 = !DILocation(line: 1617, column: 28, scope: !5411)
!5424 = !DILocation(line: 1617, column: 70, scope: !5411)
!5425 = !DILocation(line: 1616, column: 9, scope: !5412)
!5426 = !DILocation(line: 1619, column: 16, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5411, file: !147, line: 1618, column: 5)
!5428 = !DILocation(line: 1620, column: 5, scope: !5427)
!5429 = !DILocation(line: 1621, column: 3, scope: !5412)
!5430 = !DILocation(line: 1622, column: 7, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !322, file: !147, line: 1622, column: 7)
!5432 = !DILocation(line: 1622, column: 16, scope: !5431)
!5433 = !DILocation(line: 1622, column: 7, scope: !322)
!5434 = !DILocation(line: 1624, column: 21, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5431, file: !147, line: 1623, column: 3)
!5436 = !DILocation(line: 1624, column: 29, scope: !5435)
!5437 = !DILocation(line: 1624, column: 5, scope: !5435)
!5438 = !DILocation(line: 1625, column: 50, scope: !5435)
!5439 = !DILocation(line: 1625, column: 58, scope: !5435)
!5440 = !DILocation(line: 1625, column: 38, scope: !5435)
!5441 = !DILocation(line: 1625, column: 15, scope: !5435)
!5442 = !DILocation(line: 1625, column: 13, scope: !5435)
!5443 = !DILocation(line: 1626, column: 15, scope: !5435)
!5444 = !DILocation(line: 1626, column: 23, scope: !5435)
!5445 = !DILocation(line: 1626, column: 5, scope: !5435)
!5446 = !DILocation(line: 1627, column: 3, scope: !5435)
!5447 = !DILocation(line: 1628, column: 18, scope: !322)
!5448 = !DILocation(line: 1628, column: 26, scope: !322)
!5449 = !DILocation(line: 1628, column: 39, scope: !322)
!5450 = !DILocation(line: 1628, column: 3, scope: !322)
!5451 = !DILocation(line: 1629, column: 31, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !322, file: !147, line: 1629, column: 7)
!5453 = !DILocation(line: 1629, column: 39, scope: !5452)
!5454 = !DILocation(line: 1629, column: 8, scope: !5452)
!5455 = !DILocation(line: 1629, column: 7, scope: !322)
!5456 = !DILocation(line: 1631, column: 21, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5452, file: !147, line: 1630, column: 3)
!5458 = !DILocation(line: 1631, column: 5, scope: !5457)
!5459 = !DILocation(line: 1632, column: 5, scope: !5457)
!5460 = !DILocation(line: 1634, column: 7, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !322, file: !147, line: 1634, column: 7)
!5462 = !DILocation(line: 1634, column: 16, scope: !5461)
!5463 = !DILocation(line: 1634, column: 19, scope: !5461)
!5464 = !DILocation(line: 1634, column: 40, scope: !5461)
!5465 = !DILocation(line: 1635, column: 8, scope: !5461)
!5466 = !DILocation(line: 1635, column: 40, scope: !5461)
!5467 = !DILocation(line: 1635, column: 44, scope: !5461)
!5468 = !DILocation(line: 1635, column: 52, scope: !5461)
!5469 = !DILocation(line: 1634, column: 7, scope: !322)
!5470 = !DILocation(line: 1637, column: 24, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5461, file: !147, line: 1636, column: 3)
!5472 = !DILocation(line: 1637, column: 32, scope: !5471)
!5473 = !DILocation(line: 1637, column: 14, scope: !5471)
!5474 = !DILocation(line: 1637, column: 12, scope: !5471)
!5475 = !DILocation(line: 1638, column: 9, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5471, file: !147, line: 1638, column: 9)
!5477 = !DILocation(line: 1638, column: 16, scope: !5476)
!5478 = !DILocation(line: 1638, column: 21, scope: !5476)
!5479 = !DILocation(line: 1638, column: 56, scope: !5476)
!5480 = !DILocation(line: 1638, column: 25, scope: !5476)
!5481 = !DILocation(line: 1638, column: 9, scope: !5471)
!5482 = !DILocation(line: 1640, column: 23, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5476, file: !147, line: 1639, column: 5)
!5484 = !DILocation(line: 1640, column: 7, scope: !5483)
!5485 = !DILocation(line: 1642, column: 5, scope: !5483)
!5486 = !DILocation(line: 1646, column: 21, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5476, file: !147, line: 1644, column: 5)
!5488 = !DILocation(line: 1646, column: 29, scope: !5487)
!5489 = !DILocation(line: 1646, column: 9, scope: !5487)
!5490 = !DILocation(line: 1646, column: 43, scope: !5487)
!5491 = !DILocation(line: 1646, column: 52, scope: !5487)
!5492 = !DILocation(line: 1645, column: 16, scope: !5487)
!5493 = !DILocation(line: 1645, column: 14, scope: !5487)
!5494 = !DILocation(line: 1647, column: 11, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5487, file: !147, line: 1647, column: 11)
!5496 = !DILocation(line: 1647, column: 18, scope: !5495)
!5497 = !DILocation(line: 1647, column: 11, scope: !5487)
!5498 = !DILocation(line: 1649, column: 25, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5495, file: !147, line: 1648, column: 7)
!5500 = !DILocation(line: 1649, column: 9, scope: !5499)
!5501 = !DILocation(line: 1651, column: 7, scope: !5499)
!5502 = !DILocation(line: 1654, column: 25, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5495, file: !147, line: 1653, column: 7)
!5504 = !DILocation(line: 1654, column: 9, scope: !5503)
!5505 = !DILocation(line: 1658, column: 3, scope: !5471)
!5506 = !DILocation(line: 1661, column: 9, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !147, line: 1661, column: 9)
!5508 = distinct !DILexicalBlock(scope: !5461, file: !147, line: 1660, column: 3)
!5509 = !DILocation(line: 1661, column: 16, scope: !5507)
!5510 = !DILocation(line: 1661, column: 21, scope: !5507)
!5511 = !DILocation(line: 1661, column: 56, scope: !5507)
!5512 = !DILocation(line: 1661, column: 25, scope: !5507)
!5513 = !DILocation(line: 1661, column: 9, scope: !5508)
!5514 = !DILocation(line: 1663, column: 23, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5507, file: !147, line: 1662, column: 5)
!5516 = !DILocation(line: 1663, column: 7, scope: !5515)
!5517 = !DILocation(line: 1665, column: 5, scope: !5515)
!5518 = !DILocation(line: 1671, column: 24, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5507, file: !147, line: 1667, column: 5)
!5520 = !DILocation(line: 1671, column: 37, scope: !5519)
!5521 = !DILocation(line: 1670, column: 22, scope: !5519)
!5522 = !DILocation(line: 1669, column: 7, scope: !5519)
!5523 = !DILocation(line: 1672, column: 27, scope: !5519)
!5524 = !DILocation(line: 1672, column: 7, scope: !5519)
!5525 = !DILocation(line: 1675, column: 1, scope: !322)
!5526 = !DILocalVariable(name: "p_sess", arg: 1, scope: !329, file: !147, line: 1678, type: !150)
!5527 = !DILocation(line: 1678, column: 33, scope: !329)
!5528 = !DILocalVariable(name: "proto", scope: !329, file: !147, line: 1683, type: !19)
!5529 = !DILocation(line: 1683, column: 7, scope: !329)
!5530 = !DILocalVariable(name: "port", scope: !329, file: !147, line: 1684, type: !19)
!5531 = !DILocation(line: 1684, column: 7, scope: !329)
!5532 = !DILocalVariable(name: "p_raw_addr", scope: !329, file: !147, line: 1685, type: !1074)
!5533 = !DILocation(line: 1685, column: 24, scope: !329)
!5534 = !DILocalVariable(name: "is_ipv6", scope: !329, file: !147, line: 1686, type: !19)
!5535 = !DILocation(line: 1686, column: 7, scope: !329)
!5536 = !DILocation(line: 1686, column: 46, scope: !329)
!5537 = !DILocation(line: 1686, column: 54, scope: !329)
!5538 = !DILocation(line: 1686, column: 17, scope: !329)
!5539 = !DILocation(line: 1687, column: 16, scope: !329)
!5540 = !DILocation(line: 1687, column: 3, scope: !329)
!5541 = !DILocation(line: 1688, column: 16, scope: !329)
!5542 = !DILocation(line: 1688, column: 3, scope: !329)
!5543 = !DILocation(line: 1689, column: 27, scope: !329)
!5544 = !DILocation(line: 1689, column: 35, scope: !329)
!5545 = !DILocation(line: 1689, column: 3, scope: !329)
!5546 = !DILocation(line: 1690, column: 3, scope: !329)
!5547 = !DILocation(line: 1691, column: 8, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1691, column: 7)
!5549 = !DILocation(line: 1691, column: 7, scope: !329)
!5550 = !DILocation(line: 1693, column: 5, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5548, file: !147, line: 1692, column: 3)
!5552 = !DILocation(line: 1696, column: 3, scope: !329)
!5553 = !DILocation(line: 1697, column: 11, scope: !329)
!5554 = !DILocation(line: 1697, column: 9, scope: !329)
!5555 = !DILocation(line: 1698, column: 7, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1698, column: 7)
!5557 = !DILocation(line: 1698, column: 13, scope: !5556)
!5558 = !DILocation(line: 1698, column: 17, scope: !5556)
!5559 = !DILocation(line: 1698, column: 20, scope: !5556)
!5560 = !DILocation(line: 1698, column: 26, scope: !5556)
!5561 = !DILocation(line: 1698, column: 30, scope: !5556)
!5562 = !DILocation(line: 1698, column: 35, scope: !5556)
!5563 = !DILocation(line: 1698, column: 43, scope: !5556)
!5564 = !DILocation(line: 1698, column: 46, scope: !5556)
!5565 = !DILocation(line: 1698, column: 52, scope: !5556)
!5566 = !DILocation(line: 1698, column: 7, scope: !329)
!5567 = !DILocation(line: 1700, column: 21, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5556, file: !147, line: 1699, column: 3)
!5569 = !DILocation(line: 1700, column: 5, scope: !5568)
!5570 = !DILocation(line: 1701, column: 5, scope: !5568)
!5571 = !DILocation(line: 1704, column: 3, scope: !329)
!5572 = !DILocation(line: 1705, column: 7, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1705, column: 7)
!5574 = !DILocation(line: 1705, column: 13, scope: !5573)
!5575 = !DILocation(line: 1705, column: 7, scope: !329)
!5576 = !DILocation(line: 1707, column: 5, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5573, file: !147, line: 1706, column: 3)
!5578 = !DILocation(line: 1708, column: 18, scope: !5577)
!5579 = !DILocation(line: 1708, column: 16, scope: !5577)
!5580 = !DILocation(line: 1709, column: 3, scope: !5577)
!5581 = !DILocation(line: 1712, column: 18, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5573, file: !147, line: 1711, column: 3)
!5583 = !DILocation(line: 1712, column: 16, scope: !5582)
!5584 = !DILocation(line: 1714, column: 8, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1714, column: 7)
!5586 = !DILocation(line: 1714, column: 7, scope: !329)
!5587 = !DILocation(line: 1716, column: 5, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5585, file: !147, line: 1715, column: 3)
!5589 = !DILocation(line: 1719, column: 3, scope: !329)
!5590 = !DILocation(line: 1720, column: 8, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1720, column: 7)
!5592 = !DILocation(line: 1720, column: 34, scope: !5591)
!5593 = !DILocation(line: 1720, column: 37, scope: !5591)
!5594 = !DILocation(line: 1720, column: 7, scope: !329)
!5595 = !DILocation(line: 1722, column: 5, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5591, file: !147, line: 1721, column: 3)
!5597 = !DILocation(line: 1724, column: 10, scope: !329)
!5598 = !DILocation(line: 1724, column: 8, scope: !329)
!5599 = !DILocation(line: 1725, column: 7, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1725, column: 7)
!5601 = !DILocation(line: 1725, column: 12, scope: !5600)
!5602 = !DILocation(line: 1725, column: 16, scope: !5600)
!5603 = !DILocation(line: 1725, column: 19, scope: !5600)
!5604 = !DILocation(line: 1725, column: 24, scope: !5600)
!5605 = !DILocation(line: 1725, column: 7, scope: !329)
!5606 = !DILocation(line: 1727, column: 5, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5600, file: !147, line: 1726, column: 3)
!5608 = !DILocation(line: 1729, column: 31, scope: !329)
!5609 = !DILocation(line: 1729, column: 39, scope: !329)
!5610 = !DILocation(line: 1729, column: 56, scope: !329)
!5611 = !DILocation(line: 1729, column: 64, scope: !329)
!5612 = !DILocation(line: 1729, column: 3, scope: !329)
!5613 = !DILocation(line: 1730, column: 7, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1730, column: 7)
!5615 = !DILocation(line: 1730, column: 13, scope: !5614)
!5616 = !DILocation(line: 1730, column: 7, scope: !329)
!5617 = !DILocation(line: 1732, column: 39, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5614, file: !147, line: 1731, column: 3)
!5619 = !DILocation(line: 1732, column: 47, scope: !5618)
!5620 = !DILocation(line: 1732, column: 64, scope: !5618)
!5621 = !DILocation(line: 1732, column: 5, scope: !5618)
!5622 = !DILocation(line: 1733, column: 3, scope: !5618)
!5623 = !DILocation(line: 1736, column: 39, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5614, file: !147, line: 1735, column: 3)
!5625 = !DILocation(line: 1736, column: 47, scope: !5624)
!5626 = !DILocation(line: 1736, column: 64, scope: !5624)
!5627 = !DILocation(line: 1736, column: 5, scope: !5624)
!5628 = !DILocation(line: 1738, column: 33, scope: !329)
!5629 = !DILocation(line: 1738, column: 41, scope: !329)
!5630 = !DILocation(line: 1738, column: 75, scope: !329)
!5631 = !DILocation(line: 1738, column: 58, scope: !329)
!5632 = !DILocation(line: 1738, column: 3, scope: !329)
!5633 = !DILocation(line: 1743, column: 8, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !329, file: !147, line: 1743, column: 7)
!5635 = !DILocation(line: 1743, column: 7, scope: !329)
!5636 = !DILocation(line: 1745, column: 42, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !147, line: 1745, column: 9)
!5638 = distinct !DILexicalBlock(scope: !5634, file: !147, line: 1744, column: 3)
!5639 = !DILocation(line: 1745, column: 50, scope: !5637)
!5640 = !DILocation(line: 1746, column: 42, scope: !5637)
!5641 = !DILocation(line: 1746, column: 50, scope: !5637)
!5642 = !DILocation(line: 1745, column: 10, scope: !5637)
!5643 = !DILocation(line: 1746, column: 67, scope: !5637)
!5644 = !DILocation(line: 1747, column: 55, scope: !5637)
!5645 = !DILocation(line: 1747, column: 38, scope: !5637)
!5646 = !DILocation(line: 1747, column: 9, scope: !5637)
!5647 = !DILocation(line: 1745, column: 9, scope: !5638)
!5648 = !DILocation(line: 1749, column: 23, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5637, file: !147, line: 1748, column: 5)
!5650 = !DILocation(line: 1749, column: 7, scope: !5649)
!5651 = !DILocation(line: 1750, column: 20, scope: !5649)
!5652 = !DILocation(line: 1750, column: 7, scope: !5649)
!5653 = !DILocation(line: 1751, column: 7, scope: !5649)
!5654 = !DILocation(line: 1753, column: 3, scope: !5638)
!5655 = !DILocation(line: 1754, column: 19, scope: !329)
!5656 = !DILocation(line: 1754, column: 3, scope: !329)
!5657 = !DILocation(line: 1756, column: 3, scope: !329)
!5658 = !DILocation(line: 1758, column: 19, scope: !329)
!5659 = !DILocation(line: 1758, column: 3, scope: !329)
!5660 = !DILocation(line: 1759, column: 1, scope: !329)
!5661 = distinct !DISubprogram(name: "handle_stou", scope: !147, file: !147, line: 1779, type: !148, scopeLine: 1780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5662 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5661, file: !147, line: 1779, type: !150)
!5663 = !DILocation(line: 1779, column: 33, scope: !5661)
!5664 = !DILocation(line: 1781, column: 24, scope: !5661)
!5665 = !DILocation(line: 1781, column: 3, scope: !5661)
!5666 = !DILocation(line: 1782, column: 1, scope: !5661)
!5667 = distinct !DISubprogram(name: "handle_stat", scope: !147, file: !147, line: 1825, type: !148, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5668 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5667, file: !147, line: 1825, type: !150)
!5669 = !DILocation(line: 1825, column: 33, scope: !5667)
!5670 = !DILocation(line: 1827, column: 26, scope: !5667)
!5671 = !DILocation(line: 1827, column: 3, scope: !5667)
!5672 = !DILocation(line: 1828, column: 23, scope: !5667)
!5673 = !DILocation(line: 1828, column: 3, scope: !5667)
!5674 = !DILocation(line: 1829, column: 23, scope: !5667)
!5675 = !DILocation(line: 1829, column: 43, scope: !5667)
!5676 = !DILocation(line: 1829, column: 51, scope: !5667)
!5677 = !DILocation(line: 1829, column: 31, scope: !5667)
!5678 = !DILocation(line: 1829, column: 3, scope: !5667)
!5679 = !DILocation(line: 1830, column: 23, scope: !5667)
!5680 = !DILocation(line: 1830, column: 3, scope: !5667)
!5681 = !DILocation(line: 1831, column: 23, scope: !5667)
!5682 = !DILocation(line: 1831, column: 3, scope: !5667)
!5683 = !DILocation(line: 1832, column: 23, scope: !5667)
!5684 = !DILocation(line: 1832, column: 43, scope: !5667)
!5685 = !DILocation(line: 1832, column: 51, scope: !5667)
!5686 = !DILocation(line: 1832, column: 31, scope: !5667)
!5687 = !DILocation(line: 1832, column: 3, scope: !5667)
!5688 = !DILocation(line: 1833, column: 23, scope: !5667)
!5689 = !DILocation(line: 1833, column: 3, scope: !5667)
!5690 = !DILocation(line: 1834, column: 23, scope: !5667)
!5691 = !DILocation(line: 1834, column: 3, scope: !5667)
!5692 = !DILocation(line: 1835, column: 7, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5667, file: !147, line: 1835, column: 7)
!5694 = !DILocation(line: 1835, column: 15, scope: !5693)
!5695 = !DILocation(line: 1835, column: 7, scope: !5667)
!5696 = !DILocation(line: 1837, column: 25, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5693, file: !147, line: 1836, column: 3)
!5698 = !DILocation(line: 1837, column: 5, scope: !5697)
!5699 = !DILocation(line: 1838, column: 3, scope: !5697)
!5700 = !DILocation(line: 1841, column: 25, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5693, file: !147, line: 1840, column: 3)
!5702 = !DILocation(line: 1841, column: 5, scope: !5701)
!5703 = !DILocation(line: 1843, column: 7, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5667, file: !147, line: 1843, column: 7)
!5705 = !DILocation(line: 1843, column: 15, scope: !5704)
!5706 = !DILocation(line: 1843, column: 27, scope: !5704)
!5707 = !DILocation(line: 1843, column: 7, scope: !5667)
!5708 = !DILocation(line: 1845, column: 25, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5704, file: !147, line: 1844, column: 3)
!5710 = !DILocation(line: 1845, column: 5, scope: !5709)
!5711 = !DILocation(line: 1846, column: 3, scope: !5709)
!5712 = !DILocation(line: 1849, column: 25, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5704, file: !147, line: 1848, column: 3)
!5714 = !DILocation(line: 1849, column: 5, scope: !5713)
!5715 = !DILocation(line: 1850, column: 25, scope: !5713)
!5716 = !DILocation(line: 1850, column: 58, scope: !5713)
!5717 = !DILocation(line: 1850, column: 66, scope: !5713)
!5718 = !DILocation(line: 1850, column: 33, scope: !5713)
!5719 = !DILocation(line: 1850, column: 5, scope: !5713)
!5720 = !DILocation(line: 1851, column: 25, scope: !5713)
!5721 = !DILocation(line: 1851, column: 5, scope: !5713)
!5722 = !DILocation(line: 1853, column: 7, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5667, file: !147, line: 1853, column: 7)
!5724 = !DILocation(line: 1853, column: 36, scope: !5723)
!5725 = !DILocation(line: 1853, column: 7, scope: !5667)
!5726 = !DILocation(line: 1855, column: 25, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5723, file: !147, line: 1854, column: 3)
!5728 = !DILocation(line: 1855, column: 5, scope: !5727)
!5729 = !DILocation(line: 1856, column: 3, scope: !5727)
!5730 = !DILocation(line: 1859, column: 25, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5723, file: !147, line: 1858, column: 3)
!5732 = !DILocation(line: 1859, column: 5, scope: !5731)
!5733 = !DILocation(line: 1860, column: 25, scope: !5731)
!5734 = !DILocation(line: 1861, column: 32, scope: !5731)
!5735 = !DILocation(line: 1861, column: 7, scope: !5731)
!5736 = !DILocation(line: 1860, column: 5, scope: !5731)
!5737 = !DILocation(line: 1862, column: 25, scope: !5731)
!5738 = !DILocation(line: 1862, column: 5, scope: !5731)
!5739 = !DILocation(line: 1864, column: 7, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5667, file: !147, line: 1864, column: 7)
!5741 = !DILocation(line: 1864, column: 15, scope: !5740)
!5742 = !DILocation(line: 1864, column: 7, scope: !5667)
!5743 = !DILocation(line: 1866, column: 25, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5740, file: !147, line: 1865, column: 3)
!5745 = !DILocation(line: 1866, column: 5, scope: !5744)
!5746 = !DILocation(line: 1867, column: 3, scope: !5744)
!5747 = !DILocation(line: 1870, column: 25, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5740, file: !147, line: 1869, column: 3)
!5749 = !DILocation(line: 1870, column: 5, scope: !5748)
!5750 = !DILocation(line: 1872, column: 7, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5667, file: !147, line: 1872, column: 7)
!5752 = !DILocation(line: 1872, column: 15, scope: !5751)
!5753 = !DILocation(line: 1872, column: 7, scope: !5667)
!5754 = !DILocation(line: 1874, column: 25, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5751, file: !147, line: 1873, column: 3)
!5756 = !DILocation(line: 1874, column: 5, scope: !5755)
!5757 = !DILocation(line: 1875, column: 3, scope: !5755)
!5758 = !DILocation(line: 1878, column: 25, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5751, file: !147, line: 1877, column: 3)
!5760 = !DILocation(line: 1878, column: 5, scope: !5759)
!5761 = !DILocation(line: 1880, column: 7, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5667, file: !147, line: 1880, column: 7)
!5763 = !DILocation(line: 1880, column: 15, scope: !5762)
!5764 = !DILocation(line: 1880, column: 27, scope: !5762)
!5765 = !DILocation(line: 1880, column: 7, scope: !5667)
!5766 = !DILocation(line: 1882, column: 25, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5762, file: !147, line: 1881, column: 3)
!5768 = !DILocation(line: 1882, column: 5, scope: !5767)
!5769 = !DILocation(line: 1883, column: 25, scope: !5767)
!5770 = !DILocation(line: 1883, column: 58, scope: !5767)
!5771 = !DILocation(line: 1883, column: 66, scope: !5767)
!5772 = !DILocation(line: 1883, column: 33, scope: !5767)
!5773 = !DILocation(line: 1883, column: 5, scope: !5767)
!5774 = !DILocation(line: 1884, column: 25, scope: !5767)
!5775 = !DILocation(line: 1884, column: 5, scope: !5767)
!5776 = !DILocation(line: 1885, column: 3, scope: !5767)
!5777 = !DILocation(line: 1886, column: 23, scope: !5667)
!5778 = !DILocation(line: 1886, column: 3, scope: !5667)
!5779 = !DILocation(line: 1888, column: 19, scope: !5667)
!5780 = !DILocation(line: 1888, column: 3, scope: !5667)
!5781 = !DILocation(line: 1889, column: 1, scope: !5667)
!5782 = distinct !DISubprogram(name: "handle_stat_file", scope: !147, file: !147, line: 1892, type: !148, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5783 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5782, file: !147, line: 1892, type: !150)
!5784 = !DILocation(line: 1892, column: 38, scope: !5782)
!5785 = !DILocation(line: 1894, column: 21, scope: !5782)
!5786 = !DILocation(line: 1894, column: 3, scope: !5782)
!5787 = !DILocation(line: 1895, column: 1, scope: !5782)
!5788 = distinct !DISubprogram(name: "handle_logged_in_user", scope: !147, file: !147, line: 1950, type: !148, scopeLine: 1951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5789 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5788, file: !147, line: 1950, type: !150)
!5790 = !DILocation(line: 1950, column: 55, scope: !5788)
!5791 = !DILocation(line: 1952, column: 7, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5788, file: !147, line: 1952, column: 7)
!5793 = !DILocation(line: 1952, column: 15, scope: !5792)
!5794 = !DILocation(line: 1952, column: 7, scope: !5788)
!5795 = !DILocation(line: 1954, column: 21, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5792, file: !147, line: 1953, column: 3)
!5797 = !DILocation(line: 1954, column: 5, scope: !5796)
!5798 = !DILocation(line: 1955, column: 3, scope: !5796)
!5799 = !DILocation(line: 1956, column: 23, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5792, file: !147, line: 1956, column: 12)
!5801 = !DILocation(line: 1956, column: 31, scope: !5800)
!5802 = !DILocation(line: 1956, column: 42, scope: !5800)
!5803 = !DILocation(line: 1956, column: 50, scope: !5800)
!5804 = !DILocation(line: 1956, column: 12, scope: !5800)
!5805 = !DILocation(line: 1956, column: 12, scope: !5792)
!5806 = !DILocation(line: 1958, column: 21, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5800, file: !147, line: 1957, column: 3)
!5808 = !DILocation(line: 1958, column: 5, scope: !5807)
!5809 = !DILocation(line: 1959, column: 3, scope: !5807)
!5810 = !DILocation(line: 1962, column: 21, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5800, file: !147, line: 1961, column: 3)
!5812 = !DILocation(line: 1962, column: 5, scope: !5811)
!5813 = !DILocation(line: 1964, column: 1, scope: !5788)
!5814 = distinct !DISubprogram(name: "handle_logged_in_pass", scope: !147, file: !147, line: 1966, type: !148, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!5815 = !DILocalVariable(name: "p_sess", arg: 1, scope: !5814, file: !147, line: 1966, type: !150)
!5816 = !DILocation(line: 1966, column: 55, scope: !5814)
!5817 = !DILocation(line: 1968, column: 19, scope: !5814)
!5818 = !DILocation(line: 1968, column: 3, scope: !5814)
!5819 = !DILocation(line: 1969, column: 1, scope: !5814)
!5820 = !DILocalVariable(name: "p_sess", arg: 1, scope: !267, file: !147, line: 801, type: !150)
!5821 = !DILocation(line: 801, column: 39, scope: !267)
!5822 = !DILocalVariable(name: "full_details", arg: 2, scope: !267, file: !147, line: 801, type: !19)
!5823 = !DILocation(line: 801, column: 51, scope: !267)
!5824 = !DILocalVariable(name: "stat_cmd", arg: 3, scope: !267, file: !147, line: 801, type: !19)
!5825 = !DILocation(line: 801, column: 69, scope: !267)
!5826 = !DILocalVariable(name: "dir_allow_read", scope: !267, file: !147, line: 807, type: !19)
!5827 = !DILocation(line: 807, column: 7, scope: !267)
!5828 = !DILocalVariable(name: "p_dir", scope: !267, file: !147, line: 808, type: !5829)
!5829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5830, size: 64)
!5830 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_dir", file: !609, line: 8, flags: DIFlagFwdDecl)
!5831 = !DILocation(line: 808, column: 27, scope: !267)
!5832 = !DILocalVariable(name: "retval", scope: !267, file: !147, line: 809, type: !19)
!5833 = !DILocation(line: 809, column: 7, scope: !267)
!5834 = !DILocalVariable(name: "use_control", scope: !267, file: !147, line: 810, type: !19)
!5835 = !DILocation(line: 810, column: 7, scope: !267)
!5836 = !DILocation(line: 811, column: 3, scope: !267)
!5837 = !DILocation(line: 812, column: 3, scope: !267)
!5838 = !DILocation(line: 814, column: 3, scope: !267)
!5839 = !DILocation(line: 815, column: 8, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !267, file: !147, line: 815, column: 7)
!5841 = !DILocation(line: 815, column: 17, scope: !5840)
!5842 = !DILocation(line: 815, column: 45, scope: !5840)
!5843 = !DILocation(line: 815, column: 21, scope: !5840)
!5844 = !DILocation(line: 815, column: 7, scope: !267)
!5845 = !DILocation(line: 817, column: 5, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5840, file: !147, line: 816, column: 3)
!5847 = !DILocation(line: 822, column: 21, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !267, file: !147, line: 822, column: 7)
!5849 = !DILocation(line: 822, column: 29, scope: !5848)
!5850 = !DILocation(line: 822, column: 8, scope: !5848)
!5851 = !DILocation(line: 822, column: 42, scope: !5848)
!5852 = !DILocation(line: 823, column: 24, scope: !5848)
!5853 = !DILocation(line: 823, column: 32, scope: !5848)
!5854 = !DILocation(line: 823, column: 7, scope: !5848)
!5855 = !DILocation(line: 823, column: 48, scope: !5848)
!5856 = !DILocation(line: 822, column: 7, scope: !267)
!5857 = !DILocation(line: 826, column: 21, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5848, file: !147, line: 824, column: 3)
!5859 = !DILocation(line: 826, column: 29, scope: !5858)
!5860 = !DILocation(line: 826, column: 5, scope: !5858)
!5861 = !DILocation(line: 828, column: 5, scope: !5858)
!5862 = !DILocation(line: 829, column: 3, scope: !5858)
!5863 = !DILocation(line: 833, column: 30, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5848, file: !147, line: 831, column: 3)
!5865 = !DILocation(line: 833, column: 38, scope: !5864)
!5866 = !DILocation(line: 833, column: 5, scope: !5864)
!5867 = !DILocation(line: 835, column: 8, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !267, file: !147, line: 835, column: 7)
!5869 = !DILocation(line: 835, column: 7, scope: !267)
!5870 = !DILocation(line: 837, column: 34, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5868, file: !147, line: 836, column: 3)
!5872 = !DILocation(line: 837, column: 5, scope: !5871)
!5873 = !DILocation(line: 838, column: 10, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5871, file: !147, line: 838, column: 9)
!5875 = !DILocation(line: 838, column: 9, scope: !5871)
!5876 = !DILocation(line: 840, column: 23, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5874, file: !147, line: 839, column: 5)
!5878 = !DILocation(line: 840, column: 7, scope: !5877)
!5879 = !DILocation(line: 841, column: 7, scope: !5877)
!5880 = !DILocation(line: 844, column: 13, scope: !5871)
!5881 = !DILocation(line: 844, column: 11, scope: !5871)
!5882 = !DILocation(line: 845, column: 9, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5871, file: !147, line: 845, column: 9)
!5884 = !DILocation(line: 845, column: 15, scope: !5883)
!5885 = !DILocation(line: 845, column: 9, scope: !5871)
!5886 = !DILocation(line: 848, column: 7, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !147, line: 846, column: 5)
!5888 = !DILocation(line: 849, column: 7, scope: !5887)
!5889 = !DILocation(line: 850, column: 5, scope: !5887)
!5890 = !DILocalVariable(name: "locate_result", scope: !5891, file: !147, line: 853, type: !5382)
!5891 = distinct !DILexicalBlock(scope: !5883, file: !147, line: 852, column: 5)
!5892 = !DILocation(line: 853, column: 32, scope: !5891)
!5893 = !DILocation(line: 854, column: 9, scope: !5891)
!5894 = !DILocation(line: 855, column: 25, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5891, file: !147, line: 855, column: 11)
!5896 = !DILocation(line: 855, column: 11, scope: !5895)
!5897 = !DILocation(line: 855, column: 11, scope: !5891)
!5898 = !DILocation(line: 860, column: 9, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5895, file: !147, line: 856, column: 7)
!5900 = !DILocation(line: 861, column: 9, scope: !5899)
!5901 = !DILocation(line: 865, column: 13, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5899, file: !147, line: 865, column: 13)
!5903 = !DILocation(line: 865, column: 13, scope: !5899)
!5904 = !DILocation(line: 867, column: 11, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5902, file: !147, line: 866, column: 9)
!5906 = !DILocation(line: 868, column: 9, scope: !5905)
!5907 = !DILocation(line: 869, column: 7, scope: !5899)
!5908 = !DILocation(line: 871, column: 3, scope: !5871)
!5909 = !DILocation(line: 872, column: 7, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !267, file: !147, line: 872, column: 7)
!5911 = !DILocation(line: 872, column: 13, scope: !5910)
!5912 = !DILocation(line: 872, column: 7, scope: !267)
!5913 = !DILocation(line: 875, column: 13, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5910, file: !147, line: 873, column: 3)
!5915 = !DILocation(line: 875, column: 11, scope: !5914)
!5916 = !DILocation(line: 876, column: 3, scope: !5914)
!5917 = !DILocation(line: 878, column: 7, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !267, file: !147, line: 878, column: 7)
!5919 = !DILocation(line: 878, column: 7, scope: !267)
!5920 = !DILocation(line: 880, column: 17, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5918, file: !147, line: 879, column: 3)
!5922 = !DILocation(line: 881, column: 5, scope: !5921)
!5923 = !DILocation(line: 882, column: 28, scope: !5921)
!5924 = !DILocation(line: 882, column: 5, scope: !5921)
!5925 = !DILocation(line: 883, column: 3, scope: !5921)
!5926 = !DILocalVariable(name: "remote_fd", scope: !5927, file: !147, line: 886, type: !19)
!5927 = distinct !DILexicalBlock(scope: !5918, file: !147, line: 885, column: 3)
!5928 = !DILocation(line: 886, column: 9, scope: !5927)
!5929 = !DILocation(line: 887, column: 7, scope: !5927)
!5930 = !DILocation(line: 886, column: 21, scope: !5927)
!5931 = !DILocation(line: 888, column: 37, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5927, file: !147, line: 888, column: 9)
!5933 = !DILocation(line: 888, column: 9, scope: !5932)
!5934 = !DILocation(line: 888, column: 9, scope: !5927)
!5935 = !DILocation(line: 890, column: 7, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5932, file: !147, line: 889, column: 5)
!5937 = !DILocation(line: 893, column: 7, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !267, file: !147, line: 893, column: 7)
!5939 = !DILocation(line: 893, column: 15, scope: !5938)
!5940 = !DILocation(line: 893, column: 28, scope: !5938)
!5941 = !DILocation(line: 893, column: 31, scope: !5938)
!5942 = !DILocation(line: 893, column: 37, scope: !5938)
!5943 = !DILocation(line: 893, column: 40, scope: !5938)
!5944 = !DILocation(line: 893, column: 7, scope: !267)
!5945 = !DILocation(line: 895, column: 26, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5938, file: !147, line: 894, column: 3)
!5947 = !DILocation(line: 895, column: 5, scope: !5946)
!5948 = !DILocation(line: 896, column: 48, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5946, file: !147, line: 896, column: 9)
!5950 = !DILocation(line: 896, column: 10, scope: !5949)
!5951 = !DILocation(line: 896, column: 9, scope: !5946)
!5952 = !DILocation(line: 898, column: 22, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5949, file: !147, line: 897, column: 5)
!5954 = !DILocation(line: 899, column: 5, scope: !5953)
!5955 = !DILocation(line: 900, column: 3, scope: !5946)
!5956 = !DILocation(line: 901, column: 7, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !267, file: !147, line: 901, column: 7)
!5958 = !DILocation(line: 901, column: 13, scope: !5957)
!5959 = !DILocation(line: 901, column: 18, scope: !5957)
!5960 = !DILocation(line: 901, column: 21, scope: !5957)
!5961 = !DILocation(line: 901, column: 7, scope: !267)
!5962 = !DILocation(line: 903, column: 41, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5957, file: !147, line: 902, column: 3)
!5964 = !DILocation(line: 903, column: 49, scope: !5963)
!5965 = !DILocation(line: 903, column: 62, scope: !5963)
!5966 = !DILocation(line: 905, column: 56, scope: !5963)
!5967 = !DILocation(line: 903, column: 14, scope: !5963)
!5968 = !DILocation(line: 903, column: 12, scope: !5963)
!5969 = !DILocation(line: 906, column: 3, scope: !5963)
!5970 = !DILocation(line: 907, column: 8, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !267, file: !147, line: 907, column: 7)
!5972 = !DILocation(line: 907, column: 7, scope: !267)
!5973 = !DILocation(line: 909, column: 43, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !147, line: 909, column: 9)
!5975 = distinct !DILexicalBlock(scope: !5971, file: !147, line: 908, column: 3)
!5976 = !DILocation(line: 909, column: 9, scope: !5974)
!5977 = !DILocation(line: 909, column: 51, scope: !5974)
!5978 = !DILocation(line: 909, column: 56, scope: !5974)
!5979 = !DILocation(line: 909, column: 59, scope: !5974)
!5980 = !DILocation(line: 909, column: 66, scope: !5974)
!5981 = !DILocation(line: 909, column: 9, scope: !5975)
!5982 = !DILocation(line: 911, column: 14, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5974, file: !147, line: 910, column: 5)
!5984 = !DILocation(line: 912, column: 5, scope: !5983)
!5985 = !DILocation(line: 913, column: 3, scope: !5975)
!5986 = !DILocation(line: 914, column: 7, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !267, file: !147, line: 914, column: 7)
!5988 = !DILocation(line: 914, column: 7, scope: !267)
!5989 = !DILocation(line: 916, column: 21, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5987, file: !147, line: 915, column: 3)
!5991 = !DILocation(line: 916, column: 5, scope: !5990)
!5992 = !DILocation(line: 917, column: 3, scope: !5990)
!5993 = !DILocation(line: 918, column: 12, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5987, file: !147, line: 918, column: 12)
!5995 = !DILocation(line: 918, column: 19, scope: !5994)
!5996 = !DILocation(line: 918, column: 12, scope: !5987)
!5997 = !DILocation(line: 920, column: 10, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !147, line: 920, column: 9)
!5999 = distinct !DILexicalBlock(scope: !5994, file: !147, line: 919, column: 3)
!6000 = !DILocation(line: 920, column: 18, scope: !5998)
!6001 = !DILocation(line: 920, column: 9, scope: !5999)
!6002 = !DILocation(line: 922, column: 23, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5998, file: !147, line: 921, column: 5)
!6004 = !DILocation(line: 922, column: 7, scope: !6003)
!6005 = !DILocation(line: 924, column: 5, scope: !6003)
!6006 = !DILocation(line: 925, column: 3, scope: !5999)
!6007 = !DILocation(line: 926, column: 12, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5994, file: !147, line: 926, column: 12)
!6009 = !DILocation(line: 926, column: 18, scope: !6008)
!6010 = !DILocation(line: 926, column: 23, scope: !6008)
!6011 = !DILocation(line: 926, column: 27, scope: !6008)
!6012 = !DILocation(line: 926, column: 12, scope: !5994)
!6013 = !DILocation(line: 928, column: 21, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6008, file: !147, line: 927, column: 3)
!6015 = !DILocation(line: 928, column: 5, scope: !6014)
!6016 = !DILocation(line: 930, column: 3, scope: !6014)
!6017 = !DILocation(line: 933, column: 21, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6008, file: !147, line: 932, column: 3)
!6019 = !DILocation(line: 933, column: 5, scope: !6018)
!6020 = !DILocation(line: 935, column: 14, scope: !267)
!6021 = !DILocation(line: 935, column: 3, scope: !267)
!6022 = !DILocation(line: 937, column: 7, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !267, file: !147, line: 937, column: 7)
!6024 = !DILocation(line: 937, column: 7, scope: !267)
!6025 = !DILocation(line: 939, column: 26, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6023, file: !147, line: 938, column: 3)
!6027 = !DILocation(line: 939, column: 5, scope: !6026)
!6028 = !DILocation(line: 940, column: 3, scope: !6026)
!6029 = !DILocation(line: 941, column: 8, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !267, file: !147, line: 941, column: 7)
!6031 = !DILocation(line: 941, column: 7, scope: !267)
!6032 = !DILocation(line: 943, column: 18, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !147, line: 942, column: 3)
!6034 = !DILocation(line: 943, column: 5, scope: !6033)
!6035 = !DILocation(line: 944, column: 18, scope: !6033)
!6036 = !DILocation(line: 944, column: 5, scope: !6033)
!6037 = !DILocation(line: 945, column: 3, scope: !6033)
!6038 = !DILocation(line: 946, column: 1, scope: !267)
!6039 = distinct !DISubprogram(name: "data_transfer_checks_ok", scope: !147, file: !147, line: 1898, type: !6040, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{!19, !150}
!6042 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6039, file: !147, line: 1898, type: !150)
!6043 = !DILocation(line: 1898, column: 45, scope: !6039)
!6044 = !DILocation(line: 1900, column: 20, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6039, file: !147, line: 1900, column: 7)
!6046 = !DILocation(line: 1900, column: 8, scope: !6045)
!6047 = !DILocation(line: 1900, column: 28, scope: !6045)
!6048 = !DILocation(line: 1900, column: 44, scope: !6045)
!6049 = !DILocation(line: 1900, column: 32, scope: !6045)
!6050 = !DILocation(line: 1900, column: 7, scope: !6039)
!6051 = !DILocation(line: 1902, column: 21, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6045, file: !147, line: 1901, column: 3)
!6053 = !DILocation(line: 1902, column: 5, scope: !6052)
!6054 = !DILocation(line: 1903, column: 5, scope: !6052)
!6055 = !DILocation(line: 1905, column: 7, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6039, file: !147, line: 1905, column: 7)
!6057 = !DILocation(line: 1905, column: 26, scope: !6056)
!6058 = !DILocation(line: 1905, column: 30, scope: !6056)
!6059 = !DILocation(line: 1905, column: 38, scope: !6056)
!6060 = !DILocation(line: 1905, column: 51, scope: !6056)
!6061 = !DILocation(line: 1906, column: 9, scope: !6056)
!6062 = !DILocation(line: 1906, column: 38, scope: !6056)
!6063 = !DILocation(line: 1906, column: 42, scope: !6056)
!6064 = !DILocation(line: 1906, column: 50, scope: !6056)
!6065 = !DILocation(line: 1906, column: 64, scope: !6056)
!6066 = !DILocation(line: 1907, column: 9, scope: !6056)
!6067 = !DILocation(line: 1907, column: 37, scope: !6056)
!6068 = !DILocation(line: 1907, column: 40, scope: !6056)
!6069 = !DILocation(line: 1907, column: 48, scope: !6056)
!6070 = !DILocation(line: 1905, column: 7, scope: !6039)
!6071 = !DILocation(line: 1910, column: 7, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6056, file: !147, line: 1908, column: 3)
!6073 = !DILocation(line: 1909, column: 5, scope: !6072)
!6074 = !DILocation(line: 1911, column: 5, scope: !6072)
!6075 = !DILocation(line: 1913, column: 3, scope: !6039)
!6076 = !DILocation(line: 1914, column: 1, scope: !6039)
!6077 = !DILocalVariable(name: "p_str", arg: 1, scope: !240, file: !147, line: 1917, type: !243)
!6078 = !DILocation(line: 1917, column: 29, scope: !240)
!6079 = !DILocalVariable(name: "p_sess", arg: 2, scope: !240, file: !147, line: 1917, type: !150)
!6080 = !DILocation(line: 1917, column: 56, scope: !240)
!6081 = !DILocalVariable(name: "len", scope: !240, file: !147, line: 1919, type: !26)
!6082 = !DILocation(line: 1919, column: 16, scope: !240)
!6083 = !DILocation(line: 1919, column: 33, scope: !240)
!6084 = !DILocation(line: 1919, column: 22, scope: !240)
!6085 = !DILocation(line: 1920, column: 7, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !240, file: !147, line: 1920, column: 7)
!6087 = !DILocation(line: 1920, column: 11, scope: !6086)
!6088 = !DILocation(line: 1920, column: 15, scope: !6086)
!6089 = !DILocation(line: 1920, column: 34, scope: !6086)
!6090 = !DILocation(line: 1920, column: 18, scope: !6086)
!6091 = !DILocation(line: 1920, column: 44, scope: !6086)
!6092 = !DILocation(line: 1920, column: 7, scope: !240)
!6093 = !DILocation(line: 1923, column: 9, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !147, line: 1923, column: 9)
!6095 = distinct !DILexicalBlock(scope: !6086, file: !147, line: 1921, column: 3)
!6096 = !DILocation(line: 1923, column: 13, scope: !6094)
!6097 = !DILocation(line: 1923, column: 18, scope: !6094)
!6098 = !DILocation(line: 1923, column: 37, scope: !6094)
!6099 = !DILocation(line: 1923, column: 21, scope: !6094)
!6100 = !DILocation(line: 1923, column: 47, scope: !6094)
!6101 = !DILocation(line: 1923, column: 9, scope: !6095)
!6102 = !DILocation(line: 1925, column: 22, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6094, file: !147, line: 1924, column: 5)
!6104 = !DILocation(line: 1925, column: 7, scope: !6103)
!6105 = !DILocation(line: 1926, column: 16, scope: !6103)
!6106 = !DILocation(line: 1926, column: 24, scope: !6103)
!6107 = !DILocation(line: 1926, column: 32, scope: !6103)
!6108 = !DILocation(line: 1926, column: 7, scope: !6103)
!6109 = !DILocation(line: 1927, column: 22, scope: !6103)
!6110 = !DILocation(line: 1927, column: 7, scope: !6103)
!6111 = !DILocation(line: 1928, column: 5, scope: !6103)
!6112 = !DILocation(line: 1929, column: 14, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6094, file: !147, line: 1929, column: 14)
!6114 = !DILocation(line: 1929, column: 40, scope: !6113)
!6115 = !DILocation(line: 1929, column: 43, scope: !6113)
!6116 = !DILocation(line: 1929, column: 47, scope: !6113)
!6117 = !DILocation(line: 1929, column: 14, scope: !6094)
!6118 = !DILocalVariable(name: "p_user", scope: !6119, file: !147, line: 1932, type: !6120)
!6119 = distinct !DILexicalBlock(scope: !6113, file: !147, line: 1930, column: 5)
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 64)
!6121 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_user", file: !220, line: 8, flags: DIFlagFwdDecl)
!6122 = !DILocation(line: 1932, column: 32, scope: !6119)
!6123 = !DILocation(line: 1933, column: 28, scope: !6119)
!6124 = !DILocation(line: 1933, column: 7, scope: !6119)
!6125 = !DILocation(line: 1934, column: 7, scope: !6119)
!6126 = !DILocation(line: 1935, column: 7, scope: !6119)
!6127 = !DILocation(line: 1936, column: 16, scope: !6119)
!6128 = !DILocation(line: 1936, column: 14, scope: !6119)
!6129 = !DILocation(line: 1937, column: 11, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6119, file: !147, line: 1937, column: 11)
!6131 = !DILocation(line: 1937, column: 18, scope: !6130)
!6132 = !DILocation(line: 1937, column: 11, scope: !6119)
!6133 = !DILocation(line: 1939, column: 24, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6130, file: !147, line: 1938, column: 7)
!6135 = !DILocation(line: 1939, column: 60, scope: !6134)
!6136 = !DILocation(line: 1939, column: 31, scope: !6134)
!6137 = !DILocation(line: 1939, column: 9, scope: !6134)
!6138 = !DILocation(line: 1940, column: 14, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6134, file: !147, line: 1940, column: 13)
!6140 = !DILocation(line: 1940, column: 13, scope: !6134)
!6141 = !DILocation(line: 1942, column: 27, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6139, file: !147, line: 1941, column: 9)
!6143 = !DILocation(line: 1942, column: 11, scope: !6142)
!6144 = !DILocation(line: 1943, column: 26, scope: !6142)
!6145 = !DILocation(line: 1943, column: 11, scope: !6142)
!6146 = !DILocation(line: 1944, column: 9, scope: !6142)
!6147 = !DILocation(line: 1945, column: 7, scope: !6134)
!6148 = !DILocation(line: 1946, column: 5, scope: !6119)
!6149 = !DILocation(line: 1947, column: 3, scope: !6095)
!6150 = !DILocation(line: 1948, column: 1, scope: !240)
!6151 = distinct !DISubprogram(name: "get_remote_transfer_fd", scope: !147, file: !147, line: 1428, type: !6152, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!19, !150, !88}
!6154 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6151, file: !147, line: 1428, type: !150)
!6155 = !DILocation(line: 1428, column: 44, scope: !6151)
!6156 = !DILocalVariable(name: "p_status_msg", arg: 2, scope: !6151, file: !147, line: 1428, type: !88)
!6157 = !DILocation(line: 1428, column: 64, scope: !6151)
!6158 = !DILocalVariable(name: "remote_fd", scope: !6151, file: !147, line: 1430, type: !19)
!6159 = !DILocation(line: 1430, column: 7, scope: !6151)
!6160 = !DILocation(line: 1431, column: 20, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6151, file: !147, line: 1431, column: 7)
!6162 = !DILocation(line: 1431, column: 8, scope: !6161)
!6163 = !DILocation(line: 1431, column: 28, scope: !6161)
!6164 = !DILocation(line: 1431, column: 44, scope: !6161)
!6165 = !DILocation(line: 1431, column: 32, scope: !6161)
!6166 = !DILocation(line: 1431, column: 7, scope: !6151)
!6167 = !DILocation(line: 1433, column: 5, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6161, file: !147, line: 1432, column: 3)
!6169 = !DILocation(line: 1434, column: 3, scope: !6168)
!6170 = !DILocation(line: 1435, column: 3, scope: !6151)
!6171 = !DILocation(line: 1435, column: 11, scope: !6151)
!6172 = !DILocation(line: 1435, column: 25, scope: !6151)
!6173 = !DILocation(line: 1436, column: 19, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6151, file: !147, line: 1436, column: 7)
!6175 = !DILocation(line: 1436, column: 7, scope: !6174)
!6176 = !DILocation(line: 1436, column: 7, scope: !6151)
!6177 = !DILocation(line: 1438, column: 43, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6174, file: !147, line: 1437, column: 3)
!6179 = !DILocation(line: 1438, column: 17, scope: !6178)
!6180 = !DILocation(line: 1438, column: 15, scope: !6178)
!6181 = !DILocation(line: 1439, column: 3, scope: !6178)
!6182 = !DILocation(line: 1442, column: 43, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6174, file: !147, line: 1441, column: 3)
!6184 = !DILocation(line: 1442, column: 17, scope: !6183)
!6185 = !DILocation(line: 1442, column: 15, scope: !6183)
!6186 = !DILocation(line: 1444, column: 35, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6151, file: !147, line: 1444, column: 7)
!6188 = !DILocation(line: 1444, column: 7, scope: !6187)
!6189 = !DILocation(line: 1444, column: 7, scope: !6151)
!6190 = !DILocation(line: 1446, column: 12, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6187, file: !147, line: 1445, column: 3)
!6192 = !DILocation(line: 1446, column: 5, scope: !6191)
!6193 = !DILocation(line: 1448, column: 19, scope: !6151)
!6194 = !DILocation(line: 1448, column: 41, scope: !6151)
!6195 = !DILocation(line: 1448, column: 3, scope: !6151)
!6196 = !DILocation(line: 1449, column: 39, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6151, file: !147, line: 1449, column: 7)
!6198 = !DILocation(line: 1449, column: 7, scope: !6197)
!6199 = !DILocation(line: 1449, column: 47, scope: !6197)
!6200 = !DILocation(line: 1449, column: 7, scope: !6151)
!6201 = !DILocation(line: 1451, column: 39, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6197, file: !147, line: 1450, column: 3)
!6203 = !DILocation(line: 1451, column: 5, scope: !6202)
!6204 = !DILocation(line: 1452, column: 5, scope: !6202)
!6205 = !DILocation(line: 1454, column: 10, scope: !6151)
!6206 = !DILocation(line: 1454, column: 3, scope: !6151)
!6207 = !DILocation(line: 1455, column: 1, scope: !6151)
!6208 = distinct !DISubprogram(name: "check_abor", scope: !147, file: !147, line: 1458, type: !148, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!6209 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6208, file: !147, line: 1458, type: !150)
!6210 = !DILocation(line: 1458, column: 32, scope: !6208)
!6211 = !DILocation(line: 1461, column: 7, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6208, file: !147, line: 1461, column: 7)
!6213 = !DILocation(line: 1461, column: 15, scope: !6212)
!6214 = !DILocation(line: 1461, column: 7, scope: !6208)
!6215 = !DILocation(line: 1463, column: 5, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6212, file: !147, line: 1462, column: 3)
!6217 = !DILocation(line: 1463, column: 13, scope: !6216)
!6218 = !DILocation(line: 1463, column: 27, scope: !6216)
!6219 = !DILocation(line: 1464, column: 21, scope: !6216)
!6220 = !DILocation(line: 1464, column: 5, scope: !6216)
!6221 = !DILocation(line: 1465, column: 3, scope: !6216)
!6222 = !DILocation(line: 1466, column: 1, scope: !6208)
!6223 = distinct !DISubprogram(name: "port_cleanup", scope: !147, file: !147, line: 550, type: !148, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!6224 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6223, file: !147, line: 550, type: !150)
!6225 = !DILocation(line: 550, column: 34, scope: !6223)
!6226 = !DILocation(line: 552, column: 31, scope: !6223)
!6227 = !DILocation(line: 552, column: 39, scope: !6223)
!6228 = !DILocation(line: 552, column: 3, scope: !6223)
!6229 = !DILocation(line: 553, column: 1, scope: !6223)
!6230 = distinct !DISubprogram(name: "pasv_cleanup", scope: !147, file: !147, line: 556, type: !148, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!6231 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6230, file: !147, line: 556, type: !150)
!6232 = !DILocation(line: 556, column: 34, scope: !6230)
!6233 = !DILocation(line: 558, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !147, line: 558, column: 7)
!6235 = !DILocation(line: 558, column: 7, scope: !6230)
!6236 = !DILocation(line: 560, column: 34, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6234, file: !147, line: 559, column: 3)
!6238 = !DILocation(line: 560, column: 5, scope: !6237)
!6239 = !DILocation(line: 561, column: 3, scope: !6237)
!6240 = !DILocation(line: 564, column: 34, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6234, file: !147, line: 563, column: 3)
!6242 = !DILocation(line: 564, column: 5, scope: !6241)
!6243 = !DILocation(line: 566, column: 1, scope: !6230)
!6244 = distinct !DISubprogram(name: "pasv_active", scope: !147, file: !147, line: 528, type: !6040, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!6245 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6244, file: !147, line: 528, type: !150)
!6246 = !DILocation(line: 528, column: 33, scope: !6244)
!6247 = !DILocalVariable(name: "ret", scope: !6244, file: !147, line: 530, type: !19)
!6248 = !DILocation(line: 530, column: 7, scope: !6244)
!6249 = !DILocation(line: 531, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6244, file: !147, line: 531, column: 7)
!6251 = !DILocation(line: 531, column: 7, scope: !6244)
!6252 = !DILocation(line: 533, column: 39, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6250, file: !147, line: 532, column: 3)
!6254 = !DILocation(line: 533, column: 11, scope: !6253)
!6255 = !DILocation(line: 533, column: 9, scope: !6253)
!6256 = !DILocation(line: 534, column: 3, scope: !6253)
!6257 = !DILocation(line: 537, column: 39, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6250, file: !147, line: 536, column: 3)
!6259 = !DILocation(line: 537, column: 11, scope: !6258)
!6260 = !DILocation(line: 537, column: 9, scope: !6258)
!6261 = !DILocation(line: 539, column: 7, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6244, file: !147, line: 539, column: 7)
!6263 = !DILocation(line: 539, column: 7, scope: !6244)
!6264 = !DILocation(line: 541, column: 21, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6266, file: !147, line: 541, column: 9)
!6266 = distinct !DILexicalBlock(scope: !6262, file: !147, line: 540, column: 3)
!6267 = !DILocation(line: 541, column: 9, scope: !6265)
!6268 = !DILocation(line: 541, column: 9, scope: !6266)
!6269 = !DILocation(line: 543, column: 7, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6265, file: !147, line: 542, column: 5)
!6271 = !DILocation(line: 544, column: 5, scope: !6270)
!6272 = !DILocation(line: 545, column: 3, scope: !6266)
!6273 = !DILocation(line: 546, column: 10, scope: !6244)
!6274 = !DILocation(line: 546, column: 3, scope: !6244)
!6275 = distinct !DISubprogram(name: "port_active", scope: !147, file: !147, line: 513, type: !6040, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !217, retainedNodes: !128)
!6276 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6275, file: !147, line: 513, type: !150)
!6277 = !DILocation(line: 513, column: 33, scope: !6275)
!6278 = !DILocalVariable(name: "ret", scope: !6275, file: !147, line: 515, type: !19)
!6279 = !DILocation(line: 515, column: 7, scope: !6275)
!6280 = !DILocation(line: 516, column: 7, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6275, file: !147, line: 516, column: 7)
!6282 = !DILocation(line: 516, column: 15, scope: !6281)
!6283 = !DILocation(line: 516, column: 31, scope: !6281)
!6284 = !DILocation(line: 516, column: 7, scope: !6275)
!6285 = !DILocation(line: 518, column: 9, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6281, file: !147, line: 517, column: 3)
!6287 = !DILocation(line: 519, column: 21, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6286, file: !147, line: 519, column: 9)
!6289 = !DILocation(line: 519, column: 9, scope: !6288)
!6290 = !DILocation(line: 519, column: 9, scope: !6286)
!6291 = !DILocation(line: 521, column: 7, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6288, file: !147, line: 520, column: 5)
!6293 = !DILocation(line: 522, column: 5, scope: !6292)
!6294 = !DILocation(line: 523, column: 3, scope: !6286)
!6295 = !DILocation(line: 524, column: 10, scope: !6275)
!6296 = !DILocation(line: 524, column: 3, scope: !6275)
!6297 = !DILocalVariable(name: "p_sess", arg: 1, scope: !278, file: !147, line: 1016, type: !150)
!6298 = !DILocation(line: 1016, column: 42, scope: !278)
!6299 = !DILocalVariable(name: "is_append", arg: 2, scope: !278, file: !147, line: 1016, type: !19)
!6300 = !DILocation(line: 1016, column: 54, scope: !278)
!6301 = !DILocalVariable(name: "is_unique", arg: 3, scope: !278, file: !147, line: 1016, type: !19)
!6302 = !DILocation(line: 1016, column: 69, scope: !278)
!6303 = !DILocalVariable(name: "p_filename", scope: !278, file: !147, line: 1020, type: !243)
!6304 = !DILocation(line: 1020, column: 17, scope: !278)
!6305 = !DILocalVariable(name: "trans_ret", scope: !278, file: !147, line: 1021, type: !4595)
!6306 = !DILocation(line: 1021, column: 27, scope: !278)
!6307 = !DILocalVariable(name: "new_file_fd", scope: !278, file: !147, line: 1022, type: !19)
!6308 = !DILocation(line: 1022, column: 7, scope: !278)
!6309 = !DILocalVariable(name: "remote_fd", scope: !278, file: !147, line: 1023, type: !19)
!6310 = !DILocation(line: 1023, column: 7, scope: !278)
!6311 = !DILocalVariable(name: "success", scope: !278, file: !147, line: 1024, type: !19)
!6312 = !DILocation(line: 1024, column: 7, scope: !278)
!6313 = !DILocalVariable(name: "created", scope: !278, file: !147, line: 1025, type: !19)
!6314 = !DILocation(line: 1025, column: 7, scope: !278)
!6315 = !DILocalVariable(name: "do_truncate", scope: !278, file: !147, line: 1026, type: !19)
!6316 = !DILocation(line: 1026, column: 7, scope: !278)
!6317 = !DILocalVariable(name: "offset", scope: !278, file: !147, line: 1027, type: !41)
!6318 = !DILocation(line: 1027, column: 14, scope: !278)
!6319 = !DILocation(line: 1027, column: 23, scope: !278)
!6320 = !DILocation(line: 1027, column: 31, scope: !278)
!6321 = !DILocation(line: 1028, column: 3, scope: !278)
!6322 = !DILocation(line: 1028, column: 11, scope: !278)
!6323 = !DILocation(line: 1028, column: 23, scope: !278)
!6324 = !DILocation(line: 1029, column: 32, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1029, column: 7)
!6326 = !DILocation(line: 1029, column: 8, scope: !6325)
!6327 = !DILocation(line: 1029, column: 7, scope: !278)
!6328 = !DILocation(line: 1031, column: 5, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6325, file: !147, line: 1030, column: 3)
!6330 = !DILocation(line: 1033, column: 18, scope: !278)
!6331 = !DILocation(line: 1033, column: 26, scope: !278)
!6332 = !DILocation(line: 1033, column: 39, scope: !278)
!6333 = !DILocation(line: 1033, column: 3, scope: !278)
!6334 = !DILocation(line: 1034, column: 17, scope: !278)
!6335 = !DILocation(line: 1034, column: 25, scope: !278)
!6336 = !DILocation(line: 1034, column: 14, scope: !278)
!6337 = !DILocation(line: 1035, column: 7, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1035, column: 7)
!6339 = !DILocation(line: 1035, column: 7, scope: !278)
!6340 = !DILocation(line: 1037, column: 38, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6338, file: !147, line: 1036, column: 3)
!6342 = !DILocation(line: 1037, column: 5, scope: !6341)
!6343 = !DILocation(line: 1038, column: 16, scope: !6341)
!6344 = !DILocation(line: 1039, column: 3, scope: !6341)
!6345 = !DILocation(line: 1040, column: 23, scope: !278)
!6346 = !DILocation(line: 1040, column: 3, scope: !278)
!6347 = !DILocation(line: 1041, column: 13, scope: !278)
!6348 = !DILocation(line: 1041, column: 21, scope: !278)
!6349 = !DILocation(line: 1041, column: 31, scope: !278)
!6350 = !DILocation(line: 1041, column: 39, scope: !278)
!6351 = !DILocation(line: 1041, column: 3, scope: !278)
!6352 = !DILocation(line: 1042, column: 29, scope: !278)
!6353 = !DILocation(line: 1042, column: 37, scope: !278)
!6354 = !DILocation(line: 1042, column: 3, scope: !278)
!6355 = !DILocation(line: 1043, column: 30, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1043, column: 7)
!6357 = !DILocation(line: 1043, column: 8, scope: !6356)
!6358 = !DILocation(line: 1043, column: 7, scope: !278)
!6359 = !DILocation(line: 1045, column: 21, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6356, file: !147, line: 1044, column: 3)
!6361 = !DILocation(line: 1045, column: 5, scope: !6360)
!6362 = !DILocation(line: 1046, column: 5, scope: !6360)
!6363 = !DILocation(line: 1052, column: 7, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1052, column: 7)
!6365 = !DILocation(line: 1052, column: 17, scope: !6364)
!6366 = !DILocation(line: 1052, column: 21, scope: !6364)
!6367 = !DILocation(line: 1052, column: 29, scope: !6364)
!6368 = !DILocation(line: 1052, column: 42, scope: !6364)
!6369 = !DILocation(line: 1052, column: 46, scope: !6364)
!6370 = !DILocation(line: 1052, column: 7, scope: !278)
!6371 = !DILocation(line: 1054, column: 40, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6364, file: !147, line: 1053, column: 3)
!6373 = !DILocation(line: 1054, column: 19, scope: !6372)
!6374 = !DILocation(line: 1054, column: 17, scope: !6372)
!6375 = !DILocation(line: 1055, column: 3, scope: !6372)
!6376 = !DILocation(line: 1059, column: 30, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6364, file: !147, line: 1057, column: 3)
!6378 = !DILocation(line: 1059, column: 19, scope: !6377)
!6379 = !DILocation(line: 1059, column: 17, scope: !6377)
!6380 = !DILocation(line: 1060, column: 10, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6377, file: !147, line: 1060, column: 9)
!6382 = !DILocation(line: 1060, column: 20, scope: !6381)
!6383 = !DILocation(line: 1060, column: 23, scope: !6381)
!6384 = !DILocation(line: 1060, column: 30, scope: !6381)
!6385 = !DILocation(line: 1060, column: 9, scope: !6377)
!6386 = !DILocation(line: 1062, column: 19, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6381, file: !147, line: 1061, column: 5)
!6388 = !DILocation(line: 1063, column: 5, scope: !6387)
!6389 = !DILocation(line: 1065, column: 35, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1065, column: 7)
!6391 = !DILocation(line: 1065, column: 7, scope: !6390)
!6392 = !DILocation(line: 1065, column: 7, scope: !278)
!6393 = !DILocation(line: 1067, column: 21, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6390, file: !147, line: 1066, column: 3)
!6395 = !DILocation(line: 1067, column: 5, scope: !6394)
!6396 = !DILocation(line: 1068, column: 5, scope: !6394)
!6397 = !DILocation(line: 1070, column: 11, scope: !278)
!6398 = !DILocation(line: 1071, column: 21, scope: !278)
!6399 = !DILocation(line: 1071, column: 3, scope: !278)
!6400 = !DILocation(line: 1072, column: 38, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1072, column: 7)
!6402 = !DILocation(line: 1072, column: 7, scope: !6401)
!6403 = !DILocation(line: 1072, column: 7, scope: !278)
!6404 = !DILocation(line: 1077, column: 36, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !147, line: 1073, column: 3)
!6406 = !DILocation(line: 1077, column: 5, scope: !6405)
!6407 = !DILocation(line: 1078, column: 3, scope: !6405)
!6408 = !DILocation(line: 1080, column: 7, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1080, column: 7)
!6410 = !DILocation(line: 1080, column: 15, scope: !6409)
!6411 = !DILocation(line: 1080, column: 28, scope: !6409)
!6412 = !DILocation(line: 1080, column: 31, scope: !6409)
!6413 = !DILocation(line: 1080, column: 7, scope: !278)
!6414 = !DILocation(line: 1082, column: 24, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6409, file: !147, line: 1081, column: 3)
!6416 = !DILocation(line: 1082, column: 37, scope: !6415)
!6417 = !DILocation(line: 1082, column: 5, scope: !6415)
!6418 = !DILocation(line: 1083, column: 9, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !147, line: 1083, column: 9)
!6420 = !DILocation(line: 1083, column: 9, scope: !6415)
!6421 = !DILocation(line: 1085, column: 36, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6419, file: !147, line: 1084, column: 5)
!6423 = !DILocation(line: 1085, column: 44, scope: !6422)
!6424 = !DILocation(line: 1085, column: 7, scope: !6422)
!6425 = !DILocation(line: 1086, column: 5, scope: !6422)
!6426 = !DILocation(line: 1089, column: 36, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6419, file: !147, line: 1088, column: 5)
!6428 = !DILocation(line: 1089, column: 44, scope: !6427)
!6429 = !DILocation(line: 1089, column: 7, scope: !6427)
!6430 = !DILocation(line: 1091, column: 3, scope: !6415)
!6431 = !DILocation(line: 1093, column: 7, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1093, column: 7)
!6433 = !DILocation(line: 1093, column: 7, scope: !278)
!6434 = !DILocation(line: 1095, column: 33, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6432, file: !147, line: 1094, column: 3)
!6436 = !DILocation(line: 1095, column: 5, scope: !6435)
!6437 = !DILocation(line: 1096, column: 3, scope: !6435)
!6438 = !DILocation(line: 1098, column: 7, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1098, column: 7)
!6440 = !DILocation(line: 1098, column: 7, scope: !278)
!6441 = !DILocation(line: 1100, column: 27, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6439, file: !147, line: 1099, column: 3)
!6443 = !DILocation(line: 1100, column: 5, scope: !6442)
!6444 = !DILocation(line: 1101, column: 26, scope: !6442)
!6445 = !DILocation(line: 1101, column: 5, scope: !6442)
!6446 = !DILocation(line: 1102, column: 3, scope: !6442)
!6447 = !DILocation(line: 1103, column: 8, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1103, column: 7)
!6449 = !DILocation(line: 1103, column: 18, scope: !6448)
!6450 = !DILocation(line: 1103, column: 21, scope: !6448)
!6451 = !DILocation(line: 1103, column: 28, scope: !6448)
!6452 = !DILocation(line: 1103, column: 7, scope: !278)
!6453 = !DILocation(line: 1106, column: 26, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6448, file: !147, line: 1104, column: 3)
!6455 = !DILocation(line: 1106, column: 39, scope: !6454)
!6456 = !DILocation(line: 1106, column: 5, scope: !6454)
!6457 = !DILocation(line: 1107, column: 3, scope: !6454)
!6458 = !DILocation(line: 1108, column: 12, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6448, file: !147, line: 1108, column: 12)
!6460 = !DILocation(line: 1108, column: 12, scope: !6448)
!6461 = !DILocation(line: 1110, column: 27, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6459, file: !147, line: 1109, column: 3)
!6463 = !DILocation(line: 1110, column: 5, scope: !6462)
!6464 = !DILocation(line: 1111, column: 3, scope: !6462)
!6465 = !DILocation(line: 1112, column: 7, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1112, column: 7)
!6467 = !DILocation(line: 1112, column: 7, scope: !278)
!6468 = !DILocalVariable(name: "resp_str", scope: !6469, file: !147, line: 1114, type: !170)
!6469 = distinct !DILexicalBlock(scope: !6466, file: !147, line: 1113, column: 3)
!6470 = !DILocation(line: 1114, column: 18, scope: !6469)
!6471 = !DILocation(line: 1115, column: 5, scope: !6469)
!6472 = !DILocation(line: 1116, column: 31, scope: !6469)
!6473 = !DILocation(line: 1116, column: 5, scope: !6469)
!6474 = !DILocation(line: 1117, column: 40, scope: !6469)
!6475 = !DILocation(line: 1117, column: 48, scope: !6469)
!6476 = !DILocation(line: 1117, column: 17, scope: !6469)
!6477 = !DILocation(line: 1117, column: 15, scope: !6469)
!6478 = !DILocation(line: 1118, column: 5, scope: !6469)
!6479 = !DILocation(line: 1119, column: 3, scope: !6469)
!6480 = !DILocation(line: 1122, column: 40, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6466, file: !147, line: 1121, column: 3)
!6482 = !DILocation(line: 1122, column: 17, scope: !6481)
!6483 = !DILocation(line: 1122, column: 15, scope: !6481)
!6484 = !DILocation(line: 1124, column: 35, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1124, column: 7)
!6486 = !DILocation(line: 1124, column: 7, scope: !6485)
!6487 = !DILocation(line: 1124, column: 7, scope: !278)
!6488 = !DILocation(line: 1126, column: 5, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !147, line: 1125, column: 3)
!6490 = !DILocation(line: 1128, column: 7, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1128, column: 7)
!6492 = !DILocation(line: 1128, column: 35, scope: !6491)
!6493 = !DILocation(line: 1128, column: 38, scope: !6491)
!6494 = !DILocation(line: 1128, column: 46, scope: !6491)
!6495 = !DILocation(line: 1128, column: 7, scope: !278)
!6496 = !DILocation(line: 1130, column: 45, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6491, file: !147, line: 1129, column: 3)
!6498 = !DILocation(line: 1130, column: 53, scope: !6497)
!6499 = !DILocation(line: 1131, column: 45, scope: !6497)
!6500 = !DILocation(line: 1130, column: 17, scope: !6497)
!6501 = !DILocation(line: 1132, column: 3, scope: !6497)
!6502 = !DILocation(line: 1135, column: 45, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6491, file: !147, line: 1134, column: 3)
!6504 = !DILocation(line: 1135, column: 53, scope: !6503)
!6505 = !DILocation(line: 1136, column: 45, scope: !6503)
!6506 = !DILocation(line: 1135, column: 17, scope: !6503)
!6507 = !DILocation(line: 1138, column: 41, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1138, column: 7)
!6509 = !DILocation(line: 1138, column: 7, scope: !6508)
!6510 = !DILocation(line: 1138, column: 49, scope: !6508)
!6511 = !DILocation(line: 1138, column: 54, scope: !6508)
!6512 = !DILocation(line: 1138, column: 67, scope: !6508)
!6513 = !DILocation(line: 1138, column: 74, scope: !6508)
!6514 = !DILocation(line: 1138, column: 7, scope: !278)
!6515 = !DILocation(line: 1140, column: 15, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6508, file: !147, line: 1139, column: 3)
!6517 = !DILocation(line: 1140, column: 22, scope: !6516)
!6518 = !DILocation(line: 1141, column: 3, scope: !6516)
!6519 = !DILocation(line: 1142, column: 37, scope: !278)
!6520 = !DILocation(line: 1142, column: 3, scope: !278)
!6521 = !DILocation(line: 1142, column: 11, scope: !278)
!6522 = !DILocation(line: 1142, column: 25, scope: !278)
!6523 = !DILocation(line: 1143, column: 17, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1143, column: 7)
!6525 = !DILocation(line: 1143, column: 24, scope: !6524)
!6526 = !DILocation(line: 1143, column: 7, scope: !278)
!6527 = !DILocation(line: 1145, column: 13, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6524, file: !147, line: 1144, column: 3)
!6529 = !DILocation(line: 1146, column: 20, scope: !6528)
!6530 = !DILocation(line: 1146, column: 5, scope: !6528)
!6531 = !DILocation(line: 1147, column: 3, scope: !6528)
!6532 = !DILocation(line: 1148, column: 17, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1148, column: 7)
!6534 = !DILocation(line: 1148, column: 24, scope: !6533)
!6535 = !DILocation(line: 1148, column: 7, scope: !278)
!6536 = !DILocation(line: 1150, column: 21, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6533, file: !147, line: 1149, column: 3)
!6538 = !DILocation(line: 1150, column: 5, scope: !6537)
!6539 = !DILocation(line: 1151, column: 3, scope: !6537)
!6540 = !DILocation(line: 1152, column: 22, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6533, file: !147, line: 1152, column: 12)
!6542 = !DILocation(line: 1152, column: 29, scope: !6541)
!6543 = !DILocation(line: 1152, column: 12, scope: !6533)
!6544 = !DILocation(line: 1154, column: 10, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !147, line: 1154, column: 9)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !147, line: 1153, column: 3)
!6547 = !DILocation(line: 1154, column: 18, scope: !6545)
!6548 = !DILocation(line: 1154, column: 9, scope: !6546)
!6549 = !DILocation(line: 1156, column: 23, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6545, file: !147, line: 1155, column: 5)
!6551 = !DILocation(line: 1156, column: 7, scope: !6550)
!6552 = !DILocation(line: 1158, column: 5, scope: !6550)
!6553 = !DILocation(line: 1159, column: 3, scope: !6546)
!6554 = !DILocation(line: 1162, column: 21, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6541, file: !147, line: 1161, column: 3)
!6556 = !DILocation(line: 1162, column: 5, scope: !6555)
!6557 = !DILocation(line: 1164, column: 14, scope: !278)
!6558 = !DILocation(line: 1164, column: 3, scope: !278)
!6559 = !DILocation(line: 1166, column: 16, scope: !278)
!6560 = !DILocation(line: 1166, column: 3, scope: !278)
!6561 = !DILocation(line: 1167, column: 16, scope: !278)
!6562 = !DILocation(line: 1167, column: 3, scope: !278)
!6563 = !DILocation(line: 1168, column: 7, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !278, file: !147, line: 1168, column: 7)
!6565 = !DILocation(line: 1168, column: 37, scope: !6564)
!6566 = !DILocation(line: 1168, column: 40, scope: !6564)
!6567 = !DILocation(line: 1168, column: 48, scope: !6564)
!6568 = !DILocation(line: 1168, column: 52, scope: !6564)
!6569 = !DILocation(line: 1168, column: 7, scope: !278)
!6570 = !DILocation(line: 1170, column: 16, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6564, file: !147, line: 1169, column: 3)
!6572 = !DILocation(line: 1170, column: 5, scope: !6571)
!6573 = !DILocation(line: 1171, column: 3, scope: !6571)
!6574 = !DILocation(line: 1172, column: 21, scope: !278)
!6575 = !DILocation(line: 1172, column: 3, scope: !278)
!6576 = !DILocation(line: 1173, column: 1, scope: !278)
!6577 = !DILocalVariable(name: "p_outstr", arg: 1, scope: !283, file: !147, line: 1785, type: !243)
!6578 = !DILocation(line: 1785, column: 35, scope: !283)
!6579 = !DILocalVariable(name: "p_base_str", arg: 2, scope: !283, file: !147, line: 1785, type: !286)
!6580 = !DILocation(line: 1785, column: 65, scope: !283)
!6581 = !DILocalVariable(name: "suffix", scope: !283, file: !147, line: 1792, type: !26)
!6582 = !DILocation(line: 1792, column: 16, scope: !283)
!6583 = !DILocalVariable(name: "p_real_base_str", scope: !283, file: !147, line: 1793, type: !286)
!6584 = !DILocation(line: 1793, column: 23, scope: !283)
!6585 = !DILocation(line: 1793, column: 41, scope: !283)
!6586 = !DILocalVariable(name: "retval", scope: !283, file: !147, line: 1794, type: !19)
!6587 = !DILocation(line: 1794, column: 7, scope: !283)
!6588 = !DILocation(line: 1795, column: 19, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !283, file: !147, line: 1795, column: 7)
!6590 = !DILocation(line: 1795, column: 7, scope: !6589)
!6591 = !DILocation(line: 1795, column: 7, scope: !283)
!6592 = !DILocation(line: 1797, column: 5, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6589, file: !147, line: 1796, column: 3)
!6594 = !DILocation(line: 1798, column: 21, scope: !6593)
!6595 = !DILocation(line: 1799, column: 3, scope: !6593)
!6596 = !DILocation(line: 1803, column: 23, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6589, file: !147, line: 1801, column: 3)
!6598 = !DILocation(line: 1803, column: 14, scope: !6597)
!6599 = !DILocation(line: 1803, column: 12, scope: !6597)
!6600 = !DILocation(line: 1804, column: 37, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6597, file: !147, line: 1804, column: 9)
!6602 = !DILocation(line: 1804, column: 9, scope: !6601)
!6603 = !DILocation(line: 1804, column: 9, scope: !6597)
!6604 = !DILocation(line: 1806, column: 17, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6601, file: !147, line: 1805, column: 5)
!6606 = !DILocation(line: 1806, column: 27, scope: !6605)
!6607 = !DILocation(line: 1806, column: 8, scope: !6605)
!6608 = !DILocation(line: 1807, column: 8, scope: !6605)
!6609 = !DILocation(line: 1810, column: 3, scope: !283)
!6610 = !DILocation(line: 1812, column: 14, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !283, file: !147, line: 1811, column: 3)
!6612 = !DILocation(line: 1812, column: 24, scope: !6611)
!6613 = !DILocation(line: 1812, column: 5, scope: !6611)
!6614 = !DILocation(line: 1813, column: 21, scope: !6611)
!6615 = !DILocation(line: 1813, column: 5, scope: !6611)
!6616 = !DILocation(line: 1814, column: 22, scope: !6611)
!6617 = !DILocation(line: 1814, column: 32, scope: !6611)
!6618 = !DILocation(line: 1814, column: 5, scope: !6611)
!6619 = !DILocation(line: 1815, column: 23, scope: !6611)
!6620 = !DILocation(line: 1815, column: 14, scope: !6611)
!6621 = !DILocation(line: 1815, column: 12, scope: !6611)
!6622 = !DILocation(line: 1816, column: 37, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6611, file: !147, line: 1816, column: 9)
!6624 = !DILocation(line: 1816, column: 9, scope: !6623)
!6625 = !DILocation(line: 1816, column: 9, scope: !6611)
!6626 = !DILocation(line: 1818, column: 7, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6623, file: !147, line: 1817, column: 5)
!6628 = !DILocation(line: 1820, column: 5, scope: !6611)
!6629 = distinct !{!6629, !6609, !6630}
!6630 = !DILocation(line: 1821, column: 3, scope: !283)
!6631 = !DILocation(line: 1822, column: 1, scope: !283)
!6632 = !DILocalVariable(name: "p_str", arg: 1, scope: !262, file: !147, line: 1362, type: !243)
!6633 = !DILocation(line: 1362, column: 40, scope: !262)
!6634 = !DILocation(line: 1368, column: 3, scope: !262)
!6635 = !DILocation(line: 1369, column: 19, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !262, file: !147, line: 1369, column: 7)
!6637 = !DILocation(line: 1369, column: 7, scope: !6636)
!6638 = !DILocation(line: 1369, column: 26, scope: !6636)
!6639 = !DILocation(line: 1369, column: 45, scope: !6636)
!6640 = !DILocation(line: 1369, column: 29, scope: !6636)
!6641 = !DILocation(line: 1369, column: 55, scope: !6636)
!6642 = !DILocation(line: 1369, column: 7, scope: !262)
!6643 = !DILocation(line: 1371, column: 5, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6636, file: !147, line: 1370, column: 3)
!6645 = !DILocation(line: 1373, column: 9, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6644, file: !147, line: 1373, column: 9)
!6647 = !DILocation(line: 1373, column: 33, scope: !6646)
!6648 = !DILocation(line: 1374, column: 37, scope: !6646)
!6649 = !DILocation(line: 1374, column: 60, scope: !6646)
!6650 = !DILocation(line: 1374, column: 9, scope: !6646)
!6651 = !DILocation(line: 1374, column: 65, scope: !6646)
!6652 = !DILocation(line: 1373, column: 9, scope: !6644)
!6653 = !DILocation(line: 1376, column: 7, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6646, file: !147, line: 1375, column: 5)
!6655 = !DILocation(line: 1377, column: 5, scope: !6654)
!6656 = !DILocation(line: 1378, column: 3, scope: !6644)
!6657 = !DILocation(line: 1379, column: 30, scope: !262)
!6658 = !DILocation(line: 1379, column: 3, scope: !262)
!6659 = !DILocation(line: 1380, column: 12, scope: !262)
!6660 = !DILocation(line: 1380, column: 3, scope: !262)
!6661 = !DILocation(line: 1381, column: 1, scope: !262)
!6662 = !DILocalVariable(name: "p_sess", arg: 1, scope: !314, file: !147, line: 1534, type: !150)
!6663 = !DILocation(line: 1534, column: 39, scope: !314)
!6664 = !DILocalVariable(name: "p_arg_str", arg: 2, scope: !314, file: !147, line: 1534, type: !243)
!6665 = !DILocation(line: 1534, column: 61, scope: !314)
!6666 = !DILocalVariable(name: "perms", scope: !314, file: !147, line: 1537, type: !26)
!6667 = !DILocation(line: 1537, column: 16, scope: !314)
!6668 = !DILocalVariable(name: "retval", scope: !314, file: !147, line: 1538, type: !19)
!6669 = !DILocation(line: 1538, column: 7, scope: !314)
!6670 = !DILocation(line: 1539, column: 19, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !314, file: !147, line: 1539, column: 7)
!6672 = !DILocation(line: 1539, column: 7, scope: !6671)
!6673 = !DILocation(line: 1539, column: 7, scope: !314)
!6674 = !DILocation(line: 1541, column: 21, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6671, file: !147, line: 1540, column: 3)
!6676 = !DILocation(line: 1541, column: 5, scope: !6675)
!6677 = !DILocation(line: 1542, column: 5, scope: !6675)
!6678 = !DILocation(line: 1544, column: 18, scope: !314)
!6679 = !DILocation(line: 1544, column: 3, scope: !314)
!6680 = !DILocation(line: 1545, column: 7, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !314, file: !147, line: 1545, column: 7)
!6682 = !DILocation(line: 1545, column: 7, scope: !314)
!6683 = !DILocation(line: 1547, column: 21, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6681, file: !147, line: 1546, column: 3)
!6685 = !DILocation(line: 1547, column: 5, scope: !6684)
!6686 = !DILocation(line: 1548, column: 5, scope: !6684)
!6687 = !DILocation(line: 1550, column: 36, scope: !314)
!6688 = !DILocation(line: 1550, column: 3, scope: !314)
!6689 = !DILocation(line: 1551, column: 23, scope: !314)
!6690 = !DILocation(line: 1551, column: 3, scope: !314)
!6691 = !DILocation(line: 1552, column: 13, scope: !314)
!6692 = !DILocation(line: 1552, column: 21, scope: !314)
!6693 = !DILocation(line: 1552, column: 3, scope: !314)
!6694 = !DILocation(line: 1553, column: 29, scope: !314)
!6695 = !DILocation(line: 1553, column: 37, scope: !314)
!6696 = !DILocation(line: 1553, column: 3, scope: !314)
!6697 = !DILocation(line: 1554, column: 20, scope: !314)
!6698 = !DILocation(line: 1554, column: 28, scope: !314)
!6699 = !DILocation(line: 1554, column: 3, scope: !314)
!6700 = !DILocation(line: 1555, column: 19, scope: !314)
!6701 = !DILocation(line: 1555, column: 27, scope: !314)
!6702 = !DILocation(line: 1555, column: 36, scope: !314)
!6703 = !DILocation(line: 1555, column: 3, scope: !314)
!6704 = !DILocation(line: 1556, column: 8, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !314, file: !147, line: 1556, column: 7)
!6706 = !DILocation(line: 1556, column: 7, scope: !314)
!6707 = !DILocation(line: 1558, column: 21, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6705, file: !147, line: 1557, column: 3)
!6709 = !DILocation(line: 1558, column: 5, scope: !6708)
!6710 = !DILocation(line: 1559, column: 5, scope: !6708)
!6711 = !DILocation(line: 1562, column: 29, scope: !314)
!6712 = !DILocation(line: 1562, column: 11, scope: !314)
!6713 = !DILocation(line: 1562, column: 9, scope: !314)
!6714 = !DILocation(line: 1563, column: 41, scope: !314)
!6715 = !DILocation(line: 1563, column: 12, scope: !314)
!6716 = !DILocation(line: 1563, column: 10, scope: !314)
!6717 = !DILocation(line: 1564, column: 35, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !314, file: !147, line: 1564, column: 7)
!6719 = !DILocation(line: 1564, column: 7, scope: !6718)
!6720 = !DILocation(line: 1564, column: 7, scope: !314)
!6721 = !DILocation(line: 1566, column: 21, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6718, file: !147, line: 1565, column: 3)
!6723 = !DILocation(line: 1566, column: 5, scope: !6722)
!6724 = !DILocation(line: 1567, column: 3, scope: !6722)
!6725 = !DILocation(line: 1570, column: 20, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6718, file: !147, line: 1569, column: 3)
!6727 = !DILocation(line: 1570, column: 5, scope: !6726)
!6728 = !DILocation(line: 1571, column: 21, scope: !6726)
!6729 = !DILocation(line: 1571, column: 5, scope: !6726)
!6730 = !DILocation(line: 1573, column: 1, scope: !314)
!6731 = !DILocalVariable(name: "p_sess", arg: 1, scope: !319, file: !147, line: 1576, type: !150)
!6732 = !DILocation(line: 1576, column: 39, scope: !319)
!6733 = !DILocalVariable(name: "p_arg_str", arg: 2, scope: !319, file: !147, line: 1576, type: !243)
!6734 = !DILocation(line: 1576, column: 61, scope: !319)
!6735 = !DILocation(line: 1579, column: 19, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !319, file: !147, line: 1579, column: 7)
!6737 = !DILocation(line: 1579, column: 7, scope: !6736)
!6738 = !DILocation(line: 1579, column: 7, scope: !319)
!6739 = !DILocation(line: 1582, column: 5, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6736, file: !147, line: 1580, column: 3)
!6741 = !DILocation(line: 1584, column: 47, scope: !6740)
!6742 = !DILocation(line: 1584, column: 21, scope: !6740)
!6743 = !DILocation(line: 1583, column: 5, scope: !6740)
!6744 = !DILocation(line: 1585, column: 3, scope: !6740)
!6745 = !DILocalVariable(name: "new_umask", scope: !6746, file: !147, line: 1589, type: !26)
!6746 = distinct !DILexicalBlock(scope: !6736, file: !147, line: 1587, column: 3)
!6747 = !DILocation(line: 1589, column: 18, scope: !6746)
!6748 = !DILocation(line: 1589, column: 48, scope: !6746)
!6749 = !DILocation(line: 1589, column: 30, scope: !6746)
!6750 = !DILocation(line: 1590, column: 27, scope: !6746)
!6751 = !DILocation(line: 1590, column: 5, scope: !6746)
!6752 = !DILocation(line: 1591, column: 5, scope: !6746)
!6753 = !DILocation(line: 1593, column: 47, scope: !6746)
!6754 = !DILocation(line: 1593, column: 21, scope: !6746)
!6755 = !DILocation(line: 1592, column: 5, scope: !6746)
!6756 = !DILocation(line: 1595, column: 23, scope: !319)
!6757 = !DILocation(line: 1595, column: 3, scope: !319)
!6758 = !DILocation(line: 1596, column: 1, scope: !319)
!6759 = distinct !DISubprogram(name: "priv_sock_init", scope: !1838, file: !1838, line: 24, type: !6760, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6760 = !DISubroutineType(types: !6761)
!6761 = !{null, !6762}
!6762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 64)
!6763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !6764)
!6764 = !{!6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6785, !6786, !6787, !6788, !6789, !6790, !6791, !6792, !6793, !6794, !6795, !6796, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6804, !6805, !6806, !6807, !6808, !6809, !6810, !6811, !6812, !6813, !6814, !6815, !6816, !6817, !6818, !6819, !6820, !6821, !6822, !6823, !6824, !6825, !6826}
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !6763, file: !8, line: 21, baseType: !11, size: 64)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !6763, file: !8, line: 22, baseType: !11, size: 64, offset: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !6763, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !6763, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !6763, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !6763, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !6763, file: !8, line: 29, baseType: !11, size: 64, offset: 320)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !6763, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !6763, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !6763, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !6763, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !6763, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !6763, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !6763, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !6763, file: !8, line: 39, baseType: !6780, size: 128, offset: 704)
!6780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !6781)
!6781 = !{!6782, !6783, !6784}
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !6780, file: !34, line: 12, baseType: !16, size: 64)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !6780, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !6780, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !6763, file: !8, line: 40, baseType: !6780, size: 128, offset: 832)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !6763, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !6763, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !6763, file: !8, line: 45, baseType: !6780, size: 128, offset: 1088)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !6763, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !6763, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !6763, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !6763, file: !8, line: 51, baseType: !6780, size: 128, offset: 1344)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !6763, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !6763, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !6763, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !6763, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !6763, file: !8, line: 62, baseType: !6780, size: 128, offset: 1664)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !6763, file: !8, line: 63, baseType: !6780, size: 128, offset: 1792)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !6763, file: !8, line: 64, baseType: !6780, size: 128, offset: 1920)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !6763, file: !8, line: 65, baseType: !6780, size: 128, offset: 2048)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !6763, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !6763, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !6763, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !6763, file: !8, line: 71, baseType: !6780, size: 128, offset: 2304)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !6763, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !6763, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !6763, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !6763, file: !8, line: 75, baseType: !6780, size: 128, offset: 2624)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !6763, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !6763, file: !8, line: 79, baseType: !6780, size: 128, offset: 2816)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !6763, file: !8, line: 80, baseType: !6780, size: 128, offset: 2944)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !6763, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !6763, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !6763, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !6763, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !6763, file: !8, line: 89, baseType: !6780, size: 128, offset: 3200)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !6763, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !6763, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !6763, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !6763, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !6763, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !6763, file: !8, line: 97, baseType: !6780, size: 128, offset: 3584)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !6763, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !6763, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !6763, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !6763, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!6827 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6759, file: !1838, line: 24, type: !6762)
!6828 = !DILocation(line: 24, column: 36, scope: !6759)
!6829 = !DILocalVariable(name: "retval", scope: !6759, file: !1838, line: 26, type: !6830)
!6830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_socketpair_retval", file: !13, line: 211, size: 64, elements: !6831)
!6831 = !{!6832, !6833}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "socket_one", scope: !6830, file: !13, line: 213, baseType: !19, size: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "socket_two", scope: !6830, file: !13, line: 214, baseType: !19, size: 32, offset: 32)
!6834 = !DILocation(line: 26, column: 40, scope: !6759)
!6835 = !DILocation(line: 27, column: 7, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6759, file: !1838, line: 27, column: 7)
!6837 = !DILocation(line: 27, column: 15, scope: !6836)
!6838 = !DILocation(line: 27, column: 25, scope: !6836)
!6839 = !DILocation(line: 27, column: 7, scope: !6759)
!6840 = !DILocation(line: 29, column: 5, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6836, file: !1838, line: 28, column: 3)
!6842 = !DILocation(line: 30, column: 3, scope: !6841)
!6843 = !DILocation(line: 31, column: 7, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6759, file: !1838, line: 31, column: 7)
!6845 = !DILocation(line: 31, column: 15, scope: !6844)
!6846 = !DILocation(line: 31, column: 24, scope: !6844)
!6847 = !DILocation(line: 31, column: 7, scope: !6759)
!6848 = !DILocation(line: 33, column: 5, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6844, file: !1838, line: 32, column: 3)
!6850 = !DILocation(line: 34, column: 3, scope: !6849)
!6851 = !DILocation(line: 35, column: 12, scope: !6759)
!6852 = !DILocation(line: 36, column: 30, scope: !6759)
!6853 = !DILocation(line: 36, column: 3, scope: !6759)
!6854 = !DILocation(line: 36, column: 11, scope: !6759)
!6855 = !DILocation(line: 36, column: 21, scope: !6759)
!6856 = !DILocation(line: 37, column: 29, scope: !6759)
!6857 = !DILocation(line: 37, column: 3, scope: !6759)
!6858 = !DILocation(line: 37, column: 11, scope: !6759)
!6859 = !DILocation(line: 37, column: 20, scope: !6759)
!6860 = !DILocation(line: 38, column: 1, scope: !6759)
!6861 = distinct !DISubprogram(name: "priv_sock_close", scope: !1838, file: !1838, line: 41, type: !6760, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6862 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6861, file: !1838, line: 41, type: !6762)
!6863 = !DILocation(line: 41, column: 37, scope: !6861)
!6864 = !DILocation(line: 43, column: 7, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6861, file: !1838, line: 43, column: 7)
!6866 = !DILocation(line: 43, column: 15, scope: !6865)
!6867 = !DILocation(line: 43, column: 25, scope: !6865)
!6868 = !DILocation(line: 43, column: 7, scope: !6861)
!6869 = !DILocation(line: 45, column: 23, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6865, file: !1838, line: 44, column: 3)
!6871 = !DILocation(line: 45, column: 31, scope: !6870)
!6872 = !DILocation(line: 45, column: 5, scope: !6870)
!6873 = !DILocation(line: 46, column: 5, scope: !6870)
!6874 = !DILocation(line: 46, column: 13, scope: !6870)
!6875 = !DILocation(line: 46, column: 23, scope: !6870)
!6876 = !DILocation(line: 47, column: 3, scope: !6870)
!6877 = !DILocation(line: 48, column: 7, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6861, file: !1838, line: 48, column: 7)
!6879 = !DILocation(line: 48, column: 15, scope: !6878)
!6880 = !DILocation(line: 48, column: 24, scope: !6878)
!6881 = !DILocation(line: 48, column: 7, scope: !6861)
!6882 = !DILocation(line: 50, column: 23, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6878, file: !1838, line: 49, column: 3)
!6884 = !DILocation(line: 50, column: 31, scope: !6883)
!6885 = !DILocation(line: 50, column: 5, scope: !6883)
!6886 = !DILocation(line: 51, column: 5, scope: !6883)
!6887 = !DILocation(line: 51, column: 13, scope: !6883)
!6888 = !DILocation(line: 51, column: 22, scope: !6883)
!6889 = !DILocation(line: 52, column: 3, scope: !6883)
!6890 = !DILocation(line: 53, column: 1, scope: !6861)
!6891 = distinct !DISubprogram(name: "priv_sock_set_parent_context", scope: !1838, file: !1838, line: 56, type: !6760, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6892 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6891, file: !1838, line: 56, type: !6762)
!6893 = !DILocation(line: 56, column: 50, scope: !6891)
!6894 = !DILocation(line: 58, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6891, file: !1838, line: 58, column: 7)
!6896 = !DILocation(line: 58, column: 15, scope: !6895)
!6897 = !DILocation(line: 58, column: 24, scope: !6895)
!6898 = !DILocation(line: 58, column: 7, scope: !6891)
!6899 = !DILocation(line: 60, column: 5, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !1838, line: 59, column: 3)
!6901 = !DILocation(line: 61, column: 3, scope: !6900)
!6902 = !DILocation(line: 62, column: 21, scope: !6891)
!6903 = !DILocation(line: 62, column: 29, scope: !6891)
!6904 = !DILocation(line: 62, column: 3, scope: !6891)
!6905 = !DILocation(line: 63, column: 3, scope: !6891)
!6906 = !DILocation(line: 63, column: 11, scope: !6891)
!6907 = !DILocation(line: 63, column: 20, scope: !6891)
!6908 = !DILocation(line: 64, column: 1, scope: !6891)
!6909 = distinct !DISubprogram(name: "priv_sock_set_child_context", scope: !1838, file: !1838, line: 67, type: !6760, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6910 = !DILocalVariable(name: "p_sess", arg: 1, scope: !6909, file: !1838, line: 67, type: !6762)
!6911 = !DILocation(line: 67, column: 49, scope: !6909)
!6912 = !DILocation(line: 69, column: 7, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6909, file: !1838, line: 69, column: 7)
!6914 = !DILocation(line: 69, column: 15, scope: !6913)
!6915 = !DILocation(line: 69, column: 25, scope: !6913)
!6916 = !DILocation(line: 69, column: 7, scope: !6909)
!6917 = !DILocation(line: 71, column: 5, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6913, file: !1838, line: 70, column: 3)
!6919 = !DILocation(line: 72, column: 3, scope: !6918)
!6920 = !DILocation(line: 73, column: 21, scope: !6909)
!6921 = !DILocation(line: 73, column: 29, scope: !6909)
!6922 = !DILocation(line: 73, column: 3, scope: !6909)
!6923 = !DILocation(line: 74, column: 3, scope: !6909)
!6924 = !DILocation(line: 74, column: 11, scope: !6909)
!6925 = !DILocation(line: 74, column: 21, scope: !6909)
!6926 = !DILocation(line: 75, column: 1, scope: !6909)
!6927 = distinct !DISubprogram(name: "priv_sock_send_cmd", scope: !1838, file: !1838, line: 78, type: !6928, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{null, !19, !17}
!6930 = !DILocalVariable(name: "fd", arg: 1, scope: !6927, file: !1838, line: 78, type: !19)
!6931 = !DILocation(line: 78, column: 24, scope: !6927)
!6932 = !DILocalVariable(name: "cmd", arg: 2, scope: !6927, file: !1838, line: 78, type: !17)
!6933 = !DILocation(line: 78, column: 33, scope: !6927)
!6934 = !DILocalVariable(name: "retval", scope: !6927, file: !1838, line: 80, type: !19)
!6935 = !DILocation(line: 80, column: 7, scope: !6927)
!6936 = !DILocation(line: 80, column: 39, scope: !6927)
!6937 = !DILocation(line: 80, column: 16, scope: !6927)
!6938 = !DILocation(line: 81, column: 7, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6927, file: !1838, line: 81, column: 7)
!6940 = !DILocation(line: 81, column: 14, scope: !6939)
!6941 = !DILocation(line: 81, column: 7, scope: !6927)
!6942 = !DILocation(line: 83, column: 5, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6939, file: !1838, line: 82, column: 3)
!6944 = !DILocation(line: 84, column: 3, scope: !6943)
!6945 = !DILocation(line: 85, column: 1, scope: !6927)
!6946 = distinct !DISubprogram(name: "priv_sock_send_str", scope: !1838, file: !1838, line: 88, type: !6947, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6947 = !DISubroutineType(types: !6948)
!6948 = !{null, !19, !6949}
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6950, size: 64)
!6950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6780)
!6951 = !DILocalVariable(name: "fd", arg: 1, scope: !6946, file: !1838, line: 88, type: !19)
!6952 = !DILocation(line: 88, column: 24, scope: !6946)
!6953 = !DILocalVariable(name: "p_str", arg: 2, scope: !6946, file: !1838, line: 88, type: !6949)
!6954 = !DILocation(line: 88, column: 48, scope: !6946)
!6955 = !DILocalVariable(name: "len", scope: !6946, file: !1838, line: 90, type: !26)
!6956 = !DILocation(line: 90, column: 16, scope: !6946)
!6957 = !DILocation(line: 90, column: 33, scope: !6946)
!6958 = !DILocation(line: 90, column: 22, scope: !6946)
!6959 = !DILocation(line: 91, column: 22, scope: !6946)
!6960 = !DILocation(line: 91, column: 32, scope: !6946)
!6961 = !DILocation(line: 91, column: 3, scope: !6946)
!6962 = !DILocation(line: 92, column: 7, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6946, file: !1838, line: 92, column: 7)
!6964 = !DILocation(line: 92, column: 11, scope: !6963)
!6965 = !DILocation(line: 92, column: 7, scope: !6946)
!6966 = !DILocation(line: 94, column: 21, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6963, file: !1838, line: 93, column: 3)
!6968 = !DILocation(line: 94, column: 28, scope: !6967)
!6969 = !DILocation(line: 94, column: 5, scope: !6967)
!6970 = !DILocation(line: 95, column: 3, scope: !6967)
!6971 = !DILocation(line: 96, column: 1, scope: !6946)
!6972 = distinct !DISubprogram(name: "priv_sock_send_int", scope: !1838, file: !1838, line: 194, type: !6973, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{null, !19, !19}
!6975 = !DILocalVariable(name: "fd", arg: 1, scope: !6972, file: !1838, line: 194, type: !19)
!6976 = !DILocation(line: 194, column: 24, scope: !6972)
!6977 = !DILocalVariable(name: "the_int", arg: 2, scope: !6972, file: !1838, line: 194, type: !19)
!6978 = !DILocation(line: 194, column: 32, scope: !6972)
!6979 = !DILocalVariable(name: "retval", scope: !6972, file: !1838, line: 196, type: !19)
!6980 = !DILocation(line: 196, column: 7, scope: !6972)
!6981 = !DILocation(line: 196, column: 39, scope: !6972)
!6982 = !DILocation(line: 196, column: 43, scope: !6972)
!6983 = !DILocation(line: 196, column: 16, scope: !6972)
!6984 = !DILocation(line: 197, column: 7, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6972, file: !1838, line: 197, column: 7)
!6986 = !DILocation(line: 197, column: 14, scope: !6985)
!6987 = !DILocation(line: 197, column: 7, scope: !6972)
!6988 = !DILocation(line: 199, column: 5, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6985, file: !1838, line: 198, column: 3)
!6990 = !DILocation(line: 200, column: 3, scope: !6989)
!6991 = !DILocation(line: 201, column: 1, scope: !6972)
!6992 = distinct !DISubprogram(name: "priv_sock_send_buf", scope: !1838, file: !1838, line: 99, type: !6993, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!6993 = !DISubroutineType(types: !6994)
!6994 = !{null, !19, !88, !26}
!6995 = !DILocalVariable(name: "fd", arg: 1, scope: !6992, file: !1838, line: 99, type: !19)
!6996 = !DILocation(line: 99, column: 24, scope: !6992)
!6997 = !DILocalVariable(name: "p_buf", arg: 2, scope: !6992, file: !1838, line: 99, type: !88)
!6998 = !DILocation(line: 99, column: 40, scope: !6992)
!6999 = !DILocalVariable(name: "len", arg: 3, scope: !6992, file: !1838, line: 99, type: !26)
!7000 = !DILocation(line: 99, column: 60, scope: !6992)
!7001 = !DILocation(line: 101, column: 22, scope: !6992)
!7002 = !DILocation(line: 101, column: 32, scope: !6992)
!7003 = !DILocation(line: 101, column: 3, scope: !6992)
!7004 = !DILocation(line: 102, column: 7, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6992, file: !1838, line: 102, column: 7)
!7006 = !DILocation(line: 102, column: 11, scope: !7005)
!7007 = !DILocation(line: 102, column: 7, scope: !6992)
!7008 = !DILocation(line: 104, column: 32, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !1838, line: 104, column: 9)
!7010 = distinct !DILexicalBlock(scope: !7005, file: !1838, line: 103, column: 3)
!7011 = !DILocation(line: 104, column: 36, scope: !7009)
!7012 = !DILocation(line: 104, column: 43, scope: !7009)
!7013 = !DILocation(line: 104, column: 9, scope: !7009)
!7014 = !DILocation(line: 104, column: 57, scope: !7009)
!7015 = !DILocation(line: 104, column: 48, scope: !7009)
!7016 = !DILocation(line: 104, column: 9, scope: !7010)
!7017 = !DILocation(line: 106, column: 7, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7009, file: !1838, line: 105, column: 5)
!7019 = !DILocation(line: 107, column: 5, scope: !7018)
!7020 = !DILocation(line: 108, column: 3, scope: !7010)
!7021 = !DILocation(line: 109, column: 1, scope: !6992)
!7022 = distinct !DISubprogram(name: "priv_sock_recv_buf", scope: !1838, file: !1838, line: 112, type: !7023, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{null, !19, !16, !26}
!7025 = !DILocalVariable(name: "fd", arg: 1, scope: !7022, file: !1838, line: 112, type: !19)
!7026 = !DILocation(line: 112, column: 24, scope: !7022)
!7027 = !DILocalVariable(name: "p_buf", arg: 2, scope: !7022, file: !1838, line: 112, type: !16)
!7028 = !DILocation(line: 112, column: 34, scope: !7022)
!7029 = !DILocalVariable(name: "len", arg: 3, scope: !7022, file: !1838, line: 112, type: !26)
!7030 = !DILocation(line: 112, column: 54, scope: !7022)
!7031 = !DILocalVariable(name: "recv_len", scope: !7022, file: !1838, line: 114, type: !26)
!7032 = !DILocation(line: 114, column: 16, scope: !7022)
!7033 = !DILocation(line: 114, column: 60, scope: !7022)
!7034 = !DILocation(line: 114, column: 42, scope: !7022)
!7035 = !DILocation(line: 115, column: 7, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7022, file: !1838, line: 115, column: 7)
!7037 = !DILocation(line: 115, column: 18, scope: !7036)
!7038 = !DILocation(line: 115, column: 16, scope: !7036)
!7039 = !DILocation(line: 115, column: 7, scope: !7022)
!7040 = !DILocation(line: 117, column: 5, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !1838, line: 116, column: 3)
!7042 = !DILocation(line: 118, column: 3, scope: !7041)
!7043 = !DILocation(line: 119, column: 7, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7022, file: !1838, line: 119, column: 7)
!7045 = !DILocation(line: 119, column: 16, scope: !7044)
!7046 = !DILocation(line: 119, column: 7, scope: !7022)
!7047 = !DILocation(line: 121, column: 31, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !1838, line: 121, column: 9)
!7049 = distinct !DILexicalBlock(scope: !7044, file: !1838, line: 120, column: 3)
!7050 = !DILocation(line: 121, column: 35, scope: !7048)
!7051 = !DILocation(line: 121, column: 42, scope: !7048)
!7052 = !DILocation(line: 121, column: 9, scope: !7048)
!7053 = !DILocation(line: 121, column: 61, scope: !7048)
!7054 = !DILocation(line: 121, column: 52, scope: !7048)
!7055 = !DILocation(line: 121, column: 9, scope: !7049)
!7056 = !DILocation(line: 123, column: 7, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7048, file: !1838, line: 122, column: 5)
!7058 = !DILocation(line: 124, column: 5, scope: !7057)
!7059 = !DILocation(line: 125, column: 3, scope: !7049)
!7060 = !DILocation(line: 126, column: 1, scope: !7022)
!7061 = distinct !DISubprogram(name: "priv_sock_get_int", scope: !1838, file: !1838, line: 204, type: !7062, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{!19, !19}
!7064 = !DILocalVariable(name: "fd", arg: 1, scope: !7061, file: !1838, line: 204, type: !19)
!7065 = !DILocation(line: 204, column: 23, scope: !7061)
!7066 = !DILocalVariable(name: "the_int", scope: !7061, file: !1838, line: 206, type: !19)
!7067 = !DILocation(line: 206, column: 7, scope: !7061)
!7068 = !DILocalVariable(name: "retval", scope: !7061, file: !1838, line: 207, type: !19)
!7069 = !DILocation(line: 207, column: 7, scope: !7061)
!7070 = !DILocation(line: 207, column: 38, scope: !7061)
!7071 = !DILocation(line: 207, column: 42, scope: !7061)
!7072 = !DILocation(line: 207, column: 16, scope: !7061)
!7073 = !DILocation(line: 208, column: 7, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7061, file: !1838, line: 208, column: 7)
!7075 = !DILocation(line: 208, column: 14, scope: !7074)
!7076 = !DILocation(line: 208, column: 7, scope: !7061)
!7077 = !DILocation(line: 210, column: 5, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7074, file: !1838, line: 209, column: 3)
!7079 = !DILocation(line: 211, column: 3, scope: !7078)
!7080 = !DILocation(line: 212, column: 10, scope: !7061)
!7081 = !DILocation(line: 212, column: 3, scope: !7061)
!7082 = distinct !DISubprogram(name: "priv_sock_get_result", scope: !1838, file: !1838, line: 129, type: !7083, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7083 = !DISubroutineType(types: !7084)
!7084 = !{!17, !19}
!7085 = !DILocalVariable(name: "fd", arg: 1, scope: !7082, file: !1838, line: 129, type: !19)
!7086 = !DILocation(line: 129, column: 26, scope: !7082)
!7087 = !DILocalVariable(name: "res", scope: !7082, file: !1838, line: 131, type: !17)
!7088 = !DILocation(line: 131, column: 8, scope: !7082)
!7089 = !DILocalVariable(name: "retval", scope: !7082, file: !1838, line: 132, type: !19)
!7090 = !DILocation(line: 132, column: 7, scope: !7082)
!7091 = !DILocation(line: 132, column: 38, scope: !7082)
!7092 = !DILocation(line: 132, column: 16, scope: !7082)
!7093 = !DILocation(line: 133, column: 7, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7082, file: !1838, line: 133, column: 7)
!7095 = !DILocation(line: 133, column: 14, scope: !7094)
!7096 = !DILocation(line: 133, column: 7, scope: !7082)
!7097 = !DILocation(line: 135, column: 5, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7094, file: !1838, line: 134, column: 3)
!7099 = !DILocation(line: 136, column: 3, scope: !7098)
!7100 = !DILocation(line: 137, column: 10, scope: !7082)
!7101 = !DILocation(line: 137, column: 3, scope: !7082)
!7102 = distinct !DISubprogram(name: "priv_sock_get_cmd", scope: !1838, file: !1838, line: 141, type: !7083, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7103 = !DILocalVariable(name: "fd", arg: 1, scope: !7102, file: !1838, line: 141, type: !19)
!7104 = !DILocation(line: 141, column: 23, scope: !7102)
!7105 = !DILocalVariable(name: "res", scope: !7102, file: !1838, line: 143, type: !17)
!7106 = !DILocation(line: 143, column: 8, scope: !7102)
!7107 = !DILocalVariable(name: "retval", scope: !7102, file: !1838, line: 144, type: !19)
!7108 = !DILocation(line: 144, column: 7, scope: !7102)
!7109 = !DILocation(line: 144, column: 38, scope: !7102)
!7110 = !DILocation(line: 144, column: 16, scope: !7102)
!7111 = !DILocation(line: 145, column: 7, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7102, file: !1838, line: 145, column: 7)
!7113 = !DILocation(line: 145, column: 14, scope: !7112)
!7114 = !DILocation(line: 145, column: 7, scope: !7102)
!7115 = !DILocation(line: 147, column: 5, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7112, file: !1838, line: 146, column: 3)
!7117 = !DILocation(line: 148, column: 3, scope: !7116)
!7118 = !DILocation(line: 149, column: 10, scope: !7102)
!7119 = !DILocation(line: 149, column: 3, scope: !7102)
!7120 = distinct !DISubprogram(name: "priv_sock_get_str", scope: !1838, file: !1838, line: 153, type: !7121, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7121 = !DISubroutineType(types: !7122)
!7122 = !{null, !19, !7123}
!7123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6780, size: 64)
!7124 = !DILocalVariable(name: "fd", arg: 1, scope: !7120, file: !1838, line: 153, type: !19)
!7125 = !DILocation(line: 153, column: 23, scope: !7120)
!7126 = !DILocalVariable(name: "p_dest", arg: 2, scope: !7120, file: !1838, line: 153, type: !7123)
!7127 = !DILocation(line: 153, column: 41, scope: !7120)
!7128 = !DILocalVariable(name: "len", scope: !7120, file: !1838, line: 155, type: !26)
!7129 = !DILocation(line: 155, column: 16, scope: !7120)
!7130 = !DILocation(line: 155, column: 55, scope: !7120)
!7131 = !DILocation(line: 155, column: 37, scope: !7120)
!7132 = !DILocation(line: 156, column: 7, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7120, file: !1838, line: 156, column: 7)
!7134 = !DILocation(line: 156, column: 11, scope: !7133)
!7135 = !DILocation(line: 156, column: 7, scope: !7120)
!7136 = !DILocation(line: 158, column: 5, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7133, file: !1838, line: 157, column: 3)
!7138 = !DILocation(line: 159, column: 3, scope: !7137)
!7139 = !DILocation(line: 160, column: 13, scope: !7120)
!7140 = !DILocation(line: 160, column: 3, scope: !7120)
!7141 = !DILocation(line: 161, column: 7, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7120, file: !1838, line: 161, column: 7)
!7143 = !DILocation(line: 161, column: 11, scope: !7142)
!7144 = !DILocation(line: 161, column: 7, scope: !7120)
!7145 = !DILocalVariable(name: "retval", scope: !7146, file: !1838, line: 163, type: !19)
!7146 = distinct !DILexicalBlock(scope: !7142, file: !1838, line: 162, column: 3)
!7147 = !DILocation(line: 163, column: 9, scope: !7146)
!7148 = !DILocation(line: 163, column: 33, scope: !7146)
!7149 = !DILocation(line: 163, column: 41, scope: !7146)
!7150 = !DILocation(line: 163, column: 45, scope: !7146)
!7151 = !DILocation(line: 163, column: 18, scope: !7146)
!7152 = !DILocation(line: 164, column: 24, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7146, file: !1838, line: 164, column: 9)
!7154 = !DILocation(line: 164, column: 34, scope: !7153)
!7155 = !DILocation(line: 164, column: 31, scope: !7153)
!7156 = !DILocation(line: 164, column: 9, scope: !7146)
!7157 = !DILocation(line: 166, column: 7, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7153, file: !1838, line: 165, column: 5)
!7159 = !DILocation(line: 167, column: 5, scope: !7158)
!7160 = !DILocation(line: 168, column: 3, scope: !7146)
!7161 = !DILocation(line: 169, column: 1, scope: !7120)
!7162 = distinct !DISubprogram(name: "priv_sock_send_result", scope: !1838, file: !1838, line: 172, type: !6928, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7163 = !DILocalVariable(name: "fd", arg: 1, scope: !7162, file: !1838, line: 172, type: !19)
!7164 = !DILocation(line: 172, column: 27, scope: !7162)
!7165 = !DILocalVariable(name: "res", arg: 2, scope: !7162, file: !1838, line: 172, type: !17)
!7166 = !DILocation(line: 172, column: 36, scope: !7162)
!7167 = !DILocalVariable(name: "retval", scope: !7162, file: !1838, line: 174, type: !19)
!7168 = !DILocation(line: 174, column: 7, scope: !7162)
!7169 = !DILocation(line: 174, column: 39, scope: !7162)
!7170 = !DILocation(line: 174, column: 16, scope: !7162)
!7171 = !DILocation(line: 175, column: 7, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7162, file: !1838, line: 175, column: 7)
!7173 = !DILocation(line: 175, column: 14, scope: !7172)
!7174 = !DILocation(line: 175, column: 7, scope: !7162)
!7175 = !DILocation(line: 177, column: 5, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7172, file: !1838, line: 176, column: 3)
!7177 = !DILocation(line: 178, column: 3, scope: !7176)
!7178 = !DILocation(line: 179, column: 1, scope: !7162)
!7179 = distinct !DISubprogram(name: "priv_sock_send_fd", scope: !1838, file: !1838, line: 182, type: !6973, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7180 = !DILocalVariable(name: "fd", arg: 1, scope: !7179, file: !1838, line: 182, type: !19)
!7181 = !DILocation(line: 182, column: 23, scope: !7179)
!7182 = !DILocalVariable(name: "send_fd", arg: 2, scope: !7179, file: !1838, line: 182, type: !19)
!7183 = !DILocation(line: 182, column: 31, scope: !7179)
!7184 = !DILocation(line: 184, column: 23, scope: !7179)
!7185 = !DILocation(line: 184, column: 27, scope: !7179)
!7186 = !DILocation(line: 184, column: 3, scope: !7179)
!7187 = !DILocation(line: 185, column: 1, scope: !7179)
!7188 = distinct !DISubprogram(name: "priv_sock_recv_fd", scope: !1838, file: !1838, line: 188, type: !7062, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1837, retainedNodes: !128)
!7189 = !DILocalVariable(name: "fd", arg: 1, scope: !7188, file: !1838, line: 188, type: !19)
!7190 = !DILocation(line: 188, column: 23, scope: !7188)
!7191 = !DILocation(line: 190, column: 30, scope: !7188)
!7192 = !DILocation(line: 190, column: 10, scope: !7188)
!7193 = !DILocation(line: 190, column: 3, scope: !7188)
!7194 = distinct !DISubprogram(name: "tunables_load_defaults", scope: !337, file: !337, line: 149, type: !1619, scopeLine: 150, spFlags: DISPFlagDefinition, unit: !336, retainedNodes: !128)
!7195 = !DILocation(line: 151, column: 28, scope: !7194)
!7196 = !DILocation(line: 152, column: 24, scope: !7194)
!7197 = !DILocation(line: 153, column: 23, scope: !7194)
!7198 = !DILocation(line: 154, column: 23, scope: !7194)
!7199 = !DILocation(line: 155, column: 29, scope: !7194)
!7200 = !DILocation(line: 156, column: 24, scope: !7194)
!7201 = !DILocation(line: 157, column: 30, scope: !7194)
!7202 = !DILocation(line: 158, column: 35, scope: !7194)
!7203 = !DILocation(line: 159, column: 35, scope: !7194)
!7204 = !DILocation(line: 160, column: 25, scope: !7194)
!7205 = !DILocation(line: 161, column: 32, scope: !7194)
!7206 = !DILocation(line: 162, column: 26, scope: !7194)
!7207 = !DILocation(line: 163, column: 29, scope: !7194)
!7208 = !DILocation(line: 164, column: 36, scope: !7194)
!7209 = !DILocation(line: 165, column: 29, scope: !7194)
!7210 = !DILocation(line: 166, column: 31, scope: !7194)
!7211 = !DILocation(line: 167, column: 33, scope: !7194)
!7212 = !DILocation(line: 168, column: 29, scope: !7194)
!7213 = !DILocation(line: 169, column: 30, scope: !7194)
!7214 = !DILocation(line: 170, column: 28, scope: !7194)
!7215 = !DILocation(line: 171, column: 29, scope: !7194)
!7216 = !DILocation(line: 172, column: 30, scope: !7194)
!7217 = !DILocation(line: 173, column: 31, scope: !7194)
!7218 = !DILocation(line: 174, column: 29, scope: !7194)
!7219 = !DILocation(line: 175, column: 29, scope: !7194)
!7220 = !DILocation(line: 176, column: 28, scope: !7194)
!7221 = !DILocation(line: 177, column: 24, scope: !7194)
!7222 = !DILocation(line: 178, column: 27, scope: !7194)
!7223 = !DILocation(line: 179, column: 25, scope: !7194)
!7224 = !DILocation(line: 180, column: 25, scope: !7194)
!7225 = !DILocation(line: 181, column: 23, scope: !7194)
!7226 = !DILocation(line: 182, column: 20, scope: !7194)
!7227 = !DILocation(line: 183, column: 18, scope: !7194)
!7228 = !DILocation(line: 184, column: 28, scope: !7194)
!7229 = !DILocation(line: 185, column: 32, scope: !7194)
!7230 = !DILocation(line: 186, column: 28, scope: !7194)
!7231 = !DILocation(line: 187, column: 24, scope: !7194)
!7232 = !DILocation(line: 188, column: 24, scope: !7194)
!7233 = !DILocation(line: 189, column: 27, scope: !7194)
!7234 = !DILocation(line: 190, column: 23, scope: !7194)
!7235 = !DILocation(line: 191, column: 27, scope: !7194)
!7236 = !DILocation(line: 192, column: 25, scope: !7194)
!7237 = !DILocation(line: 193, column: 22, scope: !7194)
!7238 = !DILocation(line: 194, column: 35, scope: !7194)
!7239 = !DILocation(line: 195, column: 27, scope: !7194)
!7240 = !DILocation(line: 196, column: 27, scope: !7194)
!7241 = !DILocation(line: 197, column: 26, scope: !7194)
!7242 = !DILocation(line: 198, column: 24, scope: !7194)
!7243 = !DILocation(line: 199, column: 36, scope: !7194)
!7244 = !DILocation(line: 200, column: 33, scope: !7194)
!7245 = !DILocation(line: 201, column: 23, scope: !7194)
!7246 = !DILocation(line: 202, column: 22, scope: !7194)
!7247 = !DILocation(line: 203, column: 26, scope: !7194)
!7248 = !DILocation(line: 204, column: 34, scope: !7194)
!7249 = !DILocation(line: 205, column: 32, scope: !7194)
!7250 = !DILocation(line: 206, column: 17, scope: !7194)
!7251 = !DILocation(line: 207, column: 17, scope: !7194)
!7252 = !DILocation(line: 208, column: 17, scope: !7194)
!7253 = !DILocation(line: 209, column: 29, scope: !7194)
!7254 = !DILocation(line: 210, column: 33, scope: !7194)
!7255 = !DILocation(line: 211, column: 31, scope: !7194)
!7256 = !DILocation(line: 212, column: 22, scope: !7194)
!7257 = !DILocation(line: 213, column: 29, scope: !7194)
!7258 = !DILocation(line: 214, column: 29, scope: !7194)
!7259 = !DILocation(line: 215, column: 21, scope: !7194)
!7260 = !DILocation(line: 216, column: 24, scope: !7194)
!7261 = !DILocation(line: 217, column: 25, scope: !7194)
!7262 = !DILocation(line: 218, column: 31, scope: !7194)
!7263 = !DILocation(line: 219, column: 37, scope: !7194)
!7264 = !DILocation(line: 220, column: 28, scope: !7194)
!7265 = !DILocation(line: 221, column: 33, scope: !7194)
!7266 = !DILocation(line: 222, column: 24, scope: !7194)
!7267 = !DILocation(line: 223, column: 26, scope: !7194)
!7268 = !DILocation(line: 224, column: 29, scope: !7194)
!7269 = !DILocation(line: 225, column: 19, scope: !7194)
!7270 = !DILocation(line: 226, column: 27, scope: !7194)
!7271 = !DILocation(line: 227, column: 22, scope: !7194)
!7272 = !DILocation(line: 228, column: 23, scope: !7194)
!7273 = !DILocation(line: 229, column: 27, scope: !7194)
!7274 = !DILocation(line: 230, column: 34, scope: !7194)
!7275 = !DILocation(line: 232, column: 26, scope: !7194)
!7276 = !DILocation(line: 233, column: 27, scope: !7194)
!7277 = !DILocation(line: 234, column: 23, scope: !7194)
!7278 = !DILocation(line: 235, column: 22, scope: !7194)
!7279 = !DILocation(line: 236, column: 25, scope: !7194)
!7280 = !DILocation(line: 237, column: 32, scope: !7194)
!7281 = !DILocation(line: 238, column: 35, scope: !7194)
!7282 = !DILocation(line: 240, column: 25, scope: !7194)
!7283 = !DILocation(line: 241, column: 25, scope: !7194)
!7284 = !DILocation(line: 242, column: 25, scope: !7194)
!7285 = !DILocation(line: 243, column: 26, scope: !7194)
!7286 = !DILocation(line: 245, column: 23, scope: !7194)
!7287 = !DILocation(line: 246, column: 23, scope: !7194)
!7288 = !DILocation(line: 248, column: 26, scope: !7194)
!7289 = !DILocation(line: 249, column: 22, scope: !7194)
!7290 = !DILocation(line: 250, column: 28, scope: !7194)
!7291 = !DILocation(line: 251, column: 30, scope: !7194)
!7292 = !DILocation(line: 252, column: 34, scope: !7194)
!7293 = !DILocation(line: 253, column: 27, scope: !7194)
!7294 = !DILocation(line: 255, column: 29, scope: !7194)
!7295 = !DILocation(line: 257, column: 3, scope: !7194)
!7296 = !DILocation(line: 258, column: 3, scope: !7194)
!7297 = !DILocation(line: 259, column: 3, scope: !7194)
!7298 = !DILocation(line: 260, column: 3, scope: !7194)
!7299 = !DILocation(line: 261, column: 3, scope: !7194)
!7300 = !DILocation(line: 262, column: 3, scope: !7194)
!7301 = !DILocation(line: 263, column: 3, scope: !7194)
!7302 = !DILocation(line: 264, column: 3, scope: !7194)
!7303 = !DILocation(line: 265, column: 3, scope: !7194)
!7304 = !DILocation(line: 266, column: 3, scope: !7194)
!7305 = !DILocation(line: 267, column: 3, scope: !7194)
!7306 = !DILocation(line: 268, column: 3, scope: !7194)
!7307 = !DILocation(line: 269, column: 3, scope: !7194)
!7308 = !DILocation(line: 270, column: 3, scope: !7194)
!7309 = !DILocation(line: 271, column: 3, scope: !7194)
!7310 = !DILocation(line: 272, column: 3, scope: !7194)
!7311 = !DILocation(line: 273, column: 3, scope: !7194)
!7312 = !DILocation(line: 274, column: 3, scope: !7194)
!7313 = !DILocation(line: 275, column: 3, scope: !7194)
!7314 = !DILocation(line: 276, column: 3, scope: !7194)
!7315 = !DILocation(line: 277, column: 3, scope: !7194)
!7316 = !DILocation(line: 278, column: 3, scope: !7194)
!7317 = !DILocation(line: 279, column: 3, scope: !7194)
!7318 = !DILocation(line: 280, column: 3, scope: !7194)
!7319 = !DILocation(line: 281, column: 3, scope: !7194)
!7320 = !DILocation(line: 282, column: 3, scope: !7194)
!7321 = !DILocation(line: 284, column: 3, scope: !7194)
!7322 = !DILocation(line: 286, column: 3, scope: !7194)
!7323 = !DILocation(line: 287, column: 3, scope: !7194)
!7324 = !DILocation(line: 288, column: 3, scope: !7194)
!7325 = !DILocation(line: 289, column: 3, scope: !7194)
!7326 = !DILocation(line: 290, column: 3, scope: !7194)
!7327 = !DILocation(line: 291, column: 1, scope: !7194)
!7328 = distinct !DISubprogram(name: "install_str_setting", scope: !337, file: !337, line: 294, type: !7329, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !336, retainedNodes: !128)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{null, !88, !939}
!7331 = !DILocalVariable(name: "p_value", arg: 1, scope: !7328, file: !337, line: 294, type: !88)
!7332 = !DILocation(line: 294, column: 33, scope: !7328)
!7333 = !DILocalVariable(name: "p_storage", arg: 2, scope: !7328, file: !337, line: 294, type: !939)
!7334 = !DILocation(line: 294, column: 55, scope: !7328)
!7335 = !DILocalVariable(name: "p_curr_val", scope: !7328, file: !337, line: 296, type: !16)
!7336 = !DILocation(line: 296, column: 9, scope: !7328)
!7337 = !DILocation(line: 296, column: 31, scope: !7328)
!7338 = !DILocation(line: 296, column: 30, scope: !7328)
!7339 = !DILocation(line: 297, column: 7, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7328, file: !337, line: 297, column: 7)
!7341 = !DILocation(line: 297, column: 18, scope: !7340)
!7342 = !DILocation(line: 297, column: 7, scope: !7328)
!7343 = !DILocation(line: 299, column: 22, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7340, file: !337, line: 298, column: 3)
!7345 = !DILocation(line: 299, column: 5, scope: !7344)
!7346 = !DILocation(line: 300, column: 3, scope: !7344)
!7347 = !DILocation(line: 301, column: 7, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7328, file: !337, line: 301, column: 7)
!7349 = !DILocation(line: 301, column: 15, scope: !7348)
!7350 = !DILocation(line: 301, column: 7, scope: !7328)
!7351 = !DILocation(line: 303, column: 34, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7348, file: !337, line: 302, column: 3)
!7353 = !DILocation(line: 303, column: 15, scope: !7352)
!7354 = !DILocation(line: 303, column: 13, scope: !7352)
!7355 = !DILocation(line: 304, column: 3, scope: !7352)
!7356 = !DILocation(line: 305, column: 16, scope: !7328)
!7357 = !DILocation(line: 305, column: 4, scope: !7328)
!7358 = !DILocation(line: 305, column: 14, scope: !7328)
!7359 = !DILocation(line: 306, column: 1, scope: !7328)
!7360 = distinct !DISubprogram(name: "vsf_ftpdataio_dispose_transfer_fd", scope: !605, file: !605, line: 56, type: !7361, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7361 = !DISubroutineType(types: !7362)
!7362 = !{!19, !613}
!7363 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7360, file: !605, line: 56, type: !613)
!7364 = !DILocation(line: 56, column: 55, scope: !7360)
!7365 = !DILocalVariable(name: "dispose_ret", scope: !7360, file: !605, line: 58, type: !19)
!7366 = !DILocation(line: 58, column: 7, scope: !7360)
!7367 = !DILocalVariable(name: "retval", scope: !7360, file: !605, line: 59, type: !19)
!7368 = !DILocation(line: 59, column: 7, scope: !7360)
!7369 = !DILocation(line: 60, column: 7, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7360, file: !605, line: 60, column: 7)
!7371 = !DILocation(line: 60, column: 15, scope: !7370)
!7372 = !DILocation(line: 60, column: 23, scope: !7370)
!7373 = !DILocation(line: 60, column: 7, scope: !7360)
!7374 = !DILocation(line: 62, column: 5, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7370, file: !605, line: 61, column: 3)
!7376 = !DILocation(line: 63, column: 3, scope: !7375)
!7377 = !DILocation(line: 64, column: 3, scope: !7360)
!7378 = !DILocation(line: 65, column: 7, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7360, file: !605, line: 65, column: 7)
!7380 = !DILocation(line: 65, column: 15, scope: !7379)
!7381 = !DILocation(line: 65, column: 28, scope: !7379)
!7382 = !DILocation(line: 65, column: 31, scope: !7379)
!7383 = !DILocation(line: 65, column: 39, scope: !7379)
!7384 = !DILocation(line: 65, column: 7, scope: !7360)
!7385 = !DILocalVariable(name: "result", scope: !7386, file: !605, line: 67, type: !17)
!7386 = distinct !DILexicalBlock(scope: !7379, file: !605, line: 66, column: 3)
!7387 = !DILocation(line: 67, column: 10, scope: !7386)
!7388 = !DILocation(line: 68, column: 22, scope: !7386)
!7389 = !DILocation(line: 68, column: 5, scope: !7386)
!7390 = !DILocation(line: 69, column: 24, scope: !7386)
!7391 = !DILocation(line: 69, column: 32, scope: !7386)
!7392 = !DILocation(line: 69, column: 5, scope: !7386)
!7393 = !DILocation(line: 70, column: 35, scope: !7386)
!7394 = !DILocation(line: 70, column: 43, scope: !7386)
!7395 = !DILocation(line: 70, column: 14, scope: !7386)
!7396 = !DILocation(line: 70, column: 12, scope: !7386)
!7397 = !DILocation(line: 71, column: 9, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7386, file: !605, line: 71, column: 9)
!7399 = !DILocation(line: 71, column: 16, scope: !7398)
!7400 = !DILocation(line: 71, column: 9, scope: !7386)
!7401 = !DILocation(line: 73, column: 19, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7398, file: !605, line: 72, column: 5)
!7403 = !DILocation(line: 74, column: 5, scope: !7402)
!7404 = !DILocation(line: 75, column: 3, scope: !7386)
!7405 = !DILocation(line: 76, column: 12, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7379, file: !605, line: 76, column: 12)
!7407 = !DILocation(line: 76, column: 20, scope: !7406)
!7408 = !DILocation(line: 76, column: 12, scope: !7379)
!7409 = !DILocation(line: 78, column: 22, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7406, file: !605, line: 77, column: 3)
!7411 = !DILocation(line: 78, column: 5, scope: !7410)
!7412 = !DILocation(line: 79, column: 34, scope: !7410)
!7413 = !DILocation(line: 79, column: 19, scope: !7410)
!7414 = !DILocation(line: 79, column: 17, scope: !7410)
!7415 = !DILocation(line: 80, column: 3, scope: !7410)
!7416 = !DILocation(line: 81, column: 8, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7360, file: !605, line: 81, column: 7)
!7418 = !DILocation(line: 81, column: 16, scope: !7417)
!7419 = !DILocation(line: 81, column: 30, scope: !7417)
!7420 = !DILocation(line: 81, column: 34, scope: !7417)
!7421 = !DILocation(line: 81, column: 42, scope: !7417)
!7422 = !DILocation(line: 81, column: 55, scope: !7417)
!7423 = !DILocation(line: 81, column: 58, scope: !7417)
!7424 = !DILocation(line: 81, column: 70, scope: !7417)
!7425 = !DILocation(line: 81, column: 7, scope: !7360)
!7426 = !DILocation(line: 86, column: 22, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7417, file: !605, line: 82, column: 3)
!7428 = !DILocation(line: 86, column: 5, scope: !7427)
!7429 = !DILocation(line: 87, column: 33, scope: !7427)
!7430 = !DILocation(line: 87, column: 41, scope: !7427)
!7431 = !DILocation(line: 87, column: 5, scope: !7427)
!7432 = !DILocation(line: 88, column: 3, scope: !7427)
!7433 = !DILocation(line: 90, column: 37, scope: !7360)
!7434 = !DILocation(line: 90, column: 45, scope: !7360)
!7435 = !DILocation(line: 90, column: 12, scope: !7360)
!7436 = !DILocation(line: 90, column: 10, scope: !7360)
!7437 = !DILocation(line: 91, column: 35, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7360, file: !605, line: 91, column: 7)
!7439 = !DILocation(line: 91, column: 7, scope: !7438)
!7440 = !DILocation(line: 91, column: 7, scope: !7360)
!7441 = !DILocation(line: 94, column: 42, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !605, line: 92, column: 3)
!7443 = !DILocation(line: 94, column: 50, scope: !7442)
!7444 = !DILocation(line: 94, column: 5, scope: !7442)
!7445 = !DILocation(line: 95, column: 37, scope: !7442)
!7446 = !DILocation(line: 95, column: 45, scope: !7442)
!7447 = !DILocation(line: 95, column: 12, scope: !7442)
!7448 = !DILocation(line: 96, column: 3, scope: !7442)
!7449 = !DILocation(line: 97, column: 3, scope: !7360)
!7450 = !DILocation(line: 97, column: 11, scope: !7360)
!7451 = !DILocation(line: 97, column: 19, scope: !7360)
!7452 = !DILocation(line: 98, column: 7, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7360, file: !605, line: 98, column: 7)
!7454 = !DILocation(line: 98, column: 39, scope: !7453)
!7455 = !DILocation(line: 98, column: 7, scope: !7360)
!7456 = !DILocation(line: 100, column: 5, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7453, file: !605, line: 99, column: 3)
!7458 = !DILocation(line: 101, column: 3, scope: !7457)
!7459 = !DILocation(line: 102, column: 7, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7360, file: !605, line: 102, column: 7)
!7461 = !DILocation(line: 102, column: 15, scope: !7460)
!7462 = !DILocation(line: 102, column: 29, scope: !7460)
!7463 = !DILocation(line: 102, column: 32, scope: !7460)
!7464 = !DILocation(line: 102, column: 40, scope: !7460)
!7465 = !DILocation(line: 102, column: 7, scope: !7360)
!7466 = !DILocation(line: 104, column: 17, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7460, file: !605, line: 103, column: 3)
!7468 = !DILocation(line: 105, column: 3, scope: !7467)
!7469 = !DILocation(line: 106, column: 10, scope: !7360)
!7470 = !DILocation(line: 106, column: 3, scope: !7360)
!7471 = distinct !DISubprogram(name: "start_data_alarm", scope: !605, file: !605, line: 214, type: !7472, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{null, !613}
!7474 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7471, file: !605, line: 214, type: !613)
!7475 = !DILocation(line: 214, column: 38, scope: !7471)
!7476 = !DILocation(line: 216, column: 7, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7471, file: !605, line: 216, column: 7)
!7478 = !DILocation(line: 216, column: 39, scope: !7477)
!7479 = !DILocation(line: 216, column: 7, scope: !7471)
!7480 = !DILocation(line: 220, column: 36, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7477, file: !605, line: 217, column: 3)
!7482 = !DILocation(line: 218, column: 5, scope: !7481)
!7483 = !DILocation(line: 222, column: 27, scope: !7481)
!7484 = !DILocation(line: 222, column: 5, scope: !7481)
!7485 = !DILocation(line: 223, column: 3, scope: !7481)
!7486 = !DILocation(line: 224, column: 12, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7477, file: !605, line: 224, column: 12)
!7488 = !DILocation(line: 224, column: 41, scope: !7487)
!7489 = !DILocation(line: 224, column: 12, scope: !7477)
!7490 = !DILocation(line: 226, column: 5, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7487, file: !605, line: 225, column: 3)
!7492 = !DILocation(line: 227, column: 3, scope: !7491)
!7493 = !DILocation(line: 228, column: 1, scope: !7471)
!7494 = distinct !DISubprogram(name: "handle_sigalrm", scope: !605, file: !605, line: 196, type: !1072, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7495 = !DILocalVariable(name: "p_private", arg: 1, scope: !7494, file: !605, line: 196, type: !80)
!7496 = !DILocation(line: 196, column: 22, scope: !7494)
!7497 = !DILocalVariable(name: "p_sess", scope: !7494, file: !605, line: 198, type: !613)
!7498 = !DILocation(line: 198, column: 23, scope: !7494)
!7499 = !DILocation(line: 198, column: 54, scope: !7494)
!7500 = !DILocation(line: 198, column: 32, scope: !7494)
!7501 = !DILocation(line: 199, column: 8, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7494, file: !605, line: 199, column: 7)
!7503 = !DILocation(line: 199, column: 16, scope: !7502)
!7504 = !DILocation(line: 199, column: 7, scope: !7494)
!7505 = !DILocation(line: 201, column: 5, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7502, file: !605, line: 200, column: 3)
!7507 = !DILocation(line: 201, column: 13, scope: !7506)
!7508 = !DILocation(line: 201, column: 26, scope: !7506)
!7509 = !DILocation(line: 202, column: 33, scope: !7506)
!7510 = !DILocation(line: 202, column: 41, scope: !7506)
!7511 = !DILocation(line: 202, column: 5, scope: !7506)
!7512 = !DILocation(line: 203, column: 5, scope: !7506)
!7513 = !DILocation(line: 204, column: 5, scope: !7506)
!7514 = !DILocation(line: 205, column: 3, scope: !7506)
!7515 = !DILocation(line: 208, column: 5, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7502, file: !605, line: 207, column: 3)
!7517 = !DILocation(line: 208, column: 13, scope: !7516)
!7518 = !DILocation(line: 208, column: 27, scope: !7516)
!7519 = !DILocation(line: 209, column: 22, scope: !7516)
!7520 = !DILocation(line: 209, column: 5, scope: !7516)
!7521 = !DILocation(line: 211, column: 1, scope: !7494)
!7522 = distinct !DISubprogram(name: "vsf_ftpdataio_get_pasv_fd", scope: !605, file: !605, line: 110, type: !7361, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7523 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7522, file: !605, line: 110, type: !613)
!7524 = !DILocation(line: 110, column: 47, scope: !7522)
!7525 = !DILocalVariable(name: "remote_fd", scope: !7522, file: !605, line: 112, type: !19)
!7526 = !DILocation(line: 112, column: 7, scope: !7522)
!7527 = !DILocation(line: 113, column: 7, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7522, file: !605, line: 113, column: 7)
!7529 = !DILocation(line: 113, column: 7, scope: !7522)
!7530 = !DILocation(line: 115, column: 45, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7528, file: !605, line: 114, column: 3)
!7532 = !DILocation(line: 115, column: 17, scope: !7531)
!7533 = !DILocation(line: 115, column: 15, scope: !7531)
!7534 = !DILocation(line: 116, column: 3, scope: !7531)
!7535 = !DILocation(line: 119, column: 45, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7528, file: !605, line: 118, column: 3)
!7537 = !DILocation(line: 119, column: 17, scope: !7536)
!7538 = !DILocation(line: 119, column: 15, scope: !7536)
!7539 = !DILocation(line: 122, column: 7, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7522, file: !605, line: 122, column: 7)
!7541 = !DILocation(line: 122, column: 17, scope: !7540)
!7542 = !DILocation(line: 122, column: 7, scope: !7522)
!7543 = !DILocation(line: 124, column: 21, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7540, file: !605, line: 123, column: 3)
!7545 = !DILocation(line: 124, column: 5, scope: !7544)
!7546 = !DILocation(line: 126, column: 12, scope: !7544)
!7547 = !DILocation(line: 126, column: 5, scope: !7544)
!7548 = !DILocation(line: 128, column: 12, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7540, file: !605, line: 128, column: 12)
!7550 = !DILocation(line: 128, column: 22, scope: !7549)
!7551 = !DILocation(line: 128, column: 12, scope: !7540)
!7552 = !DILocation(line: 130, column: 21, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7549, file: !605, line: 129, column: 3)
!7554 = !DILocation(line: 130, column: 5, scope: !7553)
!7555 = !DILocation(line: 131, column: 5, scope: !7553)
!7556 = !DILocation(line: 133, column: 25, scope: !7522)
!7557 = !DILocation(line: 133, column: 33, scope: !7522)
!7558 = !DILocation(line: 133, column: 3, scope: !7522)
!7559 = !DILocation(line: 134, column: 10, scope: !7522)
!7560 = !DILocation(line: 134, column: 3, scope: !7522)
!7561 = !DILocation(line: 135, column: 1, scope: !7522)
!7562 = distinct !DISubprogram(name: "init_data_sock_params", scope: !605, file: !605, line: 231, type: !7563, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{null, !613, !19}
!7565 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7562, file: !605, line: 231, type: !613)
!7566 = !DILocation(line: 231, column: 43, scope: !7562)
!7567 = !DILocalVariable(name: "sock_fd", arg: 2, scope: !7562, file: !605, line: 231, type: !19)
!7568 = !DILocation(line: 231, column: 55, scope: !7562)
!7569 = !DILocation(line: 233, column: 7, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7562, file: !605, line: 233, column: 7)
!7571 = !DILocation(line: 233, column: 15, scope: !7570)
!7572 = !DILocation(line: 233, column: 23, scope: !7570)
!7573 = !DILocation(line: 233, column: 7, scope: !7562)
!7574 = !DILocation(line: 235, column: 5, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7570, file: !605, line: 234, column: 3)
!7576 = !DILocation(line: 236, column: 3, scope: !7575)
!7577 = !DILocation(line: 237, column: 21, scope: !7562)
!7578 = !DILocation(line: 237, column: 3, scope: !7562)
!7579 = !DILocation(line: 237, column: 11, scope: !7562)
!7580 = !DILocation(line: 237, column: 19, scope: !7562)
!7581 = !DILocation(line: 238, column: 3, scope: !7562)
!7582 = !DILocation(line: 238, column: 11, scope: !7562)
!7583 = !DILocation(line: 238, column: 25, scope: !7562)
!7584 = !DILocation(line: 239, column: 34, scope: !7562)
!7585 = !DILocation(line: 239, column: 3, scope: !7562)
!7586 = !DILocation(line: 241, column: 36, scope: !7562)
!7587 = !DILocation(line: 241, column: 3, scope: !7562)
!7588 = !DILocation(line: 243, column: 45, scope: !7562)
!7589 = !DILocation(line: 243, column: 3, scope: !7562)
!7590 = !DILocation(line: 244, column: 20, scope: !7562)
!7591 = !DILocation(line: 244, column: 3, scope: !7562)
!7592 = !DILocation(line: 245, column: 1, scope: !7562)
!7593 = distinct !DISubprogram(name: "handle_io", scope: !605, file: !605, line: 248, type: !1671, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7594 = !DILocalVariable(name: "retval", arg: 1, scope: !7593, file: !605, line: 248, type: !19)
!7595 = !DILocation(line: 248, column: 15, scope: !7593)
!7596 = !DILocalVariable(name: "fd", arg: 2, scope: !7593, file: !605, line: 248, type: !19)
!7597 = !DILocation(line: 248, column: 27, scope: !7593)
!7598 = !DILocalVariable(name: "p_private", arg: 3, scope: !7593, file: !605, line: 248, type: !80)
!7599 = !DILocation(line: 248, column: 37, scope: !7593)
!7600 = !DILocalVariable(name: "curr_sec", scope: !7593, file: !605, line: 250, type: !28)
!7601 = !DILocation(line: 250, column: 8, scope: !7593)
!7602 = !DILocalVariable(name: "curr_usec", scope: !7593, file: !605, line: 251, type: !28)
!7603 = !DILocation(line: 251, column: 8, scope: !7593)
!7604 = !DILocalVariable(name: "bw_rate", scope: !7593, file: !605, line: 252, type: !26)
!7605 = !DILocation(line: 252, column: 16, scope: !7593)
!7606 = !DILocalVariable(name: "elapsed", scope: !7593, file: !605, line: 253, type: !692)
!7607 = !DILocation(line: 253, column: 10, scope: !7593)
!7608 = !DILocalVariable(name: "pause_time", scope: !7593, file: !605, line: 254, type: !692)
!7609 = !DILocation(line: 254, column: 10, scope: !7593)
!7610 = !DILocalVariable(name: "rate_ratio", scope: !7593, file: !605, line: 255, type: !692)
!7611 = !DILocation(line: 255, column: 10, scope: !7593)
!7612 = !DILocalVariable(name: "p_sess", scope: !7593, file: !605, line: 256, type: !613)
!7613 = !DILocation(line: 256, column: 23, scope: !7593)
!7614 = !DILocation(line: 256, column: 54, scope: !7593)
!7615 = !DILocation(line: 256, column: 32, scope: !7593)
!7616 = !DILocation(line: 257, column: 7, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7593, file: !605, line: 257, column: 7)
!7618 = !DILocation(line: 257, column: 15, scope: !7617)
!7619 = !DILocation(line: 257, column: 26, scope: !7617)
!7620 = !DILocation(line: 257, column: 23, scope: !7617)
!7621 = !DILocation(line: 257, column: 29, scope: !7617)
!7622 = !DILocation(line: 257, column: 60, scope: !7617)
!7623 = !DILocation(line: 257, column: 32, scope: !7617)
!7624 = !DILocation(line: 257, column: 68, scope: !7617)
!7625 = !DILocation(line: 258, column: 7, scope: !7617)
!7626 = !DILocation(line: 258, column: 14, scope: !7617)
!7627 = !DILocation(line: 257, column: 7, scope: !7593)
!7628 = !DILocation(line: 260, column: 5, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7617, file: !605, line: 259, column: 3)
!7630 = !DILocation(line: 263, column: 3, scope: !7593)
!7631 = !DILocation(line: 263, column: 11, scope: !7593)
!7632 = !DILocation(line: 263, column: 25, scope: !7593)
!7633 = !DILocation(line: 265, column: 7, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7593, file: !605, line: 265, column: 7)
!7635 = !DILocation(line: 265, column: 15, scope: !7634)
!7636 = !DILocation(line: 265, column: 27, scope: !7634)
!7637 = !DILocation(line: 265, column: 7, scope: !7593)
!7638 = !DILocation(line: 267, column: 5, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7634, file: !605, line: 266, column: 3)
!7640 = !DILocation(line: 270, column: 14, scope: !7593)
!7641 = !DILocation(line: 270, column: 12, scope: !7593)
!7642 = !DILocation(line: 271, column: 15, scope: !7593)
!7643 = !DILocation(line: 271, column: 13, scope: !7593)
!7644 = !DILocation(line: 272, column: 23, scope: !7593)
!7645 = !DILocation(line: 272, column: 34, scope: !7593)
!7646 = !DILocation(line: 272, column: 42, scope: !7593)
!7647 = !DILocation(line: 272, column: 32, scope: !7593)
!7648 = !DILocation(line: 272, column: 13, scope: !7593)
!7649 = !DILocation(line: 272, column: 11, scope: !7593)
!7650 = !DILocation(line: 273, column: 24, scope: !7593)
!7651 = !DILocation(line: 273, column: 36, scope: !7593)
!7652 = !DILocation(line: 273, column: 44, scope: !7593)
!7653 = !DILocation(line: 273, column: 34, scope: !7593)
!7654 = !DILocation(line: 273, column: 14, scope: !7593)
!7655 = !DILocation(line: 273, column: 64, scope: !7593)
!7656 = !DILocation(line: 273, column: 11, scope: !7593)
!7657 = !DILocation(line: 275, column: 7, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7593, file: !605, line: 275, column: 7)
!7659 = !DILocation(line: 275, column: 15, scope: !7658)
!7660 = !DILocation(line: 275, column: 7, scope: !7593)
!7661 = !DILocation(line: 277, column: 13, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7658, file: !605, line: 276, column: 3)
!7663 = !DILocation(line: 278, column: 3, scope: !7662)
!7664 = !DILocation(line: 279, column: 38, scope: !7593)
!7665 = !DILocation(line: 279, column: 29, scope: !7593)
!7666 = !DILocation(line: 279, column: 47, scope: !7593)
!7667 = !DILocation(line: 279, column: 45, scope: !7593)
!7668 = !DILocation(line: 279, column: 13, scope: !7593)
!7669 = !DILocation(line: 279, column: 11, scope: !7593)
!7670 = !DILocation(line: 280, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7593, file: !605, line: 280, column: 7)
!7672 = !DILocation(line: 280, column: 18, scope: !7671)
!7673 = !DILocation(line: 280, column: 26, scope: !7671)
!7674 = !DILocation(line: 280, column: 15, scope: !7671)
!7675 = !DILocation(line: 280, column: 7, scope: !7593)
!7676 = !DILocation(line: 282, column: 33, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7671, file: !605, line: 281, column: 3)
!7678 = !DILocation(line: 282, column: 5, scope: !7677)
!7679 = !DILocation(line: 282, column: 13, scope: !7677)
!7680 = !DILocation(line: 282, column: 31, scope: !7677)
!7681 = !DILocation(line: 283, column: 34, scope: !7677)
!7682 = !DILocation(line: 283, column: 5, scope: !7677)
!7683 = !DILocation(line: 283, column: 13, scope: !7677)
!7684 = !DILocation(line: 283, column: 32, scope: !7677)
!7685 = !DILocation(line: 284, column: 5, scope: !7677)
!7686 = !DILocation(line: 287, column: 25, scope: !7593)
!7687 = !DILocation(line: 287, column: 16, scope: !7593)
!7688 = !DILocation(line: 287, column: 44, scope: !7593)
!7689 = !DILocation(line: 287, column: 52, scope: !7593)
!7690 = !DILocation(line: 287, column: 35, scope: !7593)
!7691 = !DILocation(line: 287, column: 33, scope: !7593)
!7692 = !DILocation(line: 287, column: 14, scope: !7593)
!7693 = !DILocation(line: 288, column: 17, scope: !7593)
!7694 = !DILocation(line: 288, column: 28, scope: !7593)
!7695 = !DILocation(line: 288, column: 44, scope: !7593)
!7696 = !DILocation(line: 288, column: 42, scope: !7593)
!7697 = !DILocation(line: 288, column: 14, scope: !7593)
!7698 = !DILocation(line: 289, column: 21, scope: !7593)
!7699 = !DILocation(line: 289, column: 3, scope: !7593)
!7700 = !DILocation(line: 290, column: 31, scope: !7593)
!7701 = !DILocation(line: 290, column: 3, scope: !7593)
!7702 = !DILocation(line: 290, column: 11, scope: !7593)
!7703 = !DILocation(line: 290, column: 29, scope: !7593)
!7704 = !DILocation(line: 291, column: 32, scope: !7593)
!7705 = !DILocation(line: 291, column: 3, scope: !7593)
!7706 = !DILocation(line: 291, column: 11, scope: !7593)
!7707 = !DILocation(line: 291, column: 30, scope: !7593)
!7708 = !DILocation(line: 292, column: 1, scope: !7593)
!7709 = distinct !DISubprogram(name: "vsf_ftpdataio_get_port_fd", scope: !605, file: !605, line: 138, type: !7361, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7710 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7709, file: !605, line: 138, type: !613)
!7711 = !DILocation(line: 138, column: 47, scope: !7709)
!7712 = !DILocalVariable(name: "remote_fd", scope: !7709, file: !605, line: 140, type: !19)
!7713 = !DILocation(line: 140, column: 7, scope: !7709)
!7714 = !DILocation(line: 141, column: 7, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7709, file: !605, line: 141, column: 7)
!7716 = !DILocation(line: 141, column: 33, scope: !7715)
!7717 = !DILocation(line: 141, column: 36, scope: !7715)
!7718 = !DILocation(line: 141, column: 7, scope: !7709)
!7719 = !DILocation(line: 143, column: 52, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7715, file: !605, line: 142, column: 3)
!7721 = !DILocation(line: 143, column: 17, scope: !7720)
!7722 = !DILocation(line: 143, column: 15, scope: !7720)
!7723 = !DILocation(line: 144, column: 3, scope: !7720)
!7724 = !DILocation(line: 147, column: 52, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7715, file: !605, line: 146, column: 3)
!7726 = !DILocation(line: 147, column: 17, scope: !7725)
!7727 = !DILocation(line: 147, column: 15, scope: !7725)
!7728 = !DILocation(line: 149, column: 35, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7709, file: !605, line: 149, column: 7)
!7730 = !DILocation(line: 149, column: 7, scope: !7729)
!7731 = !DILocation(line: 149, column: 7, scope: !7709)
!7732 = !DILocation(line: 151, column: 21, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !605, line: 150, column: 3)
!7734 = !DILocation(line: 151, column: 5, scope: !7733)
!7735 = !DILocation(line: 153, column: 5, scope: !7733)
!7736 = !DILocation(line: 155, column: 25, scope: !7709)
!7737 = !DILocation(line: 155, column: 33, scope: !7709)
!7738 = !DILocation(line: 155, column: 3, scope: !7709)
!7739 = !DILocation(line: 156, column: 10, scope: !7709)
!7740 = !DILocation(line: 156, column: 3, scope: !7709)
!7741 = !DILocation(line: 157, column: 1, scope: !7709)
!7742 = distinct !DISubprogram(name: "vsf_ftpdataio_post_mark_connect", scope: !605, file: !605, line: 160, type: !7361, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7743 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7742, file: !605, line: 160, type: !613)
!7744 = !DILocation(line: 160, column: 53, scope: !7742)
!7745 = !DILocalVariable(name: "ret", scope: !7742, file: !605, line: 162, type: !19)
!7746 = !DILocation(line: 162, column: 7, scope: !7742)
!7747 = !DILocation(line: 163, column: 8, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7742, file: !605, line: 163, column: 7)
!7749 = !DILocation(line: 163, column: 16, scope: !7748)
!7750 = !DILocation(line: 163, column: 7, scope: !7742)
!7751 = !DILocation(line: 165, column: 5, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7748, file: !605, line: 164, column: 3)
!7753 = !DILocation(line: 167, column: 8, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7742, file: !605, line: 167, column: 7)
!7755 = !DILocation(line: 167, column: 16, scope: !7754)
!7756 = !DILocation(line: 167, column: 7, scope: !7742)
!7757 = !DILocation(line: 169, column: 22, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7754, file: !605, line: 168, column: 3)
!7759 = !DILocation(line: 169, column: 30, scope: !7758)
!7760 = !DILocation(line: 169, column: 38, scope: !7758)
!7761 = !DILocation(line: 169, column: 11, scope: !7758)
!7762 = !DILocation(line: 169, column: 9, scope: !7758)
!7763 = !DILocation(line: 170, column: 3, scope: !7758)
!7764 = !DILocalVariable(name: "sock_ret", scope: !7765, file: !605, line: 173, type: !19)
!7765 = distinct !DILexicalBlock(scope: !7754, file: !605, line: 172, column: 3)
!7766 = !DILocation(line: 173, column: 9, scope: !7765)
!7767 = !DILocation(line: 174, column: 24, scope: !7765)
!7768 = !DILocation(line: 174, column: 32, scope: !7765)
!7769 = !DILocation(line: 174, column: 5, scope: !7765)
!7770 = !DILocation(line: 175, column: 23, scope: !7765)
!7771 = !DILocation(line: 175, column: 31, scope: !7765)
!7772 = !DILocation(line: 175, column: 48, scope: !7765)
!7773 = !DILocation(line: 175, column: 56, scope: !7765)
!7774 = !DILocation(line: 175, column: 5, scope: !7765)
!7775 = !DILocation(line: 176, column: 37, scope: !7765)
!7776 = !DILocation(line: 176, column: 45, scope: !7765)
!7777 = !DILocation(line: 176, column: 16, scope: !7765)
!7778 = !DILocation(line: 176, column: 14, scope: !7765)
!7779 = !DILocation(line: 177, column: 9, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7765, file: !605, line: 177, column: 9)
!7781 = !DILocation(line: 177, column: 18, scope: !7780)
!7782 = !DILocation(line: 177, column: 9, scope: !7765)
!7783 = !DILocation(line: 179, column: 11, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7780, file: !605, line: 178, column: 5)
!7785 = !DILocation(line: 180, column: 5, scope: !7784)
!7786 = !DILocation(line: 182, column: 7, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7742, file: !605, line: 182, column: 7)
!7788 = !DILocation(line: 182, column: 11, scope: !7787)
!7789 = !DILocation(line: 182, column: 7, scope: !7742)
!7790 = !DILocation(line: 184, column: 9, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !605, line: 184, column: 9)
!7792 = distinct !DILexicalBlock(scope: !7787, file: !605, line: 183, column: 3)
!7793 = !DILocation(line: 184, column: 9, scope: !7792)
!7794 = !DILocation(line: 186, column: 28, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7791, file: !605, line: 185, column: 5)
!7796 = !DILocation(line: 186, column: 7, scope: !7795)
!7797 = !DILocation(line: 188, column: 5, scope: !7795)
!7798 = !DILocation(line: 189, column: 23, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7791, file: !605, line: 188, column: 12)
!7800 = !DILocation(line: 189, column: 7, scope: !7799)
!7801 = !DILocation(line: 191, column: 3, scope: !7792)
!7802 = !DILocation(line: 192, column: 10, scope: !7742)
!7803 = !DILocation(line: 192, column: 3, scope: !7742)
!7804 = !DILocation(line: 193, column: 1, scope: !7742)
!7805 = distinct !DISubprogram(name: "vsf_ftpdataio_transfer_dir", scope: !605, file: !605, line: 295, type: !7806, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{!19, !613, !19, !5829, !7808, !7808, !7808, !19}
!7808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7809, size: 64)
!7809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !633)
!7810 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7805, file: !605, line: 295, type: !613)
!7811 = !DILocation(line: 295, column: 48, scope: !7805)
!7812 = !DILocalVariable(name: "is_control", arg: 2, scope: !7805, file: !605, line: 295, type: !19)
!7813 = !DILocation(line: 295, column: 60, scope: !7805)
!7814 = !DILocalVariable(name: "p_dir", arg: 3, scope: !7805, file: !605, line: 296, type: !5829)
!7815 = !DILocation(line: 296, column: 52, scope: !7805)
!7816 = !DILocalVariable(name: "p_base_dir_str", arg: 4, scope: !7805, file: !605, line: 297, type: !7808)
!7817 = !DILocation(line: 297, column: 48, scope: !7805)
!7818 = !DILocalVariable(name: "p_option_str", arg: 5, scope: !7805, file: !605, line: 298, type: !7808)
!7819 = !DILocation(line: 298, column: 48, scope: !7805)
!7820 = !DILocalVariable(name: "p_filter_str", arg: 6, scope: !7805, file: !605, line: 299, type: !7808)
!7821 = !DILocation(line: 299, column: 48, scope: !7805)
!7822 = !DILocalVariable(name: "is_verbose", arg: 7, scope: !7805, file: !605, line: 300, type: !19)
!7823 = !DILocation(line: 300, column: 32, scope: !7805)
!7824 = !DILocation(line: 302, column: 32, scope: !7805)
!7825 = !DILocation(line: 302, column: 40, scope: !7805)
!7826 = !DILocation(line: 302, column: 52, scope: !7805)
!7827 = !DILocation(line: 302, column: 59, scope: !7805)
!7828 = !DILocation(line: 303, column: 32, scope: !7805)
!7829 = !DILocation(line: 303, column: 46, scope: !7805)
!7830 = !DILocation(line: 303, column: 60, scope: !7805)
!7831 = !DILocation(line: 302, column: 10, scope: !7805)
!7832 = !DILocation(line: 302, column: 3, scope: !7805)
!7833 = distinct !DISubprogram(name: "transfer_dir_internal", scope: !605, file: !605, line: 307, type: !7806, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!7834 = !DILocalVariable(name: "p_sess", arg: 1, scope: !7833, file: !605, line: 307, type: !613)
!7835 = !DILocation(line: 307, column: 43, scope: !7833)
!7836 = !DILocalVariable(name: "is_control", arg: 2, scope: !7833, file: !605, line: 307, type: !19)
!7837 = !DILocation(line: 307, column: 55, scope: !7833)
!7838 = !DILocalVariable(name: "p_dir", arg: 3, scope: !7833, file: !605, line: 308, type: !5829)
!7839 = !DILocation(line: 308, column: 47, scope: !7833)
!7840 = !DILocalVariable(name: "p_base_dir_str", arg: 4, scope: !7833, file: !605, line: 309, type: !7808)
!7841 = !DILocation(line: 309, column: 43, scope: !7833)
!7842 = !DILocalVariable(name: "p_option_str", arg: 5, scope: !7833, file: !605, line: 310, type: !7808)
!7843 = !DILocation(line: 310, column: 43, scope: !7833)
!7844 = !DILocalVariable(name: "p_filter_str", arg: 6, scope: !7833, file: !605, line: 311, type: !7808)
!7845 = !DILocation(line: 311, column: 43, scope: !7833)
!7846 = !DILocalVariable(name: "is_verbose", arg: 7, scope: !7833, file: !605, line: 312, type: !19)
!7847 = !DILocation(line: 312, column: 27, scope: !7833)
!7848 = !DILocalVariable(name: "dir_list", scope: !7833, file: !605, line: 314, type: !648)
!7849 = !DILocation(line: 314, column: 21, scope: !7833)
!7850 = !DILocalVariable(name: "subdir_list", scope: !7833, file: !605, line: 315, type: !648)
!7851 = !DILocation(line: 315, column: 21, scope: !7833)
!7852 = !DILocalVariable(name: "dir_prefix_str", scope: !7833, file: !605, line: 316, type: !633)
!7853 = !DILocation(line: 316, column: 16, scope: !7833)
!7854 = !DILocalVariable(name: "p_subdir_list", scope: !7833, file: !605, line: 317, type: !647)
!7855 = !DILocation(line: 317, column: 22, scope: !7833)
!7856 = !DILocalVariable(name: "loc_result", scope: !7833, file: !605, line: 318, type: !7857)
!7857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_locate_result", file: !34, line: 68, size: 96, elements: !7858)
!7858 = !{!7859, !7860, !7861}
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !7857, file: !34, line: 70, baseType: !19, size: 32)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !7857, file: !34, line: 71, baseType: !26, size: 32, offset: 32)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "char_found", scope: !7857, file: !34, line: 72, baseType: !17, size: 8, offset: 64)
!7862 = !DILocation(line: 318, column: 28, scope: !7833)
!7863 = !DILocation(line: 318, column: 57, scope: !7833)
!7864 = !DILocation(line: 318, column: 41, scope: !7833)
!7865 = !DILocalVariable(name: "failed", scope: !7833, file: !605, line: 319, type: !19)
!7866 = !DILocation(line: 319, column: 7, scope: !7833)
!7867 = !DILocalVariable(name: "target", scope: !7833, file: !605, line: 320, type: !108)
!7868 = !DILocation(line: 320, column: 21, scope: !7833)
!7869 = !DILocation(line: 321, column: 7, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7833, file: !605, line: 321, column: 7)
!7871 = !DILocation(line: 321, column: 7, scope: !7833)
!7872 = !DILocation(line: 323, column: 12, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7870, file: !605, line: 322, column: 3)
!7874 = !DILocation(line: 324, column: 3, scope: !7873)
!7875 = !DILocation(line: 325, column: 18, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7833, file: !605, line: 325, column: 7)
!7877 = !DILocation(line: 325, column: 7, scope: !7876)
!7878 = !DILocation(line: 325, column: 24, scope: !7876)
!7879 = !DILocation(line: 325, column: 27, scope: !7876)
!7880 = !DILocation(line: 325, column: 7, scope: !7833)
!7881 = !DILocation(line: 327, column: 19, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7876, file: !605, line: 326, column: 3)
!7883 = !DILocation(line: 328, column: 3, scope: !7882)
!7884 = !DILocation(line: 329, column: 39, scope: !7833)
!7885 = !DILocation(line: 329, column: 54, scope: !7833)
!7886 = !DILocation(line: 329, column: 61, scope: !7833)
!7887 = !DILocation(line: 330, column: 28, scope: !7833)
!7888 = !DILocation(line: 330, column: 42, scope: !7833)
!7889 = !DILocation(line: 330, column: 56, scope: !7833)
!7890 = !DILocation(line: 329, column: 3, scope: !7833)
!7891 = !DILocation(line: 331, column: 7, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7833, file: !605, line: 331, column: 7)
!7893 = !DILocation(line: 331, column: 7, scope: !7833)
!7894 = !DILocalVariable(name: "retval", scope: !7895, file: !605, line: 333, type: !19)
!7895 = distinct !DILexicalBlock(scope: !7892, file: !605, line: 332, column: 3)
!7896 = !DILocation(line: 333, column: 9, scope: !7895)
!7897 = !DILocation(line: 334, column: 31, scope: !7895)
!7898 = !DILocation(line: 334, column: 5, scope: !7895)
!7899 = !DILocation(line: 335, column: 5, scope: !7895)
!7900 = !DILocation(line: 336, column: 28, scope: !7895)
!7901 = !DILocation(line: 336, column: 53, scope: !7895)
!7902 = !DILocation(line: 336, column: 14, scope: !7895)
!7903 = !DILocation(line: 336, column: 12, scope: !7895)
!7904 = !DILocation(line: 337, column: 9, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7895, file: !605, line: 337, column: 9)
!7906 = !DILocation(line: 337, column: 16, scope: !7905)
!7907 = !DILocation(line: 337, column: 9, scope: !7895)
!7908 = !DILocation(line: 339, column: 14, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7905, file: !605, line: 338, column: 5)
!7910 = !DILocation(line: 340, column: 5, scope: !7909)
!7911 = !DILocation(line: 341, column: 3, scope: !7895)
!7912 = !DILocation(line: 342, column: 8, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7833, file: !605, line: 342, column: 7)
!7914 = !DILocation(line: 342, column: 7, scope: !7833)
!7915 = !DILocation(line: 344, column: 29, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7913, file: !605, line: 343, column: 3)
!7917 = !DILocation(line: 344, column: 48, scope: !7916)
!7918 = !DILocation(line: 344, column: 14, scope: !7916)
!7919 = !DILocation(line: 344, column: 12, scope: !7916)
!7920 = !DILocation(line: 345, column: 3, scope: !7916)
!7921 = !DILocation(line: 347, column: 8, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7833, file: !605, line: 347, column: 7)
!7923 = !DILocation(line: 347, column: 7, scope: !7833)
!7924 = !DILocalVariable(name: "sub_str", scope: !7925, file: !605, line: 349, type: !633)
!7925 = distinct !DILexicalBlock(scope: !7922, file: !605, line: 348, column: 3)
!7926 = !DILocation(line: 349, column: 18, scope: !7925)
!7927 = !DILocalVariable(name: "num_subdirs", scope: !7925, file: !605, line: 350, type: !26)
!7928 = !DILocation(line: 350, column: 18, scope: !7925)
!7929 = !DILocation(line: 350, column: 32, scope: !7925)
!7930 = !DILocalVariable(name: "subdir_index", scope: !7925, file: !605, line: 351, type: !26)
!7931 = !DILocation(line: 351, column: 18, scope: !7925)
!7932 = !DILocation(line: 352, column: 23, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7925, file: !605, line: 352, column: 5)
!7934 = !DILocation(line: 352, column: 10, scope: !7933)
!7935 = !DILocation(line: 352, column: 28, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7933, file: !605, line: 352, column: 5)
!7937 = !DILocation(line: 352, column: 43, scope: !7936)
!7938 = !DILocation(line: 352, column: 41, scope: !7936)
!7939 = !DILocation(line: 352, column: 5, scope: !7933)
!7940 = !DILocalVariable(name: "retval", scope: !7941, file: !605, line: 354, type: !19)
!7941 = distinct !DILexicalBlock(scope: !7936, file: !605, line: 353, column: 5)
!7942 = !DILocation(line: 354, column: 11, scope: !7941)
!7943 = !DILocalVariable(name: "p_subdir", scope: !7941, file: !605, line: 355, type: !5829)
!7944 = !DILocation(line: 355, column: 31, scope: !7941)
!7945 = !DILocalVariable(name: "p_subdir_str", scope: !7941, file: !605, line: 356, type: !7808)
!7946 = !DILocation(line: 356, column: 27, scope: !7941)
!7947 = !DILocation(line: 357, column: 41, scope: !7941)
!7948 = !DILocation(line: 357, column: 9, scope: !7941)
!7949 = !DILocation(line: 358, column: 26, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7941, file: !605, line: 358, column: 11)
!7951 = !DILocation(line: 358, column: 11, scope: !7950)
!7952 = !DILocation(line: 358, column: 45, scope: !7950)
!7953 = !DILocation(line: 359, column: 26, scope: !7950)
!7954 = !DILocation(line: 359, column: 11, scope: !7950)
!7955 = !DILocation(line: 358, column: 11, scope: !7941)
!7956 = !DILocation(line: 361, column: 9, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7950, file: !605, line: 360, column: 7)
!7958 = !DILocation(line: 363, column: 26, scope: !7941)
!7959 = !DILocation(line: 363, column: 7, scope: !7941)
!7960 = !DILocation(line: 364, column: 7, scope: !7941)
!7961 = !DILocation(line: 365, column: 32, scope: !7941)
!7962 = !DILocation(line: 365, column: 7, scope: !7941)
!7963 = !DILocation(line: 366, column: 18, scope: !7941)
!7964 = !DILocation(line: 366, column: 16, scope: !7941)
!7965 = !DILocation(line: 367, column: 11, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7941, file: !605, line: 367, column: 11)
!7967 = !DILocation(line: 367, column: 20, scope: !7966)
!7968 = !DILocation(line: 367, column: 11, scope: !7941)
!7969 = !DILocation(line: 370, column: 9, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7966, file: !605, line: 368, column: 7)
!7971 = !DILocation(line: 372, column: 7, scope: !7941)
!7972 = !DILocation(line: 373, column: 30, scope: !7941)
!7973 = !DILocation(line: 373, column: 55, scope: !7941)
!7974 = !DILocation(line: 373, column: 16, scope: !7941)
!7975 = !DILocation(line: 373, column: 14, scope: !7941)
!7976 = !DILocation(line: 374, column: 11, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7941, file: !605, line: 374, column: 11)
!7978 = !DILocation(line: 374, column: 18, scope: !7977)
!7979 = !DILocation(line: 374, column: 11, scope: !7941)
!7980 = !DILocation(line: 376, column: 16, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7977, file: !605, line: 375, column: 7)
!7982 = !DILocation(line: 377, column: 30, scope: !7981)
!7983 = !DILocation(line: 377, column: 9, scope: !7981)
!7984 = !DILocation(line: 378, column: 9, scope: !7981)
!7985 = !DILocation(line: 380, column: 38, scope: !7941)
!7986 = !DILocation(line: 380, column: 46, scope: !7941)
!7987 = !DILocation(line: 380, column: 58, scope: !7941)
!7988 = !DILocation(line: 381, column: 38, scope: !7941)
!7989 = !DILocation(line: 381, column: 52, scope: !7941)
!7990 = !DILocation(line: 381, column: 66, scope: !7941)
!7991 = !DILocation(line: 380, column: 16, scope: !7941)
!7992 = !DILocation(line: 380, column: 14, scope: !7941)
!7993 = !DILocation(line: 382, column: 28, scope: !7941)
!7994 = !DILocation(line: 382, column: 7, scope: !7941)
!7995 = !DILocation(line: 383, column: 11, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7941, file: !605, line: 383, column: 11)
!7997 = !DILocation(line: 383, column: 18, scope: !7996)
!7998 = !DILocation(line: 383, column: 11, scope: !7941)
!7999 = !DILocation(line: 385, column: 16, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7996, file: !605, line: 384, column: 7)
!8001 = !DILocation(line: 386, column: 9, scope: !8000)
!8002 = !DILocation(line: 388, column: 5, scope: !7941)
!8003 = !DILocation(line: 352, column: 68, scope: !7936)
!8004 = !DILocation(line: 352, column: 5, scope: !7936)
!8005 = distinct !{!8005, !7939, !8006}
!8006 = !DILocation(line: 388, column: 5, scope: !7933)
!8007 = !DILocation(line: 389, column: 5, scope: !7925)
!8008 = !DILocation(line: 390, column: 3, scope: !7925)
!8009 = !DILocation(line: 391, column: 3, scope: !7833)
!8010 = !DILocation(line: 392, column: 3, scope: !7833)
!8011 = !DILocation(line: 393, column: 3, scope: !7833)
!8012 = !DILocation(line: 394, column: 8, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7833, file: !605, line: 394, column: 7)
!8014 = !DILocation(line: 394, column: 7, scope: !7833)
!8015 = !DILocation(line: 396, column: 5, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8013, file: !605, line: 395, column: 3)
!8017 = !DILocation(line: 400, column: 5, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8013, file: !605, line: 399, column: 3)
!8019 = !DILocation(line: 402, column: 1, scope: !7833)
!8020 = distinct !DISubprogram(name: "write_dir_list", scope: !605, file: !605, line: 406, type: !8021, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{!19, !613, !647, !108}
!8023 = !DILocalVariable(name: "p_sess", arg: 1, scope: !8020, file: !605, line: 406, type: !613)
!8024 = !DILocation(line: 406, column: 36, scope: !8020)
!8025 = !DILocalVariable(name: "p_dir_list", arg: 2, scope: !8020, file: !605, line: 406, type: !647)
!8026 = !DILocation(line: 406, column: 63, scope: !8020)
!8027 = !DILocalVariable(name: "target", arg: 3, scope: !8020, file: !605, line: 407, type: !108)
!8028 = !DILocation(line: 407, column: 34, scope: !8020)
!8029 = !DILocalVariable(name: "retval", scope: !8020, file: !605, line: 413, type: !19)
!8030 = !DILocation(line: 413, column: 7, scope: !8020)
!8031 = !DILocalVariable(name: "dir_index_max", scope: !8020, file: !605, line: 414, type: !26)
!8032 = !DILocation(line: 414, column: 16, scope: !8020)
!8033 = !DILocation(line: 414, column: 52, scope: !8020)
!8034 = !DILocation(line: 414, column: 32, scope: !8020)
!8035 = !DILocalVariable(name: "dir_index", scope: !8020, file: !605, line: 415, type: !26)
!8036 = !DILocation(line: 415, column: 16, scope: !8020)
!8037 = !DILocalVariable(name: "buf_str", scope: !8020, file: !605, line: 416, type: !633)
!8038 = !DILocation(line: 416, column: 16, scope: !8020)
!8039 = !DILocation(line: 417, column: 3, scope: !8020)
!8040 = !DILocation(line: 418, column: 18, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8020, file: !605, line: 418, column: 3)
!8042 = !DILocation(line: 418, column: 8, scope: !8041)
!8043 = !DILocation(line: 418, column: 23, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8041, file: !605, line: 418, column: 3)
!8045 = !DILocation(line: 418, column: 35, scope: !8044)
!8046 = !DILocation(line: 418, column: 33, scope: !8044)
!8047 = !DILocation(line: 418, column: 3, scope: !8041)
!8048 = !DILocation(line: 420, column: 48, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8044, file: !605, line: 419, column: 3)
!8050 = !DILocation(line: 420, column: 60, scope: !8049)
!8051 = !DILocation(line: 420, column: 30, scope: !8049)
!8052 = !DILocation(line: 420, column: 5, scope: !8049)
!8053 = !DILocation(line: 421, column: 9, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8049, file: !605, line: 421, column: 9)
!8055 = !DILocation(line: 421, column: 22, scope: !8054)
!8056 = !DILocation(line: 421, column: 36, scope: !8054)
!8057 = !DILocation(line: 421, column: 19, scope: !8054)
!8058 = !DILocation(line: 421, column: 40, scope: !8054)
!8059 = !DILocation(line: 422, column: 9, scope: !8054)
!8060 = !DILocation(line: 423, column: 40, scope: !8054)
!8061 = !DILocation(line: 423, column: 52, scope: !8054)
!8062 = !DILocation(line: 423, column: 62, scope: !8054)
!8063 = !DILocation(line: 423, column: 22, scope: !8054)
!8064 = !DILocation(line: 423, column: 11, scope: !8054)
!8065 = !DILocation(line: 422, column: 30, scope: !8054)
!8066 = !DILocation(line: 423, column: 68, scope: !8054)
!8067 = !DILocation(line: 421, column: 9, scope: !8049)
!8068 = !DILocalVariable(name: "writeret", scope: !8069, file: !605, line: 427, type: !19)
!8069 = distinct !DILexicalBlock(scope: !8054, file: !605, line: 425, column: 5)
!8070 = !DILocation(line: 427, column: 11, scope: !8069)
!8071 = !DILocation(line: 427, column: 36, scope: !8069)
!8072 = !DILocation(line: 427, column: 54, scope: !8069)
!8073 = !DILocation(line: 427, column: 22, scope: !8069)
!8074 = !DILocation(line: 428, column: 11, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8069, file: !605, line: 428, column: 11)
!8076 = !DILocation(line: 428, column: 20, scope: !8075)
!8077 = !DILocation(line: 428, column: 11, scope: !8069)
!8078 = !DILocation(line: 430, column: 16, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8075, file: !605, line: 429, column: 7)
!8080 = !DILocation(line: 431, column: 9, scope: !8079)
!8081 = !DILocation(line: 433, column: 7, scope: !8069)
!8082 = !DILocation(line: 434, column: 5, scope: !8069)
!8083 = !DILocation(line: 435, column: 3, scope: !8049)
!8084 = !DILocation(line: 418, column: 59, scope: !8044)
!8085 = !DILocation(line: 418, column: 3, scope: !8044)
!8086 = distinct !{!8086, !8047, !8087}
!8087 = !DILocation(line: 435, column: 3, scope: !8041)
!8088 = !DILocation(line: 436, column: 3, scope: !8020)
!8089 = !DILocation(line: 437, column: 10, scope: !8020)
!8090 = !DILocation(line: 437, column: 3, scope: !8020)
!8091 = distinct !DISubprogram(name: "vsf_ftpdataio_transfer_file", scope: !605, file: !605, line: 441, type: !8092, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !689, retainedNodes: !128)
!8092 = !DISubroutineType(types: !8093)
!8093 = !{!608, !613, !19, !19, !19, !19}
!8094 = !DILocalVariable(name: "p_sess", arg: 1, scope: !8091, file: !605, line: 441, type: !613)
!8095 = !DILocation(line: 441, column: 49, scope: !8091)
!8096 = !DILocalVariable(name: "remote_fd", arg: 2, scope: !8091, file: !605, line: 441, type: !19)
!8097 = !DILocation(line: 441, column: 61, scope: !8091)
!8098 = !DILocalVariable(name: "file_fd", arg: 3, scope: !8091, file: !605, line: 442, type: !19)
!8099 = !DILocation(line: 442, column: 33, scope: !8091)
!8100 = !DILocalVariable(name: "is_recv", arg: 4, scope: !8091, file: !605, line: 442, type: !19)
!8101 = !DILocation(line: 442, column: 46, scope: !8091)
!8102 = !DILocalVariable(name: "is_ascii", arg: 5, scope: !8091, file: !605, line: 442, type: !19)
!8103 = !DILocation(line: 442, column: 59, scope: !8091)
!8104 = !DILocation(line: 444, column: 8, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8091, file: !605, line: 444, column: 7)
!8106 = !DILocation(line: 444, column: 7, scope: !8091)
!8107 = !DILocation(line: 446, column: 9, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !605, line: 446, column: 9)
!8109 = distinct !DILexicalBlock(scope: !8105, file: !605, line: 445, column: 3)
!8110 = !DILocation(line: 446, column: 18, scope: !8108)
!8111 = !DILocation(line: 446, column: 21, scope: !8108)
!8112 = !DILocation(line: 446, column: 29, scope: !8108)
!8113 = !DILocation(line: 446, column: 9, scope: !8109)
!8114 = !DILocation(line: 448, column: 34, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8108, file: !605, line: 447, column: 5)
!8116 = !DILocation(line: 448, column: 42, scope: !8115)
!8117 = !DILocation(line: 448, column: 51, scope: !8115)
!8118 = !DILocation(line: 448, column: 14, scope: !8115)
!8119 = !DILocation(line: 448, column: 7, scope: !8115)
!8120 = !DILocalVariable(name: "curr_offset", scope: !8121, file: !605, line: 452, type: !41)
!8121 = distinct !DILexicalBlock(scope: !8108, file: !605, line: 451, column: 5)
!8122 = !DILocation(line: 452, column: 18, scope: !8121)
!8123 = !DILocation(line: 452, column: 60, scope: !8121)
!8124 = !DILocation(line: 452, column: 32, scope: !8121)
!8125 = !DILocalVariable(name: "num_send", scope: !8121, file: !605, line: 453, type: !41)
!8126 = !DILocation(line: 453, column: 18, scope: !8121)
!8127 = !DILocation(line: 453, column: 43, scope: !8121)
!8128 = !DILocation(line: 453, column: 52, scope: !8121)
!8129 = !DILocation(line: 453, column: 29, scope: !8121)
!8130 = !DILocation(line: 455, column: 9, scope: !8121)
!8131 = !DILocation(line: 455, column: 17, scope: !8121)
!8132 = !DILocation(line: 455, column: 28, scope: !8121)
!8133 = !DILocation(line: 455, column: 37, scope: !8121)
!8134 = !DILocation(line: 455, column: 50, scope: !8121)
!8135 = !DILocation(line: 454, column: 14, scope: !8121)
!8136 = !DILocation(line: 454, column: 7, scope: !8121)
!8137 = !DILocation(line: 460, column: 25, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8105, file: !605, line: 459, column: 3)
!8139 = !DILocation(line: 460, column: 33, scope: !8138)
!8140 = !DILocation(line: 460, column: 42, scope: !8138)
!8141 = !DILocation(line: 460, column: 12, scope: !8138)
!8142 = !DILocation(line: 460, column: 5, scope: !8138)
!8143 = !DILocation(line: 462, column: 1, scope: !8091)
!8144 = !DILocalVariable(name: "p_sess", arg: 1, scope: !696, file: !605, line: 465, type: !613)
!8145 = !DILocation(line: 465, column: 41, scope: !696)
!8146 = !DILocalVariable(name: "file_fd", arg: 2, scope: !696, file: !605, line: 465, type: !19)
!8147 = !DILocation(line: 465, column: 53, scope: !696)
!8148 = !DILocalVariable(name: "is_ascii", arg: 3, scope: !696, file: !605, line: 465, type: !19)
!8149 = !DILocation(line: 465, column: 66, scope: !696)
!8150 = !DILocalVariable(name: "ret_struct", scope: !696, file: !605, line: 469, type: !608)
!8151 = !DILocation(line: 469, column: 27, scope: !696)
!8152 = !DILocalVariable(name: "chunk_size", scope: !696, file: !605, line: 470, type: !26)
!8153 = !DILocation(line: 470, column: 16, scope: !696)
!8154 = !DILocation(line: 470, column: 29, scope: !696)
!8155 = !DILocalVariable(name: "p_writefrom_buf", scope: !696, file: !605, line: 471, type: !16)
!8156 = !DILocation(line: 471, column: 9, scope: !696)
!8157 = !DILocalVariable(name: "prev_cr", scope: !696, file: !605, line: 472, type: !19)
!8158 = !DILocation(line: 472, column: 7, scope: !696)
!8159 = !DILocation(line: 473, column: 7, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !696, file: !605, line: 473, column: 7)
!8161 = !DILocation(line: 473, column: 17, scope: !8160)
!8162 = !DILocation(line: 473, column: 7, scope: !696)
!8163 = !DILocation(line: 475, column: 5, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8160, file: !605, line: 474, column: 3)
!8165 = !DILocation(line: 476, column: 3, scope: !8164)
!8166 = !DILocation(line: 477, column: 7, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !696, file: !605, line: 477, column: 7)
!8168 = !DILocation(line: 477, column: 7, scope: !696)
!8169 = !DILocation(line: 479, column: 9, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8171, file: !605, line: 479, column: 9)
!8171 = distinct !DILexicalBlock(scope: !8167, file: !605, line: 478, column: 3)
!8172 = !DILocation(line: 479, column: 20, scope: !8170)
!8173 = !DILocation(line: 479, column: 9, scope: !8171)
!8174 = !DILocation(line: 484, column: 7, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8170, file: !605, line: 480, column: 5)
!8176 = !DILocation(line: 485, column: 5, scope: !8175)
!8177 = !DILocation(line: 486, column: 23, scope: !8171)
!8178 = !DILocation(line: 486, column: 21, scope: !8171)
!8179 = !DILocation(line: 487, column: 3, scope: !8171)
!8180 = !DILocation(line: 490, column: 23, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8167, file: !605, line: 489, column: 3)
!8182 = !DILocation(line: 490, column: 21, scope: !8181)
!8183 = !DILocation(line: 492, column: 3, scope: !696)
!8184 = !DILocalVariable(name: "num_to_write", scope: !8185, file: !605, line: 494, type: !26)
!8185 = distinct !DILexicalBlock(scope: !696, file: !605, line: 493, column: 3)
!8186 = !DILocation(line: 494, column: 18, scope: !8185)
!8187 = !DILocalVariable(name: "retval", scope: !8185, file: !605, line: 495, type: !19)
!8188 = !DILocation(line: 495, column: 9, scope: !8185)
!8189 = !DILocation(line: 495, column: 35, scope: !8185)
!8190 = !DILocation(line: 495, column: 44, scope: !8185)
!8191 = !DILocation(line: 495, column: 55, scope: !8185)
!8192 = !DILocation(line: 495, column: 18, scope: !8185)
!8193 = !DILocation(line: 496, column: 37, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8185, file: !605, line: 496, column: 9)
!8195 = !DILocation(line: 496, column: 9, scope: !8194)
!8196 = !DILocation(line: 496, column: 9, scope: !8185)
!8197 = !DILocation(line: 498, column: 18, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !605, line: 497, column: 5)
!8199 = !DILocation(line: 498, column: 25, scope: !8198)
!8200 = !DILocation(line: 499, column: 14, scope: !8198)
!8201 = !DILocation(line: 499, column: 7, scope: !8198)
!8202 = !DILocation(line: 501, column: 14, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8194, file: !605, line: 501, column: 14)
!8204 = !DILocation(line: 501, column: 21, scope: !8203)
!8205 = !DILocation(line: 501, column: 14, scope: !8194)
!8206 = !DILocation(line: 504, column: 14, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8203, file: !605, line: 502, column: 5)
!8208 = !DILocation(line: 504, column: 7, scope: !8207)
!8209 = !DILocation(line: 506, column: 9, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8185, file: !605, line: 506, column: 9)
!8211 = !DILocation(line: 506, column: 9, scope: !8185)
!8212 = !DILocalVariable(name: "ret", scope: !8213, file: !605, line: 508, type: !8214)
!8213 = distinct !DILexicalBlock(scope: !8210, file: !605, line: 507, column: 5)
!8214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_to_ascii_ret", file: !8215, line: 47, size: 64, elements: !8216)
!8215 = !DIFile(filename: "./ascii.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!8216 = !{!8217, !8218}
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "stored", scope: !8214, file: !8215, line: 49, baseType: !26, size: 32)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "last_was_cr", scope: !8214, file: !8215, line: 50, baseType: !19, size: 32, offset: 32)
!8219 = !DILocation(line: 508, column: 31, scope: !8213)
!8220 = !DILocation(line: 509, column: 34, scope: !8213)
!8221 = !DILocation(line: 510, column: 34, scope: !8213)
!8222 = !DILocation(line: 511, column: 49, scope: !8213)
!8223 = !DILocation(line: 512, column: 34, scope: !8213)
!8224 = !DILocation(line: 509, column: 11, scope: !8213)
!8225 = !DILocation(line: 513, column: 26, scope: !8213)
!8226 = !DILocation(line: 513, column: 20, scope: !8213)
!8227 = !DILocation(line: 514, column: 21, scope: !8213)
!8228 = !DILocation(line: 514, column: 15, scope: !8213)
!8229 = !DILocation(line: 515, column: 5, scope: !8213)
!8230 = !DILocation(line: 518, column: 37, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8210, file: !605, line: 517, column: 5)
!8232 = !DILocation(line: 518, column: 20, scope: !8231)
!8233 = !DILocation(line: 520, column: 29, scope: !8185)
!8234 = !DILocation(line: 520, column: 37, scope: !8185)
!8235 = !DILocation(line: 520, column: 54, scope: !8185)
!8236 = !DILocation(line: 520, column: 14, scope: !8185)
!8237 = !DILocation(line: 520, column: 12, scope: !8185)
!8238 = !DILocation(line: 521, column: 38, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8185, file: !605, line: 521, column: 9)
!8240 = !DILocation(line: 521, column: 10, scope: !8239)
!8241 = !DILocation(line: 521, column: 9, scope: !8185)
!8242 = !DILocation(line: 523, column: 48, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8239, file: !605, line: 522, column: 5)
!8244 = !DILocation(line: 523, column: 33, scope: !8243)
!8245 = !DILocation(line: 523, column: 18, scope: !8243)
!8246 = !DILocation(line: 523, column: 30, scope: !8243)
!8247 = !DILocation(line: 524, column: 5, scope: !8243)
!8248 = !DILocation(line: 525, column: 37, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8185, file: !605, line: 525, column: 9)
!8250 = !DILocation(line: 525, column: 9, scope: !8249)
!8251 = !DILocation(line: 525, column: 45, scope: !8249)
!8252 = !DILocation(line: 526, column: 24, scope: !8249)
!8253 = !DILocation(line: 526, column: 34, scope: !8249)
!8254 = !DILocation(line: 526, column: 31, scope: !8249)
!8255 = !DILocation(line: 525, column: 9, scope: !8185)
!8256 = !DILocation(line: 528, column: 18, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8249, file: !605, line: 527, column: 5)
!8258 = !DILocation(line: 528, column: 25, scope: !8257)
!8259 = !DILocation(line: 529, column: 14, scope: !8257)
!8260 = !DILocation(line: 529, column: 7, scope: !8257)
!8261 = distinct !{!8261, !8183, !8262}
!8262 = !DILocation(line: 531, column: 3, scope: !696)
!8263 = !DILocation(line: 532, column: 1, scope: !696)
!8264 = !DILocalVariable(name: "file_fd", arg: 1, scope: !701, file: !605, line: 566, type: !19)
!8265 = !DILocation(line: 566, column: 19, scope: !701)
!8266 = !DILocalVariable(name: "init_offset", arg: 2, scope: !701, file: !605, line: 566, type: !41)
!8267 = !DILocation(line: 566, column: 39, scope: !701)
!8268 = !DILocalVariable(name: "bytes_to_send", scope: !701, file: !605, line: 569, type: !41)
!8269 = !DILocation(line: 569, column: 14, scope: !701)
!8270 = !DILocation(line: 571, column: 21, scope: !701)
!8271 = !DILocation(line: 571, column: 3, scope: !701)
!8272 = !DILocation(line: 572, column: 48, scope: !701)
!8273 = !DILocation(line: 572, column: 19, scope: !701)
!8274 = !DILocation(line: 572, column: 17, scope: !701)
!8275 = !DILocation(line: 573, column: 7, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !701, file: !605, line: 573, column: 7)
!8277 = !DILocation(line: 573, column: 19, scope: !8276)
!8278 = !DILocation(line: 573, column: 23, scope: !8276)
!8279 = !DILocation(line: 573, column: 26, scope: !8276)
!8280 = !DILocation(line: 573, column: 40, scope: !8276)
!8281 = !DILocation(line: 573, column: 7, scope: !701)
!8282 = !DILocation(line: 575, column: 5, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8276, file: !605, line: 574, column: 3)
!8284 = !DILocation(line: 576, column: 3, scope: !8283)
!8285 = !DILocation(line: 578, column: 7, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !701, file: !605, line: 578, column: 7)
!8287 = !DILocation(line: 578, column: 21, scope: !8286)
!8288 = !DILocation(line: 578, column: 19, scope: !8286)
!8289 = !DILocation(line: 578, column: 7, scope: !701)
!8290 = !DILocation(line: 580, column: 19, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8286, file: !605, line: 579, column: 3)
!8292 = !DILocation(line: 581, column: 3, scope: !8291)
!8293 = !DILocation(line: 584, column: 22, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8286, file: !605, line: 583, column: 3)
!8295 = !DILocation(line: 584, column: 19, scope: !8294)
!8296 = !DILocation(line: 586, column: 10, scope: !701)
!8297 = !DILocation(line: 586, column: 3, scope: !701)
!8298 = distinct !DISubprogram(name: "do_file_send_sendfile", scope: !605, file: !605, line: 535, type: !8299, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{!608, !613, !19, !19, !41, !41}
!8301 = !DILocalVariable(name: "p_sess", arg: 1, scope: !8298, file: !605, line: 535, type: !613)
!8302 = !DILocation(line: 535, column: 43, scope: !8298)
!8303 = !DILocalVariable(name: "net_fd", arg: 2, scope: !8298, file: !605, line: 535, type: !19)
!8304 = !DILocation(line: 535, column: 55, scope: !8298)
!8305 = !DILocalVariable(name: "file_fd", arg: 3, scope: !8298, file: !605, line: 535, type: !19)
!8306 = !DILocation(line: 535, column: 67, scope: !8298)
!8307 = !DILocalVariable(name: "curr_file_offset", arg: 4, scope: !8298, file: !605, line: 536, type: !41)
!8308 = !DILocation(line: 536, column: 34, scope: !8298)
!8309 = !DILocalVariable(name: "bytes_to_send", arg: 5, scope: !8298, file: !605, line: 536, type: !41)
!8310 = !DILocation(line: 536, column: 63, scope: !8298)
!8311 = !DILocalVariable(name: "retval", scope: !8298, file: !605, line: 538, type: !19)
!8312 = !DILocation(line: 538, column: 7, scope: !8298)
!8313 = !DILocalVariable(name: "chunk_size", scope: !8298, file: !605, line: 539, type: !26)
!8314 = !DILocation(line: 539, column: 16, scope: !8298)
!8315 = !DILocalVariable(name: "ret_struct", scope: !8298, file: !605, line: 540, type: !608)
!8316 = !DILocation(line: 540, column: 27, scope: !8298)
!8317 = !DILocalVariable(name: "init_file_offset", scope: !8298, file: !605, line: 541, type: !41)
!8318 = !DILocation(line: 541, column: 14, scope: !8298)
!8319 = !DILocation(line: 541, column: 33, scope: !8298)
!8320 = !DILocalVariable(name: "bytes_sent", scope: !8298, file: !605, line: 542, type: !41)
!8321 = !DILocation(line: 542, column: 14, scope: !8298)
!8322 = !DILocation(line: 543, column: 7, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8298, file: !605, line: 543, column: 7)
!8324 = !DILocation(line: 543, column: 15, scope: !8323)
!8325 = !DILocation(line: 543, column: 7, scope: !8298)
!8326 = !DILocation(line: 545, column: 18, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8323, file: !605, line: 544, column: 3)
!8328 = !DILocation(line: 545, column: 16, scope: !8327)
!8329 = !DILocation(line: 546, column: 3, scope: !8327)
!8330 = !DILocation(line: 548, column: 33, scope: !8298)
!8331 = !DILocation(line: 548, column: 41, scope: !8298)
!8332 = !DILocation(line: 549, column: 33, scope: !8298)
!8333 = !DILocation(line: 549, column: 48, scope: !8298)
!8334 = !DILocation(line: 548, column: 12, scope: !8298)
!8335 = !DILocation(line: 548, column: 10, scope: !8298)
!8336 = !DILocation(line: 550, column: 16, scope: !8298)
!8337 = !DILocation(line: 550, column: 35, scope: !8298)
!8338 = !DILocation(line: 550, column: 33, scope: !8298)
!8339 = !DILocation(line: 550, column: 14, scope: !8298)
!8340 = !DILocation(line: 551, column: 28, scope: !8298)
!8341 = !DILocation(line: 551, column: 14, scope: !8298)
!8342 = !DILocation(line: 551, column: 26, scope: !8298)
!8343 = !DILocation(line: 552, column: 35, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8298, file: !605, line: 552, column: 7)
!8345 = !DILocation(line: 552, column: 7, scope: !8344)
!8346 = !DILocation(line: 552, column: 7, scope: !8298)
!8347 = !DILocation(line: 554, column: 16, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8344, file: !605, line: 553, column: 3)
!8349 = !DILocation(line: 554, column: 23, scope: !8348)
!8350 = !DILocation(line: 555, column: 12, scope: !8348)
!8351 = !DILocation(line: 555, column: 5, scope: !8348)
!8352 = !DILocation(line: 557, column: 12, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8344, file: !605, line: 557, column: 12)
!8354 = !DILocation(line: 557, column: 26, scope: !8353)
!8355 = !DILocation(line: 557, column: 23, scope: !8353)
!8356 = !DILocation(line: 557, column: 12, scope: !8344)
!8357 = !DILocation(line: 559, column: 16, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8353, file: !605, line: 558, column: 3)
!8359 = !DILocation(line: 559, column: 23, scope: !8358)
!8360 = !DILocation(line: 560, column: 12, scope: !8358)
!8361 = !DILocation(line: 560, column: 5, scope: !8358)
!8362 = !DILocation(line: 562, column: 10, scope: !8298)
!8363 = !DILocation(line: 562, column: 3, scope: !8298)
!8364 = !DILocation(line: 563, column: 1, scope: !8298)
!8365 = !DILocalVariable(name: "p_sess", arg: 1, scope: !604, file: !605, line: 590, type: !613)
!8366 = !DILocation(line: 590, column: 34, scope: !604)
!8367 = !DILocalVariable(name: "file_fd", arg: 2, scope: !604, file: !605, line: 590, type: !19)
!8368 = !DILocation(line: 590, column: 46, scope: !604)
!8369 = !DILocalVariable(name: "is_ascii", arg: 3, scope: !604, file: !605, line: 590, type: !19)
!8370 = !DILocation(line: 590, column: 59, scope: !604)
!8371 = !DILocalVariable(name: "num_to_write", scope: !604, file: !605, line: 593, type: !26)
!8372 = !DILocation(line: 593, column: 16, scope: !604)
!8373 = !DILocalVariable(name: "ret_struct", scope: !604, file: !605, line: 594, type: !608)
!8374 = !DILocation(line: 594, column: 27, scope: !604)
!8375 = !DILocalVariable(name: "chunk_size", scope: !604, file: !605, line: 595, type: !26)
!8376 = !DILocation(line: 595, column: 16, scope: !604)
!8377 = !DILocation(line: 595, column: 29, scope: !604)
!8378 = !DILocalVariable(name: "prev_cr", scope: !604, file: !605, line: 596, type: !19)
!8379 = !DILocation(line: 596, column: 7, scope: !604)
!8380 = !DILocation(line: 597, column: 7, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !604, file: !605, line: 597, column: 7)
!8382 = !DILocation(line: 597, column: 17, scope: !8381)
!8383 = !DILocation(line: 597, column: 7, scope: !604)
!8384 = !DILocation(line: 604, column: 5, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8381, file: !605, line: 598, column: 3)
!8386 = !DILocation(line: 605, column: 3, scope: !8385)
!8387 = !DILocation(line: 606, column: 3, scope: !604)
!8388 = !DILocalVariable(name: "p_writebuf", scope: !8389, file: !605, line: 608, type: !88)
!8389 = distinct !DILexicalBlock(scope: !604, file: !605, line: 607, column: 3)
!8390 = !DILocation(line: 608, column: 17, scope: !8389)
!8391 = !DILocation(line: 608, column: 30, scope: !8389)
!8392 = !DILocation(line: 608, column: 40, scope: !8389)
!8393 = !DILocalVariable(name: "retval", scope: !8389, file: !605, line: 609, type: !19)
!8394 = !DILocation(line: 609, column: 9, scope: !8389)
!8395 = !DILocation(line: 609, column: 32, scope: !8389)
!8396 = !DILocation(line: 609, column: 40, scope: !8389)
!8397 = !DILocation(line: 609, column: 50, scope: !8389)
!8398 = !DILocation(line: 609, column: 55, scope: !8389)
!8399 = !DILocation(line: 609, column: 18, scope: !8389)
!8400 = !DILocation(line: 610, column: 37, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8389, file: !605, line: 610, column: 9)
!8402 = !DILocation(line: 610, column: 9, scope: !8401)
!8403 = !DILocation(line: 610, column: 9, scope: !8389)
!8404 = !DILocation(line: 612, column: 18, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8401, file: !605, line: 611, column: 5)
!8406 = !DILocation(line: 612, column: 25, scope: !8405)
!8407 = !DILocation(line: 613, column: 14, scope: !8405)
!8408 = !DILocation(line: 613, column: 7, scope: !8405)
!8409 = !DILocation(line: 615, column: 14, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8401, file: !605, line: 615, column: 14)
!8411 = !DILocation(line: 615, column: 21, scope: !8410)
!8412 = !DILocation(line: 615, column: 26, scope: !8410)
!8413 = !DILocation(line: 615, column: 30, scope: !8410)
!8414 = !DILocation(line: 615, column: 14, scope: !8401)
!8415 = !DILocation(line: 618, column: 14, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8410, file: !605, line: 616, column: 5)
!8417 = !DILocation(line: 618, column: 7, scope: !8416)
!8418 = !DILocation(line: 620, column: 35, scope: !8389)
!8419 = !DILocation(line: 620, column: 18, scope: !8389)
!8420 = !DILocation(line: 621, column: 31, scope: !8389)
!8421 = !DILocation(line: 621, column: 16, scope: !8389)
!8422 = !DILocation(line: 621, column: 28, scope: !8389)
!8423 = !DILocation(line: 622, column: 9, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8389, file: !605, line: 622, column: 9)
!8425 = !DILocation(line: 622, column: 9, scope: !8389)
!8426 = !DILocalVariable(name: "ret", scope: !8427, file: !605, line: 628, type: !8428)
!8427 = distinct !DILexicalBlock(scope: !8424, file: !605, line: 623, column: 5)
!8428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ascii_to_bin_ret", file: !8215, line: 22, size: 128, elements: !8429)
!8429 = !{!8430, !8431, !8432}
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "stored", scope: !8428, file: !8215, line: 24, baseType: !26, size: 32)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "last_was_cr", scope: !8428, file: !8215, line: 25, baseType: !19, size: 32, offset: 32)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "p_buf", scope: !8428, file: !8215, line: 26, baseType: !16, size: 64, offset: 64)
!8433 = !DILocation(line: 628, column: 31, scope: !8427)
!8434 = !DILocation(line: 629, column: 32, scope: !8427)
!8435 = !DILocation(line: 629, column: 43, scope: !8427)
!8436 = !DILocation(line: 629, column: 57, scope: !8427)
!8437 = !DILocation(line: 629, column: 9, scope: !8427)
!8438 = !DILocation(line: 630, column: 26, scope: !8427)
!8439 = !DILocation(line: 630, column: 20, scope: !8427)
!8440 = !DILocation(line: 631, column: 21, scope: !8427)
!8441 = !DILocation(line: 631, column: 15, scope: !8427)
!8442 = !DILocation(line: 632, column: 24, scope: !8427)
!8443 = !DILocation(line: 632, column: 18, scope: !8427)
!8444 = !DILocation(line: 633, column: 5, scope: !8427)
!8445 = !DILocation(line: 634, column: 37, scope: !8389)
!8446 = !DILocation(line: 634, column: 46, scope: !8389)
!8447 = !DILocation(line: 634, column: 58, scope: !8389)
!8448 = !DILocation(line: 634, column: 14, scope: !8389)
!8449 = !DILocation(line: 634, column: 12, scope: !8389)
!8450 = !DILocation(line: 635, column: 37, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8389, file: !605, line: 635, column: 9)
!8452 = !DILocation(line: 635, column: 9, scope: !8451)
!8453 = !DILocation(line: 635, column: 45, scope: !8451)
!8454 = !DILocation(line: 636, column: 24, scope: !8451)
!8455 = !DILocation(line: 636, column: 34, scope: !8451)
!8456 = !DILocation(line: 636, column: 31, scope: !8451)
!8457 = !DILocation(line: 635, column: 9, scope: !8389)
!8458 = !DILocation(line: 638, column: 18, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8451, file: !605, line: 637, column: 5)
!8460 = !DILocation(line: 638, column: 25, scope: !8459)
!8461 = !DILocation(line: 639, column: 14, scope: !8459)
!8462 = !DILocation(line: 639, column: 7, scope: !8459)
!8463 = distinct !{!8463, !8387, !8464}
!8464 = !DILocation(line: 641, column: 3, scope: !604)
!8465 = !DILocation(line: 642, column: 1, scope: !604)
!8466 = distinct !DISubprogram(name: "get_chunk_size", scope: !605, file: !605, line: 645, type: !1520, scopeLine: 646, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !689, retainedNodes: !128)
!8467 = !DILocalVariable(name: "ret", scope: !8466, file: !605, line: 647, type: !26)
!8468 = !DILocation(line: 647, column: 16, scope: !8466)
!8469 = !DILocation(line: 648, column: 7, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8466, file: !605, line: 648, column: 7)
!8471 = !DILocation(line: 648, column: 32, scope: !8470)
!8472 = !DILocation(line: 648, column: 53, scope: !8470)
!8473 = !DILocation(line: 649, column: 7, scope: !8470)
!8474 = !DILocation(line: 649, column: 32, scope: !8470)
!8475 = !DILocation(line: 648, column: 7, scope: !8466)
!8476 = !DILocation(line: 651, column: 11, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8470, file: !605, line: 650, column: 3)
!8478 = !DILocation(line: 651, column: 9, scope: !8477)
!8479 = !DILocation(line: 652, column: 9, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8477, file: !605, line: 652, column: 9)
!8481 = !DILocation(line: 652, column: 13, scope: !8480)
!8482 = !DILocation(line: 652, column: 9, scope: !8477)
!8483 = !DILocation(line: 654, column: 11, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !605, line: 653, column: 5)
!8485 = !DILocation(line: 655, column: 5, scope: !8484)
!8486 = !DILocation(line: 656, column: 3, scope: !8477)
!8487 = !DILocation(line: 657, column: 10, scope: !8466)
!8488 = !DILocation(line: 657, column: 3, scope: !8466)
!8489 = distinct !DISubprogram(name: "vsf_secbuf_alloc", scope: !1841, file: !1841, line: 18, type: !8490, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1840, retainedNodes: !128)
!8490 = !DISubroutineType(types: !8491)
!8491 = !{null, !1490, !26}
!8492 = !DILocalVariable(name: "p_ptr", arg: 1, scope: !8489, file: !1841, line: 18, type: !1490)
!8493 = !DILocation(line: 18, column: 25, scope: !8489)
!8494 = !DILocalVariable(name: "size", arg: 2, scope: !8489, file: !1841, line: 18, type: !26)
!8495 = !DILocation(line: 18, column: 45, scope: !8489)
!8496 = !DILocalVariable(name: "page_offset", scope: !8489, file: !1841, line: 20, type: !26)
!8497 = !DILocation(line: 20, column: 16, scope: !8489)
!8498 = !DILocalVariable(name: "round_up", scope: !8489, file: !1841, line: 21, type: !26)
!8499 = !DILocation(line: 21, column: 16, scope: !8489)
!8500 = !DILocalVariable(name: "p_mmap", scope: !8489, file: !1841, line: 22, type: !16)
!8501 = !DILocation(line: 22, column: 9, scope: !8489)
!8502 = !DILocalVariable(name: "p_no_access_page", scope: !8489, file: !1841, line: 23, type: !16)
!8503 = !DILocation(line: 23, column: 9, scope: !8489)
!8504 = !DILocalVariable(name: "page_size", scope: !8489, file: !1841, line: 24, type: !26)
!8505 = !DILocation(line: 24, column: 16, scope: !8489)
!8506 = !DILocation(line: 24, column: 28, scope: !8489)
!8507 = !DILocation(line: 27, column: 19, scope: !8489)
!8508 = !DILocation(line: 27, column: 3, scope: !8489)
!8509 = !DILocation(line: 29, column: 17, scope: !8489)
!8510 = !DILocation(line: 29, column: 24, scope: !8489)
!8511 = !DILocation(line: 29, column: 22, scope: !8489)
!8512 = !DILocation(line: 29, column: 15, scope: !8489)
!8513 = !DILocation(line: 30, column: 7, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8489, file: !1841, line: 30, column: 7)
!8515 = !DILocation(line: 30, column: 7, scope: !8489)
!8516 = !DILocalVariable(name: "num_pages", scope: !8517, file: !1841, line: 32, type: !26)
!8517 = distinct !DILexicalBlock(scope: !8514, file: !1841, line: 31, column: 3)
!8518 = !DILocation(line: 32, column: 18, scope: !8517)
!8519 = !DILocation(line: 32, column: 30, scope: !8517)
!8520 = !DILocation(line: 32, column: 37, scope: !8517)
!8521 = !DILocation(line: 32, column: 35, scope: !8517)
!8522 = !DILocation(line: 33, column: 14, scope: !8517)
!8523 = !DILocation(line: 34, column: 16, scope: !8517)
!8524 = !DILocation(line: 34, column: 28, scope: !8517)
!8525 = !DILocation(line: 34, column: 26, scope: !8517)
!8526 = !DILocation(line: 34, column: 14, scope: !8517)
!8527 = !DILocation(line: 35, column: 3, scope: !8517)
!8528 = !DILocation(line: 39, column: 16, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8514, file: !1841, line: 37, column: 3)
!8530 = !DILocation(line: 39, column: 14, scope: !8529)
!8531 = !DILocation(line: 42, column: 15, scope: !8489)
!8532 = !DILocation(line: 42, column: 25, scope: !8489)
!8533 = !DILocation(line: 42, column: 12, scope: !8489)
!8534 = !DILocation(line: 44, column: 39, scope: !8489)
!8535 = !DILocation(line: 44, column: 12, scope: !8489)
!8536 = !DILocation(line: 44, column: 10, scope: !8489)
!8537 = !DILocation(line: 46, column: 22, scope: !8489)
!8538 = !DILocation(line: 46, column: 31, scope: !8489)
!8539 = !DILocation(line: 46, column: 29, scope: !8489)
!8540 = !DILocation(line: 46, column: 42, scope: !8489)
!8541 = !DILocation(line: 46, column: 40, scope: !8489)
!8542 = !DILocation(line: 46, column: 20, scope: !8489)
!8543 = !DILocation(line: 47, column: 26, scope: !8489)
!8544 = !DILocation(line: 47, column: 44, scope: !8489)
!8545 = !DILocation(line: 47, column: 3, scope: !8489)
!8546 = !DILocation(line: 52, column: 30, scope: !8489)
!8547 = !DILocation(line: 52, column: 20, scope: !8489)
!8548 = !DILocation(line: 52, column: 3, scope: !8489)
!8549 = !DILocation(line: 52, column: 28, scope: !8489)
!8550 = !DILocation(line: 53, column: 22, scope: !8489)
!8551 = !DILocation(line: 53, column: 20, scope: !8489)
!8552 = !DILocation(line: 54, column: 26, scope: !8489)
!8553 = !DILocation(line: 54, column: 44, scope: !8489)
!8554 = !DILocation(line: 54, column: 3, scope: !8489)
!8555 = !DILocation(line: 56, column: 13, scope: !8489)
!8556 = !DILocation(line: 56, column: 10, scope: !8489)
!8557 = !DILocation(line: 57, column: 7, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8489, file: !1841, line: 57, column: 7)
!8559 = !DILocation(line: 57, column: 7, scope: !8489)
!8560 = !DILocation(line: 59, column: 16, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8558, file: !1841, line: 58, column: 3)
!8562 = !DILocation(line: 59, column: 28, scope: !8561)
!8563 = !DILocation(line: 59, column: 26, scope: !8561)
!8564 = !DILocation(line: 59, column: 12, scope: !8561)
!8565 = !DILocation(line: 60, column: 3, scope: !8561)
!8566 = !DILocation(line: 61, column: 12, scope: !8489)
!8567 = !DILocation(line: 61, column: 4, scope: !8489)
!8568 = !DILocation(line: 61, column: 10, scope: !8489)
!8569 = !DILocation(line: 62, column: 1, scope: !8489)
!8570 = distinct !DISubprogram(name: "vsf_secbuf_free", scope: !1841, file: !1841, line: 65, type: !8571, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1840, retainedNodes: !128)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{null, !1490}
!8573 = !DILocalVariable(name: "p_ptr", arg: 1, scope: !8570, file: !1841, line: 65, type: !1490)
!8574 = !DILocation(line: 65, column: 24, scope: !8570)
!8575 = !DILocalVariable(name: "map_size", scope: !8570, file: !1841, line: 67, type: !26)
!8576 = !DILocation(line: 67, column: 16, scope: !8570)
!8577 = !DILocalVariable(name: "page_offset", scope: !8570, file: !1841, line: 68, type: !65)
!8578 = !DILocation(line: 68, column: 17, scope: !8570)
!8579 = !DILocalVariable(name: "p_mmap", scope: !8570, file: !1841, line: 69, type: !16)
!8580 = !DILocation(line: 69, column: 9, scope: !8570)
!8581 = !DILocation(line: 69, column: 19, scope: !8570)
!8582 = !DILocation(line: 69, column: 18, scope: !8570)
!8583 = !DILocalVariable(name: "page_size", scope: !8570, file: !1841, line: 70, type: !26)
!8584 = !DILocation(line: 70, column: 16, scope: !8570)
!8585 = !DILocation(line: 70, column: 28, scope: !8570)
!8586 = !DILocation(line: 71, column: 7, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8570, file: !1841, line: 71, column: 7)
!8588 = !DILocation(line: 71, column: 14, scope: !8587)
!8589 = !DILocation(line: 71, column: 7, scope: !8570)
!8590 = !DILocation(line: 73, column: 5, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8587, file: !1841, line: 72, column: 3)
!8592 = !DILocation(line: 76, column: 33, scope: !8570)
!8593 = !DILocation(line: 76, column: 17, scope: !8570)
!8594 = !DILocation(line: 76, column: 42, scope: !8570)
!8595 = !DILocation(line: 76, column: 40, scope: !8570)
!8596 = !DILocation(line: 76, column: 15, scope: !8570)
!8597 = !DILocation(line: 77, column: 7, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8570, file: !1841, line: 77, column: 7)
!8599 = !DILocation(line: 77, column: 7, scope: !8570)
!8600 = !DILocation(line: 79, column: 15, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8598, file: !1841, line: 78, column: 3)
!8602 = !DILocation(line: 79, column: 12, scope: !8601)
!8603 = !DILocation(line: 80, column: 3, scope: !8601)
!8604 = !DILocation(line: 81, column: 13, scope: !8570)
!8605 = !DILocation(line: 81, column: 10, scope: !8570)
!8606 = !DILocation(line: 83, column: 26, scope: !8570)
!8607 = !DILocation(line: 83, column: 34, scope: !8570)
!8608 = !DILocation(line: 83, column: 3, scope: !8570)
!8609 = !DILocation(line: 85, column: 31, scope: !8570)
!8610 = !DILocation(line: 85, column: 14, scope: !8570)
!8611 = !DILocation(line: 85, column: 12, scope: !8570)
!8612 = !DILocation(line: 87, column: 24, scope: !8570)
!8613 = !DILocation(line: 87, column: 32, scope: !8570)
!8614 = !DILocation(line: 87, column: 3, scope: !8570)
!8615 = !DILocation(line: 88, column: 1, scope: !8570)
!8616 = !DILocalVariable(name: "p_list", arg: 1, scope: !708, file: !709, line: 25, type: !712)
!8617 = !DILocation(line: 25, column: 45, scope: !708)
!8618 = !DILocalVariable(name: "p_subdir_list", arg: 2, scope: !708, file: !709, line: 26, type: !712)
!8619 = !DILocation(line: 26, column: 45, scope: !708)
!8620 = !DILocalVariable(name: "p_dir", arg: 3, scope: !708, file: !709, line: 27, type: !718)
!8621 = !DILocation(line: 27, column: 50, scope: !708)
!8622 = !DILocalVariable(name: "p_base_dir_str", arg: 4, scope: !708, file: !709, line: 28, type: !721)
!8623 = !DILocation(line: 28, column: 46, scope: !708)
!8624 = !DILocalVariable(name: "p_option_str", arg: 5, scope: !708, file: !709, line: 29, type: !721)
!8625 = !DILocation(line: 29, column: 46, scope: !708)
!8626 = !DILocalVariable(name: "p_filter_str", arg: 6, scope: !708, file: !709, line: 30, type: !721)
!8627 = !DILocation(line: 30, column: 46, scope: !708)
!8628 = !DILocalVariable(name: "is_verbose", arg: 7, scope: !708, file: !709, line: 31, type: !19)
!8629 = !DILocation(line: 31, column: 30, scope: !708)
!8630 = !DILocalVariable(name: "dirline_str", scope: !708, file: !709, line: 33, type: !723)
!8631 = !DILocation(line: 33, column: 16, scope: !708)
!8632 = !DILocalVariable(name: "normalised_base_dir_str", scope: !708, file: !709, line: 34, type: !723)
!8633 = !DILocation(line: 34, column: 16, scope: !708)
!8634 = !DILocalVariable(name: "loc_result", scope: !708, file: !709, line: 35, type: !8635)
!8635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_locate_result", file: !34, line: 68, size: 96, elements: !8636)
!8636 = !{!8637, !8638, !8639}
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !8635, file: !34, line: 70, baseType: !19, size: 32)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8635, file: !34, line: 71, baseType: !26, size: 32, offset: 32)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "char_found", scope: !8635, file: !34, line: 72, baseType: !17, size: 8, offset: 64)
!8640 = !DILocation(line: 35, column: 28, scope: !708)
!8641 = !DILocalVariable(name: "a_option", scope: !708, file: !709, line: 36, type: !19)
!8642 = !DILocation(line: 36, column: 7, scope: !708)
!8643 = !DILocalVariable(name: "r_option", scope: !708, file: !709, line: 37, type: !19)
!8644 = !DILocation(line: 37, column: 7, scope: !708)
!8645 = !DILocalVariable(name: "t_option", scope: !708, file: !709, line: 38, type: !19)
!8646 = !DILocation(line: 38, column: 7, scope: !708)
!8647 = !DILocalVariable(name: "F_option", scope: !708, file: !709, line: 39, type: !19)
!8648 = !DILocation(line: 39, column: 7, scope: !708)
!8649 = !DILocalVariable(name: "do_stat", scope: !708, file: !709, line: 40, type: !19)
!8650 = !DILocation(line: 40, column: 7, scope: !708)
!8651 = !DILocalVariable(name: "curr_time", scope: !708, file: !709, line: 41, type: !28)
!8652 = !DILocation(line: 41, column: 8, scope: !708)
!8653 = !DILocation(line: 42, column: 32, scope: !708)
!8654 = !DILocation(line: 42, column: 16, scope: !708)
!8655 = !DILocation(line: 43, column: 25, scope: !708)
!8656 = !DILocation(line: 43, column: 12, scope: !708)
!8657 = !DILocation(line: 44, column: 32, scope: !708)
!8658 = !DILocation(line: 44, column: 16, scope: !708)
!8659 = !DILocation(line: 45, column: 25, scope: !708)
!8660 = !DILocation(line: 45, column: 12, scope: !708)
!8661 = !DILocation(line: 46, column: 32, scope: !708)
!8662 = !DILocation(line: 46, column: 16, scope: !708)
!8663 = !DILocation(line: 47, column: 25, scope: !708)
!8664 = !DILocation(line: 47, column: 12, scope: !708)
!8665 = !DILocation(line: 48, column: 32, scope: !708)
!8666 = !DILocation(line: 48, column: 16, scope: !708)
!8667 = !DILocation(line: 49, column: 25, scope: !708)
!8668 = !DILocation(line: 49, column: 12, scope: !708)
!8669 = !DILocation(line: 50, column: 32, scope: !708)
!8670 = !DILocation(line: 50, column: 16, scope: !708)
!8671 = !DILocation(line: 51, column: 18, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !708, file: !709, line: 51, column: 7)
!8673 = !DILocation(line: 51, column: 7, scope: !8672)
!8674 = !DILocation(line: 51, column: 7, scope: !708)
!8675 = !DILocation(line: 53, column: 16, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !709, line: 52, column: 3)
!8677 = !DILocation(line: 54, column: 3, scope: !8676)
!8678 = !DILocation(line: 56, column: 7, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !708, file: !709, line: 56, column: 7)
!8680 = !DILocation(line: 56, column: 7, scope: !708)
!8681 = !DILocation(line: 58, column: 17, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !709, line: 57, column: 3)
!8683 = !DILocation(line: 58, column: 16, scope: !8682)
!8684 = !DILocation(line: 58, column: 14, scope: !8682)
!8685 = !DILocation(line: 59, column: 3, scope: !8682)
!8686 = !DILocation(line: 60, column: 7, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !708, file: !709, line: 60, column: 7)
!8688 = !DILocation(line: 60, column: 18, scope: !8687)
!8689 = !DILocation(line: 60, column: 21, scope: !8687)
!8690 = !DILocation(line: 60, column: 30, scope: !8687)
!8691 = !DILocation(line: 60, column: 33, scope: !8687)
!8692 = !DILocation(line: 60, column: 42, scope: !8687)
!8693 = !DILocation(line: 60, column: 45, scope: !8687)
!8694 = !DILocation(line: 60, column: 59, scope: !8687)
!8695 = !DILocation(line: 60, column: 7, scope: !708)
!8696 = !DILocation(line: 62, column: 13, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8687, file: !709, line: 61, column: 3)
!8698 = !DILocation(line: 63, column: 3, scope: !8697)
!8699 = !DILocation(line: 65, column: 20, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !708, file: !709, line: 65, column: 7)
!8701 = !DILocation(line: 65, column: 8, scope: !8700)
!8702 = !DILocation(line: 65, column: 34, scope: !8700)
!8703 = !DILocation(line: 65, column: 53, scope: !8700)
!8704 = !DILocation(line: 65, column: 37, scope: !8700)
!8705 = !DILocation(line: 65, column: 70, scope: !8700)
!8706 = !DILocation(line: 65, column: 7, scope: !708)
!8707 = !DILocation(line: 67, column: 14, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8700, file: !709, line: 66, column: 3)
!8709 = !DILocation(line: 68, column: 3, scope: !8708)
!8710 = !DILocation(line: 72, column: 23, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !708, file: !709, line: 72, column: 7)
!8712 = !DILocation(line: 72, column: 8, scope: !8711)
!8713 = !DILocation(line: 72, column: 7, scope: !708)
!8714 = !DILocation(line: 74, column: 40, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8711, file: !709, line: 73, column: 3)
!8716 = !DILocation(line: 74, column: 5, scope: !8715)
!8717 = !DILocation(line: 75, column: 3, scope: !8715)
!8718 = !DILocation(line: 76, column: 8, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !708, file: !709, line: 76, column: 7)
!8720 = !DILocation(line: 76, column: 7, scope: !708)
!8721 = !DILocalVariable(name: "len", scope: !8722, file: !709, line: 78, type: !26)
!8722 = distinct !DILexicalBlock(scope: !8719, file: !709, line: 77, column: 3)
!8723 = !DILocation(line: 78, column: 18, scope: !8722)
!8724 = !DILocation(line: 78, column: 24, scope: !8722)
!8725 = !DILocation(line: 79, column: 51, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8722, file: !709, line: 79, column: 9)
!8727 = !DILocation(line: 79, column: 55, scope: !8726)
!8728 = !DILocation(line: 79, column: 9, scope: !8726)
!8729 = !DILocation(line: 79, column: 60, scope: !8726)
!8730 = !DILocation(line: 79, column: 9, scope: !8722)
!8731 = !DILocation(line: 81, column: 7, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8726, file: !709, line: 80, column: 5)
!8733 = !DILocation(line: 82, column: 5, scope: !8732)
!8734 = !DILocation(line: 83, column: 3, scope: !8722)
!8735 = !DILocation(line: 85, column: 7, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !708, file: !709, line: 85, column: 7)
!8737 = !DILocation(line: 85, column: 7, scope: !708)
!8738 = !DILocation(line: 87, column: 17, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8736, file: !709, line: 86, column: 3)
!8740 = !DILocation(line: 87, column: 15, scope: !8739)
!8741 = !DILocation(line: 88, column: 3, scope: !8739)
!8742 = !DILocation(line: 89, column: 3, scope: !708)
!8743 = !DILocation(line: 94, column: 43, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !708, file: !709, line: 90, column: 3)
!8745 = !DILocation(line: 94, column: 5, scope: !8744)
!8746 = !DILocation(line: 95, column: 9, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8744, file: !709, line: 95, column: 9)
!8748 = !DILocation(line: 95, column: 9, scope: !8744)
!8749 = !DILocation(line: 97, column: 7, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8747, file: !709, line: 96, column: 5)
!8751 = !DILocalVariable(name: "len", scope: !8752, file: !709, line: 100, type: !26)
!8752 = distinct !DILexicalBlock(scope: !8744, file: !709, line: 99, column: 5)
!8753 = !DILocation(line: 100, column: 20, scope: !8752)
!8754 = !DILocation(line: 100, column: 26, scope: !8752)
!8755 = !DILocation(line: 101, column: 11, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8752, file: !709, line: 101, column: 11)
!8757 = !DILocation(line: 101, column: 15, scope: !8756)
!8758 = !DILocation(line: 101, column: 19, scope: !8756)
!8759 = !DILocation(line: 101, column: 22, scope: !8756)
!8760 = !DILocation(line: 101, column: 63, scope: !8756)
!8761 = !DILocation(line: 101, column: 11, scope: !8752)
!8762 = !DILocation(line: 103, column: 14, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !709, line: 103, column: 13)
!8764 = distinct !DILexicalBlock(scope: !8756, file: !709, line: 102, column: 7)
!8765 = !DILocation(line: 103, column: 23, scope: !8763)
!8766 = !DILocation(line: 103, column: 27, scope: !8763)
!8767 = !DILocation(line: 103, column: 13, scope: !8764)
!8768 = !DILocation(line: 105, column: 11, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8763, file: !709, line: 104, column: 9)
!8770 = distinct !{!8770, !8742, !8771}
!8771 = !DILocation(line: 212, column: 3, scope: !708)
!8772 = !DILocation(line: 107, column: 14, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8764, file: !709, line: 107, column: 13)
!8774 = !DILocation(line: 107, column: 23, scope: !8773)
!8775 = !DILocation(line: 108, column: 15, scope: !8773)
!8776 = !DILocation(line: 108, column: 19, scope: !8773)
!8777 = !DILocation(line: 108, column: 24, scope: !8773)
!8778 = !DILocation(line: 108, column: 27, scope: !8773)
!8779 = !DILocation(line: 108, column: 68, scope: !8773)
!8780 = !DILocation(line: 108, column: 76, scope: !8773)
!8781 = !DILocation(line: 109, column: 14, scope: !8773)
!8782 = !DILocation(line: 109, column: 18, scope: !8773)
!8783 = !DILocation(line: 107, column: 13, scope: !8764)
!8784 = !DILocation(line: 111, column: 11, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8773, file: !709, line: 110, column: 9)
!8786 = !DILocation(line: 113, column: 7, scope: !8764)
!8787 = !DILocation(line: 116, column: 10, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8744, file: !709, line: 116, column: 9)
!8789 = !DILocation(line: 116, column: 9, scope: !8744)
!8790 = !DILocation(line: 118, column: 7, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !709, line: 117, column: 5)
!8792 = !DILocation(line: 121, column: 22, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8744, file: !709, line: 121, column: 9)
!8794 = !DILocation(line: 121, column: 10, scope: !8793)
!8795 = !DILocation(line: 121, column: 9, scope: !8744)
!8796 = !DILocalVariable(name: "iters", scope: !8797, file: !709, line: 123, type: !26)
!8797 = distinct !DILexicalBlock(scope: !8793, file: !709, line: 122, column: 5)
!8798 = !DILocation(line: 123, column: 20, scope: !8797)
!8799 = !DILocation(line: 124, column: 61, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8797, file: !709, line: 124, column: 11)
!8801 = !DILocation(line: 124, column: 12, scope: !8800)
!8802 = !DILocation(line: 124, column: 11, scope: !8797)
!8803 = !DILocation(line: 127, column: 9, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8800, file: !709, line: 126, column: 7)
!8805 = !DILocation(line: 129, column: 5, scope: !8797)
!8806 = !DILocation(line: 133, column: 5, scope: !8744)
!8807 = !DILocation(line: 134, column: 5, scope: !8744)
!8808 = !DILocation(line: 135, column: 9, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8744, file: !709, line: 135, column: 9)
!8810 = !DILocation(line: 135, column: 9, scope: !8744)
!8811 = !DILocalVariable(name: "retval", scope: !8812, file: !709, line: 141, type: !19)
!8812 = distinct !DILexicalBlock(scope: !8809, file: !709, line: 136, column: 5)
!8813 = !DILocation(line: 141, column: 11, scope: !8812)
!8814 = !DILocation(line: 141, column: 20, scope: !8812)
!8815 = !DILocation(line: 142, column: 39, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8812, file: !709, line: 142, column: 11)
!8817 = !DILocation(line: 142, column: 11, scope: !8816)
!8818 = !DILocation(line: 142, column: 11, scope: !8812)
!8819 = !DILocation(line: 144, column: 9, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8816, file: !709, line: 143, column: 7)
!8821 = !DILocation(line: 146, column: 5, scope: !8812)
!8822 = !DILocation(line: 147, column: 9, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8744, file: !709, line: 147, column: 9)
!8824 = !DILocation(line: 147, column: 9, scope: !8744)
!8825 = !DILocation(line: 151, column: 7, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8823, file: !709, line: 148, column: 5)
!8827 = !DILocation(line: 152, column: 42, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8826, file: !709, line: 152, column: 11)
!8829 = !DILocation(line: 152, column: 11, scope: !8828)
!8830 = !DILocation(line: 152, column: 11, scope: !8826)
!8831 = !DILocalVariable(name: "retval", scope: !8832, file: !709, line: 155, type: !19)
!8832 = distinct !DILexicalBlock(scope: !8828, file: !709, line: 153, column: 7)
!8833 = !DILocation(line: 155, column: 13, scope: !8832)
!8834 = !DILocation(line: 155, column: 22, scope: !8832)
!8835 = !DILocation(line: 156, column: 13, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8832, file: !709, line: 156, column: 13)
!8837 = !DILocation(line: 156, column: 20, scope: !8836)
!8838 = !DILocation(line: 156, column: 25, scope: !8836)
!8839 = !DILocation(line: 156, column: 29, scope: !8836)
!8840 = !DILocation(line: 156, column: 13, scope: !8832)
!8841 = !DILocation(line: 158, column: 11, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8836, file: !709, line: 157, column: 9)
!8843 = !DILocation(line: 159, column: 11, scope: !8842)
!8844 = !DILocation(line: 160, column: 9, scope: !8842)
!8845 = !DILocation(line: 161, column: 7, scope: !8832)
!8846 = !DILocation(line: 162, column: 11, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8826, file: !709, line: 162, column: 11)
!8848 = !DILocation(line: 162, column: 20, scope: !8847)
!8849 = !DILocation(line: 162, column: 50, scope: !8847)
!8850 = !DILocation(line: 162, column: 23, scope: !8847)
!8851 = !DILocation(line: 162, column: 11, scope: !8826)
!8852 = !DILocation(line: 164, column: 9, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8847, file: !709, line: 163, column: 7)
!8854 = !DILocation(line: 165, column: 7, scope: !8853)
!8855 = !DILocation(line: 166, column: 55, scope: !8826)
!8856 = !DILocation(line: 166, column: 68, scope: !8826)
!8857 = !DILocation(line: 166, column: 7, scope: !8826)
!8858 = !DILocation(line: 167, column: 5, scope: !8826)
!8859 = !DILocation(line: 173, column: 7, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8823, file: !709, line: 169, column: 5)
!8861 = !DILocation(line: 174, column: 11, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8860, file: !709, line: 174, column: 11)
!8863 = !DILocation(line: 174, column: 11, scope: !8860)
!8864 = !DILocation(line: 176, column: 40, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !709, line: 176, column: 13)
!8866 = distinct !DILexicalBlock(scope: !8862, file: !709, line: 175, column: 7)
!8867 = !DILocation(line: 176, column: 13, scope: !8865)
!8868 = !DILocation(line: 176, column: 13, scope: !8866)
!8869 = !DILocation(line: 178, column: 11, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8865, file: !709, line: 177, column: 9)
!8871 = !DILocation(line: 179, column: 9, scope: !8870)
!8872 = !DILocation(line: 180, column: 49, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8865, file: !709, line: 180, column: 18)
!8874 = !DILocation(line: 180, column: 18, scope: !8873)
!8875 = !DILocation(line: 180, column: 18, scope: !8865)
!8876 = !DILocation(line: 182, column: 11, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8873, file: !709, line: 181, column: 9)
!8878 = !DILocation(line: 183, column: 9, scope: !8877)
!8879 = !DILocation(line: 184, column: 7, scope: !8866)
!8880 = !DILocation(line: 185, column: 7, scope: !8860)
!8881 = !DILocalVariable(name: "p_sort_str", scope: !8882, file: !709, line: 193, type: !721)
!8882 = distinct !DILexicalBlock(scope: !8744, file: !709, line: 191, column: 5)
!8883 = !DILocation(line: 193, column: 27, scope: !8882)
!8884 = !DILocalVariable(name: "p_sort_subdir_str", scope: !8882, file: !709, line: 194, type: !721)
!8885 = !DILocation(line: 194, column: 27, scope: !8882)
!8886 = !DILocation(line: 195, column: 12, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8882, file: !709, line: 195, column: 11)
!8888 = !DILocation(line: 195, column: 11, scope: !8882)
!8889 = !DILocation(line: 197, column: 20, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8887, file: !709, line: 196, column: 7)
!8891 = !DILocation(line: 198, column: 7, scope: !8890)
!8892 = !DILocation(line: 202, column: 62, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8887, file: !709, line: 200, column: 7)
!8894 = !DILocation(line: 202, column: 24, scope: !8893)
!8895 = !DILocation(line: 201, column: 9, scope: !8893)
!8896 = !DILocation(line: 203, column: 20, scope: !8893)
!8897 = !DILocation(line: 204, column: 27, scope: !8893)
!8898 = !DILocation(line: 206, column: 20, scope: !8882)
!8899 = !DILocation(line: 206, column: 42, scope: !8882)
!8900 = !DILocation(line: 206, column: 7, scope: !8882)
!8901 = !DILocation(line: 207, column: 11, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8882, file: !709, line: 207, column: 11)
!8903 = !DILocation(line: 207, column: 25, scope: !8902)
!8904 = !DILocation(line: 207, column: 30, scope: !8902)
!8905 = !DILocation(line: 207, column: 60, scope: !8902)
!8906 = !DILocation(line: 207, column: 33, scope: !8902)
!8907 = !DILocation(line: 207, column: 11, scope: !8882)
!8908 = !DILocation(line: 209, column: 22, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8902, file: !709, line: 208, column: 7)
!8910 = !DILocation(line: 209, column: 59, scope: !8909)
!8911 = !DILocation(line: 209, column: 9, scope: !8909)
!8912 = !DILocation(line: 210, column: 7, scope: !8909)
!8913 = !DILocation(line: 213, column: 17, scope: !708)
!8914 = !DILocation(line: 213, column: 25, scope: !708)
!8915 = !DILocation(line: 213, column: 3, scope: !708)
!8916 = !DILocation(line: 214, column: 7, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !708, file: !709, line: 214, column: 7)
!8918 = !DILocation(line: 214, column: 21, scope: !8917)
!8919 = !DILocation(line: 214, column: 7, scope: !708)
!8920 = !DILocation(line: 216, column: 19, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8917, file: !709, line: 215, column: 3)
!8922 = !DILocation(line: 216, column: 34, scope: !8921)
!8923 = !DILocation(line: 216, column: 5, scope: !8921)
!8924 = !DILocation(line: 217, column: 3, scope: !8921)
!8925 = !DILocation(line: 218, column: 3, scope: !708)
!8926 = !DILocation(line: 219, column: 3, scope: !708)
!8927 = !DILocation(line: 220, column: 1, scope: !708)
!8928 = !DILocalVariable(name: "p_filename_str", arg: 1, scope: !743, file: !709, line: 223, type: !721)
!8929 = !DILocation(line: 223, column: 48, scope: !743)
!8930 = !DILocalVariable(name: "p_filter_str", arg: 2, scope: !743, file: !709, line: 224, type: !721)
!8931 = !DILocation(line: 224, column: 48, scope: !743)
!8932 = !DILocalVariable(name: "iters", arg: 3, scope: !743, file: !709, line: 225, type: !746)
!8933 = !DILocation(line: 225, column: 42, scope: !743)
!8934 = !DILocalVariable(name: "filter_remain_str", scope: !743, file: !709, line: 241, type: !723)
!8935 = !DILocation(line: 241, column: 16, scope: !743)
!8936 = !DILocalVariable(name: "name_remain_str", scope: !743, file: !709, line: 242, type: !723)
!8937 = !DILocation(line: 242, column: 16, scope: !743)
!8938 = !DILocalVariable(name: "temp_str", scope: !743, file: !709, line: 243, type: !723)
!8939 = !DILocation(line: 243, column: 16, scope: !743)
!8940 = !DILocalVariable(name: "brace_list_str", scope: !743, file: !709, line: 244, type: !723)
!8941 = !DILocation(line: 244, column: 16, scope: !743)
!8942 = !DILocalVariable(name: "new_filter_str", scope: !743, file: !709, line: 245, type: !723)
!8943 = !DILocation(line: 245, column: 16, scope: !743)
!8944 = !DILocalVariable(name: "ret", scope: !743, file: !709, line: 246, type: !19)
!8945 = !DILocation(line: 246, column: 7, scope: !743)
!8946 = !DILocalVariable(name: "last_token", scope: !743, file: !709, line: 247, type: !17)
!8947 = !DILocation(line: 247, column: 8, scope: !743)
!8948 = !DILocalVariable(name: "must_match_at_current_pos", scope: !743, file: !709, line: 248, type: !19)
!8949 = !DILocation(line: 248, column: 7, scope: !743)
!8950 = !DILocation(line: 249, column: 32, scope: !743)
!8951 = !DILocation(line: 249, column: 3, scope: !743)
!8952 = !DILocation(line: 250, column: 30, scope: !743)
!8953 = !DILocation(line: 250, column: 3, scope: !743)
!8954 = !DILocation(line: 252, column: 3, scope: !743)
!8955 = !DILocation(line: 252, column: 11, scope: !743)
!8956 = !DILocation(line: 252, column: 43, scope: !743)
!8957 = !DILocation(line: 252, column: 47, scope: !743)
!8958 = !DILocation(line: 252, column: 46, scope: !743)
!8959 = !DILocation(line: 252, column: 53, scope: !743)
!8960 = !DILocalVariable(name: "locate_result", scope: !8961, file: !709, line: 256, type: !8635)
!8961 = distinct !DILexicalBlock(scope: !743, file: !709, line: 253, column: 3)
!8962 = !DILocation(line: 256, column: 30, scope: !8961)
!8963 = !DILocation(line: 257, column: 7, scope: !8961)
!8964 = !DILocation(line: 258, column: 7, scope: !8961)
!8965 = !DILocation(line: 258, column: 13, scope: !8961)
!8966 = !DILocation(line: 260, column: 23, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8961, file: !709, line: 260, column: 9)
!8968 = !DILocation(line: 260, column: 9, scope: !8967)
!8969 = !DILocation(line: 260, column: 9, scope: !8961)
!8970 = !DILocalVariable(name: "indexx", scope: !8971, file: !709, line: 262, type: !26)
!8971 = distinct !DILexicalBlock(scope: !8967, file: !709, line: 261, column: 5)
!8972 = !DILocation(line: 262, column: 20, scope: !8971)
!8973 = !DILocation(line: 262, column: 43, scope: !8971)
!8974 = !DILocation(line: 263, column: 57, scope: !8971)
!8975 = !DILocation(line: 263, column: 7, scope: !8971)
!8976 = !DILocation(line: 264, column: 53, scope: !8971)
!8977 = !DILocation(line: 264, column: 60, scope: !8971)
!8978 = !DILocation(line: 264, column: 7, scope: !8971)
!8979 = !DILocation(line: 265, column: 7, scope: !8971)
!8980 = !DILocation(line: 266, column: 34, scope: !8971)
!8981 = !DILocation(line: 266, column: 18, scope: !8971)
!8982 = !DILocation(line: 267, column: 5, scope: !8971)
!8983 = !DILocation(line: 271, column: 7, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8967, file: !709, line: 269, column: 5)
!8985 = !DILocation(line: 272, column: 7, scope: !8984)
!8986 = !DILocation(line: 273, column: 18, scope: !8984)
!8987 = !DILocation(line: 275, column: 10, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8961, file: !709, line: 275, column: 9)
!8989 = !DILocation(line: 275, column: 9, scope: !8961)
!8990 = !DILocalVariable(name: "indexx", scope: !8991, file: !709, line: 280, type: !26)
!8991 = distinct !DILexicalBlock(scope: !8988, file: !709, line: 276, column: 5)
!8992 = !DILocation(line: 280, column: 20, scope: !8991)
!8993 = !DILocation(line: 281, column: 23, scope: !8991)
!8994 = !DILocation(line: 282, column: 26, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8991, file: !709, line: 282, column: 11)
!8996 = !DILocation(line: 282, column: 12, scope: !8995)
!8997 = !DILocation(line: 282, column: 11, scope: !8991)
!8998 = !DILocation(line: 285, column: 9, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8995, file: !709, line: 283, column: 7)
!9000 = !DILocation(line: 287, column: 30, scope: !8991)
!9001 = !DILocation(line: 287, column: 14, scope: !8991)
!9002 = !DILocation(line: 288, column: 11, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8991, file: !709, line: 288, column: 11)
!9004 = !DILocation(line: 288, column: 37, scope: !9003)
!9005 = !DILocation(line: 288, column: 40, scope: !9003)
!9006 = !DILocation(line: 288, column: 47, scope: !9003)
!9007 = !DILocation(line: 288, column: 11, scope: !8991)
!9008 = !DILocation(line: 290, column: 9, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9003, file: !709, line: 289, column: 7)
!9010 = !DILocation(line: 294, column: 22, scope: !8991)
!9011 = !DILocation(line: 294, column: 31, scope: !8991)
!9012 = !DILocation(line: 294, column: 29, scope: !8991)
!9013 = !DILocation(line: 293, column: 7, scope: !8991)
!9014 = !DILocation(line: 295, column: 7, scope: !8991)
!9015 = !DILocation(line: 296, column: 5, scope: !8991)
!9016 = !DILocation(line: 297, column: 9, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8961, file: !709, line: 297, column: 9)
!9018 = !DILocation(line: 297, column: 20, scope: !9017)
!9019 = !DILocation(line: 297, column: 9, scope: !8961)
!9020 = !DILocation(line: 299, column: 11, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !709, line: 299, column: 11)
!9022 = distinct !DILexicalBlock(scope: !9017, file: !709, line: 298, column: 5)
!9023 = !DILocation(line: 299, column: 11, scope: !9022)
!9024 = !DILocation(line: 301, column: 9, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9021, file: !709, line: 300, column: 7)
!9026 = !DILocation(line: 303, column: 46, scope: !9022)
!9027 = !DILocation(line: 303, column: 75, scope: !9022)
!9028 = !DILocation(line: 303, column: 7, scope: !9022)
!9029 = !DILocation(line: 304, column: 7, scope: !9022)
!9030 = !DILocation(line: 305, column: 33, scope: !9022)
!9031 = !DILocation(line: 306, column: 5, scope: !9022)
!9032 = !DILocation(line: 307, column: 14, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9017, file: !709, line: 307, column: 14)
!9034 = !DILocation(line: 307, column: 25, scope: !9033)
!9035 = !DILocation(line: 307, column: 14, scope: !9017)
!9036 = !DILocalVariable(name: "end_brace", scope: !9037, file: !709, line: 309, type: !8635)
!9037 = distinct !DILexicalBlock(scope: !9033, file: !709, line: 308, column: 5)
!9038 = !DILocation(line: 309, column: 32, scope: !9037)
!9039 = !DILocation(line: 310, column: 9, scope: !9037)
!9040 = !DILocation(line: 311, column: 33, scope: !9037)
!9041 = !DILocation(line: 312, column: 21, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9037, file: !709, line: 312, column: 11)
!9043 = !DILocation(line: 312, column: 11, scope: !9042)
!9044 = !DILocation(line: 312, column: 11, scope: !9037)
!9045 = !DILocation(line: 314, column: 9, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9042, file: !709, line: 313, column: 7)
!9047 = !DILocation(line: 315, column: 9, scope: !9046)
!9048 = !DILocation(line: 316, column: 9, scope: !9046)
!9049 = !DILocation(line: 317, column: 9, scope: !9046)
!9050 = !DILocation(line: 318, column: 9, scope: !9046)
!9051 = !DILocation(line: 318, column: 17, scope: !9046)
!9052 = !DILocation(line: 318, column: 16, scope: !9046)
!9053 = !DILocation(line: 320, column: 11, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9046, file: !709, line: 319, column: 9)
!9055 = !DILocation(line: 321, column: 11, scope: !9054)
!9056 = !DILocation(line: 323, column: 42, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9054, file: !709, line: 322, column: 15)
!9058 = !DILocation(line: 322, column: 15, scope: !9057)
!9059 = !DILocation(line: 322, column: 15, scope: !9054)
!9060 = !DILocation(line: 325, column: 17, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9057, file: !709, line: 324, column: 11)
!9062 = !DILocation(line: 326, column: 13, scope: !9061)
!9063 = !DILocation(line: 328, column: 11, scope: !9054)
!9064 = !DILocation(line: 329, column: 11, scope: !9054)
!9065 = distinct !{!9065, !9050, !9066}
!9066 = !DILocation(line: 330, column: 9, scope: !9046)
!9067 = !DILocation(line: 331, column: 9, scope: !9046)
!9068 = !DILocation(line: 333, column: 16, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9042, file: !709, line: 333, column: 16)
!9070 = !DILocation(line: 333, column: 46, scope: !9069)
!9071 = !DILocation(line: 334, column: 16, scope: !9069)
!9072 = !DILocation(line: 334, column: 53, scope: !9069)
!9073 = !DILocation(line: 333, column: 16, scope: !9042)
!9074 = !DILocation(line: 336, column: 9, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9069, file: !709, line: 335, column: 7)
!9076 = !DILocation(line: 341, column: 19, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9069, file: !709, line: 339, column: 7)
!9078 = !DILocation(line: 341, column: 48, scope: !9077)
!9079 = !DILocation(line: 340, column: 9, scope: !9077)
!9080 = !DILocation(line: 342, column: 9, scope: !9077)
!9081 = !DILocation(line: 344, column: 5, scope: !9037)
!9082 = !DILocation(line: 347, column: 33, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9033, file: !709, line: 346, column: 5)
!9084 = distinct !{!9084, !8954, !9085}
!9085 = !DILocation(line: 349, column: 3, scope: !743)
!9086 = !DILocation(line: 353, column: 7, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !743, file: !709, line: 353, column: 7)
!9088 = !DILocation(line: 353, column: 36, scope: !9087)
!9089 = !DILocation(line: 353, column: 40, scope: !9087)
!9090 = !DILocation(line: 353, column: 43, scope: !9087)
!9091 = !DILocation(line: 353, column: 54, scope: !9087)
!9092 = !DILocation(line: 353, column: 7, scope: !743)
!9093 = !DILocation(line: 355, column: 5, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9087, file: !709, line: 354, column: 3)
!9095 = !DILocation(line: 358, column: 7, scope: !743)
!9096 = !DILocation(line: 359, column: 8, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !743, file: !709, line: 359, column: 7)
!9098 = !DILocation(line: 359, column: 7, scope: !9097)
!9099 = !DILocation(line: 359, column: 14, scope: !9097)
!9100 = !DILocation(line: 359, column: 7, scope: !743)
!9101 = !DILocation(line: 360, column: 9, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9097, file: !709, line: 359, column: 39)
!9103 = !DILocation(line: 361, column: 3, scope: !9102)
!9104 = !DILocation(line: 359, column: 17, scope: !9097)
!9105 = !DILocation(line: 363, column: 3, scope: !743)
!9106 = !DILocation(line: 364, column: 3, scope: !743)
!9107 = !DILocation(line: 365, column: 3, scope: !743)
!9108 = !DILocation(line: 366, column: 3, scope: !743)
!9109 = !DILocation(line: 367, column: 3, scope: !743)
!9110 = !DILocation(line: 368, column: 10, scope: !743)
!9111 = !DILocation(line: 368, column: 3, scope: !743)
!9112 = !DILocalVariable(name: "p_str", arg: 1, scope: !749, file: !709, line: 372, type: !752)
!9113 = !DILocation(line: 372, column: 30, scope: !749)
!9114 = !DILocalVariable(name: "p_filename_str", arg: 2, scope: !749, file: !709, line: 372, type: !721)
!9115 = !DILocation(line: 372, column: 57, scope: !749)
!9116 = !DILocalVariable(name: "p_stat", arg: 3, scope: !749, file: !709, line: 373, type: !753)
!9117 = !DILocation(line: 373, column: 50, scope: !749)
!9118 = !DILocalVariable(name: "curr_time", arg: 4, scope: !749, file: !709, line: 373, type: !28)
!9119 = !DILocation(line: 373, column: 63, scope: !749)
!9120 = !DILocalVariable(name: "size", scope: !749, file: !709, line: 376, type: !41)
!9121 = !DILocation(line: 376, column: 14, scope: !749)
!9122 = !DILocation(line: 376, column: 50, scope: !749)
!9123 = !DILocation(line: 376, column: 21, scope: !749)
!9124 = !DILocation(line: 378, column: 18, scope: !749)
!9125 = !DILocation(line: 378, column: 55, scope: !749)
!9126 = !DILocation(line: 378, column: 25, scope: !749)
!9127 = !DILocation(line: 378, column: 3, scope: !749)
!9128 = !DILocation(line: 379, column: 19, scope: !749)
!9129 = !DILocation(line: 379, column: 3, scope: !749)
!9130 = !DILocation(line: 381, column: 61, scope: !749)
!9131 = !DILocation(line: 381, column: 31, scope: !749)
!9132 = !DILocation(line: 381, column: 3, scope: !749)
!9133 = !DILocation(line: 382, column: 3, scope: !749)
!9134 = !DILocation(line: 383, column: 18, scope: !749)
!9135 = !DILocation(line: 383, column: 3, scope: !749)
!9136 = !DILocation(line: 384, column: 19, scope: !749)
!9137 = !DILocation(line: 384, column: 3, scope: !749)
!9138 = !DILocation(line: 386, column: 7, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !749, file: !709, line: 386, column: 7)
!9140 = !DILocation(line: 386, column: 7, scope: !749)
!9141 = !DILocation(line: 388, column: 5, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9139, file: !709, line: 387, column: 3)
!9143 = !DILocation(line: 389, column: 3, scope: !9142)
!9144 = !DILocalVariable(name: "uid", scope: !9145, file: !709, line: 392, type: !19)
!9145 = distinct !DILexicalBlock(scope: !9139, file: !709, line: 391, column: 3)
!9146 = !DILocation(line: 392, column: 9, scope: !9145)
!9147 = !DILocation(line: 392, column: 43, scope: !9145)
!9148 = !DILocation(line: 392, column: 15, scope: !9145)
!9149 = !DILocalVariable(name: "p_user", scope: !9145, file: !709, line: 393, type: !6120)
!9150 = !DILocation(line: 393, column: 30, scope: !9145)
!9151 = !DILocation(line: 394, column: 9, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9145, file: !709, line: 394, column: 9)
!9153 = !DILocation(line: 394, column: 9, scope: !9145)
!9154 = !DILocation(line: 396, column: 37, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9152, file: !709, line: 395, column: 5)
!9156 = !DILocation(line: 396, column: 16, scope: !9155)
!9157 = !DILocation(line: 396, column: 14, scope: !9155)
!9158 = !DILocation(line: 397, column: 5, scope: !9155)
!9159 = !DILocation(line: 398, column: 9, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9145, file: !709, line: 398, column: 9)
!9161 = !DILocation(line: 398, column: 16, scope: !9160)
!9162 = !DILocation(line: 398, column: 9, scope: !9145)
!9163 = !DILocation(line: 400, column: 51, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9160, file: !709, line: 399, column: 5)
!9165 = !DILocation(line: 400, column: 35, scope: !9164)
!9166 = !DILocation(line: 400, column: 7, scope: !9164)
!9167 = !DILocation(line: 401, column: 5, scope: !9164)
!9168 = !DILocation(line: 404, column: 59, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9160, file: !709, line: 403, column: 5)
!9170 = !DILocation(line: 404, column: 34, scope: !9169)
!9171 = !DILocation(line: 404, column: 7, scope: !9169)
!9172 = !DILocation(line: 407, column: 3, scope: !749)
!9173 = !DILocation(line: 408, column: 18, scope: !749)
!9174 = !DILocation(line: 408, column: 3, scope: !749)
!9175 = !DILocation(line: 409, column: 19, scope: !749)
!9176 = !DILocation(line: 409, column: 3, scope: !749)
!9177 = !DILocation(line: 411, column: 7, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !749, file: !709, line: 411, column: 7)
!9179 = !DILocation(line: 411, column: 7, scope: !749)
!9180 = !DILocation(line: 413, column: 5, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9178, file: !709, line: 412, column: 3)
!9182 = !DILocation(line: 414, column: 3, scope: !9181)
!9183 = !DILocalVariable(name: "gid", scope: !9184, file: !709, line: 417, type: !19)
!9184 = distinct !DILexicalBlock(scope: !9178, file: !709, line: 416, column: 3)
!9185 = !DILocation(line: 417, column: 9, scope: !9184)
!9186 = !DILocation(line: 417, column: 43, scope: !9184)
!9187 = !DILocation(line: 417, column: 15, scope: !9184)
!9188 = !DILocalVariable(name: "p_group", scope: !9184, file: !709, line: 418, type: !1479)
!9189 = !DILocation(line: 418, column: 31, scope: !9184)
!9190 = !DILocation(line: 419, column: 9, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9184, file: !709, line: 419, column: 9)
!9192 = !DILocation(line: 419, column: 9, scope: !9184)
!9193 = !DILocation(line: 421, column: 38, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9191, file: !709, line: 420, column: 5)
!9195 = !DILocation(line: 421, column: 17, scope: !9194)
!9196 = !DILocation(line: 421, column: 15, scope: !9194)
!9197 = !DILocation(line: 422, column: 5, scope: !9194)
!9198 = !DILocation(line: 423, column: 9, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9184, file: !709, line: 423, column: 9)
!9200 = !DILocation(line: 423, column: 17, scope: !9199)
!9201 = !DILocation(line: 423, column: 9, scope: !9184)
!9202 = !DILocation(line: 425, column: 51, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9199, file: !709, line: 424, column: 5)
!9204 = !DILocation(line: 425, column: 35, scope: !9203)
!9205 = !DILocation(line: 425, column: 7, scope: !9203)
!9206 = !DILocation(line: 426, column: 5, scope: !9203)
!9207 = !DILocation(line: 429, column: 60, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9199, file: !709, line: 428, column: 5)
!9209 = !DILocation(line: 429, column: 34, scope: !9208)
!9210 = !DILocation(line: 429, column: 7, scope: !9208)
!9211 = !DILocation(line: 432, column: 3, scope: !749)
!9212 = !DILocation(line: 433, column: 18, scope: !749)
!9213 = !DILocation(line: 433, column: 3, scope: !749)
!9214 = !DILocation(line: 434, column: 19, scope: !749)
!9215 = !DILocation(line: 434, column: 3, scope: !749)
!9216 = !DILocation(line: 436, column: 36, scope: !749)
!9217 = !DILocation(line: 436, column: 3, scope: !749)
!9218 = !DILocation(line: 437, column: 3, scope: !749)
!9219 = !DILocation(line: 438, column: 18, scope: !749)
!9220 = !DILocation(line: 438, column: 3, scope: !749)
!9221 = !DILocation(line: 439, column: 19, scope: !749)
!9222 = !DILocation(line: 439, column: 3, scope: !749)
!9223 = !DILocation(line: 441, column: 19, scope: !749)
!9224 = !DILocation(line: 441, column: 55, scope: !749)
!9225 = !DILocation(line: 442, column: 55, scope: !749)
!9226 = !DILocation(line: 443, column: 55, scope: !749)
!9227 = !DILocation(line: 441, column: 26, scope: !749)
!9228 = !DILocation(line: 441, column: 3, scope: !749)
!9229 = !DILocation(line: 444, column: 19, scope: !749)
!9230 = !DILocation(line: 444, column: 3, scope: !749)
!9231 = !DILocation(line: 446, column: 18, scope: !749)
!9232 = !DILocation(line: 446, column: 25, scope: !749)
!9233 = !DILocation(line: 446, column: 3, scope: !749)
!9234 = !DILocation(line: 447, column: 19, scope: !749)
!9235 = !DILocation(line: 447, column: 3, scope: !749)
!9236 = !DILocation(line: 448, column: 1, scope: !749)
!9237 = distinct !DISubprogram(name: "vsf_priv_parent_postlogin", scope: !1845, file: !1845, line: 36, type: !9238, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{null, !9240}
!9240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9241, size: 64)
!9241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !9242)
!9242 = !{!9243, !9244, !9245, !9246, !9247, !9248, !9249, !9250, !9251, !9252, !9253, !9254, !9255, !9256, !9257, !9263, !9264, !9265, !9266, !9267, !9268, !9269, !9270, !9271, !9272, !9273, !9274, !9275, !9276, !9277, !9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299, !9300, !9301, !9302, !9303, !9304}
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !9241, file: !8, line: 21, baseType: !154, size: 64)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !9241, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !9241, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !9241, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !9241, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !9241, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !9241, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !9241, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !9241, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !9241, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !9241, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !9241, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !9241, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !9241, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !9241, file: !8, line: 39, baseType: !9258, size: 128, offset: 704)
!9258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !9259)
!9259 = !{!9260, !9261, !9262}
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !9258, file: !34, line: 12, baseType: !16, size: 64)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !9258, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !9258, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !9241, file: !8, line: 40, baseType: !9258, size: 128, offset: 832)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !9241, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !9241, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !9241, file: !8, line: 45, baseType: !9258, size: 128, offset: 1088)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !9241, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !9241, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !9241, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !9241, file: !8, line: 51, baseType: !9258, size: 128, offset: 1344)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !9241, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !9241, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !9241, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !9241, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !9241, file: !8, line: 62, baseType: !9258, size: 128, offset: 1664)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !9241, file: !8, line: 63, baseType: !9258, size: 128, offset: 1792)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !9241, file: !8, line: 64, baseType: !9258, size: 128, offset: 1920)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !9241, file: !8, line: 65, baseType: !9258, size: 128, offset: 2048)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !9241, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !9241, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !9241, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !9241, file: !8, line: 71, baseType: !9258, size: 128, offset: 2304)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !9241, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !9241, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !9241, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !9241, file: !8, line: 75, baseType: !9258, size: 128, offset: 2624)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !9241, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !9241, file: !8, line: 79, baseType: !9258, size: 128, offset: 2816)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !9241, file: !8, line: 80, baseType: !9258, size: 128, offset: 2944)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !9241, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !9241, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !9241, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !9241, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !9241, file: !8, line: 89, baseType: !9258, size: 128, offset: 3200)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !9241, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !9241, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !9241, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !9241, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !9241, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !9241, file: !8, line: 97, baseType: !9258, size: 128, offset: 3584)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !9241, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !9241, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !9241, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !9241, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!9305 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9237, file: !1845, line: 36, type: !9240)
!9306 = !DILocation(line: 36, column: 47, scope: !9237)
!9307 = !DILocation(line: 38, column: 22, scope: !9237)
!9308 = !DILocation(line: 38, column: 3, scope: !9237)
!9309 = !DILocation(line: 40, column: 3, scope: !9237)
!9310 = !DILocation(line: 42, column: 28, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9237, file: !1845, line: 41, column: 3)
!9312 = !DILocation(line: 42, column: 5, scope: !9311)
!9313 = distinct !{!9313, !9309, !9314}
!9314 = !DILocation(line: 43, column: 3, scope: !9237)
!9315 = !DILocation(line: 44, column: 1, scope: !9237)
!9316 = distinct !DISubprogram(name: "minimize_privilege", scope: !1845, file: !1845, line: 83, type: !9238, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9317 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9316, file: !1845, line: 83, type: !9240)
!9318 = !DILocation(line: 83, column: 40, scope: !9316)
!9319 = !DILocation(line: 89, column: 8, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9316, file: !1845, line: 89, column: 7)
!9321 = !DILocation(line: 89, column: 16, scope: !9320)
!9322 = !DILocation(line: 89, column: 29, scope: !9320)
!9323 = !DILocation(line: 89, column: 32, scope: !9320)
!9324 = !DILocation(line: 89, column: 7, scope: !9316)
!9325 = !DILocation(line: 93, column: 5, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9320, file: !1845, line: 90, column: 3)
!9327 = !DILocalVariable(name: "caps", scope: !9328, file: !1845, line: 96, type: !26)
!9328 = distinct !DILexicalBlock(scope: !9316, file: !1845, line: 95, column: 3)
!9329 = !DILocation(line: 96, column: 18, scope: !9328)
!9330 = !DILocalVariable(name: "user_str", scope: !9328, file: !1845, line: 97, type: !9258)
!9331 = !DILocation(line: 97, column: 18, scope: !9328)
!9332 = !DILocalVariable(name: "dir_str", scope: !9328, file: !1845, line: 98, type: !9258)
!9333 = !DILocation(line: 98, column: 18, scope: !9328)
!9334 = !DILocation(line: 99, column: 9, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9328, file: !1845, line: 99, column: 9)
!9336 = !DILocation(line: 99, column: 9, scope: !9328)
!9337 = !DILocation(line: 101, column: 33, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9335, file: !1845, line: 100, column: 5)
!9339 = !DILocation(line: 101, column: 7, scope: !9338)
!9340 = !DILocation(line: 102, column: 5, scope: !9338)
!9341 = !DILocation(line: 103, column: 9, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9328, file: !1845, line: 103, column: 9)
!9343 = !DILocation(line: 103, column: 9, scope: !9328)
!9344 = !DILocation(line: 105, column: 32, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9342, file: !1845, line: 104, column: 5)
!9346 = !DILocation(line: 105, column: 7, scope: !9345)
!9347 = !DILocation(line: 106, column: 5, scope: !9345)
!9348 = !DILocation(line: 107, column: 9, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9328, file: !1845, line: 107, column: 9)
!9350 = !DILocation(line: 107, column: 9, scope: !9328)
!9351 = !DILocation(line: 109, column: 12, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9349, file: !1845, line: 108, column: 5)
!9353 = !DILocation(line: 110, column: 5, scope: !9352)
!9354 = !DILocation(line: 111, column: 9, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9328, file: !1845, line: 111, column: 9)
!9356 = !DILocation(line: 111, column: 9, scope: !9328)
!9357 = !DILocation(line: 113, column: 12, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9355, file: !1845, line: 112, column: 5)
!9359 = !DILocation(line: 114, column: 5, scope: !9358)
!9360 = !DILocation(line: 115, column: 60, scope: !9328)
!9361 = !DILocation(line: 115, column: 5, scope: !9328)
!9362 = !DILocation(line: 117, column: 5, scope: !9328)
!9363 = !DILocation(line: 118, column: 5, scope: !9328)
!9364 = !DILocation(line: 120, column: 3, scope: !9316)
!9365 = !DILocation(line: 121, column: 3, scope: !9316)
!9366 = !DILocation(line: 122, column: 3, scope: !9316)
!9367 = !DILocation(line: 123, column: 1, scope: !9316)
!9368 = distinct !DISubprogram(name: "process_post_login_req", scope: !1845, file: !1845, line: 47, type: !9238, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9369 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9368, file: !1845, line: 47, type: !9240)
!9370 = !DILocation(line: 47, column: 44, scope: !9368)
!9371 = !DILocalVariable(name: "cmd", scope: !9368, file: !1845, line: 49, type: !17)
!9372 = !DILocation(line: 49, column: 8, scope: !9368)
!9373 = !DILocation(line: 51, column: 27, scope: !9368)
!9374 = !DILocation(line: 51, column: 35, scope: !9368)
!9375 = !DILocation(line: 51, column: 9, scope: !9368)
!9376 = !DILocation(line: 51, column: 7, scope: !9368)
!9377 = !DILocation(line: 52, column: 7, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9368, file: !1845, line: 52, column: 7)
!9379 = !DILocation(line: 52, column: 29, scope: !9378)
!9380 = !DILocation(line: 52, column: 32, scope: !9378)
!9381 = !DILocation(line: 52, column: 36, scope: !9378)
!9382 = !DILocation(line: 52, column: 7, scope: !9368)
!9383 = !DILocation(line: 54, column: 23, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9378, file: !1845, line: 53, column: 3)
!9385 = !DILocation(line: 54, column: 5, scope: !9384)
!9386 = !DILocation(line: 55, column: 3, scope: !9384)
!9387 = !DILocation(line: 56, column: 12, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9378, file: !1845, line: 56, column: 12)
!9389 = !DILocation(line: 56, column: 16, scope: !9388)
!9390 = !DILocation(line: 56, column: 12, scope: !9378)
!9391 = !DILocation(line: 58, column: 31, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9388, file: !1845, line: 57, column: 3)
!9393 = !DILocation(line: 58, column: 5, scope: !9392)
!9394 = !DILocation(line: 59, column: 3, scope: !9392)
!9395 = !DILocation(line: 60, column: 12, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9388, file: !1845, line: 60, column: 12)
!9397 = !DILocation(line: 60, column: 16, scope: !9396)
!9398 = !DILocation(line: 60, column: 12, scope: !9388)
!9399 = !DILocation(line: 62, column: 30, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9396, file: !1845, line: 61, column: 3)
!9401 = !DILocation(line: 62, column: 5, scope: !9400)
!9402 = !DILocation(line: 63, column: 3, scope: !9400)
!9403 = !DILocation(line: 64, column: 12, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9396, file: !1845, line: 64, column: 12)
!9405 = !DILocation(line: 64, column: 16, scope: !9404)
!9406 = !DILocation(line: 64, column: 12, scope: !9396)
!9407 = !DILocation(line: 66, column: 29, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9404, file: !1845, line: 65, column: 3)
!9409 = !DILocation(line: 66, column: 5, scope: !9408)
!9410 = !DILocation(line: 67, column: 3, scope: !9408)
!9411 = !DILocation(line: 68, column: 12, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9404, file: !1845, line: 68, column: 12)
!9413 = !DILocation(line: 68, column: 16, scope: !9412)
!9414 = !DILocation(line: 68, column: 12, scope: !9404)
!9415 = !DILocation(line: 70, column: 29, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9412, file: !1845, line: 69, column: 3)
!9417 = !DILocation(line: 70, column: 5, scope: !9416)
!9418 = !DILocation(line: 71, column: 3, scope: !9416)
!9419 = !DILocation(line: 72, column: 12, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9412, file: !1845, line: 72, column: 12)
!9421 = !DILocation(line: 72, column: 16, scope: !9420)
!9422 = !DILocation(line: 72, column: 12, scope: !9412)
!9423 = !DILocation(line: 74, column: 29, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9420, file: !1845, line: 73, column: 3)
!9425 = !DILocation(line: 74, column: 5, scope: !9424)
!9426 = !DILocation(line: 75, column: 3, scope: !9424)
!9427 = !DILocation(line: 78, column: 5, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9420, file: !1845, line: 77, column: 3)
!9429 = !DILocation(line: 80, column: 1, scope: !9368)
!9430 = distinct !DISubprogram(name: "cmd_process_chown", scope: !1845, file: !1845, line: 126, type: !9238, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9431 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9430, file: !1845, line: 126, type: !9240)
!9432 = !DILocation(line: 126, column: 39, scope: !9430)
!9433 = !DILocalVariable(name: "the_fd", scope: !9430, file: !1845, line: 128, type: !19)
!9434 = !DILocation(line: 128, column: 7, scope: !9430)
!9435 = !DILocation(line: 128, column: 34, scope: !9430)
!9436 = !DILocation(line: 128, column: 42, scope: !9430)
!9437 = !DILocation(line: 128, column: 16, scope: !9430)
!9438 = !DILocation(line: 129, column: 28, scope: !9430)
!9439 = !DILocation(line: 129, column: 36, scope: !9430)
!9440 = !DILocation(line: 129, column: 3, scope: !9430)
!9441 = !DILocation(line: 130, column: 21, scope: !9430)
!9442 = !DILocation(line: 130, column: 3, scope: !9430)
!9443 = !DILocation(line: 131, column: 25, scope: !9430)
!9444 = !DILocation(line: 131, column: 33, scope: !9430)
!9445 = !DILocation(line: 131, column: 3, scope: !9430)
!9446 = !DILocation(line: 132, column: 1, scope: !9430)
!9447 = distinct !DISubprogram(name: "cmd_process_get_data_sock", scope: !1845, file: !1845, line: 135, type: !9238, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9448 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9447, file: !1845, line: 135, type: !9240)
!9449 = !DILocation(line: 135, column: 47, scope: !9447)
!9450 = !DILocalVariable(name: "port", scope: !9447, file: !1845, line: 137, type: !225)
!9451 = !DILocation(line: 137, column: 18, scope: !9447)
!9452 = !DILocation(line: 137, column: 60, scope: !9447)
!9453 = !DILocation(line: 137, column: 68, scope: !9447)
!9454 = !DILocation(line: 137, column: 42, scope: !9447)
!9455 = !DILocation(line: 137, column: 25, scope: !9447)
!9456 = !DILocalVariable(name: "sock_fd", scope: !9447, file: !1845, line: 138, type: !19)
!9457 = !DILocation(line: 138, column: 7, scope: !9447)
!9458 = !DILocation(line: 138, column: 46, scope: !9447)
!9459 = !DILocation(line: 138, column: 54, scope: !9447)
!9460 = !DILocation(line: 138, column: 17, scope: !9447)
!9461 = !DILocation(line: 139, column: 7, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9447, file: !1845, line: 139, column: 7)
!9463 = !DILocation(line: 139, column: 15, scope: !9462)
!9464 = !DILocation(line: 139, column: 7, scope: !9447)
!9465 = !DILocation(line: 141, column: 27, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !1845, line: 140, column: 3)
!9467 = !DILocation(line: 141, column: 35, scope: !9466)
!9468 = !DILocation(line: 141, column: 5, scope: !9466)
!9469 = !DILocation(line: 142, column: 5, scope: !9466)
!9470 = !DILocation(line: 144, column: 25, scope: !9447)
!9471 = !DILocation(line: 144, column: 33, scope: !9447)
!9472 = !DILocation(line: 144, column: 3, scope: !9447)
!9473 = !DILocation(line: 145, column: 21, scope: !9447)
!9474 = !DILocation(line: 145, column: 29, scope: !9447)
!9475 = !DILocation(line: 145, column: 40, scope: !9447)
!9476 = !DILocation(line: 145, column: 3, scope: !9447)
!9477 = !DILocation(line: 146, column: 21, scope: !9447)
!9478 = !DILocation(line: 146, column: 3, scope: !9447)
!9479 = !DILocation(line: 147, column: 1, scope: !9447)
!9480 = distinct !DISubprogram(name: "cmd_process_pasv_cleanup", scope: !1845, file: !1845, line: 150, type: !9238, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9481 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9480, file: !1845, line: 150, type: !9240)
!9482 = !DILocation(line: 150, column: 46, scope: !9480)
!9483 = !DILocation(line: 152, column: 27, scope: !9480)
!9484 = !DILocation(line: 152, column: 3, scope: !9480)
!9485 = !DILocation(line: 153, column: 25, scope: !9480)
!9486 = !DILocation(line: 153, column: 33, scope: !9480)
!9487 = !DILocation(line: 153, column: 3, scope: !9480)
!9488 = !DILocation(line: 154, column: 1, scope: !9480)
!9489 = distinct !DISubprogram(name: "cmd_process_pasv_active", scope: !1845, file: !1845, line: 157, type: !9238, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9490 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9489, file: !1845, line: 157, type: !9240)
!9491 = !DILocation(line: 157, column: 45, scope: !9489)
!9492 = !DILocalVariable(name: "active", scope: !9489, file: !1845, line: 159, type: !19)
!9493 = !DILocation(line: 159, column: 7, scope: !9489)
!9494 = !DILocation(line: 159, column: 39, scope: !9489)
!9495 = !DILocation(line: 159, column: 16, scope: !9489)
!9496 = !DILocation(line: 160, column: 22, scope: !9489)
!9497 = !DILocation(line: 160, column: 30, scope: !9489)
!9498 = !DILocation(line: 160, column: 41, scope: !9489)
!9499 = !DILocation(line: 160, column: 3, scope: !9489)
!9500 = !DILocation(line: 161, column: 1, scope: !9489)
!9501 = distinct !DISubprogram(name: "cmd_process_pasv_listen", scope: !1845, file: !1845, line: 164, type: !9238, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9502 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9501, file: !1845, line: 164, type: !9240)
!9503 = !DILocation(line: 164, column: 45, scope: !9501)
!9504 = !DILocalVariable(name: "port", scope: !9501, file: !1845, line: 166, type: !225)
!9505 = !DILocation(line: 166, column: 18, scope: !9501)
!9506 = !DILocation(line: 166, column: 48, scope: !9501)
!9507 = !DILocation(line: 166, column: 25, scope: !9501)
!9508 = !DILocation(line: 167, column: 22, scope: !9501)
!9509 = !DILocation(line: 167, column: 30, scope: !9501)
!9510 = !DILocation(line: 167, column: 41, scope: !9501)
!9511 = !DILocation(line: 167, column: 3, scope: !9501)
!9512 = !DILocation(line: 168, column: 1, scope: !9501)
!9513 = distinct !DISubprogram(name: "cmd_process_pasv_accept", scope: !1845, file: !1845, line: 171, type: !9238, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1844, retainedNodes: !128)
!9514 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9513, file: !1845, line: 171, type: !9240)
!9515 = !DILocation(line: 171, column: 45, scope: !9513)
!9516 = !DILocalVariable(name: "fd", scope: !9513, file: !1845, line: 173, type: !19)
!9517 = !DILocation(line: 173, column: 7, scope: !9513)
!9518 = !DILocation(line: 173, column: 35, scope: !9513)
!9519 = !DILocation(line: 173, column: 12, scope: !9513)
!9520 = !DILocation(line: 174, column: 7, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9513, file: !1845, line: 174, column: 7)
!9522 = !DILocation(line: 174, column: 10, scope: !9521)
!9523 = !DILocation(line: 174, column: 7, scope: !9513)
!9524 = !DILocation(line: 176, column: 27, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9521, file: !1845, line: 175, column: 3)
!9526 = !DILocation(line: 176, column: 35, scope: !9525)
!9527 = !DILocation(line: 176, column: 5, scope: !9525)
!9528 = !DILocation(line: 177, column: 24, scope: !9525)
!9529 = !DILocation(line: 177, column: 32, scope: !9525)
!9530 = !DILocation(line: 177, column: 43, scope: !9525)
!9531 = !DILocation(line: 177, column: 5, scope: !9525)
!9532 = !DILocation(line: 178, column: 5, scope: !9525)
!9533 = !DILocation(line: 180, column: 25, scope: !9513)
!9534 = !DILocation(line: 180, column: 33, scope: !9513)
!9535 = !DILocation(line: 180, column: 3, scope: !9513)
!9536 = !DILocation(line: 181, column: 21, scope: !9513)
!9537 = !DILocation(line: 181, column: 29, scope: !9513)
!9538 = !DILocation(line: 181, column: 40, scope: !9513)
!9539 = !DILocation(line: 181, column: 3, scope: !9513)
!9540 = !DILocation(line: 182, column: 21, scope: !9513)
!9541 = !DILocation(line: 182, column: 3, scope: !9513)
!9542 = !DILocation(line: 183, column: 1, scope: !9513)
!9543 = distinct !DISubprogram(name: "vsf_log_init", scope: !758, file: !758, line: 31, type: !9544, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !828, retainedNodes: !128)
!9544 = !DISubroutineType(types: !9545)
!9545 = !{null, !761}
!9546 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9543, file: !758, line: 31, type: !761)
!9547 = !DILocation(line: 31, column: 34, scope: !9543)
!9548 = !DILocation(line: 33, column: 7, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9543, file: !758, line: 33, column: 7)
!9550 = !DILocation(line: 33, column: 29, scope: !9549)
!9551 = !DILocation(line: 33, column: 32, scope: !9549)
!9552 = !DILocation(line: 33, column: 7, scope: !9543)
!9553 = !DILocation(line: 35, column: 5, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9549, file: !758, line: 34, column: 3)
!9555 = !DILocation(line: 36, column: 3, scope: !9554)
!9556 = !DILocation(line: 37, column: 8, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9543, file: !758, line: 37, column: 7)
!9558 = !DILocation(line: 37, column: 31, scope: !9557)
!9559 = !DILocation(line: 37, column: 35, scope: !9557)
!9560 = !DILocation(line: 37, column: 7, scope: !9543)
!9561 = !DILocation(line: 39, column: 5, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9557, file: !758, line: 38, column: 3)
!9563 = !DILocation(line: 41, column: 7, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9543, file: !758, line: 41, column: 7)
!9565 = !DILocation(line: 41, column: 31, scope: !9564)
!9566 = !DILocation(line: 41, column: 34, scope: !9564)
!9567 = !DILocation(line: 41, column: 7, scope: !9543)
!9568 = !DILocalVariable(name: "retval", scope: !9569, file: !758, line: 43, type: !19)
!9569 = distinct !DILexicalBlock(scope: !9564, file: !758, line: 42, column: 3)
!9570 = !DILocation(line: 43, column: 9, scope: !9569)
!9571 = !DILocation(line: 44, column: 9, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9569, file: !758, line: 44, column: 9)
!9573 = !DILocation(line: 44, column: 9, scope: !9569)
!9574 = !DILocation(line: 46, column: 55, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9572, file: !758, line: 45, column: 5)
!9576 = !DILocation(line: 46, column: 16, scope: !9575)
!9577 = !DILocation(line: 46, column: 14, scope: !9575)
!9578 = !DILocation(line: 48, column: 5, scope: !9575)
!9579 = !DILocation(line: 49, column: 37, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9569, file: !758, line: 49, column: 9)
!9581 = !DILocation(line: 49, column: 9, scope: !9580)
!9582 = !DILocation(line: 49, column: 9, scope: !9569)
!9583 = !DILocation(line: 51, column: 48, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9580, file: !758, line: 50, column: 5)
!9585 = !DILocation(line: 51, column: 7, scope: !9584)
!9586 = !DILocation(line: 52, column: 5, scope: !9584)
!9587 = !DILocation(line: 53, column: 26, scope: !9569)
!9588 = !DILocation(line: 53, column: 5, scope: !9569)
!9589 = !DILocation(line: 53, column: 13, scope: !9569)
!9590 = !DILocation(line: 53, column: 24, scope: !9569)
!9591 = !DILocation(line: 54, column: 3, scope: !9569)
!9592 = !DILocation(line: 55, column: 7, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9543, file: !758, line: 55, column: 7)
!9594 = !DILocation(line: 55, column: 31, scope: !9593)
!9595 = !DILocation(line: 55, column: 35, scope: !9593)
!9596 = !DILocation(line: 55, column: 7, scope: !9543)
!9597 = !DILocation(line: 57, column: 10, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9599, file: !758, line: 57, column: 9)
!9599 = distinct !DILexicalBlock(scope: !9593, file: !758, line: 56, column: 3)
!9600 = !DILocation(line: 57, column: 9, scope: !9599)
!9601 = !DILocalVariable(name: "retval", scope: !9602, file: !758, line: 59, type: !19)
!9602 = distinct !DILexicalBlock(scope: !9598, file: !758, line: 58, column: 5)
!9603 = !DILocation(line: 59, column: 11, scope: !9602)
!9604 = !DILocation(line: 60, column: 11, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9602, file: !758, line: 60, column: 11)
!9606 = !DILocation(line: 60, column: 11, scope: !9602)
!9607 = !DILocation(line: 62, column: 57, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9605, file: !758, line: 61, column: 7)
!9609 = !DILocation(line: 62, column: 18, scope: !9608)
!9610 = !DILocation(line: 62, column: 16, scope: !9608)
!9611 = !DILocation(line: 64, column: 7, scope: !9608)
!9612 = !DILocation(line: 65, column: 39, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9602, file: !758, line: 65, column: 11)
!9614 = !DILocation(line: 65, column: 11, scope: !9613)
!9615 = !DILocation(line: 65, column: 11, scope: !9602)
!9616 = !DILocation(line: 67, column: 49, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9613, file: !758, line: 66, column: 7)
!9618 = !DILocation(line: 67, column: 9, scope: !9617)
!9619 = !DILocation(line: 68, column: 7, scope: !9617)
!9620 = !DILocation(line: 69, column: 31, scope: !9602)
!9621 = !DILocation(line: 69, column: 7, scope: !9602)
!9622 = !DILocation(line: 69, column: 15, scope: !9602)
!9623 = !DILocation(line: 69, column: 29, scope: !9602)
!9624 = !DILocation(line: 70, column: 5, scope: !9602)
!9625 = !DILocation(line: 71, column: 3, scope: !9599)
!9626 = !DILocation(line: 72, column: 1, scope: !9543)
!9627 = distinct !DISubprogram(name: "vsf_log_start_entry", scope: !758, file: !758, line: 81, type: !9628, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !828, retainedNodes: !128)
!9628 = !DISubroutineType(types: !9629)
!9629 = !{null, !761, !92}
!9630 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9627, file: !758, line: 81, type: !761)
!9631 = !DILocation(line: 81, column: 41, scope: !9627)
!9632 = !DILocalVariable(name: "what", arg: 2, scope: !9627, file: !758, line: 81, type: !92)
!9633 = !DILocation(line: 81, column: 71, scope: !9627)
!9634 = !DILocation(line: 83, column: 7, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9627, file: !758, line: 83, column: 7)
!9636 = !DILocation(line: 83, column: 15, scope: !9635)
!9637 = !DILocation(line: 83, column: 24, scope: !9635)
!9638 = !DILocation(line: 83, column: 7, scope: !9627)
!9639 = !DILocation(line: 85, column: 5, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9635, file: !758, line: 84, column: 3)
!9641 = !DILocation(line: 86, column: 3, scope: !9640)
!9642 = !DILocation(line: 87, column: 38, scope: !9627)
!9643 = !DILocation(line: 87, column: 22, scope: !9627)
!9644 = !DILocation(line: 87, column: 3, scope: !9627)
!9645 = !DILocation(line: 87, column: 11, scope: !9627)
!9646 = !DILocation(line: 87, column: 20, scope: !9627)
!9647 = !DILocation(line: 88, column: 3, scope: !9627)
!9648 = !DILocation(line: 88, column: 11, scope: !9627)
!9649 = !DILocation(line: 88, column: 25, scope: !9627)
!9650 = !DILocation(line: 89, column: 3, scope: !9627)
!9651 = !DILocation(line: 89, column: 11, scope: !9627)
!9652 = !DILocation(line: 89, column: 26, scope: !9627)
!9653 = !DILocation(line: 90, column: 3, scope: !9627)
!9654 = !DILocation(line: 90, column: 11, scope: !9627)
!9655 = !DILocation(line: 90, column: 25, scope: !9627)
!9656 = !DILocation(line: 91, column: 14, scope: !9627)
!9657 = !DILocation(line: 91, column: 22, scope: !9627)
!9658 = !DILocation(line: 91, column: 3, scope: !9627)
!9659 = !DILocation(line: 92, column: 32, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9627, file: !758, line: 92, column: 7)
!9661 = !DILocation(line: 92, column: 7, scope: !9660)
!9662 = !DILocation(line: 92, column: 7, scope: !9627)
!9663 = !DILocation(line: 94, column: 29, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9660, file: !758, line: 93, column: 3)
!9665 = !DILocation(line: 94, column: 5, scope: !9664)
!9666 = !DILocation(line: 94, column: 13, scope: !9664)
!9667 = !DILocation(line: 94, column: 27, scope: !9664)
!9668 = !DILocation(line: 95, column: 30, scope: !9664)
!9669 = !DILocation(line: 95, column: 5, scope: !9664)
!9670 = !DILocation(line: 95, column: 13, scope: !9664)
!9671 = !DILocation(line: 95, column: 28, scope: !9664)
!9672 = !DILocation(line: 96, column: 3, scope: !9664)
!9673 = !DILocation(line: 97, column: 1, scope: !9627)
!9674 = distinct !DISubprogram(name: "vsf_log_type_is_transfer", scope: !758, file: !758, line: 75, type: !9675, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !828, retainedNodes: !128)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!19, !92}
!9677 = !DILocalVariable(name: "type", arg: 1, scope: !9674, file: !758, line: 75, type: !92)
!9678 = !DILocation(line: 75, column: 48, scope: !9674)
!9679 = !DILocation(line: 77, column: 11, scope: !9674)
!9680 = !DILocation(line: 77, column: 16, scope: !9674)
!9681 = !DILocation(line: 77, column: 40, scope: !9674)
!9682 = !DILocation(line: 77, column: 43, scope: !9674)
!9683 = !DILocation(line: 77, column: 48, scope: !9674)
!9684 = !DILocation(line: 77, column: 3, scope: !9674)
!9685 = distinct !DISubprogram(name: "vsf_log_line", scope: !758, file: !758, line: 100, type: !9686, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !828, retainedNodes: !128)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{null, !761, !92, !837}
!9688 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9685, file: !758, line: 100, type: !761)
!9689 = !DILocation(line: 100, column: 34, scope: !9685)
!9690 = !DILocalVariable(name: "what", arg: 2, scope: !9685, file: !758, line: 100, type: !92)
!9691 = !DILocation(line: 100, column: 64, scope: !9685)
!9692 = !DILocalVariable(name: "p_str", arg: 3, scope: !9685, file: !758, line: 101, type: !837)
!9693 = !DILocation(line: 101, column: 28, scope: !9685)
!9694 = !DILocation(line: 103, column: 18, scope: !9685)
!9695 = !DILocation(line: 103, column: 29, scope: !9685)
!9696 = !DILocation(line: 103, column: 35, scope: !9685)
!9697 = !DILocation(line: 103, column: 3, scope: !9685)
!9698 = !DILocation(line: 104, column: 1, scope: !9685)
!9699 = !DILocalVariable(name: "p_sess", arg: 1, scope: !757, file: !758, line: 131, type: !761)
!9700 = !DILocation(line: 131, column: 36, scope: !757)
!9701 = !DILocalVariable(name: "succeeded", arg: 2, scope: !757, file: !758, line: 131, type: !19)
!9702 = !DILocation(line: 131, column: 48, scope: !757)
!9703 = !DILocalVariable(name: "what", arg: 3, scope: !757, file: !758, line: 132, type: !92)
!9704 = !DILocation(line: 132, column: 38, scope: !757)
!9705 = !DILocalVariable(name: "p_str", arg: 4, scope: !757, file: !758, line: 132, type: !826)
!9706 = !DILocation(line: 132, column: 64, scope: !757)
!9707 = !DILocation(line: 136, column: 7, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !757, file: !758, line: 136, column: 7)
!9709 = !DILocation(line: 136, column: 15, scope: !9708)
!9710 = !DILocation(line: 136, column: 26, scope: !9708)
!9711 = !DILocation(line: 136, column: 32, scope: !9708)
!9712 = !DILocation(line: 136, column: 60, scope: !9708)
!9713 = !DILocation(line: 136, column: 35, scope: !9708)
!9714 = !DILocation(line: 136, column: 7, scope: !757)
!9715 = !DILocation(line: 138, column: 34, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9708, file: !758, line: 137, column: 3)
!9717 = !DILocation(line: 138, column: 54, scope: !9716)
!9718 = !DILocation(line: 138, column: 5, scope: !9716)
!9719 = !DILocation(line: 139, column: 28, scope: !9716)
!9720 = !DILocation(line: 139, column: 36, scope: !9716)
!9721 = !DILocation(line: 139, column: 5, scope: !9716)
!9722 = !DILocation(line: 140, column: 3, scope: !9716)
!9723 = !DILocation(line: 142, column: 7, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !757, file: !758, line: 142, column: 7)
!9725 = !DILocation(line: 142, column: 15, scope: !9724)
!9726 = !DILocation(line: 142, column: 29, scope: !9724)
!9727 = !DILocation(line: 142, column: 7, scope: !757)
!9728 = !DILocation(line: 144, column: 34, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9724, file: !758, line: 143, column: 3)
!9730 = !DILocation(line: 144, column: 54, scope: !9729)
!9731 = !DILocation(line: 144, column: 65, scope: !9729)
!9732 = !DILocation(line: 144, column: 71, scope: !9729)
!9733 = !DILocation(line: 144, column: 5, scope: !9729)
!9734 = !DILocation(line: 145, column: 28, scope: !9729)
!9735 = !DILocation(line: 145, column: 36, scope: !9729)
!9736 = !DILocation(line: 145, column: 5, scope: !9729)
!9737 = !DILocation(line: 146, column: 3, scope: !9729)
!9738 = !DILocation(line: 148, column: 7, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !757, file: !758, line: 148, column: 7)
!9740 = !DILocation(line: 148, column: 7, scope: !757)
!9741 = !DILocalVariable(name: "severe", scope: !9742, file: !758, line: 150, type: !19)
!9742 = distinct !DILexicalBlock(scope: !9739, file: !758, line: 149, column: 3)
!9743 = !DILocation(line: 150, column: 9, scope: !9742)
!9744 = !DILocation(line: 151, column: 34, scope: !9742)
!9745 = !DILocation(line: 151, column: 54, scope: !9742)
!9746 = !DILocation(line: 151, column: 65, scope: !9742)
!9747 = !DILocation(line: 151, column: 71, scope: !9742)
!9748 = !DILocation(line: 151, column: 5, scope: !9742)
!9749 = !DILocation(line: 152, column: 9, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9742, file: !758, line: 152, column: 9)
!9751 = !DILocation(line: 152, column: 14, scope: !9750)
!9752 = !DILocation(line: 152, column: 35, scope: !9750)
!9753 = !DILocation(line: 152, column: 39, scope: !9750)
!9754 = !DILocation(line: 152, column: 9, scope: !9742)
!9755 = !DILocation(line: 154, column: 14, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9750, file: !758, line: 153, column: 5)
!9757 = !DILocation(line: 155, column: 5, scope: !9756)
!9758 = !DILocation(line: 156, column: 28, scope: !9742)
!9759 = !DILocation(line: 156, column: 5, scope: !9742)
!9760 = !DILocation(line: 157, column: 3, scope: !9742)
!9761 = !DILocation(line: 158, column: 1, scope: !757)
!9762 = !DILocalVariable(name: "p_sess", arg: 1, scope: !834, file: !758, line: 182, type: !761)
!9763 = !DILocation(line: 182, column: 50, scope: !834)
!9764 = !DILocalVariable(name: "p_str", arg: 2, scope: !834, file: !758, line: 182, type: !837)
!9765 = !DILocation(line: 182, column: 72, scope: !834)
!9766 = !DILocalVariable(name: "succeeded", arg: 3, scope: !834, file: !758, line: 183, type: !19)
!9767 = !DILocation(line: 183, column: 34, scope: !834)
!9768 = !DILocalVariable(name: "delta_sec", scope: !834, file: !758, line: 186, type: !28)
!9769 = !DILocation(line: 186, column: 8, scope: !834)
!9770 = !DILocalVariable(name: "what", scope: !834, file: !758, line: 187, type: !92)
!9771 = !DILocation(line: 187, column: 25, scope: !834)
!9772 = !DILocation(line: 187, column: 56, scope: !834)
!9773 = !DILocation(line: 187, column: 64, scope: !834)
!9774 = !DILocation(line: 187, column: 32, scope: !834)
!9775 = !DILocation(line: 189, column: 18, scope: !834)
!9776 = !DILocation(line: 189, column: 25, scope: !834)
!9777 = !DILocation(line: 189, column: 3, scope: !834)
!9778 = !DILocation(line: 190, column: 19, scope: !834)
!9779 = !DILocation(line: 190, column: 3, scope: !834)
!9780 = !DILocation(line: 192, column: 15, scope: !834)
!9781 = !DILocation(line: 192, column: 44, scope: !834)
!9782 = !DILocation(line: 192, column: 52, scope: !834)
!9783 = !DILocation(line: 192, column: 42, scope: !834)
!9784 = !DILocation(line: 192, column: 13, scope: !834)
!9785 = !DILocation(line: 193, column: 7, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !834, file: !758, line: 193, column: 7)
!9787 = !DILocation(line: 193, column: 17, scope: !9786)
!9788 = !DILocation(line: 193, column: 7, scope: !834)
!9789 = !DILocation(line: 195, column: 15, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9786, file: !758, line: 194, column: 3)
!9791 = !DILocation(line: 196, column: 3, scope: !9790)
!9792 = !DILocation(line: 197, column: 20, scope: !834)
!9793 = !DILocation(line: 197, column: 43, scope: !834)
!9794 = !DILocation(line: 197, column: 3, scope: !834)
!9795 = !DILocation(line: 198, column: 19, scope: !834)
!9796 = !DILocation(line: 198, column: 3, scope: !834)
!9797 = !DILocation(line: 200, column: 18, scope: !834)
!9798 = !DILocation(line: 200, column: 26, scope: !834)
!9799 = !DILocation(line: 200, column: 34, scope: !834)
!9800 = !DILocation(line: 200, column: 3, scope: !834)
!9801 = !DILocation(line: 201, column: 19, scope: !834)
!9802 = !DILocation(line: 201, column: 3, scope: !834)
!9803 = !DILocation(line: 203, column: 25, scope: !834)
!9804 = !DILocation(line: 203, column: 32, scope: !834)
!9805 = !DILocation(line: 203, column: 40, scope: !834)
!9806 = !DILocation(line: 203, column: 3, scope: !834)
!9807 = !DILocation(line: 204, column: 19, scope: !834)
!9808 = !DILocation(line: 204, column: 3, scope: !834)
!9809 = !DILocation(line: 206, column: 30, scope: !834)
!9810 = !DILocation(line: 206, column: 38, scope: !834)
!9811 = !DILocation(line: 206, column: 3, scope: !834)
!9812 = !DILocation(line: 207, column: 3, scope: !834)
!9813 = !DILocation(line: 208, column: 18, scope: !834)
!9814 = !DILocation(line: 208, column: 3, scope: !834)
!9815 = !DILocation(line: 209, column: 19, scope: !834)
!9816 = !DILocation(line: 209, column: 3, scope: !834)
!9817 = !DILocation(line: 211, column: 7, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !834, file: !758, line: 211, column: 7)
!9819 = !DILocation(line: 211, column: 15, scope: !9818)
!9820 = !DILocation(line: 211, column: 7, scope: !834)
!9821 = !DILocation(line: 213, column: 21, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9818, file: !758, line: 212, column: 3)
!9823 = !DILocation(line: 213, column: 5, scope: !9822)
!9824 = !DILocation(line: 214, column: 3, scope: !9822)
!9825 = !DILocation(line: 217, column: 21, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9818, file: !758, line: 216, column: 3)
!9827 = !DILocation(line: 217, column: 5, scope: !9826)
!9828 = !DILocation(line: 220, column: 19, scope: !834)
!9829 = !DILocation(line: 220, column: 3, scope: !834)
!9830 = !DILocation(line: 222, column: 7, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !834, file: !758, line: 222, column: 7)
!9832 = !DILocation(line: 222, column: 12, scope: !9831)
!9833 = !DILocation(line: 222, column: 7, scope: !834)
!9834 = !DILocation(line: 224, column: 21, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9831, file: !758, line: 223, column: 3)
!9836 = !DILocation(line: 224, column: 5, scope: !9835)
!9837 = !DILocation(line: 225, column: 3, scope: !9835)
!9838 = !DILocation(line: 228, column: 21, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9831, file: !758, line: 227, column: 3)
!9840 = !DILocation(line: 228, column: 5, scope: !9839)
!9841 = !DILocation(line: 231, column: 7, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !834, file: !758, line: 231, column: 7)
!9843 = !DILocation(line: 231, column: 15, scope: !9842)
!9844 = !DILocation(line: 231, column: 28, scope: !9842)
!9845 = !DILocation(line: 231, column: 32, scope: !9842)
!9846 = !DILocation(line: 231, column: 40, scope: !9842)
!9847 = !DILocation(line: 231, column: 7, scope: !834)
!9848 = !DILocation(line: 233, column: 21, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9842, file: !758, line: 232, column: 3)
!9850 = !DILocation(line: 233, column: 5, scope: !9849)
!9851 = !DILocation(line: 234, column: 20, scope: !9849)
!9852 = !DILocation(line: 234, column: 28, scope: !9849)
!9853 = !DILocation(line: 234, column: 36, scope: !9849)
!9854 = !DILocation(line: 234, column: 5, scope: !9849)
!9855 = !DILocation(line: 235, column: 3, scope: !9849)
!9856 = !DILocation(line: 238, column: 9, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9858, file: !758, line: 238, column: 9)
!9858 = distinct !DILexicalBlock(scope: !9842, file: !758, line: 237, column: 3)
!9859 = !DILocation(line: 238, column: 17, scope: !9857)
!9860 = !DILocation(line: 238, column: 9, scope: !9858)
!9861 = !DILocation(line: 240, column: 23, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9857, file: !758, line: 239, column: 5)
!9863 = !DILocation(line: 240, column: 7, scope: !9862)
!9864 = !DILocation(line: 241, column: 5, scope: !9862)
!9865 = !DILocation(line: 244, column: 23, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9857, file: !758, line: 243, column: 5)
!9867 = !DILocation(line: 244, column: 7, scope: !9866)
!9868 = !DILocation(line: 246, column: 20, scope: !9858)
!9869 = !DILocation(line: 246, column: 28, scope: !9858)
!9870 = !DILocation(line: 246, column: 36, scope: !9858)
!9871 = !DILocation(line: 246, column: 5, scope: !9858)
!9872 = !DILocation(line: 248, column: 19, scope: !834)
!9873 = !DILocation(line: 248, column: 3, scope: !834)
!9874 = !DILocation(line: 250, column: 19, scope: !834)
!9875 = !DILocation(line: 250, column: 3, scope: !834)
!9876 = !DILocation(line: 252, column: 7, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !834, file: !758, line: 252, column: 7)
!9878 = !DILocation(line: 252, column: 7, scope: !834)
!9879 = !DILocation(line: 254, column: 21, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9877, file: !758, line: 253, column: 3)
!9881 = !DILocation(line: 254, column: 5, scope: !9880)
!9882 = !DILocation(line: 255, column: 3, scope: !9880)
!9883 = !DILocation(line: 258, column: 21, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9877, file: !758, line: 257, column: 3)
!9885 = !DILocation(line: 258, column: 5, scope: !9884)
!9886 = !DILocation(line: 260, column: 1, scope: !834)
!9887 = distinct !DISubprogram(name: "vsf_log_do_log_to_file", scope: !758, file: !758, line: 161, type: !9888, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !828, retainedNodes: !128)
!9888 = !DISubroutineType(types: !9889)
!9889 = !{null, !19, !837}
!9890 = !DILocalVariable(name: "fd", arg: 1, scope: !9887, file: !758, line: 161, type: !19)
!9891 = !DILocation(line: 161, column: 28, scope: !9887)
!9892 = !DILocalVariable(name: "p_str", arg: 2, scope: !9887, file: !758, line: 161, type: !837)
!9893 = !DILocation(line: 161, column: 46, scope: !9887)
!9894 = !DILocation(line: 163, column: 8, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9887, file: !758, line: 163, column: 7)
!9896 = !DILocation(line: 163, column: 7, scope: !9887)
!9897 = !DILocalVariable(name: "retval", scope: !9898, file: !758, line: 165, type: !19)
!9898 = distinct !DILexicalBlock(scope: !9895, file: !758, line: 164, column: 3)
!9899 = !DILocation(line: 165, column: 9, scope: !9898)
!9900 = !DILocation(line: 165, column: 46, scope: !9898)
!9901 = !DILocation(line: 165, column: 18, scope: !9898)
!9902 = !DILocation(line: 166, column: 37, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9898, file: !758, line: 166, column: 9)
!9904 = !DILocation(line: 166, column: 9, scope: !9903)
!9905 = !DILocation(line: 166, column: 9, scope: !9898)
!9906 = !DILocation(line: 168, column: 7, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9903, file: !758, line: 167, column: 5)
!9908 = !DILocation(line: 170, column: 3, scope: !9898)
!9909 = !DILocation(line: 171, column: 27, scope: !9887)
!9910 = !DILocation(line: 171, column: 3, scope: !9887)
!9911 = !DILocation(line: 172, column: 19, scope: !9887)
!9912 = !DILocation(line: 172, column: 3, scope: !9887)
!9913 = !DILocation(line: 174, column: 25, scope: !9887)
!9914 = !DILocation(line: 174, column: 32, scope: !9887)
!9915 = !DILocation(line: 174, column: 10, scope: !9887)
!9916 = !DILocation(line: 175, column: 8, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9887, file: !758, line: 175, column: 7)
!9918 = !DILocation(line: 175, column: 7, scope: !9887)
!9919 = !DILocation(line: 177, column: 29, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9917, file: !758, line: 176, column: 3)
!9921 = !DILocation(line: 177, column: 5, scope: !9920)
!9922 = !DILocation(line: 178, column: 3, scope: !9920)
!9923 = !DILocation(line: 179, column: 1, scope: !9887)
!9924 = distinct !DISubprogram(name: "vsf_log_do_log_vsftpd_format", scope: !758, file: !758, line: 263, type: !9925, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !828, retainedNodes: !128)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{null, !761, !837, !19, !92, !826}
!9927 = !DILocalVariable(name: "p_sess", arg: 1, scope: !9924, file: !758, line: 263, type: !761)
!9928 = !DILocation(line: 263, column: 50, scope: !9924)
!9929 = !DILocalVariable(name: "p_str", arg: 2, scope: !9924, file: !758, line: 263, type: !837)
!9930 = !DILocation(line: 263, column: 72, scope: !9924)
!9931 = !DILocalVariable(name: "succeeded", arg: 3, scope: !9924, file: !758, line: 264, type: !19)
!9932 = !DILocation(line: 264, column: 34, scope: !9924)
!9933 = !DILocalVariable(name: "what", arg: 4, scope: !9924, file: !758, line: 264, type: !92)
!9934 = !DILocation(line: 264, column: 67, scope: !9924)
!9935 = !DILocalVariable(name: "p_log_str", arg: 5, scope: !9924, file: !758, line: 265, type: !826)
!9936 = !DILocation(line: 265, column: 50, scope: !9924)
!9937 = !DILocation(line: 267, column: 13, scope: !9924)
!9938 = !DILocation(line: 267, column: 3, scope: !9924)
!9939 = !DILocation(line: 268, column: 8, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9924, file: !758, line: 268, column: 7)
!9941 = !DILocation(line: 268, column: 7, scope: !9924)
!9942 = !DILocation(line: 271, column: 21, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9940, file: !758, line: 269, column: 3)
!9944 = !DILocation(line: 271, column: 28, scope: !9943)
!9945 = !DILocation(line: 271, column: 5, scope: !9943)
!9946 = !DILocation(line: 273, column: 21, scope: !9943)
!9947 = !DILocation(line: 273, column: 5, scope: !9943)
!9948 = !DILocation(line: 274, column: 22, scope: !9943)
!9949 = !DILocation(line: 274, column: 29, scope: !9943)
!9950 = !DILocation(line: 274, column: 5, scope: !9943)
!9951 = !DILocation(line: 275, column: 21, scope: !9943)
!9952 = !DILocation(line: 275, column: 5, scope: !9943)
!9953 = !DILocation(line: 276, column: 3, scope: !9943)
!9954 = !DILocation(line: 278, column: 21, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9924, file: !758, line: 278, column: 7)
!9956 = !DILocation(line: 278, column: 29, scope: !9955)
!9957 = !DILocation(line: 278, column: 8, scope: !9955)
!9958 = !DILocation(line: 278, column: 7, scope: !9924)
!9959 = !DILocation(line: 280, column: 21, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9955, file: !758, line: 279, column: 3)
!9961 = !DILocation(line: 280, column: 5, scope: !9960)
!9962 = !DILocation(line: 281, column: 20, scope: !9960)
!9963 = !DILocation(line: 281, column: 28, scope: !9960)
!9964 = !DILocation(line: 281, column: 36, scope: !9960)
!9965 = !DILocation(line: 281, column: 5, scope: !9960)
!9966 = !DILocation(line: 282, column: 21, scope: !9960)
!9967 = !DILocation(line: 282, column: 5, scope: !9960)
!9968 = !DILocation(line: 283, column: 3, scope: !9960)
!9969 = !DILocation(line: 285, column: 7, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9924, file: !758, line: 285, column: 7)
!9971 = !DILocation(line: 285, column: 12, scope: !9970)
!9972 = !DILocation(line: 285, column: 36, scope: !9970)
!9973 = !DILocation(line: 285, column: 39, scope: !9970)
!9974 = !DILocation(line: 285, column: 44, scope: !9970)
!9975 = !DILocation(line: 285, column: 69, scope: !9970)
!9976 = !DILocation(line: 286, column: 7, scope: !9970)
!9977 = !DILocation(line: 286, column: 12, scope: !9970)
!9978 = !DILocation(line: 286, column: 38, scope: !9970)
!9979 = !DILocation(line: 286, column: 41, scope: !9970)
!9980 = !DILocation(line: 286, column: 46, scope: !9970)
!9981 = !DILocation(line: 285, column: 7, scope: !9924)
!9982 = !DILocation(line: 288, column: 9, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !758, line: 288, column: 9)
!9984 = distinct !DILexicalBlock(scope: !9970, file: !758, line: 287, column: 3)
!9985 = !DILocation(line: 288, column: 9, scope: !9984)
!9986 = !DILocation(line: 290, column: 23, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9983, file: !758, line: 289, column: 5)
!9988 = !DILocation(line: 290, column: 7, scope: !9987)
!9989 = !DILocation(line: 291, column: 5, scope: !9987)
!9990 = !DILocation(line: 294, column: 23, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9983, file: !758, line: 293, column: 5)
!9992 = !DILocation(line: 294, column: 7, scope: !9991)
!9993 = !DILocation(line: 296, column: 3, scope: !9984)
!9994 = !DILocation(line: 297, column: 11, scope: !9924)
!9995 = !DILocation(line: 297, column: 3, scope: !9924)
!9996 = !DILocation(line: 300, column: 23, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9924, file: !758, line: 298, column: 3)
!9998 = !DILocation(line: 300, column: 7, scope: !9997)
!9999 = !DILocation(line: 301, column: 7, scope: !9997)
!10000 = !DILocation(line: 303, column: 23, scope: !9997)
!10001 = !DILocation(line: 303, column: 7, scope: !9997)
!10002 = !DILocation(line: 304, column: 7, scope: !9997)
!10003 = !DILocation(line: 306, column: 23, scope: !9997)
!10004 = !DILocation(line: 306, column: 7, scope: !9997)
!10005 = !DILocation(line: 307, column: 7, scope: !9997)
!10006 = !DILocation(line: 309, column: 23, scope: !9997)
!10007 = !DILocation(line: 309, column: 7, scope: !9997)
!10008 = !DILocation(line: 310, column: 7, scope: !9997)
!10009 = !DILocation(line: 312, column: 23, scope: !9997)
!10010 = !DILocation(line: 312, column: 7, scope: !9997)
!10011 = !DILocation(line: 313, column: 7, scope: !9997)
!10012 = !DILocation(line: 315, column: 23, scope: !9997)
!10013 = !DILocation(line: 315, column: 7, scope: !9997)
!10014 = !DILocation(line: 316, column: 7, scope: !9997)
!10015 = !DILocation(line: 318, column: 23, scope: !9997)
!10016 = !DILocation(line: 318, column: 7, scope: !9997)
!10017 = !DILocation(line: 319, column: 7, scope: !9997)
!10018 = !DILocation(line: 321, column: 23, scope: !9997)
!10019 = !DILocation(line: 321, column: 7, scope: !9997)
!10020 = !DILocation(line: 322, column: 7, scope: !9997)
!10021 = !DILocation(line: 324, column: 23, scope: !9997)
!10022 = !DILocation(line: 324, column: 7, scope: !9997)
!10023 = !DILocation(line: 325, column: 7, scope: !9997)
!10024 = !DILocation(line: 327, column: 23, scope: !9997)
!10025 = !DILocation(line: 327, column: 7, scope: !9997)
!10026 = !DILocation(line: 328, column: 7, scope: !9997)
!10027 = !DILocation(line: 330, column: 23, scope: !9997)
!10028 = !DILocation(line: 330, column: 7, scope: !9997)
!10029 = !DILocation(line: 331, column: 7, scope: !9997)
!10030 = !DILocation(line: 333, column: 23, scope: !9997)
!10031 = !DILocation(line: 333, column: 7, scope: !9997)
!10032 = !DILocation(line: 334, column: 7, scope: !9997)
!10033 = !DILocation(line: 338, column: 7, scope: !9997)
!10034 = !DILocation(line: 339, column: 7, scope: !9997)
!10035 = !DILocation(line: 341, column: 19, scope: !9924)
!10036 = !DILocation(line: 341, column: 3, scope: !9924)
!10037 = !DILocation(line: 342, column: 18, scope: !9924)
!10038 = !DILocation(line: 342, column: 26, scope: !9924)
!10039 = !DILocation(line: 342, column: 34, scope: !9924)
!10040 = !DILocation(line: 342, column: 3, scope: !9924)
!10041 = !DILocation(line: 343, column: 19, scope: !9924)
!10042 = !DILocation(line: 343, column: 3, scope: !9924)
!10043 = !DILocation(line: 344, column: 7, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !9924, file: !758, line: 344, column: 7)
!10045 = !DILocation(line: 344, column: 12, scope: !10044)
!10046 = !DILocation(line: 344, column: 33, scope: !10044)
!10047 = !DILocation(line: 344, column: 50, scope: !10044)
!10048 = !DILocation(line: 344, column: 58, scope: !10044)
!10049 = !DILocation(line: 344, column: 37, scope: !10044)
!10050 = !DILocation(line: 344, column: 7, scope: !9924)
!10051 = !DILocation(line: 346, column: 21, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10044, file: !758, line: 345, column: 3)
!10053 = !DILocation(line: 346, column: 5, scope: !10052)
!10054 = !DILocation(line: 347, column: 20, scope: !10052)
!10055 = !DILocation(line: 347, column: 28, scope: !10052)
!10056 = !DILocation(line: 347, column: 36, scope: !10052)
!10057 = !DILocation(line: 347, column: 5, scope: !10052)
!10058 = !DILocation(line: 348, column: 21, scope: !10052)
!10059 = !DILocation(line: 348, column: 5, scope: !10052)
!10060 = !DILocation(line: 349, column: 3, scope: !10052)
!10061 = !DILocation(line: 350, column: 20, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !9924, file: !758, line: 350, column: 7)
!10063 = !DILocation(line: 350, column: 8, scope: !10062)
!10064 = !DILocation(line: 350, column: 7, scope: !9924)
!10065 = !DILocation(line: 352, column: 21, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10062, file: !758, line: 351, column: 3)
!10067 = !DILocation(line: 352, column: 5, scope: !10066)
!10068 = !DILocation(line: 353, column: 20, scope: !10066)
!10069 = !DILocation(line: 353, column: 27, scope: !10066)
!10070 = !DILocation(line: 353, column: 5, scope: !10066)
!10071 = !DILocation(line: 354, column: 21, scope: !10066)
!10072 = !DILocation(line: 354, column: 5, scope: !10066)
!10073 = !DILocation(line: 355, column: 3, scope: !10066)
!10074 = !DILocation(line: 356, column: 7, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !9924, file: !758, line: 356, column: 7)
!10076 = !DILocation(line: 356, column: 12, scope: !10075)
!10077 = !DILocation(line: 356, column: 36, scope: !10075)
!10078 = !DILocation(line: 356, column: 39, scope: !10075)
!10079 = !DILocation(line: 356, column: 44, scope: !10075)
!10080 = !DILocation(line: 356, column: 69, scope: !10075)
!10081 = !DILocation(line: 357, column: 7, scope: !10075)
!10082 = !DILocation(line: 357, column: 12, scope: !10075)
!10083 = !DILocation(line: 356, column: 7, scope: !9924)
!10084 = !DILocation(line: 359, column: 9, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10086, file: !758, line: 359, column: 9)
!10086 = distinct !DILexicalBlock(scope: !10075, file: !758, line: 358, column: 3)
!10087 = !DILocation(line: 359, column: 17, scope: !10085)
!10088 = !DILocation(line: 359, column: 9, scope: !10086)
!10089 = !DILocation(line: 361, column: 23, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10085, file: !758, line: 360, column: 5)
!10091 = !DILocation(line: 361, column: 7, scope: !10090)
!10092 = !DILocation(line: 362, column: 29, scope: !10090)
!10093 = !DILocation(line: 362, column: 36, scope: !10090)
!10094 = !DILocation(line: 362, column: 44, scope: !10090)
!10095 = !DILocation(line: 362, column: 7, scope: !10090)
!10096 = !DILocation(line: 363, column: 23, scope: !10090)
!10097 = !DILocation(line: 363, column: 7, scope: !10090)
!10098 = !DILocation(line: 364, column: 5, scope: !10090)
!10099 = !DILocation(line: 365, column: 34, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10086, file: !758, line: 365, column: 9)
!10101 = !DILocation(line: 365, column: 9, scope: !10100)
!10102 = !DILocation(line: 365, column: 9, scope: !10086)
!10103 = !DILocalVariable(name: "delta_sec", scope: !10104, file: !758, line: 367, type: !28)
!10104 = distinct !DILexicalBlock(scope: !10100, file: !758, line: 366, column: 5)
!10105 = !DILocation(line: 367, column: 12, scope: !10104)
!10106 = !DILocation(line: 367, column: 24, scope: !10104)
!10107 = !DILocation(line: 367, column: 53, scope: !10104)
!10108 = !DILocation(line: 367, column: 61, scope: !10104)
!10109 = !DILocation(line: 367, column: 51, scope: !10104)
!10110 = !DILocalVariable(name: "delta_usec", scope: !10104, file: !758, line: 368, type: !28)
!10111 = !DILocation(line: 368, column: 12, scope: !10104)
!10112 = !DILocation(line: 368, column: 25, scope: !10104)
!10113 = !DILocation(line: 368, column: 55, scope: !10104)
!10114 = !DILocation(line: 368, column: 63, scope: !10104)
!10115 = !DILocation(line: 368, column: 53, scope: !10104)
!10116 = !DILocalVariable(name: "time_delta", scope: !10104, file: !758, line: 369, type: !692)
!10117 = !DILocation(line: 369, column: 14, scope: !10104)
!10118 = !DILocation(line: 369, column: 36, scope: !10104)
!10119 = !DILocation(line: 369, column: 27, scope: !10104)
!10120 = !DILocation(line: 369, column: 58, scope: !10104)
!10121 = !DILocation(line: 369, column: 49, scope: !10104)
!10122 = !DILocation(line: 369, column: 69, scope: !10104)
!10123 = !DILocation(line: 369, column: 46, scope: !10104)
!10124 = !DILocalVariable(name: "kbyte_rate", scope: !10104, file: !758, line: 371, type: !692)
!10125 = !DILocation(line: 371, column: 14, scope: !10104)
!10126 = !DILocation(line: 372, column: 11, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10104, file: !758, line: 372, column: 11)
!10128 = !DILocation(line: 372, column: 22, scope: !10127)
!10129 = !DILocation(line: 372, column: 11, scope: !10104)
!10130 = !DILocation(line: 374, column: 20, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10127, file: !758, line: 373, column: 7)
!10132 = !DILocation(line: 375, column: 7, scope: !10131)
!10133 = !DILocation(line: 377, column: 19, scope: !10104)
!10134 = !DILocation(line: 377, column: 27, scope: !10104)
!10135 = !DILocation(line: 377, column: 10, scope: !10104)
!10136 = !DILocation(line: 377, column: 43, scope: !10104)
!10137 = !DILocation(line: 377, column: 41, scope: !10104)
!10138 = !DILocation(line: 377, column: 55, scope: !10104)
!10139 = !DILocation(line: 376, column: 18, scope: !10104)
!10140 = !DILocation(line: 378, column: 23, scope: !10104)
!10141 = !DILocation(line: 378, column: 7, scope: !10104)
!10142 = !DILocation(line: 379, column: 25, scope: !10104)
!10143 = !DILocation(line: 379, column: 32, scope: !10104)
!10144 = !DILocation(line: 379, column: 7, scope: !10104)
!10145 = !DILocation(line: 380, column: 23, scope: !10104)
!10146 = !DILocation(line: 380, column: 7, scope: !10104)
!10147 = !DILocation(line: 381, column: 5, scope: !10104)
!10148 = !DILocation(line: 382, column: 3, scope: !10086)
!10149 = !DILocation(line: 383, column: 1, scope: !9924)
!10150 = distinct !DISubprogram(name: "vsf_log_entry_pending", scope: !758, file: !758, line: 107, type: !10151, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !828, retainedNodes: !128)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!19, !761}
!10153 = !DILocalVariable(name: "p_sess", arg: 1, scope: !10150, file: !758, line: 107, type: !761)
!10154 = !DILocation(line: 107, column: 43, scope: !10150)
!10155 = !DILocation(line: 109, column: 7, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10150, file: !758, line: 109, column: 7)
!10157 = !DILocation(line: 109, column: 15, scope: !10156)
!10158 = !DILocation(line: 109, column: 24, scope: !10156)
!10159 = !DILocation(line: 109, column: 7, scope: !10150)
!10160 = !DILocation(line: 111, column: 5, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10156, file: !758, line: 110, column: 3)
!10162 = !DILocation(line: 113, column: 3, scope: !10150)
!10163 = !DILocation(line: 114, column: 1, scope: !10150)
!10164 = distinct !DISubprogram(name: "vsf_log_clear_entry", scope: !758, file: !758, line: 117, type: !9544, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !828, retainedNodes: !128)
!10165 = !DILocalVariable(name: "p_sess", arg: 1, scope: !10164, file: !758, line: 117, type: !761)
!10166 = !DILocation(line: 117, column: 41, scope: !10164)
!10167 = !DILocation(line: 119, column: 3, scope: !10164)
!10168 = !DILocation(line: 119, column: 11, scope: !10164)
!10169 = !DILocation(line: 119, column: 20, scope: !10164)
!10170 = !DILocation(line: 120, column: 1, scope: !10164)
!10171 = distinct !DISubprogram(name: "vsf_log_do_log", scope: !758, file: !758, line: 123, type: !10172, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !828, retainedNodes: !128)
!10172 = !DISubroutineType(types: !10173)
!10173 = !{null, !761, !19}
!10174 = !DILocalVariable(name: "p_sess", arg: 1, scope: !10171, file: !758, line: 123, type: !761)
!10175 = !DILocation(line: 123, column: 36, scope: !10171)
!10176 = !DILocalVariable(name: "succeeded", arg: 2, scope: !10171, file: !758, line: 123, type: !19)
!10177 = !DILocation(line: 123, column: 48, scope: !10171)
!10178 = !DILocation(line: 125, column: 18, scope: !10171)
!10179 = !DILocation(line: 125, column: 26, scope: !10171)
!10180 = !DILocation(line: 125, column: 61, scope: !10171)
!10181 = !DILocation(line: 125, column: 69, scope: !10171)
!10182 = !DILocation(line: 125, column: 37, scope: !10171)
!10183 = !DILocation(line: 126, column: 19, scope: !10171)
!10184 = !DILocation(line: 126, column: 27, scope: !10171)
!10185 = !DILocation(line: 125, column: 3, scope: !10171)
!10186 = !DILocation(line: 127, column: 3, scope: !10171)
!10187 = !DILocation(line: 127, column: 11, scope: !10171)
!10188 = !DILocation(line: 127, column: 20, scope: !10171)
!10189 = !DILocation(line: 128, column: 1, scope: !10171)
!10190 = distinct !DISubprogram(name: "private_str_alloc_memchunk", scope: !841, file: !841, line: 41, type: !10191, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{null, !844, !88, !26}
!10193 = !DILocalVariable(name: "p_str", arg: 1, scope: !10190, file: !841, line: 41, type: !844)
!10194 = !DILocation(line: 41, column: 42, scope: !10190)
!10195 = !DILocalVariable(name: "p_src", arg: 2, scope: !10190, file: !841, line: 41, type: !88)
!10196 = !DILocation(line: 41, column: 61, scope: !10190)
!10197 = !DILocalVariable(name: "len", arg: 3, scope: !10190, file: !841, line: 42, type: !26)
!10198 = !DILocation(line: 42, column: 41, scope: !10190)
!10199 = !DILocalVariable(name: "buf_needed", scope: !10190, file: !841, line: 45, type: !26)
!10200 = !DILocation(line: 45, column: 16, scope: !10190)
!10201 = !DILocation(line: 46, column: 7, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10190, file: !841, line: 46, column: 7)
!10203 = !DILocation(line: 46, column: 11, scope: !10202)
!10204 = !DILocation(line: 46, column: 17, scope: !10202)
!10205 = !DILocation(line: 46, column: 15, scope: !10202)
!10206 = !DILocation(line: 46, column: 7, scope: !10190)
!10207 = !DILocation(line: 48, column: 5, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10202, file: !841, line: 47, column: 3)
!10209 = !DILocation(line: 49, column: 3, scope: !10208)
!10210 = !DILocation(line: 50, column: 16, scope: !10190)
!10211 = !DILocation(line: 50, column: 20, scope: !10190)
!10212 = !DILocation(line: 50, column: 14, scope: !10190)
!10213 = !DILocation(line: 51, column: 7, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10190, file: !841, line: 51, column: 7)
!10215 = !DILocation(line: 51, column: 20, scope: !10214)
!10216 = !DILocation(line: 51, column: 27, scope: !10214)
!10217 = !DILocation(line: 51, column: 18, scope: !10214)
!10218 = !DILocation(line: 51, column: 7, scope: !10190)
!10219 = !DILocation(line: 53, column: 14, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10214, file: !841, line: 52, column: 3)
!10221 = !DILocation(line: 53, column: 5, scope: !10220)
!10222 = !DILocation(line: 54, column: 14, scope: !10220)
!10223 = !DILocation(line: 54, column: 40, scope: !10220)
!10224 = !DILocation(line: 54, column: 21, scope: !10220)
!10225 = !DILocation(line: 54, column: 5, scope: !10220)
!10226 = !DILocation(line: 55, column: 26, scope: !10220)
!10227 = !DILocation(line: 55, column: 5, scope: !10220)
!10228 = !DILocation(line: 55, column: 12, scope: !10220)
!10229 = !DILocation(line: 55, column: 24, scope: !10220)
!10230 = !DILocation(line: 56, column: 3, scope: !10220)
!10231 = !DILocation(line: 57, column: 22, scope: !10190)
!10232 = !DILocation(line: 57, column: 29, scope: !10190)
!10233 = !DILocation(line: 57, column: 36, scope: !10190)
!10234 = !DILocation(line: 57, column: 43, scope: !10190)
!10235 = !DILocation(line: 57, column: 3, scope: !10190)
!10236 = !DILocation(line: 58, column: 3, scope: !10190)
!10237 = !DILocation(line: 58, column: 10, scope: !10190)
!10238 = !DILocation(line: 58, column: 16, scope: !10190)
!10239 = !DILocation(line: 58, column: 21, scope: !10190)
!10240 = !DILocation(line: 59, column: 16, scope: !10190)
!10241 = !DILocation(line: 59, column: 3, scope: !10190)
!10242 = !DILocation(line: 59, column: 10, scope: !10190)
!10243 = !DILocation(line: 59, column: 14, scope: !10190)
!10244 = !DILocation(line: 60, column: 1, scope: !10190)
!10245 = distinct !DISubprogram(name: "str_free", scope: !841, file: !841, line: 137, type: !10246, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10246 = !DISubroutineType(types: !10247)
!10247 = !{null, !844}
!10248 = !DILocalVariable(name: "p_str", arg: 1, scope: !10245, file: !841, line: 137, type: !844)
!10249 = !DILocation(line: 137, column: 24, scope: !10245)
!10250 = !DILocation(line: 139, column: 7, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10245, file: !841, line: 139, column: 7)
!10252 = !DILocation(line: 139, column: 14, scope: !10251)
!10253 = !DILocation(line: 139, column: 20, scope: !10251)
!10254 = !DILocation(line: 139, column: 7, scope: !10245)
!10255 = !DILocation(line: 141, column: 22, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !841, line: 140, column: 3)
!10257 = !DILocation(line: 141, column: 29, scope: !10256)
!10258 = !DILocation(line: 141, column: 5, scope: !10256)
!10259 = !DILocation(line: 142, column: 3, scope: !10256)
!10260 = !DILocation(line: 143, column: 3, scope: !10245)
!10261 = !DILocation(line: 143, column: 10, scope: !10245)
!10262 = !DILocation(line: 143, column: 16, scope: !10245)
!10263 = !DILocation(line: 144, column: 3, scope: !10245)
!10264 = !DILocation(line: 144, column: 10, scope: !10245)
!10265 = !DILocation(line: 144, column: 14, scope: !10245)
!10266 = !DILocation(line: 145, column: 3, scope: !10245)
!10267 = !DILocation(line: 145, column: 10, scope: !10245)
!10268 = !DILocation(line: 145, column: 22, scope: !10245)
!10269 = !DILocation(line: 146, column: 1, scope: !10245)
!10270 = distinct !DISubprogram(name: "s_setbuf", scope: !841, file: !841, line: 31, type: !10271, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{null, !844, !16}
!10273 = !DILocalVariable(name: "p_str", arg: 1, scope: !10270, file: !841, line: 31, type: !844)
!10274 = !DILocation(line: 31, column: 24, scope: !10270)
!10275 = !DILocalVariable(name: "p_newbuf", arg: 2, scope: !10270, file: !841, line: 31, type: !16)
!10276 = !DILocation(line: 31, column: 37, scope: !10270)
!10277 = !DILocation(line: 33, column: 7, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10270, file: !841, line: 33, column: 7)
!10279 = !DILocation(line: 33, column: 14, scope: !10278)
!10280 = !DILocation(line: 33, column: 20, scope: !10278)
!10281 = !DILocation(line: 33, column: 7, scope: !10270)
!10282 = !DILocation(line: 35, column: 5, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10278, file: !841, line: 34, column: 3)
!10284 = !DILocation(line: 36, column: 3, scope: !10283)
!10285 = !DILocation(line: 37, column: 18, scope: !10270)
!10286 = !DILocation(line: 37, column: 3, scope: !10270)
!10287 = !DILocation(line: 37, column: 10, scope: !10270)
!10288 = !DILocation(line: 37, column: 16, scope: !10270)
!10289 = !DILocation(line: 38, column: 1, scope: !10270)
!10290 = distinct !DISubprogram(name: "private_str_append_memchunk", scope: !841, file: !841, line: 63, type: !10191, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10291 = !DILocalVariable(name: "p_str", arg: 1, scope: !10290, file: !841, line: 63, type: !844)
!10292 = !DILocation(line: 63, column: 43, scope: !10290)
!10293 = !DILocalVariable(name: "p_src", arg: 2, scope: !10290, file: !841, line: 63, type: !88)
!10294 = !DILocation(line: 63, column: 62, scope: !10290)
!10295 = !DILocalVariable(name: "len", arg: 3, scope: !10290, file: !841, line: 64, type: !26)
!10296 = !DILocation(line: 64, column: 42, scope: !10290)
!10297 = !DILocalVariable(name: "buf_needed", scope: !10290, file: !841, line: 66, type: !26)
!10298 = !DILocation(line: 66, column: 16, scope: !10290)
!10299 = !DILocation(line: 67, column: 7, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10290, file: !841, line: 67, column: 7)
!10301 = !DILocation(line: 67, column: 13, scope: !10300)
!10302 = !DILocation(line: 67, column: 20, scope: !10300)
!10303 = !DILocation(line: 67, column: 11, scope: !10300)
!10304 = !DILocation(line: 67, column: 26, scope: !10300)
!10305 = !DILocation(line: 67, column: 24, scope: !10300)
!10306 = !DILocation(line: 67, column: 7, scope: !10290)
!10307 = !DILocation(line: 69, column: 5, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10300, file: !841, line: 68, column: 3)
!10309 = !DILocation(line: 70, column: 3, scope: !10308)
!10310 = !DILocation(line: 71, column: 16, scope: !10290)
!10311 = !DILocation(line: 71, column: 22, scope: !10290)
!10312 = !DILocation(line: 71, column: 29, scope: !10290)
!10313 = !DILocation(line: 71, column: 20, scope: !10290)
!10314 = !DILocation(line: 71, column: 14, scope: !10290)
!10315 = !DILocation(line: 72, column: 7, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10290, file: !841, line: 72, column: 7)
!10317 = !DILocation(line: 72, column: 18, scope: !10316)
!10318 = !DILocation(line: 72, column: 24, scope: !10316)
!10319 = !DILocation(line: 72, column: 22, scope: !10316)
!10320 = !DILocation(line: 72, column: 7, scope: !10290)
!10321 = !DILocation(line: 74, column: 5, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10316, file: !841, line: 73, column: 3)
!10323 = !DILocation(line: 75, column: 3, scope: !10322)
!10324 = !DILocation(line: 76, column: 13, scope: !10290)
!10325 = !DILocation(line: 77, column: 7, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10290, file: !841, line: 77, column: 7)
!10327 = !DILocation(line: 77, column: 20, scope: !10326)
!10328 = !DILocation(line: 77, column: 27, scope: !10326)
!10329 = !DILocation(line: 77, column: 18, scope: !10326)
!10330 = !DILocation(line: 77, column: 7, scope: !10290)
!10331 = !DILocation(line: 79, column: 40, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10326, file: !841, line: 78, column: 3)
!10333 = !DILocation(line: 79, column: 47, scope: !10332)
!10334 = !DILocation(line: 79, column: 54, scope: !10332)
!10335 = !DILocation(line: 79, column: 20, scope: !10332)
!10336 = !DILocation(line: 79, column: 5, scope: !10332)
!10337 = !DILocation(line: 79, column: 12, scope: !10332)
!10338 = !DILocation(line: 79, column: 18, scope: !10332)
!10339 = !DILocation(line: 80, column: 26, scope: !10332)
!10340 = !DILocation(line: 80, column: 5, scope: !10332)
!10341 = !DILocation(line: 80, column: 12, scope: !10332)
!10342 = !DILocation(line: 80, column: 24, scope: !10332)
!10343 = !DILocation(line: 81, column: 3, scope: !10332)
!10344 = !DILocation(line: 82, column: 22, scope: !10290)
!10345 = !DILocation(line: 82, column: 29, scope: !10290)
!10346 = !DILocation(line: 82, column: 37, scope: !10290)
!10347 = !DILocation(line: 82, column: 44, scope: !10290)
!10348 = !DILocation(line: 82, column: 35, scope: !10290)
!10349 = !DILocation(line: 82, column: 49, scope: !10290)
!10350 = !DILocation(line: 82, column: 56, scope: !10290)
!10351 = !DILocation(line: 82, column: 3, scope: !10290)
!10352 = !DILocation(line: 83, column: 3, scope: !10290)
!10353 = !DILocation(line: 83, column: 10, scope: !10290)
!10354 = !DILocation(line: 83, column: 16, scope: !10290)
!10355 = !DILocation(line: 83, column: 23, scope: !10290)
!10356 = !DILocation(line: 83, column: 29, scope: !10290)
!10357 = !DILocation(line: 83, column: 27, scope: !10290)
!10358 = !DILocation(line: 83, column: 34, scope: !10290)
!10359 = !DILocation(line: 84, column: 17, scope: !10290)
!10360 = !DILocation(line: 84, column: 3, scope: !10290)
!10361 = !DILocation(line: 84, column: 10, scope: !10290)
!10362 = !DILocation(line: 84, column: 14, scope: !10290)
!10363 = !DILocation(line: 85, column: 1, scope: !10290)
!10364 = distinct !DISubprogram(name: "str_alloc_text", scope: !841, file: !841, line: 89, type: !10365, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{null, !844, !88}
!10367 = !DILocalVariable(name: "p_str", arg: 1, scope: !10364, file: !841, line: 89, type: !844)
!10368 = !DILocation(line: 89, column: 30, scope: !10364)
!10369 = !DILocalVariable(name: "p_src", arg: 2, scope: !10364, file: !841, line: 89, type: !88)
!10370 = !DILocation(line: 89, column: 49, scope: !10364)
!10371 = !DILocalVariable(name: "len", scope: !10364, file: !841, line: 91, type: !26)
!10372 = !DILocation(line: 91, column: 16, scope: !10364)
!10373 = !DILocation(line: 91, column: 41, scope: !10364)
!10374 = !DILocation(line: 91, column: 22, scope: !10364)
!10375 = !DILocation(line: 92, column: 30, scope: !10364)
!10376 = !DILocation(line: 92, column: 37, scope: !10364)
!10377 = !DILocation(line: 92, column: 44, scope: !10364)
!10378 = !DILocation(line: 92, column: 3, scope: !10364)
!10379 = !DILocation(line: 93, column: 1, scope: !10364)
!10380 = distinct !DISubprogram(name: "str_copy", scope: !841, file: !841, line: 96, type: !10381, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10381 = !DISubroutineType(types: !10382)
!10382 = !{null, !844, !866}
!10383 = !DILocalVariable(name: "p_dest", arg: 1, scope: !10380, file: !841, line: 96, type: !844)
!10384 = !DILocation(line: 96, column: 24, scope: !10380)
!10385 = !DILocalVariable(name: "p_src", arg: 2, scope: !10380, file: !841, line: 96, type: !866)
!10386 = !DILocation(line: 96, column: 52, scope: !10380)
!10387 = !DILocation(line: 98, column: 30, scope: !10380)
!10388 = !DILocation(line: 98, column: 38, scope: !10380)
!10389 = !DILocation(line: 98, column: 45, scope: !10380)
!10390 = !DILocation(line: 98, column: 52, scope: !10380)
!10391 = !DILocation(line: 98, column: 59, scope: !10380)
!10392 = !DILocation(line: 98, column: 3, scope: !10380)
!10393 = !DILocation(line: 99, column: 1, scope: !10380)
!10394 = distinct !DISubprogram(name: "str_strdup", scope: !841, file: !841, line: 102, type: !10395, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!88, !866}
!10397 = !DILocalVariable(name: "p_str", arg: 1, scope: !10394, file: !841, line: 102, type: !866)
!10398 = !DILocation(line: 102, column: 32, scope: !10394)
!10399 = !DILocation(line: 104, column: 40, scope: !10394)
!10400 = !DILocation(line: 104, column: 29, scope: !10394)
!10401 = !DILocation(line: 104, column: 10, scope: !10394)
!10402 = !DILocation(line: 104, column: 3, scope: !10394)
!10403 = distinct !DISubprogram(name: "str_getbuf", scope: !841, file: !841, line: 197, type: !10395, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10404 = !DILocalVariable(name: "p_str", arg: 1, scope: !10403, file: !841, line: 197, type: !866)
!10405 = !DILocation(line: 197, column: 32, scope: !10403)
!10406 = !DILocation(line: 199, column: 7, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10403, file: !841, line: 199, column: 7)
!10408 = !DILocation(line: 199, column: 14, scope: !10407)
!10409 = !DILocation(line: 199, column: 20, scope: !10407)
!10410 = !DILocation(line: 199, column: 7, scope: !10403)
!10411 = !DILocation(line: 201, column: 9, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !841, line: 201, column: 9)
!10413 = distinct !DILexicalBlock(scope: !10407, file: !841, line: 200, column: 3)
!10414 = !DILocation(line: 201, column: 16, scope: !10412)
!10415 = !DILocation(line: 201, column: 20, scope: !10412)
!10416 = !DILocation(line: 201, column: 25, scope: !10412)
!10417 = !DILocation(line: 201, column: 28, scope: !10412)
!10418 = !DILocation(line: 201, column: 35, scope: !10412)
!10419 = !DILocation(line: 201, column: 47, scope: !10412)
!10420 = !DILocation(line: 201, column: 9, scope: !10413)
!10421 = !DILocation(line: 203, column: 7, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10412, file: !841, line: 202, column: 5)
!10423 = !DILocation(line: 204, column: 5, scope: !10422)
!10424 = !DILocation(line: 205, column: 47, scope: !10413)
!10425 = !DILocation(line: 205, column: 5, scope: !10413)
!10426 = !DILocation(line: 206, column: 3, scope: !10413)
!10427 = !DILocation(line: 207, column: 10, scope: !10403)
!10428 = !DILocation(line: 207, column: 17, scope: !10403)
!10429 = !DILocation(line: 207, column: 3, scope: !10403)
!10430 = distinct !DISubprogram(name: "str_alloc_alt_term", scope: !841, file: !841, line: 108, type: !10431, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{null, !844, !88, !17}
!10433 = !DILocalVariable(name: "p_str", arg: 1, scope: !10430, file: !841, line: 108, type: !844)
!10434 = !DILocation(line: 108, column: 34, scope: !10430)
!10435 = !DILocalVariable(name: "p_src", arg: 2, scope: !10430, file: !841, line: 108, type: !88)
!10436 = !DILocation(line: 108, column: 53, scope: !10430)
!10437 = !DILocalVariable(name: "term", arg: 3, scope: !10430, file: !841, line: 108, type: !17)
!10438 = !DILocation(line: 108, column: 65, scope: !10430)
!10439 = !DILocalVariable(name: "p_search", scope: !10430, file: !841, line: 110, type: !88)
!10440 = !DILocation(line: 110, column: 15, scope: !10430)
!10441 = !DILocation(line: 110, column: 26, scope: !10430)
!10442 = !DILocalVariable(name: "len", scope: !10430, file: !841, line: 111, type: !26)
!10443 = !DILocation(line: 111, column: 16, scope: !10430)
!10444 = !DILocation(line: 112, column: 3, scope: !10430)
!10445 = !DILocation(line: 112, column: 11, scope: !10430)
!10446 = !DILocation(line: 112, column: 10, scope: !10430)
!10447 = !DILocation(line: 112, column: 23, scope: !10430)
!10448 = !DILocation(line: 112, column: 20, scope: !10430)
!10449 = !DILocation(line: 114, column: 13, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10430, file: !841, line: 113, column: 3)
!10451 = !DILocation(line: 115, column: 8, scope: !10450)
!10452 = !DILocation(line: 116, column: 9, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10450, file: !841, line: 116, column: 9)
!10454 = !DILocation(line: 116, column: 13, scope: !10453)
!10455 = !DILocation(line: 116, column: 9, scope: !10450)
!10456 = !DILocation(line: 118, column: 7, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !841, line: 117, column: 5)
!10458 = !DILocation(line: 119, column: 5, scope: !10457)
!10459 = distinct !{!10459, !10444, !10460}
!10460 = !DILocation(line: 120, column: 3, scope: !10430)
!10461 = !DILocation(line: 121, column: 30, scope: !10430)
!10462 = !DILocation(line: 121, column: 37, scope: !10430)
!10463 = !DILocation(line: 121, column: 44, scope: !10430)
!10464 = !DILocation(line: 121, column: 3, scope: !10430)
!10465 = !DILocation(line: 122, column: 1, scope: !10430)
!10466 = distinct !DISubprogram(name: "str_alloc_ulong", scope: !841, file: !841, line: 125, type: !10467, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{null, !844, !65}
!10469 = !DILocalVariable(name: "p_str", arg: 1, scope: !10466, file: !841, line: 125, type: !844)
!10470 = !DILocation(line: 125, column: 31, scope: !10466)
!10471 = !DILocalVariable(name: "the_long", arg: 2, scope: !10466, file: !841, line: 125, type: !65)
!10472 = !DILocation(line: 125, column: 52, scope: !10466)
!10473 = !DILocation(line: 127, column: 18, scope: !10466)
!10474 = !DILocation(line: 127, column: 50, scope: !10466)
!10475 = !DILocation(line: 127, column: 25, scope: !10466)
!10476 = !DILocation(line: 127, column: 3, scope: !10466)
!10477 = !DILocation(line: 128, column: 1, scope: !10466)
!10478 = distinct !DISubprogram(name: "str_alloc_filesize_t", scope: !841, file: !841, line: 131, type: !10479, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10479 = !DISubroutineType(types: !10480)
!10480 = !{null, !844, !41}
!10481 = !DILocalVariable(name: "p_str", arg: 1, scope: !10478, file: !841, line: 131, type: !844)
!10482 = !DILocation(line: 131, column: 36, scope: !10478)
!10483 = !DILocalVariable(name: "the_filesize", arg: 2, scope: !10478, file: !841, line: 131, type: !41)
!10484 = !DILocation(line: 131, column: 54, scope: !10478)
!10485 = !DILocation(line: 133, column: 18, scope: !10478)
!10486 = !DILocation(line: 133, column: 55, scope: !10478)
!10487 = !DILocation(line: 133, column: 25, scope: !10478)
!10488 = !DILocation(line: 133, column: 3, scope: !10478)
!10489 = !DILocation(line: 134, column: 1, scope: !10478)
!10490 = distinct !DISubprogram(name: "str_empty", scope: !841, file: !841, line: 149, type: !10246, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10491 = !DILocalVariable(name: "p_str", arg: 1, scope: !10490, file: !841, line: 149, type: !844)
!10492 = !DILocation(line: 149, column: 25, scope: !10490)
!10493 = !DILocation(line: 152, column: 21, scope: !10490)
!10494 = !DILocation(line: 152, column: 10, scope: !10490)
!10495 = !DILocation(line: 153, column: 13, scope: !10490)
!10496 = !DILocation(line: 153, column: 3, scope: !10490)
!10497 = !DILocation(line: 154, column: 1, scope: !10490)
!10498 = distinct !DISubprogram(name: "str_trunc", scope: !841, file: !841, line: 157, type: !10499, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10499 = !DISubroutineType(types: !10500)
!10500 = !{null, !844, !26}
!10501 = !DILocalVariable(name: "p_str", arg: 1, scope: !10498, file: !841, line: 157, type: !844)
!10502 = !DILocation(line: 157, column: 25, scope: !10498)
!10503 = !DILocalVariable(name: "trunc_len", arg: 2, scope: !10498, file: !841, line: 157, type: !26)
!10504 = !DILocation(line: 157, column: 45, scope: !10498)
!10505 = !DILocation(line: 159, column: 7, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10498, file: !841, line: 159, column: 7)
!10507 = !DILocation(line: 159, column: 20, scope: !10506)
!10508 = !DILocation(line: 159, column: 27, scope: !10506)
!10509 = !DILocation(line: 159, column: 17, scope: !10506)
!10510 = !DILocation(line: 159, column: 7, scope: !10498)
!10511 = !DILocation(line: 161, column: 5, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10506, file: !841, line: 160, column: 3)
!10513 = !DILocation(line: 162, column: 3, scope: !10512)
!10514 = !DILocation(line: 163, column: 16, scope: !10498)
!10515 = !DILocation(line: 163, column: 3, scope: !10498)
!10516 = !DILocation(line: 163, column: 10, scope: !10498)
!10517 = !DILocation(line: 163, column: 14, scope: !10498)
!10518 = !DILocation(line: 164, column: 3, scope: !10498)
!10519 = !DILocation(line: 164, column: 10, scope: !10498)
!10520 = !DILocation(line: 164, column: 16, scope: !10498)
!10521 = !DILocation(line: 164, column: 23, scope: !10498)
!10522 = !DILocation(line: 164, column: 28, scope: !10498)
!10523 = !DILocation(line: 165, column: 1, scope: !10498)
!10524 = distinct !DISubprogram(name: "str_reserve", scope: !841, file: !841, line: 168, type: !10499, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10525 = !DILocalVariable(name: "p_str", arg: 1, scope: !10524, file: !841, line: 168, type: !844)
!10526 = !DILocation(line: 168, column: 27, scope: !10524)
!10527 = !DILocalVariable(name: "res_len", arg: 2, scope: !10524, file: !841, line: 168, type: !26)
!10528 = !DILocation(line: 168, column: 47, scope: !10524)
!10529 = !DILocation(line: 171, column: 10, scope: !10524)
!10530 = !DILocation(line: 172, column: 7, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10524, file: !841, line: 172, column: 7)
!10532 = !DILocation(line: 172, column: 15, scope: !10531)
!10533 = !DILocation(line: 172, column: 7, scope: !10524)
!10534 = !DILocation(line: 174, column: 5, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10531, file: !841, line: 173, column: 3)
!10536 = !DILocation(line: 175, column: 3, scope: !10535)
!10537 = !DILocation(line: 176, column: 7, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10524, file: !841, line: 176, column: 7)
!10539 = !DILocation(line: 176, column: 17, scope: !10538)
!10540 = !DILocation(line: 176, column: 24, scope: !10538)
!10541 = !DILocation(line: 176, column: 15, scope: !10538)
!10542 = !DILocation(line: 176, column: 7, scope: !10524)
!10543 = !DILocation(line: 178, column: 40, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10538, file: !841, line: 177, column: 3)
!10545 = !DILocation(line: 178, column: 47, scope: !10544)
!10546 = !DILocation(line: 178, column: 54, scope: !10544)
!10547 = !DILocation(line: 178, column: 20, scope: !10544)
!10548 = !DILocation(line: 178, column: 5, scope: !10544)
!10549 = !DILocation(line: 178, column: 12, scope: !10544)
!10550 = !DILocation(line: 178, column: 18, scope: !10544)
!10551 = !DILocation(line: 179, column: 26, scope: !10544)
!10552 = !DILocation(line: 179, column: 5, scope: !10544)
!10553 = !DILocation(line: 179, column: 12, scope: !10544)
!10554 = !DILocation(line: 179, column: 24, scope: !10544)
!10555 = !DILocation(line: 180, column: 3, scope: !10544)
!10556 = !DILocation(line: 181, column: 3, scope: !10524)
!10557 = !DILocation(line: 181, column: 10, scope: !10524)
!10558 = !DILocation(line: 181, column: 16, scope: !10524)
!10559 = !DILocation(line: 181, column: 24, scope: !10524)
!10560 = !DILocation(line: 181, column: 29, scope: !10524)
!10561 = !DILocation(line: 182, column: 1, scope: !10524)
!10562 = distinct !DISubprogram(name: "str_isempty", scope: !841, file: !841, line: 185, type: !10563, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!19, !866}
!10565 = !DILocalVariable(name: "p_str", arg: 1, scope: !10562, file: !841, line: 185, type: !866)
!10566 = !DILocation(line: 185, column: 33, scope: !10562)
!10567 = !DILocation(line: 187, column: 11, scope: !10562)
!10568 = !DILocation(line: 187, column: 18, scope: !10562)
!10569 = !DILocation(line: 187, column: 22, scope: !10562)
!10570 = !DILocation(line: 187, column: 3, scope: !10562)
!10571 = distinct !DISubprogram(name: "str_getlen", scope: !841, file: !841, line: 191, type: !10572, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!26, !866}
!10574 = !DILocalVariable(name: "p_str", arg: 1, scope: !10571, file: !841, line: 191, type: !866)
!10575 = !DILocation(line: 191, column: 32, scope: !10571)
!10576 = !DILocation(line: 193, column: 10, scope: !10571)
!10577 = !DILocation(line: 193, column: 17, scope: !10571)
!10578 = !DILocation(line: 193, column: 3, scope: !10571)
!10579 = distinct !DISubprogram(name: "str_strcmp", scope: !841, file: !841, line: 211, type: !864, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10580 = !DILocalVariable(name: "p_str1", arg: 1, scope: !10579, file: !841, line: 211, type: !866)
!10581 = !DILocation(line: 211, column: 32, scope: !10579)
!10582 = !DILocalVariable(name: "p_str2", arg: 2, scope: !10579, file: !841, line: 211, type: !866)
!10583 = !DILocation(line: 211, column: 60, scope: !10579)
!10584 = !DILocation(line: 213, column: 29, scope: !10579)
!10585 = !DILocation(line: 213, column: 37, scope: !10579)
!10586 = !DILocation(line: 213, column: 44, scope: !10579)
!10587 = !DILocation(line: 213, column: 52, scope: !10579)
!10588 = !DILocation(line: 214, column: 29, scope: !10579)
!10589 = !DILocation(line: 214, column: 37, scope: !10579)
!10590 = !DILocation(line: 214, column: 44, scope: !10579)
!10591 = !DILocation(line: 214, column: 52, scope: !10579)
!10592 = !DILocation(line: 213, column: 10, scope: !10579)
!10593 = !DILocation(line: 213, column: 3, scope: !10579)
!10594 = distinct !DISubprogram(name: "str_equal_internal", scope: !841, file: !841, line: 218, type: !10595, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10595 = !DISubroutineType(types: !10596)
!10596 = !{!19, !88, !26, !88, !26}
!10597 = !DILocalVariable(name: "p_buf1", arg: 1, scope: !10594, file: !841, line: 218, type: !88)
!10598 = !DILocation(line: 218, column: 32, scope: !10594)
!10599 = !DILocalVariable(name: "buf1_len", arg: 2, scope: !10594, file: !841, line: 218, type: !26)
!10600 = !DILocation(line: 218, column: 53, scope: !10594)
!10601 = !DILocalVariable(name: "p_buf2", arg: 3, scope: !10594, file: !841, line: 219, type: !88)
!10602 = !DILocation(line: 219, column: 32, scope: !10594)
!10603 = !DILocalVariable(name: "buf2_len", arg: 4, scope: !10594, file: !841, line: 219, type: !26)
!10604 = !DILocation(line: 219, column: 53, scope: !10594)
!10605 = !DILocalVariable(name: "retval", scope: !10594, file: !841, line: 221, type: !19)
!10606 = !DILocation(line: 221, column: 7, scope: !10594)
!10607 = !DILocalVariable(name: "minlen", scope: !10594, file: !841, line: 222, type: !26)
!10608 = !DILocation(line: 222, column: 16, scope: !10594)
!10609 = !DILocation(line: 222, column: 25, scope: !10594)
!10610 = !DILocation(line: 223, column: 7, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10594, file: !841, line: 223, column: 7)
!10612 = !DILocation(line: 223, column: 18, scope: !10611)
!10613 = !DILocation(line: 223, column: 16, scope: !10611)
!10614 = !DILocation(line: 223, column: 7, scope: !10594)
!10615 = !DILocation(line: 225, column: 14, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10611, file: !841, line: 224, column: 3)
!10617 = !DILocation(line: 225, column: 12, scope: !10616)
!10618 = !DILocation(line: 226, column: 3, scope: !10616)
!10619 = !DILocation(line: 227, column: 31, scope: !10594)
!10620 = !DILocation(line: 227, column: 39, scope: !10594)
!10621 = !DILocation(line: 227, column: 47, scope: !10594)
!10622 = !DILocation(line: 227, column: 12, scope: !10594)
!10623 = !DILocation(line: 227, column: 10, scope: !10594)
!10624 = !DILocation(line: 228, column: 7, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10594, file: !841, line: 228, column: 7)
!10626 = !DILocation(line: 228, column: 14, scope: !10625)
!10627 = !DILocation(line: 228, column: 19, scope: !10625)
!10628 = !DILocation(line: 228, column: 22, scope: !10625)
!10629 = !DILocation(line: 228, column: 34, scope: !10625)
!10630 = !DILocation(line: 228, column: 31, scope: !10625)
!10631 = !DILocation(line: 228, column: 7, scope: !10594)
!10632 = !DILocation(line: 230, column: 12, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10625, file: !841, line: 229, column: 3)
!10634 = !DILocation(line: 230, column: 5, scope: !10633)
!10635 = !DILocation(line: 233, column: 17, scope: !10594)
!10636 = !DILocation(line: 233, column: 28, scope: !10594)
!10637 = !DILocation(line: 233, column: 26, scope: !10594)
!10638 = !DILocation(line: 233, column: 3, scope: !10594)
!10639 = !DILocation(line: 234, column: 1, scope: !10594)
!10640 = distinct !DISubprogram(name: "str_equal", scope: !841, file: !841, line: 237, type: !864, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10641 = !DILocalVariable(name: "p_str1", arg: 1, scope: !10640, file: !841, line: 237, type: !866)
!10642 = !DILocation(line: 237, column: 31, scope: !10640)
!10643 = !DILocalVariable(name: "p_str2", arg: 2, scope: !10640, file: !841, line: 237, type: !866)
!10644 = !DILocation(line: 237, column: 59, scope: !10640)
!10645 = !DILocation(line: 239, column: 22, scope: !10640)
!10646 = !DILocation(line: 239, column: 30, scope: !10640)
!10647 = !DILocation(line: 239, column: 11, scope: !10640)
!10648 = !DILocation(line: 239, column: 38, scope: !10640)
!10649 = !DILocation(line: 239, column: 3, scope: !10640)
!10650 = distinct !DISubprogram(name: "str_equal_text", scope: !841, file: !841, line: 243, type: !10651, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10651 = !DISubroutineType(types: !10652)
!10652 = !{!19, !866, !88}
!10653 = !DILocalVariable(name: "p_str", arg: 1, scope: !10650, file: !841, line: 243, type: !866)
!10654 = !DILocation(line: 243, column: 36, scope: !10650)
!10655 = !DILocalVariable(name: "p_text", arg: 2, scope: !10650, file: !841, line: 243, type: !88)
!10656 = !DILocation(line: 243, column: 55, scope: !10650)
!10657 = !DILocalVariable(name: "cmplen", scope: !10650, file: !841, line: 245, type: !26)
!10658 = !DILocation(line: 245, column: 16, scope: !10650)
!10659 = !DILocation(line: 245, column: 44, scope: !10650)
!10660 = !DILocation(line: 245, column: 25, scope: !10650)
!10661 = !DILocation(line: 246, column: 30, scope: !10650)
!10662 = !DILocation(line: 246, column: 37, scope: !10650)
!10663 = !DILocation(line: 246, column: 44, scope: !10650)
!10664 = !DILocation(line: 246, column: 51, scope: !10650)
!10665 = !DILocation(line: 246, column: 56, scope: !10650)
!10666 = !DILocation(line: 246, column: 64, scope: !10650)
!10667 = !DILocation(line: 246, column: 11, scope: !10650)
!10668 = !DILocation(line: 246, column: 72, scope: !10650)
!10669 = !DILocation(line: 246, column: 3, scope: !10650)
!10670 = distinct !DISubprogram(name: "str_append_str", scope: !841, file: !841, line: 250, type: !10381, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10671 = !DILocalVariable(name: "p_str", arg: 1, scope: !10670, file: !841, line: 250, type: !844)
!10672 = !DILocation(line: 250, column: 30, scope: !10670)
!10673 = !DILocalVariable(name: "p_other", arg: 2, scope: !10670, file: !841, line: 250, type: !866)
!10674 = !DILocation(line: 250, column: 57, scope: !10670)
!10675 = !DILocation(line: 252, column: 31, scope: !10670)
!10676 = !DILocation(line: 252, column: 38, scope: !10670)
!10677 = !DILocation(line: 252, column: 47, scope: !10670)
!10678 = !DILocation(line: 252, column: 54, scope: !10670)
!10679 = !DILocation(line: 252, column: 63, scope: !10670)
!10680 = !DILocation(line: 252, column: 3, scope: !10670)
!10681 = !DILocation(line: 253, column: 1, scope: !10670)
!10682 = distinct !DISubprogram(name: "str_append_text", scope: !841, file: !841, line: 256, type: !10365, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10683 = !DILocalVariable(name: "p_str", arg: 1, scope: !10682, file: !841, line: 256, type: !844)
!10684 = !DILocation(line: 256, column: 31, scope: !10682)
!10685 = !DILocalVariable(name: "p_src", arg: 2, scope: !10682, file: !841, line: 256, type: !88)
!10686 = !DILocation(line: 256, column: 50, scope: !10682)
!10687 = !DILocalVariable(name: "len", scope: !10682, file: !841, line: 258, type: !26)
!10688 = !DILocation(line: 258, column: 16, scope: !10682)
!10689 = !DILocation(line: 258, column: 41, scope: !10682)
!10690 = !DILocation(line: 258, column: 22, scope: !10682)
!10691 = !DILocation(line: 259, column: 31, scope: !10682)
!10692 = !DILocation(line: 259, column: 38, scope: !10682)
!10693 = !DILocation(line: 259, column: 45, scope: !10682)
!10694 = !DILocation(line: 259, column: 3, scope: !10682)
!10695 = !DILocation(line: 260, column: 1, scope: !10682)
!10696 = distinct !DISubprogram(name: "str_append_char", scope: !841, file: !841, line: 263, type: !10697, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{null, !844, !17}
!10699 = !DILocalVariable(name: "p_str", arg: 1, scope: !10696, file: !841, line: 263, type: !844)
!10700 = !DILocation(line: 263, column: 31, scope: !10696)
!10701 = !DILocalVariable(name: "the_char", arg: 2, scope: !10696, file: !841, line: 263, type: !17)
!10702 = !DILocation(line: 263, column: 43, scope: !10696)
!10703 = !DILocation(line: 265, column: 31, scope: !10696)
!10704 = !DILocation(line: 265, column: 3, scope: !10696)
!10705 = !DILocation(line: 266, column: 1, scope: !10696)
!10706 = distinct !DISubprogram(name: "str_append_ulong", scope: !841, file: !841, line: 269, type: !10467, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10707 = !DILocalVariable(name: "p_str", arg: 1, scope: !10706, file: !841, line: 269, type: !844)
!10708 = !DILocation(line: 269, column: 32, scope: !10706)
!10709 = !DILocalVariable(name: "the_ulong", arg: 2, scope: !10706, file: !841, line: 269, type: !65)
!10710 = !DILocation(line: 269, column: 53, scope: !10706)
!10711 = !DILocation(line: 271, column: 19, scope: !10706)
!10712 = !DILocation(line: 271, column: 51, scope: !10706)
!10713 = !DILocation(line: 271, column: 26, scope: !10706)
!10714 = !DILocation(line: 271, column: 3, scope: !10706)
!10715 = !DILocation(line: 272, column: 1, scope: !10706)
!10716 = distinct !DISubprogram(name: "str_append_filesize_t", scope: !841, file: !841, line: 275, type: !10479, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10717 = !DILocalVariable(name: "p_str", arg: 1, scope: !10716, file: !841, line: 275, type: !844)
!10718 = !DILocation(line: 275, column: 37, scope: !10716)
!10719 = !DILocalVariable(name: "the_filesize", arg: 2, scope: !10716, file: !841, line: 275, type: !41)
!10720 = !DILocation(line: 275, column: 55, scope: !10716)
!10721 = !DILocation(line: 277, column: 19, scope: !10716)
!10722 = !DILocation(line: 277, column: 56, scope: !10716)
!10723 = !DILocation(line: 277, column: 26, scope: !10716)
!10724 = !DILocation(line: 277, column: 3, scope: !10716)
!10725 = !DILocation(line: 278, column: 1, scope: !10716)
!10726 = distinct !DISubprogram(name: "str_append_double", scope: !841, file: !841, line: 281, type: !10727, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10727 = !DISubroutineType(types: !10728)
!10728 = !{null, !844, !692}
!10729 = !DILocalVariable(name: "p_str", arg: 1, scope: !10726, file: !841, line: 281, type: !844)
!10730 = !DILocation(line: 281, column: 33, scope: !10726)
!10731 = !DILocalVariable(name: "the_double", arg: 2, scope: !10726, file: !841, line: 281, type: !692)
!10732 = !DILocation(line: 281, column: 47, scope: !10726)
!10733 = !DILocation(line: 283, column: 19, scope: !10726)
!10734 = !DILocation(line: 283, column: 52, scope: !10726)
!10735 = !DILocation(line: 283, column: 26, scope: !10726)
!10736 = !DILocation(line: 283, column: 3, scope: !10726)
!10737 = !DILocation(line: 284, column: 1, scope: !10726)
!10738 = distinct !DISubprogram(name: "str_upper", scope: !841, file: !841, line: 287, type: !10246, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10739 = !DILocalVariable(name: "p_str", arg: 1, scope: !10738, file: !841, line: 287, type: !844)
!10740 = !DILocation(line: 287, column: 25, scope: !10738)
!10741 = !DILocalVariable(name: "i", scope: !10738, file: !841, line: 289, type: !26)
!10742 = !DILocation(line: 289, column: 16, scope: !10738)
!10743 = !DILocation(line: 290, column: 9, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10738, file: !841, line: 290, column: 3)
!10745 = !DILocation(line: 290, column: 8, scope: !10744)
!10746 = !DILocation(line: 290, column: 13, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10744, file: !841, line: 290, column: 3)
!10748 = !DILocation(line: 290, column: 17, scope: !10747)
!10749 = !DILocation(line: 290, column: 24, scope: !10747)
!10750 = !DILocation(line: 290, column: 15, scope: !10747)
!10751 = !DILocation(line: 290, column: 3, scope: !10744)
!10752 = !DILocation(line: 292, column: 50, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10747, file: !841, line: 291, column: 3)
!10754 = !DILocation(line: 292, column: 57, scope: !10753)
!10755 = !DILocation(line: 292, column: 63, scope: !10753)
!10756 = !DILocation(line: 292, column: 30, scope: !10753)
!10757 = !DILocation(line: 292, column: 23, scope: !10753)
!10758 = !DILocation(line: 292, column: 5, scope: !10753)
!10759 = !DILocation(line: 292, column: 12, scope: !10753)
!10760 = !DILocation(line: 292, column: 18, scope: !10753)
!10761 = !DILocation(line: 292, column: 21, scope: !10753)
!10762 = !DILocation(line: 293, column: 3, scope: !10753)
!10763 = !DILocation(line: 290, column: 30, scope: !10747)
!10764 = !DILocation(line: 290, column: 3, scope: !10747)
!10765 = distinct !{!10765, !10751, !10766}
!10766 = !DILocation(line: 293, column: 3, scope: !10744)
!10767 = !DILocation(line: 294, column: 1, scope: !10738)
!10768 = distinct !DISubprogram(name: "str_rpad", scope: !841, file: !841, line: 297, type: !842, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10769 = !DILocalVariable(name: "p_str", arg: 1, scope: !10768, file: !841, line: 297, type: !844)
!10770 = !DILocation(line: 297, column: 24, scope: !10768)
!10771 = !DILocalVariable(name: "min_width", arg: 2, scope: !10768, file: !841, line: 297, type: !850)
!10772 = !DILocation(line: 297, column: 50, scope: !10768)
!10773 = !DILocalVariable(name: "to_pad", scope: !10768, file: !841, line: 299, type: !26)
!10774 = !DILocation(line: 299, column: 16, scope: !10768)
!10775 = !DILocation(line: 300, column: 7, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10768, file: !841, line: 300, column: 7)
!10777 = !DILocation(line: 300, column: 14, scope: !10776)
!10778 = !DILocation(line: 300, column: 21, scope: !10776)
!10779 = !DILocation(line: 300, column: 18, scope: !10776)
!10780 = !DILocation(line: 300, column: 7, scope: !10768)
!10781 = !DILocation(line: 302, column: 5, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10776, file: !841, line: 301, column: 3)
!10783 = !DILocation(line: 304, column: 12, scope: !10768)
!10784 = !DILocation(line: 304, column: 24, scope: !10768)
!10785 = !DILocation(line: 304, column: 31, scope: !10768)
!10786 = !DILocation(line: 304, column: 22, scope: !10768)
!10787 = !DILocation(line: 304, column: 10, scope: !10768)
!10788 = !DILocation(line: 305, column: 3, scope: !10768)
!10789 = !DILocation(line: 305, column: 16, scope: !10768)
!10790 = !DILocation(line: 307, column: 21, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10768, file: !841, line: 306, column: 3)
!10792 = !DILocation(line: 307, column: 5, scope: !10791)
!10793 = distinct !{!10793, !10788, !10794}
!10794 = !DILocation(line: 308, column: 3, scope: !10768)
!10795 = !DILocation(line: 309, column: 1, scope: !10768)
!10796 = !DILocalVariable(name: "p_str", arg: 1, scope: !840, file: !841, line: 312, type: !844)
!10797 = !DILocation(line: 312, column: 24, scope: !840)
!10798 = !DILocalVariable(name: "min_width", arg: 2, scope: !840, file: !841, line: 312, type: !850)
!10799 = !DILocation(line: 312, column: 50, scope: !840)
!10800 = !DILocalVariable(name: "to_pad", scope: !840, file: !841, line: 315, type: !26)
!10801 = !DILocation(line: 315, column: 16, scope: !840)
!10802 = !DILocation(line: 316, column: 7, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !840, file: !841, line: 316, column: 7)
!10804 = !DILocation(line: 316, column: 14, scope: !10803)
!10805 = !DILocation(line: 316, column: 21, scope: !10803)
!10806 = !DILocation(line: 316, column: 18, scope: !10803)
!10807 = !DILocation(line: 316, column: 7, scope: !840)
!10808 = !DILocation(line: 318, column: 5, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10803, file: !841, line: 317, column: 3)
!10810 = !DILocation(line: 320, column: 12, scope: !840)
!10811 = !DILocation(line: 320, column: 24, scope: !840)
!10812 = !DILocation(line: 320, column: 31, scope: !840)
!10813 = !DILocation(line: 320, column: 22, scope: !840)
!10814 = !DILocation(line: 320, column: 10, scope: !840)
!10815 = !DILocation(line: 321, column: 3, scope: !840)
!10816 = !DILocation(line: 322, column: 3, scope: !840)
!10817 = !DILocation(line: 322, column: 16, scope: !840)
!10818 = !DILocation(line: 324, column: 5, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !840, file: !841, line: 323, column: 3)
!10820 = distinct !{!10820, !10816, !10821}
!10821 = !DILocation(line: 325, column: 3, scope: !840)
!10822 = !DILocation(line: 326, column: 30, scope: !840)
!10823 = !DILocation(line: 326, column: 3, scope: !840)
!10824 = !DILocation(line: 327, column: 12, scope: !840)
!10825 = !DILocation(line: 327, column: 3, scope: !840)
!10826 = !DILocation(line: 328, column: 1, scope: !840)
!10827 = distinct !DISubprogram(name: "str_replace_char", scope: !841, file: !841, line: 331, type: !10828, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10828 = !DISubroutineType(types: !10829)
!10829 = !{null, !844, !17, !17}
!10830 = !DILocalVariable(name: "p_str", arg: 1, scope: !10827, file: !841, line: 331, type: !844)
!10831 = !DILocation(line: 331, column: 32, scope: !10827)
!10832 = !DILocalVariable(name: "from", arg: 2, scope: !10827, file: !841, line: 331, type: !17)
!10833 = !DILocation(line: 331, column: 44, scope: !10827)
!10834 = !DILocalVariable(name: "to", arg: 3, scope: !10827, file: !841, line: 331, type: !17)
!10835 = !DILocation(line: 331, column: 55, scope: !10827)
!10836 = !DILocalVariable(name: "i", scope: !10827, file: !841, line: 333, type: !26)
!10837 = !DILocation(line: 333, column: 16, scope: !10827)
!10838 = !DILocation(line: 334, column: 9, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10827, file: !841, line: 334, column: 3)
!10840 = !DILocation(line: 334, column: 8, scope: !10839)
!10841 = !DILocation(line: 334, column: 13, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10839, file: !841, line: 334, column: 3)
!10843 = !DILocation(line: 334, column: 17, scope: !10842)
!10844 = !DILocation(line: 334, column: 24, scope: !10842)
!10845 = !DILocation(line: 334, column: 15, scope: !10842)
!10846 = !DILocation(line: 334, column: 3, scope: !10839)
!10847 = !DILocation(line: 336, column: 9, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !841, line: 336, column: 9)
!10849 = distinct !DILexicalBlock(scope: !10842, file: !841, line: 335, column: 3)
!10850 = !DILocation(line: 336, column: 16, scope: !10848)
!10851 = !DILocation(line: 336, column: 22, scope: !10848)
!10852 = !DILocation(line: 336, column: 28, scope: !10848)
!10853 = !DILocation(line: 336, column: 25, scope: !10848)
!10854 = !DILocation(line: 336, column: 9, scope: !10849)
!10855 = !DILocation(line: 338, column: 25, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10848, file: !841, line: 337, column: 5)
!10857 = !DILocation(line: 338, column: 7, scope: !10856)
!10858 = !DILocation(line: 338, column: 14, scope: !10856)
!10859 = !DILocation(line: 338, column: 20, scope: !10856)
!10860 = !DILocation(line: 338, column: 23, scope: !10856)
!10861 = !DILocation(line: 339, column: 5, scope: !10856)
!10862 = !DILocation(line: 340, column: 3, scope: !10849)
!10863 = !DILocation(line: 334, column: 30, scope: !10842)
!10864 = !DILocation(line: 334, column: 3, scope: !10842)
!10865 = distinct !{!10865, !10846, !10866}
!10866 = !DILocation(line: 340, column: 3, scope: !10839)
!10867 = !DILocation(line: 341, column: 1, scope: !10827)
!10868 = !DILocalVariable(name: "p_str", arg: 1, scope: !856, file: !841, line: 344, type: !844)
!10869 = !DILocation(line: 344, column: 32, scope: !856)
!10870 = !DILocalVariable(name: "p_from", arg: 2, scope: !856, file: !841, line: 344, type: !88)
!10871 = !DILocation(line: 344, column: 51, scope: !856)
!10872 = !DILocalVariable(name: "p_to", arg: 3, scope: !856, file: !841, line: 344, type: !88)
!10873 = !DILocation(line: 344, column: 71, scope: !856)
!10874 = !DILocalVariable(name: "lhs_len", scope: !856, file: !841, line: 348, type: !26)
!10875 = !DILocation(line: 348, column: 16, scope: !856)
!10876 = !DILocation(line: 349, column: 30, scope: !856)
!10877 = !DILocation(line: 349, column: 3, scope: !856)
!10878 = !DILocation(line: 350, column: 12, scope: !856)
!10879 = !DILocation(line: 350, column: 3, scope: !856)
!10880 = !DILocation(line: 351, column: 3, scope: !856)
!10881 = distinct !{!10881, !10880, !10882}
!10882 = !DILocation(line: 364, column: 42, scope: !856)
!10883 = !DILocation(line: 353, column: 15, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !856, file: !841, line: 352, column: 3)
!10885 = !DILocation(line: 353, column: 13, scope: !10884)
!10886 = !DILocation(line: 354, column: 56, scope: !10884)
!10887 = !DILocation(line: 354, column: 5, scope: !10884)
!10888 = !DILocation(line: 356, column: 20, scope: !10884)
!10889 = !DILocation(line: 356, column: 5, scope: !10884)
!10890 = !DILocation(line: 358, column: 9, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10884, file: !841, line: 358, column: 9)
!10892 = !DILocation(line: 358, column: 40, scope: !10891)
!10893 = !DILocation(line: 358, column: 38, scope: !10891)
!10894 = !DILocation(line: 358, column: 9, scope: !10884)
!10895 = !DILocation(line: 360, column: 23, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10891, file: !841, line: 359, column: 5)
!10897 = !DILocation(line: 360, column: 30, scope: !10896)
!10898 = !DILocation(line: 360, column: 7, scope: !10896)
!10899 = !DILocation(line: 361, column: 5, scope: !10896)
!10900 = !DILocation(line: 363, column: 5, scope: !10884)
!10901 = !DILocation(line: 364, column: 3, scope: !10884)
!10902 = !DILocation(line: 364, column: 13, scope: !856)
!10903 = !DILocation(line: 364, column: 12, scope: !856)
!10904 = !DILocation(line: 365, column: 1, scope: !856)
!10905 = distinct !DISubprogram(name: "str_split_text", scope: !841, file: !841, line: 388, type: !10906, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10906 = !DISubroutineType(types: !10907)
!10907 = !{null, !844, !844, !88}
!10908 = !DILocalVariable(name: "p_src", arg: 1, scope: !10905, file: !841, line: 388, type: !844)
!10909 = !DILocation(line: 388, column: 30, scope: !10905)
!10910 = !DILocalVariable(name: "p_rhs", arg: 2, scope: !10905, file: !841, line: 388, type: !844)
!10911 = !DILocation(line: 388, column: 51, scope: !10905)
!10912 = !DILocalVariable(name: "p_text", arg: 3, scope: !10905, file: !841, line: 388, type: !88)
!10913 = !DILocation(line: 388, column: 70, scope: !10905)
!10914 = !DILocation(line: 390, column: 25, scope: !10905)
!10915 = !DILocation(line: 390, column: 32, scope: !10905)
!10916 = !DILocation(line: 390, column: 39, scope: !10905)
!10917 = !DILocation(line: 390, column: 3, scope: !10905)
!10918 = !DILocation(line: 391, column: 1, scope: !10905)
!10919 = distinct !DISubprogram(name: "str_split_text_common", scope: !841, file: !841, line: 401, type: !10920, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{null, !844, !844, !88, !19}
!10922 = !DILocalVariable(name: "p_src", arg: 1, scope: !10919, file: !841, line: 401, type: !844)
!10923 = !DILocation(line: 401, column: 37, scope: !10919)
!10924 = !DILocalVariable(name: "p_rhs", arg: 2, scope: !10919, file: !841, line: 401, type: !844)
!10925 = !DILocation(line: 401, column: 58, scope: !10919)
!10926 = !DILocalVariable(name: "p_text", arg: 3, scope: !10919, file: !841, line: 402, type: !88)
!10927 = !DILocation(line: 402, column: 35, scope: !10919)
!10928 = !DILocalVariable(name: "is_reverse", arg: 4, scope: !10919, file: !841, line: 402, type: !19)
!10929 = !DILocation(line: 402, column: 47, scope: !10919)
!10930 = !DILocalVariable(name: "locate_result", scope: !10919, file: !841, line: 404, type: !10931)
!10931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_locate_result", file: !34, line: 68, size: 96, elements: !10932)
!10932 = !{!10933, !10934, !10935}
!10933 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !10931, file: !34, line: 70, baseType: !19, size: 32)
!10934 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10931, file: !34, line: 71, baseType: !26, size: 32, offset: 32)
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "char_found", scope: !10931, file: !34, line: 72, baseType: !17, size: 8, offset: 64)
!10936 = !DILocation(line: 404, column: 28, scope: !10919)
!10937 = !DILocalVariable(name: "indexx", scope: !10919, file: !841, line: 405, type: !26)
!10938 = !DILocation(line: 405, column: 16, scope: !10919)
!10939 = !DILocalVariable(name: "search_len", scope: !10919, file: !841, line: 406, type: !26)
!10940 = !DILocation(line: 406, column: 16, scope: !10919)
!10941 = !DILocation(line: 406, column: 48, scope: !10919)
!10942 = !DILocation(line: 406, column: 29, scope: !10919)
!10943 = !DILocation(line: 407, column: 7, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10919, file: !841, line: 407, column: 7)
!10945 = !DILocation(line: 407, column: 7, scope: !10919)
!10946 = !DILocation(line: 409, column: 45, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10944, file: !841, line: 408, column: 3)
!10948 = !DILocation(line: 409, column: 52, scope: !10947)
!10949 = !DILocation(line: 409, column: 21, scope: !10947)
!10950 = !DILocation(line: 410, column: 3, scope: !10947)
!10951 = !DILocation(line: 413, column: 37, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10944, file: !841, line: 412, column: 3)
!10953 = !DILocation(line: 413, column: 44, scope: !10952)
!10954 = !DILocation(line: 413, column: 21, scope: !10952)
!10955 = !DILocation(line: 416, column: 22, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10919, file: !841, line: 416, column: 7)
!10957 = !DILocation(line: 416, column: 8, scope: !10956)
!10958 = !DILocation(line: 416, column: 7, scope: !10919)
!10959 = !DILocation(line: 418, column: 15, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10956, file: !841, line: 417, column: 3)
!10961 = !DILocation(line: 418, column: 5, scope: !10960)
!10962 = !DILocation(line: 419, column: 5, scope: !10960)
!10963 = !DILocation(line: 421, column: 26, scope: !10919)
!10964 = !DILocation(line: 421, column: 10, scope: !10919)
!10965 = !DILocation(line: 422, column: 7, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10919, file: !841, line: 422, column: 7)
!10967 = !DILocation(line: 422, column: 16, scope: !10966)
!10968 = !DILocation(line: 422, column: 14, scope: !10966)
!10969 = !DILocation(line: 422, column: 29, scope: !10966)
!10970 = !DILocation(line: 422, column: 36, scope: !10966)
!10971 = !DILocation(line: 422, column: 27, scope: !10966)
!10972 = !DILocation(line: 422, column: 7, scope: !10919)
!10973 = !DILocation(line: 424, column: 5, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10966, file: !841, line: 423, column: 3)
!10975 = !DILocation(line: 425, column: 3, scope: !10974)
!10976 = !DILocation(line: 427, column: 30, scope: !10919)
!10977 = !DILocation(line: 427, column: 37, scope: !10919)
!10978 = !DILocation(line: 427, column: 44, scope: !10919)
!10979 = !DILocation(line: 427, column: 52, scope: !10919)
!10980 = !DILocation(line: 427, column: 50, scope: !10919)
!10981 = !DILocation(line: 427, column: 61, scope: !10919)
!10982 = !DILocation(line: 427, column: 59, scope: !10919)
!10983 = !DILocation(line: 428, column: 30, scope: !10919)
!10984 = !DILocation(line: 428, column: 37, scope: !10919)
!10985 = !DILocation(line: 428, column: 43, scope: !10919)
!10986 = !DILocation(line: 428, column: 41, scope: !10919)
!10987 = !DILocation(line: 428, column: 52, scope: !10919)
!10988 = !DILocation(line: 428, column: 50, scope: !10919)
!10989 = !DILocation(line: 427, column: 3, scope: !10919)
!10990 = !DILocation(line: 430, column: 13, scope: !10919)
!10991 = !DILocation(line: 430, column: 20, scope: !10919)
!10992 = !DILocation(line: 430, column: 3, scope: !10919)
!10993 = !DILocation(line: 431, column: 1, scope: !10919)
!10994 = distinct !DISubprogram(name: "str_locate_text_reverse", scope: !841, file: !841, line: 510, type: !10995, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!10931, !866, !88}
!10997 = !DILocalVariable(name: "p_str", arg: 1, scope: !10994, file: !841, line: 510, type: !866)
!10998 = !DILocation(line: 510, column: 45, scope: !10994)
!10999 = !DILocalVariable(name: "p_text", arg: 2, scope: !10994, file: !841, line: 510, type: !88)
!11000 = !DILocation(line: 510, column: 64, scope: !10994)
!11001 = !DILocalVariable(name: "retval", scope: !10994, file: !841, line: 512, type: !10931)
!11002 = !DILocation(line: 512, column: 28, scope: !10994)
!11003 = !DILocalVariable(name: "i", scope: !10994, file: !841, line: 513, type: !26)
!11004 = !DILocation(line: 513, column: 16, scope: !10994)
!11005 = !DILocalVariable(name: "text_len", scope: !10994, file: !841, line: 514, type: !26)
!11006 = !DILocation(line: 514, column: 16, scope: !10994)
!11007 = !DILocation(line: 514, column: 46, scope: !10994)
!11008 = !DILocation(line: 514, column: 27, scope: !10994)
!11009 = !DILocation(line: 515, column: 10, scope: !10994)
!11010 = !DILocation(line: 515, column: 16, scope: !10994)
!11011 = !DILocation(line: 516, column: 10, scope: !10994)
!11012 = !DILocation(line: 516, column: 21, scope: !10994)
!11013 = !DILocation(line: 517, column: 10, scope: !10994)
!11014 = !DILocation(line: 517, column: 16, scope: !10994)
!11015 = !DILocation(line: 518, column: 7, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10994, file: !841, line: 518, column: 7)
!11017 = !DILocation(line: 518, column: 16, scope: !11016)
!11018 = !DILocation(line: 518, column: 21, scope: !11016)
!11019 = !DILocation(line: 518, column: 24, scope: !11016)
!11020 = !DILocation(line: 518, column: 35, scope: !11016)
!11021 = !DILocation(line: 518, column: 42, scope: !11016)
!11022 = !DILocation(line: 518, column: 33, scope: !11016)
!11023 = !DILocation(line: 518, column: 7, scope: !10994)
!11024 = !DILocation(line: 520, column: 12, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11016, file: !841, line: 519, column: 3)
!11026 = !DILocation(line: 520, column: 5, scope: !11025)
!11027 = !DILocation(line: 522, column: 7, scope: !10994)
!11028 = !DILocation(line: 522, column: 14, scope: !10994)
!11029 = !DILocation(line: 522, column: 20, scope: !10994)
!11030 = !DILocation(line: 522, column: 18, scope: !10994)
!11031 = !DILocation(line: 522, column: 5, scope: !10994)
!11032 = !DILocation(line: 524, column: 3, scope: !10994)
!11033 = !DILocation(line: 526, column: 28, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !841, line: 526, column: 9)
!11035 = distinct !DILexicalBlock(scope: !10994, file: !841, line: 525, column: 3)
!11036 = !DILocation(line: 526, column: 35, scope: !11034)
!11037 = !DILocation(line: 526, column: 43, scope: !11034)
!11038 = !DILocation(line: 526, column: 41, scope: !11034)
!11039 = !DILocation(line: 526, column: 46, scope: !11034)
!11040 = !DILocation(line: 526, column: 54, scope: !11034)
!11041 = !DILocation(line: 526, column: 9, scope: !11034)
!11042 = !DILocation(line: 526, column: 64, scope: !11034)
!11043 = !DILocation(line: 526, column: 9, scope: !11035)
!11044 = !DILocation(line: 528, column: 14, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11034, file: !841, line: 527, column: 5)
!11046 = !DILocation(line: 528, column: 20, scope: !11045)
!11047 = !DILocation(line: 529, column: 22, scope: !11045)
!11048 = !DILocation(line: 529, column: 14, scope: !11045)
!11049 = !DILocation(line: 529, column: 20, scope: !11045)
!11050 = !DILocation(line: 530, column: 14, scope: !11045)
!11051 = !DILocation(line: 530, column: 7, scope: !11045)
!11052 = !DILocation(line: 532, column: 9, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11035, file: !841, line: 532, column: 9)
!11054 = !DILocation(line: 532, column: 11, scope: !11053)
!11055 = !DILocation(line: 532, column: 9, scope: !11035)
!11056 = !DILocation(line: 534, column: 7, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11053, file: !841, line: 533, column: 5)
!11058 = !DILocation(line: 536, column: 6, scope: !11035)
!11059 = distinct !{!11059, !11032, !11060}
!11060 = !DILocation(line: 537, column: 3, scope: !10994)
!11061 = !DILocation(line: 539, column: 10, scope: !10994)
!11062 = !DILocation(line: 539, column: 3, scope: !10994)
!11063 = !DILocation(line: 540, column: 1, scope: !10994)
!11064 = distinct !DISubprogram(name: "str_locate_text", scope: !841, file: !841, line: 483, type: !10995, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11065 = !DILocalVariable(name: "p_str", arg: 1, scope: !11064, file: !841, line: 483, type: !866)
!11066 = !DILocation(line: 483, column: 37, scope: !11064)
!11067 = !DILocalVariable(name: "p_text", arg: 2, scope: !11064, file: !841, line: 483, type: !88)
!11068 = !DILocation(line: 483, column: 56, scope: !11064)
!11069 = !DILocalVariable(name: "retval", scope: !11064, file: !841, line: 485, type: !10931)
!11070 = !DILocation(line: 485, column: 28, scope: !11064)
!11071 = !DILocalVariable(name: "i", scope: !11064, file: !841, line: 486, type: !26)
!11072 = !DILocation(line: 486, column: 16, scope: !11064)
!11073 = !DILocalVariable(name: "text_len", scope: !11064, file: !841, line: 487, type: !26)
!11074 = !DILocation(line: 487, column: 16, scope: !11064)
!11075 = !DILocation(line: 487, column: 46, scope: !11064)
!11076 = !DILocation(line: 487, column: 27, scope: !11064)
!11077 = !DILocation(line: 488, column: 10, scope: !11064)
!11078 = !DILocation(line: 488, column: 16, scope: !11064)
!11079 = !DILocation(line: 489, column: 10, scope: !11064)
!11080 = !DILocation(line: 489, column: 21, scope: !11064)
!11081 = !DILocation(line: 490, column: 10, scope: !11064)
!11082 = !DILocation(line: 490, column: 16, scope: !11064)
!11083 = !DILocation(line: 491, column: 7, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11064, file: !841, line: 491, column: 7)
!11085 = !DILocation(line: 491, column: 16, scope: !11084)
!11086 = !DILocation(line: 491, column: 21, scope: !11084)
!11087 = !DILocation(line: 491, column: 24, scope: !11084)
!11088 = !DILocation(line: 491, column: 35, scope: !11084)
!11089 = !DILocation(line: 491, column: 42, scope: !11084)
!11090 = !DILocation(line: 491, column: 33, scope: !11084)
!11091 = !DILocation(line: 491, column: 7, scope: !11064)
!11092 = !DILocation(line: 494, column: 12, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11084, file: !841, line: 492, column: 3)
!11094 = !DILocation(line: 494, column: 5, scope: !11093)
!11095 = !DILocation(line: 496, column: 9, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11064, file: !841, line: 496, column: 3)
!11097 = !DILocation(line: 496, column: 8, scope: !11096)
!11098 = !DILocation(line: 496, column: 13, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11096, file: !841, line: 496, column: 3)
!11100 = !DILocation(line: 496, column: 19, scope: !11099)
!11101 = !DILocation(line: 496, column: 26, scope: !11099)
!11102 = !DILocation(line: 496, column: 32, scope: !11099)
!11103 = !DILocation(line: 496, column: 30, scope: !11099)
!11104 = !DILocation(line: 496, column: 15, scope: !11099)
!11105 = !DILocation(line: 496, column: 3, scope: !11096)
!11106 = !DILocation(line: 498, column: 28, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !841, line: 498, column: 9)
!11108 = distinct !DILexicalBlock(scope: !11099, file: !841, line: 497, column: 3)
!11109 = !DILocation(line: 498, column: 35, scope: !11107)
!11110 = !DILocation(line: 498, column: 43, scope: !11107)
!11111 = !DILocation(line: 498, column: 41, scope: !11107)
!11112 = !DILocation(line: 498, column: 46, scope: !11107)
!11113 = !DILocation(line: 498, column: 54, scope: !11107)
!11114 = !DILocation(line: 498, column: 9, scope: !11107)
!11115 = !DILocation(line: 498, column: 64, scope: !11107)
!11116 = !DILocation(line: 498, column: 9, scope: !11108)
!11117 = !DILocation(line: 500, column: 14, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11107, file: !841, line: 499, column: 5)
!11119 = !DILocation(line: 500, column: 20, scope: !11118)
!11120 = !DILocation(line: 501, column: 22, scope: !11118)
!11121 = !DILocation(line: 501, column: 14, scope: !11118)
!11122 = !DILocation(line: 501, column: 20, scope: !11118)
!11123 = !DILocation(line: 502, column: 14, scope: !11118)
!11124 = !DILocation(line: 502, column: 7, scope: !11118)
!11125 = !DILocation(line: 504, column: 3, scope: !11108)
!11126 = !DILocation(line: 496, column: 44, scope: !11099)
!11127 = !DILocation(line: 496, column: 3, scope: !11099)
!11128 = distinct !{!11128, !11105, !11129}
!11129 = !DILocation(line: 504, column: 3, scope: !11096)
!11130 = !DILocation(line: 506, column: 10, scope: !11064)
!11131 = !DILocation(line: 506, column: 3, scope: !11064)
!11132 = !DILocation(line: 507, column: 1, scope: !11064)
!11133 = distinct !DISubprogram(name: "str_split_char", scope: !841, file: !841, line: 368, type: !11134, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11134 = !DISubroutineType(types: !11135)
!11135 = !{null, !844, !844, !17}
!11136 = !DILocalVariable(name: "p_src", arg: 1, scope: !11133, file: !841, line: 368, type: !844)
!11137 = !DILocation(line: 368, column: 30, scope: !11133)
!11138 = !DILocalVariable(name: "p_rhs", arg: 2, scope: !11133, file: !841, line: 368, type: !844)
!11139 = !DILocation(line: 368, column: 51, scope: !11133)
!11140 = !DILocalVariable(name: "c", arg: 3, scope: !11133, file: !841, line: 368, type: !17)
!11141 = !DILocation(line: 368, column: 63, scope: !11133)
!11142 = !DILocalVariable(name: "ministr", scope: !11133, file: !841, line: 371, type: !11143)
!11143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 16, elements: !11144)
!11144 = !{!11145}
!11145 = !DISubrange(count: 2)
!11146 = !DILocation(line: 371, column: 8, scope: !11133)
!11147 = !DILocation(line: 372, column: 16, scope: !11133)
!11148 = !DILocation(line: 372, column: 3, scope: !11133)
!11149 = !DILocation(line: 372, column: 14, scope: !11133)
!11150 = !DILocation(line: 373, column: 3, scope: !11133)
!11151 = !DILocation(line: 373, column: 14, scope: !11133)
!11152 = !DILocation(line: 374, column: 18, scope: !11133)
!11153 = !DILocation(line: 374, column: 25, scope: !11133)
!11154 = !DILocation(line: 374, column: 32, scope: !11133)
!11155 = !DILocation(line: 374, column: 3, scope: !11133)
!11156 = !DILocation(line: 375, column: 1, scope: !11133)
!11157 = distinct !DISubprogram(name: "str_split_char_reverse", scope: !841, file: !841, line: 378, type: !11134, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11158 = !DILocalVariable(name: "p_src", arg: 1, scope: !11157, file: !841, line: 378, type: !844)
!11159 = !DILocation(line: 378, column: 38, scope: !11157)
!11160 = !DILocalVariable(name: "p_rhs", arg: 2, scope: !11157, file: !841, line: 378, type: !844)
!11161 = !DILocation(line: 378, column: 59, scope: !11157)
!11162 = !DILocalVariable(name: "c", arg: 3, scope: !11157, file: !841, line: 378, type: !17)
!11163 = !DILocation(line: 378, column: 71, scope: !11157)
!11164 = !DILocalVariable(name: "ministr", scope: !11157, file: !841, line: 381, type: !11143)
!11165 = !DILocation(line: 381, column: 8, scope: !11157)
!11166 = !DILocation(line: 382, column: 16, scope: !11157)
!11167 = !DILocation(line: 382, column: 3, scope: !11157)
!11168 = !DILocation(line: 382, column: 14, scope: !11157)
!11169 = !DILocation(line: 383, column: 3, scope: !11157)
!11170 = !DILocation(line: 383, column: 14, scope: !11157)
!11171 = !DILocation(line: 384, column: 26, scope: !11157)
!11172 = !DILocation(line: 384, column: 33, scope: !11157)
!11173 = !DILocation(line: 384, column: 40, scope: !11157)
!11174 = !DILocation(line: 384, column: 3, scope: !11157)
!11175 = !DILocation(line: 385, column: 1, scope: !11157)
!11176 = distinct !DISubprogram(name: "str_split_text_reverse", scope: !841, file: !841, line: 394, type: !10906, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11177 = !DILocalVariable(name: "p_src", arg: 1, scope: !11176, file: !841, line: 394, type: !844)
!11178 = !DILocation(line: 394, column: 38, scope: !11176)
!11179 = !DILocalVariable(name: "p_rhs", arg: 2, scope: !11176, file: !841, line: 394, type: !844)
!11180 = !DILocation(line: 394, column: 59, scope: !11176)
!11181 = !DILocalVariable(name: "p_text", arg: 3, scope: !11176, file: !841, line: 395, type: !88)
!11182 = !DILocation(line: 395, column: 36, scope: !11176)
!11183 = !DILocation(line: 397, column: 25, scope: !11176)
!11184 = !DILocation(line: 397, column: 32, scope: !11176)
!11185 = !DILocation(line: 397, column: 39, scope: !11176)
!11186 = !DILocation(line: 397, column: 3, scope: !11176)
!11187 = !DILocation(line: 398, column: 1, scope: !11176)
!11188 = distinct !DISubprogram(name: "str_locate_str", scope: !841, file: !841, line: 434, type: !11189, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11189 = !DISubroutineType(types: !11190)
!11190 = !{!10931, !866, !866}
!11191 = !DILocalVariable(name: "p_str", arg: 1, scope: !11188, file: !841, line: 434, type: !866)
!11192 = !DILocation(line: 434, column: 36, scope: !11188)
!11193 = !DILocalVariable(name: "p_look_str", arg: 2, scope: !11188, file: !841, line: 434, type: !866)
!11194 = !DILocation(line: 434, column: 63, scope: !11188)
!11195 = !DILocation(line: 436, column: 26, scope: !11188)
!11196 = !DILocation(line: 436, column: 44, scope: !11188)
!11197 = !DILocation(line: 436, column: 33, scope: !11188)
!11198 = !DILocation(line: 436, column: 10, scope: !11188)
!11199 = !DILocation(line: 436, column: 3, scope: !11188)
!11200 = distinct !DISubprogram(name: "str_locate_str_reverse", scope: !841, file: !841, line: 440, type: !11189, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11201 = !DILocalVariable(name: "p_str", arg: 1, scope: !11200, file: !841, line: 440, type: !866)
!11202 = !DILocation(line: 440, column: 44, scope: !11200)
!11203 = !DILocalVariable(name: "p_look_str", arg: 2, scope: !11200, file: !841, line: 441, type: !866)
!11204 = !DILocation(line: 441, column: 44, scope: !11200)
!11205 = !DILocation(line: 443, column: 34, scope: !11200)
!11206 = !DILocation(line: 443, column: 52, scope: !11200)
!11207 = !DILocation(line: 443, column: 41, scope: !11200)
!11208 = !DILocation(line: 443, column: 10, scope: !11200)
!11209 = !DILocation(line: 443, column: 3, scope: !11200)
!11210 = distinct !DISubprogram(name: "str_locate_char", scope: !841, file: !841, line: 447, type: !11211, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11211 = !DISubroutineType(types: !11212)
!11212 = !{!10931, !866, !17}
!11213 = !DILocalVariable(name: "p_str", arg: 1, scope: !11210, file: !841, line: 447, type: !866)
!11214 = !DILocation(line: 447, column: 37, scope: !11210)
!11215 = !DILocalVariable(name: "look_char", arg: 2, scope: !11210, file: !841, line: 447, type: !17)
!11216 = !DILocation(line: 447, column: 49, scope: !11210)
!11217 = !DILocalVariable(name: "look_str", scope: !11210, file: !841, line: 449, type: !11143)
!11218 = !DILocation(line: 449, column: 8, scope: !11210)
!11219 = !DILocation(line: 450, column: 17, scope: !11210)
!11220 = !DILocation(line: 450, column: 3, scope: !11210)
!11221 = !DILocation(line: 450, column: 15, scope: !11210)
!11222 = !DILocation(line: 451, column: 3, scope: !11210)
!11223 = !DILocation(line: 451, column: 15, scope: !11210)
!11224 = !DILocation(line: 452, column: 26, scope: !11210)
!11225 = !DILocation(line: 452, column: 33, scope: !11210)
!11226 = !DILocation(line: 452, column: 10, scope: !11210)
!11227 = !DILocation(line: 452, column: 3, scope: !11210)
!11228 = distinct !DISubprogram(name: "str_locate_chars", scope: !841, file: !841, line: 456, type: !10995, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11229 = !DILocalVariable(name: "p_str", arg: 1, scope: !11228, file: !841, line: 456, type: !866)
!11230 = !DILocation(line: 456, column: 38, scope: !11228)
!11231 = !DILocalVariable(name: "p_chars", arg: 2, scope: !11228, file: !841, line: 456, type: !88)
!11232 = !DILocation(line: 456, column: 57, scope: !11228)
!11233 = !DILocalVariable(name: "retval", scope: !11228, file: !841, line: 458, type: !10931)
!11234 = !DILocation(line: 458, column: 28, scope: !11228)
!11235 = !DILocalVariable(name: "num_chars", scope: !11228, file: !841, line: 459, type: !26)
!11236 = !DILocation(line: 459, column: 16, scope: !11228)
!11237 = !DILocation(line: 459, column: 47, scope: !11228)
!11238 = !DILocation(line: 459, column: 28, scope: !11228)
!11239 = !DILocalVariable(name: "i", scope: !11228, file: !841, line: 460, type: !26)
!11240 = !DILocation(line: 460, column: 16, scope: !11228)
!11241 = !DILocation(line: 461, column: 10, scope: !11228)
!11242 = !DILocation(line: 461, column: 16, scope: !11228)
!11243 = !DILocation(line: 462, column: 10, scope: !11228)
!11244 = !DILocation(line: 462, column: 21, scope: !11228)
!11245 = !DILocation(line: 463, column: 10, scope: !11228)
!11246 = !DILocation(line: 463, column: 16, scope: !11228)
!11247 = !DILocation(line: 464, column: 3, scope: !11228)
!11248 = !DILocation(line: 464, column: 10, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !841, line: 464, column: 3)
!11250 = distinct !DILexicalBlock(scope: !11228, file: !841, line: 464, column: 3)
!11251 = !DILocation(line: 464, column: 14, scope: !11249)
!11252 = !DILocation(line: 464, column: 21, scope: !11249)
!11253 = !DILocation(line: 464, column: 12, scope: !11249)
!11254 = !DILocation(line: 464, column: 3, scope: !11250)
!11255 = !DILocalVariable(name: "j", scope: !11256, file: !841, line: 466, type: !26)
!11256 = distinct !DILexicalBlock(scope: !11249, file: !841, line: 465, column: 3)
!11257 = !DILocation(line: 466, column: 18, scope: !11256)
!11258 = !DILocalVariable(name: "this_char", scope: !11256, file: !841, line: 467, type: !17)
!11259 = !DILocation(line: 467, column: 10, scope: !11256)
!11260 = !DILocation(line: 467, column: 22, scope: !11256)
!11261 = !DILocation(line: 467, column: 29, scope: !11256)
!11262 = !DILocation(line: 467, column: 35, scope: !11256)
!11263 = !DILocation(line: 468, column: 5, scope: !11256)
!11264 = !DILocation(line: 468, column: 12, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11266, file: !841, line: 468, column: 5)
!11266 = distinct !DILexicalBlock(scope: !11256, file: !841, line: 468, column: 5)
!11267 = !DILocation(line: 468, column: 16, scope: !11265)
!11268 = !DILocation(line: 468, column: 14, scope: !11265)
!11269 = !DILocation(line: 468, column: 5, scope: !11266)
!11270 = !DILocation(line: 470, column: 11, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11272, file: !841, line: 470, column: 11)
!11272 = distinct !DILexicalBlock(scope: !11265, file: !841, line: 469, column: 5)
!11273 = !DILocation(line: 470, column: 19, scope: !11271)
!11274 = !DILocation(line: 470, column: 25, scope: !11271)
!11275 = !DILocation(line: 470, column: 22, scope: !11271)
!11276 = !DILocation(line: 470, column: 11, scope: !11272)
!11277 = !DILocation(line: 472, column: 16, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11271, file: !841, line: 471, column: 7)
!11279 = !DILocation(line: 472, column: 22, scope: !11278)
!11280 = !DILocation(line: 473, column: 24, scope: !11278)
!11281 = !DILocation(line: 473, column: 16, scope: !11278)
!11282 = !DILocation(line: 473, column: 22, scope: !11278)
!11283 = !DILocation(line: 474, column: 29, scope: !11278)
!11284 = !DILocation(line: 474, column: 37, scope: !11278)
!11285 = !DILocation(line: 474, column: 16, scope: !11278)
!11286 = !DILocation(line: 474, column: 27, scope: !11278)
!11287 = !DILocation(line: 475, column: 16, scope: !11278)
!11288 = !DILocation(line: 475, column: 9, scope: !11278)
!11289 = !DILocation(line: 477, column: 5, scope: !11272)
!11290 = !DILocation(line: 468, column: 27, scope: !11265)
!11291 = !DILocation(line: 468, column: 5, scope: !11265)
!11292 = distinct !{!11292, !11269, !11293}
!11293 = !DILocation(line: 477, column: 5, scope: !11266)
!11294 = !DILocation(line: 478, column: 3, scope: !11256)
!11295 = !DILocation(line: 464, column: 26, scope: !11249)
!11296 = !DILocation(line: 464, column: 3, scope: !11249)
!11297 = distinct !{!11297, !11254, !11298}
!11298 = !DILocation(line: 478, column: 3, scope: !11250)
!11299 = !DILocation(line: 479, column: 10, scope: !11228)
!11300 = !DILocation(line: 479, column: 3, scope: !11228)
!11301 = !DILocation(line: 480, column: 1, scope: !11228)
!11302 = distinct !DISubprogram(name: "str_left", scope: !841, file: !841, line: 543, type: !11303, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{null, !866, !844, !26}
!11305 = !DILocalVariable(name: "p_str", arg: 1, scope: !11302, file: !841, line: 543, type: !866)
!11306 = !DILocation(line: 543, column: 30, scope: !11302)
!11307 = !DILocalVariable(name: "p_out", arg: 2, scope: !11302, file: !841, line: 543, type: !844)
!11308 = !DILocation(line: 543, column: 51, scope: !11302)
!11309 = !DILocalVariable(name: "chars", arg: 3, scope: !11302, file: !841, line: 543, type: !26)
!11310 = !DILocation(line: 543, column: 71, scope: !11302)
!11311 = !DILocation(line: 545, column: 7, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11302, file: !841, line: 545, column: 7)
!11313 = !DILocation(line: 545, column: 15, scope: !11312)
!11314 = !DILocation(line: 545, column: 22, scope: !11312)
!11315 = !DILocation(line: 545, column: 13, scope: !11312)
!11316 = !DILocation(line: 545, column: 7, scope: !11302)
!11317 = !DILocation(line: 547, column: 5, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11312, file: !841, line: 546, column: 3)
!11319 = !DILocation(line: 548, column: 3, scope: !11318)
!11320 = !DILocation(line: 549, column: 30, scope: !11302)
!11321 = !DILocation(line: 549, column: 37, scope: !11302)
!11322 = !DILocation(line: 549, column: 44, scope: !11302)
!11323 = !DILocation(line: 549, column: 51, scope: !11302)
!11324 = !DILocation(line: 549, column: 3, scope: !11302)
!11325 = !DILocation(line: 550, column: 1, scope: !11302)
!11326 = distinct !DISubprogram(name: "str_right", scope: !841, file: !841, line: 553, type: !11303, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11327 = !DILocalVariable(name: "p_str", arg: 1, scope: !11326, file: !841, line: 553, type: !866)
!11328 = !DILocation(line: 553, column: 31, scope: !11326)
!11329 = !DILocalVariable(name: "p_out", arg: 2, scope: !11326, file: !841, line: 553, type: !844)
!11330 = !DILocation(line: 553, column: 52, scope: !11326)
!11331 = !DILocalVariable(name: "chars", arg: 3, scope: !11326, file: !841, line: 553, type: !26)
!11332 = !DILocation(line: 553, column: 72, scope: !11326)
!11333 = !DILocalVariable(name: "indexx", scope: !11326, file: !841, line: 555, type: !26)
!11334 = !DILocation(line: 555, column: 16, scope: !11326)
!11335 = !DILocation(line: 555, column: 25, scope: !11326)
!11336 = !DILocation(line: 555, column: 32, scope: !11326)
!11337 = !DILocation(line: 555, column: 38, scope: !11326)
!11338 = !DILocation(line: 555, column: 36, scope: !11326)
!11339 = !DILocation(line: 556, column: 7, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11326, file: !841, line: 556, column: 7)
!11341 = !DILocation(line: 556, column: 15, scope: !11340)
!11342 = !DILocation(line: 556, column: 22, scope: !11340)
!11343 = !DILocation(line: 556, column: 13, scope: !11340)
!11344 = !DILocation(line: 556, column: 7, scope: !11326)
!11345 = !DILocation(line: 558, column: 5, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11340, file: !841, line: 557, column: 3)
!11347 = !DILocation(line: 559, column: 3, scope: !11346)
!11348 = !DILocation(line: 560, column: 30, scope: !11326)
!11349 = !DILocation(line: 560, column: 37, scope: !11326)
!11350 = !DILocation(line: 560, column: 44, scope: !11326)
!11351 = !DILocation(line: 560, column: 52, scope: !11326)
!11352 = !DILocation(line: 560, column: 50, scope: !11326)
!11353 = !DILocation(line: 560, column: 60, scope: !11326)
!11354 = !DILocation(line: 560, column: 3, scope: !11326)
!11355 = !DILocation(line: 561, column: 1, scope: !11326)
!11356 = distinct !DISubprogram(name: "str_mid_to_end", scope: !841, file: !841, line: 564, type: !11303, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11357 = !DILocalVariable(name: "p_str", arg: 1, scope: !11356, file: !841, line: 564, type: !866)
!11358 = !DILocation(line: 564, column: 36, scope: !11356)
!11359 = !DILocalVariable(name: "p_out", arg: 2, scope: !11356, file: !841, line: 564, type: !844)
!11360 = !DILocation(line: 564, column: 57, scope: !11356)
!11361 = !DILocalVariable(name: "indexx", arg: 3, scope: !11356, file: !841, line: 565, type: !26)
!11362 = !DILocation(line: 565, column: 29, scope: !11356)
!11363 = !DILocation(line: 567, column: 7, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11356, file: !841, line: 567, column: 7)
!11365 = !DILocation(line: 567, column: 16, scope: !11364)
!11366 = !DILocation(line: 567, column: 23, scope: !11364)
!11367 = !DILocation(line: 567, column: 14, scope: !11364)
!11368 = !DILocation(line: 567, column: 7, scope: !11356)
!11369 = !DILocation(line: 569, column: 5, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11364, file: !841, line: 568, column: 3)
!11371 = !DILocation(line: 570, column: 3, scope: !11370)
!11372 = !DILocation(line: 571, column: 30, scope: !11356)
!11373 = !DILocation(line: 571, column: 37, scope: !11356)
!11374 = !DILocation(line: 571, column: 44, scope: !11356)
!11375 = !DILocation(line: 571, column: 52, scope: !11356)
!11376 = !DILocation(line: 571, column: 50, scope: !11356)
!11377 = !DILocation(line: 572, column: 30, scope: !11356)
!11378 = !DILocation(line: 572, column: 37, scope: !11356)
!11379 = !DILocation(line: 572, column: 43, scope: !11356)
!11380 = !DILocation(line: 572, column: 41, scope: !11356)
!11381 = !DILocation(line: 571, column: 3, scope: !11356)
!11382 = !DILocation(line: 573, column: 1, scope: !11356)
!11383 = distinct !DISubprogram(name: "str_get_char_at", scope: !841, file: !841, line: 576, type: !11384, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11384 = !DISubroutineType(types: !11385)
!11385 = !{!17, !866, !850}
!11386 = !DILocalVariable(name: "p_str", arg: 1, scope: !11383, file: !841, line: 576, type: !866)
!11387 = !DILocation(line: 576, column: 37, scope: !11383)
!11388 = !DILocalVariable(name: "indexx", arg: 2, scope: !11383, file: !841, line: 576, type: !850)
!11389 = !DILocation(line: 576, column: 63, scope: !11383)
!11390 = !DILocation(line: 578, column: 7, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11383, file: !841, line: 578, column: 7)
!11392 = !DILocation(line: 578, column: 17, scope: !11391)
!11393 = !DILocation(line: 578, column: 24, scope: !11391)
!11394 = !DILocation(line: 578, column: 14, scope: !11391)
!11395 = !DILocation(line: 578, column: 7, scope: !11383)
!11396 = !DILocation(line: 580, column: 5, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11391, file: !841, line: 579, column: 3)
!11398 = !DILocation(line: 581, column: 3, scope: !11397)
!11399 = !DILocation(line: 582, column: 10, scope: !11383)
!11400 = !DILocation(line: 582, column: 17, scope: !11383)
!11401 = !DILocation(line: 582, column: 23, scope: !11383)
!11402 = !DILocation(line: 582, column: 3, scope: !11383)
!11403 = distinct !DISubprogram(name: "str_contains_space", scope: !841, file: !841, line: 586, type: !10563, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11404 = !DILocalVariable(name: "p_str", arg: 1, scope: !11403, file: !841, line: 586, type: !866)
!11405 = !DILocation(line: 586, column: 40, scope: !11403)
!11406 = !DILocalVariable(name: "i", scope: !11403, file: !841, line: 588, type: !26)
!11407 = !DILocation(line: 588, column: 16, scope: !11403)
!11408 = !DILocation(line: 589, column: 9, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11403, file: !841, line: 589, column: 3)
!11410 = !DILocation(line: 589, column: 8, scope: !11409)
!11411 = !DILocation(line: 589, column: 13, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11409, file: !841, line: 589, column: 3)
!11413 = !DILocation(line: 589, column: 17, scope: !11412)
!11414 = !DILocation(line: 589, column: 24, scope: !11412)
!11415 = !DILocation(line: 589, column: 15, scope: !11412)
!11416 = !DILocation(line: 589, column: 3, scope: !11409)
!11417 = !DILocation(line: 591, column: 29, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !841, line: 591, column: 9)
!11419 = distinct !DILexicalBlock(scope: !11412, file: !841, line: 590, column: 3)
!11420 = !DILocation(line: 591, column: 36, scope: !11418)
!11421 = !DILocation(line: 591, column: 42, scope: !11418)
!11422 = !DILocation(line: 591, column: 9, scope: !11418)
!11423 = !DILocation(line: 591, column: 9, scope: !11419)
!11424 = !DILocation(line: 593, column: 7, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11418, file: !841, line: 592, column: 5)
!11426 = !DILocation(line: 595, column: 3, scope: !11419)
!11427 = !DILocation(line: 589, column: 30, scope: !11412)
!11428 = !DILocation(line: 589, column: 3, scope: !11412)
!11429 = distinct !{!11429, !11416, !11430}
!11430 = !DILocation(line: 595, column: 3, scope: !11409)
!11431 = !DILocation(line: 596, column: 3, scope: !11403)
!11432 = !DILocation(line: 597, column: 1, scope: !11403)
!11433 = distinct !DISubprogram(name: "str_all_space", scope: !841, file: !841, line: 600, type: !10563, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11434 = !DILocalVariable(name: "p_str", arg: 1, scope: !11433, file: !841, line: 600, type: !866)
!11435 = !DILocation(line: 600, column: 35, scope: !11433)
!11436 = !DILocalVariable(name: "i", scope: !11433, file: !841, line: 602, type: !26)
!11437 = !DILocation(line: 602, column: 16, scope: !11433)
!11438 = !DILocation(line: 603, column: 9, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11433, file: !841, line: 603, column: 3)
!11440 = !DILocation(line: 603, column: 8, scope: !11439)
!11441 = !DILocation(line: 603, column: 13, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11439, file: !841, line: 603, column: 3)
!11443 = !DILocation(line: 603, column: 17, scope: !11442)
!11444 = !DILocation(line: 603, column: 24, scope: !11442)
!11445 = !DILocation(line: 603, column: 15, scope: !11442)
!11446 = !DILocation(line: 603, column: 3, scope: !11439)
!11447 = !DILocation(line: 605, column: 30, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !841, line: 605, column: 9)
!11449 = distinct !DILexicalBlock(scope: !11442, file: !841, line: 604, column: 3)
!11450 = !DILocation(line: 605, column: 37, scope: !11448)
!11451 = !DILocation(line: 605, column: 43, scope: !11448)
!11452 = !DILocation(line: 605, column: 10, scope: !11448)
!11453 = !DILocation(line: 605, column: 9, scope: !11449)
!11454 = !DILocation(line: 607, column: 7, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11448, file: !841, line: 606, column: 5)
!11456 = !DILocation(line: 609, column: 3, scope: !11449)
!11457 = !DILocation(line: 603, column: 30, scope: !11442)
!11458 = !DILocation(line: 603, column: 3, scope: !11442)
!11459 = distinct !{!11459, !11446, !11460}
!11460 = !DILocation(line: 609, column: 3, scope: !11439)
!11461 = !DILocation(line: 610, column: 3, scope: !11433)
!11462 = !DILocation(line: 611, column: 1, scope: !11433)
!11463 = distinct !DISubprogram(name: "str_contains_unprintable", scope: !841, file: !841, line: 614, type: !10563, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11464 = !DILocalVariable(name: "p_str", arg: 1, scope: !11463, file: !841, line: 614, type: !866)
!11465 = !DILocation(line: 614, column: 46, scope: !11463)
!11466 = !DILocalVariable(name: "i", scope: !11463, file: !841, line: 616, type: !26)
!11467 = !DILocation(line: 616, column: 16, scope: !11463)
!11468 = !DILocation(line: 617, column: 9, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11463, file: !841, line: 617, column: 3)
!11470 = !DILocation(line: 617, column: 8, scope: !11469)
!11471 = !DILocation(line: 617, column: 13, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11469, file: !841, line: 617, column: 3)
!11473 = !DILocation(line: 617, column: 17, scope: !11472)
!11474 = !DILocation(line: 617, column: 24, scope: !11472)
!11475 = !DILocation(line: 617, column: 15, scope: !11472)
!11476 = !DILocation(line: 617, column: 3, scope: !11469)
!11477 = !DILocation(line: 619, column: 30, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !841, line: 619, column: 9)
!11479 = distinct !DILexicalBlock(scope: !11472, file: !841, line: 618, column: 3)
!11480 = !DILocation(line: 619, column: 37, scope: !11478)
!11481 = !DILocation(line: 619, column: 43, scope: !11478)
!11482 = !DILocation(line: 619, column: 10, scope: !11478)
!11483 = !DILocation(line: 619, column: 9, scope: !11479)
!11484 = !DILocation(line: 621, column: 7, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11478, file: !841, line: 620, column: 5)
!11486 = !DILocation(line: 623, column: 3, scope: !11479)
!11487 = !DILocation(line: 617, column: 30, scope: !11472)
!11488 = !DILocation(line: 617, column: 3, scope: !11472)
!11489 = distinct !{!11489, !11476, !11490}
!11490 = !DILocation(line: 623, column: 3, scope: !11469)
!11491 = !DILocation(line: 624, column: 3, scope: !11463)
!11492 = !DILocation(line: 625, column: 1, scope: !11463)
!11493 = distinct !DISubprogram(name: "str_atoi", scope: !841, file: !841, line: 628, type: !10563, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11494 = !DILocalVariable(name: "p_str", arg: 1, scope: !11493, file: !841, line: 628, type: !866)
!11495 = !DILocation(line: 628, column: 30, scope: !11493)
!11496 = !DILocation(line: 630, column: 38, scope: !11493)
!11497 = !DILocation(line: 630, column: 27, scope: !11493)
!11498 = !DILocation(line: 630, column: 10, scope: !11493)
!11499 = !DILocation(line: 630, column: 3, scope: !11493)
!11500 = distinct !DISubprogram(name: "str_a_to_filesize_t", scope: !841, file: !841, line: 634, type: !11501, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11501 = !DISubroutineType(types: !11502)
!11502 = !{!41, !866}
!11503 = !DILocalVariable(name: "p_str", arg: 1, scope: !11500, file: !841, line: 634, type: !866)
!11504 = !DILocation(line: 634, column: 41, scope: !11500)
!11505 = !DILocation(line: 636, column: 49, scope: !11500)
!11506 = !DILocation(line: 636, column: 38, scope: !11500)
!11507 = !DILocation(line: 636, column: 10, scope: !11500)
!11508 = !DILocation(line: 636, column: 3, scope: !11500)
!11509 = distinct !DISubprogram(name: "str_octal_to_uint", scope: !841, file: !841, line: 640, type: !10572, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11510 = !DILocalVariable(name: "p_str", arg: 1, scope: !11509, file: !841, line: 640, type: !866)
!11511 = !DILocation(line: 640, column: 39, scope: !11509)
!11512 = !DILocation(line: 642, column: 47, scope: !11509)
!11513 = !DILocation(line: 642, column: 36, scope: !11509)
!11514 = !DILocation(line: 642, column: 10, scope: !11509)
!11515 = !DILocation(line: 642, column: 3, scope: !11509)
!11516 = distinct !DISubprogram(name: "str_getline", scope: !841, file: !841, line: 646, type: !11517, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11517 = !DISubroutineType(types: !11518)
!11518 = !{!19, !866, !844, !746}
!11519 = !DILocalVariable(name: "p_str", arg: 1, scope: !11516, file: !841, line: 646, type: !866)
!11520 = !DILocation(line: 646, column: 33, scope: !11516)
!11521 = !DILocalVariable(name: "p_line_str", arg: 2, scope: !11516, file: !841, line: 646, type: !844)
!11522 = !DILocation(line: 646, column: 54, scope: !11516)
!11523 = !DILocalVariable(name: "p_pos", arg: 3, scope: !11516, file: !841, line: 647, type: !746)
!11524 = !DILocation(line: 647, column: 27, scope: !11516)
!11525 = !DILocalVariable(name: "start_pos", scope: !11516, file: !841, line: 649, type: !26)
!11526 = !DILocation(line: 649, column: 16, scope: !11516)
!11527 = !DILocation(line: 649, column: 29, scope: !11516)
!11528 = !DILocation(line: 649, column: 28, scope: !11516)
!11529 = !DILocalVariable(name: "curr_pos", scope: !11516, file: !841, line: 650, type: !26)
!11530 = !DILocation(line: 650, column: 16, scope: !11516)
!11531 = !DILocation(line: 650, column: 27, scope: !11516)
!11532 = !DILocalVariable(name: "buf_len", scope: !11516, file: !841, line: 651, type: !26)
!11533 = !DILocation(line: 651, column: 16, scope: !11516)
!11534 = !DILocation(line: 651, column: 37, scope: !11516)
!11535 = !DILocation(line: 651, column: 26, scope: !11516)
!11536 = !DILocalVariable(name: "p_buf", scope: !11516, file: !841, line: 652, type: !88)
!11537 = !DILocation(line: 652, column: 15, scope: !11516)
!11538 = !DILocation(line: 652, column: 34, scope: !11516)
!11539 = !DILocation(line: 652, column: 23, scope: !11516)
!11540 = !DILocalVariable(name: "out_len", scope: !11516, file: !841, line: 653, type: !26)
!11541 = !DILocation(line: 653, column: 16, scope: !11516)
!11542 = !DILocation(line: 654, column: 7, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11516, file: !841, line: 654, column: 7)
!11544 = !DILocation(line: 654, column: 19, scope: !11543)
!11545 = !DILocation(line: 654, column: 17, scope: !11543)
!11546 = !DILocation(line: 654, column: 7, scope: !11516)
!11547 = !DILocation(line: 656, column: 5, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11543, file: !841, line: 655, column: 3)
!11549 = !DILocation(line: 657, column: 3, scope: !11548)
!11550 = !DILocation(line: 658, column: 13, scope: !11516)
!11551 = !DILocation(line: 658, column: 3, scope: !11516)
!11552 = !DILocation(line: 659, column: 7, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11516, file: !841, line: 659, column: 7)
!11554 = !DILocation(line: 659, column: 20, scope: !11553)
!11555 = !DILocation(line: 659, column: 17, scope: !11553)
!11556 = !DILocation(line: 659, column: 7, scope: !11516)
!11557 = !DILocation(line: 661, column: 5, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11553, file: !841, line: 660, column: 3)
!11559 = !DILocation(line: 663, column: 3, scope: !11516)
!11560 = !DILocation(line: 663, column: 10, scope: !11516)
!11561 = !DILocation(line: 663, column: 21, scope: !11516)
!11562 = !DILocation(line: 663, column: 19, scope: !11516)
!11563 = !DILocation(line: 663, column: 29, scope: !11516)
!11564 = !DILocation(line: 663, column: 32, scope: !11516)
!11565 = !DILocation(line: 663, column: 38, scope: !11516)
!11566 = !DILocation(line: 663, column: 48, scope: !11516)
!11567 = !DILocation(line: 665, column: 13, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11516, file: !841, line: 664, column: 3)
!11569 = !DILocation(line: 666, column: 9, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11568, file: !841, line: 666, column: 9)
!11571 = !DILocation(line: 666, column: 18, scope: !11570)
!11572 = !DILocation(line: 666, column: 9, scope: !11568)
!11573 = !DILocation(line: 668, column: 7, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11570, file: !841, line: 667, column: 5)
!11575 = !DILocation(line: 669, column: 5, scope: !11574)
!11576 = distinct !{!11576, !11559, !11577}
!11577 = !DILocation(line: 670, column: 3, scope: !11516)
!11578 = !DILocation(line: 671, column: 13, scope: !11516)
!11579 = !DILocation(line: 671, column: 24, scope: !11516)
!11580 = !DILocation(line: 671, column: 22, scope: !11516)
!11581 = !DILocation(line: 671, column: 11, scope: !11516)
!11582 = !DILocation(line: 673, column: 7, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11516, file: !841, line: 673, column: 7)
!11584 = !DILocation(line: 673, column: 18, scope: !11583)
!11585 = !DILocation(line: 673, column: 16, scope: !11583)
!11586 = !DILocation(line: 673, column: 26, scope: !11583)
!11587 = !DILocation(line: 673, column: 29, scope: !11583)
!11588 = !DILocation(line: 673, column: 35, scope: !11583)
!11589 = !DILocation(line: 673, column: 45, scope: !11583)
!11590 = !DILocation(line: 673, column: 7, scope: !11516)
!11591 = !DILocation(line: 675, column: 13, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11583, file: !841, line: 674, column: 3)
!11593 = !DILocation(line: 676, column: 9, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11592, file: !841, line: 676, column: 9)
!11595 = !DILocation(line: 676, column: 18, scope: !11594)
!11596 = !DILocation(line: 676, column: 9, scope: !11592)
!11597 = !DILocation(line: 678, column: 7, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11594, file: !841, line: 677, column: 5)
!11599 = !DILocation(line: 679, column: 5, scope: !11598)
!11600 = !DILocation(line: 680, column: 3, scope: !11592)
!11601 = !DILocation(line: 681, column: 30, scope: !11516)
!11602 = !DILocation(line: 681, column: 42, scope: !11516)
!11603 = !DILocation(line: 681, column: 50, scope: !11516)
!11604 = !DILocation(line: 681, column: 48, scope: !11516)
!11605 = !DILocation(line: 681, column: 61, scope: !11516)
!11606 = !DILocation(line: 681, column: 3, scope: !11516)
!11607 = !DILocation(line: 682, column: 12, scope: !11516)
!11608 = !DILocation(line: 682, column: 4, scope: !11516)
!11609 = !DILocation(line: 682, column: 10, scope: !11516)
!11610 = !DILocation(line: 683, column: 3, scope: !11516)
!11611 = !DILocation(line: 684, column: 1, scope: !11516)
!11612 = !DILocalVariable(name: "p_str", arg: 1, scope: !863, file: !841, line: 687, type: !866)
!11613 = !DILocation(line: 687, column: 39, scope: !863)
!11614 = !DILocalVariable(name: "p_line_str", arg: 2, scope: !863, file: !841, line: 687, type: !866)
!11615 = !DILocation(line: 687, column: 66, scope: !863)
!11616 = !DILocalVariable(name: "pos", scope: !863, file: !841, line: 690, type: !26)
!11617 = !DILocation(line: 690, column: 16, scope: !863)
!11618 = !DILocation(line: 691, column: 3, scope: !863)
!11619 = !DILocation(line: 691, column: 22, scope: !863)
!11620 = !DILocation(line: 691, column: 10, scope: !863)
!11621 = !DILocation(line: 693, column: 37, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11623, file: !841, line: 693, column: 9)
!11623 = distinct !DILexicalBlock(scope: !863, file: !841, line: 692, column: 3)
!11624 = !DILocation(line: 693, column: 9, scope: !11622)
!11625 = !DILocation(line: 693, column: 9, scope: !11623)
!11626 = !DILocation(line: 695, column: 7, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11622, file: !841, line: 694, column: 5)
!11628 = distinct !{!11628, !11618, !11629}
!11629 = !DILocation(line: 697, column: 3, scope: !863)
!11630 = !DILocation(line: 698, column: 3, scope: !863)
!11631 = !DILocation(line: 699, column: 1, scope: !863)
!11632 = distinct !DISubprogram(name: "str_replace_unprintable", scope: !841, file: !841, line: 702, type: !10697, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !128)
!11633 = !DILocalVariable(name: "p_str", arg: 1, scope: !11632, file: !841, line: 702, type: !844)
!11634 = !DILocation(line: 702, column: 39, scope: !11632)
!11635 = !DILocalVariable(name: "new_char", arg: 2, scope: !11632, file: !841, line: 702, type: !17)
!11636 = !DILocation(line: 702, column: 51, scope: !11632)
!11637 = !DILocalVariable(name: "i", scope: !11632, file: !841, line: 704, type: !26)
!11638 = !DILocation(line: 704, column: 16, scope: !11632)
!11639 = !DILocation(line: 705, column: 9, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11632, file: !841, line: 705, column: 3)
!11641 = !DILocation(line: 705, column: 8, scope: !11640)
!11642 = !DILocation(line: 705, column: 13, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11640, file: !841, line: 705, column: 3)
!11644 = !DILocation(line: 705, column: 17, scope: !11643)
!11645 = !DILocation(line: 705, column: 24, scope: !11643)
!11646 = !DILocation(line: 705, column: 15, scope: !11643)
!11647 = !DILocation(line: 705, column: 3, scope: !11640)
!11648 = !DILocation(line: 707, column: 30, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11650, file: !841, line: 707, column: 9)
!11650 = distinct !DILexicalBlock(scope: !11643, file: !841, line: 706, column: 3)
!11651 = !DILocation(line: 707, column: 37, scope: !11649)
!11652 = !DILocation(line: 707, column: 43, scope: !11649)
!11653 = !DILocation(line: 707, column: 10, scope: !11649)
!11654 = !DILocation(line: 707, column: 9, scope: !11650)
!11655 = !DILocation(line: 709, column: 25, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11649, file: !841, line: 708, column: 5)
!11657 = !DILocation(line: 709, column: 7, scope: !11656)
!11658 = !DILocation(line: 709, column: 14, scope: !11656)
!11659 = !DILocation(line: 709, column: 20, scope: !11656)
!11660 = !DILocation(line: 709, column: 23, scope: !11656)
!11661 = !DILocation(line: 710, column: 5, scope: !11656)
!11662 = !DILocation(line: 711, column: 3, scope: !11650)
!11663 = !DILocation(line: 705, column: 30, scope: !11643)
!11664 = !DILocation(line: 705, column: 3, scope: !11643)
!11665 = distinct !{!11665, !11647, !11666}
!11666 = !DILocation(line: 711, column: 3, scope: !11640)
!11667 = !DILocation(line: 712, column: 1, scope: !11632)
!11668 = distinct !DISubprogram(name: "str_netfd_alloc", scope: !1849, file: !1849, line: 19, type: !11669, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !128)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!19, !11671, !11674, !17, !16, !26, !11680, !11680}
!11671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11672, size: 64)
!11672 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !11673, line: 5, flags: DIFlagFwdDecl)
!11673 = !DIFile(filename: "./netstr.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!11674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11675, size: 64)
!11675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !11676)
!11676 = !{!11677, !11678, !11679}
!11677 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !11675, file: !34, line: 12, baseType: !16, size: 64)
!11678 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !11675, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !11675, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!11680 = !DIDerivedType(tag: DW_TAG_typedef, name: "str_netfd_read_t", file: !11673, line: 7, baseType: !11681)
!11681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11682, size: 64)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{!19, !11671, !16, !26}
!11684 = !DILocalVariable(name: "p_sess", arg: 1, scope: !11668, file: !1849, line: 19, type: !11671)
!11685 = !DILocation(line: 19, column: 37, scope: !11668)
!11686 = !DILocalVariable(name: "p_str", arg: 2, scope: !11668, file: !1849, line: 20, type: !11674)
!11687 = !DILocation(line: 20, column: 31, scope: !11668)
!11688 = !DILocalVariable(name: "term", arg: 3, scope: !11668, file: !1849, line: 21, type: !17)
!11689 = !DILocation(line: 21, column: 22, scope: !11668)
!11690 = !DILocalVariable(name: "p_readbuf", arg: 4, scope: !11668, file: !1849, line: 22, type: !16)
!11691 = !DILocation(line: 22, column: 23, scope: !11668)
!11692 = !DILocalVariable(name: "maxlen", arg: 5, scope: !11668, file: !1849, line: 23, type: !26)
!11693 = !DILocation(line: 23, column: 30, scope: !11668)
!11694 = !DILocalVariable(name: "p_peekfunc", arg: 6, scope: !11668, file: !1849, line: 24, type: !11680)
!11695 = !DILocation(line: 24, column: 34, scope: !11668)
!11696 = !DILocalVariable(name: "p_readfunc", arg: 7, scope: !11668, file: !1849, line: 25, type: !11680)
!11697 = !DILocation(line: 25, column: 34, scope: !11668)
!11698 = !DILocalVariable(name: "retval", scope: !11668, file: !1849, line: 27, type: !19)
!11699 = !DILocation(line: 27, column: 7, scope: !11668)
!11700 = !DILocalVariable(name: "bytes_read", scope: !11668, file: !1849, line: 28, type: !26)
!11701 = !DILocation(line: 28, column: 16, scope: !11668)
!11702 = !DILocalVariable(name: "i", scope: !11668, file: !1849, line: 29, type: !26)
!11703 = !DILocation(line: 29, column: 16, scope: !11668)
!11704 = !DILocalVariable(name: "p_readpos", scope: !11668, file: !1849, line: 30, type: !16)
!11705 = !DILocation(line: 30, column: 9, scope: !11668)
!11706 = !DILocation(line: 30, column: 21, scope: !11668)
!11707 = !DILocalVariable(name: "left", scope: !11668, file: !1849, line: 31, type: !26)
!11708 = !DILocation(line: 31, column: 16, scope: !11668)
!11709 = !DILocation(line: 31, column: 23, scope: !11668)
!11710 = !DILocation(line: 32, column: 13, scope: !11668)
!11711 = !DILocation(line: 32, column: 3, scope: !11668)
!11712 = !DILocation(line: 33, column: 3, scope: !11668)
!11713 = !DILocation(line: 35, column: 9, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !1849, line: 35, column: 9)
!11715 = distinct !DILexicalBlock(scope: !11668, file: !1849, line: 34, column: 3)
!11716 = !DILocation(line: 35, column: 21, scope: !11714)
!11717 = !DILocation(line: 35, column: 19, scope: !11714)
!11718 = !DILocation(line: 35, column: 29, scope: !11714)
!11719 = !DILocation(line: 35, column: 41, scope: !11714)
!11720 = !DILocation(line: 35, column: 39, scope: !11714)
!11721 = !DILocation(line: 35, column: 26, scope: !11714)
!11722 = !DILocation(line: 35, column: 9, scope: !11715)
!11723 = !DILocation(line: 37, column: 7, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11714, file: !1849, line: 36, column: 5)
!11725 = !DILocation(line: 38, column: 5, scope: !11724)
!11726 = !DILocation(line: 40, column: 9, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11715, file: !1849, line: 40, column: 9)
!11728 = !DILocation(line: 40, column: 14, scope: !11727)
!11729 = !DILocation(line: 40, column: 9, scope: !11715)
!11730 = !DILocation(line: 42, column: 7, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11727, file: !1849, line: 41, column: 5)
!11732 = !DILocation(line: 44, column: 16, scope: !11715)
!11733 = !DILocation(line: 44, column: 28, scope: !11715)
!11734 = !DILocation(line: 44, column: 36, scope: !11715)
!11735 = !DILocation(line: 44, column: 47, scope: !11715)
!11736 = !DILocation(line: 44, column: 14, scope: !11715)
!11737 = !DILocation(line: 44, column: 12, scope: !11715)
!11738 = !DILocation(line: 45, column: 37, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11715, file: !1849, line: 45, column: 9)
!11740 = !DILocation(line: 45, column: 9, scope: !11739)
!11741 = !DILocation(line: 45, column: 9, scope: !11715)
!11742 = !DILocation(line: 47, column: 7, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11739, file: !1849, line: 46, column: 5)
!11744 = !DILocation(line: 48, column: 5, scope: !11743)
!11745 = !DILocation(line: 49, column: 14, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11739, file: !1849, line: 49, column: 14)
!11747 = !DILocation(line: 49, column: 21, scope: !11746)
!11748 = !DILocation(line: 49, column: 14, scope: !11739)
!11749 = !DILocation(line: 51, column: 7, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11746, file: !1849, line: 50, column: 5)
!11751 = !DILocation(line: 53, column: 33, scope: !11715)
!11752 = !DILocation(line: 53, column: 16, scope: !11715)
!11753 = !DILocation(line: 55, column: 11, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11715, file: !1849, line: 55, column: 5)
!11755 = !DILocation(line: 55, column: 10, scope: !11754)
!11756 = !DILocation(line: 55, column: 15, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11754, file: !1849, line: 55, column: 5)
!11758 = !DILocation(line: 55, column: 19, scope: !11757)
!11759 = !DILocation(line: 55, column: 17, scope: !11757)
!11760 = !DILocation(line: 55, column: 5, scope: !11754)
!11761 = !DILocation(line: 57, column: 11, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11763, file: !1849, line: 57, column: 11)
!11763 = distinct !DILexicalBlock(scope: !11757, file: !1849, line: 56, column: 5)
!11764 = !DILocation(line: 57, column: 21, scope: !11762)
!11765 = !DILocation(line: 57, column: 27, scope: !11762)
!11766 = !DILocation(line: 57, column: 24, scope: !11762)
!11767 = !DILocation(line: 57, column: 11, scope: !11763)
!11768 = !DILocation(line: 60, column: 10, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11762, file: !1849, line: 58, column: 7)
!11770 = !DILocation(line: 61, column: 20, scope: !11769)
!11771 = !DILocation(line: 61, column: 32, scope: !11769)
!11772 = !DILocation(line: 61, column: 40, scope: !11769)
!11773 = !DILocation(line: 61, column: 51, scope: !11769)
!11774 = !DILocation(line: 61, column: 18, scope: !11769)
!11775 = !DILocation(line: 61, column: 16, scope: !11769)
!11776 = !DILocation(line: 62, column: 41, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11769, file: !1849, line: 62, column: 13)
!11778 = !DILocation(line: 62, column: 13, scope: !11777)
!11779 = !DILocation(line: 62, column: 49, scope: !11777)
!11780 = !DILocation(line: 63, column: 28, scope: !11777)
!11781 = !DILocation(line: 63, column: 38, scope: !11777)
!11782 = !DILocation(line: 63, column: 35, scope: !11777)
!11783 = !DILocation(line: 62, column: 13, scope: !11769)
!11784 = !DILocation(line: 65, column: 11, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11777, file: !1849, line: 64, column: 9)
!11786 = !DILocation(line: 66, column: 9, scope: !11785)
!11787 = !DILocation(line: 67, column: 13, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11769, file: !1849, line: 67, column: 13)
!11789 = !DILocation(line: 67, column: 23, scope: !11788)
!11790 = !DILocation(line: 67, column: 25, scope: !11788)
!11791 = !DILocation(line: 67, column: 33, scope: !11788)
!11792 = !DILocation(line: 67, column: 30, scope: !11788)
!11793 = !DILocation(line: 67, column: 13, scope: !11769)
!11794 = !DILocation(line: 69, column: 11, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11788, file: !1849, line: 68, column: 9)
!11796 = !DILocation(line: 70, column: 9, scope: !11795)
!11797 = !DILocation(line: 71, column: 28, scope: !11769)
!11798 = !DILocation(line: 71, column: 35, scope: !11769)
!11799 = !DILocation(line: 71, column: 46, scope: !11769)
!11800 = !DILocation(line: 71, column: 9, scope: !11769)
!11801 = !DILocation(line: 72, column: 22, scope: !11769)
!11802 = !DILocation(line: 72, column: 9, scope: !11769)
!11803 = !DILocation(line: 74, column: 5, scope: !11763)
!11804 = !DILocation(line: 55, column: 32, scope: !11757)
!11805 = !DILocation(line: 55, column: 5, scope: !11757)
!11806 = distinct !{!11806, !11760, !11807}
!11807 = !DILocation(line: 74, column: 5, scope: !11754)
!11808 = !DILocation(line: 76, column: 9, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11715, file: !1849, line: 76, column: 9)
!11810 = !DILocation(line: 76, column: 22, scope: !11809)
!11811 = !DILocation(line: 76, column: 20, scope: !11809)
!11812 = !DILocation(line: 76, column: 9, scope: !11715)
!11813 = !DILocation(line: 78, column: 7, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11809, file: !1849, line: 77, column: 5)
!11815 = !DILocation(line: 79, column: 5, scope: !11814)
!11816 = !DILocation(line: 80, column: 13, scope: !11715)
!11817 = !DILocation(line: 80, column: 10, scope: !11715)
!11818 = !DILocation(line: 81, column: 16, scope: !11715)
!11819 = !DILocation(line: 81, column: 28, scope: !11715)
!11820 = !DILocation(line: 81, column: 36, scope: !11715)
!11821 = !DILocation(line: 81, column: 47, scope: !11715)
!11822 = !DILocation(line: 81, column: 14, scope: !11715)
!11823 = !DILocation(line: 81, column: 12, scope: !11715)
!11824 = !DILocation(line: 82, column: 37, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11715, file: !1849, line: 82, column: 9)
!11826 = !DILocation(line: 82, column: 9, scope: !11825)
!11827 = !DILocation(line: 82, column: 45, scope: !11825)
!11828 = !DILocation(line: 83, column: 24, scope: !11825)
!11829 = !DILocation(line: 83, column: 34, scope: !11825)
!11830 = !DILocation(line: 83, column: 31, scope: !11825)
!11831 = !DILocation(line: 82, column: 9, scope: !11715)
!11832 = !DILocation(line: 85, column: 7, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11825, file: !1849, line: 84, column: 5)
!11834 = !DILocation(line: 86, column: 5, scope: !11833)
!11835 = !DILocation(line: 87, column: 18, scope: !11715)
!11836 = !DILocation(line: 87, column: 15, scope: !11715)
!11837 = distinct !{!11837, !11712, !11838}
!11838 = !DILocation(line: 88, column: 3, scope: !11668)
!11839 = !DILocation(line: 89, column: 1, scope: !11668)
!11840 = distinct !DISubprogram(name: "str_netfd_write", scope: !1849, file: !1849, line: 92, type: !11841, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !128)
!11841 = !DISubroutineType(types: !11842)
!11842 = !{!19, !11843, !19}
!11843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11844, size: 64)
!11844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11675)
!11845 = !DILocalVariable(name: "p_str", arg: 1, scope: !11840, file: !1849, line: 92, type: !11843)
!11846 = !DILocation(line: 92, column: 37, scope: !11840)
!11847 = !DILocalVariable(name: "fd", arg: 2, scope: !11840, file: !1849, line: 92, type: !19)
!11848 = !DILocation(line: 92, column: 48, scope: !11840)
!11849 = !DILocalVariable(name: "ret", scope: !11840, file: !1849, line: 94, type: !19)
!11850 = !DILocation(line: 94, column: 7, scope: !11840)
!11851 = !DILocalVariable(name: "retval", scope: !11840, file: !1849, line: 95, type: !19)
!11852 = !DILocation(line: 95, column: 7, scope: !11840)
!11853 = !DILocalVariable(name: "str_len", scope: !11840, file: !1849, line: 96, type: !26)
!11854 = !DILocation(line: 96, column: 16, scope: !11840)
!11855 = !DILocation(line: 96, column: 37, scope: !11840)
!11856 = !DILocation(line: 96, column: 26, scope: !11840)
!11857 = !DILocation(line: 97, column: 7, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11840, file: !1849, line: 97, column: 7)
!11859 = !DILocation(line: 97, column: 15, scope: !11858)
!11860 = !DILocation(line: 97, column: 7, scope: !11840)
!11861 = !DILocation(line: 99, column: 5, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11858, file: !1849, line: 98, column: 3)
!11863 = !DILocation(line: 100, column: 3, scope: !11862)
!11864 = !DILocation(line: 101, column: 27, scope: !11840)
!11865 = !DILocation(line: 101, column: 34, scope: !11840)
!11866 = !DILocation(line: 101, column: 12, scope: !11840)
!11867 = !DILocation(line: 101, column: 10, scope: !11840)
!11868 = !DILocation(line: 102, column: 35, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11840, file: !1849, line: 102, column: 7)
!11870 = !DILocation(line: 102, column: 7, scope: !11869)
!11871 = !DILocation(line: 102, column: 43, scope: !11869)
!11872 = !DILocation(line: 102, column: 61, scope: !11869)
!11873 = !DILocation(line: 102, column: 71, scope: !11869)
!11874 = !DILocation(line: 102, column: 68, scope: !11869)
!11875 = !DILocation(line: 102, column: 7, scope: !11840)
!11876 = !DILocation(line: 104, column: 9, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11869, file: !1849, line: 103, column: 3)
!11878 = !DILocation(line: 105, column: 3, scope: !11877)
!11879 = !DILocation(line: 106, column: 10, scope: !11840)
!11880 = !DILocation(line: 106, column: 3, scope: !11840)
!11881 = distinct !DISubprogram(name: "str_netfd_read", scope: !1849, file: !1849, line: 110, type: !11882, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !128)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!19, !11674, !19, !26}
!11884 = !DILocalVariable(name: "p_str", arg: 1, scope: !11881, file: !1849, line: 110, type: !11674)
!11885 = !DILocation(line: 110, column: 30, scope: !11881)
!11886 = !DILocalVariable(name: "fd", arg: 2, scope: !11881, file: !1849, line: 110, type: !19)
!11887 = !DILocation(line: 110, column: 41, scope: !11881)
!11888 = !DILocalVariable(name: "len", arg: 3, scope: !11881, file: !1849, line: 110, type: !26)
!11889 = !DILocation(line: 110, column: 58, scope: !11881)
!11890 = !DILocalVariable(name: "retval", scope: !11881, file: !1849, line: 112, type: !19)
!11891 = !DILocation(line: 112, column: 7, scope: !11881)
!11892 = !DILocation(line: 113, column: 15, scope: !11881)
!11893 = !DILocation(line: 113, column: 22, scope: !11881)
!11894 = !DILocation(line: 113, column: 3, scope: !11881)
!11895 = !DILocation(line: 114, column: 13, scope: !11881)
!11896 = !DILocation(line: 114, column: 20, scope: !11881)
!11897 = !DILocation(line: 114, column: 3, scope: !11881)
!11898 = !DILocation(line: 115, column: 26, scope: !11881)
!11899 = !DILocation(line: 115, column: 33, scope: !11881)
!11900 = !DILocation(line: 115, column: 12, scope: !11881)
!11901 = !DILocation(line: 115, column: 10, scope: !11881)
!11902 = !DILocation(line: 116, column: 35, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11881, file: !1849, line: 116, column: 7)
!11904 = !DILocation(line: 116, column: 7, scope: !11903)
!11905 = !DILocation(line: 116, column: 43, scope: !11903)
!11906 = !DILocation(line: 116, column: 61, scope: !11903)
!11907 = !DILocation(line: 116, column: 71, scope: !11903)
!11908 = !DILocation(line: 116, column: 68, scope: !11903)
!11909 = !DILocation(line: 116, column: 7, scope: !11881)
!11910 = !DILocation(line: 118, column: 5, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11903, file: !1849, line: 117, column: 3)
!11912 = !DILocation(line: 120, column: 10, scope: !11881)
!11913 = !DILocation(line: 120, column: 3, scope: !11881)
!11914 = !DILocation(line: 121, column: 1, scope: !11881)
!11915 = !DILocalVariable(name: "p_str", arg: 1, scope: !870, file: !871, line: 20, type: !874)
!11916 = !DILocation(line: 20, column: 26, scope: !870)
!11917 = !DILocalVariable(name: "p_ret", scope: !870, file: !871, line: 23, type: !16)
!11918 = !DILocation(line: 23, column: 9, scope: !870)
!11919 = !DILocation(line: 24, column: 7, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !870, file: !871, line: 24, column: 7)
!11921 = !DILocation(line: 24, column: 20, scope: !11920)
!11922 = !DILocation(line: 24, column: 7, scope: !870)
!11923 = !DILocation(line: 26, column: 5, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11920, file: !871, line: 25, column: 3)
!11925 = !DILocation(line: 27, column: 3, scope: !11924)
!11926 = !DILocation(line: 29, column: 13, scope: !870)
!11927 = !DILocation(line: 29, column: 3, scope: !870)
!11928 = !DILocation(line: 30, column: 30, scope: !870)
!11929 = !DILocation(line: 30, column: 11, scope: !870)
!11930 = !DILocation(line: 30, column: 9, scope: !870)
!11931 = !DILocation(line: 31, column: 7, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !870, file: !871, line: 31, column: 7)
!11933 = !DILocation(line: 31, column: 13, scope: !11932)
!11934 = !DILocation(line: 31, column: 7, scope: !870)
!11935 = !DILocation(line: 33, column: 20, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11932, file: !871, line: 32, column: 3)
!11937 = !DILocation(line: 33, column: 27, scope: !11936)
!11938 = !DILocation(line: 33, column: 5, scope: !11936)
!11939 = !DILocation(line: 34, column: 3, scope: !11936)
!11940 = !DILocation(line: 35, column: 1, scope: !870)
!11941 = distinct !DISubprogram(name: "str_write_loop", scope: !871, file: !871, line: 38, type: !11942, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!19, !893, !1782}
!11944 = !DILocalVariable(name: "p_str", arg: 1, scope: !11941, file: !871, line: 38, type: !893)
!11945 = !DILocation(line: 38, column: 36, scope: !11941)
!11946 = !DILocalVariable(name: "fd", arg: 2, scope: !11941, file: !871, line: 38, type: !1782)
!11947 = !DILocation(line: 38, column: 53, scope: !11941)
!11948 = !DILocation(line: 40, column: 33, scope: !11941)
!11949 = !DILocation(line: 40, column: 48, scope: !11941)
!11950 = !DILocation(line: 40, column: 37, scope: !11941)
!11951 = !DILocation(line: 40, column: 67, scope: !11941)
!11952 = !DILocation(line: 40, column: 56, scope: !11941)
!11953 = !DILocation(line: 40, column: 10, scope: !11941)
!11954 = !DILocation(line: 40, column: 3, scope: !11941)
!11955 = distinct !DISubprogram(name: "str_read_loop", scope: !871, file: !871, line: 44, type: !11956, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!11956 = !DISubroutineType(types: !11957)
!11957 = !{!19, !874, !1782}
!11958 = !DILocalVariable(name: "p_str", arg: 1, scope: !11955, file: !871, line: 44, type: !874)
!11959 = !DILocation(line: 44, column: 29, scope: !11955)
!11960 = !DILocalVariable(name: "fd", arg: 2, scope: !11955, file: !871, line: 44, type: !1782)
!11961 = !DILocation(line: 44, column: 46, scope: !11955)
!11962 = !DILocation(line: 47, column: 5, scope: !11955)
!11963 = !DILocation(line: 47, column: 28, scope: !11955)
!11964 = !DILocation(line: 47, column: 17, scope: !11955)
!11965 = !DILocation(line: 47, column: 47, scope: !11955)
!11966 = !DILocation(line: 47, column: 36, scope: !11955)
!11967 = !DILocation(line: 46, column: 10, scope: !11955)
!11968 = !DILocation(line: 46, column: 3, scope: !11955)
!11969 = distinct !DISubprogram(name: "str_mkdir", scope: !871, file: !871, line: 51, type: !11970, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!11970 = !DISubroutineType(types: !11971)
!11971 = !{!19, !893, !850}
!11972 = !DILocalVariable(name: "p_str", arg: 1, scope: !11969, file: !871, line: 51, type: !893)
!11973 = !DILocation(line: 51, column: 31, scope: !11969)
!11974 = !DILocalVariable(name: "mode", arg: 2, scope: !11969, file: !871, line: 51, type: !850)
!11975 = !DILocation(line: 51, column: 57, scope: !11969)
!11976 = !DILocation(line: 53, column: 39, scope: !11969)
!11977 = !DILocation(line: 53, column: 28, scope: !11969)
!11978 = !DILocation(line: 53, column: 47, scope: !11969)
!11979 = !DILocation(line: 53, column: 10, scope: !11969)
!11980 = !DILocation(line: 53, column: 3, scope: !11969)
!11981 = distinct !DISubprogram(name: "str_rmdir", scope: !871, file: !871, line: 57, type: !11982, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!11982 = !DISubroutineType(types: !11983)
!11983 = !{!19, !893}
!11984 = !DILocalVariable(name: "p_str", arg: 1, scope: !11981, file: !871, line: 57, type: !893)
!11985 = !DILocation(line: 57, column: 31, scope: !11981)
!11986 = !DILocation(line: 59, column: 39, scope: !11981)
!11987 = !DILocation(line: 59, column: 28, scope: !11981)
!11988 = !DILocation(line: 59, column: 10, scope: !11981)
!11989 = !DILocation(line: 59, column: 3, scope: !11981)
!11990 = distinct !DISubprogram(name: "str_unlink", scope: !871, file: !871, line: 63, type: !11982, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!11991 = !DILocalVariable(name: "p_str", arg: 1, scope: !11990, file: !871, line: 63, type: !893)
!11992 = !DILocation(line: 63, column: 32, scope: !11990)
!11993 = !DILocation(line: 65, column: 40, scope: !11990)
!11994 = !DILocation(line: 65, column: 29, scope: !11990)
!11995 = !DILocation(line: 65, column: 10, scope: !11990)
!11996 = !DILocation(line: 65, column: 3, scope: !11990)
!11997 = distinct !DISubprogram(name: "str_chdir", scope: !871, file: !871, line: 69, type: !11982, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!11998 = !DILocalVariable(name: "p_str", arg: 1, scope: !11997, file: !871, line: 69, type: !893)
!11999 = !DILocation(line: 69, column: 31, scope: !11997)
!12000 = !DILocation(line: 71, column: 39, scope: !11997)
!12001 = !DILocation(line: 71, column: 28, scope: !11997)
!12002 = !DILocation(line: 71, column: 10, scope: !11997)
!12003 = !DILocation(line: 71, column: 3, scope: !11997)
!12004 = distinct !DISubprogram(name: "str_open", scope: !871, file: !871, line: 75, type: !12005, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12005 = !DISubroutineType(types: !12006)
!12006 = !{!19, !893, !12007}
!12007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !219)
!12008 = !DILocalVariable(name: "p_str", arg: 1, scope: !12004, file: !871, line: 75, type: !893)
!12009 = !DILocation(line: 75, column: 30, scope: !12004)
!12010 = !DILocalVariable(name: "mode", arg: 2, scope: !12004, file: !871, line: 75, type: !12007)
!12011 = !DILocation(line: 75, column: 67, scope: !12004)
!12012 = !DILocalVariable(name: "open_mode", scope: !12004, file: !871, line: 77, type: !882)
!12013 = !DILocation(line: 77, column: 28, scope: !12004)
!12014 = !DILocation(line: 78, column: 11, scope: !12004)
!12015 = !DILocation(line: 78, column: 3, scope: !12004)
!12016 = !DILocation(line: 81, column: 17, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12004, file: !871, line: 79, column: 3)
!12018 = !DILocation(line: 82, column: 7, scope: !12017)
!12019 = !DILocation(line: 86, column: 7, scope: !12017)
!12020 = !DILocation(line: 87, column: 7, scope: !12017)
!12021 = !DILocation(line: 89, column: 43, scope: !12004)
!12022 = !DILocation(line: 89, column: 32, scope: !12004)
!12023 = !DILocation(line: 89, column: 51, scope: !12004)
!12024 = !DILocation(line: 89, column: 10, scope: !12004)
!12025 = !DILocation(line: 89, column: 3, scope: !12004)
!12026 = distinct !DISubprogram(name: "str_stat", scope: !871, file: !871, line: 93, type: !12027, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12027 = !DISubroutineType(types: !12028)
!12028 = !{!19, !893, !12029}
!12029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!12030 = !DILocalVariable(name: "p_str", arg: 1, scope: !12026, file: !871, line: 93, type: !893)
!12031 = !DILocation(line: 93, column: 30, scope: !12026)
!12032 = !DILocalVariable(name: "p_ptr", arg: 2, scope: !12026, file: !871, line: 93, type: !12029)
!12033 = !DILocation(line: 93, column: 66, scope: !12026)
!12034 = !DILocation(line: 95, column: 38, scope: !12026)
!12035 = !DILocation(line: 95, column: 27, scope: !12026)
!12036 = !DILocation(line: 95, column: 46, scope: !12026)
!12037 = !DILocation(line: 95, column: 10, scope: !12026)
!12038 = !DILocation(line: 95, column: 3, scope: !12026)
!12039 = distinct !DISubprogram(name: "str_lstat", scope: !871, file: !871, line: 99, type: !12027, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12040 = !DILocalVariable(name: "p_str", arg: 1, scope: !12039, file: !871, line: 99, type: !893)
!12041 = !DILocation(line: 99, column: 31, scope: !12039)
!12042 = !DILocalVariable(name: "p_ptr", arg: 2, scope: !12039, file: !871, line: 99, type: !12029)
!12043 = !DILocation(line: 99, column: 67, scope: !12039)
!12044 = !DILocation(line: 101, column: 39, scope: !12039)
!12045 = !DILocation(line: 101, column: 28, scope: !12039)
!12046 = !DILocation(line: 101, column: 47, scope: !12039)
!12047 = !DILocation(line: 101, column: 10, scope: !12039)
!12048 = !DILocation(line: 101, column: 3, scope: !12039)
!12049 = distinct !DISubprogram(name: "str_create_exclusive", scope: !871, file: !871, line: 105, type: !11982, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12050 = !DILocalVariable(name: "p_str", arg: 1, scope: !12049, file: !871, line: 105, type: !893)
!12051 = !DILocation(line: 105, column: 42, scope: !12049)
!12052 = !DILocation(line: 107, column: 55, scope: !12049)
!12053 = !DILocation(line: 107, column: 44, scope: !12049)
!12054 = !DILocation(line: 107, column: 10, scope: !12049)
!12055 = !DILocation(line: 107, column: 3, scope: !12049)
!12056 = distinct !DISubprogram(name: "str_create", scope: !871, file: !871, line: 111, type: !11982, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12057 = !DILocalVariable(name: "p_str", arg: 1, scope: !12056, file: !871, line: 111, type: !893)
!12058 = !DILocation(line: 111, column: 32, scope: !12056)
!12059 = !DILocation(line: 114, column: 18, scope: !12056)
!12060 = !DILocation(line: 114, column: 7, scope: !12056)
!12061 = !DILocation(line: 114, column: 26, scope: !12056)
!12062 = !DILocation(line: 113, column: 10, scope: !12056)
!12063 = !DILocation(line: 113, column: 3, scope: !12056)
!12064 = distinct !DISubprogram(name: "str_chmod", scope: !871, file: !871, line: 118, type: !12065, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12065 = !DISubroutineType(types: !12066)
!12066 = !{!19, !893, !26}
!12067 = !DILocalVariable(name: "p_str", arg: 1, scope: !12064, file: !871, line: 118, type: !893)
!12068 = !DILocation(line: 118, column: 31, scope: !12064)
!12069 = !DILocalVariable(name: "mode", arg: 2, scope: !12064, file: !871, line: 118, type: !26)
!12070 = !DILocation(line: 118, column: 51, scope: !12064)
!12071 = !DILocation(line: 120, column: 39, scope: !12064)
!12072 = !DILocation(line: 120, column: 28, scope: !12064)
!12073 = !DILocation(line: 120, column: 47, scope: !12064)
!12074 = !DILocation(line: 120, column: 10, scope: !12064)
!12075 = !DILocation(line: 120, column: 3, scope: !12064)
!12076 = distinct !DISubprogram(name: "str_rename", scope: !871, file: !871, line: 124, type: !12077, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12077 = !DISubroutineType(types: !12078)
!12078 = !{!19, !893, !893}
!12079 = !DILocalVariable(name: "p_from_str", arg: 1, scope: !12076, file: !871, line: 124, type: !893)
!12080 = !DILocation(line: 124, column: 32, scope: !12076)
!12081 = !DILocalVariable(name: "p_to_str", arg: 2, scope: !12076, file: !871, line: 124, type: !893)
!12082 = !DILocation(line: 124, column: 64, scope: !12076)
!12083 = !DILocation(line: 126, column: 40, scope: !12076)
!12084 = !DILocation(line: 126, column: 29, scope: !12076)
!12085 = !DILocation(line: 126, column: 64, scope: !12076)
!12086 = !DILocation(line: 126, column: 53, scope: !12076)
!12087 = !DILocation(line: 126, column: 10, scope: !12076)
!12088 = !DILocation(line: 126, column: 3, scope: !12076)
!12089 = distinct !DISubprogram(name: "str_opendir", scope: !871, file: !871, line: 130, type: !12090, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12090 = !DISubroutineType(types: !12091)
!12091 = !{!12092, !893}
!12092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12093, size: 64)
!12093 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_dir", file: !220, line: 7, flags: DIFlagFwdDecl)
!12094 = !DILocalVariable(name: "p_str", arg: 1, scope: !12089, file: !871, line: 130, type: !893)
!12095 = !DILocation(line: 130, column: 33, scope: !12089)
!12096 = !DILocation(line: 132, column: 41, scope: !12089)
!12097 = !DILocation(line: 132, column: 30, scope: !12089)
!12098 = !DILocation(line: 132, column: 10, scope: !12089)
!12099 = !DILocation(line: 132, column: 3, scope: !12089)
!12100 = distinct !DISubprogram(name: "str_next_dirent", scope: !871, file: !871, line: 136, type: !12101, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12101 = !DISubroutineType(types: !12102)
!12102 = !{null, !874, !12092}
!12103 = !DILocalVariable(name: "p_filename_str", arg: 1, scope: !12100, file: !871, line: 136, type: !874)
!12104 = !DILocation(line: 136, column: 31, scope: !12100)
!12105 = !DILocalVariable(name: "p_dir", arg: 2, scope: !12100, file: !871, line: 136, type: !12092)
!12106 = !DILocation(line: 136, column: 71, scope: !12100)
!12107 = !DILocalVariable(name: "p_filename", scope: !12100, file: !871, line: 138, type: !88)
!12108 = !DILocation(line: 138, column: 15, scope: !12100)
!12109 = !DILocation(line: 138, column: 52, scope: !12100)
!12110 = !DILocation(line: 138, column: 28, scope: !12100)
!12111 = !DILocation(line: 139, column: 13, scope: !12100)
!12112 = !DILocation(line: 139, column: 3, scope: !12100)
!12113 = !DILocation(line: 140, column: 7, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12100, file: !871, line: 140, column: 7)
!12115 = !DILocation(line: 140, column: 18, scope: !12114)
!12116 = !DILocation(line: 140, column: 7, scope: !12100)
!12117 = !DILocation(line: 142, column: 20, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12114, file: !871, line: 141, column: 3)
!12119 = !DILocation(line: 142, column: 36, scope: !12118)
!12120 = !DILocation(line: 142, column: 5, scope: !12118)
!12121 = !DILocation(line: 143, column: 3, scope: !12118)
!12122 = !DILocation(line: 144, column: 1, scope: !12100)
!12123 = !DILocalVariable(name: "p_str", arg: 1, scope: !890, file: !871, line: 147, type: !874)
!12124 = !DILocation(line: 147, column: 28, scope: !890)
!12125 = !DILocalVariable(name: "p_filename_str", arg: 2, scope: !890, file: !871, line: 147, type: !893)
!12126 = !DILocation(line: 147, column: 55, scope: !890)
!12127 = !DILocalVariable(name: "retval", scope: !890, file: !871, line: 150, type: !19)
!12128 = !DILocation(line: 150, column: 7, scope: !890)
!12129 = !DILocation(line: 151, column: 7, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !890, file: !871, line: 151, column: 7)
!12131 = !DILocation(line: 151, column: 22, scope: !12130)
!12132 = !DILocation(line: 151, column: 7, scope: !890)
!12133 = !DILocation(line: 153, column: 5, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12130, file: !871, line: 152, column: 3)
!12135 = !DILocation(line: 154, column: 3, scope: !12134)
!12136 = !DILocation(line: 156, column: 13, scope: !890)
!12137 = !DILocation(line: 156, column: 3, scope: !890)
!12138 = !DILocation(line: 158, column: 44, scope: !890)
!12139 = !DILocation(line: 158, column: 33, scope: !890)
!12140 = !DILocation(line: 158, column: 61, scope: !890)
!12141 = !DILocation(line: 158, column: 12, scope: !890)
!12142 = !DILocation(line: 158, column: 10, scope: !890)
!12143 = !DILocation(line: 160, column: 35, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !890, file: !871, line: 160, column: 7)
!12145 = !DILocation(line: 160, column: 7, scope: !12144)
!12146 = !DILocation(line: 160, column: 7, scope: !890)
!12147 = !DILocation(line: 162, column: 12, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12144, file: !871, line: 161, column: 3)
!12149 = !DILocation(line: 162, column: 5, scope: !12148)
!12150 = !DILocation(line: 164, column: 18, scope: !890)
!12151 = !DILocation(line: 164, column: 25, scope: !890)
!12152 = !DILocation(line: 164, column: 3, scope: !890)
!12153 = !DILocation(line: 165, column: 3, scope: !890)
!12154 = !DILocation(line: 166, column: 1, scope: !890)
!12155 = distinct !DISubprogram(name: "str_getpwnam", scope: !871, file: !871, line: 169, type: !12156, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{!6120, !893}
!12158 = !DILocalVariable(name: "p_user_str", arg: 1, scope: !12155, file: !871, line: 169, type: !893)
!12159 = !DILocation(line: 169, column: 34, scope: !12155)
!12160 = !DILocation(line: 171, column: 42, scope: !12155)
!12161 = !DILocation(line: 171, column: 31, scope: !12155)
!12162 = !DILocation(line: 171, column: 10, scope: !12155)
!12163 = !DILocation(line: 171, column: 3, scope: !12155)
!12164 = distinct !DISubprogram(name: "str_syslog", scope: !871, file: !871, line: 175, type: !12165, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !880, retainedNodes: !128)
!12165 = !DISubroutineType(types: !12166)
!12166 = !{null, !893, !19}
!12167 = !DILocalVariable(name: "p_str", arg: 1, scope: !12164, file: !871, line: 175, type: !893)
!12168 = !DILocation(line: 175, column: 32, scope: !12164)
!12169 = !DILocalVariable(name: "severe", arg: 2, scope: !12164, file: !871, line: 175, type: !19)
!12170 = !DILocation(line: 175, column: 43, scope: !12164)
!12171 = !DILocation(line: 177, column: 33, scope: !12164)
!12172 = !DILocation(line: 177, column: 22, scope: !12164)
!12173 = !DILocation(line: 177, column: 41, scope: !12164)
!12174 = !DILocation(line: 177, column: 3, scope: !12164)
!12175 = !DILocation(line: 178, column: 1, scope: !12164)
!12176 = distinct !DISubprogram(name: "str_list_free", scope: !898, file: !898, line: 34, type: !12177, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12177 = !DISubroutineType(types: !12178)
!12178 = !{null, !12179}
!12179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12180, size: 64)
!12180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr_list", file: !649, line: 8, size: 128, elements: !12181)
!12181 = !{!12182, !12183, !12184}
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_len", scope: !12180, file: !649, line: 10, baseType: !26, size: 32)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "list_len", scope: !12180, file: !649, line: 11, baseType: !26, size: 32, offset: 32)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "p_nodes", scope: !12180, file: !649, line: 12, baseType: !12185, size: 64, offset: 64)
!12185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!12186 = !DILocalVariable(name: "p_list", arg: 1, scope: !12176, file: !898, line: 34, type: !12179)
!12187 = !DILocation(line: 34, column: 34, scope: !12176)
!12188 = !DILocalVariable(name: "i", scope: !12176, file: !898, line: 36, type: !26)
!12189 = !DILocation(line: 36, column: 16, scope: !12176)
!12190 = !DILocation(line: 37, column: 9, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12176, file: !898, line: 37, column: 3)
!12192 = !DILocation(line: 37, column: 8, scope: !12191)
!12193 = !DILocation(line: 37, column: 13, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12191, file: !898, line: 37, column: 3)
!12195 = !DILocation(line: 37, column: 17, scope: !12194)
!12196 = !DILocation(line: 37, column: 25, scope: !12194)
!12197 = !DILocation(line: 37, column: 15, scope: !12194)
!12198 = !DILocation(line: 37, column: 3, scope: !12191)
!12199 = !DILocation(line: 39, column: 15, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12194, file: !898, line: 38, column: 3)
!12201 = !DILocation(line: 39, column: 23, scope: !12200)
!12202 = !DILocation(line: 39, column: 31, scope: !12200)
!12203 = !DILocation(line: 39, column: 34, scope: !12200)
!12204 = !DILocation(line: 39, column: 5, scope: !12200)
!12205 = !DILocation(line: 40, column: 15, scope: !12200)
!12206 = !DILocation(line: 40, column: 23, scope: !12200)
!12207 = !DILocation(line: 40, column: 31, scope: !12200)
!12208 = !DILocation(line: 40, column: 34, scope: !12200)
!12209 = !DILocation(line: 40, column: 5, scope: !12200)
!12210 = !DILocation(line: 41, column: 3, scope: !12200)
!12211 = !DILocation(line: 37, column: 35, scope: !12194)
!12212 = !DILocation(line: 37, column: 3, scope: !12194)
!12213 = distinct !{!12213, !12198, !12214}
!12214 = !DILocation(line: 41, column: 3, scope: !12191)
!12215 = !DILocation(line: 42, column: 3, scope: !12176)
!12216 = !DILocation(line: 42, column: 11, scope: !12176)
!12217 = !DILocation(line: 42, column: 20, scope: !12176)
!12218 = !DILocation(line: 43, column: 3, scope: !12176)
!12219 = !DILocation(line: 43, column: 11, scope: !12176)
!12220 = !DILocation(line: 43, column: 21, scope: !12176)
!12221 = !DILocation(line: 44, column: 7, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12176, file: !898, line: 44, column: 7)
!12223 = !DILocation(line: 44, column: 15, scope: !12222)
!12224 = !DILocation(line: 44, column: 7, scope: !12176)
!12225 = !DILocation(line: 46, column: 22, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12222, file: !898, line: 45, column: 3)
!12227 = !DILocation(line: 46, column: 30, scope: !12226)
!12228 = !DILocation(line: 46, column: 5, scope: !12226)
!12229 = !DILocation(line: 47, column: 5, scope: !12226)
!12230 = !DILocation(line: 47, column: 13, scope: !12226)
!12231 = !DILocation(line: 47, column: 21, scope: !12226)
!12232 = !DILocation(line: 48, column: 3, scope: !12226)
!12233 = !DILocation(line: 49, column: 1, scope: !12176)
!12234 = distinct !DISubprogram(name: "str_list_get_length", scope: !898, file: !898, line: 52, type: !12235, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12235 = !DISubroutineType(types: !12236)
!12236 = !{!26, !12237}
!12237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12238, size: 64)
!12238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12180)
!12239 = !DILocalVariable(name: "p_list", arg: 1, scope: !12234, file: !898, line: 52, type: !12237)
!12240 = !DILocation(line: 52, column: 46, scope: !12234)
!12241 = !DILocation(line: 54, column: 10, scope: !12234)
!12242 = !DILocation(line: 54, column: 18, scope: !12234)
!12243 = !DILocation(line: 54, column: 3, scope: !12234)
!12244 = distinct !DISubprogram(name: "str_list_contains_str", scope: !898, file: !898, line: 58, type: !12245, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12245 = !DISubroutineType(types: !12246)
!12246 = !{!19, !12237, !12247}
!12247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12248, size: 64)
!12248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!12249 = !DILocalVariable(name: "p_list", arg: 1, scope: !12244, file: !898, line: 58, type: !12237)
!12250 = !DILocation(line: 58, column: 48, scope: !12244)
!12251 = !DILocalVariable(name: "p_str", arg: 2, scope: !12244, file: !898, line: 59, type: !12247)
!12252 = !DILocation(line: 59, column: 43, scope: !12244)
!12253 = !DILocalVariable(name: "i", scope: !12244, file: !898, line: 61, type: !26)
!12254 = !DILocation(line: 61, column: 16, scope: !12244)
!12255 = !DILocation(line: 62, column: 9, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12244, file: !898, line: 62, column: 3)
!12257 = !DILocation(line: 62, column: 8, scope: !12256)
!12258 = !DILocation(line: 62, column: 13, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12256, file: !898, line: 62, column: 3)
!12260 = !DILocation(line: 62, column: 17, scope: !12259)
!12261 = !DILocation(line: 62, column: 25, scope: !12259)
!12262 = !DILocation(line: 62, column: 15, scope: !12259)
!12263 = !DILocation(line: 62, column: 3, scope: !12256)
!12264 = !DILocation(line: 64, column: 19, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !898, line: 64, column: 9)
!12266 = distinct !DILexicalBlock(scope: !12259, file: !898, line: 63, column: 3)
!12267 = !DILocation(line: 64, column: 27, scope: !12265)
!12268 = !DILocation(line: 64, column: 35, scope: !12265)
!12269 = !DILocation(line: 64, column: 43, scope: !12265)
!12270 = !DILocation(line: 64, column: 46, scope: !12265)
!12271 = !DILocation(line: 64, column: 9, scope: !12265)
!12272 = !DILocation(line: 64, column: 9, scope: !12266)
!12273 = !DILocation(line: 66, column: 7, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12265, file: !898, line: 65, column: 5)
!12275 = !DILocation(line: 68, column: 3, scope: !12266)
!12276 = !DILocation(line: 62, column: 35, scope: !12259)
!12277 = !DILocation(line: 62, column: 3, scope: !12259)
!12278 = distinct !{!12278, !12263, !12279}
!12279 = !DILocation(line: 68, column: 3, scope: !12256)
!12280 = !DILocation(line: 69, column: 3, scope: !12244)
!12281 = !DILocation(line: 70, column: 1, scope: !12244)
!12282 = distinct !DISubprogram(name: "str_list_add", scope: !898, file: !898, line: 73, type: !12283, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12283 = !DISubroutineType(types: !12284)
!12284 = !{null, !12179, !12247, !12247}
!12285 = !DILocalVariable(name: "p_list", arg: 1, scope: !12282, file: !898, line: 73, type: !12179)
!12286 = !DILocation(line: 73, column: 33, scope: !12282)
!12287 = !DILocalVariable(name: "p_str", arg: 2, scope: !12282, file: !898, line: 73, type: !12247)
!12288 = !DILocation(line: 73, column: 61, scope: !12282)
!12289 = !DILocalVariable(name: "p_sort_key_str", arg: 3, scope: !12282, file: !898, line: 74, type: !12247)
!12290 = !DILocation(line: 74, column: 34, scope: !12282)
!12291 = !DILocalVariable(name: "p_node", scope: !12282, file: !898, line: 76, type: !12185)
!12292 = !DILocation(line: 76, column: 27, scope: !12282)
!12293 = !DILocation(line: 78, column: 7, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12282, file: !898, line: 78, column: 7)
!12295 = !DILocation(line: 78, column: 15, scope: !12294)
!12296 = !DILocation(line: 78, column: 27, scope: !12294)
!12297 = !DILocation(line: 78, column: 35, scope: !12294)
!12298 = !DILocation(line: 78, column: 24, scope: !12294)
!12299 = !DILocation(line: 78, column: 7, scope: !12282)
!12300 = !DILocation(line: 80, column: 9, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !898, line: 80, column: 9)
!12302 = distinct !DILexicalBlock(scope: !12294, file: !898, line: 79, column: 3)
!12303 = !DILocation(line: 80, column: 17, scope: !12301)
!12304 = !DILocation(line: 80, column: 27, scope: !12301)
!12305 = !DILocation(line: 80, column: 9, scope: !12302)
!12306 = !DILocation(line: 82, column: 7, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12301, file: !898, line: 81, column: 5)
!12308 = !DILocation(line: 82, column: 15, scope: !12307)
!12309 = !DILocation(line: 82, column: 25, scope: !12307)
!12310 = !DILocation(line: 84, column: 11, scope: !12307)
!12311 = !DILocation(line: 84, column: 19, scope: !12307)
!12312 = !DILocation(line: 84, column: 29, scope: !12307)
!12313 = !DILocation(line: 83, column: 25, scope: !12307)
!12314 = !DILocation(line: 83, column: 7, scope: !12307)
!12315 = !DILocation(line: 83, column: 15, scope: !12307)
!12316 = !DILocation(line: 83, column: 23, scope: !12307)
!12317 = !DILocation(line: 85, column: 5, scope: !12307)
!12318 = !DILocation(line: 88, column: 7, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12301, file: !898, line: 87, column: 5)
!12320 = !DILocation(line: 88, column: 15, scope: !12319)
!12321 = !DILocation(line: 88, column: 25, scope: !12319)
!12322 = !DILocation(line: 89, column: 11, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12319, file: !898, line: 89, column: 11)
!12324 = !DILocation(line: 89, column: 19, scope: !12323)
!12325 = !DILocation(line: 89, column: 29, scope: !12323)
!12326 = !DILocation(line: 89, column: 11, scope: !12319)
!12327 = !DILocation(line: 91, column: 9, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12323, file: !898, line: 90, column: 7)
!12329 = !DILocation(line: 92, column: 7, scope: !12328)
!12330 = !DILocation(line: 94, column: 11, scope: !12319)
!12331 = !DILocation(line: 94, column: 19, scope: !12319)
!12332 = !DILocation(line: 95, column: 11, scope: !12319)
!12333 = !DILocation(line: 95, column: 19, scope: !12319)
!12334 = !DILocation(line: 95, column: 29, scope: !12319)
!12335 = !DILocation(line: 93, column: 25, scope: !12319)
!12336 = !DILocation(line: 93, column: 7, scope: !12319)
!12337 = !DILocation(line: 93, column: 15, scope: !12319)
!12338 = !DILocation(line: 93, column: 23, scope: !12319)
!12339 = !DILocation(line: 97, column: 3, scope: !12302)
!12340 = !DILocation(line: 98, column: 13, scope: !12282)
!12341 = !DILocation(line: 98, column: 21, scope: !12282)
!12342 = !DILocation(line: 98, column: 29, scope: !12282)
!12343 = !DILocation(line: 98, column: 37, scope: !12282)
!12344 = !DILocation(line: 98, column: 10, scope: !12282)
!12345 = !DILocation(line: 99, column: 3, scope: !12282)
!12346 = !DILocation(line: 99, column: 11, scope: !12282)
!12347 = !DILocation(line: 99, column: 17, scope: !12282)
!12348 = !DILocation(line: 100, column: 3, scope: !12282)
!12349 = !DILocation(line: 100, column: 11, scope: !12282)
!12350 = !DILocation(line: 100, column: 26, scope: !12282)
!12351 = !DILocation(line: 101, column: 13, scope: !12282)
!12352 = !DILocation(line: 101, column: 21, scope: !12282)
!12353 = !DILocation(line: 101, column: 26, scope: !12282)
!12354 = !DILocation(line: 101, column: 3, scope: !12282)
!12355 = !DILocation(line: 102, column: 7, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12282, file: !898, line: 102, column: 7)
!12357 = !DILocation(line: 102, column: 7, scope: !12282)
!12358 = !DILocation(line: 104, column: 15, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12356, file: !898, line: 103, column: 3)
!12360 = !DILocation(line: 104, column: 23, scope: !12359)
!12361 = !DILocation(line: 104, column: 37, scope: !12359)
!12362 = !DILocation(line: 104, column: 5, scope: !12359)
!12363 = !DILocation(line: 105, column: 3, scope: !12359)
!12364 = !DILocation(line: 106, column: 3, scope: !12282)
!12365 = !DILocation(line: 106, column: 11, scope: !12282)
!12366 = !DILocation(line: 106, column: 19, scope: !12282)
!12367 = !DILocation(line: 107, column: 1, scope: !12282)
!12368 = distinct !DISubprogram(name: "str_list_sort", scope: !898, file: !898, line: 110, type: !12369, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12369 = !DISubroutineType(types: !12370)
!12370 = !{null, !12179, !19}
!12371 = !DILocalVariable(name: "p_list", arg: 1, scope: !12368, file: !898, line: 110, type: !12179)
!12372 = !DILocation(line: 110, column: 34, scope: !12368)
!12373 = !DILocalVariable(name: "reverse", arg: 2, scope: !12368, file: !898, line: 110, type: !19)
!12374 = !DILocation(line: 110, column: 46, scope: !12368)
!12375 = !DILocation(line: 112, column: 8, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12368, file: !898, line: 112, column: 7)
!12377 = !DILocation(line: 112, column: 7, scope: !12368)
!12378 = !DILocation(line: 114, column: 23, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12376, file: !898, line: 113, column: 3)
!12380 = !DILocation(line: 114, column: 31, scope: !12379)
!12381 = !DILocation(line: 114, column: 40, scope: !12379)
!12382 = !DILocation(line: 114, column: 48, scope: !12379)
!12383 = !DILocation(line: 114, column: 5, scope: !12379)
!12384 = !DILocation(line: 116, column: 3, scope: !12379)
!12385 = !DILocation(line: 119, column: 23, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12376, file: !898, line: 118, column: 3)
!12387 = !DILocation(line: 119, column: 31, scope: !12386)
!12388 = !DILocation(line: 119, column: 40, scope: !12386)
!12389 = !DILocation(line: 119, column: 48, scope: !12386)
!12390 = !DILocation(line: 119, column: 5, scope: !12386)
!12391 = !DILocation(line: 123, column: 1, scope: !12368)
!12392 = distinct !DISubprogram(name: "sort_compare_func", scope: !898, file: !898, line: 126, type: !12393, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12393 = !DISubroutineType(types: !12394)
!12394 = !{!19, !1595, !1595}
!12395 = !DILocalVariable(name: "p1", arg: 1, scope: !12392, file: !898, line: 126, type: !1595)
!12396 = !DILocation(line: 126, column: 31, scope: !12392)
!12397 = !DILocalVariable(name: "p2", arg: 2, scope: !12392, file: !898, line: 126, type: !1595)
!12398 = !DILocation(line: 126, column: 47, scope: !12392)
!12399 = !DILocation(line: 128, column: 30, scope: !12392)
!12400 = !DILocation(line: 128, column: 34, scope: !12392)
!12401 = !DILocation(line: 128, column: 10, scope: !12392)
!12402 = !DILocation(line: 128, column: 3, scope: !12392)
!12403 = distinct !DISubprogram(name: "sort_compare_func_reverse", scope: !898, file: !898, line: 132, type: !12393, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12404 = !DILocalVariable(name: "p1", arg: 1, scope: !12403, file: !898, line: 132, type: !1595)
!12405 = !DILocation(line: 132, column: 39, scope: !12403)
!12406 = !DILocalVariable(name: "p2", arg: 2, scope: !12403, file: !898, line: 132, type: !1595)
!12407 = !DILocation(line: 132, column: 55, scope: !12403)
!12408 = !DILocation(line: 134, column: 30, scope: !12403)
!12409 = !DILocation(line: 134, column: 34, scope: !12403)
!12410 = !DILocation(line: 134, column: 10, scope: !12403)
!12411 = !DILocation(line: 134, column: 3, scope: !12403)
!12412 = distinct !DISubprogram(name: "sort_compare_common", scope: !898, file: !898, line: 138, type: !12413, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12413 = !DISubroutineType(types: !12414)
!12414 = !{!19, !1595, !1595, !19}
!12415 = !DILocalVariable(name: "p1", arg: 1, scope: !12412, file: !898, line: 138, type: !1595)
!12416 = !DILocation(line: 138, column: 33, scope: !12412)
!12417 = !DILocalVariable(name: "p2", arg: 2, scope: !12412, file: !898, line: 138, type: !1595)
!12418 = !DILocation(line: 138, column: 49, scope: !12412)
!12419 = !DILocalVariable(name: "reverse", arg: 3, scope: !12412, file: !898, line: 138, type: !19)
!12420 = !DILocation(line: 138, column: 57, scope: !12412)
!12421 = !DILocalVariable(name: "p_cmp1", scope: !12412, file: !898, line: 140, type: !12247)
!12422 = !DILocation(line: 140, column: 23, scope: !12412)
!12423 = !DILocalVariable(name: "p_cmp2", scope: !12412, file: !898, line: 141, type: !12247)
!12424 = !DILocation(line: 141, column: 23, scope: !12412)
!12425 = !DILocalVariable(name: "p_node1", scope: !12412, file: !898, line: 142, type: !900)
!12426 = !DILocation(line: 142, column: 33, scope: !12412)
!12427 = !DILocation(line: 142, column: 75, scope: !12412)
!12428 = !DILocation(line: 142, column: 43, scope: !12412)
!12429 = !DILocalVariable(name: "p_node2", scope: !12412, file: !898, line: 143, type: !900)
!12430 = !DILocation(line: 143, column: 33, scope: !12412)
!12431 = !DILocation(line: 143, column: 75, scope: !12412)
!12432 = !DILocation(line: 143, column: 43, scope: !12412)
!12433 = !DILocation(line: 144, column: 21, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12412, file: !898, line: 144, column: 7)
!12435 = !DILocation(line: 144, column: 30, scope: !12434)
!12436 = !DILocation(line: 144, column: 8, scope: !12434)
!12437 = !DILocation(line: 144, column: 7, scope: !12412)
!12438 = !DILocation(line: 146, column: 15, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12434, file: !898, line: 145, column: 3)
!12440 = !DILocation(line: 146, column: 24, scope: !12439)
!12441 = !DILocation(line: 146, column: 12, scope: !12439)
!12442 = !DILocation(line: 147, column: 3, scope: !12439)
!12443 = !DILocation(line: 150, column: 15, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12434, file: !898, line: 149, column: 3)
!12445 = !DILocation(line: 150, column: 24, scope: !12444)
!12446 = !DILocation(line: 150, column: 12, scope: !12444)
!12447 = !DILocation(line: 152, column: 21, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12412, file: !898, line: 152, column: 7)
!12449 = !DILocation(line: 152, column: 30, scope: !12448)
!12450 = !DILocation(line: 152, column: 8, scope: !12448)
!12451 = !DILocation(line: 152, column: 7, scope: !12412)
!12452 = !DILocation(line: 154, column: 15, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12448, file: !898, line: 153, column: 3)
!12454 = !DILocation(line: 154, column: 24, scope: !12453)
!12455 = !DILocation(line: 154, column: 12, scope: !12453)
!12456 = !DILocation(line: 155, column: 3, scope: !12453)
!12457 = !DILocation(line: 158, column: 15, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12448, file: !898, line: 157, column: 3)
!12459 = !DILocation(line: 158, column: 24, scope: !12458)
!12460 = !DILocation(line: 158, column: 12, scope: !12458)
!12461 = !DILocation(line: 161, column: 7, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12412, file: !898, line: 161, column: 7)
!12463 = !DILocation(line: 161, column: 7, scope: !12412)
!12464 = !DILocation(line: 163, column: 23, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12462, file: !898, line: 162, column: 3)
!12466 = !DILocation(line: 163, column: 31, scope: !12465)
!12467 = !DILocation(line: 163, column: 12, scope: !12465)
!12468 = !DILocation(line: 163, column: 5, scope: !12465)
!12469 = !DILocation(line: 167, column: 23, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12462, file: !898, line: 166, column: 3)
!12471 = !DILocation(line: 167, column: 31, scope: !12470)
!12472 = !DILocation(line: 167, column: 12, scope: !12470)
!12473 = !DILocation(line: 167, column: 5, scope: !12470)
!12474 = !DILocation(line: 169, column: 1, scope: !12412)
!12475 = distinct !DISubprogram(name: "str_list_get_pstr", scope: !898, file: !898, line: 172, type: !12476, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !897, retainedNodes: !128)
!12476 = !DISubroutineType(types: !12477)
!12477 = !{!12247, !12237, !26}
!12478 = !DILocalVariable(name: "p_list", arg: 1, scope: !12475, file: !898, line: 172, type: !12237)
!12479 = !DILocation(line: 172, column: 44, scope: !12475)
!12480 = !DILocalVariable(name: "indexx", arg: 2, scope: !12475, file: !898, line: 172, type: !26)
!12481 = !DILocation(line: 172, column: 65, scope: !12475)
!12482 = !DILocation(line: 174, column: 7, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12475, file: !898, line: 174, column: 7)
!12484 = !DILocation(line: 174, column: 17, scope: !12483)
!12485 = !DILocation(line: 174, column: 25, scope: !12483)
!12486 = !DILocation(line: 174, column: 14, scope: !12483)
!12487 = !DILocation(line: 174, column: 7, scope: !12475)
!12488 = !DILocation(line: 176, column: 5, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12483, file: !898, line: 175, column: 3)
!12490 = !DILocation(line: 177, column: 3, scope: !12489)
!12491 = !DILocation(line: 178, column: 11, scope: !12475)
!12492 = !DILocation(line: 178, column: 19, scope: !12475)
!12493 = !DILocation(line: 178, column: 27, scope: !12475)
!12494 = !DILocation(line: 178, column: 35, scope: !12475)
!12495 = !DILocation(line: 178, column: 3, scope: !12475)
!12496 = distinct !DISubprogram(name: "vsf_banner_dir_changed", scope: !1852, file: !1852, line: 27, type: !12497, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1851, retainedNodes: !128)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{null, !12499, !19}
!12499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12500, size: 64)
!12500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !12501)
!12501 = !{!12502, !12503, !12504, !12505, !12506, !12507, !12508, !12509, !12510, !12511, !12512, !12513, !12514, !12515, !12516, !12522, !12523, !12524, !12525, !12526, !12527, !12528, !12529, !12530, !12537, !12538, !12539, !12540, !12541, !12542, !12543, !12544, !12545, !12546, !12547, !12548, !12549, !12550, !12551, !12552, !12553, !12554, !12555, !12556, !12557, !12558, !12559, !12560, !12561, !12562, !12563, !12564, !12565, !12566, !12567, !12568, !12569}
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !12500, file: !8, line: 21, baseType: !154, size: 64)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !12500, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !12500, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !12500, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !12500, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !12500, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !12500, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !12500, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !12500, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !12500, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !12500, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !12500, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !12500, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !12500, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !12500, file: !8, line: 39, baseType: !12517, size: 128, offset: 704)
!12517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !12518)
!12518 = !{!12519, !12520, !12521}
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !12517, file: !34, line: 12, baseType: !16, size: 64)
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !12517, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !12517, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !12500, file: !8, line: 40, baseType: !12517, size: 128, offset: 832)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !12500, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !12500, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !12500, file: !8, line: 45, baseType: !12517, size: 128, offset: 1088)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !12500, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !12500, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !12500, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !12500, file: !8, line: 51, baseType: !12517, size: 128, offset: 1344)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !12500, file: !8, line: 54, baseType: !12531, size: 64, offset: 1472)
!12531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12532, size: 64)
!12532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr_list", file: !649, line: 8, size: 128, elements: !12533)
!12533 = !{!12534, !12535, !12536}
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_len", scope: !12532, file: !649, line: 10, baseType: !26, size: 32)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_list_len", scope: !12532, file: !649, line: 11, baseType: !26, size: 32, offset: 32)
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_nodes", scope: !12532, file: !649, line: 12, baseType: !654, size: 64, offset: 64)
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !12500, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !12500, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !12500, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !12500, file: !8, line: 62, baseType: !12517, size: 128, offset: 1664)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !12500, file: !8, line: 63, baseType: !12517, size: 128, offset: 1792)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !12500, file: !8, line: 64, baseType: !12517, size: 128, offset: 1920)
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !12500, file: !8, line: 65, baseType: !12517, size: 128, offset: 2048)
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !12500, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !12500, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !12500, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !12500, file: !8, line: 71, baseType: !12517, size: 128, offset: 2304)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !12500, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !12500, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !12500, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !12500, file: !8, line: 75, baseType: !12517, size: 128, offset: 2624)
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !12500, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !12500, file: !8, line: 79, baseType: !12517, size: 128, offset: 2816)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !12500, file: !8, line: 80, baseType: !12517, size: 128, offset: 2944)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !12500, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !12500, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !12500, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !12500, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !12500, file: !8, line: 89, baseType: !12517, size: 128, offset: 3200)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !12500, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !12500, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !12500, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !12500, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !12500, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !12500, file: !8, line: 97, baseType: !12517, size: 128, offset: 3584)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !12500, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !12500, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !12500, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !12500, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!12570 = !DILocalVariable(name: "p_sess", arg: 1, scope: !12496, file: !1852, line: 27, type: !12499)
!12571 = !DILocation(line: 27, column: 44, scope: !12496)
!12572 = !DILocalVariable(name: "ftpcode", arg: 2, scope: !12496, file: !1852, line: 27, type: !19)
!12573 = !DILocation(line: 27, column: 56, scope: !12496)
!12574 = !DILocalVariable(name: "dir_str", scope: !12496, file: !1852, line: 29, type: !12517)
!12575 = !DILocation(line: 29, column: 16, scope: !12496)
!12576 = !DILocation(line: 31, column: 8, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12496, file: !1852, line: 31, column: 7)
!12578 = !DILocation(line: 31, column: 7, scope: !12496)
!12579 = !DILocation(line: 33, column: 5, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12577, file: !1852, line: 32, column: 3)
!12581 = !DILocation(line: 35, column: 7, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12496, file: !1852, line: 35, column: 7)
!12583 = !DILocation(line: 35, column: 15, scope: !12582)
!12584 = !DILocation(line: 35, column: 34, scope: !12582)
!12585 = !DILocation(line: 35, column: 7, scope: !12496)
!12586 = !DILocalVariable(name: "the_list", scope: !12587, file: !1852, line: 37, type: !12532)
!12587 = distinct !DILexicalBlock(scope: !12582, file: !1852, line: 36, column: 3)
!12588 = !DILocation(line: 37, column: 23, scope: !12587)
!12589 = !DILocation(line: 38, column: 34, scope: !12587)
!12590 = !DILocation(line: 38, column: 5, scope: !12587)
!12591 = !DILocation(line: 38, column: 13, scope: !12587)
!12592 = !DILocation(line: 38, column: 32, scope: !12587)
!12593 = !DILocation(line: 39, column: 6, scope: !12587)
!12594 = !DILocation(line: 39, column: 14, scope: !12587)
!12595 = !DILocation(line: 39, column: 35, scope: !12587)
!12596 = !DILocation(line: 40, column: 3, scope: !12587)
!12597 = !DILocation(line: 41, column: 3, scope: !12496)
!12598 = !DILocation(line: 43, column: 30, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12496, file: !1852, line: 43, column: 7)
!12600 = !DILocation(line: 43, column: 38, scope: !12599)
!12601 = !DILocation(line: 43, column: 8, scope: !12599)
!12602 = !DILocation(line: 43, column: 7, scope: !12496)
!12603 = !DILocation(line: 46, column: 29, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12605, file: !1852, line: 46, column: 9)
!12605 = distinct !DILexicalBlock(scope: !12599, file: !1852, line: 44, column: 3)
!12606 = !DILocation(line: 46, column: 37, scope: !12604)
!12607 = !DILocation(line: 46, column: 9, scope: !12604)
!12608 = !DILocation(line: 46, column: 57, scope: !12604)
!12609 = !DILocation(line: 46, column: 9, scope: !12605)
!12610 = !DILocation(line: 49, column: 20, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12604, file: !1852, line: 48, column: 5)
!12612 = !DILocation(line: 49, column: 28, scope: !12611)
!12613 = !DILocation(line: 49, column: 7, scope: !12611)
!12614 = !DILocation(line: 50, column: 5, scope: !12611)
!12615 = !DILocalVariable(name: "msg_file_str", scope: !12616, file: !1852, line: 55, type: !12517)
!12616 = distinct !DILexicalBlock(scope: !12605, file: !1852, line: 54, column: 5)
!12617 = !DILocation(line: 55, column: 20, scope: !12616)
!12618 = !DILocation(line: 56, column: 11, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12616, file: !1852, line: 56, column: 11)
!12620 = !DILocation(line: 56, column: 11, scope: !12616)
!12621 = !DILocation(line: 58, column: 44, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12619, file: !1852, line: 57, column: 7)
!12623 = !DILocation(line: 58, column: 16, scope: !12622)
!12624 = !DILocation(line: 60, column: 7, scope: !12622)
!12625 = !DILocation(line: 61, column: 24, scope: !12616)
!12626 = !DILocation(line: 61, column: 47, scope: !12616)
!12627 = !DILocation(line: 61, column: 7, scope: !12616)
!12628 = !DILocation(line: 62, column: 7, scope: !12616)
!12629 = !DILocation(line: 64, column: 3, scope: !12605)
!12630 = !DILocation(line: 65, column: 3, scope: !12496)
!12631 = !DILocation(line: 66, column: 1, scope: !12496)
!12632 = distinct !DISubprogram(name: "vsf_banner_write", scope: !1852, file: !1852, line: 69, type: !12633, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1851, retainedNodes: !128)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{null, !12499, !12635, !19}
!12635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12517, size: 64)
!12636 = !DILocalVariable(name: "p_sess", arg: 1, scope: !12632, file: !1852, line: 69, type: !12499)
!12637 = !DILocation(line: 69, column: 38, scope: !12632)
!12638 = !DILocalVariable(name: "p_str", arg: 2, scope: !12632, file: !1852, line: 69, type: !12635)
!12639 = !DILocation(line: 69, column: 60, scope: !12632)
!12640 = !DILocalVariable(name: "ftpcode", arg: 3, scope: !12632, file: !1852, line: 69, type: !19)
!12641 = !DILocation(line: 69, column: 71, scope: !12632)
!12642 = !DILocalVariable(name: "msg_line_str", scope: !12632, file: !1852, line: 71, type: !12517)
!12643 = !DILocation(line: 71, column: 16, scope: !12632)
!12644 = !DILocalVariable(name: "str_pos", scope: !12632, file: !1852, line: 72, type: !26)
!12645 = !DILocation(line: 72, column: 16, scope: !12632)
!12646 = !DILocation(line: 73, column: 3, scope: !12632)
!12647 = !DILocation(line: 73, column: 22, scope: !12632)
!12648 = !DILocation(line: 73, column: 10, scope: !12632)
!12649 = !DILocation(line: 75, column: 32, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12632, file: !1852, line: 74, column: 3)
!12651 = !DILocation(line: 75, column: 40, scope: !12650)
!12652 = !DILocation(line: 75, column: 5, scope: !12650)
!12653 = distinct !{!12653, !12646, !12654}
!12654 = !DILocation(line: 76, column: 3, scope: !12632)
!12655 = !DILocation(line: 77, column: 3, scope: !12632)
!12656 = !DILocation(line: 78, column: 1, scope: !12632)
!12657 = distinct !DISubprogram(name: "str_fileread", scope: !1854, file: !1854, line: 20, type: !12658, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1853, retainedNodes: !128)
!12658 = !DISubroutineType(types: !12659)
!12659 = !{!19, !12660, !88, !26}
!12660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12661, size: 64)
!12661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !12662)
!12662 = !{!12663, !12664, !12665}
!12663 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !12661, file: !34, line: 12, baseType: !16, size: 64)
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !12661, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!12665 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !12661, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!12666 = !DILocalVariable(name: "p_str", arg: 1, scope: !12657, file: !1854, line: 20, type: !12660)
!12667 = !DILocation(line: 20, column: 28, scope: !12657)
!12668 = !DILocalVariable(name: "p_filename", arg: 2, scope: !12657, file: !1854, line: 20, type: !88)
!12669 = !DILocation(line: 20, column: 47, scope: !12657)
!12670 = !DILocalVariable(name: "maxsize", arg: 3, scope: !12657, file: !1854, line: 20, type: !26)
!12671 = !DILocation(line: 20, column: 72, scope: !12657)
!12672 = !DILocalVariable(name: "fd", scope: !12657, file: !1854, line: 22, type: !19)
!12673 = !DILocation(line: 22, column: 7, scope: !12657)
!12674 = !DILocalVariable(name: "retval", scope: !12657, file: !1854, line: 23, type: !19)
!12675 = !DILocation(line: 23, column: 7, scope: !12657)
!12676 = !DILocalVariable(name: "size", scope: !12657, file: !1854, line: 24, type: !41)
!12677 = !DILocation(line: 24, column: 14, scope: !12657)
!12678 = !DILocalVariable(name: "p_sec_buf", scope: !12657, file: !1854, line: 25, type: !16)
!12679 = !DILocation(line: 25, column: 9, scope: !12657)
!12680 = !DILocalVariable(name: "p_stat", scope: !12657, file: !1854, line: 26, type: !704)
!12681 = !DILocation(line: 26, column: 31, scope: !12657)
!12682 = !DILocation(line: 28, column: 13, scope: !12657)
!12683 = !DILocation(line: 28, column: 3, scope: !12657)
!12684 = !DILocation(line: 29, column: 30, scope: !12657)
!12685 = !DILocation(line: 29, column: 8, scope: !12657)
!12686 = !DILocation(line: 29, column: 6, scope: !12657)
!12687 = !DILocation(line: 30, column: 35, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12657, file: !1854, line: 30, column: 7)
!12689 = !DILocation(line: 30, column: 7, scope: !12688)
!12690 = !DILocation(line: 30, column: 7, scope: !12657)
!12691 = !DILocation(line: 32, column: 12, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12688, file: !1854, line: 31, column: 3)
!12693 = !DILocation(line: 32, column: 5, scope: !12692)
!12694 = !DILocation(line: 34, column: 21, scope: !12657)
!12695 = !DILocation(line: 34, column: 3, scope: !12657)
!12696 = !DILocation(line: 35, column: 38, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12657, file: !1854, line: 35, column: 7)
!12698 = !DILocation(line: 35, column: 7, scope: !12697)
!12699 = !DILocation(line: 35, column: 7, scope: !12657)
!12700 = !DILocation(line: 37, column: 41, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12697, file: !1854, line: 36, column: 3)
!12702 = !DILocation(line: 37, column: 12, scope: !12701)
!12703 = !DILocation(line: 37, column: 10, scope: !12701)
!12704 = !DILocation(line: 38, column: 9, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12701, file: !1854, line: 38, column: 9)
!12706 = !DILocation(line: 38, column: 16, scope: !12705)
!12707 = !DILocation(line: 38, column: 14, scope: !12705)
!12708 = !DILocation(line: 38, column: 9, scope: !12701)
!12709 = !DILocation(line: 40, column: 14, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12705, file: !1854, line: 39, column: 5)
!12711 = !DILocation(line: 40, column: 12, scope: !12710)
!12712 = !DILocation(line: 41, column: 5, scope: !12710)
!12713 = !DILocation(line: 42, column: 49, scope: !12701)
!12714 = !DILocation(line: 42, column: 34, scope: !12701)
!12715 = !DILocation(line: 42, column: 5, scope: !12701)
!12716 = !DILocation(line: 44, column: 36, scope: !12701)
!12717 = !DILocation(line: 44, column: 40, scope: !12701)
!12718 = !DILocation(line: 44, column: 66, scope: !12701)
!12719 = !DILocation(line: 44, column: 51, scope: !12701)
!12720 = !DILocation(line: 44, column: 14, scope: !12701)
!12721 = !DILocation(line: 44, column: 12, scope: !12701)
!12722 = !DILocation(line: 45, column: 37, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12701, file: !1854, line: 45, column: 9)
!12724 = !DILocation(line: 45, column: 9, scope: !12723)
!12725 = !DILocation(line: 45, column: 9, scope: !12701)
!12726 = !DILocation(line: 47, column: 7, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12723, file: !1854, line: 46, column: 5)
!12728 = !DILocation(line: 49, column: 29, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12723, file: !1854, line: 49, column: 14)
!12730 = !DILocation(line: 49, column: 14, scope: !12729)
!12731 = !DILocation(line: 49, column: 39, scope: !12729)
!12732 = !DILocation(line: 49, column: 36, scope: !12729)
!12733 = !DILocation(line: 49, column: 14, scope: !12723)
!12734 = !DILocation(line: 51, column: 7, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12729, file: !1854, line: 50, column: 5)
!12736 = !DILocation(line: 52, column: 5, scope: !12735)
!12737 = !DILocation(line: 53, column: 24, scope: !12701)
!12738 = !DILocation(line: 53, column: 31, scope: !12701)
!12739 = !DILocation(line: 53, column: 57, scope: !12701)
!12740 = !DILocation(line: 53, column: 42, scope: !12701)
!12741 = !DILocation(line: 53, column: 5, scope: !12701)
!12742 = !DILocation(line: 54, column: 3, scope: !12701)
!12743 = !DILocation(line: 35, column: 44, scope: !12697)
!12744 = !DILocation(line: 56, column: 20, scope: !12657)
!12745 = !DILocation(line: 56, column: 3, scope: !12657)
!12746 = !DILocation(line: 57, column: 3, scope: !12657)
!12747 = !DILocation(line: 58, column: 21, scope: !12657)
!12748 = !DILocation(line: 58, column: 3, scope: !12657)
!12749 = !DILocation(line: 59, column: 10, scope: !12657)
!12750 = !DILocation(line: 59, column: 3, scope: !12657)
!12751 = !DILocation(line: 60, column: 1, scope: !12657)
!12752 = distinct !DISubprogram(name: "vsf_parseconf_load_file", scope: !917, file: !917, line: 186, type: !923, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !916, retainedNodes: !128)
!12753 = !DILocalVariable(name: "p_filename", arg: 1, scope: !12752, file: !917, line: 186, type: !88)
!12754 = !DILocation(line: 186, column: 37, scope: !12752)
!12755 = !DILocalVariable(name: "errs_fatal", arg: 2, scope: !12752, file: !917, line: 186, type: !19)
!12756 = !DILocation(line: 186, column: 53, scope: !12752)
!12757 = !DILocalVariable(name: "config_file_str", scope: !12752, file: !917, line: 188, type: !925)
!12758 = !DILocation(line: 188, column: 16, scope: !12752)
!12759 = !DILocalVariable(name: "config_setting_str", scope: !12752, file: !917, line: 189, type: !925)
!12760 = !DILocation(line: 189, column: 16, scope: !12752)
!12761 = !DILocalVariable(name: "config_value_str", scope: !12752, file: !917, line: 190, type: !925)
!12762 = !DILocation(line: 190, column: 16, scope: !12752)
!12763 = !DILocalVariable(name: "str_pos", scope: !12752, file: !917, line: 191, type: !26)
!12764 = !DILocation(line: 191, column: 16, scope: !12752)
!12765 = !DILocalVariable(name: "retval", scope: !12752, file: !917, line: 192, type: !19)
!12766 = !DILocation(line: 192, column: 7, scope: !12752)
!12767 = !DILocation(line: 193, column: 8, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12752, file: !917, line: 193, column: 7)
!12769 = !DILocation(line: 193, column: 7, scope: !12752)
!12770 = !DILocation(line: 195, column: 18, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12768, file: !917, line: 194, column: 3)
!12772 = !DILocation(line: 195, column: 16, scope: !12771)
!12773 = !DILocation(line: 196, column: 3, scope: !12771)
!12774 = !DILocation(line: 199, column: 9, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12776, file: !917, line: 199, column: 9)
!12776 = distinct !DILexicalBlock(scope: !12768, file: !917, line: 198, column: 3)
!12777 = !DILocation(line: 199, column: 9, scope: !12776)
!12778 = !DILocation(line: 201, column: 31, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12775, file: !917, line: 200, column: 5)
!12780 = !DILocation(line: 201, column: 7, scope: !12779)
!12781 = !DILocation(line: 202, column: 5, scope: !12779)
!12782 = !DILocation(line: 203, column: 45, scope: !12776)
!12783 = !DILocation(line: 203, column: 26, scope: !12776)
!12784 = !DILocation(line: 203, column: 24, scope: !12776)
!12785 = !DILocation(line: 205, column: 8, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12752, file: !917, line: 205, column: 7)
!12787 = !DILocation(line: 205, column: 7, scope: !12752)
!12788 = !DILocation(line: 207, column: 5, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12786, file: !917, line: 206, column: 3)
!12790 = !DILocation(line: 208, column: 3, scope: !12789)
!12791 = !DILocation(line: 209, column: 43, scope: !12752)
!12792 = !DILocation(line: 209, column: 12, scope: !12752)
!12793 = !DILocation(line: 209, column: 10, scope: !12752)
!12794 = !DILocation(line: 210, column: 35, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12752, file: !917, line: 210, column: 7)
!12796 = !DILocation(line: 210, column: 7, scope: !12795)
!12797 = !DILocation(line: 210, column: 7, scope: !12752)
!12798 = !DILocation(line: 212, column: 9, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12800, file: !917, line: 212, column: 9)
!12800 = distinct !DILexicalBlock(scope: !12795, file: !917, line: 211, column: 3)
!12801 = !DILocation(line: 212, column: 9, scope: !12800)
!12802 = !DILocation(line: 214, column: 41, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12799, file: !917, line: 213, column: 5)
!12804 = !DILocation(line: 214, column: 7, scope: !12803)
!12805 = !DILocation(line: 215, column: 5, scope: !12803)
!12806 = !DILocation(line: 218, column: 7, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12799, file: !917, line: 217, column: 5)
!12808 = !DILocation(line: 219, column: 7, scope: !12807)
!12809 = !DILocation(line: 221, column: 3, scope: !12800)
!12810 = !DILocalVariable(name: "p_statbuf", scope: !12811, file: !917, line: 223, type: !704)
!12811 = distinct !DILexicalBlock(scope: !12752, file: !917, line: 222, column: 3)
!12812 = !DILocation(line: 223, column: 33, scope: !12811)
!12813 = !DILocation(line: 224, column: 31, scope: !12811)
!12814 = !DILocation(line: 224, column: 14, scope: !12811)
!12815 = !DILocation(line: 224, column: 12, scope: !12811)
!12816 = !DILocation(line: 229, column: 37, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12811, file: !917, line: 229, column: 9)
!12818 = !DILocation(line: 229, column: 9, scope: !12817)
!12819 = !DILocation(line: 229, column: 45, scope: !12817)
!12820 = !DILocation(line: 230, column: 37, scope: !12817)
!12821 = !DILocation(line: 230, column: 9, scope: !12817)
!12822 = !DILocation(line: 230, column: 51, scope: !12817)
!12823 = !DILocation(line: 230, column: 48, scope: !12817)
!12824 = !DILocation(line: 230, column: 72, scope: !12817)
!12825 = !DILocation(line: 231, column: 41, scope: !12817)
!12826 = !DILocation(line: 231, column: 10, scope: !12817)
!12827 = !DILocation(line: 229, column: 9, scope: !12811)
!12828 = !DILocation(line: 233, column: 7, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12817, file: !917, line: 232, column: 5)
!12830 = !DILocation(line: 234, column: 5, scope: !12829)
!12831 = !DILocation(line: 235, column: 22, scope: !12811)
!12832 = !DILocation(line: 235, column: 5, scope: !12811)
!12833 = !DILocation(line: 237, column: 3, scope: !12752)
!12834 = !DILocation(line: 237, column: 10, scope: !12752)
!12835 = !DILocation(line: 239, column: 9, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12837, file: !917, line: 239, column: 9)
!12837 = distinct !DILexicalBlock(scope: !12752, file: !917, line: 238, column: 3)
!12838 = !DILocation(line: 239, column: 42, scope: !12836)
!12839 = !DILocation(line: 240, column: 9, scope: !12836)
!12840 = !DILocation(line: 240, column: 49, scope: !12836)
!12841 = !DILocation(line: 240, column: 56, scope: !12836)
!12842 = !DILocation(line: 241, column: 9, scope: !12836)
!12843 = !DILocation(line: 239, column: 9, scope: !12837)
!12844 = !DILocation(line: 243, column: 7, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12836, file: !917, line: 242, column: 5)
!12846 = distinct !{!12846, !12833, !12847}
!12847 = !DILocation(line: 246, column: 3, scope: !12752)
!12848 = !DILocation(line: 245, column: 32, scope: !12837)
!12849 = !DILocation(line: 245, column: 65, scope: !12837)
!12850 = !DILocation(line: 245, column: 5, scope: !12837)
!12851 = !DILocation(line: 247, column: 3, scope: !12752)
!12852 = !DILocation(line: 248, column: 3, scope: !12752)
!12853 = !DILocation(line: 249, column: 3, scope: !12752)
!12854 = !DILocation(line: 250, column: 1, scope: !12752)
!12855 = !DILocalVariable(name: "p_setting", arg: 1, scope: !922, file: !917, line: 253, type: !88)
!12856 = !DILocation(line: 253, column: 40, scope: !922)
!12857 = !DILocalVariable(name: "errs_fatal", arg: 2, scope: !922, file: !917, line: 253, type: !19)
!12858 = !DILocation(line: 253, column: 55, scope: !922)
!12859 = !DILocation(line: 257, column: 3, scope: !922)
!12860 = !DILocation(line: 257, column: 31, scope: !922)
!12861 = !DILocation(line: 257, column: 30, scope: !922)
!12862 = !DILocation(line: 257, column: 10, scope: !922)
!12863 = !DILocation(line: 259, column: 14, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !922, file: !917, line: 258, column: 3)
!12865 = distinct !{!12865, !12859, !12866}
!12866 = !DILocation(line: 260, column: 3, scope: !922)
!12867 = !DILocation(line: 261, column: 34, scope: !922)
!12868 = !DILocation(line: 261, column: 3, scope: !922)
!12869 = !DILocation(line: 262, column: 3, scope: !922)
!12870 = !DILocalVariable(name: "p_str_setting", scope: !12871, file: !917, line: 265, type: !12872)
!12871 = distinct !DILexicalBlock(scope: !922, file: !917, line: 264, column: 3)
!12872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12873, size: 64)
!12873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!12874 = !DILocation(line: 265, column: 41, scope: !12871)
!12875 = !DILocation(line: 266, column: 5, scope: !12871)
!12876 = !DILocation(line: 266, column: 12, scope: !12871)
!12877 = !DILocation(line: 266, column: 27, scope: !12871)
!12878 = !DILocation(line: 266, column: 42, scope: !12871)
!12879 = !DILocation(line: 268, column: 42, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12881, file: !917, line: 268, column: 11)
!12881 = distinct !DILexicalBlock(scope: !12871, file: !917, line: 267, column: 5)
!12882 = !DILocation(line: 268, column: 57, scope: !12880)
!12883 = !DILocation(line: 268, column: 11, scope: !12880)
!12884 = !DILocation(line: 268, column: 11, scope: !12881)
!12885 = !DILocalVariable(name: "p_curr_setting", scope: !12886, file: !917, line: 271, type: !939)
!12886 = distinct !DILexicalBlock(scope: !12880, file: !917, line: 269, column: 7)
!12887 = !DILocation(line: 271, column: 22, scope: !12886)
!12888 = !DILocation(line: 271, column: 39, scope: !12886)
!12889 = !DILocation(line: 271, column: 54, scope: !12886)
!12890 = !DILocation(line: 272, column: 14, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12886, file: !917, line: 272, column: 13)
!12892 = !DILocation(line: 272, column: 13, scope: !12891)
!12893 = !DILocation(line: 272, column: 13, scope: !12886)
!12894 = !DILocation(line: 274, column: 37, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12891, file: !917, line: 273, column: 9)
!12896 = !DILocation(line: 274, column: 36, scope: !12895)
!12897 = !DILocation(line: 274, column: 11, scope: !12895)
!12898 = !DILocation(line: 275, column: 9, scope: !12895)
!12899 = !DILocation(line: 276, column: 13, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12886, file: !917, line: 276, column: 13)
!12901 = !DILocation(line: 276, column: 13, scope: !12886)
!12902 = !DILocation(line: 278, column: 12, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12900, file: !917, line: 277, column: 9)
!12904 = !DILocation(line: 278, column: 27, scope: !12903)
!12905 = !DILocation(line: 279, column: 9, scope: !12903)
!12906 = !DILocation(line: 282, column: 29, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12900, file: !917, line: 281, column: 9)
!12908 = !DILocation(line: 282, column: 12, scope: !12907)
!12909 = !DILocation(line: 282, column: 27, scope: !12907)
!12910 = !DILocation(line: 284, column: 9, scope: !12886)
!12911 = !DILocation(line: 286, column: 20, scope: !12881)
!12912 = distinct !{!12912, !12875, !12913}
!12913 = !DILocation(line: 287, column: 5, scope: !12871)
!12914 = !DILocation(line: 289, column: 7, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !922, file: !917, line: 289, column: 7)
!12916 = !DILocation(line: 289, column: 7, scope: !922)
!12917 = !DILocation(line: 291, column: 9, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12919, file: !917, line: 291, column: 9)
!12919 = distinct !DILexicalBlock(scope: !12915, file: !917, line: 290, column: 3)
!12920 = !DILocation(line: 291, column: 9, scope: !12919)
!12921 = !DILocation(line: 293, column: 50, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12918, file: !917, line: 292, column: 5)
!12923 = !DILocation(line: 293, column: 7, scope: !12922)
!12924 = !DILocation(line: 294, column: 5, scope: !12922)
!12925 = !DILocation(line: 297, column: 7, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12918, file: !917, line: 296, column: 5)
!12927 = !DILocation(line: 299, column: 3, scope: !12919)
!12928 = !DILocalVariable(name: "p_bool_setting", scope: !12929, file: !917, line: 302, type: !12930)
!12929 = distinct !DILexicalBlock(scope: !922, file: !917, line: 301, column: 3)
!12930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12931, size: 64)
!12931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!12932 = !DILocation(line: 302, column: 42, scope: !12929)
!12933 = !DILocation(line: 303, column: 5, scope: !12929)
!12934 = !DILocation(line: 303, column: 12, scope: !12929)
!12935 = !DILocation(line: 303, column: 28, scope: !12929)
!12936 = !DILocation(line: 303, column: 43, scope: !12929)
!12937 = !DILocation(line: 305, column: 42, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !917, line: 305, column: 11)
!12939 = distinct !DILexicalBlock(scope: !12929, file: !917, line: 304, column: 5)
!12940 = !DILocation(line: 305, column: 58, scope: !12938)
!12941 = !DILocation(line: 305, column: 11, scope: !12938)
!12942 = !DILocation(line: 305, column: 11, scope: !12939)
!12943 = !DILocation(line: 308, column: 9, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12938, file: !917, line: 306, column: 7)
!12945 = !DILocation(line: 309, column: 13, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12944, file: !917, line: 309, column: 13)
!12947 = !DILocation(line: 309, column: 49, scope: !12946)
!12948 = !DILocation(line: 310, column: 13, scope: !12946)
!12949 = !DILocation(line: 310, column: 50, scope: !12946)
!12950 = !DILocation(line: 311, column: 13, scope: !12946)
!12951 = !DILocation(line: 309, column: 13, scope: !12944)
!12952 = !DILocation(line: 313, column: 13, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12946, file: !917, line: 312, column: 9)
!12954 = !DILocation(line: 313, column: 29, scope: !12953)
!12955 = !DILocation(line: 313, column: 41, scope: !12953)
!12956 = !DILocation(line: 314, column: 9, scope: !12953)
!12957 = !DILocation(line: 315, column: 18, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12946, file: !917, line: 315, column: 18)
!12959 = !DILocation(line: 315, column: 53, scope: !12958)
!12960 = !DILocation(line: 316, column: 18, scope: !12958)
!12961 = !DILocation(line: 316, column: 56, scope: !12958)
!12962 = !DILocation(line: 317, column: 18, scope: !12958)
!12963 = !DILocation(line: 315, column: 18, scope: !12946)
!12964 = !DILocation(line: 319, column: 13, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12958, file: !917, line: 318, column: 9)
!12966 = !DILocation(line: 319, column: 29, scope: !12965)
!12967 = !DILocation(line: 319, column: 41, scope: !12965)
!12968 = !DILocation(line: 320, column: 9, scope: !12965)
!12969 = !DILocation(line: 321, column: 18, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12958, file: !917, line: 321, column: 18)
!12971 = !DILocation(line: 321, column: 18, scope: !12958)
!12972 = !DILocation(line: 324, column: 16, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12970, file: !917, line: 322, column: 9)
!12974 = !DILocation(line: 323, column: 11, scope: !12973)
!12975 = !DILocation(line: 325, column: 9, scope: !12973)
!12976 = !DILocation(line: 326, column: 9, scope: !12944)
!12977 = !DILocation(line: 328, column: 21, scope: !12939)
!12978 = distinct !{!12978, !12933, !12979}
!12979 = !DILocation(line: 329, column: 5, scope: !12929)
!12980 = !DILocalVariable(name: "p_uint_setting", scope: !12981, file: !917, line: 333, type: !12982)
!12981 = distinct !DILexicalBlock(scope: !922, file: !917, line: 332, column: 3)
!12982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12983, size: 64)
!12983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!12984 = !DILocation(line: 333, column: 42, scope: !12981)
!12985 = !DILocation(line: 334, column: 5, scope: !12981)
!12986 = !DILocation(line: 334, column: 12, scope: !12981)
!12987 = !DILocation(line: 334, column: 28, scope: !12981)
!12988 = !DILocation(line: 334, column: 43, scope: !12981)
!12989 = !DILocation(line: 336, column: 42, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12991, file: !917, line: 336, column: 11)
!12991 = distinct !DILexicalBlock(scope: !12981, file: !917, line: 335, column: 5)
!12992 = !DILocation(line: 336, column: 58, scope: !12990)
!12993 = !DILocation(line: 336, column: 11, scope: !12990)
!12994 = !DILocation(line: 336, column: 11, scope: !12991)
!12995 = !DILocation(line: 340, column: 14, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12997, file: !917, line: 340, column: 13)
!12997 = distinct !DILexicalBlock(scope: !12990, file: !917, line: 337, column: 7)
!12998 = !DILocation(line: 340, column: 40, scope: !12996)
!12999 = !DILocation(line: 341, column: 13, scope: !12996)
!13000 = !DILocation(line: 341, column: 46, scope: !12996)
!13001 = !DILocation(line: 340, column: 13, scope: !12997)
!13002 = !DILocation(line: 343, column: 43, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !12996, file: !917, line: 342, column: 9)
!13004 = !DILocation(line: 343, column: 13, scope: !13003)
!13005 = !DILocation(line: 343, column: 29, scope: !13003)
!13006 = !DILocation(line: 343, column: 41, scope: !13003)
!13007 = !DILocation(line: 344, column: 9, scope: !13003)
!13008 = !DILocation(line: 348, column: 58, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12996, file: !917, line: 346, column: 9)
!13010 = !DILocation(line: 348, column: 13, scope: !13009)
!13011 = !DILocation(line: 348, column: 29, scope: !13009)
!13012 = !DILocation(line: 348, column: 41, scope: !13009)
!13013 = !DILocation(line: 350, column: 9, scope: !12997)
!13014 = !DILocation(line: 352, column: 21, scope: !12991)
!13015 = distinct !{!13015, !12985, !13016}
!13016 = !DILocation(line: 353, column: 5, scope: !12981)
!13017 = !DILocation(line: 355, column: 7, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !922, file: !917, line: 355, column: 7)
!13019 = !DILocation(line: 355, column: 7, scope: !922)
!13020 = !DILocation(line: 357, column: 52, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13018, file: !917, line: 356, column: 3)
!13022 = !DILocation(line: 357, column: 5, scope: !13021)
!13023 = !DILocation(line: 358, column: 3, scope: !13021)
!13024 = !DILocation(line: 359, column: 1, scope: !922)
!13025 = distinct !DISubprogram(name: "vsf_secutil_change_credentials", scope: !1857, file: !1857, line: 16, type: !13026, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1856, retainedNodes: !128)
!13026 = !DISubroutineType(types: !13027)
!13027 = !{null, !13028, !13028, !13028, !26, !26}
!13028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13029, size: 64)
!13029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13030)
!13030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !13031)
!13031 = !{!13032, !13033, !13034}
!13032 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !13030, file: !34, line: 12, baseType: !16, size: 64)
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !13030, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !13030, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!13035 = !DILocalVariable(name: "p_user_str", arg: 1, scope: !13025, file: !1857, line: 16, type: !13028)
!13036 = !DILocation(line: 16, column: 52, scope: !13025)
!13037 = !DILocalVariable(name: "p_dir_str", arg: 2, scope: !13025, file: !1857, line: 17, type: !13028)
!13038 = !DILocation(line: 17, column: 52, scope: !13025)
!13039 = !DILocalVariable(name: "p_ext_dir_str", arg: 3, scope: !13025, file: !1857, line: 18, type: !13028)
!13040 = !DILocation(line: 18, column: 52, scope: !13025)
!13041 = !DILocalVariable(name: "caps", arg: 4, scope: !13025, file: !1857, line: 19, type: !26)
!13042 = !DILocation(line: 19, column: 45, scope: !13025)
!13043 = !DILocalVariable(name: "options", arg: 5, scope: !13025, file: !1857, line: 19, type: !26)
!13044 = !DILocation(line: 19, column: 64, scope: !13025)
!13045 = !DILocalVariable(name: "p_user", scope: !13025, file: !1857, line: 21, type: !1465)
!13046 = !DILocation(line: 21, column: 28, scope: !13025)
!13047 = !DILocation(line: 22, column: 8, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 22, column: 7)
!13049 = !DILocation(line: 22, column: 7, scope: !13025)
!13050 = !DILocation(line: 24, column: 5, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13048, file: !1857, line: 23, column: 3)
!13052 = !DILocation(line: 25, column: 3, scope: !13051)
!13053 = !DILocation(line: 26, column: 25, scope: !13025)
!13054 = !DILocation(line: 26, column: 12, scope: !13025)
!13055 = !DILocation(line: 26, column: 10, scope: !13025)
!13056 = !DILocation(line: 27, column: 7, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 27, column: 7)
!13058 = !DILocation(line: 27, column: 14, scope: !13057)
!13059 = !DILocation(line: 27, column: 7, scope: !13025)
!13060 = !DILocation(line: 29, column: 50, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13057, file: !1857, line: 28, column: 3)
!13062 = !DILocation(line: 29, column: 39, scope: !13061)
!13063 = !DILocation(line: 29, column: 5, scope: !13061)
!13064 = !DILocation(line: 30, column: 3, scope: !13061)
!13065 = !DILocalVariable(name: "dir_str", scope: !13066, file: !1857, line: 32, type: !13030)
!13066 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 31, column: 3)
!13067 = !DILocation(line: 32, column: 18, scope: !13066)
!13068 = !DILocation(line: 34, column: 9, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13066, file: !1857, line: 34, column: 9)
!13070 = !DILocation(line: 34, column: 19, scope: !13069)
!13071 = !DILocation(line: 34, column: 24, scope: !13069)
!13072 = !DILocation(line: 34, column: 39, scope: !13069)
!13073 = !DILocation(line: 34, column: 27, scope: !13069)
!13074 = !DILocation(line: 34, column: 9, scope: !13066)
!13075 = !DILocation(line: 36, column: 61, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13069, file: !1857, line: 35, column: 5)
!13077 = !DILocation(line: 36, column: 32, scope: !13076)
!13078 = !DILocation(line: 36, column: 7, scope: !13076)
!13079 = !DILocation(line: 37, column: 5, scope: !13076)
!13080 = !DILocation(line: 40, column: 26, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13069, file: !1857, line: 39, column: 5)
!13082 = !DILocation(line: 40, column: 7, scope: !13081)
!13083 = !DILocation(line: 45, column: 9, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13066, file: !1857, line: 45, column: 9)
!13085 = !DILocation(line: 45, column: 17, scope: !13084)
!13086 = !DILocation(line: 45, column: 9, scope: !13066)
!13087 = !DILocation(line: 47, column: 30, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13084, file: !1857, line: 46, column: 5)
!13089 = !DILocation(line: 47, column: 7, scope: !13088)
!13090 = !DILocation(line: 48, column: 5, scope: !13088)
!13091 = !DILocation(line: 51, column: 7, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13084, file: !1857, line: 50, column: 5)
!13093 = !DILocalVariable(name: "saved_euid", scope: !13094, file: !1857, line: 58, type: !19)
!13094 = distinct !DILexicalBlock(scope: !13066, file: !1857, line: 54, column: 5)
!13095 = !DILocation(line: 58, column: 11, scope: !13094)
!13096 = !DILocalVariable(name: "saved_egid", scope: !13094, file: !1857, line: 59, type: !19)
!13097 = !DILocation(line: 59, column: 11, scope: !13094)
!13098 = !DILocalVariable(name: "retval", scope: !13094, file: !1857, line: 60, type: !19)
!13099 = !DILocation(line: 60, column: 11, scope: !13094)
!13100 = !DILocation(line: 61, column: 11, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13094, file: !1857, line: 61, column: 11)
!13102 = !DILocation(line: 61, column: 19, scope: !13101)
!13103 = !DILocation(line: 61, column: 11, scope: !13094)
!13104 = !DILocation(line: 63, column: 22, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13101, file: !1857, line: 62, column: 7)
!13106 = !DILocation(line: 63, column: 20, scope: !13105)
!13107 = !DILocation(line: 64, column: 22, scope: !13105)
!13108 = !DILocation(line: 64, column: 20, scope: !13105)
!13109 = !DILocation(line: 65, column: 29, scope: !13105)
!13110 = !DILocation(line: 65, column: 9, scope: !13105)
!13111 = !DILocation(line: 66, column: 29, scope: !13105)
!13112 = !DILocation(line: 66, column: 9, scope: !13105)
!13113 = !DILocation(line: 67, column: 7, scope: !13105)
!13114 = !DILocation(line: 68, column: 16, scope: !13094)
!13115 = !DILocation(line: 68, column: 14, scope: !13094)
!13116 = !DILocation(line: 69, column: 11, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13094, file: !1857, line: 69, column: 11)
!13118 = !DILocation(line: 69, column: 18, scope: !13117)
!13119 = !DILocation(line: 69, column: 11, scope: !13094)
!13120 = !DILocation(line: 71, column: 42, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13117, file: !1857, line: 70, column: 7)
!13122 = !DILocation(line: 71, column: 9, scope: !13121)
!13123 = !DILocation(line: 72, column: 7, scope: !13121)
!13124 = !DILocation(line: 73, column: 11, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13094, file: !1857, line: 73, column: 11)
!13126 = !DILocation(line: 73, column: 25, scope: !13125)
!13127 = !DILocation(line: 73, column: 41, scope: !13125)
!13128 = !DILocation(line: 73, column: 29, scope: !13125)
!13129 = !DILocation(line: 73, column: 11, scope: !13094)
!13130 = !DILocation(line: 75, column: 28, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13125, file: !1857, line: 74, column: 7)
!13132 = !DILocation(line: 75, column: 18, scope: !13131)
!13133 = !DILocation(line: 75, column: 16, scope: !13131)
!13134 = !DILocation(line: 79, column: 13, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13131, file: !1857, line: 79, column: 13)
!13136 = !DILocation(line: 79, column: 20, scope: !13135)
!13137 = !DILocation(line: 79, column: 25, scope: !13135)
!13138 = !DILocation(line: 79, column: 30, scope: !13135)
!13139 = !DILocation(line: 79, column: 38, scope: !13135)
!13140 = !DILocation(line: 79, column: 13, scope: !13131)
!13141 = !DILocation(line: 81, column: 18, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13135, file: !1857, line: 80, column: 9)
!13143 = !DILocation(line: 82, column: 9, scope: !13142)
!13144 = !DILocation(line: 83, column: 7, scope: !13131)
!13145 = !DILocation(line: 84, column: 11, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13094, file: !1857, line: 84, column: 11)
!13147 = !DILocation(line: 84, column: 18, scope: !13146)
!13148 = !DILocation(line: 84, column: 11, scope: !13094)
!13149 = !DILocation(line: 86, column: 53, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13146, file: !1857, line: 85, column: 7)
!13151 = !DILocation(line: 86, column: 42, scope: !13150)
!13152 = !DILocation(line: 86, column: 9, scope: !13150)
!13153 = !DILocation(line: 87, column: 7, scope: !13150)
!13154 = !DILocation(line: 88, column: 11, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13094, file: !1857, line: 88, column: 11)
!13156 = !DILocation(line: 88, column: 19, scope: !13155)
!13157 = !DILocation(line: 88, column: 11, scope: !13094)
!13158 = !DILocation(line: 90, column: 37, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13155, file: !1857, line: 89, column: 7)
!13160 = !DILocation(line: 90, column: 9, scope: !13159)
!13161 = !DILocation(line: 91, column: 37, scope: !13159)
!13162 = !DILocation(line: 91, column: 9, scope: !13159)
!13163 = !DILocation(line: 92, column: 7, scope: !13159)
!13164 = !DILocation(line: 94, column: 11, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13094, file: !1857, line: 94, column: 11)
!13166 = !DILocation(line: 94, column: 19, scope: !13165)
!13167 = !DILocation(line: 94, column: 11, scope: !13094)
!13168 = !DILocation(line: 96, column: 9, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13165, file: !1857, line: 95, column: 7)
!13170 = !DILocation(line: 97, column: 7, scope: !13169)
!13171 = !DILocation(line: 99, column: 5, scope: !13066)
!13172 = !DILocation(line: 101, column: 7, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 101, column: 7)
!13174 = !DILocation(line: 101, column: 15, scope: !13173)
!13175 = !DILocation(line: 101, column: 7, scope: !13025)
!13176 = !DILocation(line: 103, column: 5, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13173, file: !1857, line: 102, column: 3)
!13178 = !DILocation(line: 104, column: 3, scope: !13177)
!13179 = !DILocation(line: 106, column: 7, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 106, column: 7)
!13181 = !DILocation(line: 106, column: 7, scope: !13025)
!13182 = !DILocation(line: 108, column: 10, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !1857, line: 108, column: 9)
!13184 = distinct !DILexicalBlock(scope: !13180, file: !1857, line: 107, column: 3)
!13185 = !DILocation(line: 108, column: 9, scope: !13184)
!13186 = !DILocation(line: 111, column: 7, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13183, file: !1857, line: 109, column: 5)
!13188 = !DILocation(line: 113, column: 10, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13184, file: !1857, line: 113, column: 9)
!13190 = !DILocation(line: 113, column: 9, scope: !13184)
!13191 = !DILocation(line: 115, column: 37, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13189, file: !1857, line: 114, column: 5)
!13193 = !DILocation(line: 115, column: 7, scope: !13192)
!13194 = !DILocation(line: 116, column: 7, scope: !13192)
!13195 = !DILocation(line: 118, column: 5, scope: !13184)
!13196 = !DILocation(line: 119, column: 3, scope: !13184)
!13197 = !DILocation(line: 121, column: 22, scope: !13025)
!13198 = !DILocation(line: 121, column: 3, scope: !13025)
!13199 = !DILocation(line: 123, column: 22, scope: !13025)
!13200 = !DILocation(line: 123, column: 3, scope: !13025)
!13201 = !DILocation(line: 124, column: 7, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 124, column: 7)
!13203 = !DILocation(line: 124, column: 7, scope: !13025)
!13204 = !DILocation(line: 126, column: 35, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13202, file: !1857, line: 125, column: 3)
!13206 = !DILocation(line: 126, column: 5, scope: !13205)
!13207 = !DILocation(line: 127, column: 3, scope: !13205)
!13208 = !DILocation(line: 128, column: 7, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 128, column: 7)
!13210 = !DILocation(line: 128, column: 15, scope: !13209)
!13211 = !DILocation(line: 128, column: 7, scope: !13025)
!13212 = !DILocation(line: 130, column: 5, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13209, file: !1857, line: 129, column: 3)
!13214 = !DILocation(line: 131, column: 3, scope: !13213)
!13215 = !DILocation(line: 135, column: 8, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13025, file: !1857, line: 135, column: 7)
!13217 = !DILocation(line: 135, column: 16, scope: !13216)
!13218 = !DILocation(line: 135, column: 45, scope: !13216)
!13219 = !DILocation(line: 136, column: 9, scope: !13216)
!13220 = !DILocation(line: 136, column: 17, scope: !13216)
!13221 = !DILocation(line: 135, column: 7, scope: !13025)
!13222 = !DILocation(line: 138, column: 9, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13224, file: !1857, line: 138, column: 9)
!13224 = distinct !DILexicalBlock(scope: !13216, file: !1857, line: 137, column: 3)
!13225 = !DILocation(line: 138, column: 9, scope: !13224)
!13226 = !DILocation(line: 140, column: 7, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13223, file: !1857, line: 139, column: 5)
!13228 = !DILocation(line: 141, column: 5, scope: !13227)
!13229 = !DILocation(line: 142, column: 3, scope: !13224)
!13230 = !DILocation(line: 143, column: 1, scope: !13025)
!13231 = distinct !DISubprogram(name: "vsf_ascii_ascii_to_bin", scope: !1859, file: !1859, line: 13, type: !13232, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1858, retainedNodes: !128)
!13232 = !DISubroutineType(types: !13233)
!13233 = !{!13234, !16, !26, !19}
!13234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ascii_to_bin_ret", file: !8215, line: 22, size: 128, elements: !13235)
!13235 = !{!13236, !13237, !13238}
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "stored", scope: !13234, file: !8215, line: 24, baseType: !26, size: 32)
!13237 = !DIDerivedType(tag: DW_TAG_member, name: "last_was_cr", scope: !13234, file: !8215, line: 25, baseType: !19, size: 32, offset: 32)
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "p_buf", scope: !13234, file: !8215, line: 26, baseType: !16, size: 64, offset: 64)
!13239 = !DILocalVariable(name: "p_buf", arg: 1, scope: !13231, file: !1859, line: 13, type: !16)
!13240 = !DILocation(line: 13, column: 30, scope: !13231)
!13241 = !DILocalVariable(name: "in_len", arg: 2, scope: !13231, file: !1859, line: 13, type: !26)
!13242 = !DILocation(line: 13, column: 50, scope: !13231)
!13243 = !DILocalVariable(name: "prev_cr", arg: 3, scope: !13231, file: !1859, line: 13, type: !19)
!13244 = !DILocation(line: 13, column: 62, scope: !13231)
!13245 = !DILocalVariable(name: "ret", scope: !13231, file: !1859, line: 18, type: !13234)
!13246 = !DILocation(line: 18, column: 27, scope: !13231)
!13247 = !DILocalVariable(name: "indexx", scope: !13231, file: !1859, line: 19, type: !26)
!13248 = !DILocation(line: 19, column: 16, scope: !13231)
!13249 = !DILocalVariable(name: "written", scope: !13231, file: !1859, line: 20, type: !26)
!13250 = !DILocation(line: 20, column: 16, scope: !13231)
!13251 = !DILocalVariable(name: "p_out", scope: !13231, file: !1859, line: 21, type: !16)
!13252 = !DILocation(line: 21, column: 9, scope: !13231)
!13253 = !DILocation(line: 21, column: 17, scope: !13231)
!13254 = !DILocation(line: 21, column: 23, scope: !13231)
!13255 = !DILocation(line: 22, column: 7, scope: !13231)
!13256 = !DILocation(line: 22, column: 19, scope: !13231)
!13257 = !DILocation(line: 23, column: 7, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13231, file: !1859, line: 23, column: 7)
!13259 = !DILocation(line: 23, column: 15, scope: !13258)
!13260 = !DILocation(line: 23, column: 20, scope: !13258)
!13261 = !DILocation(line: 23, column: 27, scope: !13258)
!13262 = !DILocation(line: 23, column: 30, scope: !13258)
!13263 = !DILocation(line: 23, column: 39, scope: !13258)
!13264 = !DILocation(line: 23, column: 7, scope: !13231)
!13265 = !DILocation(line: 25, column: 5, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13258, file: !1859, line: 24, column: 3)
!13267 = !DILocation(line: 25, column: 14, scope: !13266)
!13268 = !DILocation(line: 26, column: 17, scope: !13266)
!13269 = !DILocation(line: 26, column: 9, scope: !13266)
!13270 = !DILocation(line: 26, column: 15, scope: !13266)
!13271 = !DILocation(line: 27, column: 12, scope: !13266)
!13272 = !DILocation(line: 28, column: 3, scope: !13266)
!13273 = !DILocation(line: 31, column: 17, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13258, file: !1859, line: 30, column: 3)
!13275 = !DILocation(line: 31, column: 9, scope: !13274)
!13276 = !DILocation(line: 31, column: 15, scope: !13274)
!13277 = !DILocation(line: 33, column: 3, scope: !13231)
!13278 = !DILocation(line: 33, column: 10, scope: !13231)
!13279 = !DILocation(line: 33, column: 19, scope: !13231)
!13280 = !DILocation(line: 33, column: 17, scope: !13231)
!13281 = !DILocalVariable(name: "the_char", scope: !13282, file: !1859, line: 35, type: !17)
!13282 = distinct !DILexicalBlock(scope: !13231, file: !1859, line: 34, column: 3)
!13283 = !DILocation(line: 35, column: 10, scope: !13282)
!13284 = !DILocation(line: 35, column: 21, scope: !13282)
!13285 = !DILocation(line: 35, column: 27, scope: !13282)
!13286 = !DILocation(line: 35, column: 34, scope: !13282)
!13287 = !DILocation(line: 36, column: 9, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13282, file: !1859, line: 36, column: 9)
!13289 = !DILocation(line: 36, column: 18, scope: !13288)
!13290 = !DILocation(line: 36, column: 9, scope: !13282)
!13291 = !DILocation(line: 38, column: 18, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13288, file: !1859, line: 37, column: 5)
!13293 = !DILocation(line: 38, column: 13, scope: !13292)
!13294 = !DILocation(line: 38, column: 16, scope: !13292)
!13295 = !DILocation(line: 39, column: 14, scope: !13292)
!13296 = !DILocation(line: 40, column: 5, scope: !13292)
!13297 = !DILocation(line: 41, column: 14, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13288, file: !1859, line: 41, column: 14)
!13299 = !DILocation(line: 41, column: 24, scope: !13298)
!13300 = !DILocation(line: 41, column: 31, scope: !13298)
!13301 = !DILocation(line: 41, column: 21, scope: !13298)
!13302 = !DILocation(line: 41, column: 14, scope: !13288)
!13303 = !DILocation(line: 43, column: 11, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13298, file: !1859, line: 42, column: 5)
!13305 = !DILocation(line: 43, column: 23, scope: !13304)
!13306 = !DILocation(line: 44, column: 5, scope: !13304)
!13307 = !DILocation(line: 45, column: 14, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13298, file: !1859, line: 45, column: 14)
!13309 = !DILocation(line: 45, column: 20, scope: !13308)
!13310 = !DILocation(line: 45, column: 27, scope: !13308)
!13311 = !DILocation(line: 45, column: 32, scope: !13308)
!13312 = !DILocation(line: 45, column: 14, scope: !13298)
!13313 = !DILocation(line: 47, column: 18, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13308, file: !1859, line: 46, column: 5)
!13315 = !DILocation(line: 47, column: 13, scope: !13314)
!13316 = !DILocation(line: 47, column: 16, scope: !13314)
!13317 = !DILocation(line: 48, column: 14, scope: !13314)
!13318 = !DILocation(line: 49, column: 5, scope: !13314)
!13319 = !DILocation(line: 50, column: 11, scope: !13282)
!13320 = distinct !{!13320, !13277, !13321}
!13321 = !DILocation(line: 51, column: 3, scope: !13231)
!13322 = !DILocation(line: 52, column: 16, scope: !13231)
!13323 = !DILocation(line: 52, column: 7, scope: !13231)
!13324 = !DILocation(line: 52, column: 14, scope: !13231)
!13325 = !DILocation(line: 53, column: 10, scope: !13231)
!13326 = !DILocation(line: 53, column: 3, scope: !13231)
!13327 = distinct !DISubprogram(name: "vsf_ascii_bin_to_ascii", scope: !1859, file: !1859, line: 57, type: !13328, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1858, retainedNodes: !128)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{!13330, !88, !16, !26, !19}
!13330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_to_ascii_ret", file: !8215, line: 47, size: 64, elements: !13331)
!13331 = !{!13332, !13333}
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "stored", scope: !13330, file: !8215, line: 49, baseType: !26, size: 32)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "last_was_cr", scope: !13330, file: !8215, line: 50, baseType: !19, size: 32, offset: 32)
!13334 = !DILocalVariable(name: "p_in", arg: 1, scope: !13327, file: !1859, line: 57, type: !88)
!13335 = !DILocation(line: 57, column: 36, scope: !13327)
!13336 = !DILocalVariable(name: "p_out", arg: 2, scope: !13327, file: !1859, line: 58, type: !16)
!13337 = !DILocation(line: 58, column: 30, scope: !13327)
!13338 = !DILocalVariable(name: "in_len", arg: 3, scope: !13327, file: !1859, line: 59, type: !26)
!13339 = !DILocation(line: 59, column: 37, scope: !13327)
!13340 = !DILocalVariable(name: "prev_cr", arg: 4, scope: !13327, file: !1859, line: 60, type: !19)
!13341 = !DILocation(line: 60, column: 28, scope: !13327)
!13342 = !DILocalVariable(name: "ret", scope: !13327, file: !1859, line: 66, type: !13330)
!13343 = !DILocation(line: 66, column: 27, scope: !13327)
!13344 = !DILocalVariable(name: "indexx", scope: !13327, file: !1859, line: 67, type: !26)
!13345 = !DILocation(line: 67, column: 16, scope: !13327)
!13346 = !DILocalVariable(name: "written", scope: !13327, file: !1859, line: 68, type: !26)
!13347 = !DILocation(line: 68, column: 16, scope: !13327)
!13348 = !DILocalVariable(name: "last_char", scope: !13327, file: !1859, line: 69, type: !17)
!13349 = !DILocation(line: 69, column: 8, scope: !13327)
!13350 = !DILocation(line: 70, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13327, file: !1859, line: 70, column: 7)
!13352 = !DILocation(line: 70, column: 7, scope: !13327)
!13353 = !DILocation(line: 72, column: 15, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13351, file: !1859, line: 71, column: 3)
!13355 = !DILocation(line: 73, column: 9, scope: !13354)
!13356 = !DILocation(line: 73, column: 21, scope: !13354)
!13357 = !DILocation(line: 74, column: 3, scope: !13354)
!13358 = !DILocation(line: 75, column: 3, scope: !13327)
!13359 = !DILocation(line: 75, column: 10, scope: !13327)
!13360 = !DILocation(line: 75, column: 19, scope: !13327)
!13361 = !DILocation(line: 75, column: 17, scope: !13327)
!13362 = !DILocalVariable(name: "the_char", scope: !13363, file: !1859, line: 77, type: !17)
!13363 = distinct !DILexicalBlock(scope: !13327, file: !1859, line: 76, column: 3)
!13364 = !DILocation(line: 77, column: 10, scope: !13363)
!13365 = !DILocation(line: 77, column: 21, scope: !13363)
!13366 = !DILocation(line: 77, column: 26, scope: !13363)
!13367 = !DILocation(line: 78, column: 9, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13363, file: !1859, line: 78, column: 9)
!13369 = !DILocation(line: 78, column: 18, scope: !13368)
!13370 = !DILocation(line: 78, column: 26, scope: !13368)
!13371 = !DILocation(line: 78, column: 29, scope: !13368)
!13372 = !DILocation(line: 78, column: 39, scope: !13368)
!13373 = !DILocation(line: 78, column: 9, scope: !13363)
!13374 = !DILocation(line: 80, column: 13, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13368, file: !1859, line: 79, column: 5)
!13376 = !DILocation(line: 80, column: 16, scope: !13375)
!13377 = !DILocation(line: 81, column: 14, scope: !13375)
!13378 = !DILocation(line: 82, column: 5, scope: !13375)
!13379 = !DILocation(line: 83, column: 16, scope: !13363)
!13380 = !DILocation(line: 83, column: 11, scope: !13363)
!13381 = !DILocation(line: 83, column: 14, scope: !13363)
!13382 = !DILocation(line: 84, column: 12, scope: !13363)
!13383 = !DILocation(line: 85, column: 11, scope: !13363)
!13384 = !DILocation(line: 86, column: 17, scope: !13363)
!13385 = !DILocation(line: 86, column: 15, scope: !13363)
!13386 = !DILocation(line: 87, column: 9, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13363, file: !1859, line: 87, column: 9)
!13388 = !DILocation(line: 87, column: 18, scope: !13387)
!13389 = !DILocation(line: 87, column: 9, scope: !13363)
!13390 = !DILocation(line: 89, column: 11, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13387, file: !1859, line: 88, column: 5)
!13392 = !DILocation(line: 89, column: 23, scope: !13391)
!13393 = !DILocation(line: 90, column: 5, scope: !13391)
!13394 = !DILocation(line: 93, column: 11, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13387, file: !1859, line: 92, column: 5)
!13396 = !DILocation(line: 93, column: 23, scope: !13395)
!13397 = distinct !{!13397, !13358, !13398}
!13398 = !DILocation(line: 95, column: 3, scope: !13327)
!13399 = !DILocation(line: 96, column: 16, scope: !13327)
!13400 = !DILocation(line: 96, column: 7, scope: !13327)
!13401 = !DILocation(line: 96, column: 14, scope: !13327)
!13402 = !DILocation(line: 97, column: 10, scope: !13327)
!13403 = !DILocation(line: 97, column: 3, scope: !13327)
!13404 = distinct !DISubprogram(name: "vsf_one_process_start", scope: !1861, file: !1861, line: 33, type: !13405, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13405 = !DISubroutineType(types: !13406)
!13406 = !{null, !1864}
!13407 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13404, file: !1861, line: 33, type: !1864)
!13408 = !DILocation(line: 33, column: 43, scope: !13404)
!13409 = !DILocation(line: 35, column: 7, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13404, file: !1861, line: 35, column: 7)
!13411 = !DILocation(line: 35, column: 7, scope: !13404)
!13412 = !DILocalVariable(name: "p_sandbox", scope: !13413, file: !1861, line: 37, type: !13414)
!13413 = distinct !DILexicalBlock(scope: !13410, file: !1861, line: 36, column: 3)
!13414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13415, size: 64)
!13415 = !DICompositeType(tag: DW_TAG_structure_type, name: "pt_sandbox", file: !13416, line: 5, flags: DIFlagFwdDecl)
!13416 = !DIFile(filename: "./ptracesandbox.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!13417 = !DILocation(line: 37, column: 24, scope: !13413)
!13418 = !DILocation(line: 37, column: 36, scope: !13413)
!13419 = !DILocation(line: 38, column: 9, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13413, file: !1861, line: 38, column: 9)
!13421 = !DILocation(line: 38, column: 19, scope: !13420)
!13422 = !DILocation(line: 38, column: 9, scope: !13413)
!13423 = !DILocation(line: 40, column: 7, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13420, file: !1861, line: 39, column: 5)
!13425 = !DILocation(line: 41, column: 5, scope: !13424)
!13426 = !DILocation(line: 42, column: 18, scope: !13413)
!13427 = !DILocation(line: 42, column: 29, scope: !13413)
!13428 = !DILocation(line: 42, column: 5, scope: !13413)
!13429 = !DILocation(line: 43, column: 39, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13413, file: !1861, line: 43, column: 9)
!13431 = !DILocation(line: 45, column: 47, scope: !13430)
!13432 = !DILocation(line: 45, column: 39, scope: !13430)
!13433 = !DILocation(line: 43, column: 9, scope: !13430)
!13434 = !DILocation(line: 45, column: 55, scope: !13430)
!13435 = !DILocation(line: 43, column: 9, scope: !13413)
!13436 = !DILocation(line: 47, column: 7, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13430, file: !1861, line: 46, column: 5)
!13438 = !DILocation(line: 48, column: 5, scope: !13437)
!13439 = !DILocation(line: 53, column: 41, scope: !13413)
!13440 = !DILocation(line: 53, column: 12, scope: !13413)
!13441 = !DILocation(line: 54, column: 25, scope: !13413)
!13442 = !DILocation(line: 54, column: 5, scope: !13413)
!13443 = !DILocation(line: 55, column: 5, scope: !13413)
!13444 = !DILocation(line: 56, column: 3, scope: !13413)
!13445 = !DILocation(line: 59, column: 31, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13410, file: !1861, line: 58, column: 3)
!13447 = !DILocation(line: 59, column: 23, scope: !13446)
!13448 = !DILocation(line: 59, column: 5, scope: !13446)
!13449 = !DILocation(line: 61, column: 1, scope: !13404)
!13450 = distinct !DISubprogram(name: "one_process_start", scope: !1861, file: !1861, line: 64, type: !1072, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13451 = !DILocalVariable(name: "p_arg", arg: 1, scope: !13450, file: !1861, line: 64, type: !80)
!13452 = !DILocation(line: 64, column: 25, scope: !13450)
!13453 = !DILocalVariable(name: "p_sess", scope: !13450, file: !1861, line: 66, type: !1864)
!13454 = !DILocation(line: 66, column: 23, scope: !13450)
!13455 = !DILocation(line: 66, column: 54, scope: !13450)
!13456 = !DILocation(line: 66, column: 32, scope: !13450)
!13457 = !DILocalVariable(name: "caps", scope: !13450, file: !1861, line: 67, type: !26)
!13458 = !DILocation(line: 67, column: 16, scope: !13450)
!13459 = !DILocation(line: 68, column: 7, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13450, file: !1861, line: 68, column: 7)
!13461 = !DILocation(line: 68, column: 7, scope: !13450)
!13462 = !DILocation(line: 70, column: 10, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13460, file: !1861, line: 69, column: 3)
!13464 = !DILocation(line: 71, column: 3, scope: !13463)
!13465 = !DILocation(line: 72, column: 7, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13450, file: !1861, line: 72, column: 7)
!13467 = !DILocation(line: 72, column: 7, scope: !13450)
!13468 = !DILocation(line: 74, column: 10, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13466, file: !1861, line: 73, column: 3)
!13470 = !DILocation(line: 75, column: 3, scope: !13469)
!13471 = !DILocalVariable(name: "user_name", scope: !13472, file: !1861, line: 77, type: !1882)
!13472 = distinct !DILexicalBlock(scope: !13450, file: !1861, line: 76, column: 3)
!13473 = !DILocation(line: 77, column: 18, scope: !13472)
!13474 = !DILocalVariable(name: "chdir_str", scope: !13472, file: !1861, line: 78, type: !1882)
!13475 = !DILocation(line: 78, column: 18, scope: !13472)
!13476 = !DILocation(line: 79, column: 9, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13472, file: !1861, line: 79, column: 9)
!13478 = !DILocation(line: 79, column: 9, scope: !13472)
!13479 = !DILocation(line: 81, column: 34, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13477, file: !1861, line: 80, column: 5)
!13481 = !DILocation(line: 81, column: 7, scope: !13480)
!13482 = !DILocation(line: 82, column: 5, scope: !13480)
!13483 = !DILocation(line: 83, column: 9, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13472, file: !1861, line: 83, column: 9)
!13485 = !DILocation(line: 83, column: 9, scope: !13472)
!13486 = !DILocation(line: 85, column: 34, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13484, file: !1861, line: 84, column: 5)
!13488 = !DILocation(line: 85, column: 7, scope: !13487)
!13489 = !DILocation(line: 86, column: 5, scope: !13487)
!13490 = !DILocation(line: 87, column: 9, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13472, file: !1861, line: 87, column: 9)
!13492 = !DILocation(line: 87, column: 9, scope: !13472)
!13493 = !DILocation(line: 89, column: 12, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13495, file: !1861, line: 89, column: 11)
!13495 = distinct !DILexicalBlock(scope: !13491, file: !1861, line: 88, column: 5)
!13496 = !DILocation(line: 89, column: 11, scope: !13495)
!13497 = !DILocation(line: 91, column: 9, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13494, file: !1861, line: 90, column: 7)
!13499 = !DILocation(line: 92, column: 7, scope: !13498)
!13500 = !DILocation(line: 93, column: 5, scope: !13495)
!13501 = !DILocation(line: 96, column: 65, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13491, file: !1861, line: 95, column: 5)
!13503 = !DILocation(line: 96, column: 7, scope: !13502)
!13504 = !DILocation(line: 101, column: 5, scope: !13472)
!13505 = !DILocation(line: 102, column: 5, scope: !13472)
!13506 = !DILocation(line: 104, column: 7, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13450, file: !1861, line: 104, column: 7)
!13508 = !DILocation(line: 104, column: 7, scope: !13450)
!13509 = !DILocation(line: 106, column: 5, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13507, file: !1861, line: 105, column: 3)
!13511 = !DILocation(line: 107, column: 3, scope: !13510)
!13512 = !DILocation(line: 108, column: 3, scope: !13450)
!13513 = !DILocation(line: 109, column: 35, scope: !13450)
!13514 = !DILocation(line: 109, column: 3, scope: !13450)
!13515 = !DILocation(line: 110, column: 3, scope: !13450)
!13516 = !DILocation(line: 111, column: 19, scope: !13450)
!13517 = !DILocation(line: 111, column: 3, scope: !13450)
!13518 = !DILocation(line: 112, column: 1, scope: !13450)
!13519 = distinct !DISubprogram(name: "vsf_one_process_login", scope: !1861, file: !1861, line: 115, type: !13520, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13520 = !DISubroutineType(types: !13521)
!13521 = !{null, !1864, !13522}
!13522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13523, size: 64)
!13523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1882)
!13524 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13519, file: !1861, line: 115, type: !1864)
!13525 = !DILocation(line: 115, column: 43, scope: !13519)
!13526 = !DILocalVariable(name: "p_pass_str", arg: 2, scope: !13519, file: !1861, line: 116, type: !13522)
!13527 = !DILocation(line: 116, column: 43, scope: !13519)
!13528 = !DILocalVariable(name: "login_result", scope: !13519, file: !1861, line: 118, type: !1044)
!13529 = !DILocation(line: 118, column: 30, scope: !13519)
!13530 = !DILocation(line: 119, column: 25, scope: !13519)
!13531 = !DILocation(line: 119, column: 33, scope: !13519)
!13532 = !DILocation(line: 119, column: 5, scope: !13519)
!13533 = !DILocation(line: 120, column: 11, scope: !13519)
!13534 = !DILocation(line: 120, column: 3, scope: !13519)
!13535 = !DILocation(line: 123, column: 7, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13519, file: !1861, line: 121, column: 3)
!13537 = !DILocation(line: 126, column: 7, scope: !13536)
!13538 = !DILocation(line: 126, column: 15, scope: !13536)
!13539 = !DILocation(line: 126, column: 28, scope: !13536)
!13540 = !DILocation(line: 127, column: 26, scope: !13536)
!13541 = !DILocation(line: 127, column: 7, scope: !13536)
!13542 = !DILocation(line: 128, column: 7, scope: !13536)
!13543 = !DILocation(line: 134, column: 7, scope: !13536)
!13544 = !DILocation(line: 135, column: 7, scope: !13536)
!13545 = !DILocation(line: 137, column: 1, scope: !13519)
!13546 = distinct !DISubprogram(name: "vsf_one_process_get_priv_data_sock", scope: !1861, file: !1861, line: 140, type: !13547, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{!19, !1864}
!13549 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13546, file: !1861, line: 140, type: !1864)
!13550 = !DILocation(line: 140, column: 56, scope: !13546)
!13551 = !DILocalVariable(name: "port", scope: !13546, file: !1861, line: 142, type: !225)
!13552 = !DILocation(line: 142, column: 18, scope: !13546)
!13553 = !DILocation(line: 142, column: 55, scope: !13546)
!13554 = !DILocation(line: 142, column: 63, scope: !13546)
!13555 = !DILocation(line: 142, column: 25, scope: !13546)
!13556 = !DILocation(line: 143, column: 39, scope: !13546)
!13557 = !DILocation(line: 143, column: 47, scope: !13546)
!13558 = !DILocation(line: 143, column: 10, scope: !13546)
!13559 = !DILocation(line: 143, column: 3, scope: !13546)
!13560 = distinct !DISubprogram(name: "vsf_one_process_pasv_cleanup", scope: !1861, file: !1861, line: 147, type: !13405, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13561 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13560, file: !1861, line: 147, type: !1864)
!13562 = !DILocation(line: 147, column: 50, scope: !13560)
!13563 = !DILocation(line: 149, column: 27, scope: !13560)
!13564 = !DILocation(line: 149, column: 3, scope: !13560)
!13565 = !DILocation(line: 150, column: 1, scope: !13560)
!13566 = distinct !DISubprogram(name: "vsf_one_process_pasv_active", scope: !1861, file: !1861, line: 153, type: !13547, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13567 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13566, file: !1861, line: 153, type: !1864)
!13568 = !DILocation(line: 153, column: 49, scope: !13566)
!13569 = !DILocation(line: 155, column: 33, scope: !13566)
!13570 = !DILocation(line: 155, column: 10, scope: !13566)
!13571 = !DILocation(line: 155, column: 3, scope: !13566)
!13572 = distinct !DISubprogram(name: "vsf_one_process_listen", scope: !1861, file: !1861, line: 159, type: !13573, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13573 = !DISubroutineType(types: !13574)
!13574 = !{!225, !1864}
!13575 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13572, file: !1861, line: 159, type: !1864)
!13576 = !DILocation(line: 159, column: 44, scope: !13572)
!13577 = !DILocation(line: 161, column: 33, scope: !13572)
!13578 = !DILocation(line: 161, column: 10, scope: !13572)
!13579 = !DILocation(line: 161, column: 3, scope: !13572)
!13580 = distinct !DISubprogram(name: "vsf_one_process_get_pasv_fd", scope: !1861, file: !1861, line: 165, type: !13547, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13581 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13580, file: !1861, line: 165, type: !1864)
!13582 = !DILocation(line: 165, column: 49, scope: !13580)
!13583 = !DILocation(line: 167, column: 33, scope: !13580)
!13584 = !DILocation(line: 167, column: 10, scope: !13580)
!13585 = !DILocation(line: 167, column: 3, scope: !13580)
!13586 = distinct !DISubprogram(name: "vsf_one_process_chown_upload", scope: !1861, file: !1861, line: 171, type: !13587, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1860, retainedNodes: !128)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{null, !1864, !19}
!13589 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13586, file: !1861, line: 171, type: !1864)
!13590 = !DILocation(line: 171, column: 50, scope: !13586)
!13591 = !DILocalVariable(name: "fd", arg: 2, scope: !13586, file: !1861, line: 171, type: !19)
!13592 = !DILocation(line: 171, column: 62, scope: !13586)
!13593 = !DILocation(line: 173, column: 28, scope: !13586)
!13594 = !DILocation(line: 173, column: 36, scope: !13586)
!13595 = !DILocation(line: 173, column: 3, scope: !13586)
!13596 = !DILocation(line: 174, column: 1, scope: !13586)
!13597 = distinct !DISubprogram(name: "vsf_two_process_start", scope: !1930, file: !1930, line: 77, type: !13598, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!13598 = !DISubroutineType(types: !13599)
!13599 = !{null, !13600}
!13600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13601, size: 64)
!13601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !13602)
!13602 = !{!13603, !13604, !13605, !13606, !13607, !13608, !13609, !13610, !13611, !13612, !13613, !13614, !13615, !13616, !13617, !13623, !13624, !13625, !13626, !13627, !13628, !13629, !13630, !13631, !13632, !13633, !13634, !13635, !13636, !13637, !13638, !13639, !13640, !13641, !13642, !13643, !13644, !13645, !13646, !13647, !13648, !13649, !13650, !13651, !13652, !13653, !13654, !13655, !13656, !13657, !13658, !13659, !13660, !13661, !13662, !13663, !13664}
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !13601, file: !8, line: 21, baseType: !154, size: 64)
!13604 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !13601, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!13605 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !13601, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!13606 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !13601, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!13607 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !13601, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !13601, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !13601, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !13601, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !13601, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !13601, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!13613 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !13601, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!13614 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !13601, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !13601, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!13616 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !13601, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !13601, file: !8, line: 39, baseType: !13618, size: 128, offset: 704)
!13618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !13619)
!13619 = !{!13620, !13621, !13622}
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !13618, file: !34, line: 12, baseType: !16, size: 64)
!13621 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !13618, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !13618, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!13623 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !13601, file: !8, line: 40, baseType: !13618, size: 128, offset: 832)
!13624 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !13601, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!13625 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !13601, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!13626 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !13601, file: !8, line: 45, baseType: !13618, size: 128, offset: 1088)
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !13601, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !13601, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !13601, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !13601, file: !8, line: 51, baseType: !13618, size: 128, offset: 1344)
!13631 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !13601, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !13601, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !13601, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!13634 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !13601, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !13601, file: !8, line: 62, baseType: !13618, size: 128, offset: 1664)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !13601, file: !8, line: 63, baseType: !13618, size: 128, offset: 1792)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !13601, file: !8, line: 64, baseType: !13618, size: 128, offset: 1920)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !13601, file: !8, line: 65, baseType: !13618, size: 128, offset: 2048)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !13601, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !13601, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !13601, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !13601, file: !8, line: 71, baseType: !13618, size: 128, offset: 2304)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !13601, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !13601, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !13601, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !13601, file: !8, line: 75, baseType: !13618, size: 128, offset: 2624)
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !13601, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !13601, file: !8, line: 79, baseType: !13618, size: 128, offset: 2816)
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !13601, file: !8, line: 80, baseType: !13618, size: 128, offset: 2944)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !13601, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !13601, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !13601, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !13601, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !13601, file: !8, line: 89, baseType: !13618, size: 128, offset: 3200)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !13601, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !13601, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !13601, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !13601, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !13601, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !13601, file: !8, line: 97, baseType: !13618, size: 128, offset: 3584)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !13601, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !13601, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !13601, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !13601, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!13665 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13597, file: !1930, line: 77, type: !13600)
!13666 = !DILocation(line: 77, column: 43, scope: !13597)
!13667 = !DILocation(line: 79, column: 3, scope: !13597)
!13668 = !DILocation(line: 81, column: 3, scope: !13597)
!13669 = !DILocation(line: 83, column: 18, scope: !13597)
!13670 = !DILocation(line: 83, column: 3, scope: !13597)
!13671 = !DILocation(line: 84, column: 7, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13597, file: !1930, line: 84, column: 7)
!13673 = !DILocation(line: 84, column: 7, scope: !13597)
!13674 = !DILocation(line: 89, column: 27, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13672, file: !1930, line: 85, column: 3)
!13676 = !DILocation(line: 89, column: 5, scope: !13675)
!13677 = !DILocation(line: 90, column: 3, scope: !13675)
!13678 = !DILocation(line: 91, column: 3, scope: !13597)
!13679 = !DILocalVariable(name: "newpid", scope: !13680, file: !1930, line: 93, type: !19)
!13680 = distinct !DILexicalBlock(scope: !13597, file: !1930, line: 92, column: 3)
!13681 = !DILocation(line: 93, column: 9, scope: !13680)
!13682 = !DILocation(line: 94, column: 9, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13680, file: !1930, line: 94, column: 9)
!13684 = !DILocation(line: 94, column: 9, scope: !13680)
!13685 = !DILocation(line: 96, column: 16, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13683, file: !1930, line: 95, column: 5)
!13687 = !DILocation(line: 96, column: 14, scope: !13686)
!13688 = !DILocation(line: 97, column: 5, scope: !13686)
!13689 = !DILocation(line: 100, column: 16, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13683, file: !1930, line: 99, column: 5)
!13691 = !DILocation(line: 100, column: 14, scope: !13690)
!13692 = !DILocation(line: 102, column: 9, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13680, file: !1930, line: 102, column: 9)
!13694 = !DILocation(line: 102, column: 16, scope: !13693)
!13695 = !DILocation(line: 102, column: 9, scope: !13680)
!13696 = !DILocation(line: 104, column: 36, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13693, file: !1930, line: 103, column: 5)
!13698 = !DILocation(line: 104, column: 7, scope: !13697)
!13699 = !DILocation(line: 105, column: 11, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13697, file: !1930, line: 105, column: 11)
!13701 = !DILocation(line: 105, column: 11, scope: !13697)
!13702 = !DILocation(line: 107, column: 47, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13700, file: !1930, line: 106, column: 7)
!13704 = !DILocation(line: 107, column: 9, scope: !13703)
!13705 = !DILocation(line: 108, column: 7, scope: !13703)
!13706 = !DILocation(line: 110, column: 7, scope: !13697)
!13707 = !DILocation(line: 112, column: 27, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13697, file: !1930, line: 111, column: 7)
!13709 = !DILocation(line: 112, column: 9, scope: !13708)
!13710 = distinct !{!13710, !13706, !13711}
!13711 = !DILocation(line: 113, column: 7, scope: !13697)
!13712 = !DILocation(line: 119, column: 3, scope: !13597)
!13713 = !DILocation(line: 120, column: 31, scope: !13597)
!13714 = !DILocation(line: 120, column: 3, scope: !13597)
!13715 = !DILocation(line: 121, column: 7, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13597, file: !1930, line: 121, column: 7)
!13717 = !DILocation(line: 121, column: 7, scope: !13597)
!13718 = !DILocation(line: 123, column: 43, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13716, file: !1930, line: 122, column: 3)
!13720 = !DILocation(line: 123, column: 5, scope: !13719)
!13721 = !DILocation(line: 124, column: 3, scope: !13719)
!13722 = !DILocation(line: 125, column: 7, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13597, file: !1930, line: 125, column: 7)
!13724 = !DILocation(line: 125, column: 28, scope: !13723)
!13725 = !DILocation(line: 125, column: 31, scope: !13723)
!13726 = !DILocation(line: 125, column: 7, scope: !13597)
!13727 = !DILocalVariable(name: "retval", scope: !13728, file: !1930, line: 127, type: !19)
!13728 = distinct !DILexicalBlock(scope: !13723, file: !1930, line: 126, column: 3)
!13729 = !DILocation(line: 127, column: 9, scope: !13728)
!13730 = !DILocation(line: 128, column: 9, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13728, file: !1930, line: 128, column: 9)
!13732 = !DILocation(line: 128, column: 9, scope: !13728)
!13733 = !DILocation(line: 130, column: 30, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13731, file: !1930, line: 129, column: 5)
!13735 = !DILocation(line: 130, column: 38, scope: !13734)
!13736 = !DILocation(line: 130, column: 52, scope: !13734)
!13737 = !DILocation(line: 130, column: 16, scope: !13734)
!13738 = !DILocation(line: 130, column: 14, scope: !13734)
!13739 = !DILocation(line: 132, column: 5, scope: !13734)
!13740 = !DILocation(line: 133, column: 37, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13728, file: !1930, line: 133, column: 9)
!13742 = !DILocation(line: 133, column: 9, scope: !13741)
!13743 = !DILocation(line: 133, column: 9, scope: !13728)
!13744 = !DILocation(line: 135, column: 43, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13741, file: !1930, line: 134, column: 5)
!13746 = !DILocation(line: 135, column: 7, scope: !13745)
!13747 = !DILocation(line: 136, column: 5, scope: !13745)
!13748 = !DILocation(line: 137, column: 3, scope: !13728)
!13749 = !DILocation(line: 138, column: 3, scope: !13597)
!13750 = !DILocation(line: 139, column: 3, scope: !13597)
!13751 = !DILocation(line: 140, column: 34, scope: !13597)
!13752 = !DILocation(line: 140, column: 3, scope: !13597)
!13753 = !DILocation(line: 141, column: 3, scope: !13597)
!13754 = !DILocation(line: 142, column: 19, scope: !13597)
!13755 = !DILocation(line: 142, column: 3, scope: !13597)
!13756 = !DILocation(line: 144, column: 1, scope: !13597)
!13757 = distinct !DISubprogram(name: "handle_sigterm", scope: !1930, file: !1930, line: 67, type: !1072, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!13758 = !DILocalVariable(name: "duff", arg: 1, scope: !13757, file: !1930, line: 67, type: !80)
!13759 = !DILocation(line: 67, column: 22, scope: !13757)
!13760 = !DILocation(line: 69, column: 10, scope: !13757)
!13761 = !DILocation(line: 71, column: 3, scope: !13757)
!13762 = !DILocation(line: 73, column: 3, scope: !13757)
!13763 = !DILocation(line: 74, column: 1, scope: !13757)
!13764 = distinct !DISubprogram(name: "handle_sigchld", scope: !1930, file: !1930, line: 47, type: !1072, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!13765 = !DILocalVariable(name: "duff", arg: 1, scope: !13764, file: !1930, line: 47, type: !80)
!13766 = !DILocation(line: 47, column: 22, scope: !13764)
!13767 = !DILocalVariable(name: "wait_retval", scope: !13764, file: !1930, line: 50, type: !13768)
!13768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_wait_retval", file: !13, line: 172, size: 64, elements: !13769)
!13769 = !{!13770, !13771}
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_syscall_retval", scope: !13768, file: !13, line: 174, baseType: !19, size: 32)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_exit_status", scope: !13768, file: !13, line: 175, baseType: !19, size: 32, offset: 32)
!13772 = !DILocation(line: 50, column: 34, scope: !13764)
!13773 = !DILocation(line: 50, column: 48, scope: !13764)
!13774 = !DILocation(line: 51, column: 10, scope: !13764)
!13775 = !DILocation(line: 55, column: 35, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13764, file: !1930, line: 55, column: 7)
!13777 = !DILocation(line: 55, column: 7, scope: !13776)
!13778 = !DILocation(line: 55, column: 7, scope: !13764)
!13779 = !DILocation(line: 57, column: 5, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13776, file: !1930, line: 56, column: 3)
!13781 = !DILocation(line: 58, column: 3, scope: !13780)
!13782 = !DILocation(line: 59, column: 13, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13776, file: !1930, line: 59, column: 12)
!13784 = !DILocation(line: 59, column: 12, scope: !13776)
!13785 = !DILocation(line: 61, column: 5, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13783, file: !1930, line: 60, column: 3)
!13787 = !DILocation(line: 62, column: 3, scope: !13786)
!13788 = !DILocation(line: 63, column: 3, scope: !13764)
!13789 = !DILocation(line: 64, column: 1, scope: !13764)
!13790 = distinct !DISubprogram(name: "process_login_req", scope: !1930, file: !1930, line: 296, type: !13598, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!13791 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13790, file: !1930, line: 296, type: !13600)
!13792 = !DILocation(line: 296, column: 39, scope: !13790)
!13793 = !DILocalVariable(name: "e_login_result", scope: !13790, file: !1930, line: 298, type: !1044)
!13794 = !DILocation(line: 298, column: 30, scope: !13790)
!13795 = !DILocalVariable(name: "cmd", scope: !13790, file: !1930, line: 299, type: !17)
!13796 = !DILocation(line: 299, column: 8, scope: !13790)
!13797 = !DILocation(line: 301, column: 27, scope: !13790)
!13798 = !DILocation(line: 301, column: 35, scope: !13790)
!13799 = !DILocation(line: 301, column: 9, scope: !13790)
!13800 = !DILocation(line: 301, column: 7, scope: !13790)
!13801 = !DILocation(line: 302, column: 7, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13790, file: !1930, line: 302, column: 7)
!13803 = !DILocation(line: 302, column: 11, scope: !13802)
!13804 = !DILocation(line: 302, column: 7, scope: !13790)
!13805 = !DILocation(line: 304, column: 5, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13802, file: !1930, line: 303, column: 3)
!13807 = !DILocation(line: 305, column: 3, scope: !13806)
!13808 = !DILocalVariable(name: "password_str", scope: !13809, file: !1930, line: 308, type: !13618)
!13809 = distinct !DILexicalBlock(scope: !13790, file: !1930, line: 307, column: 3)
!13810 = !DILocation(line: 308, column: 18, scope: !13809)
!13811 = !DILocation(line: 309, column: 23, scope: !13809)
!13812 = !DILocation(line: 309, column: 31, scope: !13809)
!13813 = !DILocation(line: 309, column: 43, scope: !13809)
!13814 = !DILocation(line: 309, column: 51, scope: !13809)
!13815 = !DILocation(line: 309, column: 5, scope: !13809)
!13816 = !DILocation(line: 310, column: 23, scope: !13809)
!13817 = !DILocation(line: 310, column: 31, scope: !13809)
!13818 = !DILocation(line: 310, column: 5, scope: !13809)
!13819 = !DILocation(line: 311, column: 49, scope: !13809)
!13820 = !DILocation(line: 311, column: 57, scope: !13809)
!13821 = !DILocation(line: 311, column: 31, scope: !13809)
!13822 = !DILocation(line: 311, column: 5, scope: !13809)
!13823 = !DILocation(line: 311, column: 13, scope: !13809)
!13824 = !DILocation(line: 311, column: 29, scope: !13809)
!13825 = !DILocation(line: 312, column: 46, scope: !13809)
!13826 = !DILocation(line: 312, column: 54, scope: !13809)
!13827 = !DILocation(line: 312, column: 28, scope: !13809)
!13828 = !DILocation(line: 312, column: 5, scope: !13809)
!13829 = !DILocation(line: 312, column: 13, scope: !13809)
!13830 = !DILocation(line: 312, column: 26, scope: !13809)
!13831 = !DILocation(line: 313, column: 10, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13809, file: !1930, line: 313, column: 9)
!13833 = !DILocation(line: 313, column: 9, scope: !13809)
!13834 = !DILocation(line: 315, column: 7, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13832, file: !1930, line: 314, column: 5)
!13836 = !DILocation(line: 315, column: 15, scope: !13835)
!13837 = !DILocation(line: 315, column: 31, scope: !13835)
!13838 = !DILocation(line: 316, column: 7, scope: !13835)
!13839 = !DILocation(line: 316, column: 15, scope: !13835)
!13840 = !DILocation(line: 316, column: 28, scope: !13835)
!13841 = !DILocation(line: 317, column: 5, scope: !13835)
!13842 = !DILocation(line: 318, column: 42, scope: !13809)
!13843 = !DILocation(line: 318, column: 22, scope: !13809)
!13844 = !DILocation(line: 318, column: 20, scope: !13809)
!13845 = !DILocation(line: 319, column: 5, scope: !13809)
!13846 = !DILocation(line: 321, column: 11, scope: !13790)
!13847 = !DILocation(line: 321, column: 3, scope: !13790)
!13848 = !DILocation(line: 324, column: 29, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13790, file: !1930, line: 322, column: 3)
!13850 = !DILocation(line: 324, column: 37, scope: !13849)
!13851 = !DILocation(line: 324, column: 7, scope: !13849)
!13852 = !DILocation(line: 325, column: 7, scope: !13849)
!13853 = !DILocation(line: 328, column: 17, scope: !13849)
!13854 = !DILocation(line: 328, column: 25, scope: !13849)
!13855 = !DILocation(line: 328, column: 7, scope: !13849)
!13856 = !DILocation(line: 329, column: 11, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13849, file: !1930, line: 329, column: 11)
!13858 = !DILocation(line: 329, column: 11, scope: !13849)
!13859 = !DILocation(line: 331, column: 25, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13857, file: !1930, line: 330, column: 7)
!13861 = !DILocation(line: 331, column: 33, scope: !13860)
!13862 = !DILocation(line: 331, column: 43, scope: !13860)
!13863 = !DILocation(line: 331, column: 9, scope: !13860)
!13864 = !DILocation(line: 332, column: 7, scope: !13860)
!13865 = !DILocation(line: 333, column: 23, scope: !13849)
!13866 = !DILocation(line: 333, column: 32, scope: !13849)
!13867 = !DILocation(line: 333, column: 40, scope: !13849)
!13868 = !DILocation(line: 333, column: 7, scope: !13849)
!13869 = !DILocation(line: 334, column: 7, scope: !13849)
!13870 = !DILocalVariable(name: "do_chroot", scope: !13871, file: !1930, line: 337, type: !19)
!13871 = distinct !DILexicalBlock(scope: !13849, file: !1930, line: 336, column: 7)
!13872 = !DILocation(line: 337, column: 13, scope: !13871)
!13873 = !DILocation(line: 338, column: 13, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13871, file: !1930, line: 338, column: 13)
!13875 = !DILocation(line: 338, column: 13, scope: !13871)
!13876 = !DILocation(line: 340, column: 21, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13874, file: !1930, line: 339, column: 9)
!13878 = !DILocation(line: 341, column: 9, scope: !13877)
!13879 = !DILocation(line: 342, column: 13, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13871, file: !1930, line: 342, column: 13)
!13881 = !DILocation(line: 342, column: 13, scope: !13871)
!13882 = !DILocalVariable(name: "chroot_list_file", scope: !13883, file: !1930, line: 344, type: !13618)
!13883 = distinct !DILexicalBlock(scope: !13880, file: !1930, line: 343, column: 9)
!13884 = !DILocation(line: 344, column: 24, scope: !13883)
!13885 = !DILocalVariable(name: "retval", scope: !13883, file: !1930, line: 345, type: !19)
!13886 = !DILocation(line: 345, column: 15, scope: !13883)
!13887 = !DILocation(line: 346, column: 15, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13883, file: !1930, line: 346, column: 15)
!13889 = !DILocation(line: 346, column: 15, scope: !13883)
!13890 = !DILocation(line: 348, column: 54, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13888, file: !1930, line: 347, column: 11)
!13892 = !DILocation(line: 348, column: 22, scope: !13891)
!13893 = !DILocation(line: 348, column: 20, scope: !13891)
!13894 = !DILocation(line: 350, column: 11, scope: !13891)
!13895 = !DILocation(line: 351, column: 43, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13883, file: !1930, line: 351, column: 15)
!13897 = !DILocation(line: 351, column: 15, scope: !13896)
!13898 = !DILocation(line: 351, column: 15, scope: !13883)
!13899 = !DILocation(line: 354, column: 18, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13896, file: !1930, line: 352, column: 11)
!13901 = !DILocation(line: 353, column: 13, scope: !13900)
!13902 = !DILocation(line: 355, column: 11, scope: !13900)
!13903 = !DILocation(line: 356, column: 53, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13883, file: !1930, line: 356, column: 15)
!13905 = !DILocation(line: 356, column: 61, scope: !13904)
!13906 = !DILocation(line: 356, column: 15, scope: !13904)
!13907 = !DILocation(line: 356, column: 15, scope: !13883)
!13908 = !DILocation(line: 358, column: 17, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13910, file: !1930, line: 358, column: 17)
!13910 = distinct !DILexicalBlock(scope: !13904, file: !1930, line: 357, column: 11)
!13911 = !DILocation(line: 358, column: 17, scope: !13910)
!13912 = !DILocation(line: 360, column: 25, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13909, file: !1930, line: 359, column: 13)
!13914 = !DILocation(line: 361, column: 13, scope: !13913)
!13915 = !DILocation(line: 364, column: 25, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13909, file: !1930, line: 363, column: 13)
!13917 = !DILocation(line: 366, column: 11, scope: !13910)
!13918 = !DILocation(line: 367, column: 11, scope: !13883)
!13919 = !DILocation(line: 368, column: 9, scope: !13883)
!13920 = !DILocation(line: 369, column: 25, scope: !13871)
!13921 = !DILocation(line: 369, column: 34, scope: !13871)
!13922 = !DILocation(line: 369, column: 42, scope: !13871)
!13923 = !DILocation(line: 369, column: 52, scope: !13871)
!13924 = !DILocation(line: 369, column: 9, scope: !13871)
!13925 = !DILocation(line: 371, column: 7, scope: !13849)
!13926 = !DILocation(line: 375, column: 7, scope: !13849)
!13927 = !DILocation(line: 376, column: 7, scope: !13849)
!13928 = !DILocation(line: 379, column: 1, scope: !13790)
!13929 = distinct !DISubprogram(name: "drop_all_privs", scope: !1930, file: !1930, line: 147, type: !1619, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!13930 = !DILocalVariable(name: "user_str", scope: !13929, file: !1930, line: 149, type: !13618)
!13931 = !DILocation(line: 149, column: 16, scope: !13929)
!13932 = !DILocalVariable(name: "dir_str", scope: !13929, file: !1930, line: 150, type: !13618)
!13933 = !DILocation(line: 150, column: 16, scope: !13929)
!13934 = !DILocalVariable(name: "option", scope: !13929, file: !1930, line: 151, type: !26)
!13935 = !DILocation(line: 151, column: 16, scope: !13929)
!13936 = !DILocation(line: 152, column: 8, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13929, file: !1930, line: 152, column: 7)
!13938 = !DILocation(line: 152, column: 7, scope: !13929)
!13939 = !DILocation(line: 157, column: 12, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13937, file: !1930, line: 153, column: 3)
!13941 = !DILocation(line: 158, column: 3, scope: !13940)
!13942 = !DILocation(line: 159, column: 7, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13929, file: !1930, line: 159, column: 7)
!13944 = !DILocation(line: 159, column: 7, scope: !13929)
!13945 = !DILocation(line: 161, column: 31, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13943, file: !1930, line: 160, column: 3)
!13947 = !DILocation(line: 161, column: 5, scope: !13946)
!13948 = !DILocation(line: 162, column: 3, scope: !13946)
!13949 = !DILocation(line: 163, column: 7, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13929, file: !1930, line: 163, column: 7)
!13951 = !DILocation(line: 163, column: 7, scope: !13929)
!13952 = !DILocation(line: 165, column: 30, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13950, file: !1930, line: 164, column: 3)
!13954 = !DILocation(line: 165, column: 5, scope: !13953)
!13955 = !DILocation(line: 166, column: 3, scope: !13953)
!13956 = !DILocalVariable(name: "p_statbuf", scope: !13957, file: !1930, line: 169, type: !258)
!13957 = distinct !DILexicalBlock(scope: !13929, file: !1930, line: 168, column: 3)
!13958 = !DILocation(line: 169, column: 33, scope: !13957)
!13959 = !DILocation(line: 170, column: 37, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13957, file: !1930, line: 170, column: 9)
!13961 = !DILocation(line: 170, column: 9, scope: !13960)
!13962 = !DILocation(line: 170, column: 9, scope: !13957)
!13963 = !DILocation(line: 173, column: 12, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13960, file: !1930, line: 171, column: 5)
!13965 = !DILocation(line: 172, column: 7, scope: !13964)
!13966 = !DILocation(line: 174, column: 5, scope: !13964)
!13967 = !DILocation(line: 175, column: 22, scope: !13957)
!13968 = !DILocation(line: 175, column: 5, scope: !13957)
!13969 = !DILocation(line: 177, column: 61, scope: !13929)
!13970 = !DILocation(line: 177, column: 3, scope: !13929)
!13971 = !DILocation(line: 178, column: 3, scope: !13929)
!13972 = !DILocation(line: 179, column: 3, scope: !13929)
!13973 = !DILocation(line: 180, column: 1, scope: !13929)
!13974 = distinct !DISubprogram(name: "common_do_login", scope: !1930, file: !1930, line: 382, type: !13975, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!13975 = !DISubroutineType(types: !13976)
!13976 = !{null, !13600, !13977, !19, !19}
!13977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13978, size: 64)
!13978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13618)
!13979 = !DILocalVariable(name: "p_sess", arg: 1, scope: !13974, file: !1930, line: 382, type: !13600)
!13980 = !DILocation(line: 382, column: 37, scope: !13974)
!13981 = !DILocalVariable(name: "p_user_str", arg: 2, scope: !13974, file: !1930, line: 382, type: !13977)
!13982 = !DILocation(line: 382, column: 65, scope: !13974)
!13983 = !DILocalVariable(name: "do_chroot", arg: 3, scope: !13974, file: !1930, line: 383, type: !19)
!13984 = !DILocation(line: 383, column: 21, scope: !13974)
!13985 = !DILocalVariable(name: "anon", arg: 4, scope: !13974, file: !1930, line: 383, type: !19)
!13986 = !DILocation(line: 383, column: 36, scope: !13974)
!13987 = !DILocalVariable(name: "was_anon", scope: !13974, file: !1930, line: 385, type: !19)
!13988 = !DILocation(line: 385, column: 7, scope: !13974)
!13989 = !DILocation(line: 385, column: 18, scope: !13974)
!13990 = !DILocalVariable(name: "p_orig_user_str", scope: !13974, file: !1930, line: 386, type: !13977)
!13991 = !DILocation(line: 386, column: 23, scope: !13974)
!13992 = !DILocation(line: 386, column: 41, scope: !13974)
!13993 = !DILocalVariable(name: "newpid", scope: !13974, file: !1930, line: 387, type: !19)
!13994 = !DILocation(line: 387, column: 7, scope: !13974)
!13995 = !DILocation(line: 388, column: 3, scope: !13974)
!13996 = !DILocation(line: 390, column: 25, scope: !13974)
!13997 = !DILocation(line: 390, column: 33, scope: !13974)
!13998 = !DILocation(line: 390, column: 3, scope: !13974)
!13999 = !DILocation(line: 391, column: 8, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13974, file: !1930, line: 391, column: 7)
!14001 = !DILocation(line: 391, column: 16, scope: !14000)
!14002 = !DILocation(line: 391, column: 7, scope: !13974)
!14003 = !DILocation(line: 393, column: 12, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !14000, file: !1930, line: 392, column: 3)
!14005 = !DILocation(line: 394, column: 3, scope: !14004)
!14006 = !DILocation(line: 397, column: 5, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !14000, file: !1930, line: 396, column: 3)
!14008 = !DILocation(line: 397, column: 13, scope: !14007)
!14009 = !DILocation(line: 397, column: 30, scope: !14007)
!14010 = !DILocation(line: 400, column: 26, scope: !13974)
!14011 = !DILocation(line: 400, column: 3, scope: !13974)
!14012 = !DILocation(line: 402, column: 26, scope: !13974)
!14013 = !DILocation(line: 402, column: 3, scope: !13974)
!14014 = !DILocation(line: 402, column: 11, scope: !13974)
!14015 = !DILocation(line: 402, column: 24, scope: !13974)
!14016 = !DILocation(line: 403, column: 19, scope: !13974)
!14017 = !DILocation(line: 403, column: 3, scope: !13974)
!14018 = !DILocation(line: 404, column: 18, scope: !13974)
!14019 = !DILocation(line: 404, column: 3, scope: !13974)
!14020 = !DILocation(line: 405, column: 3, scope: !13974)
!14021 = !DILocation(line: 406, column: 7, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !13974, file: !1930, line: 406, column: 7)
!14023 = !DILocation(line: 406, column: 31, scope: !14022)
!14024 = !DILocation(line: 406, column: 35, scope: !14022)
!14025 = !DILocation(line: 406, column: 7, scope: !13974)
!14026 = !DILocation(line: 408, column: 14, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14022, file: !1930, line: 407, column: 3)
!14028 = !DILocation(line: 408, column: 12, scope: !14027)
!14029 = !DILocation(line: 409, column: 3, scope: !14027)
!14030 = !DILocation(line: 412, column: 14, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14022, file: !1930, line: 411, column: 3)
!14032 = !DILocation(line: 412, column: 12, scope: !14031)
!14033 = !DILocation(line: 414, column: 7, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !13974, file: !1930, line: 414, column: 7)
!14035 = !DILocation(line: 414, column: 14, scope: !14034)
!14036 = !DILocation(line: 414, column: 7, scope: !13974)
!14037 = !DILocalVariable(name: "guest_user_str", scope: !14038, file: !1930, line: 416, type: !13618)
!14038 = distinct !DILexicalBlock(scope: !14034, file: !1930, line: 415, column: 3)
!14039 = !DILocation(line: 416, column: 18, scope: !14038)
!14040 = !DILocalVariable(name: "chroot_str", scope: !14038, file: !1930, line: 417, type: !13618)
!14041 = !DILocation(line: 417, column: 18, scope: !14038)
!14042 = !DILocalVariable(name: "chdir_str", scope: !14038, file: !1930, line: 418, type: !13618)
!14043 = !DILocation(line: 418, column: 18, scope: !14038)
!14044 = !DILocalVariable(name: "userdir_str", scope: !14038, file: !1930, line: 419, type: !13618)
!14045 = !DILocation(line: 419, column: 18, scope: !14038)
!14046 = !DILocalVariable(name: "secutil_option", scope: !14038, file: !1930, line: 420, type: !26)
!14047 = !DILocation(line: 420, column: 18, scope: !14038)
!14048 = !DILocation(line: 427, column: 5, scope: !14038)
!14049 = !DILocation(line: 428, column: 33, scope: !14038)
!14050 = !DILocation(line: 428, column: 5, scope: !14038)
!14051 = !DILocation(line: 429, column: 9, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14038, file: !1930, line: 429, column: 9)
!14053 = !DILocation(line: 429, column: 30, scope: !14052)
!14054 = !DILocation(line: 429, column: 34, scope: !14052)
!14055 = !DILocation(line: 429, column: 9, scope: !14038)
!14056 = !DILocation(line: 431, column: 7, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14052, file: !1930, line: 430, column: 5)
!14058 = !DILocation(line: 431, column: 15, scope: !14057)
!14059 = !DILocation(line: 431, column: 24, scope: !14057)
!14060 = !DILocation(line: 433, column: 11, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14057, file: !1930, line: 433, column: 11)
!14062 = !DILocation(line: 433, column: 11, scope: !14057)
!14063 = !DILocation(line: 435, column: 41, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14061, file: !1930, line: 434, column: 7)
!14065 = !DILocation(line: 435, column: 9, scope: !14064)
!14066 = !DILocation(line: 436, column: 7, scope: !14064)
!14067 = !DILocation(line: 437, column: 18, scope: !14057)
!14068 = !DILocation(line: 438, column: 12, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14057, file: !1930, line: 438, column: 11)
!14070 = !DILocation(line: 438, column: 11, scope: !14057)
!14071 = !DILocation(line: 440, column: 14, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14069, file: !1930, line: 439, column: 7)
!14073 = !DILocation(line: 441, column: 19, scope: !14072)
!14074 = !DILocation(line: 442, column: 7, scope: !14072)
!14075 = !DILocation(line: 443, column: 5, scope: !14057)
!14076 = !DILocation(line: 444, column: 9, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14038, file: !1930, line: 444, column: 9)
!14078 = !DILocation(line: 444, column: 9, scope: !14038)
!14079 = !DILocation(line: 446, column: 22, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14077, file: !1930, line: 445, column: 5)
!14081 = !DILocation(line: 447, column: 5, scope: !14080)
!14082 = !DILocation(line: 448, column: 10, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14038, file: !1930, line: 448, column: 9)
!14084 = !DILocation(line: 448, column: 9, scope: !14038)
!14085 = !DILocation(line: 450, column: 22, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14083, file: !1930, line: 449, column: 5)
!14087 = !DILocation(line: 451, column: 5, scope: !14086)
!14088 = !DILocation(line: 452, column: 10, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14038, file: !1930, line: 452, column: 9)
!14090 = !DILocation(line: 452, column: 19, scope: !14089)
!14091 = !DILocation(line: 452, column: 22, scope: !14089)
!14092 = !DILocation(line: 452, column: 9, scope: !14038)
!14093 = !DILocation(line: 454, column: 22, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14089, file: !1930, line: 453, column: 5)
!14095 = !DILocation(line: 455, column: 5, scope: !14094)
!14096 = !DILocation(line: 456, column: 25, scope: !14038)
!14097 = !DILocation(line: 457, column: 25, scope: !14038)
!14098 = !DILocation(line: 457, column: 37, scope: !14038)
!14099 = !DILocation(line: 456, column: 5, scope: !14038)
!14100 = !DILocation(line: 458, column: 36, scope: !14038)
!14101 = !DILocation(line: 459, column: 39, scope: !14038)
!14102 = !DILocation(line: 458, column: 5, scope: !14038)
!14103 = !DILocation(line: 460, column: 10, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14038, file: !1930, line: 460, column: 9)
!14105 = !DILocation(line: 460, column: 9, scope: !14038)
!14106 = !DILocation(line: 462, column: 14, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14104, file: !1930, line: 461, column: 5)
!14108 = !DILocation(line: 463, column: 5, scope: !14107)
!14109 = !DILocation(line: 464, column: 5, scope: !14038)
!14110 = !DILocation(line: 465, column: 5, scope: !14038)
!14111 = !DILocation(line: 466, column: 5, scope: !14038)
!14112 = !DILocation(line: 467, column: 5, scope: !14038)
!14113 = !DILocation(line: 468, column: 28, scope: !14038)
!14114 = !DILocation(line: 468, column: 5, scope: !14038)
!14115 = !DILocation(line: 468, column: 13, scope: !14038)
!14116 = !DILocation(line: 468, column: 26, scope: !14038)
!14117 = !DILocation(line: 469, column: 5, scope: !14038)
!14118 = !DILocation(line: 470, column: 37, scope: !14038)
!14119 = !DILocation(line: 470, column: 5, scope: !14038)
!14120 = !DILocation(line: 471, column: 5, scope: !14038)
!14121 = !DILocation(line: 472, column: 24, scope: !14038)
!14122 = !DILocation(line: 472, column: 5, scope: !14038)
!14123 = !DILocation(line: 473, column: 5, scope: !14038)
!14124 = !DILocation(line: 474, column: 3, scope: !14038)
!14125 = !DILocation(line: 476, column: 32, scope: !13974)
!14126 = !DILocation(line: 476, column: 3, scope: !13974)
!14127 = !DILocation(line: 477, column: 7, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !13974, file: !1930, line: 477, column: 7)
!14129 = !DILocation(line: 477, column: 7, scope: !13974)
!14130 = !DILocation(line: 479, column: 43, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14128, file: !1930, line: 478, column: 3)
!14132 = !DILocation(line: 479, column: 5, scope: !14131)
!14133 = !DILocation(line: 480, column: 3, scope: !14131)
!14134 = !DILocation(line: 482, column: 29, scope: !13974)
!14135 = !DILocation(line: 482, column: 3, scope: !13974)
!14136 = !DILocation(line: 483, column: 3, scope: !13974)
!14137 = !DILocation(line: 484, column: 1, scope: !13974)
!14138 = distinct !DISubprogram(name: "handle_per_user_config", scope: !1930, file: !1930, line: 487, type: !14139, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14139 = !DISubroutineType(types: !14140)
!14140 = !{null, !13977}
!14141 = !DILocalVariable(name: "p_user_str", arg: 1, scope: !14138, file: !1930, line: 487, type: !13977)
!14142 = !DILocation(line: 487, column: 44, scope: !14138)
!14143 = !DILocalVariable(name: "filename_str", scope: !14138, file: !1930, line: 489, type: !13618)
!14144 = !DILocation(line: 489, column: 16, scope: !14138)
!14145 = !DILocalVariable(name: "p_statbuf", scope: !14138, file: !1930, line: 490, type: !258)
!14146 = !DILocation(line: 490, column: 31, scope: !14138)
!14147 = !DILocalVariable(name: "loc_result", scope: !14138, file: !1930, line: 491, type: !14148)
!14148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_locate_result", file: !34, line: 68, size: 96, elements: !14149)
!14149 = !{!14150, !14151, !14152}
!14150 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !14148, file: !34, line: 70, baseType: !19, size: 32)
!14151 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !14148, file: !34, line: 71, baseType: !26, size: 32, offset: 32)
!14152 = !DIDerivedType(tag: DW_TAG_member, name: "char_found", scope: !14148, file: !34, line: 72, baseType: !17, size: 8, offset: 64)
!14153 = !DILocation(line: 491, column: 28, scope: !14138)
!14154 = !DILocalVariable(name: "retval", scope: !14138, file: !1930, line: 492, type: !19)
!14155 = !DILocation(line: 492, column: 7, scope: !14138)
!14156 = !DILocation(line: 493, column: 8, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14138, file: !1930, line: 493, column: 7)
!14158 = !DILocation(line: 493, column: 7, scope: !14138)
!14159 = !DILocation(line: 495, column: 5, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14157, file: !1930, line: 494, column: 3)
!14161 = !DILocation(line: 498, column: 32, scope: !14138)
!14162 = !DILocation(line: 498, column: 16, scope: !14138)
!14163 = !DILocation(line: 499, column: 18, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14138, file: !1930, line: 499, column: 7)
!14165 = !DILocation(line: 499, column: 7, scope: !14164)
!14166 = !DILocation(line: 499, column: 7, scope: !14138)
!14167 = !DILocation(line: 501, column: 5, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14164, file: !1930, line: 500, column: 3)
!14169 = !DILocation(line: 503, column: 33, scope: !14138)
!14170 = !DILocation(line: 503, column: 3, scope: !14138)
!14171 = !DILocation(line: 504, column: 3, scope: !14138)
!14172 = !DILocation(line: 505, column: 33, scope: !14138)
!14173 = !DILocation(line: 505, column: 3, scope: !14138)
!14174 = !DILocation(line: 506, column: 12, scope: !14138)
!14175 = !DILocation(line: 506, column: 10, scope: !14138)
!14176 = !DILocation(line: 507, column: 36, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14138, file: !1930, line: 507, column: 7)
!14178 = !DILocation(line: 507, column: 8, scope: !14177)
!14179 = !DILocation(line: 507, column: 7, scope: !14138)
!14180 = !DILocation(line: 510, column: 29, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14177, file: !1930, line: 508, column: 3)
!14182 = !DILocation(line: 510, column: 5, scope: !14181)
!14183 = !DILocation(line: 511, column: 3, scope: !14181)
!14184 = !DILocation(line: 512, column: 12, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14177, file: !1930, line: 512, column: 12)
!14186 = !DILocation(line: 512, column: 36, scope: !14185)
!14187 = !DILocation(line: 512, column: 12, scope: !14177)
!14188 = !DILocation(line: 514, column: 5, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14185, file: !1930, line: 513, column: 3)
!14190 = !DILocation(line: 515, column: 3, scope: !14189)
!14191 = !DILocation(line: 516, column: 3, scope: !14138)
!14192 = !DILocation(line: 517, column: 20, scope: !14138)
!14193 = !DILocation(line: 517, column: 3, scope: !14138)
!14194 = !DILocation(line: 518, column: 1, scope: !14138)
!14195 = distinct !DISubprogram(name: "calculate_chdir_dir", scope: !1930, file: !1930, line: 521, type: !14196, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14196 = !DISubroutineType(types: !14197)
!14197 = !{null, !19, !14198, !14198, !14198, !13977, !13977}
!14198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13618, size: 64)
!14199 = !DILocalVariable(name: "anon_login", arg: 1, scope: !14195, file: !1930, line: 521, type: !19)
!14200 = !DILocation(line: 521, column: 25, scope: !14195)
!14201 = !DILocalVariable(name: "p_userdir_str", arg: 2, scope: !14195, file: !1930, line: 521, type: !14198)
!14202 = !DILocation(line: 521, column: 51, scope: !14195)
!14203 = !DILocalVariable(name: "p_chroot_str", arg: 3, scope: !14195, file: !1930, line: 522, type: !14198)
!14204 = !DILocation(line: 522, column: 35, scope: !14195)
!14205 = !DILocalVariable(name: "p_chdir_str", arg: 4, scope: !14195, file: !1930, line: 523, type: !14198)
!14206 = !DILocation(line: 523, column: 35, scope: !14195)
!14207 = !DILocalVariable(name: "p_user_str", arg: 5, scope: !14195, file: !1930, line: 524, type: !13977)
!14208 = !DILocation(line: 524, column: 41, scope: !14195)
!14209 = !DILocalVariable(name: "p_orig_user_str", arg: 6, scope: !14195, file: !1930, line: 525, type: !13977)
!14210 = !DILocation(line: 525, column: 41, scope: !14195)
!14211 = !DILocation(line: 527, column: 8, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14195, file: !1930, line: 527, column: 7)
!14213 = !DILocation(line: 527, column: 7, scope: !14195)
!14214 = !DILocalVariable(name: "p_user", scope: !14215, file: !1930, line: 529, type: !14216)
!14215 = distinct !DILexicalBlock(scope: !14212, file: !1930, line: 528, column: 3)
!14216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14217, size: 64)
!14217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6121)
!14218 = !DILocation(line: 529, column: 36, scope: !14215)
!14219 = !DILocation(line: 529, column: 58, scope: !14215)
!14220 = !DILocation(line: 529, column: 45, scope: !14215)
!14221 = !DILocation(line: 530, column: 9, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14215, file: !1930, line: 530, column: 9)
!14223 = !DILocation(line: 530, column: 16, scope: !14222)
!14224 = !DILocation(line: 530, column: 9, scope: !14215)
!14225 = !DILocation(line: 532, column: 52, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14222, file: !1930, line: 531, column: 5)
!14227 = !DILocation(line: 532, column: 41, scope: !14226)
!14228 = !DILocation(line: 532, column: 7, scope: !14226)
!14229 = !DILocation(line: 533, column: 5, scope: !14226)
!14230 = !DILocation(line: 534, column: 20, scope: !14215)
!14231 = !DILocation(line: 534, column: 64, scope: !14215)
!14232 = !DILocation(line: 534, column: 35, scope: !14215)
!14233 = !DILocation(line: 534, column: 5, scope: !14215)
!14234 = !DILocation(line: 535, column: 9, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14215, file: !1930, line: 535, column: 9)
!14236 = !DILocation(line: 535, column: 9, scope: !14215)
!14237 = !DILocation(line: 537, column: 24, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14235, file: !1930, line: 536, column: 5)
!14239 = !DILocation(line: 537, column: 39, scope: !14238)
!14240 = !DILocation(line: 538, column: 35, scope: !14238)
!14241 = !DILocation(line: 538, column: 24, scope: !14238)
!14242 = !DILocation(line: 537, column: 7, scope: !14238)
!14243 = !DILocation(line: 539, column: 5, scope: !14238)
!14244 = !DILocation(line: 540, column: 3, scope: !14215)
!14245 = !DILocation(line: 541, column: 7, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14195, file: !1930, line: 541, column: 7)
!14247 = !DILocation(line: 541, column: 18, scope: !14246)
!14248 = !DILocation(line: 541, column: 21, scope: !14246)
!14249 = !DILocation(line: 541, column: 7, scope: !14195)
!14250 = !DILocation(line: 543, column: 20, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14246, file: !1930, line: 542, column: 3)
!14252 = !DILocation(line: 543, column: 34, scope: !14251)
!14253 = !DILocation(line: 543, column: 5, scope: !14251)
!14254 = !DILocation(line: 544, column: 3, scope: !14251)
!14255 = !DILocation(line: 545, column: 13, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14246, file: !1930, line: 545, column: 12)
!14257 = !DILocation(line: 545, column: 24, scope: !14256)
!14258 = !DILocation(line: 545, column: 27, scope: !14256)
!14259 = !DILocation(line: 545, column: 12, scope: !14246)
!14260 = !DILocation(line: 547, column: 20, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14256, file: !1930, line: 546, column: 3)
!14262 = !DILocation(line: 547, column: 34, scope: !14261)
!14263 = !DILocation(line: 547, column: 5, scope: !14261)
!14264 = !DILocation(line: 548, column: 9, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14261, file: !1930, line: 548, column: 9)
!14266 = !DILocation(line: 548, column: 9, scope: !14261)
!14267 = !DILocation(line: 550, column: 24, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14265, file: !1930, line: 549, column: 5)
!14269 = !DILocation(line: 550, column: 38, scope: !14268)
!14270 = !DILocation(line: 551, column: 35, scope: !14268)
!14271 = !DILocation(line: 551, column: 24, scope: !14268)
!14272 = !DILocation(line: 550, column: 7, scope: !14268)
!14273 = !DILocation(line: 552, column: 5, scope: !14268)
!14274 = !DILocation(line: 553, column: 3, scope: !14261)
!14275 = !DILocation(line: 557, column: 8, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14195, file: !1930, line: 557, column: 7)
!14277 = !DILocation(line: 557, column: 19, scope: !14276)
!14278 = !DILocation(line: 557, column: 22, scope: !14276)
!14279 = !DILocation(line: 557, column: 7, scope: !14195)
!14280 = !DILocalVariable(name: "loc_result", scope: !14281, file: !1930, line: 559, type: !14148)
!14281 = distinct !DILexicalBlock(scope: !14276, file: !1930, line: 558, column: 3)
!14282 = !DILocation(line: 559, column: 30, scope: !14281)
!14283 = !DILocation(line: 560, column: 34, scope: !14281)
!14284 = !DILocation(line: 560, column: 18, scope: !14281)
!14285 = !DILocation(line: 561, column: 20, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14281, file: !1930, line: 561, column: 9)
!14287 = !DILocation(line: 561, column: 9, scope: !14286)
!14288 = !DILocation(line: 561, column: 9, scope: !14281)
!14289 = !DILocation(line: 563, column: 22, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14286, file: !1930, line: 562, column: 5)
!14291 = !DILocation(line: 563, column: 37, scope: !14290)
!14292 = !DILocation(line: 563, column: 7, scope: !14290)
!14293 = !DILocation(line: 564, column: 16, scope: !14290)
!14294 = !DILocation(line: 564, column: 30, scope: !14290)
!14295 = !DILocation(line: 564, column: 7, scope: !14290)
!14296 = !DILocation(line: 565, column: 5, scope: !14290)
!14297 = !DILocation(line: 566, column: 3, scope: !14281)
!14298 = !DILocation(line: 567, column: 1, scope: !14195)
!14299 = distinct !DISubprogram(name: "vsf_two_process_login", scope: !1930, file: !1930, line: 183, type: !14300, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14300 = !DISubroutineType(types: !14301)
!14301 = !{null, !13600, !13977}
!14302 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14299, file: !1930, line: 183, type: !13600)
!14303 = !DILocation(line: 183, column: 43, scope: !14299)
!14304 = !DILocalVariable(name: "p_pass_str", arg: 2, scope: !14299, file: !1930, line: 184, type: !13977)
!14305 = !DILocation(line: 184, column: 43, scope: !14299)
!14306 = !DILocalVariable(name: "result", scope: !14299, file: !1930, line: 186, type: !17)
!14307 = !DILocation(line: 186, column: 8, scope: !14299)
!14308 = !DILocation(line: 187, column: 22, scope: !14299)
!14309 = !DILocation(line: 187, column: 30, scope: !14299)
!14310 = !DILocation(line: 187, column: 3, scope: !14299)
!14311 = !DILocation(line: 188, column: 22, scope: !14299)
!14312 = !DILocation(line: 188, column: 30, scope: !14299)
!14313 = !DILocation(line: 188, column: 41, scope: !14299)
!14314 = !DILocation(line: 188, column: 49, scope: !14299)
!14315 = !DILocation(line: 188, column: 3, scope: !14299)
!14316 = !DILocation(line: 189, column: 22, scope: !14299)
!14317 = !DILocation(line: 189, column: 30, scope: !14299)
!14318 = !DILocation(line: 189, column: 40, scope: !14299)
!14319 = !DILocation(line: 189, column: 3, scope: !14299)
!14320 = !DILocation(line: 190, column: 22, scope: !14299)
!14321 = !DILocation(line: 190, column: 30, scope: !14299)
!14322 = !DILocation(line: 190, column: 40, scope: !14299)
!14323 = !DILocation(line: 190, column: 48, scope: !14299)
!14324 = !DILocation(line: 190, column: 3, scope: !14299)
!14325 = !DILocation(line: 191, column: 22, scope: !14299)
!14326 = !DILocation(line: 191, column: 30, scope: !14299)
!14327 = !DILocation(line: 191, column: 40, scope: !14299)
!14328 = !DILocation(line: 191, column: 48, scope: !14299)
!14329 = !DILocation(line: 191, column: 3, scope: !14299)
!14330 = !DILocation(line: 192, column: 33, scope: !14299)
!14331 = !DILocation(line: 192, column: 41, scope: !14299)
!14332 = !DILocation(line: 192, column: 12, scope: !14299)
!14333 = !DILocation(line: 192, column: 10, scope: !14299)
!14334 = !DILocation(line: 193, column: 7, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14299, file: !1930, line: 193, column: 7)
!14336 = !DILocation(line: 193, column: 14, scope: !14335)
!14337 = !DILocation(line: 193, column: 7, scope: !14299)
!14338 = !DILocation(line: 199, column: 10, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !1930, line: 199, column: 9)
!14340 = distinct !DILexicalBlock(scope: !14335, file: !1930, line: 194, column: 3)
!14341 = !DILocation(line: 199, column: 18, scope: !14339)
!14342 = !DILocation(line: 199, column: 9, scope: !14340)
!14343 = !DILocation(line: 201, column: 7, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14339, file: !1930, line: 200, column: 5)
!14345 = !DILocation(line: 202, column: 5, scope: !14344)
!14346 = !DILocation(line: 205, column: 17, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14339, file: !1930, line: 204, column: 5)
!14348 = !DILocation(line: 205, column: 7, scope: !14347)
!14349 = !DILocation(line: 208, column: 3, scope: !14340)
!14350 = !DILocation(line: 209, column: 12, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14335, file: !1930, line: 209, column: 12)
!14352 = !DILocation(line: 209, column: 19, scope: !14351)
!14353 = !DILocation(line: 209, column: 12, scope: !14335)
!14354 = !DILocation(line: 212, column: 5, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14351, file: !1930, line: 210, column: 3)
!14356 = !DILocation(line: 216, column: 5, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14351, file: !1930, line: 215, column: 3)
!14358 = !DILocation(line: 218, column: 1, scope: !14299)
!14359 = distinct !DISubprogram(name: "vsf_two_process_get_priv_data_sock", scope: !1930, file: !1930, line: 221, type: !14360, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!19, !13600}
!14362 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14359, file: !1930, line: 221, type: !13600)
!14363 = !DILocation(line: 221, column: 56, scope: !14359)
!14364 = !DILocalVariable(name: "res", scope: !14359, file: !1930, line: 223, type: !17)
!14365 = !DILocation(line: 223, column: 8, scope: !14359)
!14366 = !DILocalVariable(name: "port", scope: !14359, file: !1930, line: 224, type: !225)
!14367 = !DILocation(line: 224, column: 18, scope: !14359)
!14368 = !DILocation(line: 224, column: 55, scope: !14359)
!14369 = !DILocation(line: 224, column: 63, scope: !14359)
!14370 = !DILocation(line: 224, column: 25, scope: !14359)
!14371 = !DILocation(line: 225, column: 22, scope: !14359)
!14372 = !DILocation(line: 225, column: 30, scope: !14359)
!14373 = !DILocation(line: 225, column: 3, scope: !14359)
!14374 = !DILocation(line: 226, column: 22, scope: !14359)
!14375 = !DILocation(line: 226, column: 30, scope: !14359)
!14376 = !DILocation(line: 226, column: 40, scope: !14359)
!14377 = !DILocation(line: 226, column: 3, scope: !14359)
!14378 = !DILocation(line: 227, column: 30, scope: !14359)
!14379 = !DILocation(line: 227, column: 38, scope: !14359)
!14380 = !DILocation(line: 227, column: 9, scope: !14359)
!14381 = !DILocation(line: 227, column: 7, scope: !14359)
!14382 = !DILocation(line: 228, column: 7, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14359, file: !1930, line: 228, column: 7)
!14384 = !DILocation(line: 228, column: 11, scope: !14383)
!14385 = !DILocation(line: 228, column: 7, scope: !14359)
!14386 = !DILocation(line: 230, column: 5, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14383, file: !1930, line: 229, column: 3)
!14388 = !DILocation(line: 232, column: 12, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14383, file: !1930, line: 232, column: 12)
!14390 = !DILocation(line: 232, column: 16, scope: !14389)
!14391 = !DILocation(line: 232, column: 12, scope: !14383)
!14392 = !DILocation(line: 234, column: 5, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14389, file: !1930, line: 233, column: 3)
!14394 = !DILocation(line: 235, column: 3, scope: !14393)
!14395 = !DILocation(line: 236, column: 28, scope: !14359)
!14396 = !DILocation(line: 236, column: 36, scope: !14359)
!14397 = !DILocation(line: 236, column: 10, scope: !14359)
!14398 = !DILocation(line: 236, column: 3, scope: !14359)
!14399 = !DILocation(line: 237, column: 1, scope: !14359)
!14400 = distinct !DISubprogram(name: "vsf_two_process_pasv_cleanup", scope: !1930, file: !1930, line: 240, type: !13598, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14401 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14400, file: !1930, line: 240, type: !13600)
!14402 = !DILocation(line: 240, column: 50, scope: !14400)
!14403 = !DILocalVariable(name: "res", scope: !14400, file: !1930, line: 242, type: !17)
!14404 = !DILocation(line: 242, column: 8, scope: !14400)
!14405 = !DILocation(line: 243, column: 22, scope: !14400)
!14406 = !DILocation(line: 243, column: 30, scope: !14400)
!14407 = !DILocation(line: 243, column: 3, scope: !14400)
!14408 = !DILocation(line: 244, column: 30, scope: !14400)
!14409 = !DILocation(line: 244, column: 38, scope: !14400)
!14410 = !DILocation(line: 244, column: 9, scope: !14400)
!14411 = !DILocation(line: 244, column: 7, scope: !14400)
!14412 = !DILocation(line: 245, column: 7, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14400, file: !1930, line: 245, column: 7)
!14414 = !DILocation(line: 245, column: 11, scope: !14413)
!14415 = !DILocation(line: 245, column: 7, scope: !14400)
!14416 = !DILocation(line: 247, column: 5, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14413, file: !1930, line: 246, column: 3)
!14418 = !DILocation(line: 248, column: 3, scope: !14417)
!14419 = !DILocation(line: 249, column: 1, scope: !14400)
!14420 = distinct !DISubprogram(name: "vsf_two_process_pasv_active", scope: !1930, file: !1930, line: 252, type: !14360, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14421 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14420, file: !1930, line: 252, type: !13600)
!14422 = !DILocation(line: 252, column: 49, scope: !14420)
!14423 = !DILocation(line: 254, column: 22, scope: !14420)
!14424 = !DILocation(line: 254, column: 30, scope: !14420)
!14425 = !DILocation(line: 254, column: 3, scope: !14420)
!14426 = !DILocation(line: 255, column: 28, scope: !14420)
!14427 = !DILocation(line: 255, column: 36, scope: !14420)
!14428 = !DILocation(line: 255, column: 10, scope: !14420)
!14429 = !DILocation(line: 255, column: 3, scope: !14420)
!14430 = distinct !DISubprogram(name: "vsf_two_process_listen", scope: !1930, file: !1930, line: 259, type: !14431, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14431 = !DISubroutineType(types: !14432)
!14432 = !{!225, !13600}
!14433 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14430, file: !1930, line: 259, type: !13600)
!14434 = !DILocation(line: 259, column: 44, scope: !14430)
!14435 = !DILocation(line: 261, column: 22, scope: !14430)
!14436 = !DILocation(line: 261, column: 30, scope: !14430)
!14437 = !DILocation(line: 261, column: 3, scope: !14430)
!14438 = !DILocation(line: 262, column: 45, scope: !14430)
!14439 = !DILocation(line: 262, column: 53, scope: !14430)
!14440 = !DILocation(line: 262, column: 27, scope: !14430)
!14441 = !DILocation(line: 262, column: 10, scope: !14430)
!14442 = !DILocation(line: 262, column: 3, scope: !14430)
!14443 = distinct !DISubprogram(name: "vsf_two_process_get_pasv_fd", scope: !1930, file: !1930, line: 266, type: !14360, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14444 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14443, file: !1930, line: 266, type: !13600)
!14445 = !DILocation(line: 266, column: 49, scope: !14443)
!14446 = !DILocalVariable(name: "res", scope: !14443, file: !1930, line: 268, type: !17)
!14447 = !DILocation(line: 268, column: 8, scope: !14443)
!14448 = !DILocation(line: 269, column: 22, scope: !14443)
!14449 = !DILocation(line: 269, column: 30, scope: !14443)
!14450 = !DILocation(line: 269, column: 3, scope: !14443)
!14451 = !DILocation(line: 270, column: 30, scope: !14443)
!14452 = !DILocation(line: 270, column: 38, scope: !14443)
!14453 = !DILocation(line: 270, column: 9, scope: !14443)
!14454 = !DILocation(line: 270, column: 7, scope: !14443)
!14455 = !DILocation(line: 271, column: 7, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14443, file: !1930, line: 271, column: 7)
!14457 = !DILocation(line: 271, column: 11, scope: !14456)
!14458 = !DILocation(line: 271, column: 7, scope: !14443)
!14459 = !DILocation(line: 273, column: 30, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14456, file: !1930, line: 272, column: 3)
!14461 = !DILocation(line: 273, column: 38, scope: !14460)
!14462 = !DILocation(line: 273, column: 12, scope: !14460)
!14463 = !DILocation(line: 273, column: 5, scope: !14460)
!14464 = !DILocation(line: 275, column: 12, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14456, file: !1930, line: 275, column: 12)
!14466 = !DILocation(line: 275, column: 16, scope: !14465)
!14467 = !DILocation(line: 275, column: 12, scope: !14456)
!14468 = !DILocation(line: 277, column: 5, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14465, file: !1930, line: 276, column: 3)
!14470 = !DILocation(line: 278, column: 3, scope: !14469)
!14471 = !DILocation(line: 279, column: 28, scope: !14443)
!14472 = !DILocation(line: 279, column: 36, scope: !14443)
!14473 = !DILocation(line: 279, column: 10, scope: !14443)
!14474 = !DILocation(line: 279, column: 3, scope: !14443)
!14475 = !DILocation(line: 280, column: 1, scope: !14443)
!14476 = distinct !DISubprogram(name: "vsf_two_process_chown_upload", scope: !1930, file: !1930, line: 283, type: !14477, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1929, retainedNodes: !128)
!14477 = !DISubroutineType(types: !14478)
!14478 = !{null, !13600, !19}
!14479 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14476, file: !1930, line: 283, type: !13600)
!14480 = !DILocation(line: 283, column: 50, scope: !14476)
!14481 = !DILocalVariable(name: "fd", arg: 2, scope: !14476, file: !1930, line: 283, type: !19)
!14482 = !DILocation(line: 283, column: 62, scope: !14476)
!14483 = !DILocalVariable(name: "res", scope: !14476, file: !1930, line: 285, type: !17)
!14484 = !DILocation(line: 285, column: 8, scope: !14476)
!14485 = !DILocation(line: 286, column: 22, scope: !14476)
!14486 = !DILocation(line: 286, column: 30, scope: !14476)
!14487 = !DILocation(line: 286, column: 3, scope: !14476)
!14488 = !DILocation(line: 287, column: 21, scope: !14476)
!14489 = !DILocation(line: 287, column: 29, scope: !14476)
!14490 = !DILocation(line: 287, column: 39, scope: !14476)
!14491 = !DILocation(line: 287, column: 3, scope: !14476)
!14492 = !DILocation(line: 288, column: 30, scope: !14476)
!14493 = !DILocation(line: 288, column: 38, scope: !14476)
!14494 = !DILocation(line: 288, column: 9, scope: !14476)
!14495 = !DILocation(line: 288, column: 7, scope: !14476)
!14496 = !DILocation(line: 289, column: 7, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14476, file: !1930, line: 289, column: 7)
!14498 = !DILocation(line: 289, column: 11, scope: !14497)
!14499 = !DILocation(line: 289, column: 7, scope: !14476)
!14500 = !DILocation(line: 291, column: 5, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14497, file: !1930, line: 290, column: 3)
!14502 = !DILocation(line: 292, column: 3, scope: !14501)
!14503 = !DILocation(line: 293, column: 1, scope: !14476)
!14504 = !DILocalVariable(name: "p_sess", arg: 1, scope: !963, file: !964, line: 35, type: !967)
!14505 = !DILocation(line: 35, column: 50, scope: !963)
!14506 = !DILocalVariable(name: "remote_port", arg: 2, scope: !963, file: !964, line: 36, type: !225)
!14507 = !DILocation(line: 36, column: 45, scope: !963)
!14508 = !DILocalVariable(name: "use_port_sockaddr", arg: 3, scope: !963, file: !964, line: 37, type: !19)
!14509 = !DILocation(line: 37, column: 34, scope: !963)
!14510 = !DILocalVariable(name: "p_connect_to", scope: !963, file: !964, line: 40, type: !14511)
!14511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14512, size: 64)
!14512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!14513 = !DILocation(line: 40, column: 38, scope: !963)
!14514 = !DILocalVariable(name: "retval", scope: !963, file: !964, line: 41, type: !19)
!14515 = !DILocation(line: 41, column: 7, scope: !963)
!14516 = !DILocalVariable(name: "i", scope: !963, file: !964, line: 42, type: !19)
!14517 = !DILocation(line: 42, column: 7, scope: !963)
!14518 = !DILocalVariable(name: "s", scope: !963, file: !964, line: 43, type: !19)
!14519 = !DILocation(line: 43, column: 7, scope: !963)
!14520 = !DILocation(line: 43, column: 34, scope: !963)
!14521 = !DILocation(line: 43, column: 42, scope: !963)
!14522 = !DILocation(line: 43, column: 11, scope: !963)
!14523 = !DILocalVariable(name: "port", scope: !963, file: !964, line: 44, type: !225)
!14524 = !DILocation(line: 44, column: 18, scope: !963)
!14525 = !DILocation(line: 45, column: 7, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !963, file: !964, line: 45, column: 7)
!14527 = !DILocation(line: 45, column: 15, scope: !14526)
!14528 = !DILocation(line: 45, column: 30, scope: !14526)
!14529 = !DILocation(line: 45, column: 7, scope: !963)
!14530 = !DILocation(line: 47, column: 5, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14526, file: !964, line: 46, column: 3)
!14532 = !DILocation(line: 48, column: 3, scope: !14531)
!14533 = !DILocation(line: 49, column: 36, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !963, file: !964, line: 49, column: 7)
!14535 = !DILocation(line: 49, column: 7, scope: !14534)
!14536 = !DILocation(line: 49, column: 7, scope: !963)
!14537 = !DILocation(line: 51, column: 5, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14534, file: !964, line: 50, column: 3)
!14539 = !DILocation(line: 52, column: 3, scope: !14538)
!14540 = !DILocation(line: 53, column: 7, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !963, file: !964, line: 53, column: 7)
!14542 = !DILocation(line: 53, column: 7, scope: !963)
!14543 = !DILocation(line: 55, column: 29, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14541, file: !964, line: 54, column: 3)
!14545 = !DILocation(line: 55, column: 12, scope: !14544)
!14546 = !DILocation(line: 55, column: 10, scope: !14544)
!14547 = !DILocation(line: 56, column: 3, scope: !14544)
!14548 = !DILocation(line: 57, column: 34, scope: !963)
!14549 = !DILocation(line: 57, column: 3, scope: !963)
!14550 = !DILocation(line: 61, column: 10, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !963, file: !964, line: 61, column: 3)
!14552 = !DILocation(line: 61, column: 8, scope: !14551)
!14553 = !DILocation(line: 61, column: 15, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14551, file: !964, line: 61, column: 3)
!14555 = !DILocation(line: 61, column: 17, scope: !14554)
!14556 = !DILocation(line: 61, column: 3, scope: !14551)
!14557 = !DILocalVariable(name: "sleep_for", scope: !14558, file: !964, line: 63, type: !692)
!14558 = distinct !DILexicalBlock(scope: !14554, file: !964, line: 62, column: 3)
!14559 = !DILocation(line: 63, column: 12, scope: !14558)
!14560 = !DILocation(line: 64, column: 45, scope: !14558)
!14561 = !DILocation(line: 64, column: 53, scope: !14558)
!14562 = !DILocation(line: 64, column: 5, scope: !14558)
!14563 = !DILocation(line: 65, column: 35, scope: !14558)
!14564 = !DILocation(line: 65, column: 47, scope: !14558)
!14565 = !DILocation(line: 65, column: 5, scope: !14558)
!14566 = !DILocation(line: 66, column: 31, scope: !14558)
!14567 = !DILocation(line: 66, column: 34, scope: !14558)
!14568 = !DILocation(line: 66, column: 14, scope: !14558)
!14569 = !DILocation(line: 66, column: 12, scope: !14558)
!14570 = !DILocation(line: 67, column: 9, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14558, file: !964, line: 67, column: 9)
!14572 = !DILocation(line: 67, column: 16, scope: !14571)
!14573 = !DILocation(line: 67, column: 9, scope: !14558)
!14574 = !DILocation(line: 69, column: 7, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14571, file: !964, line: 68, column: 5)
!14576 = !DILocation(line: 71, column: 9, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14558, file: !964, line: 71, column: 9)
!14578 = !DILocation(line: 71, column: 33, scope: !14577)
!14579 = !DILocation(line: 71, column: 60, scope: !14577)
!14580 = !DILocation(line: 71, column: 63, scope: !14577)
!14581 = !DILocation(line: 71, column: 65, scope: !14577)
!14582 = !DILocation(line: 71, column: 9, scope: !14558)
!14583 = !DILocation(line: 73, column: 7, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14577, file: !964, line: 72, column: 5)
!14585 = !DILocation(line: 74, column: 5, scope: !14584)
!14586 = !DILocation(line: 75, column: 17, scope: !14558)
!14587 = !DILocation(line: 75, column: 15, scope: !14558)
!14588 = !DILocation(line: 76, column: 15, scope: !14558)
!14589 = !DILocation(line: 77, column: 15, scope: !14558)
!14590 = !DILocation(line: 78, column: 23, scope: !14558)
!14591 = !DILocation(line: 78, column: 5, scope: !14558)
!14592 = !DILocation(line: 79, column: 3, scope: !14558)
!14593 = !DILocation(line: 61, column: 22, scope: !14554)
!14594 = !DILocation(line: 61, column: 3, scope: !14554)
!14595 = distinct !{!14595, !14556, !14596}
!14596 = !DILocation(line: 79, column: 3, scope: !14551)
!14597 = !DILocation(line: 80, column: 7, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !963, file: !964, line: 80, column: 7)
!14599 = !DILocation(line: 80, column: 7, scope: !963)
!14600 = !DILocation(line: 82, column: 20, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !14598, file: !964, line: 81, column: 3)
!14602 = !DILocation(line: 82, column: 28, scope: !14601)
!14603 = !DILocation(line: 82, column: 18, scope: !14601)
!14604 = !DILocation(line: 83, column: 3, scope: !14601)
!14605 = !DILocation(line: 86, column: 35, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14598, file: !964, line: 85, column: 3)
!14607 = !DILocation(line: 86, column: 43, scope: !14606)
!14608 = !DILocation(line: 86, column: 58, scope: !14606)
!14609 = !DILocation(line: 86, column: 5, scope: !14606)
!14610 = !DILocation(line: 87, column: 20, scope: !14606)
!14611 = !DILocation(line: 87, column: 28, scope: !14606)
!14612 = !DILocation(line: 87, column: 18, scope: !14606)
!14613 = !DILocation(line: 89, column: 40, scope: !963)
!14614 = !DILocation(line: 89, column: 43, scope: !963)
!14615 = !DILocation(line: 90, column: 40, scope: !963)
!14616 = !DILocation(line: 89, column: 12, scope: !963)
!14617 = !DILocation(line: 89, column: 10, scope: !963)
!14618 = !DILocation(line: 91, column: 35, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !963, file: !964, line: 91, column: 7)
!14620 = !DILocation(line: 91, column: 7, scope: !14619)
!14621 = !DILocation(line: 91, column: 7, scope: !963)
!14622 = !DILocation(line: 93, column: 23, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14619, file: !964, line: 92, column: 3)
!14624 = !DILocation(line: 93, column: 5, scope: !14623)
!14625 = !DILocation(line: 94, column: 7, scope: !14623)
!14626 = !DILocation(line: 95, column: 3, scope: !14623)
!14627 = !DILocation(line: 96, column: 10, scope: !963)
!14628 = !DILocation(line: 96, column: 3, scope: !963)
!14629 = distinct !DISubprogram(name: "vsf_privop_pasv_cleanup", scope: !964, file: !964, line: 100, type: !14630, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!14630 = !DISubroutineType(types: !14631)
!14631 = !{null, !967}
!14632 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14629, file: !964, line: 100, type: !967)
!14633 = !DILocation(line: 100, column: 45, scope: !14629)
!14634 = !DILocation(line: 102, column: 7, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14629, file: !964, line: 102, column: 7)
!14636 = !DILocation(line: 102, column: 15, scope: !14635)
!14637 = !DILocation(line: 102, column: 30, scope: !14635)
!14638 = !DILocation(line: 102, column: 7, scope: !14629)
!14639 = !DILocation(line: 104, column: 23, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14635, file: !964, line: 103, column: 3)
!14641 = !DILocation(line: 104, column: 31, scope: !14640)
!14642 = !DILocation(line: 104, column: 5, scope: !14640)
!14643 = !DILocation(line: 105, column: 5, scope: !14640)
!14644 = !DILocation(line: 105, column: 13, scope: !14640)
!14645 = !DILocation(line: 105, column: 28, scope: !14640)
!14646 = !DILocation(line: 106, column: 3, scope: !14640)
!14647 = !DILocation(line: 107, column: 1, scope: !14629)
!14648 = distinct !DISubprogram(name: "vsf_privop_pasv_active", scope: !964, file: !964, line: 110, type: !14649, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!14649 = !DISubroutineType(types: !14650)
!14650 = !{!19, !967}
!14651 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14648, file: !964, line: 110, type: !967)
!14652 = !DILocation(line: 110, column: 44, scope: !14648)
!14653 = !DILocation(line: 112, column: 7, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14648, file: !964, line: 112, column: 7)
!14655 = !DILocation(line: 112, column: 15, scope: !14654)
!14656 = !DILocation(line: 112, column: 30, scope: !14654)
!14657 = !DILocation(line: 112, column: 7, scope: !14648)
!14658 = !DILocation(line: 114, column: 5, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14654, file: !964, line: 113, column: 3)
!14660 = !DILocation(line: 116, column: 3, scope: !14648)
!14661 = !DILocation(line: 117, column: 1, scope: !14648)
!14662 = !DILocalVariable(name: "p_sess", arg: 1, scope: !1055, file: !964, line: 120, type: !967)
!14663 = !DILocation(line: 120, column: 44, scope: !1055)
!14664 = !DILocalVariable(name: "bind_retries", scope: !1055, file: !964, line: 123, type: !19)
!14665 = !DILocation(line: 123, column: 7, scope: !1055)
!14666 = !DILocalVariable(name: "the_port", scope: !1055, file: !964, line: 124, type: !225)
!14667 = !DILocation(line: 124, column: 18, scope: !1055)
!14668 = !DILocalVariable(name: "min_port", scope: !1055, file: !964, line: 126, type: !225)
!14669 = !DILocation(line: 126, column: 18, scope: !1055)
!14670 = !DILocalVariable(name: "max_port", scope: !1055, file: !964, line: 127, type: !225)
!14671 = !DILocation(line: 127, column: 18, scope: !1055)
!14672 = !DILocalVariable(name: "is_ipv6", scope: !1055, file: !964, line: 128, type: !19)
!14673 = !DILocation(line: 128, column: 7, scope: !1055)
!14674 = !DILocation(line: 128, column: 46, scope: !1055)
!14675 = !DILocation(line: 128, column: 54, scope: !1055)
!14676 = !DILocation(line: 128, column: 17, scope: !1055)
!14677 = !DILocation(line: 129, column: 7, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !1055, file: !964, line: 129, column: 7)
!14679 = !DILocation(line: 129, column: 15, scope: !14678)
!14680 = !DILocation(line: 129, column: 30, scope: !14678)
!14681 = !DILocation(line: 129, column: 7, scope: !1055)
!14682 = !DILocation(line: 131, column: 5, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14678, file: !964, line: 130, column: 3)
!14684 = !DILocation(line: 132, column: 3, scope: !14683)
!14685 = !DILocation(line: 134, column: 7, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !1055, file: !964, line: 134, column: 7)
!14687 = !DILocation(line: 134, column: 31, scope: !14686)
!14688 = !DILocation(line: 134, column: 29, scope: !14686)
!14689 = !DILocation(line: 134, column: 40, scope: !14686)
!14690 = !DILocation(line: 134, column: 43, scope: !14686)
!14691 = !DILocation(line: 134, column: 68, scope: !14686)
!14692 = !DILocation(line: 134, column: 65, scope: !14686)
!14693 = !DILocation(line: 134, column: 7, scope: !1055)
!14694 = !DILocation(line: 136, column: 33, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14686, file: !964, line: 135, column: 3)
!14696 = !DILocation(line: 136, column: 16, scope: !14695)
!14697 = !DILocation(line: 136, column: 14, scope: !14695)
!14698 = !DILocation(line: 137, column: 3, scope: !14695)
!14699 = !DILocation(line: 138, column: 7, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !1055, file: !964, line: 138, column: 7)
!14701 = !DILocation(line: 138, column: 32, scope: !14700)
!14702 = !DILocation(line: 138, column: 29, scope: !14700)
!14703 = !DILocation(line: 138, column: 41, scope: !14700)
!14704 = !DILocation(line: 138, column: 44, scope: !14700)
!14705 = !DILocation(line: 138, column: 68, scope: !14700)
!14706 = !DILocation(line: 138, column: 66, scope: !14700)
!14707 = !DILocation(line: 138, column: 7, scope: !1055)
!14708 = !DILocation(line: 140, column: 33, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14700, file: !964, line: 139, column: 3)
!14710 = !DILocation(line: 140, column: 16, scope: !14709)
!14711 = !DILocation(line: 140, column: 14, scope: !14709)
!14712 = !DILocation(line: 141, column: 3, scope: !14709)
!14713 = !DILocation(line: 143, column: 3, scope: !1055)
!14714 = !DILocation(line: 143, column: 10, scope: !1055)
!14715 = !DILocalVariable(name: "retval", scope: !14716, file: !964, line: 145, type: !19)
!14716 = distinct !DILexicalBlock(scope: !1055, file: !964, line: 144, column: 3)
!14717 = !DILocation(line: 145, column: 9, scope: !14716)
!14718 = !DILocalVariable(name: "scaled_port", scope: !14716, file: !964, line: 146, type: !692)
!14719 = !DILocation(line: 146, column: 12, scope: !14716)
!14720 = !DILocation(line: 147, column: 16, scope: !14716)
!14721 = !DILocation(line: 147, column: 14, scope: !14716)
!14722 = !DILocation(line: 148, column: 34, scope: !14716)
!14723 = !DILocation(line: 148, column: 43, scope: !14716)
!14724 = !DILocation(line: 148, column: 16, scope: !14716)
!14725 = !DILocation(line: 148, column: 14, scope: !14716)
!14726 = !DILocation(line: 149, column: 34, scope: !14716)
!14727 = !DILocation(line: 149, column: 45, scope: !14716)
!14728 = !DILocation(line: 149, column: 43, scope: !14716)
!14729 = !DILocation(line: 149, column: 16, scope: !14716)
!14730 = !DILocation(line: 149, column: 14, scope: !14716)
!14731 = !DILocation(line: 150, column: 28, scope: !14716)
!14732 = !DILocation(line: 150, column: 19, scope: !14716)
!14733 = !DILocation(line: 150, column: 17, scope: !14716)
!14734 = !DILocation(line: 151, column: 30, scope: !14716)
!14735 = !DILocation(line: 151, column: 21, scope: !14716)
!14736 = !DILocation(line: 151, column: 39, scope: !14716)
!14737 = !DILocation(line: 152, column: 30, scope: !14716)
!14738 = !DILocation(line: 152, column: 21, scope: !14716)
!14739 = !DILocation(line: 152, column: 41, scope: !14716)
!14740 = !DILocation(line: 152, column: 39, scope: !14716)
!14741 = !DILocation(line: 152, column: 50, scope: !14716)
!14742 = !DILocation(line: 151, column: 57, scope: !14716)
!14743 = !DILocation(line: 151, column: 17, scope: !14716)
!14744 = !DILocation(line: 153, column: 33, scope: !14716)
!14745 = !DILocation(line: 153, column: 16, scope: !14716)
!14746 = !DILocation(line: 153, column: 14, scope: !14716)
!14747 = !DILocation(line: 154, column: 9, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14716, file: !964, line: 154, column: 9)
!14749 = !DILocation(line: 154, column: 9, scope: !14716)
!14750 = !DILocation(line: 156, column: 32, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14748, file: !964, line: 155, column: 5)
!14752 = !DILocation(line: 156, column: 7, scope: !14751)
!14753 = !DILocation(line: 156, column: 15, scope: !14751)
!14754 = !DILocation(line: 156, column: 30, scope: !14751)
!14755 = !DILocation(line: 157, column: 5, scope: !14751)
!14756 = !DILocation(line: 160, column: 32, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14748, file: !964, line: 159, column: 5)
!14758 = !DILocation(line: 160, column: 7, scope: !14757)
!14759 = !DILocation(line: 160, column: 15, scope: !14757)
!14760 = !DILocation(line: 160, column: 30, scope: !14757)
!14761 = !DILocation(line: 162, column: 36, scope: !14716)
!14762 = !DILocation(line: 162, column: 44, scope: !14716)
!14763 = !DILocation(line: 162, column: 5, scope: !14716)
!14764 = !DILocation(line: 163, column: 47, scope: !14716)
!14765 = !DILocation(line: 163, column: 55, scope: !14716)
!14766 = !DILocation(line: 163, column: 5, scope: !14716)
!14767 = !DILocation(line: 164, column: 35, scope: !14716)
!14768 = !DILocation(line: 164, column: 49, scope: !14716)
!14769 = !DILocation(line: 164, column: 5, scope: !14716)
!14770 = !DILocation(line: 165, column: 31, scope: !14716)
!14771 = !DILocation(line: 165, column: 39, scope: !14716)
!14772 = !DILocation(line: 165, column: 55, scope: !14716)
!14773 = !DILocation(line: 165, column: 14, scope: !14716)
!14774 = !DILocation(line: 165, column: 12, scope: !14716)
!14775 = !DILocation(line: 166, column: 38, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14716, file: !964, line: 166, column: 9)
!14777 = !DILocation(line: 166, column: 10, scope: !14776)
!14778 = !DILocation(line: 166, column: 9, scope: !14716)
!14779 = !DILocation(line: 168, column: 35, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14776, file: !964, line: 167, column: 5)
!14781 = !DILocation(line: 168, column: 43, scope: !14780)
!14782 = !DILocation(line: 168, column: 16, scope: !14780)
!14783 = !DILocation(line: 168, column: 14, scope: !14780)
!14784 = !DILocation(line: 169, column: 40, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14780, file: !964, line: 169, column: 11)
!14786 = !DILocation(line: 169, column: 12, scope: !14785)
!14787 = !DILocation(line: 169, column: 11, scope: !14780)
!14788 = !DILocation(line: 171, column: 9, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14785, file: !964, line: 170, column: 7)
!14790 = !DILocation(line: 173, column: 5, scope: !14780)
!14791 = !DILocation(line: 175, column: 9, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14716, file: !964, line: 175, column: 9)
!14793 = !DILocation(line: 175, column: 33, scope: !14792)
!14794 = !DILocation(line: 175, column: 60, scope: !14792)
!14795 = !DILocation(line: 176, column: 9, scope: !14792)
!14796 = !DILocation(line: 176, column: 33, scope: !14792)
!14797 = !DILocation(line: 175, column: 9, scope: !14716)
!14798 = !DILocation(line: 178, column: 25, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14792, file: !964, line: 177, column: 5)
!14800 = !DILocation(line: 178, column: 33, scope: !14799)
!14801 = !DILocation(line: 178, column: 7, scope: !14799)
!14802 = !DILocation(line: 179, column: 7, scope: !14799)
!14803 = !DILocation(line: 179, column: 15, scope: !14799)
!14804 = !DILocation(line: 179, column: 30, scope: !14799)
!14805 = !DILocation(line: 180, column: 7, scope: !14799)
!14806 = distinct !{!14806, !14713, !14807}
!14807 = !DILocation(line: 183, column: 3, scope: !1055)
!14808 = !DILocation(line: 182, column: 5, scope: !14716)
!14809 = !DILocation(line: 184, column: 8, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !1055, file: !964, line: 184, column: 7)
!14811 = !DILocation(line: 184, column: 7, scope: !1055)
!14812 = !DILocation(line: 186, column: 5, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14810, file: !964, line: 185, column: 3)
!14814 = !DILocation(line: 187, column: 3, scope: !14813)
!14815 = !DILocation(line: 188, column: 10, scope: !1055)
!14816 = !DILocation(line: 188, column: 3, scope: !1055)
!14817 = distinct !DISubprogram(name: "vsf_privop_accept_pasv", scope: !964, file: !964, line: 192, type: !14649, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!14818 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14817, file: !964, line: 192, type: !967)
!14819 = !DILocation(line: 192, column: 44, scope: !14817)
!14820 = !DILocalVariable(name: "p_accept_addr", scope: !14817, file: !964, line: 194, type: !154)
!14821 = !DILocation(line: 194, column: 32, scope: !14817)
!14822 = !DILocalVariable(name: "remote_fd", scope: !14817, file: !964, line: 195, type: !19)
!14823 = !DILocation(line: 195, column: 7, scope: !14817)
!14824 = !DILocation(line: 196, column: 7, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14817, file: !964, line: 196, column: 7)
!14826 = !DILocation(line: 196, column: 15, scope: !14825)
!14827 = !DILocation(line: 196, column: 30, scope: !14825)
!14828 = !DILocation(line: 196, column: 7, scope: !14817)
!14829 = !DILocation(line: 198, column: 5, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14825, file: !964, line: 197, column: 3)
!14831 = !DILocation(line: 199, column: 3, scope: !14830)
!14832 = !DILocation(line: 200, column: 3, scope: !14817)
!14833 = !DILocation(line: 201, column: 42, scope: !14817)
!14834 = !DILocation(line: 201, column: 50, scope: !14817)
!14835 = !DILocation(line: 201, column: 66, scope: !14817)
!14836 = !DILocation(line: 202, column: 42, scope: !14817)
!14837 = !DILocation(line: 201, column: 15, scope: !14817)
!14838 = !DILocation(line: 201, column: 13, scope: !14817)
!14839 = !DILocation(line: 203, column: 35, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14817, file: !964, line: 203, column: 7)
!14841 = !DILocation(line: 203, column: 7, scope: !14840)
!14842 = !DILocation(line: 203, column: 7, scope: !14817)
!14843 = !DILocation(line: 205, column: 5, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14840, file: !964, line: 204, column: 3)
!14845 = !DILocation(line: 206, column: 5, scope: !14844)
!14846 = !DILocation(line: 212, column: 8, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14817, file: !964, line: 212, column: 7)
!14848 = !DILocation(line: 212, column: 7, scope: !14817)
!14849 = !DILocation(line: 214, column: 42, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14851, file: !964, line: 214, column: 9)
!14851 = distinct !DILexicalBlock(scope: !14847, file: !964, line: 213, column: 3)
!14852 = !DILocation(line: 214, column: 50, scope: !14850)
!14853 = !DILocation(line: 214, column: 65, scope: !14850)
!14854 = !DILocation(line: 214, column: 10, scope: !14850)
!14855 = !DILocation(line: 214, column: 9, scope: !14851)
!14856 = !DILocation(line: 216, column: 25, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14850, file: !964, line: 215, column: 5)
!14858 = !DILocation(line: 216, column: 7, scope: !14857)
!14859 = !DILocation(line: 217, column: 7, scope: !14857)
!14860 = !DILocation(line: 218, column: 7, scope: !14857)
!14861 = !DILocation(line: 220, column: 3, scope: !14851)
!14862 = !DILocation(line: 221, column: 3, scope: !14817)
!14863 = !DILocation(line: 222, column: 10, scope: !14817)
!14864 = !DILocation(line: 222, column: 3, scope: !14817)
!14865 = !DILocation(line: 223, column: 1, scope: !14817)
!14866 = !DILocalVariable(name: "p_sess", arg: 1, scope: !1060, file: !964, line: 226, type: !967)
!14867 = !DILocation(line: 226, column: 46, scope: !1060)
!14868 = !DILocalVariable(name: "fd", arg: 2, scope: !1060, file: !964, line: 226, type: !19)
!14869 = !DILocation(line: 226, column: 58, scope: !1060)
!14870 = !DILocation(line: 229, column: 21, scope: !1060)
!14871 = !DILocation(line: 229, column: 3, scope: !1060)
!14872 = !DILocation(line: 231, column: 35, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !1060, file: !964, line: 231, column: 7)
!14874 = !DILocation(line: 231, column: 7, scope: !14873)
!14875 = !DILocation(line: 232, column: 7, scope: !14873)
!14876 = !DILocation(line: 232, column: 15, scope: !14873)
!14877 = !DILocation(line: 231, column: 48, scope: !14873)
!14878 = !DILocation(line: 231, column: 7, scope: !1060)
!14879 = !DILocation(line: 234, column: 5, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14873, file: !964, line: 233, column: 3)
!14881 = !DILocation(line: 239, column: 7, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !1060, file: !964, line: 239, column: 7)
!14883 = !DILocation(line: 239, column: 15, scope: !14882)
!14884 = !DILocation(line: 239, column: 37, scope: !14882)
!14885 = !DILocation(line: 239, column: 43, scope: !14882)
!14886 = !DILocation(line: 240, column: 39, scope: !14882)
!14887 = !DILocation(line: 240, column: 8, scope: !14882)
!14888 = !DILocation(line: 240, column: 52, scope: !14882)
!14889 = !DILocation(line: 241, column: 36, scope: !14882)
!14890 = !DILocation(line: 241, column: 8, scope: !14882)
!14891 = !DILocation(line: 241, column: 52, scope: !14882)
!14892 = !DILocation(line: 241, column: 60, scope: !14882)
!14893 = !DILocation(line: 241, column: 49, scope: !14882)
!14894 = !DILocation(line: 241, column: 73, scope: !14882)
!14895 = !DILocation(line: 242, column: 36, scope: !14882)
!14896 = !DILocation(line: 242, column: 8, scope: !14882)
!14897 = !DILocation(line: 242, column: 52, scope: !14882)
!14898 = !DILocation(line: 242, column: 60, scope: !14882)
!14899 = !DILocation(line: 242, column: 49, scope: !14882)
!14900 = !DILocation(line: 239, column: 7, scope: !1060)
!14901 = !DILocation(line: 244, column: 5, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14882, file: !964, line: 243, column: 3)
!14903 = !DILocation(line: 245, column: 3, scope: !14902)
!14904 = !DILocation(line: 250, column: 22, scope: !1060)
!14905 = !DILocation(line: 250, column: 26, scope: !1060)
!14906 = !DILocation(line: 250, column: 34, scope: !1060)
!14907 = !DILocation(line: 250, column: 3, scope: !1060)
!14908 = !DILocation(line: 251, column: 1, scope: !1060)
!14909 = distinct !DISubprogram(name: "vsf_privop_do_login", scope: !964, file: !964, line: 254, type: !14910, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!14910 = !DISubroutineType(types: !14911)
!14911 = !{!1044, !967, !14912}
!14912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14913, size: 64)
!14913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!14914 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14909, file: !964, line: 254, type: !967)
!14915 = !DILocation(line: 254, column: 41, scope: !14909)
!14916 = !DILocalVariable(name: "p_pass_str", arg: 2, scope: !14909, file: !964, line: 255, type: !14912)
!14917 = !DILocation(line: 255, column: 41, scope: !14909)
!14918 = !DILocalVariable(name: "result", scope: !14909, file: !964, line: 257, type: !1044)
!14919 = !DILocation(line: 257, column: 30, scope: !14909)
!14920 = !DILocation(line: 258, column: 18, scope: !14909)
!14921 = !DILocation(line: 258, column: 27, scope: !14909)
!14922 = !DILocation(line: 258, column: 35, scope: !14909)
!14923 = !DILocation(line: 258, column: 45, scope: !14909)
!14924 = !DILocation(line: 258, column: 5, scope: !14909)
!14925 = !DILocation(line: 259, column: 23, scope: !14909)
!14926 = !DILocation(line: 259, column: 3, scope: !14909)
!14927 = !DILocation(line: 260, column: 7, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14909, file: !964, line: 260, column: 7)
!14929 = !DILocation(line: 260, column: 14, scope: !14928)
!14930 = !DILocation(line: 260, column: 7, scope: !14909)
!14931 = !DILocation(line: 262, column: 20, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14928, file: !964, line: 261, column: 3)
!14933 = !DILocation(line: 262, column: 5, scope: !14932)
!14934 = !DILocation(line: 263, column: 9, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14932, file: !964, line: 263, column: 9)
!14936 = !DILocation(line: 263, column: 9, scope: !14932)
!14937 = !DILocation(line: 265, column: 34, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14935, file: !964, line: 264, column: 5)
!14939 = !DILocation(line: 265, column: 25, scope: !14938)
!14940 = !DILocation(line: 265, column: 7, scope: !14938)
!14941 = !DILocation(line: 266, column: 5, scope: !14938)
!14942 = !DILocation(line: 267, column: 3, scope: !14932)
!14943 = !DILocation(line: 270, column: 20, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14928, file: !964, line: 269, column: 3)
!14945 = !DILocation(line: 270, column: 5, scope: !14944)
!14946 = !DILocation(line: 271, column: 9, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14944, file: !964, line: 271, column: 9)
!14948 = !DILocation(line: 271, column: 9, scope: !14944)
!14949 = !DILocation(line: 273, column: 34, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14947, file: !964, line: 272, column: 5)
!14951 = !DILocation(line: 273, column: 25, scope: !14950)
!14952 = !DILocation(line: 273, column: 7, scope: !14950)
!14953 = !DILocation(line: 274, column: 5, scope: !14950)
!14954 = !DILocation(line: 276, column: 10, scope: !14909)
!14955 = !DILocation(line: 276, column: 3, scope: !14909)
!14956 = distinct !DISubprogram(name: "handle_login", scope: !964, file: !964, line: 280, type: !14957, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{!1044, !967, !14959, !14912}
!14959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!14960 = !DILocalVariable(name: "p_sess", arg: 1, scope: !14956, file: !964, line: 280, type: !967)
!14961 = !DILocation(line: 280, column: 34, scope: !14956)
!14962 = !DILocalVariable(name: "p_user_str", arg: 2, scope: !14956, file: !964, line: 280, type: !14959)
!14963 = !DILocation(line: 280, column: 56, scope: !14956)
!14964 = !DILocalVariable(name: "p_pass_str", arg: 3, scope: !14956, file: !964, line: 281, type: !14912)
!14965 = !DILocation(line: 281, column: 34, scope: !14956)
!14966 = !DILocalVariable(name: "anonymous_login", scope: !14956, file: !964, line: 286, type: !19)
!14967 = !DILocation(line: 286, column: 7, scope: !14956)
!14968 = !DILocalVariable(name: "first_char", scope: !14956, file: !964, line: 287, type: !17)
!14969 = !DILocation(line: 287, column: 8, scope: !14956)
!14970 = !DILocalVariable(name: "len", scope: !14956, file: !964, line: 288, type: !26)
!14971 = !DILocation(line: 288, column: 16, scope: !14956)
!14972 = !DILocation(line: 288, column: 33, scope: !14956)
!14973 = !DILocation(line: 288, column: 22, scope: !14956)
!14974 = !DILocation(line: 289, column: 7, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14956, file: !964, line: 289, column: 7)
!14976 = !DILocation(line: 289, column: 11, scope: !14975)
!14977 = !DILocation(line: 289, column: 16, scope: !14975)
!14978 = !DILocation(line: 289, column: 19, scope: !14975)
!14979 = !DILocation(line: 289, column: 23, scope: !14975)
!14980 = !DILocation(line: 289, column: 7, scope: !14956)
!14981 = !DILocation(line: 291, column: 5, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14975, file: !964, line: 290, column: 3)
!14983 = !DILocation(line: 294, column: 32, scope: !14956)
!14984 = !DILocation(line: 294, column: 16, scope: !14956)
!14985 = !DILocation(line: 294, column: 14, scope: !14956)
!14986 = !DILocation(line: 295, column: 28, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14956, file: !964, line: 295, column: 7)
!14988 = !DILocation(line: 295, column: 8, scope: !14987)
!14989 = !DILocation(line: 295, column: 40, scope: !14987)
!14990 = !DILocation(line: 296, column: 7, scope: !14987)
!14991 = !DILocation(line: 296, column: 18, scope: !14987)
!14992 = !DILocation(line: 296, column: 25, scope: !14987)
!14993 = !DILocation(line: 297, column: 7, scope: !14987)
!14994 = !DILocation(line: 297, column: 18, scope: !14987)
!14995 = !DILocation(line: 295, column: 7, scope: !14956)
!14996 = !DILocation(line: 299, column: 5, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14987, file: !964, line: 298, column: 3)
!14998 = !DILocation(line: 302, column: 26, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14956, file: !964, line: 302, column: 7)
!15000 = !DILocation(line: 302, column: 7, scope: !14999)
!15001 = !DILocation(line: 302, column: 38, scope: !14999)
!15002 = !DILocation(line: 303, column: 32, scope: !14999)
!15003 = !DILocation(line: 303, column: 7, scope: !14999)
!15004 = !DILocation(line: 302, column: 7, scope: !14956)
!15005 = !DILocation(line: 305, column: 5, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !14999, file: !964, line: 304, column: 3)
!15007 = !DILocation(line: 308, column: 20, scope: !14956)
!15008 = !DILocation(line: 308, column: 9, scope: !14956)
!15009 = !DILocation(line: 308, column: 7, scope: !14956)
!15010 = !DILocation(line: 309, column: 7, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !14956, file: !964, line: 309, column: 7)
!15012 = !DILocation(line: 309, column: 11, scope: !15011)
!15013 = !DILocation(line: 309, column: 7, scope: !14956)
!15014 = !DILocation(line: 311, column: 5, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15011, file: !964, line: 310, column: 3)
!15016 = !DILocation(line: 314, column: 7, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !14956, file: !964, line: 314, column: 7)
!15018 = !DILocation(line: 314, column: 7, scope: !14956)
!15019 = !DILocalVariable(name: "upper_str", scope: !15020, file: !964, line: 316, type: !985)
!15020 = distinct !DILexicalBlock(scope: !15017, file: !964, line: 315, column: 3)
!15021 = !DILocation(line: 316, column: 18, scope: !15020)
!15022 = !DILocation(line: 317, column: 26, scope: !15020)
!15023 = !DILocation(line: 317, column: 5, scope: !15020)
!15024 = !DILocation(line: 318, column: 5, scope: !15020)
!15025 = !DILocation(line: 319, column: 9, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15020, file: !964, line: 319, column: 9)
!15027 = !DILocation(line: 319, column: 43, scope: !15026)
!15028 = !DILocation(line: 320, column: 9, scope: !15026)
!15029 = !DILocation(line: 319, column: 9, scope: !15020)
!15030 = !DILocation(line: 322, column: 23, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15026, file: !964, line: 321, column: 5)
!15032 = !DILocation(line: 323, column: 5, scope: !15031)
!15033 = !DILocation(line: 324, column: 5, scope: !15020)
!15034 = !DILocation(line: 325, column: 3, scope: !15020)
!15035 = !DILocalVariable(name: "result", scope: !15036, file: !964, line: 327, type: !1044)
!15036 = distinct !DILexicalBlock(scope: !14956, file: !964, line: 326, column: 3)
!15037 = !DILocation(line: 327, column: 32, scope: !15036)
!15038 = !DILocation(line: 328, column: 9, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15036, file: !964, line: 328, column: 9)
!15040 = !DILocation(line: 328, column: 9, scope: !15036)
!15041 = !DILocation(line: 330, column: 39, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15039, file: !964, line: 329, column: 5)
!15043 = !DILocation(line: 330, column: 47, scope: !15042)
!15044 = !DILocation(line: 330, column: 16, scope: !15042)
!15045 = !DILocation(line: 330, column: 14, scope: !15042)
!15046 = !DILocation(line: 331, column: 5, scope: !15042)
!15047 = !DILocation(line: 334, column: 12, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15049, file: !964, line: 334, column: 11)
!15049 = distinct !DILexicalBlock(scope: !15039, file: !964, line: 333, column: 5)
!15050 = !DILocation(line: 334, column: 11, scope: !15049)
!15051 = !DILocation(line: 336, column: 9, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15048, file: !964, line: 335, column: 7)
!15053 = !DILocation(line: 337, column: 7, scope: !15052)
!15054 = !DILocation(line: 338, column: 35, scope: !15049)
!15055 = !DILocation(line: 338, column: 43, scope: !15049)
!15056 = !DILocation(line: 338, column: 55, scope: !15049)
!15057 = !DILocation(line: 338, column: 16, scope: !15049)
!15058 = !DILocation(line: 338, column: 14, scope: !15049)
!15059 = !DILocation(line: 340, column: 12, scope: !15036)
!15060 = !DILocation(line: 340, column: 5, scope: !15036)
!15061 = !DILocation(line: 342, column: 1, scope: !14956)
!15062 = distinct !DISubprogram(name: "handle_anonymous_login", scope: !964, file: !964, line: 345, type: !14910, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!15063 = !DILocalVariable(name: "p_sess", arg: 1, scope: !15062, file: !964, line: 345, type: !967)
!15064 = !DILocation(line: 345, column: 44, scope: !15062)
!15065 = !DILocalVariable(name: "p_pass_str", arg: 2, scope: !15062, file: !964, line: 346, type: !14912)
!15066 = !DILocation(line: 346, column: 44, scope: !15062)
!15067 = !DILocation(line: 348, column: 21, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15062, file: !964, line: 348, column: 7)
!15069 = !DILocation(line: 348, column: 29, scope: !15068)
!15070 = !DILocation(line: 348, column: 8, scope: !15068)
!15071 = !DILocation(line: 348, column: 47, scope: !15068)
!15072 = !DILocation(line: 349, column: 26, scope: !15068)
!15073 = !DILocation(line: 349, column: 34, scope: !15068)
!15074 = !DILocation(line: 349, column: 52, scope: !15068)
!15075 = !DILocation(line: 349, column: 7, scope: !15068)
!15076 = !DILocation(line: 348, column: 7, scope: !15062)
!15077 = !DILocation(line: 351, column: 5, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15068, file: !964, line: 350, column: 3)
!15079 = !DILocation(line: 353, column: 21, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15062, file: !964, line: 353, column: 7)
!15081 = !DILocation(line: 353, column: 29, scope: !15080)
!15082 = !DILocation(line: 353, column: 8, scope: !15080)
!15083 = !DILocation(line: 353, column: 50, scope: !15080)
!15084 = !DILocation(line: 354, column: 28, scope: !15080)
!15085 = !DILocation(line: 354, column: 36, scope: !15080)
!15086 = !DILocation(line: 354, column: 57, scope: !15080)
!15087 = !DILocation(line: 354, column: 9, scope: !15080)
!15088 = !DILocation(line: 354, column: 69, scope: !15080)
!15089 = !DILocation(line: 355, column: 20, scope: !15080)
!15090 = !DILocation(line: 355, column: 8, scope: !15080)
!15091 = !DILocation(line: 353, column: 7, scope: !15062)
!15092 = !DILocation(line: 357, column: 5, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15080, file: !964, line: 356, column: 3)
!15094 = !DILocation(line: 360, column: 13, scope: !15062)
!15095 = !DILocation(line: 360, column: 21, scope: !15062)
!15096 = !DILocation(line: 360, column: 36, scope: !15062)
!15097 = !DILocation(line: 360, column: 3, scope: !15062)
!15098 = !DILocation(line: 361, column: 20, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15062, file: !964, line: 361, column: 7)
!15100 = !DILocation(line: 361, column: 28, scope: !15099)
!15101 = !DILocation(line: 361, column: 7, scope: !15099)
!15102 = !DILocation(line: 361, column: 7, scope: !15062)
!15103 = !DILocation(line: 363, column: 21, scope: !15104)
!15104 = distinct !DILexicalBlock(scope: !15099, file: !964, line: 362, column: 3)
!15105 = !DILocation(line: 363, column: 29, scope: !15104)
!15106 = !DILocation(line: 363, column: 5, scope: !15104)
!15107 = !DILocation(line: 364, column: 3, scope: !15104)
!15108 = !DILocation(line: 366, column: 21, scope: !15062)
!15109 = !DILocation(line: 366, column: 29, scope: !15062)
!15110 = !DILocation(line: 366, column: 3, scope: !15062)
!15111 = !DILocation(line: 367, column: 21, scope: !15062)
!15112 = !DILocation(line: 367, column: 29, scope: !15062)
!15113 = !DILocation(line: 367, column: 3, scope: !15062)
!15114 = !DILocalVariable(name: "ftp_username_str", scope: !15115, file: !964, line: 369, type: !985)
!15115 = distinct !DILexicalBlock(scope: !15062, file: !964, line: 368, column: 3)
!15116 = !DILocation(line: 369, column: 18, scope: !15115)
!15117 = !DILocation(line: 370, column: 9, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15115, file: !964, line: 370, column: 9)
!15119 = !DILocation(line: 370, column: 9, scope: !15115)
!15120 = !DILocation(line: 372, column: 41, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15118, file: !964, line: 371, column: 5)
!15122 = !DILocation(line: 372, column: 7, scope: !15121)
!15123 = !DILocation(line: 373, column: 5, scope: !15121)
!15124 = !DILocation(line: 374, column: 28, scope: !15115)
!15125 = !DILocation(line: 374, column: 5, scope: !15115)
!15126 = !DILocation(line: 375, column: 5, scope: !15115)
!15127 = !DILocation(line: 377, column: 13, scope: !15062)
!15128 = !DILocation(line: 377, column: 21, scope: !15062)
!15129 = !DILocation(line: 377, column: 3, scope: !15062)
!15130 = !DILocation(line: 378, column: 13, scope: !15062)
!15131 = !DILocation(line: 378, column: 21, scope: !15062)
!15132 = !DILocation(line: 378, column: 3, scope: !15062)
!15133 = !DILocation(line: 379, column: 3, scope: !15062)
!15134 = !DILocation(line: 380, column: 1, scope: !15062)
!15135 = distinct !DISubprogram(name: "handle_local_login", scope: !964, file: !964, line: 383, type: !14957, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!15136 = !DILocalVariable(name: "p_sess", arg: 1, scope: !15135, file: !964, line: 383, type: !967)
!15137 = !DILocation(line: 383, column: 40, scope: !15135)
!15138 = !DILocalVariable(name: "p_user_str", arg: 2, scope: !15135, file: !964, line: 384, type: !14959)
!15139 = !DILocation(line: 384, column: 34, scope: !15135)
!15140 = !DILocalVariable(name: "p_pass_str", arg: 3, scope: !15135, file: !964, line: 385, type: !14912)
!15141 = !DILocation(line: 385, column: 40, scope: !15135)
!15142 = !DILocation(line: 387, column: 30, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15135, file: !964, line: 387, column: 7)
!15144 = !DILocation(line: 387, column: 42, scope: !15143)
!15145 = !DILocation(line: 387, column: 55, scope: !15143)
!15146 = !DILocation(line: 387, column: 63, scope: !15143)
!15147 = !DILocation(line: 387, column: 8, scope: !15143)
!15148 = !DILocation(line: 387, column: 7, scope: !15135)
!15149 = !DILocation(line: 389, column: 5, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15143, file: !964, line: 388, column: 3)
!15151 = !DILocation(line: 391, column: 26, scope: !15135)
!15152 = !DILocation(line: 391, column: 34, scope: !15135)
!15153 = !DILocation(line: 391, column: 3, scope: !15135)
!15154 = !DILocation(line: 392, column: 3, scope: !15135)
!15155 = !DILocation(line: 393, column: 1, scope: !15135)
!15156 = distinct !DISubprogram(name: "setup_username_globals", scope: !964, file: !964, line: 396, type: !15157, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1032, retainedNodes: !128)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{null, !967, !14912}
!15159 = !DILocalVariable(name: "p_sess", arg: 1, scope: !15156, file: !964, line: 396, type: !967)
!15160 = !DILocation(line: 396, column: 44, scope: !15156)
!15161 = !DILocalVariable(name: "p_str", arg: 2, scope: !15156, file: !964, line: 396, type: !14912)
!15162 = !DILocation(line: 396, column: 72, scope: !15156)
!15163 = !DILocation(line: 398, column: 13, scope: !15156)
!15164 = !DILocation(line: 398, column: 21, scope: !15156)
!15165 = !DILocation(line: 398, column: 31, scope: !15156)
!15166 = !DILocation(line: 398, column: 3, scope: !15156)
!15167 = !DILocation(line: 399, column: 7, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15156, file: !964, line: 399, column: 7)
!15169 = !DILocation(line: 399, column: 7, scope: !15156)
!15170 = !DILocalVariable(name: "prefix_str", scope: !15171, file: !964, line: 401, type: !985)
!15171 = distinct !DILexicalBlock(scope: !15168, file: !964, line: 400, column: 3)
!15172 = !DILocation(line: 401, column: 18, scope: !15171)
!15173 = !DILocation(line: 402, column: 28, scope: !15171)
!15174 = !DILocation(line: 402, column: 36, scope: !15171)
!15175 = !DILocation(line: 402, column: 5, scope: !15171)
!15176 = !DILocation(line: 403, column: 5, scope: !15171)
!15177 = !DILocation(line: 404, column: 33, scope: !15171)
!15178 = !DILocation(line: 404, column: 5, scope: !15171)
!15179 = !DILocation(line: 405, column: 5, scope: !15171)
!15180 = !DILocation(line: 406, column: 5, scope: !15171)
!15181 = !DILocation(line: 407, column: 3, scope: !15171)
!15182 = !DILocation(line: 408, column: 1, scope: !15156)
!15183 = distinct !DISubprogram(name: "vsf_standalone_main", scope: !1066, file: !1066, line: 37, type: !15184, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!15184 = !DISubroutineType(types: !15185)
!15185 = !{!15186}
!15186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_client_launch", file: !2158, line: 4, size: 64, elements: !15187)
!15187 = !{!15188, !15189}
!15188 = !DIDerivedType(tag: DW_TAG_member, name: "num_children", scope: !15186, file: !2158, line: 6, baseType: !26, size: 32)
!15189 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !15186, file: !2158, line: 7, baseType: !26, size: 32, offset: 32)
!15190 = !DILocalVariable(name: "p_accept_addr", scope: !15183, file: !1066, line: 39, type: !11)
!15191 = !DILocation(line: 39, column: 32, scope: !15183)
!15192 = !DILocalVariable(name: "listen_sock", scope: !15183, file: !1066, line: 40, type: !19)
!15193 = !DILocation(line: 40, column: 7, scope: !15183)
!15194 = !DILocalVariable(name: "retval", scope: !15183, file: !1066, line: 41, type: !19)
!15195 = !DILocation(line: 41, column: 7, scope: !15183)
!15196 = !DILocation(line: 42, column: 19, scope: !15183)
!15197 = !DILocation(line: 42, column: 17, scope: !15183)
!15198 = !DILocation(line: 43, column: 7, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15183, file: !1066, line: 43, column: 7)
!15200 = !DILocation(line: 43, column: 22, scope: !15199)
!15201 = !DILocation(line: 43, column: 25, scope: !15199)
!15202 = !DILocation(line: 43, column: 7, scope: !15183)
!15203 = !DILocation(line: 45, column: 5, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15199, file: !1066, line: 44, column: 3)
!15205 = !DILocation(line: 46, column: 3, scope: !15204)
!15206 = !DILocation(line: 47, column: 7, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15183, file: !1066, line: 47, column: 7)
!15208 = !DILocation(line: 47, column: 7, scope: !15183)
!15209 = !DILocalVariable(name: "forkret", scope: !15210, file: !1066, line: 49, type: !19)
!15210 = distinct !DILexicalBlock(scope: !15207, file: !1066, line: 48, column: 3)
!15211 = !DILocation(line: 49, column: 9, scope: !15210)
!15212 = !DILocation(line: 49, column: 19, scope: !15210)
!15213 = !DILocation(line: 50, column: 9, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15210, file: !1066, line: 50, column: 9)
!15215 = !DILocation(line: 50, column: 17, scope: !15214)
!15216 = !DILocation(line: 50, column: 9, scope: !15210)
!15217 = !DILocation(line: 53, column: 7, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15214, file: !1066, line: 51, column: 5)
!15219 = !DILocation(line: 54, column: 5, scope: !15218)
!15220 = !DILocation(line: 56, column: 5, scope: !15210)
!15221 = !DILocation(line: 57, column: 5, scope: !15210)
!15222 = !DILocation(line: 58, column: 3, scope: !15210)
!15223 = !DILocation(line: 59, column: 7, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15183, file: !1066, line: 59, column: 7)
!15225 = !DILocation(line: 59, column: 7, scope: !15183)
!15226 = !DILocation(line: 61, column: 19, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15224, file: !1066, line: 60, column: 3)
!15228 = !DILocation(line: 61, column: 17, scope: !15227)
!15229 = !DILocation(line: 62, column: 3, scope: !15227)
!15230 = !DILocation(line: 65, column: 19, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15224, file: !1066, line: 64, column: 3)
!15232 = !DILocation(line: 65, column: 17, scope: !15231)
!15233 = !DILocation(line: 67, column: 34, scope: !15183)
!15234 = !DILocation(line: 67, column: 3, scope: !15183)
!15235 = !DILocation(line: 69, column: 39, scope: !15183)
!15236 = !DILocation(line: 69, column: 23, scope: !15183)
!15237 = !DILocation(line: 69, column: 21, scope: !15183)
!15238 = !DILocation(line: 72, column: 32, scope: !15183)
!15239 = !DILocation(line: 71, column: 21, scope: !15183)
!15240 = !DILocation(line: 71, column: 19, scope: !15183)
!15241 = !DILocation(line: 73, column: 7, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15183, file: !1066, line: 73, column: 7)
!15243 = !DILocation(line: 73, column: 7, scope: !15183)
!15244 = !DILocation(line: 75, column: 5, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15242, file: !1066, line: 74, column: 3)
!15246 = !DILocation(line: 76, column: 3, scope: !15245)
!15247 = !DILocation(line: 77, column: 3, scope: !15183)
!15248 = !DILocation(line: 78, column: 3, scope: !15183)
!15249 = !DILocation(line: 79, column: 7, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15183, file: !1066, line: 79, column: 7)
!15251 = !DILocation(line: 79, column: 7, scope: !15183)
!15252 = !DILocalVariable(name: "p_sockaddr", scope: !15253, file: !1066, line: 81, type: !11)
!15253 = distinct !DILexicalBlock(scope: !15250, file: !1066, line: 80, column: 3)
!15254 = !DILocation(line: 81, column: 34, scope: !15253)
!15255 = !DILocation(line: 82, column: 5, scope: !15253)
!15256 = !DILocation(line: 83, column: 35, scope: !15253)
!15257 = !DILocation(line: 84, column: 52, scope: !15253)
!15258 = !DILocation(line: 84, column: 35, scope: !15253)
!15259 = !DILocation(line: 83, column: 5, scope: !15253)
!15260 = !DILocation(line: 85, column: 10, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15253, file: !1066, line: 85, column: 9)
!15262 = !DILocation(line: 85, column: 9, scope: !15253)
!15263 = !DILocation(line: 87, column: 36, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15261, file: !1066, line: 86, column: 5)
!15265 = !DILocation(line: 87, column: 7, scope: !15264)
!15266 = !DILocation(line: 88, column: 5, scope: !15264)
!15267 = !DILocation(line: 91, column: 34, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15269, file: !1066, line: 91, column: 11)
!15269 = distinct !DILexicalBlock(scope: !15261, file: !1066, line: 90, column: 5)
!15270 = !DILocation(line: 91, column: 58, scope: !15268)
!15271 = !DILocation(line: 91, column: 12, scope: !15268)
!15272 = !DILocation(line: 91, column: 11, scope: !15269)
!15273 = !DILocation(line: 93, column: 38, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15268, file: !1066, line: 92, column: 7)
!15275 = !DILocation(line: 93, column: 9, scope: !15274)
!15276 = !DILocation(line: 94, column: 7, scope: !15274)
!15277 = !DILocation(line: 96, column: 31, scope: !15253)
!15278 = !DILocation(line: 96, column: 44, scope: !15253)
!15279 = !DILocation(line: 96, column: 14, scope: !15253)
!15280 = !DILocation(line: 96, column: 12, scope: !15253)
!15281 = !DILocation(line: 97, column: 22, scope: !15253)
!15282 = !DILocation(line: 97, column: 5, scope: !15253)
!15283 = !DILocation(line: 98, column: 37, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15253, file: !1066, line: 98, column: 9)
!15285 = !DILocation(line: 98, column: 9, scope: !15284)
!15286 = !DILocation(line: 98, column: 9, scope: !15253)
!15287 = !DILocation(line: 100, column: 7, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15284, file: !1066, line: 99, column: 5)
!15289 = !DILocation(line: 101, column: 5, scope: !15288)
!15290 = !DILocation(line: 102, column: 3, scope: !15253)
!15291 = !DILocalVariable(name: "p_sockaddr", scope: !15292, file: !1066, line: 105, type: !11)
!15292 = distinct !DILexicalBlock(scope: !15250, file: !1066, line: 104, column: 3)
!15293 = !DILocation(line: 105, column: 34, scope: !15292)
!15294 = !DILocation(line: 106, column: 5, scope: !15292)
!15295 = !DILocation(line: 107, column: 35, scope: !15292)
!15296 = !DILocation(line: 108, column: 52, scope: !15292)
!15297 = !DILocation(line: 108, column: 35, scope: !15292)
!15298 = !DILocation(line: 107, column: 5, scope: !15292)
!15299 = !DILocation(line: 109, column: 10, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15292, file: !1066, line: 109, column: 9)
!15301 = !DILocation(line: 109, column: 9, scope: !15292)
!15302 = !DILocation(line: 111, column: 36, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15300, file: !1066, line: 110, column: 5)
!15304 = !DILocation(line: 111, column: 7, scope: !15303)
!15305 = !DILocation(line: 112, column: 5, scope: !15303)
!15306 = !DILocalVariable(name: "addr_str", scope: !15307, file: !1066, line: 115, type: !15308)
!15307 = distinct !DILexicalBlock(scope: !15300, file: !1066, line: 114, column: 5)
!15308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !15309)
!15309 = !{!15310, !15311, !15312}
!15310 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !15308, file: !34, line: 12, baseType: !16, size: 64)
!15311 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !15308, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!15312 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !15308, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!15313 = !DILocation(line: 115, column: 20, scope: !15307)
!15314 = !DILocalVariable(name: "p_raw_addr", scope: !15307, file: !1066, line: 116, type: !1074)
!15315 = !DILocation(line: 116, column: 28, scope: !15307)
!15316 = !DILocation(line: 117, column: 33, scope: !15307)
!15317 = !DILocation(line: 117, column: 7, scope: !15307)
!15318 = !DILocation(line: 118, column: 20, scope: !15307)
!15319 = !DILocation(line: 118, column: 18, scope: !15307)
!15320 = !DILocation(line: 119, column: 7, scope: !15307)
!15321 = !DILocation(line: 120, column: 12, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15307, file: !1066, line: 120, column: 11)
!15323 = !DILocation(line: 120, column: 11, scope: !15307)
!15324 = !DILocation(line: 122, column: 39, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15322, file: !1066, line: 121, column: 7)
!15326 = !DILocation(line: 122, column: 9, scope: !15325)
!15327 = !DILocation(line: 123, column: 7, scope: !15325)
!15328 = !DILocation(line: 124, column: 41, scope: !15307)
!15329 = !DILocation(line: 124, column: 53, scope: !15307)
!15330 = !DILocation(line: 124, column: 7, scope: !15307)
!15331 = !DILocation(line: 126, column: 31, scope: !15292)
!15332 = !DILocation(line: 126, column: 44, scope: !15292)
!15333 = !DILocation(line: 126, column: 14, scope: !15292)
!15334 = !DILocation(line: 126, column: 12, scope: !15292)
!15335 = !DILocation(line: 127, column: 22, scope: !15292)
!15336 = !DILocation(line: 127, column: 5, scope: !15292)
!15337 = !DILocation(line: 128, column: 37, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15292, file: !1066, line: 128, column: 9)
!15339 = !DILocation(line: 128, column: 9, scope: !15338)
!15340 = !DILocation(line: 128, column: 9, scope: !15292)
!15341 = !DILocation(line: 130, column: 7, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15338, file: !1066, line: 129, column: 5)
!15343 = !DILocation(line: 131, column: 5, scope: !15342)
!15344 = !DILocation(line: 133, column: 31, scope: !15183)
!15345 = !DILocation(line: 133, column: 12, scope: !15183)
!15346 = !DILocation(line: 133, column: 10, scope: !15183)
!15347 = !DILocation(line: 134, column: 35, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15183, file: !1066, line: 134, column: 7)
!15349 = !DILocation(line: 134, column: 7, scope: !15348)
!15350 = !DILocation(line: 134, column: 7, scope: !15183)
!15351 = !DILocation(line: 136, column: 5, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15348, file: !1066, line: 135, column: 3)
!15353 = !DILocation(line: 137, column: 3, scope: !15352)
!15354 = !DILocation(line: 138, column: 3, scope: !15183)
!15355 = !DILocation(line: 139, column: 3, scope: !15183)
!15356 = !DILocalVariable(name: "child_info", scope: !15357, file: !1066, line: 141, type: !15186)
!15357 = distinct !DILexicalBlock(scope: !15183, file: !1066, line: 140, column: 3)
!15358 = !DILocation(line: 141, column: 30, scope: !15357)
!15359 = !DILocalVariable(name: "p_raw_addr", scope: !15357, file: !1066, line: 142, type: !80)
!15360 = !DILocation(line: 142, column: 11, scope: !15357)
!15361 = !DILocalVariable(name: "new_child", scope: !15357, file: !1066, line: 143, type: !19)
!15362 = !DILocation(line: 143, column: 9, scope: !15357)
!15363 = !DILocalVariable(name: "new_client_sock", scope: !15357, file: !1066, line: 144, type: !19)
!15364 = !DILocation(line: 144, column: 9, scope: !15357)
!15365 = !DILocation(line: 146, column: 9, scope: !15357)
!15366 = !DILocation(line: 146, column: 22, scope: !15357)
!15367 = !DILocation(line: 145, column: 23, scope: !15357)
!15368 = !DILocation(line: 145, column: 21, scope: !15357)
!15369 = !DILocation(line: 147, column: 37, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15357, file: !1066, line: 147, column: 9)
!15371 = !DILocation(line: 147, column: 9, scope: !15370)
!15372 = !DILocation(line: 147, column: 9, scope: !15357)
!15373 = !DILocation(line: 149, column: 7, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15370, file: !1066, line: 148, column: 5)
!15375 = distinct !{!15375, !15355, !15376}
!15376 = !DILocation(line: 198, column: 3, scope: !15183)
!15377 = !DILocation(line: 151, column: 5, scope: !15357)
!15378 = !DILocation(line: 152, column: 31, scope: !15357)
!15379 = !DILocation(line: 152, column: 16, scope: !15357)
!15380 = !DILocation(line: 152, column: 29, scope: !15357)
!15381 = !DILocation(line: 153, column: 16, scope: !15357)
!15382 = !DILocation(line: 153, column: 28, scope: !15357)
!15383 = !DILocation(line: 154, column: 52, scope: !15357)
!15384 = !DILocation(line: 154, column: 18, scope: !15357)
!15385 = !DILocation(line: 154, column: 16, scope: !15357)
!15386 = !DILocation(line: 155, column: 46, scope: !15357)
!15387 = !DILocation(line: 155, column: 30, scope: !15357)
!15388 = !DILocation(line: 155, column: 16, scope: !15357)
!15389 = !DILocation(line: 155, column: 28, scope: !15357)
!15390 = !DILocation(line: 156, column: 9, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15357, file: !1066, line: 156, column: 9)
!15392 = !DILocation(line: 156, column: 9, scope: !15357)
!15393 = !DILocation(line: 158, column: 11, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15395, file: !1066, line: 158, column: 11)
!15395 = distinct !DILexicalBlock(scope: !15391, file: !1066, line: 157, column: 5)
!15396 = !DILocation(line: 158, column: 31, scope: !15394)
!15397 = !DILocation(line: 158, column: 34, scope: !15394)
!15398 = !DILocation(line: 158, column: 11, scope: !15395)
!15399 = !DILocation(line: 160, column: 21, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !15394, file: !1066, line: 159, column: 7)
!15401 = !DILocation(line: 160, column: 19, scope: !15400)
!15402 = !DILocation(line: 161, column: 7, scope: !15400)
!15403 = !DILocation(line: 164, column: 21, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15394, file: !1066, line: 163, column: 7)
!15405 = !DILocation(line: 164, column: 19, scope: !15404)
!15406 = !DILocation(line: 166, column: 5, scope: !15395)
!15407 = !DILocation(line: 169, column: 19, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15391, file: !1066, line: 168, column: 5)
!15409 = !DILocation(line: 169, column: 17, scope: !15408)
!15410 = !DILocation(line: 171, column: 9, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15357, file: !1066, line: 171, column: 9)
!15412 = !DILocation(line: 171, column: 19, scope: !15411)
!15413 = !DILocation(line: 171, column: 9, scope: !15357)
!15414 = !DILocation(line: 174, column: 25, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15411, file: !1066, line: 172, column: 5)
!15416 = !DILocation(line: 174, column: 7, scope: !15415)
!15417 = !DILocation(line: 175, column: 11, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15415, file: !1066, line: 175, column: 11)
!15419 = !DILocation(line: 175, column: 21, scope: !15418)
!15420 = !DILocation(line: 175, column: 11, scope: !15415)
!15421 = !DILocation(line: 177, column: 24, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15418, file: !1066, line: 176, column: 7)
!15423 = !DILocation(line: 177, column: 41, scope: !15422)
!15424 = !DILocation(line: 177, column: 60, scope: !15422)
!15425 = !DILocation(line: 177, column: 9, scope: !15422)
!15426 = !DILocation(line: 178, column: 7, scope: !15422)
!15427 = !DILocation(line: 182, column: 9, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15418, file: !1066, line: 180, column: 7)
!15429 = !DILocation(line: 183, column: 23, scope: !15428)
!15430 = !DILocation(line: 183, column: 9, scope: !15428)
!15431 = !DILocation(line: 186, column: 5, scope: !15415)
!15432 = !DILocation(line: 190, column: 7, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15411, file: !1066, line: 188, column: 5)
!15434 = !DILocation(line: 191, column: 25, scope: !15433)
!15435 = !DILocation(line: 191, column: 7, scope: !15433)
!15436 = !DILocation(line: 192, column: 21, scope: !15433)
!15437 = !DILocation(line: 192, column: 7, scope: !15433)
!15438 = !DILocation(line: 196, column: 14, scope: !15433)
!15439 = !DILocation(line: 196, column: 7, scope: !15433)
!15440 = distinct !DISubprogram(name: "hash_ip", scope: !1066, file: !1066, line: 269, type: !15441, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!15441 = !DISubroutineType(types: !15442)
!15442 = !{!26, !26, !80}
!15443 = !DILocalVariable(name: "buckets", arg: 1, scope: !15440, file: !1066, line: 269, type: !26)
!15444 = !DILocation(line: 269, column: 22, scope: !15440)
!15445 = !DILocalVariable(name: "p_key", arg: 2, scope: !15440, file: !1066, line: 269, type: !80)
!15446 = !DILocation(line: 269, column: 37, scope: !15440)
!15447 = !DILocalVariable(name: "p_raw_ip", scope: !15440, file: !1066, line: 271, type: !1074)
!15448 = !DILocation(line: 271, column: 24, scope: !15440)
!15449 = !DILocation(line: 271, column: 57, scope: !15440)
!15450 = !DILocalVariable(name: "val", scope: !15440, file: !1066, line: 272, type: !26)
!15451 = !DILocation(line: 272, column: 16, scope: !15440)
!15452 = !DILocalVariable(name: "shift", scope: !15440, file: !1066, line: 273, type: !19)
!15453 = !DILocation(line: 273, column: 7, scope: !15440)
!15454 = !DILocalVariable(name: "i", scope: !15440, file: !1066, line: 274, type: !26)
!15455 = !DILocation(line: 274, column: 16, scope: !15440)
!15456 = !DILocation(line: 275, column: 10, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15440, file: !1066, line: 275, column: 3)
!15458 = !DILocation(line: 275, column: 8, scope: !15457)
!15459 = !DILocation(line: 275, column: 15, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15457, file: !1066, line: 275, column: 3)
!15461 = !DILocation(line: 275, column: 19, scope: !15460)
!15462 = !DILocation(line: 275, column: 17, scope: !15460)
!15463 = !DILocation(line: 275, column: 3, scope: !15457)
!15464 = !DILocation(line: 277, column: 11, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15460, file: !1066, line: 276, column: 3)
!15466 = !DILocation(line: 277, column: 33, scope: !15465)
!15467 = !DILocation(line: 277, column: 42, scope: !15465)
!15468 = !DILocation(line: 277, column: 48, scope: !15465)
!15469 = !DILocation(line: 277, column: 45, scope: !15465)
!15470 = !DILocation(line: 277, column: 15, scope: !15465)
!15471 = !DILocation(line: 277, column: 9, scope: !15465)
!15472 = !DILocation(line: 278, column: 11, scope: !15465)
!15473 = !DILocation(line: 279, column: 9, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15465, file: !1066, line: 279, column: 9)
!15475 = !DILocation(line: 279, column: 15, scope: !15474)
!15476 = !DILocation(line: 279, column: 9, scope: !15465)
!15477 = !DILocation(line: 281, column: 13, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15474, file: !1066, line: 280, column: 5)
!15479 = !DILocation(line: 282, column: 5, scope: !15478)
!15480 = !DILocation(line: 283, column: 3, scope: !15465)
!15481 = !DILocation(line: 275, column: 34, scope: !15460)
!15482 = !DILocation(line: 275, column: 3, scope: !15460)
!15483 = distinct !{!15483, !15463, !15484}
!15484 = !DILocation(line: 283, column: 3, scope: !15457)
!15485 = !DILocation(line: 284, column: 10, scope: !15440)
!15486 = !DILocation(line: 284, column: 16, scope: !15440)
!15487 = !DILocation(line: 284, column: 14, scope: !15440)
!15488 = !DILocation(line: 284, column: 3, scope: !15440)
!15489 = distinct !DISubprogram(name: "hash_pid", scope: !1066, file: !1066, line: 288, type: !15441, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!15490 = !DILocalVariable(name: "buckets", arg: 1, scope: !15489, file: !1066, line: 288, type: !26)
!15491 = !DILocation(line: 288, column: 23, scope: !15489)
!15492 = !DILocalVariable(name: "p_key", arg: 2, scope: !15489, file: !1066, line: 288, type: !80)
!15493 = !DILocation(line: 288, column: 38, scope: !15489)
!15494 = !DILocalVariable(name: "p_pid", scope: !15489, file: !1066, line: 290, type: !746)
!15495 = !DILocation(line: 290, column: 17, scope: !15489)
!15496 = !DILocation(line: 290, column: 40, scope: !15489)
!15497 = !DILocation(line: 290, column: 25, scope: !15489)
!15498 = !DILocation(line: 291, column: 12, scope: !15489)
!15499 = !DILocation(line: 291, column: 11, scope: !15489)
!15500 = !DILocation(line: 291, column: 21, scope: !15489)
!15501 = !DILocation(line: 291, column: 19, scope: !15489)
!15502 = !DILocation(line: 291, column: 3, scope: !15489)
!15503 = !DILocalVariable(name: "duff", arg: 1, scope: !1071, file: !1066, line: 238, type: !80)
!15504 = !DILocation(line: 238, column: 22, scope: !1071)
!15505 = !DILocalVariable(name: "reap_one", scope: !1071, file: !1066, line: 240, type: !26)
!15506 = !DILocation(line: 240, column: 16, scope: !1071)
!15507 = !DILocation(line: 241, column: 10, scope: !1071)
!15508 = !DILocation(line: 242, column: 3, scope: !1071)
!15509 = !DILocation(line: 242, column: 10, scope: !1071)
!15510 = !DILocation(line: 244, column: 30, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !1071, file: !1066, line: 243, column: 3)
!15512 = !DILocation(line: 244, column: 14, scope: !15511)
!15513 = !DILocation(line: 245, column: 9, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15511, file: !1066, line: 245, column: 9)
!15515 = !DILocation(line: 245, column: 9, scope: !15511)
!15516 = !DILocalVariable(name: "p_ip", scope: !15517, file: !1066, line: 247, type: !1069)
!15517 = distinct !DILexicalBlock(scope: !15514, file: !1066, line: 246, column: 5)
!15518 = !DILocation(line: 247, column: 34, scope: !15517)
!15519 = !DILocation(line: 249, column: 7, scope: !15517)
!15520 = !DILocation(line: 252, column: 27, scope: !15517)
!15521 = !DILocation(line: 252, column: 44, scope: !15517)
!15522 = !DILocation(line: 252, column: 9, scope: !15517)
!15523 = !DILocation(line: 251, column: 14, scope: !15517)
!15524 = !DILocation(line: 251, column: 12, scope: !15517)
!15525 = !DILocation(line: 253, column: 21, scope: !15517)
!15526 = !DILocation(line: 253, column: 7, scope: !15517)
!15527 = !DILocation(line: 254, column: 23, scope: !15517)
!15528 = !DILocation(line: 254, column: 40, scope: !15517)
!15529 = !DILocation(line: 254, column: 7, scope: !15517)
!15530 = !DILocation(line: 255, column: 5, scope: !15517)
!15531 = distinct !{!15531, !15508, !15532}
!15532 = !DILocation(line: 256, column: 3, scope: !1071)
!15533 = !DILocation(line: 257, column: 1, scope: !1071)
!15534 = distinct !DISubprogram(name: "handle_sighup", scope: !1066, file: !1066, line: 260, type: !1072, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!15535 = !DILocalVariable(name: "duff", arg: 1, scope: !15534, file: !1066, line: 260, type: !80)
!15536 = !DILocation(line: 260, column: 21, scope: !15534)
!15537 = !DILocation(line: 262, column: 10, scope: !15534)
!15538 = !DILocation(line: 264, column: 3, scope: !15534)
!15539 = !DILocation(line: 265, column: 3, scope: !15534)
!15540 = !DILocation(line: 266, column: 1, scope: !15534)
!15541 = distinct !DISubprogram(name: "handle_ip_count", scope: !1066, file: !1066, line: 295, type: !15542, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!15542 = !DISubroutineType(types: !15543)
!15543 = !{!26, !80}
!15544 = !DILocalVariable(name: "p_ipaddr", arg: 1, scope: !15541, file: !1066, line: 295, type: !80)
!15545 = !DILocation(line: 295, column: 23, scope: !15541)
!15546 = !DILocalVariable(name: "p_count", scope: !15541, file: !1066, line: 297, type: !746)
!15547 = !DILocation(line: 297, column: 17, scope: !15541)
!15548 = !DILocation(line: 298, column: 38, scope: !15541)
!15549 = !DILocation(line: 298, column: 57, scope: !15541)
!15550 = !DILocation(line: 298, column: 20, scope: !15541)
!15551 = !DILocation(line: 298, column: 5, scope: !15541)
!15552 = !DILocalVariable(name: "count", scope: !15541, file: !1066, line: 299, type: !26)
!15553 = !DILocation(line: 299, column: 16, scope: !15541)
!15554 = !DILocation(line: 300, column: 8, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15541, file: !1066, line: 300, column: 7)
!15556 = !DILocation(line: 300, column: 7, scope: !15541)
!15557 = !DILocation(line: 302, column: 11, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15555, file: !1066, line: 301, column: 3)
!15559 = !DILocation(line: 303, column: 20, scope: !15558)
!15560 = !DILocation(line: 303, column: 39, scope: !15558)
!15561 = !DILocation(line: 303, column: 49, scope: !15558)
!15562 = !DILocation(line: 303, column: 5, scope: !15558)
!15563 = !DILocation(line: 304, column: 3, scope: !15558)
!15564 = !DILocation(line: 307, column: 14, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15555, file: !1066, line: 306, column: 3)
!15566 = !DILocation(line: 307, column: 13, scope: !15565)
!15567 = !DILocation(line: 307, column: 11, scope: !15565)
!15568 = !DILocation(line: 308, column: 10, scope: !15565)
!15569 = !DILocation(line: 309, column: 16, scope: !15565)
!15570 = !DILocation(line: 309, column: 6, scope: !15565)
!15571 = !DILocation(line: 309, column: 14, scope: !15565)
!15572 = !DILocation(line: 311, column: 10, scope: !15541)
!15573 = !DILocation(line: 311, column: 3, scope: !15541)
!15574 = distinct !DISubprogram(name: "drop_ip_count", scope: !1066, file: !1066, line: 215, type: !1072, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!15575 = !DILocalVariable(name: "p_raw_addr", arg: 1, scope: !15574, file: !1066, line: 215, type: !80)
!15576 = !DILocation(line: 215, column: 21, scope: !15574)
!15577 = !DILocalVariable(name: "count", scope: !15574, file: !1066, line: 217, type: !26)
!15578 = !DILocation(line: 217, column: 16, scope: !15574)
!15579 = !DILocalVariable(name: "p_count", scope: !15574, file: !1066, line: 218, type: !746)
!15580 = !DILocation(line: 218, column: 17, scope: !15574)
!15581 = !DILocation(line: 219, column: 38, scope: !15574)
!15582 = !DILocation(line: 219, column: 57, scope: !15574)
!15583 = !DILocation(line: 219, column: 20, scope: !15574)
!15584 = !DILocation(line: 219, column: 5, scope: !15574)
!15585 = !DILocation(line: 220, column: 8, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15574, file: !1066, line: 220, column: 7)
!15587 = !DILocation(line: 220, column: 7, scope: !15574)
!15588 = !DILocation(line: 222, column: 5, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15586, file: !1066, line: 221, column: 3)
!15590 = !DILocation(line: 223, column: 3, scope: !15589)
!15591 = !DILocation(line: 224, column: 12, scope: !15574)
!15592 = !DILocation(line: 224, column: 11, scope: !15574)
!15593 = !DILocation(line: 224, column: 9, scope: !15574)
!15594 = !DILocation(line: 225, column: 8, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15574, file: !1066, line: 225, column: 7)
!15596 = !DILocation(line: 225, column: 7, scope: !15574)
!15597 = !DILocation(line: 227, column: 5, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15595, file: !1066, line: 226, column: 3)
!15599 = !DILocation(line: 228, column: 3, scope: !15598)
!15600 = !DILocation(line: 229, column: 8, scope: !15574)
!15601 = !DILocation(line: 230, column: 14, scope: !15574)
!15602 = !DILocation(line: 230, column: 4, scope: !15574)
!15603 = !DILocation(line: 230, column: 12, scope: !15574)
!15604 = !DILocation(line: 231, column: 8, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15574, file: !1066, line: 231, column: 7)
!15606 = !DILocation(line: 231, column: 7, scope: !15574)
!15607 = !DILocation(line: 233, column: 21, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15605, file: !1066, line: 232, column: 3)
!15609 = !DILocation(line: 233, column: 40, scope: !15608)
!15610 = !DILocation(line: 233, column: 5, scope: !15608)
!15611 = !DILocation(line: 234, column: 3, scope: !15608)
!15612 = !DILocation(line: 235, column: 1, scope: !15574)
!15613 = distinct !DISubprogram(name: "prepare_child", scope: !1066, file: !1066, line: 202, type: !1406, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !128)
!15614 = !DILocalVariable(name: "new_client_sock", arg: 1, scope: !15613, file: !1066, line: 202, type: !19)
!15615 = !DILocation(line: 202, column: 19, scope: !15613)
!15616 = !DILocation(line: 205, column: 22, scope: !15613)
!15617 = !DILocation(line: 205, column: 3, scope: !15613)
!15618 = !DILocation(line: 206, column: 22, scope: !15613)
!15619 = !DILocation(line: 206, column: 3, scope: !15613)
!15620 = !DILocation(line: 207, column: 22, scope: !15613)
!15621 = !DILocation(line: 207, column: 3, scope: !15613)
!15622 = !DILocation(line: 208, column: 7, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15613, file: !1066, line: 208, column: 7)
!15624 = !DILocation(line: 208, column: 23, scope: !15623)
!15625 = !DILocation(line: 208, column: 7, scope: !15613)
!15626 = !DILocation(line: 210, column: 23, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15623, file: !1066, line: 209, column: 3)
!15628 = !DILocation(line: 210, column: 5, scope: !15627)
!15629 = !DILocation(line: 211, column: 3, scope: !15627)
!15630 = !DILocation(line: 212, column: 1, scope: !15613)
!15631 = distinct !DISubprogram(name: "hash_alloc", scope: !1933, file: !1933, line: 36, type: !15632, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1932, retainedNodes: !128)
!15632 = !DISubroutineType(types: !15633)
!15633 = !{!15634, !26, !26, !26, !15641}
!15634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15635, size: 64)
!15635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash", file: !1933, line: 22, size: 256, elements: !15636)
!15636 = !{!15637, !15638, !15639, !15640, !15643}
!15637 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !15635, file: !1933, line: 24, baseType: !26, size: 32)
!15638 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !15635, file: !1933, line: 25, baseType: !26, size: 32, offset: 32)
!15639 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !15635, file: !1933, line: 26, baseType: !26, size: 32, offset: 64)
!15640 = !DIDerivedType(tag: DW_TAG_member, name: "hash_func", scope: !15635, file: !1933, line: 27, baseType: !15641, size: 64, offset: 128)
!15641 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc_t", file: !1084, line: 6, baseType: !15642)
!15642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15441, size: 64)
!15643 = !DIDerivedType(tag: DW_TAG_member, name: "p_nodes", scope: !15635, file: !1933, line: 28, baseType: !15644, size: 64, offset: 192)
!15644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15645, size: 64)
!15645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15646, size: 64)
!15646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_node", file: !1933, line: 14, size: 256, elements: !15647)
!15647 = !{!15648, !15649, !15650, !15651}
!15648 = !DIDerivedType(tag: DW_TAG_member, name: "p_key", scope: !15646, file: !1933, line: 16, baseType: !80, size: 64)
!15649 = !DIDerivedType(tag: DW_TAG_member, name: "p_value", scope: !15646, file: !1933, line: 17, baseType: !80, size: 64, offset: 64)
!15650 = !DIDerivedType(tag: DW_TAG_member, name: "p_prev", scope: !15646, file: !1933, line: 18, baseType: !15645, size: 64, offset: 128)
!15651 = !DIDerivedType(tag: DW_TAG_member, name: "p_next", scope: !15646, file: !1933, line: 19, baseType: !15645, size: 64, offset: 192)
!15652 = !DILocalVariable(name: "buckets", arg: 1, scope: !15631, file: !1933, line: 36, type: !26)
!15653 = !DILocation(line: 36, column: 25, scope: !15631)
!15654 = !DILocalVariable(name: "key_size", arg: 2, scope: !15631, file: !1933, line: 36, type: !26)
!15655 = !DILocation(line: 36, column: 47, scope: !15631)
!15656 = !DILocalVariable(name: "value_size", arg: 3, scope: !15631, file: !1933, line: 37, type: !26)
!15657 = !DILocation(line: 37, column: 25, scope: !15631)
!15658 = !DILocalVariable(name: "hash_func", arg: 4, scope: !15631, file: !1933, line: 37, type: !15641)
!15659 = !DILocation(line: 37, column: 48, scope: !15631)
!15660 = !DILocalVariable(name: "size", scope: !15631, file: !1933, line: 39, type: !26)
!15661 = !DILocation(line: 39, column: 16, scope: !15631)
!15662 = !DILocalVariable(name: "p_hash", scope: !15631, file: !1933, line: 40, type: !15634)
!15663 = !DILocation(line: 40, column: 16, scope: !15631)
!15664 = !DILocation(line: 40, column: 25, scope: !15631)
!15665 = !DILocation(line: 41, column: 21, scope: !15631)
!15666 = !DILocation(line: 41, column: 3, scope: !15631)
!15667 = !DILocation(line: 41, column: 11, scope: !15631)
!15668 = !DILocation(line: 41, column: 19, scope: !15631)
!15669 = !DILocation(line: 42, column: 22, scope: !15631)
!15670 = !DILocation(line: 42, column: 3, scope: !15631)
!15671 = !DILocation(line: 42, column: 11, scope: !15631)
!15672 = !DILocation(line: 42, column: 20, scope: !15631)
!15673 = !DILocation(line: 43, column: 24, scope: !15631)
!15674 = !DILocation(line: 43, column: 3, scope: !15631)
!15675 = !DILocation(line: 43, column: 11, scope: !15631)
!15676 = !DILocation(line: 43, column: 22, scope: !15631)
!15677 = !DILocation(line: 44, column: 23, scope: !15631)
!15678 = !DILocation(line: 44, column: 3, scope: !15631)
!15679 = !DILocation(line: 44, column: 11, scope: !15631)
!15680 = !DILocation(line: 44, column: 21, scope: !15631)
!15681 = !DILocation(line: 45, column: 53, scope: !15631)
!15682 = !DILocation(line: 45, column: 51, scope: !15631)
!15683 = !DILocation(line: 45, column: 8, scope: !15631)
!15684 = !DILocation(line: 46, column: 40, scope: !15631)
!15685 = !DILocation(line: 46, column: 21, scope: !15631)
!15686 = !DILocation(line: 46, column: 3, scope: !15631)
!15687 = !DILocation(line: 46, column: 11, scope: !15631)
!15688 = !DILocation(line: 46, column: 19, scope: !15631)
!15689 = !DILocation(line: 47, column: 22, scope: !15631)
!15690 = !DILocation(line: 47, column: 30, scope: !15631)
!15691 = !DILocation(line: 47, column: 39, scope: !15631)
!15692 = !DILocation(line: 47, column: 3, scope: !15631)
!15693 = !DILocation(line: 48, column: 10, scope: !15631)
!15694 = !DILocation(line: 48, column: 3, scope: !15631)
!15695 = distinct !DISubprogram(name: "hash_lookup_entry", scope: !1933, file: !1933, line: 52, type: !15696, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1932, retainedNodes: !128)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{!80, !15634, !80}
!15698 = !DILocalVariable(name: "p_hash", arg: 1, scope: !15695, file: !1933, line: 52, type: !15634)
!15699 = !DILocation(line: 52, column: 32, scope: !15695)
!15700 = !DILocalVariable(name: "p_key", arg: 2, scope: !15695, file: !1933, line: 52, type: !80)
!15701 = !DILocation(line: 52, column: 46, scope: !15695)
!15702 = !DILocalVariable(name: "p_node", scope: !15695, file: !1933, line: 54, type: !15645)
!15703 = !DILocation(line: 54, column: 21, scope: !15695)
!15704 = !DILocation(line: 54, column: 51, scope: !15695)
!15705 = !DILocation(line: 54, column: 59, scope: !15695)
!15706 = !DILocation(line: 54, column: 30, scope: !15695)
!15707 = !DILocation(line: 55, column: 8, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15695, file: !1933, line: 55, column: 7)
!15709 = !DILocation(line: 55, column: 7, scope: !15695)
!15710 = !DILocation(line: 57, column: 12, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15708, file: !1933, line: 56, column: 3)
!15712 = !DILocation(line: 57, column: 5, scope: !15711)
!15713 = !DILocation(line: 59, column: 10, scope: !15695)
!15714 = !DILocation(line: 59, column: 18, scope: !15695)
!15715 = !DILocation(line: 59, column: 3, scope: !15695)
!15716 = !DILocation(line: 60, column: 1, scope: !15695)
!15717 = distinct !DISubprogram(name: "hash_get_node_by_key", scope: !1933, file: !1933, line: 132, type: !15718, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1932, retainedNodes: !128)
!15718 = !DISubroutineType(types: !15719)
!15719 = !{!15645, !15634, !80}
!15720 = !DILocalVariable(name: "p_hash", arg: 1, scope: !15717, file: !1933, line: 132, type: !15634)
!15721 = !DILocation(line: 132, column: 35, scope: !15717)
!15722 = !DILocalVariable(name: "p_key", arg: 2, scope: !15717, file: !1933, line: 132, type: !80)
!15723 = !DILocation(line: 132, column: 49, scope: !15717)
!15724 = !DILocalVariable(name: "p_bucket", scope: !15717, file: !1933, line: 134, type: !15644)
!15725 = !DILocation(line: 134, column: 22, scope: !15717)
!15726 = !DILocation(line: 134, column: 49, scope: !15717)
!15727 = !DILocation(line: 134, column: 57, scope: !15717)
!15728 = !DILocation(line: 134, column: 33, scope: !15717)
!15729 = !DILocalVariable(name: "p_node", scope: !15717, file: !1933, line: 135, type: !15645)
!15730 = !DILocation(line: 135, column: 21, scope: !15717)
!15731 = !DILocation(line: 135, column: 31, scope: !15717)
!15732 = !DILocation(line: 135, column: 30, scope: !15717)
!15733 = !DILocation(line: 136, column: 8, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15717, file: !1933, line: 136, column: 7)
!15735 = !DILocation(line: 136, column: 7, scope: !15717)
!15736 = !DILocation(line: 138, column: 12, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15734, file: !1933, line: 137, column: 3)
!15738 = !DILocation(line: 138, column: 5, scope: !15737)
!15739 = !DILocation(line: 140, column: 3, scope: !15717)
!15740 = !DILocation(line: 140, column: 10, scope: !15717)
!15741 = !DILocation(line: 140, column: 17, scope: !15717)
!15742 = !DILocation(line: 140, column: 22, scope: !15717)
!15743 = !DILocation(line: 141, column: 29, scope: !15717)
!15744 = !DILocation(line: 141, column: 36, scope: !15717)
!15745 = !DILocation(line: 141, column: 44, scope: !15717)
!15746 = !DILocation(line: 141, column: 51, scope: !15717)
!15747 = !DILocation(line: 141, column: 59, scope: !15717)
!15748 = !DILocation(line: 141, column: 10, scope: !15717)
!15749 = !DILocation(line: 141, column: 69, scope: !15717)
!15750 = !DILocation(line: 143, column: 14, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15717, file: !1933, line: 142, column: 3)
!15752 = !DILocation(line: 143, column: 22, scope: !15751)
!15753 = !DILocation(line: 143, column: 12, scope: !15751)
!15754 = distinct !{!15754, !15739, !15755}
!15755 = !DILocation(line: 144, column: 3, scope: !15717)
!15756 = !DILocation(line: 145, column: 10, scope: !15717)
!15757 = !DILocation(line: 145, column: 3, scope: !15717)
!15758 = !DILocation(line: 146, column: 1, scope: !15717)
!15759 = distinct !DISubprogram(name: "hash_get_bucket", scope: !1933, file: !1933, line: 121, type: !15760, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1932, retainedNodes: !128)
!15760 = !DISubroutineType(types: !15761)
!15761 = !{!15644, !15634, !80}
!15762 = !DILocalVariable(name: "p_hash", arg: 1, scope: !15759, file: !1933, line: 121, type: !15634)
!15763 = !DILocation(line: 121, column: 30, scope: !15759)
!15764 = !DILocalVariable(name: "p_key", arg: 2, scope: !15759, file: !1933, line: 121, type: !80)
!15765 = !DILocation(line: 121, column: 44, scope: !15759)
!15766 = !DILocalVariable(name: "bucket", scope: !15759, file: !1933, line: 123, type: !26)
!15767 = !DILocation(line: 123, column: 16, scope: !15759)
!15768 = !DILocation(line: 123, column: 27, scope: !15759)
!15769 = !DILocation(line: 123, column: 35, scope: !15759)
!15770 = !DILocation(line: 123, column: 46, scope: !15759)
!15771 = !DILocation(line: 123, column: 54, scope: !15759)
!15772 = !DILocation(line: 123, column: 63, scope: !15759)
!15773 = !DILocation(line: 123, column: 25, scope: !15759)
!15774 = !DILocation(line: 124, column: 7, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15759, file: !1933, line: 124, column: 7)
!15776 = !DILocation(line: 124, column: 17, scope: !15775)
!15777 = !DILocation(line: 124, column: 25, scope: !15775)
!15778 = !DILocation(line: 124, column: 14, scope: !15775)
!15779 = !DILocation(line: 124, column: 7, scope: !15759)
!15780 = !DILocation(line: 126, column: 5, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15775, file: !1933, line: 125, column: 3)
!15782 = !DILocation(line: 127, column: 3, scope: !15781)
!15783 = !DILocation(line: 128, column: 12, scope: !15759)
!15784 = !DILocation(line: 128, column: 20, scope: !15759)
!15785 = !DILocation(line: 128, column: 28, scope: !15759)
!15786 = !DILocation(line: 128, column: 3, scope: !15759)
!15787 = distinct !DISubprogram(name: "hash_add_entry", scope: !1933, file: !1933, line: 63, type: !15788, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1932, retainedNodes: !128)
!15788 = !DISubroutineType(types: !15789)
!15789 = !{null, !15634, !80, !80}
!15790 = !DILocalVariable(name: "p_hash", arg: 1, scope: !15787, file: !1933, line: 63, type: !15634)
!15791 = !DILocation(line: 63, column: 29, scope: !15787)
!15792 = !DILocalVariable(name: "p_key", arg: 2, scope: !15787, file: !1933, line: 63, type: !80)
!15793 = !DILocation(line: 63, column: 43, scope: !15787)
!15794 = !DILocalVariable(name: "p_value", arg: 3, scope: !15787, file: !1933, line: 63, type: !80)
!15795 = !DILocation(line: 63, column: 56, scope: !15787)
!15796 = !DILocalVariable(name: "p_bucket", scope: !15787, file: !1933, line: 65, type: !15644)
!15797 = !DILocation(line: 65, column: 22, scope: !15787)
!15798 = !DILocalVariable(name: "p_new_node", scope: !15787, file: !1933, line: 66, type: !15645)
!15799 = !DILocation(line: 66, column: 21, scope: !15787)
!15800 = !DILocation(line: 67, column: 25, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15787, file: !1933, line: 67, column: 7)
!15802 = !DILocation(line: 67, column: 33, scope: !15801)
!15803 = !DILocation(line: 67, column: 7, scope: !15801)
!15804 = !DILocation(line: 67, column: 7, scope: !15787)
!15805 = !DILocation(line: 69, column: 5, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15801, file: !1933, line: 68, column: 3)
!15807 = !DILocation(line: 70, column: 3, scope: !15806)
!15808 = !DILocation(line: 71, column: 30, scope: !15787)
!15809 = !DILocation(line: 71, column: 38, scope: !15787)
!15810 = !DILocation(line: 71, column: 14, scope: !15787)
!15811 = !DILocation(line: 71, column: 12, scope: !15787)
!15812 = !DILocation(line: 72, column: 16, scope: !15787)
!15813 = !DILocation(line: 72, column: 14, scope: !15787)
!15814 = !DILocation(line: 73, column: 3, scope: !15787)
!15815 = !DILocation(line: 73, column: 15, scope: !15787)
!15816 = !DILocation(line: 73, column: 22, scope: !15787)
!15817 = !DILocation(line: 74, column: 3, scope: !15787)
!15818 = !DILocation(line: 74, column: 15, scope: !15787)
!15819 = !DILocation(line: 74, column: 22, scope: !15787)
!15820 = !DILocation(line: 75, column: 42, scope: !15787)
!15821 = !DILocation(line: 75, column: 50, scope: !15787)
!15822 = !DILocation(line: 75, column: 23, scope: !15787)
!15823 = !DILocation(line: 75, column: 3, scope: !15787)
!15824 = !DILocation(line: 75, column: 15, scope: !15787)
!15825 = !DILocation(line: 75, column: 21, scope: !15787)
!15826 = !DILocation(line: 76, column: 22, scope: !15787)
!15827 = !DILocation(line: 76, column: 34, scope: !15787)
!15828 = !DILocation(line: 76, column: 41, scope: !15787)
!15829 = !DILocation(line: 76, column: 48, scope: !15787)
!15830 = !DILocation(line: 76, column: 56, scope: !15787)
!15831 = !DILocation(line: 76, column: 3, scope: !15787)
!15832 = !DILocation(line: 77, column: 44, scope: !15787)
!15833 = !DILocation(line: 77, column: 52, scope: !15787)
!15834 = !DILocation(line: 77, column: 25, scope: !15787)
!15835 = !DILocation(line: 77, column: 3, scope: !15787)
!15836 = !DILocation(line: 77, column: 15, scope: !15787)
!15837 = !DILocation(line: 77, column: 23, scope: !15787)
!15838 = !DILocation(line: 78, column: 22, scope: !15787)
!15839 = !DILocation(line: 78, column: 34, scope: !15787)
!15840 = !DILocation(line: 78, column: 43, scope: !15787)
!15841 = !DILocation(line: 78, column: 52, scope: !15787)
!15842 = !DILocation(line: 78, column: 60, scope: !15787)
!15843 = !DILocation(line: 78, column: 3, scope: !15787)
!15844 = !DILocation(line: 80, column: 9, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15787, file: !1933, line: 80, column: 7)
!15846 = !DILocation(line: 80, column: 8, scope: !15845)
!15847 = !DILocation(line: 80, column: 7, scope: !15787)
!15848 = !DILocation(line: 82, column: 17, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15845, file: !1933, line: 81, column: 3)
!15850 = !DILocation(line: 82, column: 6, scope: !15849)
!15851 = !DILocation(line: 82, column: 15, scope: !15849)
!15852 = !DILocation(line: 83, column: 3, scope: !15849)
!15853 = !DILocation(line: 86, column: 27, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15845, file: !1933, line: 85, column: 3)
!15855 = !DILocation(line: 86, column: 26, scope: !15854)
!15856 = !DILocation(line: 86, column: 5, scope: !15854)
!15857 = !DILocation(line: 86, column: 17, scope: !15854)
!15858 = !DILocation(line: 86, column: 24, scope: !15854)
!15859 = !DILocation(line: 87, column: 27, scope: !15854)
!15860 = !DILocation(line: 87, column: 7, scope: !15854)
!15861 = !DILocation(line: 87, column: 6, scope: !15854)
!15862 = !DILocation(line: 87, column: 18, scope: !15854)
!15863 = !DILocation(line: 87, column: 25, scope: !15854)
!15864 = !DILocation(line: 88, column: 17, scope: !15854)
!15865 = !DILocation(line: 88, column: 6, scope: !15854)
!15866 = !DILocation(line: 88, column: 15, scope: !15854)
!15867 = !DILocation(line: 90, column: 1, scope: !15787)
!15868 = distinct !DISubprogram(name: "hash_free_entry", scope: !1933, file: !1933, line: 93, type: !15869, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1932, retainedNodes: !128)
!15869 = !DISubroutineType(types: !15870)
!15870 = !{null, !15634, !80}
!15871 = !DILocalVariable(name: "p_hash", arg: 1, scope: !15868, file: !1933, line: 93, type: !15634)
!15872 = !DILocation(line: 93, column: 30, scope: !15868)
!15873 = !DILocalVariable(name: "p_key", arg: 2, scope: !15868, file: !1933, line: 93, type: !80)
!15874 = !DILocation(line: 93, column: 44, scope: !15868)
!15875 = !DILocalVariable(name: "p_node", scope: !15868, file: !1933, line: 95, type: !15645)
!15876 = !DILocation(line: 95, column: 21, scope: !15868)
!15877 = !DILocation(line: 95, column: 51, scope: !15868)
!15878 = !DILocation(line: 95, column: 59, scope: !15868)
!15879 = !DILocation(line: 95, column: 30, scope: !15868)
!15880 = !DILocation(line: 96, column: 8, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15868, file: !1933, line: 96, column: 7)
!15882 = !DILocation(line: 96, column: 7, scope: !15868)
!15883 = !DILocation(line: 98, column: 5, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15881, file: !1933, line: 97, column: 3)
!15885 = !DILocation(line: 99, column: 3, scope: !15884)
!15886 = !DILocation(line: 100, column: 20, scope: !15868)
!15887 = !DILocation(line: 100, column: 28, scope: !15868)
!15888 = !DILocation(line: 100, column: 3, scope: !15868)
!15889 = !DILocation(line: 101, column: 20, scope: !15868)
!15890 = !DILocation(line: 101, column: 28, scope: !15868)
!15891 = !DILocation(line: 101, column: 3, scope: !15868)
!15892 = !DILocation(line: 103, column: 7, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15868, file: !1933, line: 103, column: 7)
!15894 = !DILocation(line: 103, column: 15, scope: !15893)
!15895 = !DILocation(line: 103, column: 7, scope: !15868)
!15896 = !DILocation(line: 105, column: 30, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15893, file: !1933, line: 104, column: 3)
!15898 = !DILocation(line: 105, column: 38, scope: !15897)
!15899 = !DILocation(line: 105, column: 5, scope: !15897)
!15900 = !DILocation(line: 105, column: 13, scope: !15897)
!15901 = !DILocation(line: 105, column: 21, scope: !15897)
!15902 = !DILocation(line: 105, column: 28, scope: !15897)
!15903 = !DILocation(line: 106, column: 3, scope: !15897)
!15904 = !DILocalVariable(name: "p_bucket", scope: !15905, file: !1933, line: 109, type: !15644)
!15905 = distinct !DILexicalBlock(scope: !15893, file: !1933, line: 108, column: 3)
!15906 = !DILocation(line: 109, column: 24, scope: !15905)
!15907 = !DILocation(line: 109, column: 51, scope: !15905)
!15908 = !DILocation(line: 109, column: 59, scope: !15905)
!15909 = !DILocation(line: 109, column: 35, scope: !15905)
!15910 = !DILocation(line: 110, column: 17, scope: !15905)
!15911 = !DILocation(line: 110, column: 25, scope: !15905)
!15912 = !DILocation(line: 110, column: 6, scope: !15905)
!15913 = !DILocation(line: 110, column: 15, scope: !15905)
!15914 = !DILocation(line: 112, column: 7, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15868, file: !1933, line: 112, column: 7)
!15916 = !DILocation(line: 112, column: 15, scope: !15915)
!15917 = !DILocation(line: 112, column: 7, scope: !15868)
!15918 = !DILocation(line: 114, column: 30, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15915, file: !1933, line: 113, column: 3)
!15920 = !DILocation(line: 114, column: 38, scope: !15919)
!15921 = !DILocation(line: 114, column: 5, scope: !15919)
!15922 = !DILocation(line: 114, column: 13, scope: !15919)
!15923 = !DILocation(line: 114, column: 21, scope: !15919)
!15924 = !DILocation(line: 114, column: 28, scope: !15919)
!15925 = !DILocation(line: 115, column: 3, scope: !15919)
!15926 = !DILocation(line: 117, column: 20, scope: !15868)
!15927 = !DILocation(line: 117, column: 3, scope: !15868)
!15928 = !DILocation(line: 118, column: 1, scope: !15868)
!15929 = distinct !DISubprogram(name: "vsf_tcp_wrapper_ok", scope: !1935, file: !1935, line: 45, type: !7062, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1934, retainedNodes: !128)
!15930 = !DILocalVariable(name: "remote_fd", arg: 1, scope: !15929, file: !1935, line: 45, type: !19)
!15931 = !DILocation(line: 45, column: 24, scope: !15929)
!15932 = !DILocation(line: 47, column: 10, scope: !15929)
!15933 = !DILocation(line: 48, column: 3, scope: !15929)
!15934 = !DILocation(line: 49, column: 3, scope: !15929)
!15935 = !DILocalVariable(name: "p_str", arg: 1, scope: !1089, file: !1090, line: 23, type: !1093)
!15936 = !DILocation(line: 23, column: 44, scope: !1089)
!15937 = !DILocalVariable(name: "lhs_len", scope: !1089, file: !1090, line: 29, type: !26)
!15938 = !DILocation(line: 29, column: 16, scope: !1089)
!15939 = !DILocalVariable(name: "rhs_len", scope: !1089, file: !1090, line: 30, type: !26)
!15940 = !DILocation(line: 30, column: 16, scope: !1089)
!15941 = !DILocation(line: 31, column: 3, scope: !1089)
!15942 = !DILocation(line: 32, column: 3, scope: !1089)
!15943 = !DILocation(line: 33, column: 24, scope: !1089)
!15944 = !DILocation(line: 33, column: 3, scope: !1089)
!15945 = !DILocation(line: 34, column: 3, scope: !1089)
!15946 = !DILocation(line: 35, column: 8, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !1089, file: !1090, line: 35, column: 7)
!15948 = !DILocation(line: 35, column: 7, scope: !1089)
!15949 = !DILocation(line: 37, column: 5, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15947, file: !1090, line: 36, column: 3)
!15951 = !DILocation(line: 39, column: 8, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !1089, file: !1090, line: 39, column: 7)
!15953 = !DILocation(line: 39, column: 7, scope: !1089)
!15954 = !DILocation(line: 41, column: 5, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15952, file: !1090, line: 40, column: 3)
!15956 = !DILocation(line: 43, column: 13, scope: !1089)
!15957 = !DILocation(line: 43, column: 11, scope: !1089)
!15958 = !DILocation(line: 44, column: 13, scope: !1089)
!15959 = !DILocation(line: 44, column: 11, scope: !1089)
!15960 = !DILocation(line: 45, column: 7, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !1089, file: !1090, line: 45, column: 7)
!15962 = !DILocation(line: 45, column: 17, scope: !15961)
!15963 = !DILocation(line: 45, column: 15, scope: !15961)
!15964 = !DILocation(line: 45, column: 25, scope: !15961)
!15965 = !DILocation(line: 45, column: 7, scope: !1089)
!15966 = !DILocation(line: 47, column: 5, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15961, file: !1090, line: 46, column: 3)
!15968 = !DILocation(line: 49, column: 7, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !1089, file: !1090, line: 49, column: 7)
!15970 = !DILocation(line: 49, column: 15, scope: !15969)
!15971 = !DILocation(line: 49, column: 7, scope: !1089)
!15972 = !DILocalVariable(name: "add_nulls", scope: !15973, file: !1090, line: 51, type: !26)
!15973 = distinct !DILexicalBlock(scope: !15969, file: !1090, line: 50, column: 3)
!15974 = !DILocation(line: 51, column: 18, scope: !15973)
!15975 = !DILocation(line: 51, column: 36, scope: !15973)
!15976 = !DILocation(line: 51, column: 46, scope: !15973)
!15977 = !DILocation(line: 51, column: 44, scope: !15973)
!15978 = !DILocation(line: 51, column: 33, scope: !15973)
!15979 = !DILocation(line: 52, column: 5, scope: !15973)
!15980 = !DILocation(line: 52, column: 21, scope: !15973)
!15981 = !DILocation(line: 54, column: 7, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15973, file: !1090, line: 53, column: 5)
!15983 = distinct !{!15983, !15979, !15984}
!15984 = !DILocation(line: 55, column: 5, scope: !15973)
!15985 = !DILocation(line: 56, column: 5, scope: !15973)
!15986 = !DILocation(line: 57, column: 3, scope: !15973)
!15987 = !DILocation(line: 58, column: 33, scope: !1089)
!15988 = !DILocation(line: 58, column: 3, scope: !1089)
!15989 = !DILocation(line: 59, column: 1, scope: !1089)
!15990 = !DILocalVariable(name: "p_out_str", arg: 1, scope: !1125, file: !1090, line: 104, type: !1128)
!15991 = !DILocation(line: 104, column: 31, scope: !1125)
!15992 = !DILocalVariable(name: "p_in_str", arg: 2, scope: !1125, file: !1090, line: 104, type: !1093)
!15993 = !DILocation(line: 104, column: 62, scope: !1125)
!15994 = !DILocalVariable(name: "loc_ret", scope: !1125, file: !1090, line: 108, type: !15995)
!15995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_locate_result", file: !34, line: 68, size: 96, elements: !15996)
!15996 = !{!15997, !15998, !15999}
!15997 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !15995, file: !34, line: 70, baseType: !19, size: 32)
!15998 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !15995, file: !34, line: 71, baseType: !26, size: 32, offset: 32)
!15999 = !DIDerivedType(tag: DW_TAG_member, name: "char_found", scope: !15995, file: !34, line: 72, baseType: !17, size: 8, offset: 64)
!16000 = !DILocation(line: 108, column: 28, scope: !1125)
!16001 = !DILocation(line: 109, column: 24, scope: !1125)
!16002 = !DILocation(line: 109, column: 3, scope: !1125)
!16003 = !DILocation(line: 110, column: 3, scope: !1125)
!16004 = !DILocation(line: 110, column: 11, scope: !1125)
!16005 = !DILocation(line: 110, column: 10, scope: !1125)
!16006 = !DILocation(line: 112, column: 5, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !1125, file: !1090, line: 111, column: 3)
!16008 = !DILocation(line: 113, column: 9, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !16007, file: !1090, line: 113, column: 9)
!16010 = !DILocation(line: 113, column: 9, scope: !16007)
!16011 = !DILocation(line: 115, column: 7, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16009, file: !1090, line: 114, column: 5)
!16013 = !DILocation(line: 117, column: 15, scope: !16007)
!16014 = !DILocation(line: 118, column: 17, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16007, file: !1090, line: 118, column: 9)
!16016 = !DILocation(line: 118, column: 9, scope: !16015)
!16017 = !DILocation(line: 118, column: 9, scope: !16007)
!16018 = !DILocation(line: 120, column: 31, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16020, file: !1090, line: 120, column: 11)
!16020 = distinct !DILexicalBlock(scope: !16015, file: !1090, line: 119, column: 5)
!16021 = !DILocation(line: 120, column: 12, scope: !16019)
!16022 = !DILocation(line: 120, column: 11, scope: !16020)
!16023 = !DILocation(line: 122, column: 9, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16019, file: !1090, line: 121, column: 7)
!16025 = !DILocation(line: 124, column: 5, scope: !16020)
!16026 = !DILocation(line: 125, column: 30, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !16015, file: !1090, line: 125, column: 14)
!16028 = !DILocation(line: 125, column: 15, scope: !16027)
!16029 = !DILocation(line: 125, column: 14, scope: !16015)
!16030 = !DILocation(line: 127, column: 7, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16027, file: !1090, line: 126, column: 5)
!16032 = !DILocation(line: 129, column: 5, scope: !16007)
!16033 = distinct !{!16033, !16003, !16034}
!16034 = !DILocation(line: 130, column: 3, scope: !1125)
!16035 = !DILocation(line: 131, column: 3, scope: !1125)
!16036 = !DILocation(line: 132, column: 1, scope: !1125)
!16037 = distinct !DISubprogram(name: "ipv4_parse_dotquad", scope: !1090, file: !1090, line: 169, type: !1126, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1100, retainedNodes: !128)
!16038 = !DILocalVariable(name: "p_out_str", arg: 1, scope: !16037, file: !1090, line: 169, type: !1128)
!16039 = !DILocation(line: 169, column: 34, scope: !16037)
!16040 = !DILocalVariable(name: "p_in_str", arg: 2, scope: !16037, file: !1090, line: 169, type: !1093)
!16041 = !DILocation(line: 169, column: 65, scope: !16037)
!16042 = !DILocalVariable(name: "len", scope: !16037, file: !1090, line: 171, type: !26)
!16043 = !DILocation(line: 171, column: 16, scope: !16037)
!16044 = !DILocation(line: 171, column: 33, scope: !16037)
!16045 = !DILocation(line: 171, column: 22, scope: !16037)
!16046 = !DILocalVariable(name: "i", scope: !16037, file: !1090, line: 172, type: !26)
!16047 = !DILocation(line: 172, column: 16, scope: !16037)
!16048 = !DILocalVariable(name: "val", scope: !16037, file: !1090, line: 173, type: !26)
!16049 = !DILocation(line: 173, column: 16, scope: !16037)
!16050 = !DILocalVariable(name: "final_val", scope: !16037, file: !1090, line: 174, type: !26)
!16051 = !DILocation(line: 174, column: 16, scope: !16037)
!16052 = !DILocalVariable(name: "seen_char", scope: !16037, file: !1090, line: 175, type: !19)
!16053 = !DILocation(line: 175, column: 7, scope: !16037)
!16054 = !DILocalVariable(name: "dots", scope: !16037, file: !1090, line: 176, type: !19)
!16055 = !DILocation(line: 176, column: 7, scope: !16037)
!16056 = !DILocation(line: 177, column: 9, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16037, file: !1090, line: 177, column: 3)
!16058 = !DILocation(line: 177, column: 8, scope: !16057)
!16059 = !DILocation(line: 177, column: 13, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16057, file: !1090, line: 177, column: 3)
!16061 = !DILocation(line: 177, column: 15, scope: !16060)
!16062 = !DILocation(line: 177, column: 14, scope: !16060)
!16063 = !DILocation(line: 177, column: 3, scope: !16057)
!16064 = !DILocalVariable(name: "ch", scope: !16065, file: !1090, line: 179, type: !19)
!16065 = distinct !DILexicalBlock(scope: !16060, file: !1090, line: 178, column: 3)
!16066 = !DILocation(line: 179, column: 9, scope: !16065)
!16067 = !DILocation(line: 179, column: 30, scope: !16065)
!16068 = !DILocation(line: 179, column: 40, scope: !16065)
!16069 = !DILocation(line: 179, column: 14, scope: !16065)
!16070 = !DILocation(line: 180, column: 9, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16065, file: !1090, line: 180, column: 9)
!16072 = !DILocation(line: 180, column: 12, scope: !16071)
!16073 = !DILocation(line: 180, column: 9, scope: !16065)
!16074 = !DILocation(line: 182, column: 12, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16076, file: !1090, line: 182, column: 11)
!16076 = distinct !DILexicalBlock(scope: !16071, file: !1090, line: 181, column: 5)
!16077 = !DILocation(line: 182, column: 22, scope: !16075)
!16078 = !DILocation(line: 182, column: 25, scope: !16075)
!16079 = !DILocation(line: 182, column: 30, scope: !16075)
!16080 = !DILocation(line: 182, column: 11, scope: !16076)
!16081 = !DILocation(line: 184, column: 9, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16075, file: !1090, line: 183, column: 7)
!16083 = !DILocation(line: 186, column: 17, scope: !16076)
!16084 = !DILocation(line: 187, column: 11, scope: !16076)
!16085 = !DILocation(line: 188, column: 17, scope: !16076)
!16086 = !DILocation(line: 189, column: 20, scope: !16076)
!16087 = !DILocation(line: 189, column: 17, scope: !16076)
!16088 = !DILocation(line: 190, column: 11, scope: !16076)
!16089 = !DILocation(line: 191, column: 5, scope: !16076)
!16090 = !DILocation(line: 192, column: 14, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16071, file: !1090, line: 192, column: 14)
!16092 = !DILocation(line: 192, column: 17, scope: !16091)
!16093 = !DILocation(line: 192, column: 24, scope: !16091)
!16094 = !DILocation(line: 192, column: 27, scope: !16091)
!16095 = !DILocation(line: 192, column: 30, scope: !16091)
!16096 = !DILocation(line: 192, column: 14, scope: !16071)
!16097 = !DILocation(line: 194, column: 10, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16091, file: !1090, line: 193, column: 5)
!16099 = !DILocation(line: 195, column: 11, scope: !16098)
!16100 = !DILocation(line: 196, column: 14, scope: !16098)
!16101 = !DILocation(line: 196, column: 11, scope: !16098)
!16102 = !DILocation(line: 197, column: 11, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16098, file: !1090, line: 197, column: 11)
!16104 = !DILocation(line: 197, column: 15, scope: !16103)
!16105 = !DILocation(line: 197, column: 11, scope: !16098)
!16106 = !DILocation(line: 199, column: 9, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16103, file: !1090, line: 198, column: 7)
!16108 = !DILocation(line: 201, column: 17, scope: !16098)
!16109 = !DILocation(line: 202, column: 5, scope: !16098)
!16110 = !DILocation(line: 205, column: 7, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16091, file: !1090, line: 204, column: 5)
!16112 = !DILocation(line: 207, column: 3, scope: !16065)
!16113 = !DILocation(line: 177, column: 20, scope: !16060)
!16114 = !DILocation(line: 177, column: 3, scope: !16060)
!16115 = distinct !{!16115, !16063, !16116}
!16116 = !DILocation(line: 207, column: 3, scope: !16057)
!16117 = !DILocation(line: 208, column: 7, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16037, file: !1090, line: 208, column: 7)
!16119 = !DILocation(line: 208, column: 12, scope: !16118)
!16120 = !DILocation(line: 208, column: 17, scope: !16118)
!16121 = !DILocation(line: 208, column: 21, scope: !16118)
!16122 = !DILocation(line: 208, column: 7, scope: !16037)
!16123 = !DILocation(line: 210, column: 5, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16118, file: !1090, line: 209, column: 3)
!16125 = !DILocation(line: 212, column: 13, scope: !16037)
!16126 = !DILocation(line: 213, column: 16, scope: !16037)
!16127 = !DILocation(line: 213, column: 13, scope: !16037)
!16128 = !DILocation(line: 214, column: 19, scope: !16037)
!16129 = !DILocation(line: 214, column: 31, scope: !16037)
!16130 = !DILocation(line: 214, column: 41, scope: !16037)
!16131 = !DILocation(line: 214, column: 30, scope: !16037)
!16132 = !DILocation(line: 214, column: 3, scope: !16037)
!16133 = !DILocation(line: 215, column: 19, scope: !16037)
!16134 = !DILocation(line: 215, column: 32, scope: !16037)
!16135 = !DILocation(line: 215, column: 42, scope: !16037)
!16136 = !DILocation(line: 215, column: 49, scope: !16037)
!16137 = !DILocation(line: 215, column: 30, scope: !16037)
!16138 = !DILocation(line: 215, column: 3, scope: !16037)
!16139 = !DILocation(line: 216, column: 19, scope: !16037)
!16140 = !DILocation(line: 216, column: 32, scope: !16037)
!16141 = !DILocation(line: 216, column: 42, scope: !16037)
!16142 = !DILocation(line: 216, column: 48, scope: !16037)
!16143 = !DILocation(line: 216, column: 30, scope: !16037)
!16144 = !DILocation(line: 216, column: 3, scope: !16037)
!16145 = !DILocation(line: 217, column: 19, scope: !16037)
!16146 = !DILocation(line: 217, column: 31, scope: !16037)
!16147 = !DILocation(line: 217, column: 41, scope: !16037)
!16148 = !DILocation(line: 217, column: 30, scope: !16037)
!16149 = !DILocation(line: 217, column: 3, scope: !16037)
!16150 = !DILocation(line: 218, column: 3, scope: !16037)
!16151 = !DILocation(line: 219, column: 1, scope: !16037)
!16152 = distinct !DISubprogram(name: "ipv6_parse_hex", scope: !1090, file: !1090, line: 135, type: !1126, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1100, retainedNodes: !128)
!16153 = !DILocalVariable(name: "p_out_str", arg: 1, scope: !16152, file: !1090, line: 135, type: !1128)
!16154 = !DILocation(line: 135, column: 30, scope: !16152)
!16155 = !DILocalVariable(name: "p_in_str", arg: 2, scope: !16152, file: !1090, line: 135, type: !1093)
!16156 = !DILocation(line: 135, column: 61, scope: !16152)
!16157 = !DILocalVariable(name: "len", scope: !16152, file: !1090, line: 137, type: !26)
!16158 = !DILocation(line: 137, column: 16, scope: !16152)
!16159 = !DILocation(line: 137, column: 33, scope: !16152)
!16160 = !DILocation(line: 137, column: 22, scope: !16152)
!16161 = !DILocalVariable(name: "i", scope: !16152, file: !1090, line: 138, type: !26)
!16162 = !DILocation(line: 138, column: 16, scope: !16152)
!16163 = !DILocalVariable(name: "val", scope: !16152, file: !1090, line: 139, type: !26)
!16164 = !DILocation(line: 139, column: 16, scope: !16152)
!16165 = !DILocation(line: 140, column: 9, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16152, file: !1090, line: 140, column: 3)
!16167 = !DILocation(line: 140, column: 8, scope: !16166)
!16168 = !DILocation(line: 140, column: 13, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16166, file: !1090, line: 140, column: 3)
!16170 = !DILocation(line: 140, column: 15, scope: !16169)
!16171 = !DILocation(line: 140, column: 14, scope: !16169)
!16172 = !DILocation(line: 140, column: 3, scope: !16166)
!16173 = !DILocalVariable(name: "ch", scope: !16174, file: !1090, line: 142, type: !19)
!16174 = distinct !DILexicalBlock(scope: !16169, file: !1090, line: 141, column: 3)
!16175 = !DILocation(line: 142, column: 9, scope: !16174)
!16176 = !DILocation(line: 142, column: 50, scope: !16174)
!16177 = !DILocation(line: 142, column: 60, scope: !16174)
!16178 = !DILocation(line: 142, column: 34, scope: !16174)
!16179 = !DILocation(line: 142, column: 14, scope: !16174)
!16180 = !DILocation(line: 143, column: 9, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16174, file: !1090, line: 143, column: 9)
!16182 = !DILocation(line: 143, column: 12, scope: !16181)
!16183 = !DILocation(line: 143, column: 19, scope: !16181)
!16184 = !DILocation(line: 143, column: 22, scope: !16181)
!16185 = !DILocation(line: 143, column: 25, scope: !16181)
!16186 = !DILocation(line: 143, column: 9, scope: !16174)
!16187 = !DILocation(line: 145, column: 10, scope: !16188)
!16188 = distinct !DILexicalBlock(scope: !16181, file: !1090, line: 144, column: 5)
!16189 = !DILocation(line: 146, column: 5, scope: !16188)
!16190 = !DILocation(line: 147, column: 14, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16181, file: !1090, line: 147, column: 14)
!16192 = !DILocation(line: 147, column: 17, scope: !16191)
!16193 = !DILocation(line: 147, column: 24, scope: !16191)
!16194 = !DILocation(line: 147, column: 27, scope: !16191)
!16195 = !DILocation(line: 147, column: 30, scope: !16191)
!16196 = !DILocation(line: 147, column: 14, scope: !16181)
!16197 = !DILocation(line: 149, column: 10, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16191, file: !1090, line: 148, column: 5)
!16199 = !DILocation(line: 150, column: 10, scope: !16198)
!16200 = !DILocation(line: 151, column: 5, scope: !16198)
!16201 = !DILocation(line: 154, column: 7, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16191, file: !1090, line: 153, column: 5)
!16203 = !DILocation(line: 156, column: 9, scope: !16174)
!16204 = !DILocation(line: 157, column: 12, scope: !16174)
!16205 = !DILocation(line: 157, column: 9, scope: !16174)
!16206 = !DILocation(line: 158, column: 9, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16174, file: !1090, line: 158, column: 9)
!16208 = !DILocation(line: 158, column: 13, scope: !16207)
!16209 = !DILocation(line: 158, column: 9, scope: !16174)
!16210 = !DILocation(line: 160, column: 7, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16207, file: !1090, line: 159, column: 5)
!16212 = !DILocation(line: 162, column: 3, scope: !16174)
!16213 = !DILocation(line: 140, column: 20, scope: !16169)
!16214 = !DILocation(line: 140, column: 3, scope: !16169)
!16215 = distinct !{!16215, !16172, !16216}
!16216 = !DILocation(line: 162, column: 3, scope: !16166)
!16217 = !DILocation(line: 163, column: 19, scope: !16152)
!16218 = !DILocation(line: 163, column: 31, scope: !16152)
!16219 = !DILocation(line: 163, column: 35, scope: !16152)
!16220 = !DILocation(line: 163, column: 30, scope: !16152)
!16221 = !DILocation(line: 163, column: 3, scope: !16152)
!16222 = !DILocation(line: 164, column: 19, scope: !16152)
!16223 = !DILocation(line: 164, column: 31, scope: !16152)
!16224 = !DILocation(line: 164, column: 35, scope: !16152)
!16225 = !DILocation(line: 164, column: 30, scope: !16152)
!16226 = !DILocation(line: 164, column: 3, scope: !16152)
!16227 = !DILocation(line: 165, column: 3, scope: !16152)
!16228 = !DILocation(line: 166, column: 1, scope: !16152)
!16229 = !DILocalVariable(name: "p_str", arg: 1, scope: !1111, file: !1090, line: 62, type: !1093)
!16230 = !DILocation(line: 62, column: 44, scope: !1111)
!16231 = !DILocation(line: 65, column: 45, scope: !1111)
!16232 = !DILocation(line: 65, column: 10, scope: !1111)
!16233 = !DILocation(line: 65, column: 3, scope: !1111)
!16234 = !DILocalVariable(name: "p_str", arg: 1, scope: !1117, file: !1090, line: 70, type: !1093)
!16235 = !DILocation(line: 70, column: 23, scope: !1117)
!16236 = !DILocalVariable(name: "sep", arg: 2, scope: !1117, file: !1090, line: 70, type: !17)
!16237 = !DILocation(line: 70, column: 35, scope: !1117)
!16238 = !DILocalVariable(name: "p_items", arg: 3, scope: !1117, file: !1090, line: 70, type: !1120)
!16239 = !DILocation(line: 70, column: 55, scope: !1117)
!16240 = !DILocalVariable(name: "items", arg: 4, scope: !1117, file: !1090, line: 71, type: !26)
!16241 = !DILocation(line: 71, column: 16, scope: !1117)
!16242 = !DILocalVariable(name: "i", scope: !1117, file: !1090, line: 74, type: !26)
!16243 = !DILocation(line: 74, column: 16, scope: !1117)
!16244 = !DILocation(line: 75, column: 24, scope: !1117)
!16245 = !DILocation(line: 75, column: 3, scope: !1117)
!16246 = !DILocation(line: 76, column: 9, scope: !16247)
!16247 = distinct !DILexicalBlock(scope: !1117, file: !1090, line: 76, column: 3)
!16248 = !DILocation(line: 76, column: 8, scope: !16247)
!16249 = !DILocation(line: 76, column: 13, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16247, file: !1090, line: 76, column: 3)
!16251 = !DILocation(line: 76, column: 15, scope: !16250)
!16252 = !DILocation(line: 76, column: 14, scope: !16250)
!16253 = !DILocation(line: 76, column: 3, scope: !16247)
!16254 = !DILocalVariable(name: "this_number", scope: !16255, file: !1090, line: 79, type: !19)
!16255 = distinct !DILexicalBlock(scope: !16250, file: !1090, line: 77, column: 3)
!16256 = !DILocation(line: 79, column: 9, scope: !16255)
!16257 = !DILocation(line: 81, column: 48, scope: !16255)
!16258 = !DILocation(line: 81, column: 5, scope: !16255)
!16259 = !DILocation(line: 83, column: 11, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16255, file: !1090, line: 83, column: 10)
!16261 = !DILocation(line: 83, column: 16, scope: !16260)
!16262 = !DILocation(line: 83, column: 21, scope: !16260)
!16263 = !DILocation(line: 83, column: 13, scope: !16260)
!16264 = !DILocation(line: 83, column: 25, scope: !16260)
!16265 = !DILocation(line: 83, column: 28, scope: !16260)
!16266 = !DILocation(line: 83, column: 57, scope: !16260)
!16267 = !DILocation(line: 84, column: 11, scope: !16260)
!16268 = !DILocation(line: 84, column: 17, scope: !16260)
!16269 = !DILocation(line: 84, column: 22, scope: !16260)
!16270 = !DILocation(line: 84, column: 13, scope: !16260)
!16271 = !DILocation(line: 84, column: 26, scope: !16260)
!16272 = !DILocation(line: 84, column: 30, scope: !16260)
!16273 = !DILocation(line: 83, column: 10, scope: !16255)
!16274 = !DILocation(line: 86, column: 7, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16260, file: !1090, line: 85, column: 5)
!16276 = !DILocation(line: 88, column: 19, scope: !16255)
!16277 = !DILocation(line: 88, column: 17, scope: !16255)
!16278 = !DILocation(line: 89, column: 9, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16255, file: !1090, line: 89, column: 9)
!16280 = !DILocation(line: 89, column: 21, scope: !16279)
!16281 = !DILocation(line: 89, column: 25, scope: !16279)
!16282 = !DILocation(line: 89, column: 28, scope: !16279)
!16283 = !DILocation(line: 89, column: 40, scope: !16279)
!16284 = !DILocation(line: 89, column: 9, scope: !16255)
!16285 = !DILocation(line: 91, column: 7, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16279, file: !1090, line: 90, column: 5)
!16287 = !DILocation(line: 94, column: 34, scope: !16255)
!16288 = !DILocation(line: 94, column: 18, scope: !16255)
!16289 = !DILocation(line: 94, column: 5, scope: !16255)
!16290 = !DILocation(line: 94, column: 13, scope: !16255)
!16291 = !DILocation(line: 94, column: 16, scope: !16255)
!16292 = !DILocation(line: 98, column: 5, scope: !16255)
!16293 = !DILocation(line: 99, column: 3, scope: !16255)
!16294 = !DILocation(line: 76, column: 23, scope: !16250)
!16295 = !DILocation(line: 76, column: 3, scope: !16250)
!16296 = distinct !{!16296, !16253, !16297}
!16297 = !DILocation(line: 99, column: 3, scope: !16247)
!16298 = !DILocation(line: 100, column: 10, scope: !1117)
!16299 = !DILocation(line: 100, column: 3, scope: !1117)
!16300 = !DILocation(line: 101, column: 1, scope: !1117)
!16301 = !DILocalVariable(name: "p_filename_str", arg: 1, scope: !1133, file: !1134, line: 16, type: !1137)
!16302 = !DILocation(line: 16, column: 43, scope: !1133)
!16303 = !DILocalVariable(name: "iters", scope: !1133, file: !1134, line: 19, type: !26)
!16304 = !DILocation(line: 19, column: 16, scope: !1133)
!16305 = !DILocation(line: 21, column: 8, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !1133, file: !1134, line: 21, column: 7)
!16307 = !DILocation(line: 21, column: 7, scope: !1133)
!16308 = !DILocation(line: 23, column: 5, scope: !16309)
!16309 = distinct !DILexicalBlock(scope: !16306, file: !1134, line: 22, column: 3)
!16310 = !DILocation(line: 25, column: 7, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !1133, file: !1134, line: 25, column: 7)
!16312 = !DILocation(line: 25, column: 7, scope: !1133)
!16313 = !DILocation(line: 27, column: 35, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16311, file: !1134, line: 26, column: 3)
!16315 = !DILocation(line: 27, column: 5, scope: !16314)
!16316 = !DILocation(line: 28, column: 3, scope: !16314)
!16317 = !DILocation(line: 29, column: 34, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !1133, file: !1134, line: 29, column: 7)
!16319 = !DILocation(line: 29, column: 7, scope: !16318)
!16320 = !DILocation(line: 29, column: 7, scope: !1133)
!16321 = !DILocation(line: 31, column: 5, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16318, file: !1134, line: 30, column: 3)
!16323 = !DILocalVariable(name: "loc_res", scope: !16324, file: !1134, line: 35, type: !16325)
!16324 = distinct !DILexicalBlock(scope: !16318, file: !1134, line: 34, column: 3)
!16325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_locate_result", file: !34, line: 68, size: 96, elements: !16326)
!16326 = !{!16327, !16328, !16329}
!16327 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !16325, file: !34, line: 70, baseType: !19, size: 32)
!16328 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !16325, file: !34, line: 71, baseType: !26, size: 32, offset: 32)
!16329 = !DIDerivedType(tag: DW_TAG_member, name: "char_found", scope: !16325, file: !34, line: 72, baseType: !17, size: 8, offset: 64)
!16330 = !DILocation(line: 35, column: 30, scope: !16324)
!16331 = !DILocation(line: 36, column: 22, scope: !16324)
!16332 = !DILocation(line: 36, column: 7, scope: !16324)
!16333 = !DILocation(line: 37, column: 17, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16324, file: !1134, line: 37, column: 9)
!16335 = !DILocation(line: 37, column: 9, scope: !16334)
!16336 = !DILocation(line: 37, column: 9, scope: !16324)
!16337 = !DILocation(line: 39, column: 7, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16334, file: !1134, line: 38, column: 5)
!16339 = !DILocation(line: 42, column: 3, scope: !1133)
!16340 = !DILocation(line: 43, column: 1, scope: !1133)
!16341 = !DILocalVariable(name: "p_filename_str", arg: 1, scope: !1148, file: !1134, line: 46, type: !1137)
!16342 = !DILocation(line: 46, column: 51, scope: !1148)
!16343 = !DILocalVariable(name: "iters", scope: !1148, file: !1134, line: 49, type: !26)
!16344 = !DILocation(line: 49, column: 16, scope: !1148)
!16345 = !DILocation(line: 51, column: 8, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !1148, file: !1134, line: 51, column: 7)
!16347 = !DILocation(line: 51, column: 7, scope: !1148)
!16348 = !DILocation(line: 53, column: 5, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16346, file: !1134, line: 52, column: 3)
!16350 = !DILocation(line: 55, column: 7, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !1148, file: !1134, line: 55, column: 7)
!16352 = !DILocation(line: 55, column: 7, scope: !1148)
!16353 = !DILocation(line: 57, column: 35, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16351, file: !1134, line: 56, column: 3)
!16355 = !DILocation(line: 57, column: 5, scope: !16354)
!16356 = !DILocation(line: 58, column: 3, scope: !16354)
!16357 = !DILocation(line: 59, column: 34, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !1148, file: !1134, line: 59, column: 7)
!16359 = !DILocation(line: 59, column: 7, scope: !16358)
!16360 = !DILocation(line: 59, column: 7, scope: !1148)
!16361 = !DILocation(line: 61, column: 5, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16358, file: !1134, line: 60, column: 3)
!16363 = !DILocalVariable(name: "loc_res", scope: !16364, file: !1134, line: 65, type: !16325)
!16364 = distinct !DILexicalBlock(scope: !16358, file: !1134, line: 64, column: 3)
!16365 = !DILocation(line: 65, column: 30, scope: !16364)
!16366 = !DILocation(line: 66, column: 22, scope: !16364)
!16367 = !DILocation(line: 66, column: 7, scope: !16364)
!16368 = !DILocation(line: 67, column: 17, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16364, file: !1134, line: 67, column: 9)
!16370 = !DILocation(line: 67, column: 9, scope: !16369)
!16371 = !DILocation(line: 67, column: 9, scope: !16364)
!16372 = !DILocation(line: 69, column: 7, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16369, file: !1134, line: 68, column: 5)
!16374 = !DILocation(line: 72, column: 3, scope: !1148)
!16375 = !DILocation(line: 73, column: 1, scope: !1148)
!16376 = distinct !DISubprogram(name: "handle_feat", scope: !1937, file: !1937, line: 16, type: !16377, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !128)
!16377 = !DISubroutineType(types: !16378)
!16378 = !{null, !16379}
!16379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16380, size: 64)
!16380 = !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !16381, line: 4, flags: DIFlagFwdDecl)
!16381 = !DIFile(filename: "./features.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!16382 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16376, file: !1937, line: 16, type: !16379)
!16383 = !DILocation(line: 16, column: 33, scope: !16376)
!16384 = !DILocation(line: 18, column: 26, scope: !16376)
!16385 = !DILocation(line: 18, column: 3, scope: !16376)
!16386 = !DILocation(line: 19, column: 7, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16376, file: !1937, line: 19, column: 7)
!16388 = !DILocation(line: 19, column: 7, scope: !16376)
!16389 = !DILocation(line: 21, column: 9, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16391, file: !1937, line: 21, column: 9)
!16391 = distinct !DILexicalBlock(scope: !16387, file: !1937, line: 20, column: 3)
!16392 = !DILocation(line: 21, column: 23, scope: !16390)
!16393 = !DILocation(line: 21, column: 26, scope: !16390)
!16394 = !DILocation(line: 21, column: 9, scope: !16391)
!16395 = !DILocation(line: 23, column: 27, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16390, file: !1937, line: 22, column: 5)
!16397 = !DILocation(line: 23, column: 7, scope: !16396)
!16398 = !DILocation(line: 24, column: 5, scope: !16396)
!16399 = !DILocation(line: 25, column: 9, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16391, file: !1937, line: 25, column: 9)
!16401 = !DILocation(line: 25, column: 9, scope: !16391)
!16402 = !DILocation(line: 27, column: 27, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16400, file: !1937, line: 26, column: 5)
!16404 = !DILocation(line: 27, column: 7, scope: !16403)
!16405 = !DILocation(line: 28, column: 5, scope: !16403)
!16406 = !DILocation(line: 29, column: 3, scope: !16391)
!16407 = !DILocation(line: 30, column: 7, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16376, file: !1937, line: 30, column: 7)
!16409 = !DILocation(line: 30, column: 7, scope: !16376)
!16410 = !DILocation(line: 32, column: 25, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16408, file: !1937, line: 31, column: 3)
!16412 = !DILocation(line: 32, column: 5, scope: !16411)
!16413 = !DILocation(line: 33, column: 3, scope: !16411)
!16414 = !DILocation(line: 34, column: 7, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16376, file: !1937, line: 34, column: 7)
!16416 = !DILocation(line: 34, column: 7, scope: !16376)
!16417 = !DILocation(line: 36, column: 25, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16415, file: !1937, line: 35, column: 3)
!16419 = !DILocation(line: 36, column: 5, scope: !16418)
!16420 = !DILocation(line: 37, column: 3, scope: !16418)
!16421 = !DILocation(line: 38, column: 23, scope: !16376)
!16422 = !DILocation(line: 38, column: 3, scope: !16376)
!16423 = !DILocation(line: 39, column: 7, scope: !16424)
!16424 = distinct !DILexicalBlock(scope: !16376, file: !1937, line: 39, column: 7)
!16425 = !DILocation(line: 39, column: 7, scope: !16376)
!16426 = !DILocation(line: 41, column: 25, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16424, file: !1937, line: 40, column: 3)
!16428 = !DILocation(line: 41, column: 5, scope: !16427)
!16429 = !DILocation(line: 42, column: 3, scope: !16427)
!16430 = !DILocation(line: 43, column: 7, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16376, file: !1937, line: 43, column: 7)
!16432 = !DILocation(line: 43, column: 7, scope: !16376)
!16433 = !DILocation(line: 45, column: 25, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16431, file: !1937, line: 44, column: 3)
!16435 = !DILocation(line: 45, column: 5, scope: !16434)
!16436 = !DILocation(line: 46, column: 25, scope: !16434)
!16437 = !DILocation(line: 46, column: 5, scope: !16434)
!16438 = !DILocation(line: 47, column: 3, scope: !16434)
!16439 = !DILocation(line: 48, column: 23, scope: !16376)
!16440 = !DILocation(line: 48, column: 3, scope: !16376)
!16441 = !DILocation(line: 49, column: 23, scope: !16376)
!16442 = !DILocation(line: 49, column: 3, scope: !16376)
!16443 = !DILocation(line: 50, column: 23, scope: !16376)
!16444 = !DILocation(line: 50, column: 3, scope: !16376)
!16445 = !DILocation(line: 51, column: 23, scope: !16376)
!16446 = !DILocation(line: 51, column: 3, scope: !16376)
!16447 = !DILocation(line: 52, column: 19, scope: !16376)
!16448 = !DILocation(line: 52, column: 3, scope: !16376)
!16449 = !DILocation(line: 53, column: 1, scope: !16376)
!16450 = distinct !DISubprogram(name: "ftp_write_str", scope: !1939, file: !1939, line: 33, type: !16451, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16451 = !DISubroutineType(types: !16452)
!16452 = !{!19, !16453, !16519, !108}
!16453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16454, size: 64)
!16454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16455)
!16455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !16456)
!16456 = !{!16457, !16458, !16459, !16460, !16461, !16462, !16463, !16464, !16465, !16466, !16467, !16468, !16469, !16470, !16471, !16477, !16478, !16479, !16480, !16481, !16482, !16483, !16484, !16485, !16486, !16487, !16488, !16489, !16490, !16491, !16492, !16493, !16494, !16495, !16496, !16497, !16498, !16499, !16500, !16501, !16502, !16503, !16504, !16505, !16506, !16507, !16508, !16509, !16510, !16511, !16512, !16513, !16514, !16515, !16516, !16517, !16518}
!16457 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !16455, file: !8, line: 21, baseType: !154, size: 64)
!16458 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !16455, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!16459 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !16455, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!16460 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !16455, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!16461 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !16455, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!16462 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !16455, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!16463 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !16455, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!16464 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !16455, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!16465 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !16455, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!16466 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !16455, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!16467 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !16455, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!16468 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !16455, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!16469 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !16455, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!16470 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !16455, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!16471 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !16455, file: !8, line: 39, baseType: !16472, size: 128, offset: 704)
!16472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !16473)
!16473 = !{!16474, !16475, !16476}
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !16472, file: !34, line: 12, baseType: !16, size: 64)
!16475 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !16472, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!16476 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !16472, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!16477 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !16455, file: !8, line: 40, baseType: !16472, size: 128, offset: 832)
!16478 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !16455, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!16479 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !16455, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!16480 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !16455, file: !8, line: 45, baseType: !16472, size: 128, offset: 1088)
!16481 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !16455, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!16482 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !16455, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!16483 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !16455, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!16484 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !16455, file: !8, line: 51, baseType: !16472, size: 128, offset: 1344)
!16485 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !16455, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!16486 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !16455, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!16487 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !16455, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!16488 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !16455, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!16489 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !16455, file: !8, line: 62, baseType: !16472, size: 128, offset: 1664)
!16490 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !16455, file: !8, line: 63, baseType: !16472, size: 128, offset: 1792)
!16491 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !16455, file: !8, line: 64, baseType: !16472, size: 128, offset: 1920)
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !16455, file: !8, line: 65, baseType: !16472, size: 128, offset: 2048)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !16455, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!16494 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !16455, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!16495 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !16455, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!16496 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !16455, file: !8, line: 71, baseType: !16472, size: 128, offset: 2304)
!16497 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !16455, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!16498 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !16455, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!16499 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !16455, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!16500 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !16455, file: !8, line: 75, baseType: !16472, size: 128, offset: 2624)
!16501 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !16455, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!16502 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !16455, file: !8, line: 79, baseType: !16472, size: 128, offset: 2816)
!16503 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !16455, file: !8, line: 80, baseType: !16472, size: 128, offset: 2944)
!16504 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !16455, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!16505 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !16455, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!16506 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !16455, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!16507 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !16455, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!16508 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !16455, file: !8, line: 89, baseType: !16472, size: 128, offset: 3200)
!16509 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !16455, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!16510 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !16455, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!16511 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !16455, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!16512 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !16455, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!16513 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !16455, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!16514 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !16455, file: !8, line: 97, baseType: !16472, size: 128, offset: 3584)
!16515 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !16455, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!16516 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !16455, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!16517 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !16455, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!16518 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !16455, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!16519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16520, size: 64)
!16520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16472)
!16521 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16450, file: !1939, line: 33, type: !16453)
!16522 = !DILocation(line: 33, column: 41, scope: !16450)
!16523 = !DILocalVariable(name: "p_str", arg: 2, scope: !16450, file: !1939, line: 33, type: !16519)
!16524 = !DILocation(line: 33, column: 69, scope: !16450)
!16525 = !DILocalVariable(name: "target", arg: 3, scope: !16450, file: !1939, line: 34, type: !108)
!16526 = !DILocation(line: 34, column: 33, scope: !16450)
!16527 = !DILocation(line: 36, column: 7, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16450, file: !1939, line: 36, column: 7)
!16529 = !DILocation(line: 36, column: 14, scope: !16528)
!16530 = !DILocation(line: 36, column: 7, scope: !16450)
!16531 = !DILocation(line: 38, column: 9, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16533, file: !1939, line: 38, column: 9)
!16533 = distinct !DILexicalBlock(scope: !16528, file: !1939, line: 37, column: 3)
!16534 = !DILocation(line: 38, column: 17, scope: !16532)
!16535 = !DILocation(line: 38, column: 30, scope: !16532)
!16536 = !DILocation(line: 38, column: 33, scope: !16532)
!16537 = !DILocation(line: 38, column: 41, scope: !16532)
!16538 = !DILocation(line: 38, column: 9, scope: !16533)
!16539 = !DILocalVariable(name: "ret", scope: !16540, file: !1939, line: 40, type: !19)
!16540 = distinct !DILexicalBlock(scope: !16532, file: !1939, line: 39, column: 5)
!16541 = !DILocation(line: 40, column: 11, scope: !16540)
!16542 = !DILocalVariable(name: "written", scope: !16540, file: !1939, line: 41, type: !19)
!16543 = !DILocation(line: 41, column: 11, scope: !16540)
!16544 = !DILocation(line: 42, column: 26, scope: !16540)
!16545 = !DILocation(line: 42, column: 34, scope: !16540)
!16546 = !DILocation(line: 42, column: 7, scope: !16540)
!16547 = !DILocation(line: 43, column: 26, scope: !16540)
!16548 = !DILocation(line: 43, column: 34, scope: !16540)
!16549 = !DILocation(line: 43, column: 51, scope: !16540)
!16550 = !DILocation(line: 43, column: 7, scope: !16540)
!16551 = !DILocation(line: 44, column: 35, scope: !16540)
!16552 = !DILocation(line: 44, column: 43, scope: !16540)
!16553 = !DILocation(line: 44, column: 17, scope: !16540)
!16554 = !DILocation(line: 44, column: 15, scope: !16540)
!16555 = !DILocation(line: 45, column: 11, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16540, file: !1939, line: 45, column: 11)
!16557 = !DILocation(line: 45, column: 19, scope: !16556)
!16558 = !DILocation(line: 45, column: 23, scope: !16556)
!16559 = !DILocation(line: 45, column: 26, scope: !16556)
!16560 = !DILocation(line: 45, column: 54, scope: !16556)
!16561 = !DILocation(line: 45, column: 43, scope: !16556)
!16562 = !DILocation(line: 45, column: 34, scope: !16556)
!16563 = !DILocation(line: 45, column: 11, scope: !16540)
!16564 = !DILocation(line: 47, column: 13, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16556, file: !1939, line: 46, column: 7)
!16566 = !DILocation(line: 48, column: 7, scope: !16565)
!16567 = !DILocation(line: 49, column: 14, scope: !16540)
!16568 = !DILocation(line: 49, column: 7, scope: !16540)
!16569 = !DILocation(line: 51, column: 14, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16532, file: !1939, line: 51, column: 14)
!16571 = !DILocation(line: 51, column: 22, scope: !16570)
!16572 = !DILocation(line: 51, column: 14, scope: !16532)
!16573 = !DILocation(line: 53, column: 28, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16570, file: !1939, line: 52, column: 5)
!16575 = !DILocation(line: 53, column: 36, scope: !16574)
!16576 = !DILocation(line: 53, column: 48, scope: !16574)
!16577 = !DILocation(line: 53, column: 14, scope: !16574)
!16578 = !DILocation(line: 53, column: 7, scope: !16574)
!16579 = !DILocation(line: 57, column: 30, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16570, file: !1939, line: 56, column: 5)
!16581 = !DILocation(line: 57, column: 37, scope: !16580)
!16582 = !DILocation(line: 57, column: 45, scope: !16580)
!16583 = !DILocation(line: 57, column: 14, scope: !16580)
!16584 = !DILocation(line: 57, column: 7, scope: !16580)
!16585 = !DILocation(line: 62, column: 9, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16587, file: !1939, line: 62, column: 9)
!16587 = distinct !DILexicalBlock(scope: !16528, file: !1939, line: 61, column: 3)
!16588 = !DILocation(line: 62, column: 17, scope: !16586)
!16589 = !DILocation(line: 62, column: 33, scope: !16586)
!16590 = !DILocation(line: 62, column: 36, scope: !16586)
!16591 = !DILocation(line: 62, column: 44, scope: !16586)
!16592 = !DILocation(line: 62, column: 9, scope: !16587)
!16593 = !DILocation(line: 64, column: 26, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16586, file: !1939, line: 63, column: 5)
!16595 = !DILocation(line: 64, column: 34, scope: !16594)
!16596 = !DILocation(line: 64, column: 7, scope: !16594)
!16597 = !DILocation(line: 65, column: 26, scope: !16594)
!16598 = !DILocation(line: 65, column: 34, scope: !16594)
!16599 = !DILocation(line: 65, column: 51, scope: !16594)
!16600 = !DILocation(line: 65, column: 7, scope: !16594)
!16601 = !DILocation(line: 66, column: 32, scope: !16594)
!16602 = !DILocation(line: 66, column: 40, scope: !16594)
!16603 = !DILocation(line: 66, column: 14, scope: !16594)
!16604 = !DILocation(line: 66, column: 7, scope: !16594)
!16605 = !DILocation(line: 68, column: 14, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16586, file: !1939, line: 68, column: 14)
!16607 = !DILocation(line: 68, column: 22, scope: !16606)
!16608 = !DILocation(line: 68, column: 14, scope: !16586)
!16609 = !DILocation(line: 70, column: 28, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16606, file: !1939, line: 69, column: 5)
!16611 = !DILocation(line: 70, column: 36, scope: !16610)
!16612 = !DILocation(line: 70, column: 51, scope: !16610)
!16613 = !DILocation(line: 70, column: 14, scope: !16610)
!16614 = !DILocation(line: 70, column: 7, scope: !16610)
!16615 = !DILocation(line: 74, column: 30, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16606, file: !1939, line: 73, column: 5)
!16617 = !DILocation(line: 74, column: 14, scope: !16616)
!16618 = !DILocation(line: 74, column: 7, scope: !16616)
!16619 = !DILocation(line: 77, column: 1, scope: !16450)
!16620 = distinct !DISubprogram(name: "ftp_read_data", scope: !1939, file: !1939, line: 80, type: !16621, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16621 = !DISubroutineType(types: !16622)
!16622 = !{!19, !16623, !16, !26}
!16623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16455, size: 64)
!16624 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16620, file: !1939, line: 80, type: !16623)
!16625 = !DILocation(line: 80, column: 35, scope: !16620)
!16626 = !DILocalVariable(name: "p_buf", arg: 2, scope: !16620, file: !1939, line: 80, type: !16)
!16627 = !DILocation(line: 80, column: 49, scope: !16620)
!16628 = !DILocalVariable(name: "len", arg: 3, scope: !16620, file: !1939, line: 80, type: !26)
!16629 = !DILocation(line: 80, column: 69, scope: !16620)
!16630 = !DILocation(line: 82, column: 7, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16620, file: !1939, line: 82, column: 7)
!16632 = !DILocation(line: 82, column: 15, scope: !16631)
!16633 = !DILocation(line: 82, column: 28, scope: !16631)
!16634 = !DILocation(line: 82, column: 31, scope: !16631)
!16635 = !DILocation(line: 82, column: 39, scope: !16631)
!16636 = !DILocation(line: 82, column: 7, scope: !16620)
!16637 = !DILocalVariable(name: "ret", scope: !16638, file: !1939, line: 84, type: !19)
!16638 = distinct !DILexicalBlock(scope: !16631, file: !1939, line: 83, column: 3)
!16639 = !DILocation(line: 84, column: 9, scope: !16638)
!16640 = !DILocation(line: 85, column: 24, scope: !16638)
!16641 = !DILocation(line: 85, column: 32, scope: !16638)
!16642 = !DILocation(line: 85, column: 5, scope: !16638)
!16643 = !DILocation(line: 86, column: 24, scope: !16638)
!16644 = !DILocation(line: 86, column: 32, scope: !16638)
!16645 = !DILocation(line: 86, column: 49, scope: !16638)
!16646 = !DILocation(line: 86, column: 5, scope: !16638)
!16647 = !DILocation(line: 87, column: 29, scope: !16638)
!16648 = !DILocation(line: 87, column: 37, scope: !16638)
!16649 = !DILocation(line: 87, column: 11, scope: !16638)
!16650 = !DILocation(line: 87, column: 9, scope: !16638)
!16651 = !DILocation(line: 88, column: 24, scope: !16638)
!16652 = !DILocation(line: 88, column: 32, scope: !16638)
!16653 = !DILocation(line: 88, column: 49, scope: !16638)
!16654 = !DILocation(line: 88, column: 56, scope: !16638)
!16655 = !DILocation(line: 88, column: 5, scope: !16638)
!16656 = !DILocation(line: 90, column: 54, scope: !16638)
!16657 = !DILocation(line: 90, column: 59, scope: !16638)
!16658 = !DILocation(line: 90, column: 67, scope: !16638)
!16659 = !DILocation(line: 90, column: 5, scope: !16638)
!16660 = !DILocation(line: 91, column: 12, scope: !16638)
!16661 = !DILocation(line: 91, column: 5, scope: !16638)
!16662 = !DILocation(line: 93, column: 12, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16631, file: !1939, line: 93, column: 12)
!16664 = !DILocation(line: 93, column: 20, scope: !16663)
!16665 = !DILocation(line: 93, column: 12, scope: !16631)
!16666 = !DILocation(line: 95, column: 21, scope: !16667)
!16667 = distinct !DILexicalBlock(scope: !16663, file: !1939, line: 94, column: 3)
!16668 = !DILocation(line: 95, column: 29, scope: !16667)
!16669 = !DILocation(line: 95, column: 37, scope: !16667)
!16670 = !DILocation(line: 95, column: 49, scope: !16667)
!16671 = !DILocation(line: 95, column: 56, scope: !16667)
!16672 = !DILocation(line: 95, column: 12, scope: !16667)
!16673 = !DILocation(line: 95, column: 5, scope: !16667)
!16674 = !DILocation(line: 99, column: 29, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16663, file: !1939, line: 98, column: 3)
!16676 = !DILocation(line: 99, column: 37, scope: !16675)
!16677 = !DILocation(line: 99, column: 46, scope: !16675)
!16678 = !DILocation(line: 99, column: 53, scope: !16675)
!16679 = !DILocation(line: 99, column: 12, scope: !16675)
!16680 = !DILocation(line: 99, column: 5, scope: !16675)
!16681 = !DILocation(line: 101, column: 1, scope: !16620)
!16682 = distinct !DISubprogram(name: "ftp_write_data", scope: !1939, file: !1939, line: 104, type: !16683, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!19, !16453, !88, !26}
!16685 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16682, file: !1939, line: 104, type: !16453)
!16686 = !DILocation(line: 104, column: 42, scope: !16682)
!16687 = !DILocalVariable(name: "p_buf", arg: 2, scope: !16682, file: !1939, line: 104, type: !88)
!16688 = !DILocation(line: 104, column: 62, scope: !16682)
!16689 = !DILocalVariable(name: "len", arg: 3, scope: !16682, file: !1939, line: 105, type: !26)
!16690 = !DILocation(line: 105, column: 29, scope: !16682)
!16691 = !DILocation(line: 107, column: 7, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16682, file: !1939, line: 107, column: 7)
!16693 = !DILocation(line: 107, column: 15, scope: !16692)
!16694 = !DILocation(line: 107, column: 28, scope: !16692)
!16695 = !DILocation(line: 107, column: 31, scope: !16692)
!16696 = !DILocation(line: 107, column: 39, scope: !16692)
!16697 = !DILocation(line: 107, column: 7, scope: !16682)
!16698 = !DILocalVariable(name: "ret", scope: !16699, file: !1939, line: 109, type: !19)
!16699 = distinct !DILexicalBlock(scope: !16692, file: !1939, line: 108, column: 3)
!16700 = !DILocation(line: 109, column: 9, scope: !16699)
!16701 = !DILocation(line: 110, column: 24, scope: !16699)
!16702 = !DILocation(line: 110, column: 32, scope: !16699)
!16703 = !DILocation(line: 110, column: 5, scope: !16699)
!16704 = !DILocation(line: 111, column: 24, scope: !16699)
!16705 = !DILocation(line: 111, column: 32, scope: !16699)
!16706 = !DILocation(line: 111, column: 49, scope: !16699)
!16707 = !DILocation(line: 111, column: 56, scope: !16699)
!16708 = !DILocation(line: 111, column: 5, scope: !16699)
!16709 = !DILocation(line: 112, column: 29, scope: !16699)
!16710 = !DILocation(line: 112, column: 37, scope: !16699)
!16711 = !DILocation(line: 112, column: 11, scope: !16699)
!16712 = !DILocation(line: 112, column: 9, scope: !16699)
!16713 = !DILocation(line: 114, column: 54, scope: !16699)
!16714 = !DILocation(line: 114, column: 59, scope: !16699)
!16715 = !DILocation(line: 114, column: 67, scope: !16699)
!16716 = !DILocation(line: 114, column: 5, scope: !16699)
!16717 = !DILocation(line: 115, column: 12, scope: !16699)
!16718 = !DILocation(line: 115, column: 5, scope: !16699)
!16719 = !DILocation(line: 117, column: 12, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16692, file: !1939, line: 117, column: 12)
!16721 = !DILocation(line: 117, column: 20, scope: !16720)
!16722 = !DILocation(line: 117, column: 12, scope: !16692)
!16723 = !DILocation(line: 119, column: 22, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16720, file: !1939, line: 118, column: 3)
!16725 = !DILocation(line: 119, column: 30, scope: !16724)
!16726 = !DILocation(line: 119, column: 42, scope: !16724)
!16727 = !DILocation(line: 119, column: 49, scope: !16724)
!16728 = !DILocation(line: 119, column: 12, scope: !16724)
!16729 = !DILocation(line: 119, column: 5, scope: !16724)
!16730 = !DILocation(line: 123, column: 35, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16720, file: !1939, line: 122, column: 3)
!16732 = !DILocation(line: 123, column: 43, scope: !16731)
!16733 = !DILocation(line: 123, column: 52, scope: !16731)
!16734 = !DILocation(line: 123, column: 59, scope: !16731)
!16735 = !DILocation(line: 123, column: 12, scope: !16731)
!16736 = !DILocation(line: 123, column: 5, scope: !16731)
!16737 = !DILocation(line: 125, column: 1, scope: !16682)
!16738 = distinct !DISubprogram(name: "ftp_getline", scope: !1939, file: !1939, line: 128, type: !16739, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16739 = !DISubroutineType(types: !16740)
!16740 = !{!19, !16623, !16741, !16}
!16741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16472, size: 64)
!16742 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16738, file: !1939, line: 128, type: !16623)
!16743 = !DILocation(line: 128, column: 33, scope: !16738)
!16744 = !DILocalVariable(name: "p_str", arg: 2, scope: !16738, file: !1939, line: 128, type: !16741)
!16745 = !DILocation(line: 128, column: 55, scope: !16738)
!16746 = !DILocalVariable(name: "p_buf", arg: 3, scope: !16738, file: !1939, line: 128, type: !16)
!16747 = !DILocation(line: 128, column: 68, scope: !16738)
!16748 = !DILocation(line: 130, column: 7, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16738, file: !1939, line: 130, column: 7)
!16750 = !DILocation(line: 130, column: 15, scope: !16749)
!16751 = !DILocation(line: 130, column: 31, scope: !16749)
!16752 = !DILocation(line: 130, column: 34, scope: !16749)
!16753 = !DILocation(line: 130, column: 42, scope: !16749)
!16754 = !DILocation(line: 130, column: 7, scope: !16738)
!16755 = !DILocalVariable(name: "ret", scope: !16756, file: !1939, line: 132, type: !19)
!16756 = distinct !DILexicalBlock(scope: !16749, file: !1939, line: 131, column: 3)
!16757 = !DILocation(line: 132, column: 9, scope: !16756)
!16758 = !DILocation(line: 133, column: 24, scope: !16756)
!16759 = !DILocation(line: 133, column: 32, scope: !16756)
!16760 = !DILocation(line: 133, column: 5, scope: !16756)
!16761 = !DILocation(line: 134, column: 29, scope: !16756)
!16762 = !DILocation(line: 134, column: 37, scope: !16756)
!16763 = !DILocation(line: 134, column: 11, scope: !16756)
!16764 = !DILocation(line: 134, column: 9, scope: !16756)
!16765 = !DILocation(line: 135, column: 9, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16756, file: !1939, line: 135, column: 9)
!16767 = !DILocation(line: 135, column: 13, scope: !16766)
!16768 = !DILocation(line: 135, column: 9, scope: !16756)
!16769 = !DILocation(line: 137, column: 25, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16766, file: !1939, line: 136, column: 5)
!16771 = !DILocation(line: 137, column: 33, scope: !16770)
!16772 = !DILocation(line: 137, column: 50, scope: !16770)
!16773 = !DILocation(line: 137, column: 7, scope: !16770)
!16774 = !DILocation(line: 138, column: 5, scope: !16770)
!16775 = !DILocation(line: 139, column: 12, scope: !16756)
!16776 = !DILocation(line: 139, column: 5, scope: !16756)
!16777 = !DILocalVariable(name: "p_peek", scope: !16778, file: !1939, line: 143, type: !16779)
!16778 = distinct !DILexicalBlock(scope: !16749, file: !1939, line: 142, column: 3)
!16779 = !DIDerivedType(tag: DW_TAG_typedef, name: "str_netfd_read_t", file: !11673, line: 7, baseType: !16780)
!16780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16621, size: 64)
!16781 = !DILocation(line: 143, column: 22, scope: !16778)
!16782 = !DILocalVariable(name: "p_read", scope: !16778, file: !1939, line: 144, type: !16779)
!16783 = !DILocation(line: 144, column: 22, scope: !16778)
!16784 = !DILocation(line: 145, column: 9, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16778, file: !1939, line: 145, column: 9)
!16786 = !DILocation(line: 145, column: 17, scope: !16785)
!16787 = !DILocation(line: 145, column: 9, scope: !16778)
!16788 = !DILocation(line: 147, column: 14, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16785, file: !1939, line: 146, column: 5)
!16790 = !DILocation(line: 148, column: 14, scope: !16789)
!16791 = !DILocation(line: 149, column: 5, scope: !16789)
!16792 = !DILocation(line: 150, column: 28, scope: !16778)
!16793 = !DILocation(line: 151, column: 28, scope: !16778)
!16794 = !DILocation(line: 153, column: 28, scope: !16778)
!16795 = !DILocation(line: 155, column: 28, scope: !16778)
!16796 = !DILocation(line: 156, column: 28, scope: !16778)
!16797 = !DILocation(line: 150, column: 12, scope: !16778)
!16798 = !DILocation(line: 150, column: 5, scope: !16778)
!16799 = !DILocation(line: 158, column: 1, scope: !16738)
!16800 = distinct !DISubprogram(name: "plain_peek_adapter", scope: !1939, file: !1939, line: 161, type: !16621, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16801 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16800, file: !1939, line: 161, type: !16623)
!16802 = !DILocation(line: 161, column: 40, scope: !16800)
!16803 = !DILocalVariable(name: "p_buf", arg: 2, scope: !16800, file: !1939, line: 161, type: !16)
!16804 = !DILocation(line: 161, column: 54, scope: !16800)
!16805 = !DILocalVariable(name: "len", arg: 3, scope: !16800, file: !1939, line: 161, type: !26)
!16806 = !DILocation(line: 161, column: 74, scope: !16800)
!16807 = !DILocation(line: 163, column: 10, scope: !16800)
!16808 = !DILocation(line: 164, column: 50, scope: !16800)
!16809 = !DILocation(line: 164, column: 57, scope: !16800)
!16810 = !DILocation(line: 164, column: 10, scope: !16800)
!16811 = !DILocation(line: 164, column: 3, scope: !16800)
!16812 = distinct !DISubprogram(name: "plain_read_adapter", scope: !1939, file: !1939, line: 168, type: !16621, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16813 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16812, file: !1939, line: 168, type: !16623)
!16814 = !DILocation(line: 168, column: 40, scope: !16812)
!16815 = !DILocalVariable(name: "p_buf", arg: 2, scope: !16812, file: !1939, line: 168, type: !16)
!16816 = !DILocation(line: 168, column: 54, scope: !16812)
!16817 = !DILocalVariable(name: "len", arg: 3, scope: !16812, file: !1939, line: 168, type: !26)
!16818 = !DILocation(line: 168, column: 74, scope: !16812)
!16819 = !DILocation(line: 170, column: 10, scope: !16812)
!16820 = !DILocation(line: 171, column: 50, scope: !16812)
!16821 = !DILocation(line: 171, column: 57, scope: !16812)
!16822 = !DILocation(line: 171, column: 10, scope: !16812)
!16823 = !DILocation(line: 171, column: 3, scope: !16812)
!16824 = distinct !DISubprogram(name: "ssl_peek_adapter", scope: !1939, file: !1939, line: 175, type: !16621, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16825 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16824, file: !1939, line: 175, type: !16623)
!16826 = !DILocation(line: 175, column: 38, scope: !16824)
!16827 = !DILocalVariable(name: "p_buf", arg: 2, scope: !16824, file: !1939, line: 175, type: !16)
!16828 = !DILocation(line: 175, column: 52, scope: !16824)
!16829 = !DILocalVariable(name: "len", arg: 3, scope: !16824, file: !1939, line: 175, type: !26)
!16830 = !DILocation(line: 175, column: 72, scope: !16824)
!16831 = !DILocation(line: 177, column: 19, scope: !16824)
!16832 = !DILocation(line: 177, column: 27, scope: !16824)
!16833 = !DILocation(line: 177, column: 35, scope: !16824)
!16834 = !DILocation(line: 177, column: 50, scope: !16824)
!16835 = !DILocation(line: 177, column: 57, scope: !16824)
!16836 = !DILocation(line: 177, column: 10, scope: !16824)
!16837 = !DILocation(line: 177, column: 3, scope: !16824)
!16838 = distinct !DISubprogram(name: "ssl_read_adapter", scope: !1939, file: !1939, line: 181, type: !16621, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1938, retainedNodes: !128)
!16839 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16838, file: !1939, line: 181, type: !16623)
!16840 = !DILocation(line: 181, column: 38, scope: !16838)
!16841 = !DILocalVariable(name: "p_buf", arg: 2, scope: !16838, file: !1939, line: 181, type: !16)
!16842 = !DILocation(line: 181, column: 52, scope: !16838)
!16843 = !DILocalVariable(name: "len", arg: 3, scope: !16838, file: !1939, line: 181, type: !26)
!16844 = !DILocation(line: 181, column: 72, scope: !16838)
!16845 = !DILocation(line: 183, column: 19, scope: !16838)
!16846 = !DILocation(line: 183, column: 27, scope: !16838)
!16847 = !DILocation(line: 183, column: 35, scope: !16838)
!16848 = !DILocation(line: 183, column: 50, scope: !16838)
!16849 = !DILocation(line: 183, column: 57, scope: !16838)
!16850 = !DILocation(line: 183, column: 10, scope: !16838)
!16851 = !DILocation(line: 183, column: 3, scope: !16838)
!16852 = distinct !DISubprogram(name: "handle_opts", scope: !1942, file: !1942, line: 15, type: !16853, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1941, retainedNodes: !128)
!16853 = !DISubroutineType(types: !16854)
!16854 = !{null, !16855}
!16855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16856, size: 64)
!16856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !16857)
!16857 = !{!16858, !16859, !16860, !16861, !16862, !16863, !16864, !16865, !16866, !16867, !16868, !16869, !16870, !16871, !16872, !16878, !16879, !16880, !16881, !16882, !16883, !16884, !16885, !16886, !16887, !16888, !16889, !16890, !16891, !16892, !16893, !16894, !16895, !16896, !16897, !16898, !16899, !16900, !16901, !16902, !16903, !16904, !16905, !16906, !16907, !16908, !16909, !16910, !16911, !16912, !16913, !16914, !16915, !16916, !16917, !16918, !16919}
!16858 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !16856, file: !8, line: 21, baseType: !154, size: 64)
!16859 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !16856, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!16860 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !16856, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!16861 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !16856, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!16862 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !16856, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!16863 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !16856, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!16864 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !16856, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!16865 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !16856, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!16866 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !16856, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!16867 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !16856, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!16868 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !16856, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!16869 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !16856, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!16870 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !16856, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!16871 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !16856, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!16872 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !16856, file: !8, line: 39, baseType: !16873, size: 128, offset: 704)
!16873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !16874)
!16874 = !{!16875, !16876, !16877}
!16875 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !16873, file: !34, line: 12, baseType: !16, size: 64)
!16876 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !16873, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!16877 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !16873, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!16878 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !16856, file: !8, line: 40, baseType: !16873, size: 128, offset: 832)
!16879 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !16856, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!16880 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !16856, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!16881 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !16856, file: !8, line: 45, baseType: !16873, size: 128, offset: 1088)
!16882 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !16856, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!16883 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !16856, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!16884 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !16856, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!16885 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !16856, file: !8, line: 51, baseType: !16873, size: 128, offset: 1344)
!16886 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !16856, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!16887 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !16856, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!16888 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !16856, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!16889 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !16856, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!16890 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !16856, file: !8, line: 62, baseType: !16873, size: 128, offset: 1664)
!16891 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !16856, file: !8, line: 63, baseType: !16873, size: 128, offset: 1792)
!16892 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !16856, file: !8, line: 64, baseType: !16873, size: 128, offset: 1920)
!16893 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !16856, file: !8, line: 65, baseType: !16873, size: 128, offset: 2048)
!16894 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !16856, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!16895 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !16856, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!16896 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !16856, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!16897 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !16856, file: !8, line: 71, baseType: !16873, size: 128, offset: 2304)
!16898 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !16856, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!16899 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !16856, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!16900 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !16856, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!16901 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !16856, file: !8, line: 75, baseType: !16873, size: 128, offset: 2624)
!16902 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !16856, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!16903 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !16856, file: !8, line: 79, baseType: !16873, size: 128, offset: 2816)
!16904 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !16856, file: !8, line: 80, baseType: !16873, size: 128, offset: 2944)
!16905 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !16856, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!16906 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !16856, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!16907 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !16856, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!16908 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !16856, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!16909 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !16856, file: !8, line: 89, baseType: !16873, size: 128, offset: 3200)
!16910 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !16856, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!16911 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !16856, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!16912 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !16856, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!16913 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !16856, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!16914 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !16856, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!16915 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !16856, file: !8, line: 97, baseType: !16873, size: 128, offset: 3584)
!16916 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !16856, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!16917 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !16856, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!16918 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !16856, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!16919 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !16856, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!16920 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16852, file: !1942, line: 15, type: !16855)
!16921 = !DILocation(line: 15, column: 33, scope: !16852)
!16922 = !DILocation(line: 17, column: 14, scope: !16852)
!16923 = !DILocation(line: 17, column: 22, scope: !16852)
!16924 = !DILocation(line: 17, column: 3, scope: !16852)
!16925 = !DILocation(line: 18, column: 23, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16852, file: !1942, line: 18, column: 7)
!16927 = !DILocation(line: 18, column: 31, scope: !16926)
!16928 = !DILocation(line: 18, column: 7, scope: !16926)
!16929 = !DILocation(line: 18, column: 7, scope: !16852)
!16930 = !DILocation(line: 20, column: 21, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16926, file: !1942, line: 19, column: 3)
!16932 = !DILocation(line: 20, column: 5, scope: !16931)
!16933 = !DILocation(line: 21, column: 3, scope: !16931)
!16934 = !DILocation(line: 24, column: 21, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16926, file: !1942, line: 23, column: 3)
!16936 = !DILocation(line: 24, column: 5, scope: !16935)
!16937 = !DILocation(line: 26, column: 1, scope: !16852)
!16938 = distinct !DISubprogram(name: "ssl_init", scope: !1944, file: !1944, line: 724, type: !16939, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!16939 = !DISubroutineType(types: !16940)
!16940 = !{null, !16941}
!16941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16942, size: 64)
!16942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !16943)
!16943 = !{!16944, !16945, !16946, !16947, !16948, !16949, !16950, !16951, !16952, !16953, !16954, !16955, !16956, !16957, !16958, !16964, !16965, !16966, !16967, !16968, !16969, !16970, !16971, !16972, !16973, !16974, !16975, !16976, !16977, !16978, !16979, !16980, !16981, !16982, !16983, !16984, !16985, !16986, !16987, !16988, !16989, !16990, !16991, !16992, !16993, !16994, !16995, !16996, !16997, !16998, !16999, !17000, !17001, !17002, !17003, !17004, !17005}
!16944 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !16942, file: !8, line: 21, baseType: !154, size: 64)
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !16942, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!16946 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !16942, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!16947 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !16942, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!16948 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !16942, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!16949 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !16942, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!16950 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !16942, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!16951 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !16942, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!16952 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !16942, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!16953 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !16942, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!16954 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !16942, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!16955 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !16942, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!16956 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !16942, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!16957 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !16942, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!16958 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !16942, file: !8, line: 39, baseType: !16959, size: 128, offset: 704)
!16959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !16960)
!16960 = !{!16961, !16962, !16963}
!16961 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !16959, file: !34, line: 12, baseType: !16, size: 64)
!16962 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !16959, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!16963 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !16959, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!16964 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !16942, file: !8, line: 40, baseType: !16959, size: 128, offset: 832)
!16965 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !16942, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!16966 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !16942, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!16967 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !16942, file: !8, line: 45, baseType: !16959, size: 128, offset: 1088)
!16968 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !16942, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!16969 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !16942, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!16970 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !16942, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!16971 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !16942, file: !8, line: 51, baseType: !16959, size: 128, offset: 1344)
!16972 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !16942, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!16973 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !16942, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!16974 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !16942, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!16975 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !16942, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!16976 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !16942, file: !8, line: 62, baseType: !16959, size: 128, offset: 1664)
!16977 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !16942, file: !8, line: 63, baseType: !16959, size: 128, offset: 1792)
!16978 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !16942, file: !8, line: 64, baseType: !16959, size: 128, offset: 1920)
!16979 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !16942, file: !8, line: 65, baseType: !16959, size: 128, offset: 2048)
!16980 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !16942, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!16981 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !16942, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!16982 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !16942, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!16983 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !16942, file: !8, line: 71, baseType: !16959, size: 128, offset: 2304)
!16984 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !16942, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!16985 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !16942, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!16986 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !16942, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!16987 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !16942, file: !8, line: 75, baseType: !16959, size: 128, offset: 2624)
!16988 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !16942, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!16989 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !16942, file: !8, line: 79, baseType: !16959, size: 128, offset: 2816)
!16990 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !16942, file: !8, line: 80, baseType: !16959, size: 128, offset: 2944)
!16991 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !16942, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!16992 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !16942, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!16993 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !16942, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!16994 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !16942, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!16995 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !16942, file: !8, line: 89, baseType: !16959, size: 128, offset: 3200)
!16996 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !16942, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!16997 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !16942, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!16998 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !16942, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!16999 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !16942, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!17000 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !16942, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!17001 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !16942, file: !8, line: 97, baseType: !16959, size: 128, offset: 3584)
!17002 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !16942, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!17003 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !16942, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!17004 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !16942, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!17005 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !16942, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!17006 = !DILocalVariable(name: "p_sess", arg: 1, scope: !16938, file: !1944, line: 724, type: !16941)
!17007 = !DILocation(line: 724, column: 30, scope: !16938)
!17008 = !DILocation(line: 726, column: 10, scope: !16938)
!17009 = !DILocation(line: 727, column: 3, scope: !16938)
!17010 = !DILocation(line: 728, column: 1, scope: !16938)
!17011 = distinct !DISubprogram(name: "ssl_control_handshake", scope: !1944, file: !1944, line: 731, type: !16939, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17012 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17011, file: !1944, line: 731, type: !16941)
!17013 = !DILocation(line: 731, column: 43, scope: !17011)
!17014 = !DILocation(line: 733, column: 10, scope: !17011)
!17015 = !DILocation(line: 734, column: 1, scope: !17011)
!17016 = distinct !DISubprogram(name: "handle_auth", scope: !1944, file: !1944, line: 737, type: !16939, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17017 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17016, file: !1944, line: 737, type: !16941)
!17018 = !DILocation(line: 737, column: 33, scope: !17016)
!17019 = !DILocation(line: 739, column: 10, scope: !17016)
!17020 = !DILocation(line: 740, column: 1, scope: !17016)
!17021 = distinct !DISubprogram(name: "handle_pbsz", scope: !1944, file: !1944, line: 743, type: !16939, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17022 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17021, file: !1944, line: 743, type: !16941)
!17023 = !DILocation(line: 743, column: 33, scope: !17021)
!17024 = !DILocation(line: 745, column: 10, scope: !17021)
!17025 = !DILocation(line: 746, column: 1, scope: !17021)
!17026 = distinct !DISubprogram(name: "handle_prot", scope: !1944, file: !1944, line: 749, type: !16939, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17027 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17026, file: !1944, line: 749, type: !16941)
!17028 = !DILocation(line: 749, column: 33, scope: !17026)
!17029 = !DILocation(line: 751, column: 10, scope: !17026)
!17030 = !DILocation(line: 752, column: 1, scope: !17026)
!17031 = distinct !DISubprogram(name: "ssl_read", scope: !1944, file: !1944, line: 755, type: !17032, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17032 = !DISubroutineType(types: !17033)
!17033 = !{!19, !16941, !80, !16, !26}
!17034 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17031, file: !1944, line: 755, type: !16941)
!17035 = !DILocation(line: 755, column: 30, scope: !17031)
!17036 = !DILocalVariable(name: "p_ssl", arg: 2, scope: !17031, file: !1944, line: 755, type: !80)
!17037 = !DILocation(line: 755, column: 44, scope: !17031)
!17038 = !DILocalVariable(name: "p_buf", arg: 3, scope: !17031, file: !1944, line: 755, type: !16)
!17039 = !DILocation(line: 755, column: 57, scope: !17031)
!17040 = !DILocalVariable(name: "len", arg: 4, scope: !17031, file: !1944, line: 755, type: !26)
!17041 = !DILocation(line: 755, column: 77, scope: !17031)
!17042 = !DILocation(line: 757, column: 10, scope: !17031)
!17043 = !DILocation(line: 758, column: 10, scope: !17031)
!17044 = !DILocation(line: 759, column: 10, scope: !17031)
!17045 = !DILocation(line: 760, column: 10, scope: !17031)
!17046 = !DILocation(line: 761, column: 3, scope: !17031)
!17047 = distinct !DISubprogram(name: "ssl_peek", scope: !1944, file: !1944, line: 765, type: !17032, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17048 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17047, file: !1944, line: 765, type: !16941)
!17049 = !DILocation(line: 765, column: 30, scope: !17047)
!17050 = !DILocalVariable(name: "p_ssl", arg: 2, scope: !17047, file: !1944, line: 765, type: !80)
!17051 = !DILocation(line: 765, column: 44, scope: !17047)
!17052 = !DILocalVariable(name: "p_buf", arg: 3, scope: !17047, file: !1944, line: 765, type: !16)
!17053 = !DILocation(line: 765, column: 57, scope: !17047)
!17054 = !DILocalVariable(name: "len", arg: 4, scope: !17047, file: !1944, line: 765, type: !26)
!17055 = !DILocation(line: 765, column: 77, scope: !17047)
!17056 = !DILocation(line: 767, column: 10, scope: !17047)
!17057 = !DILocation(line: 768, column: 10, scope: !17047)
!17058 = !DILocation(line: 769, column: 10, scope: !17047)
!17059 = !DILocation(line: 770, column: 10, scope: !17047)
!17060 = !DILocation(line: 771, column: 3, scope: !17047)
!17061 = distinct !DISubprogram(name: "ssl_write", scope: !1944, file: !1944, line: 775, type: !17062, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17062 = !DISubroutineType(types: !17063)
!17063 = !{!19, !80, !88, !26}
!17064 = !DILocalVariable(name: "p_ssl", arg: 1, scope: !17061, file: !1944, line: 775, type: !80)
!17065 = !DILocation(line: 775, column: 17, scope: !17061)
!17066 = !DILocalVariable(name: "p_buf", arg: 2, scope: !17061, file: !1944, line: 775, type: !88)
!17067 = !DILocation(line: 775, column: 36, scope: !17061)
!17068 = !DILocalVariable(name: "len", arg: 3, scope: !17061, file: !1944, line: 775, type: !26)
!17069 = !DILocation(line: 775, column: 56, scope: !17061)
!17070 = !DILocation(line: 777, column: 10, scope: !17061)
!17071 = !DILocation(line: 778, column: 10, scope: !17061)
!17072 = !DILocation(line: 779, column: 10, scope: !17061)
!17073 = !DILocation(line: 780, column: 3, scope: !17061)
!17074 = distinct !DISubprogram(name: "ssl_write_str", scope: !1944, file: !1944, line: 784, type: !17075, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17075 = !DISubroutineType(types: !17076)
!17076 = !{!19, !80, !17077}
!17077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17078, size: 64)
!17078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16959)
!17079 = !DILocalVariable(name: "p_ssl", arg: 1, scope: !17074, file: !1944, line: 784, type: !80)
!17080 = !DILocation(line: 784, column: 21, scope: !17074)
!17081 = !DILocalVariable(name: "p_str", arg: 2, scope: !17074, file: !1944, line: 784, type: !17077)
!17082 = !DILocation(line: 784, column: 48, scope: !17074)
!17083 = !DILocation(line: 786, column: 10, scope: !17074)
!17084 = !DILocation(line: 787, column: 10, scope: !17074)
!17085 = !DILocation(line: 788, column: 3, scope: !17074)
!17086 = distinct !DISubprogram(name: "ssl_accept", scope: !1944, file: !1944, line: 792, type: !17087, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17087 = !DISubroutineType(types: !17088)
!17088 = !{!19, !16941, !19}
!17089 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17086, file: !1944, line: 792, type: !16941)
!17090 = !DILocation(line: 792, column: 32, scope: !17086)
!17091 = !DILocalVariable(name: "fd", arg: 2, scope: !17086, file: !1944, line: 792, type: !19)
!17092 = !DILocation(line: 792, column: 44, scope: !17086)
!17093 = !DILocation(line: 794, column: 10, scope: !17086)
!17094 = !DILocation(line: 795, column: 10, scope: !17086)
!17095 = !DILocation(line: 796, column: 3, scope: !17086)
!17096 = distinct !DISubprogram(name: "ssl_data_close", scope: !1944, file: !1944, line: 800, type: !17097, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17097 = !DISubroutineType(types: !17098)
!17098 = !{!19, !16941}
!17099 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17096, file: !1944, line: 800, type: !16941)
!17100 = !DILocation(line: 800, column: 36, scope: !17096)
!17101 = !DILocation(line: 802, column: 10, scope: !17096)
!17102 = !DILocation(line: 803, column: 3, scope: !17096)
!17103 = distinct !DISubprogram(name: "ssl_comm_channel_init", scope: !1944, file: !1944, line: 807, type: !16939, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17104 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17103, file: !1944, line: 807, type: !16941)
!17105 = !DILocation(line: 807, column: 43, scope: !17103)
!17106 = !DILocation(line: 809, column: 10, scope: !17103)
!17107 = !DILocation(line: 810, column: 1, scope: !17103)
!17108 = distinct !DISubprogram(name: "ssl_comm_channel_set_consumer_context", scope: !1944, file: !1944, line: 813, type: !16939, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17109 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17108, file: !1944, line: 813, type: !16941)
!17110 = !DILocation(line: 813, column: 59, scope: !17108)
!17111 = !DILocation(line: 815, column: 10, scope: !17108)
!17112 = !DILocation(line: 816, column: 1, scope: !17108)
!17113 = distinct !DISubprogram(name: "ssl_comm_channel_set_producer_context", scope: !1944, file: !1944, line: 819, type: !16939, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17114 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17113, file: !1944, line: 819, type: !16941)
!17115 = !DILocation(line: 819, column: 59, scope: !17113)
!17116 = !DILocation(line: 821, column: 10, scope: !17113)
!17117 = !DILocation(line: 822, column: 1, scope: !17113)
!17118 = distinct !DISubprogram(name: "ssl_add_entropy", scope: !1944, file: !1944, line: 825, type: !16939, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17119 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17118, file: !1944, line: 825, type: !16941)
!17120 = !DILocation(line: 825, column: 37, scope: !17118)
!17121 = !DILocation(line: 827, column: 10, scope: !17118)
!17122 = !DILocation(line: 828, column: 1, scope: !17118)
!17123 = distinct !DISubprogram(name: "ssl_read_into_str", scope: !1944, file: !1944, line: 831, type: !17124, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !128)
!17124 = !DISubroutineType(types: !17125)
!17125 = !{!19, !16941, !80, !17126}
!17126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16959, size: 64)
!17127 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17123, file: !1944, line: 831, type: !16941)
!17128 = !DILocation(line: 831, column: 39, scope: !17123)
!17129 = !DILocalVariable(name: "p_ssl", arg: 2, scope: !17123, file: !1944, line: 831, type: !80)
!17130 = !DILocation(line: 831, column: 53, scope: !17123)
!17131 = !DILocalVariable(name: "p_str", arg: 3, scope: !17123, file: !1944, line: 831, type: !17126)
!17132 = !DILocation(line: 831, column: 74, scope: !17123)
!17133 = !DILocation(line: 833, column: 10, scope: !17123)
!17134 = !DILocation(line: 834, column: 10, scope: !17123)
!17135 = !DILocation(line: 835, column: 10, scope: !17123)
!17136 = !DILocation(line: 836, column: 3, scope: !17123)
!17137 = distinct !DISubprogram(name: "ssl_slave", scope: !1946, file: !1946, line: 20, type: !17138, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1945, retainedNodes: !128)
!17138 = !DISubroutineType(types: !17139)
!17139 = !{null, !17140}
!17140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17141, size: 64)
!17141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !17142)
!17142 = !{!17143, !17144, !17145, !17146, !17147, !17148, !17149, !17150, !17151, !17152, !17153, !17154, !17155, !17156, !17157, !17163, !17164, !17165, !17166, !17167, !17168, !17169, !17170, !17171, !17172, !17173, !17174, !17175, !17176, !17177, !17178, !17179, !17180, !17181, !17182, !17183, !17184, !17185, !17186, !17187, !17188, !17189, !17190, !17191, !17192, !17193, !17194, !17195, !17196, !17197, !17198, !17199, !17200, !17201, !17202, !17203, !17204}
!17143 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !17141, file: !8, line: 21, baseType: !154, size: 64)
!17144 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !17141, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!17145 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !17141, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!17146 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !17141, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!17147 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !17141, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!17148 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !17141, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!17149 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !17141, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!17150 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !17141, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!17151 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !17141, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!17152 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !17141, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!17153 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !17141, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!17154 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !17141, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!17155 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !17141, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!17156 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !17141, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!17157 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !17141, file: !8, line: 39, baseType: !17158, size: 128, offset: 704)
!17158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !17159)
!17159 = !{!17160, !17161, !17162}
!17160 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !17158, file: !34, line: 12, baseType: !16, size: 64)
!17161 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !17158, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!17162 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !17158, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!17163 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !17141, file: !8, line: 40, baseType: !17158, size: 128, offset: 832)
!17164 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !17141, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!17165 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !17141, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!17166 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !17141, file: !8, line: 45, baseType: !17158, size: 128, offset: 1088)
!17167 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !17141, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!17168 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !17141, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!17169 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !17141, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!17170 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !17141, file: !8, line: 51, baseType: !17158, size: 128, offset: 1344)
!17171 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !17141, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!17172 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !17141, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!17173 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !17141, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!17174 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !17141, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!17175 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !17141, file: !8, line: 62, baseType: !17158, size: 128, offset: 1664)
!17176 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !17141, file: !8, line: 63, baseType: !17158, size: 128, offset: 1792)
!17177 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !17141, file: !8, line: 64, baseType: !17158, size: 128, offset: 1920)
!17178 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !17141, file: !8, line: 65, baseType: !17158, size: 128, offset: 2048)
!17179 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !17141, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!17180 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !17141, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!17181 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !17141, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!17182 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !17141, file: !8, line: 71, baseType: !17158, size: 128, offset: 2304)
!17183 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !17141, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!17184 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !17141, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!17185 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !17141, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!17186 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !17141, file: !8, line: 75, baseType: !17158, size: 128, offset: 2624)
!17187 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !17141, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!17188 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !17141, file: !8, line: 79, baseType: !17158, size: 128, offset: 2816)
!17189 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !17141, file: !8, line: 80, baseType: !17158, size: 128, offset: 2944)
!17190 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !17141, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!17191 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !17141, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!17192 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !17141, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!17193 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !17141, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!17194 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !17141, file: !8, line: 89, baseType: !17158, size: 128, offset: 3200)
!17195 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !17141, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!17196 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !17141, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!17197 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !17141, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!17198 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !17141, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!17199 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !17141, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!17200 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !17141, file: !8, line: 97, baseType: !17158, size: 128, offset: 3584)
!17201 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !17141, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!17202 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !17141, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!17203 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !17141, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!17204 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !17141, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!17205 = !DILocalVariable(name: "p_sess", arg: 1, scope: !17137, file: !1946, line: 20, type: !17140)
!17206 = !DILocation(line: 20, column: 31, scope: !17137)
!17207 = !DILocalVariable(name: "data_str", scope: !17137, file: !1946, line: 22, type: !17158)
!17208 = !DILocation(line: 22, column: 16, scope: !17137)
!17209 = !DILocation(line: 23, column: 3, scope: !17137)
!17210 = !DILocation(line: 25, column: 3, scope: !17137)
!17211 = !DILocation(line: 27, column: 32, scope: !17137)
!17212 = !DILocation(line: 27, column: 3, scope: !17137)
!17213 = !DILocation(line: 28, column: 7, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17137, file: !1946, line: 28, column: 7)
!17215 = !DILocation(line: 28, column: 7, scope: !17137)
!17216 = !DILocation(line: 30, column: 5, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17214, file: !1946, line: 29, column: 3)
!17218 = !DILocation(line: 31, column: 3, scope: !17217)
!17219 = !DILocation(line: 32, column: 3, scope: !17137)
!17220 = !DILocalVariable(name: "cmd", scope: !17221, file: !1946, line: 34, type: !17)
!17221 = distinct !DILexicalBlock(scope: !17137, file: !1946, line: 33, column: 3)
!17222 = !DILocation(line: 34, column: 10, scope: !17221)
!17223 = !DILocation(line: 34, column: 34, scope: !17221)
!17224 = !DILocation(line: 34, column: 42, scope: !17221)
!17225 = !DILocation(line: 34, column: 16, scope: !17221)
!17226 = !DILocalVariable(name: "ret", scope: !17221, file: !1946, line: 35, type: !19)
!17227 = !DILocation(line: 35, column: 9, scope: !17221)
!17228 = !DILocation(line: 36, column: 9, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17221, file: !1946, line: 36, column: 9)
!17230 = !DILocation(line: 36, column: 13, scope: !17229)
!17231 = !DILocation(line: 36, column: 9, scope: !17221)
!17232 = !DILocation(line: 38, column: 25, scope: !17233)
!17233 = distinct !DILexicalBlock(scope: !17229, file: !1946, line: 37, column: 5)
!17234 = !DILocation(line: 38, column: 34, scope: !17233)
!17235 = !DILocation(line: 38, column: 42, scope: !17233)
!17236 = !DILocation(line: 39, column: 25, scope: !17233)
!17237 = !DILocation(line: 39, column: 33, scope: !17233)
!17238 = !DILocation(line: 38, column: 13, scope: !17233)
!17239 = !DILocation(line: 38, column: 11, scope: !17233)
!17240 = !DILocation(line: 40, column: 26, scope: !17233)
!17241 = !DILocation(line: 40, column: 34, scope: !17233)
!17242 = !DILocation(line: 40, column: 48, scope: !17233)
!17243 = !DILocation(line: 40, column: 7, scope: !17233)
!17244 = !DILocation(line: 41, column: 11, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17233, file: !1946, line: 41, column: 11)
!17246 = !DILocation(line: 41, column: 15, scope: !17245)
!17247 = !DILocation(line: 41, column: 11, scope: !17233)
!17248 = !DILocation(line: 43, column: 28, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17245, file: !1946, line: 42, column: 7)
!17250 = !DILocation(line: 43, column: 36, scope: !17249)
!17251 = !DILocation(line: 43, column: 51, scope: !17249)
!17252 = !DILocation(line: 43, column: 59, scope: !17249)
!17253 = !DILocation(line: 43, column: 9, scope: !17249)
!17254 = !DILocation(line: 44, column: 7, scope: !17249)
!17255 = !DILocation(line: 45, column: 5, scope: !17233)
!17256 = !DILocation(line: 46, column: 14, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17229, file: !1946, line: 46, column: 14)
!17258 = !DILocation(line: 46, column: 18, scope: !17257)
!17259 = !DILocation(line: 46, column: 14, scope: !17229)
!17260 = !DILocation(line: 48, column: 25, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17257, file: !1946, line: 47, column: 5)
!17262 = !DILocation(line: 48, column: 33, scope: !17261)
!17263 = !DILocation(line: 48, column: 48, scope: !17261)
!17264 = !DILocation(line: 48, column: 56, scope: !17261)
!17265 = !DILocation(line: 48, column: 7, scope: !17261)
!17266 = !DILocation(line: 49, column: 27, scope: !17261)
!17267 = !DILocation(line: 49, column: 36, scope: !17261)
!17268 = !DILocation(line: 49, column: 44, scope: !17261)
!17269 = !DILocation(line: 49, column: 13, scope: !17261)
!17270 = !DILocation(line: 49, column: 11, scope: !17261)
!17271 = !DILocation(line: 50, column: 26, scope: !17261)
!17272 = !DILocation(line: 50, column: 34, scope: !17261)
!17273 = !DILocation(line: 50, column: 48, scope: !17261)
!17274 = !DILocation(line: 50, column: 7, scope: !17261)
!17275 = !DILocation(line: 51, column: 5, scope: !17261)
!17276 = !DILocation(line: 52, column: 14, scope: !17277)
!17277 = distinct !DILexicalBlock(scope: !17257, file: !1946, line: 52, column: 14)
!17278 = !DILocation(line: 52, column: 18, scope: !17277)
!17279 = !DILocation(line: 52, column: 14, scope: !17257)
!17280 = !DILocalVariable(name: "result", scope: !17281, file: !1946, line: 54, type: !17)
!17281 = distinct !DILexicalBlock(scope: !17277, file: !1946, line: 53, column: 5)
!17282 = !DILocation(line: 54, column: 12, scope: !17281)
!17283 = !DILocation(line: 55, column: 11, scope: !17284)
!17284 = distinct !DILexicalBlock(scope: !17281, file: !1946, line: 55, column: 11)
!17285 = !DILocation(line: 55, column: 19, scope: !17284)
!17286 = !DILocation(line: 55, column: 27, scope: !17284)
!17287 = !DILocation(line: 55, column: 33, scope: !17284)
!17288 = !DILocation(line: 55, column: 36, scope: !17284)
!17289 = !DILocation(line: 55, column: 44, scope: !17284)
!17290 = !DILocation(line: 55, column: 55, scope: !17284)
!17291 = !DILocation(line: 55, column: 11, scope: !17281)
!17292 = !DILocation(line: 57, column: 9, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17284, file: !1946, line: 56, column: 7)
!17294 = !DILocation(line: 58, column: 7, scope: !17293)
!17295 = !DILocation(line: 59, column: 43, scope: !17281)
!17296 = !DILocation(line: 59, column: 51, scope: !17281)
!17297 = !DILocation(line: 59, column: 25, scope: !17281)
!17298 = !DILocation(line: 59, column: 7, scope: !17281)
!17299 = !DILocation(line: 59, column: 15, scope: !17281)
!17300 = !DILocation(line: 59, column: 23, scope: !17281)
!17301 = !DILocation(line: 60, column: 24, scope: !17281)
!17302 = !DILocation(line: 60, column: 32, scope: !17281)
!17303 = !DILocation(line: 60, column: 40, scope: !17281)
!17304 = !DILocation(line: 60, column: 13, scope: !17281)
!17305 = !DILocation(line: 60, column: 11, scope: !17281)
!17306 = !DILocation(line: 61, column: 11, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17281, file: !1946, line: 61, column: 11)
!17308 = !DILocation(line: 61, column: 15, scope: !17307)
!17309 = !DILocation(line: 61, column: 11, scope: !17281)
!17310 = !DILocation(line: 63, column: 16, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17307, file: !1946, line: 62, column: 7)
!17312 = !DILocation(line: 64, column: 7, scope: !17311)
!17313 = !DILocation(line: 67, column: 27, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17307, file: !1946, line: 66, column: 7)
!17315 = !DILocation(line: 67, column: 35, scope: !17314)
!17316 = !DILocation(line: 67, column: 9, scope: !17314)
!17317 = !DILocation(line: 68, column: 9, scope: !17314)
!17318 = !DILocation(line: 68, column: 17, scope: !17314)
!17319 = !DILocation(line: 68, column: 25, scope: !17314)
!17320 = !DILocation(line: 70, column: 29, scope: !17281)
!17321 = !DILocation(line: 70, column: 37, scope: !17281)
!17322 = !DILocation(line: 70, column: 51, scope: !17281)
!17323 = !DILocation(line: 70, column: 7, scope: !17281)
!17324 = !DILocation(line: 71, column: 5, scope: !17281)
!17325 = !DILocation(line: 72, column: 14, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17277, file: !1946, line: 72, column: 14)
!17327 = !DILocation(line: 72, column: 18, scope: !17326)
!17328 = !DILocation(line: 72, column: 14, scope: !17277)
!17329 = !DILocalVariable(name: "size", scope: !17330, file: !1946, line: 74, type: !19)
!17330 = distinct !DILexicalBlock(scope: !17326, file: !1946, line: 73, column: 5)
!17331 = !DILocation(line: 74, column: 11, scope: !17330)
!17332 = !DILocation(line: 74, column: 36, scope: !17330)
!17333 = !DILocation(line: 74, column: 44, scope: !17330)
!17334 = !DILocation(line: 74, column: 18, scope: !17330)
!17335 = !DILocation(line: 75, column: 11, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17330, file: !1946, line: 75, column: 11)
!17337 = !DILocation(line: 75, column: 16, scope: !17336)
!17338 = !DILocation(line: 75, column: 21, scope: !17336)
!17339 = !DILocation(line: 75, column: 24, scope: !17336)
!17340 = !DILocation(line: 75, column: 29, scope: !17336)
!17341 = !DILocation(line: 75, column: 11, scope: !17330)
!17342 = !DILocation(line: 77, column: 9, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17336, file: !1946, line: 76, column: 7)
!17344 = !DILocation(line: 78, column: 7, scope: !17343)
!17345 = !DILocation(line: 79, column: 11, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17330, file: !1946, line: 79, column: 11)
!17347 = !DILocation(line: 79, column: 19, scope: !17346)
!17348 = !DILocation(line: 79, column: 27, scope: !17346)
!17349 = !DILocation(line: 79, column: 33, scope: !17346)
!17350 = !DILocation(line: 79, column: 36, scope: !17346)
!17351 = !DILocation(line: 79, column: 44, scope: !17346)
!17352 = !DILocation(line: 79, column: 55, scope: !17346)
!17353 = !DILocation(line: 79, column: 11, scope: !17330)
!17354 = !DILocation(line: 81, column: 9, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17346, file: !1946, line: 80, column: 7)
!17356 = !DILocation(line: 82, column: 7, scope: !17355)
!17357 = !DILocation(line: 83, column: 43, scope: !17330)
!17358 = !DILocation(line: 83, column: 7, scope: !17330)
!17359 = !DILocation(line: 84, column: 31, scope: !17330)
!17360 = !DILocation(line: 84, column: 39, scope: !17330)
!17361 = !DILocation(line: 84, column: 47, scope: !17330)
!17362 = !DILocation(line: 84, column: 13, scope: !17330)
!17363 = !DILocation(line: 84, column: 11, scope: !17330)
!17364 = !DILocation(line: 85, column: 26, scope: !17330)
!17365 = !DILocation(line: 85, column: 34, scope: !17330)
!17366 = !DILocation(line: 85, column: 48, scope: !17330)
!17367 = !DILocation(line: 85, column: 7, scope: !17330)
!17368 = !DILocation(line: 86, column: 26, scope: !17330)
!17369 = !DILocation(line: 86, column: 34, scope: !17330)
!17370 = !DILocation(line: 86, column: 7, scope: !17330)
!17371 = !DILocation(line: 87, column: 5, scope: !17330)
!17372 = !DILocation(line: 88, column: 14, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17326, file: !1946, line: 88, column: 14)
!17374 = !DILocation(line: 88, column: 18, scope: !17373)
!17375 = !DILocation(line: 88, column: 14, scope: !17326)
!17376 = !DILocation(line: 90, column: 11, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17378, file: !1946, line: 90, column: 11)
!17378 = distinct !DILexicalBlock(scope: !17373, file: !1946, line: 89, column: 5)
!17379 = !DILocation(line: 90, column: 19, scope: !17377)
!17380 = !DILocation(line: 90, column: 27, scope: !17377)
!17381 = !DILocation(line: 90, column: 33, scope: !17377)
!17382 = !DILocation(line: 90, column: 36, scope: !17377)
!17383 = !DILocation(line: 90, column: 44, scope: !17377)
!17384 = !DILocation(line: 90, column: 55, scope: !17377)
!17385 = !DILocation(line: 90, column: 11, scope: !17378)
!17386 = !DILocation(line: 92, column: 9, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17377, file: !1946, line: 91, column: 7)
!17388 = !DILocation(line: 93, column: 7, scope: !17387)
!17389 = !DILocation(line: 94, column: 25, scope: !17378)
!17390 = !DILocation(line: 94, column: 33, scope: !17378)
!17391 = !DILocation(line: 94, column: 7, scope: !17378)
!17392 = !DILocation(line: 95, column: 23, scope: !17378)
!17393 = !DILocation(line: 95, column: 31, scope: !17378)
!17394 = !DILocation(line: 96, column: 23, scope: !17378)
!17395 = !DILocation(line: 97, column: 23, scope: !17378)
!17396 = !DILocation(line: 95, column: 13, scope: !17378)
!17397 = !DILocation(line: 95, column: 11, scope: !17378)
!17398 = !DILocation(line: 98, column: 26, scope: !17378)
!17399 = !DILocation(line: 98, column: 34, scope: !17378)
!17400 = !DILocation(line: 98, column: 48, scope: !17378)
!17401 = !DILocation(line: 98, column: 7, scope: !17378)
!17402 = !DILocation(line: 99, column: 5, scope: !17378)
!17403 = !DILocation(line: 100, column: 14, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17373, file: !1946, line: 100, column: 14)
!17405 = !DILocation(line: 100, column: 18, scope: !17404)
!17406 = !DILocation(line: 100, column: 14, scope: !17373)
!17407 = !DILocalVariable(name: "result", scope: !17408, file: !1946, line: 102, type: !17)
!17408 = distinct !DILexicalBlock(scope: !17404, file: !1946, line: 101, column: 5)
!17409 = !DILocation(line: 102, column: 12, scope: !17408)
!17410 = !DILocation(line: 103, column: 11, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17408, file: !1946, line: 103, column: 11)
!17412 = !DILocation(line: 103, column: 19, scope: !17411)
!17413 = !DILocation(line: 103, column: 27, scope: !17411)
!17414 = !DILocation(line: 103, column: 33, scope: !17411)
!17415 = !DILocation(line: 103, column: 36, scope: !17411)
!17416 = !DILocation(line: 103, column: 44, scope: !17411)
!17417 = !DILocation(line: 103, column: 55, scope: !17411)
!17418 = !DILocation(line: 103, column: 11, scope: !17408)
!17419 = !DILocation(line: 105, column: 16, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17411, file: !1946, line: 104, column: 7)
!17421 = !DILocation(line: 106, column: 7, scope: !17420)
!17422 = !DILocation(line: 109, column: 13, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17424, file: !1946, line: 109, column: 13)
!17424 = distinct !DILexicalBlock(scope: !17411, file: !1946, line: 108, column: 7)
!17425 = !DILocation(line: 109, column: 21, scope: !17423)
!17426 = !DILocation(line: 109, column: 29, scope: !17423)
!17427 = !DILocation(line: 109, column: 35, scope: !17423)
!17428 = !DILocation(line: 109, column: 38, scope: !17423)
!17429 = !DILocation(line: 109, column: 46, scope: !17423)
!17430 = !DILocation(line: 109, column: 57, scope: !17423)
!17431 = !DILocation(line: 109, column: 13, scope: !17424)
!17432 = !DILocation(line: 111, column: 11, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17423, file: !1946, line: 110, column: 9)
!17434 = !DILocation(line: 112, column: 9, scope: !17433)
!17435 = !DILocation(line: 113, column: 30, scope: !17424)
!17436 = !DILocation(line: 113, column: 15, scope: !17424)
!17437 = !DILocation(line: 113, column: 13, scope: !17424)
!17438 = !DILocation(line: 114, column: 13, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17424, file: !1946, line: 114, column: 13)
!17440 = !DILocation(line: 114, column: 17, scope: !17439)
!17441 = !DILocation(line: 114, column: 13, scope: !17424)
!17442 = !DILocation(line: 116, column: 18, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17439, file: !1946, line: 115, column: 9)
!17444 = !DILocation(line: 117, column: 9, scope: !17443)
!17445 = !DILocation(line: 118, column: 27, scope: !17424)
!17446 = !DILocation(line: 118, column: 35, scope: !17424)
!17447 = !DILocation(line: 118, column: 9, scope: !17424)
!17448 = !DILocation(line: 119, column: 9, scope: !17424)
!17449 = !DILocation(line: 119, column: 17, scope: !17424)
!17450 = !DILocation(line: 119, column: 25, scope: !17424)
!17451 = !DILocation(line: 121, column: 29, scope: !17408)
!17452 = !DILocation(line: 121, column: 37, scope: !17408)
!17453 = !DILocation(line: 121, column: 51, scope: !17408)
!17454 = !DILocation(line: 121, column: 7, scope: !17408)
!17455 = !DILocation(line: 122, column: 5, scope: !17408)
!17456 = !DILocation(line: 125, column: 7, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17404, file: !1946, line: 124, column: 5)
!17458 = distinct !{!17458, !17219, !17459}
!17459 = !DILocation(line: 127, column: 3, scope: !17137)
!17460 = !DILocation(line: 128, column: 1, scope: !17137)
!17461 = distinct !DISubprogram(name: "ptrace_sandbox_alloc", scope: !1949, file: !1949, line: 1140, type: !17462, scopeLine: 1141, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17462 = !DISubroutineType(types: !17463)
!17463 = !{!13414}
!17464 = !DILocation(line: 1142, column: 3, scope: !17461)
!17465 = distinct !DISubprogram(name: "ptrace_sandbox_free", scope: !1949, file: !1949, line: 1146, type: !17466, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17466 = !DISubroutineType(types: !17467)
!17467 = !{null, !13414}
!17468 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17465, file: !1949, line: 1146, type: !13414)
!17469 = !DILocation(line: 1146, column: 40, scope: !17465)
!17470 = !DILocation(line: 1148, column: 10, scope: !17465)
!17471 = !DILocation(line: 1149, column: 1, scope: !17465)
!17472 = distinct !DISubprogram(name: "ptrace_sandbox_launch_process", scope: !1949, file: !1949, line: 1152, type: !17473, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17473 = !DISubroutineType(types: !17474)
!17474 = !{!19, !13414, !1652, !80}
!17475 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17472, file: !1949, line: 1152, type: !13414)
!17476 = !DILocation(line: 1152, column: 50, scope: !17472)
!17477 = !DILocalVariable(name: "p_func", arg: 2, scope: !17472, file: !1949, line: 1153, type: !1652)
!17478 = !DILocation(line: 1153, column: 38, scope: !17472)
!17479 = !DILocalVariable(name: "p_arg", arg: 3, scope: !17472, file: !1949, line: 1154, type: !80)
!17480 = !DILocation(line: 1154, column: 37, scope: !17472)
!17481 = !DILocation(line: 1156, column: 10, scope: !17472)
!17482 = !DILocation(line: 1157, column: 10, scope: !17472)
!17483 = !DILocation(line: 1158, column: 10, scope: !17472)
!17484 = !DILocation(line: 1159, column: 3, scope: !17472)
!17485 = distinct !DISubprogram(name: "ptrace_sandbox_run_processes", scope: !1949, file: !1949, line: 1163, type: !17486, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17486 = !DISubroutineType(types: !17487)
!17487 = !{!19, !13414}
!17488 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17485, file: !1949, line: 1163, type: !13414)
!17489 = !DILocation(line: 1163, column: 49, scope: !17485)
!17490 = !DILocation(line: 1165, column: 10, scope: !17485)
!17491 = !DILocation(line: 1166, column: 3, scope: !17485)
!17492 = distinct !DISubprogram(name: "ptrace_sandbox_attach_point", scope: !1949, file: !1949, line: 1170, type: !1619, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17493 = !DILocation(line: 1172, column: 1, scope: !17492)
!17494 = distinct !DISubprogram(name: "ptrace_sandbox_permit_exit", scope: !1949, file: !1949, line: 1175, type: !17466, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17495 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17494, file: !1949, line: 1175, type: !13414)
!17496 = !DILocation(line: 1175, column: 47, scope: !17494)
!17497 = !DILocation(line: 1177, column: 10, scope: !17494)
!17498 = !DILocation(line: 1178, column: 1, scope: !17494)
!17499 = distinct !DISubprogram(name: "ptrace_sandbox_permit_read", scope: !1949, file: !1949, line: 1181, type: !17466, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17500 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17499, file: !1949, line: 1181, type: !13414)
!17501 = !DILocation(line: 1181, column: 47, scope: !17499)
!17502 = !DILocation(line: 1183, column: 10, scope: !17499)
!17503 = !DILocation(line: 1184, column: 1, scope: !17499)
!17504 = distinct !DISubprogram(name: "ptrace_sandbox_permit_write", scope: !1949, file: !1949, line: 1187, type: !17466, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17505 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17504, file: !1949, line: 1187, type: !13414)
!17506 = !DILocation(line: 1187, column: 48, scope: !17504)
!17507 = !DILocation(line: 1189, column: 10, scope: !17504)
!17508 = !DILocation(line: 1190, column: 1, scope: !17504)
!17509 = distinct !DISubprogram(name: "ptrace_sandbox_permit_sigaction", scope: !1949, file: !1949, line: 1193, type: !17466, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17510 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17509, file: !1949, line: 1193, type: !13414)
!17511 = !DILocation(line: 1193, column: 52, scope: !17509)
!17512 = !DILocation(line: 1195, column: 10, scope: !17509)
!17513 = !DILocation(line: 1196, column: 1, scope: !17509)
!17514 = distinct !DISubprogram(name: "ptrace_sandbox_permit_alarm", scope: !1949, file: !1949, line: 1199, type: !17466, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17515 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17514, file: !1949, line: 1199, type: !13414)
!17516 = !DILocation(line: 1199, column: 48, scope: !17514)
!17517 = !DILocation(line: 1201, column: 10, scope: !17514)
!17518 = !DILocation(line: 1202, column: 1, scope: !17514)
!17519 = distinct !DISubprogram(name: "ptrace_sandbox_permit_query_time", scope: !1949, file: !1949, line: 1205, type: !17466, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17520 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17519, file: !1949, line: 1205, type: !13414)
!17521 = !DILocation(line: 1205, column: 53, scope: !17519)
!17522 = !DILocation(line: 1207, column: 10, scope: !17519)
!17523 = !DILocation(line: 1208, column: 1, scope: !17519)
!17524 = distinct !DISubprogram(name: "ptrace_sandbox_permit_mmap", scope: !1949, file: !1949, line: 1211, type: !17466, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17525 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17524, file: !1949, line: 1211, type: !13414)
!17526 = !DILocation(line: 1211, column: 47, scope: !17524)
!17527 = !DILocation(line: 1213, column: 10, scope: !17524)
!17528 = !DILocation(line: 1214, column: 1, scope: !17524)
!17529 = distinct !DISubprogram(name: "ptrace_sandbox_permit_mprotect", scope: !1949, file: !1949, line: 1217, type: !17466, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17530 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17529, file: !1949, line: 1217, type: !13414)
!17531 = !DILocation(line: 1217, column: 51, scope: !17529)
!17532 = !DILocation(line: 1219, column: 10, scope: !17529)
!17533 = !DILocation(line: 1220, column: 1, scope: !17529)
!17534 = distinct !DISubprogram(name: "ptrace_sandbox_permit_file_stats", scope: !1949, file: !1949, line: 1223, type: !17466, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17535 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17534, file: !1949, line: 1223, type: !13414)
!17536 = !DILocation(line: 1223, column: 53, scope: !17534)
!17537 = !DILocation(line: 1225, column: 10, scope: !17534)
!17538 = !DILocation(line: 1226, column: 1, scope: !17534)
!17539 = distinct !DISubprogram(name: "ptrace_sandbox_permit_fd_stats", scope: !1949, file: !1949, line: 1229, type: !17466, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17540 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17539, file: !1949, line: 1229, type: !13414)
!17541 = !DILocation(line: 1229, column: 51, scope: !17539)
!17542 = !DILocation(line: 1231, column: 10, scope: !17539)
!17543 = !DILocation(line: 1232, column: 1, scope: !17539)
!17544 = distinct !DISubprogram(name: "ptrace_sandbox_permit_getcwd", scope: !1949, file: !1949, line: 1235, type: !17466, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17545 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17544, file: !1949, line: 1235, type: !13414)
!17546 = !DILocation(line: 1235, column: 49, scope: !17544)
!17547 = !DILocation(line: 1237, column: 10, scope: !17544)
!17548 = !DILocation(line: 1238, column: 1, scope: !17544)
!17549 = distinct !DISubprogram(name: "ptrace_sandbox_permit_chdir", scope: !1949, file: !1949, line: 1241, type: !17466, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17550 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17549, file: !1949, line: 1241, type: !13414)
!17551 = !DILocation(line: 1241, column: 48, scope: !17549)
!17552 = !DILocation(line: 1243, column: 10, scope: !17549)
!17553 = !DILocation(line: 1244, column: 1, scope: !17549)
!17554 = distinct !DISubprogram(name: "ptrace_sandbox_permit_umask", scope: !1949, file: !1949, line: 1247, type: !17466, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17555 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17554, file: !1949, line: 1247, type: !13414)
!17556 = !DILocation(line: 1247, column: 48, scope: !17554)
!17557 = !DILocation(line: 1249, column: 10, scope: !17554)
!17558 = !DILocation(line: 1250, column: 1, scope: !17554)
!17559 = distinct !DISubprogram(name: "ptrace_sandbox_permit_open", scope: !1949, file: !1949, line: 1253, type: !17560, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17560 = !DISubroutineType(types: !17561)
!17561 = !{null, !13414, !19}
!17562 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17559, file: !1949, line: 1253, type: !13414)
!17563 = !DILocation(line: 1253, column: 47, scope: !17559)
!17564 = !DILocalVariable(name: "writeable", arg: 2, scope: !17559, file: !1949, line: 1253, type: !19)
!17565 = !DILocation(line: 1253, column: 62, scope: !17559)
!17566 = !DILocation(line: 1255, column: 10, scope: !17559)
!17567 = !DILocation(line: 1256, column: 10, scope: !17559)
!17568 = !DILocation(line: 1257, column: 1, scope: !17559)
!17569 = distinct !DISubprogram(name: "ptrace_sandbox_permit_close", scope: !1949, file: !1949, line: 1260, type: !17466, scopeLine: 1261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17570 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17569, file: !1949, line: 1260, type: !13414)
!17571 = !DILocation(line: 1260, column: 48, scope: !17569)
!17572 = !DILocation(line: 1262, column: 10, scope: !17569)
!17573 = !DILocation(line: 1263, column: 1, scope: !17569)
!17574 = distinct !DISubprogram(name: "ptrace_sandbox_permit_getdents", scope: !1949, file: !1949, line: 1266, type: !17466, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17575 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17574, file: !1949, line: 1266, type: !13414)
!17576 = !DILocation(line: 1266, column: 51, scope: !17574)
!17577 = !DILocation(line: 1268, column: 10, scope: !17574)
!17578 = !DILocation(line: 1269, column: 1, scope: !17574)
!17579 = distinct !DISubprogram(name: "ptrace_sandbox_permit_fcntl", scope: !1949, file: !1949, line: 1272, type: !17466, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17580 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17579, file: !1949, line: 1272, type: !13414)
!17581 = !DILocation(line: 1272, column: 48, scope: !17579)
!17582 = !DILocation(line: 1274, column: 10, scope: !17579)
!17583 = !DILocation(line: 1275, column: 1, scope: !17579)
!17584 = distinct !DISubprogram(name: "ptrace_sandbox_permit_sendfile", scope: !1949, file: !1949, line: 1278, type: !17466, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17585 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17584, file: !1949, line: 1278, type: !13414)
!17586 = !DILocation(line: 1278, column: 51, scope: !17584)
!17587 = !DILocation(line: 1280, column: 10, scope: !17584)
!17588 = !DILocation(line: 1281, column: 1, scope: !17584)
!17589 = distinct !DISubprogram(name: "ptrace_sandbox_permit_seek", scope: !1949, file: !1949, line: 1284, type: !17466, scopeLine: 1285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17590 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17589, file: !1949, line: 1284, type: !13414)
!17591 = !DILocation(line: 1284, column: 47, scope: !17589)
!17592 = !DILocation(line: 1286, column: 10, scope: !17589)
!17593 = !DILocation(line: 1287, column: 1, scope: !17589)
!17594 = distinct !DISubprogram(name: "ptrace_sandbox_permit_select", scope: !1949, file: !1949, line: 1290, type: !17466, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17595 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17594, file: !1949, line: 1290, type: !13414)
!17596 = !DILocation(line: 1290, column: 49, scope: !17594)
!17597 = !DILocation(line: 1292, column: 10, scope: !17594)
!17598 = !DILocation(line: 1293, column: 1, scope: !17594)
!17599 = distinct !DISubprogram(name: "ptrace_sandbox_permit_unlink", scope: !1949, file: !1949, line: 1296, type: !17466, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17600 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17599, file: !1949, line: 1296, type: !13414)
!17601 = !DILocation(line: 1296, column: 49, scope: !17599)
!17602 = !DILocation(line: 1298, column: 10, scope: !17599)
!17603 = !DILocation(line: 1299, column: 1, scope: !17599)
!17604 = distinct !DISubprogram(name: "ptrace_sandbox_permit_mkdir", scope: !1949, file: !1949, line: 1302, type: !17466, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17605 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17604, file: !1949, line: 1302, type: !13414)
!17606 = !DILocation(line: 1302, column: 48, scope: !17604)
!17607 = !DILocation(line: 1304, column: 10, scope: !17604)
!17608 = !DILocation(line: 1305, column: 1, scope: !17604)
!17609 = distinct !DISubprogram(name: "ptrace_sandbox_permit_rmdir", scope: !1949, file: !1949, line: 1308, type: !17466, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17610 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17609, file: !1949, line: 1308, type: !13414)
!17611 = !DILocation(line: 1308, column: 48, scope: !17609)
!17612 = !DILocation(line: 1310, column: 10, scope: !17609)
!17613 = !DILocation(line: 1311, column: 1, scope: !17609)
!17614 = distinct !DISubprogram(name: "ptrace_sandbox_permit_rename", scope: !1949, file: !1949, line: 1314, type: !17466, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17615 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17614, file: !1949, line: 1314, type: !13414)
!17616 = !DILocation(line: 1314, column: 49, scope: !17614)
!17617 = !DILocation(line: 1316, column: 10, scope: !17614)
!17618 = !DILocation(line: 1317, column: 1, scope: !17614)
!17619 = distinct !DISubprogram(name: "ptrace_sandbox_permit_utime", scope: !1949, file: !1949, line: 1320, type: !17466, scopeLine: 1321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17620 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17619, file: !1949, line: 1320, type: !13414)
!17621 = !DILocation(line: 1320, column: 48, scope: !17619)
!17622 = !DILocation(line: 1322, column: 10, scope: !17619)
!17623 = !DILocation(line: 1323, column: 1, scope: !17619)
!17624 = distinct !DISubprogram(name: "ptrace_sandbox_permit_utimes", scope: !1949, file: !1949, line: 1326, type: !17466, scopeLine: 1327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17625 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17624, file: !1949, line: 1326, type: !13414)
!17626 = !DILocation(line: 1326, column: 49, scope: !17624)
!17627 = !DILocation(line: 1328, column: 10, scope: !17624)
!17628 = !DILocation(line: 1329, column: 1, scope: !17624)
!17629 = distinct !DISubprogram(name: "ptrace_sandbox_permit_sigreturn", scope: !1949, file: !1949, line: 1332, type: !17466, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17630 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17629, file: !1949, line: 1332, type: !13414)
!17631 = !DILocation(line: 1332, column: 52, scope: !17629)
!17632 = !DILocation(line: 1334, column: 10, scope: !17629)
!17633 = !DILocation(line: 1335, column: 1, scope: !17629)
!17634 = distinct !DISubprogram(name: "ptrace_sandbox_permit_recv", scope: !1949, file: !1949, line: 1338, type: !17466, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17635 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17634, file: !1949, line: 1338, type: !13414)
!17636 = !DILocation(line: 1338, column: 47, scope: !17634)
!17637 = !DILocation(line: 1340, column: 10, scope: !17634)
!17638 = !DILocation(line: 1341, column: 1, scope: !17634)
!17639 = distinct !DISubprogram(name: "ptrace_sandbox_kill_processes", scope: !1949, file: !1949, line: 1344, type: !17466, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17640 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17639, file: !1949, line: 1344, type: !13414)
!17641 = !DILocation(line: 1344, column: 50, scope: !17639)
!17642 = !DILocation(line: 1346, column: 10, scope: !17639)
!17643 = !DILocation(line: 1347, column: 1, scope: !17639)
!17644 = distinct !DISubprogram(name: "ptrace_sandbox_get_arg", scope: !1949, file: !1949, line: 1350, type: !17645, scopeLine: 1353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17645 = !DISubroutineType(types: !17646)
!17646 = !{!19, !13414, !19, !17647}
!17647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!17648 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17644, file: !1949, line: 1350, type: !13414)
!17649 = !DILocation(line: 1350, column: 43, scope: !17644)
!17650 = !DILocalVariable(name: "arg", arg: 2, scope: !17644, file: !1949, line: 1351, type: !19)
!17651 = !DILocation(line: 1351, column: 28, scope: !17644)
!17652 = !DILocalVariable(name: "p_out", arg: 3, scope: !17644, file: !1949, line: 1352, type: !17647)
!17653 = !DILocation(line: 1352, column: 39, scope: !17644)
!17654 = !DILocation(line: 1354, column: 10, scope: !17644)
!17655 = !DILocation(line: 1355, column: 10, scope: !17644)
!17656 = !DILocation(line: 1356, column: 10, scope: !17644)
!17657 = !DILocation(line: 1357, column: 3, scope: !17644)
!17658 = distinct !DISubprogram(name: "ptrace_sandbox_get_socketcall_arg", scope: !1949, file: !1949, line: 1361, type: !17645, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17659 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17658, file: !1949, line: 1361, type: !13414)
!17660 = !DILocation(line: 1361, column: 54, scope: !17658)
!17661 = !DILocalVariable(name: "arg", arg: 2, scope: !17658, file: !1949, line: 1362, type: !19)
!17662 = !DILocation(line: 1362, column: 39, scope: !17658)
!17663 = !DILocalVariable(name: "p_out", arg: 3, scope: !17658, file: !1949, line: 1363, type: !17647)
!17664 = !DILocation(line: 1363, column: 50, scope: !17658)
!17665 = !DILocation(line: 1365, column: 10, scope: !17658)
!17666 = !DILocation(line: 1366, column: 10, scope: !17658)
!17667 = !DILocation(line: 1367, column: 10, scope: !17658)
!17668 = !DILocation(line: 1368, column: 3, scope: !17658)
!17669 = distinct !DISubprogram(name: "ptrace_sandbox_get_long", scope: !1949, file: !1949, line: 1372, type: !17670, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17670 = !DISubroutineType(types: !17671)
!17671 = !{!19, !13414, !65, !17647}
!17672 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17669, file: !1949, line: 1372, type: !13414)
!17673 = !DILocation(line: 1372, column: 44, scope: !17669)
!17674 = !DILocalVariable(name: "ptr", arg: 2, scope: !17669, file: !1949, line: 1373, type: !65)
!17675 = !DILocation(line: 1373, column: 39, scope: !17669)
!17676 = !DILocalVariable(name: "p_out", arg: 3, scope: !17669, file: !1949, line: 1374, type: !17647)
!17677 = !DILocation(line: 1374, column: 40, scope: !17669)
!17678 = !DILocation(line: 1376, column: 10, scope: !17669)
!17679 = !DILocation(line: 1377, column: 10, scope: !17669)
!17680 = !DILocation(line: 1378, column: 10, scope: !17669)
!17681 = !DILocation(line: 1379, column: 3, scope: !17669)
!17682 = distinct !DISubprogram(name: "ptrace_sandbox_get_buf", scope: !1949, file: !1949, line: 1383, type: !17683, scopeLine: 1387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17683 = !DISubroutineType(types: !17684)
!17684 = !{!19, !13414, !65, !65, !80}
!17685 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17682, file: !1949, line: 1383, type: !13414)
!17686 = !DILocation(line: 1383, column: 43, scope: !17682)
!17687 = !DILocalVariable(name: "ptr", arg: 2, scope: !17682, file: !1949, line: 1384, type: !65)
!17688 = !DILocation(line: 1384, column: 38, scope: !17682)
!17689 = !DILocalVariable(name: "len", arg: 3, scope: !17682, file: !1949, line: 1385, type: !65)
!17690 = !DILocation(line: 1385, column: 38, scope: !17682)
!17691 = !DILocalVariable(name: "p_buf", arg: 4, scope: !17682, file: !1949, line: 1386, type: !80)
!17692 = !DILocation(line: 1386, column: 30, scope: !17682)
!17693 = !DILocation(line: 1388, column: 10, scope: !17682)
!17694 = !DILocation(line: 1389, column: 10, scope: !17682)
!17695 = !DILocation(line: 1390, column: 10, scope: !17682)
!17696 = !DILocation(line: 1391, column: 10, scope: !17682)
!17697 = !DILocation(line: 1392, column: 3, scope: !17682)
!17698 = distinct !DISubprogram(name: "ptrace_sandbox_permit_readlink", scope: !1949, file: !1949, line: 1396, type: !17466, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17699 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17698, file: !1949, line: 1396, type: !13414)
!17700 = !DILocation(line: 1396, column: 51, scope: !17698)
!17701 = !DILocation(line: 1398, column: 10, scope: !17698)
!17702 = !DILocation(line: 1399, column: 1, scope: !17698)
!17703 = distinct !DISubprogram(name: "ptrace_sandbox_permit_brk", scope: !1949, file: !1949, line: 1402, type: !17466, scopeLine: 1403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17704 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17703, file: !1949, line: 1402, type: !13414)
!17705 = !DILocation(line: 1402, column: 46, scope: !17703)
!17706 = !DILocation(line: 1404, column: 10, scope: !17703)
!17707 = !DILocation(line: 1405, column: 1, scope: !17703)
!17708 = distinct !DISubprogram(name: "ptrace_sandbox_permit_sleep", scope: !1949, file: !1949, line: 1408, type: !17466, scopeLine: 1409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17709 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17708, file: !1949, line: 1408, type: !13414)
!17710 = !DILocation(line: 1408, column: 48, scope: !17708)
!17711 = !DILocation(line: 1410, column: 10, scope: !17708)
!17712 = !DILocation(line: 1411, column: 1, scope: !17708)
!17713 = distinct !DISubprogram(name: "ptrace_sandbox_permit_fchmod", scope: !1949, file: !1949, line: 1414, type: !17466, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17714 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17713, file: !1949, line: 1414, type: !13414)
!17715 = !DILocation(line: 1414, column: 49, scope: !17713)
!17716 = !DILocation(line: 1416, column: 10, scope: !17713)
!17717 = !DILocation(line: 1417, column: 1, scope: !17713)
!17718 = distinct !DISubprogram(name: "ptrace_sandbox_permit_chmod", scope: !1949, file: !1949, line: 1420, type: !17466, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17719 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17718, file: !1949, line: 1420, type: !13414)
!17720 = !DILocation(line: 1420, column: 48, scope: !17718)
!17721 = !DILocation(line: 1422, column: 10, scope: !17718)
!17722 = !DILocation(line: 1423, column: 1, scope: !17718)
!17723 = distinct !DISubprogram(name: "ptrace_sandbox_permit_fchown", scope: !1949, file: !1949, line: 1426, type: !17466, scopeLine: 1427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17724 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17723, file: !1949, line: 1426, type: !13414)
!17725 = !DILocation(line: 1426, column: 49, scope: !17723)
!17726 = !DILocation(line: 1428, column: 10, scope: !17723)
!17727 = !DILocation(line: 1429, column: 1, scope: !17723)
!17728 = distinct !DISubprogram(name: "ptrace_sandbox_permit_mremap", scope: !1949, file: !1949, line: 1432, type: !17466, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17729 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17728, file: !1949, line: 1432, type: !13414)
!17730 = !DILocation(line: 1432, column: 49, scope: !17728)
!17731 = !DILocation(line: 1434, column: 10, scope: !17728)
!17732 = !DILocation(line: 1435, column: 1, scope: !17728)
!17733 = distinct !DISubprogram(name: "ptrace_sandbox_permit_ftruncate", scope: !1949, file: !1949, line: 1438, type: !17466, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17734 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17733, file: !1949, line: 1438, type: !13414)
!17735 = !DILocation(line: 1438, column: 52, scope: !17733)
!17736 = !DILocation(line: 1440, column: 10, scope: !17733)
!17737 = !DILocation(line: 1441, column: 1, scope: !17733)
!17738 = distinct !DISubprogram(name: "ptrace_sandbox_permit_socket", scope: !1949, file: !1949, line: 1444, type: !17466, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17739 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17738, file: !1949, line: 1444, type: !13414)
!17740 = !DILocation(line: 1444, column: 49, scope: !17738)
!17741 = !DILocation(line: 1446, column: 10, scope: !17738)
!17742 = !DILocation(line: 1447, column: 1, scope: !17738)
!17743 = distinct !DISubprogram(name: "ptrace_sandbox_set_socket_validator", scope: !1949, file: !1949, line: 1450, type: !17744, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17744 = !DISubroutineType(types: !17745)
!17745 = !{null, !13414, !17746, !80}
!17746 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrace_sandbox_validator_t", file: !13416, line: 7, baseType: !17747)
!17747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17748, size: 64)
!17748 = !DISubroutineType(types: !17749)
!17749 = !{!19, !13414, !80}
!17750 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17743, file: !1949, line: 1450, type: !13414)
!17751 = !DILocation(line: 1450, column: 56, scope: !17743)
!17752 = !DILocalVariable(name: "val", arg: 2, scope: !17743, file: !1949, line: 1451, type: !17746)
!17753 = !DILocation(line: 1451, column: 64, scope: !17743)
!17754 = !DILocalVariable(name: "p_arg", arg: 3, scope: !17743, file: !1949, line: 1452, type: !80)
!17755 = !DILocation(line: 1452, column: 43, scope: !17743)
!17756 = !DILocation(line: 1454, column: 10, scope: !17743)
!17757 = !DILocation(line: 1455, column: 10, scope: !17743)
!17758 = !DILocation(line: 1456, column: 10, scope: !17743)
!17759 = !DILocation(line: 1457, column: 1, scope: !17743)
!17760 = distinct !DISubprogram(name: "ptrace_sandbox_permit_bind", scope: !1949, file: !1949, line: 1460, type: !17466, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17761 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17760, file: !1949, line: 1460, type: !13414)
!17762 = !DILocation(line: 1460, column: 47, scope: !17760)
!17763 = !DILocation(line: 1462, column: 10, scope: !17760)
!17764 = !DILocation(line: 1463, column: 1, scope: !17760)
!17765 = distinct !DISubprogram(name: "ptrace_sandbox_set_bind_validator", scope: !1949, file: !1949, line: 1466, type: !17744, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17766 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17765, file: !1949, line: 1466, type: !13414)
!17767 = !DILocation(line: 1466, column: 54, scope: !17765)
!17768 = !DILocalVariable(name: "val", arg: 2, scope: !17765, file: !1949, line: 1467, type: !17746)
!17769 = !DILocation(line: 1467, column: 62, scope: !17765)
!17770 = !DILocalVariable(name: "p_arg", arg: 3, scope: !17765, file: !1949, line: 1468, type: !80)
!17771 = !DILocation(line: 1468, column: 41, scope: !17765)
!17772 = !DILocation(line: 1470, column: 10, scope: !17765)
!17773 = !DILocation(line: 1471, column: 10, scope: !17765)
!17774 = !DILocation(line: 1472, column: 10, scope: !17765)
!17775 = !DILocation(line: 1473, column: 1, scope: !17765)
!17776 = distinct !DISubprogram(name: "ptrace_sandbox_permit_connect", scope: !1949, file: !1949, line: 1476, type: !17466, scopeLine: 1477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17777 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17776, file: !1949, line: 1476, type: !13414)
!17778 = !DILocation(line: 1476, column: 50, scope: !17776)
!17779 = !DILocation(line: 1478, column: 10, scope: !17776)
!17780 = !DILocation(line: 1479, column: 1, scope: !17776)
!17781 = distinct !DISubprogram(name: "ptrace_sandbox_set_connect_validator", scope: !1949, file: !1949, line: 1482, type: !17744, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17782 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17781, file: !1949, line: 1482, type: !13414)
!17783 = !DILocation(line: 1482, column: 57, scope: !17781)
!17784 = !DILocalVariable(name: "val", arg: 2, scope: !17781, file: !1949, line: 1483, type: !17746)
!17785 = !DILocation(line: 1483, column: 65, scope: !17781)
!17786 = !DILocalVariable(name: "p_arg", arg: 3, scope: !17781, file: !1949, line: 1484, type: !80)
!17787 = !DILocation(line: 1484, column: 44, scope: !17781)
!17788 = !DILocation(line: 1486, column: 10, scope: !17781)
!17789 = !DILocation(line: 1487, column: 10, scope: !17781)
!17790 = !DILocation(line: 1488, column: 10, scope: !17781)
!17791 = !DILocation(line: 1489, column: 1, scope: !17781)
!17792 = distinct !DISubprogram(name: "ptrace_sandbox_permit_listen", scope: !1949, file: !1949, line: 1492, type: !17466, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17793 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17792, file: !1949, line: 1492, type: !13414)
!17794 = !DILocation(line: 1492, column: 49, scope: !17792)
!17795 = !DILocation(line: 1494, column: 10, scope: !17792)
!17796 = !DILocation(line: 1495, column: 1, scope: !17792)
!17797 = distinct !DISubprogram(name: "ptrace_sandbox_permit_accept", scope: !1949, file: !1949, line: 1498, type: !17466, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17798 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17797, file: !1949, line: 1498, type: !13414)
!17799 = !DILocation(line: 1498, column: 49, scope: !17797)
!17800 = !DILocation(line: 1500, column: 10, scope: !17797)
!17801 = !DILocation(line: 1501, column: 1, scope: !17797)
!17802 = distinct !DISubprogram(name: "ptrace_sandbox_permit_setsockopt", scope: !1949, file: !1949, line: 1504, type: !17466, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17803 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17802, file: !1949, line: 1504, type: !13414)
!17804 = !DILocation(line: 1504, column: 53, scope: !17802)
!17805 = !DILocation(line: 1506, column: 10, scope: !17802)
!17806 = !DILocation(line: 1507, column: 1, scope: !17802)
!17807 = distinct !DISubprogram(name: "ptrace_sandbox_set_setsockopt_validator", scope: !1949, file: !1949, line: 1510, type: !17744, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17808 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17807, file: !1949, line: 1510, type: !13414)
!17809 = !DILocation(line: 1510, column: 60, scope: !17807)
!17810 = !DILocalVariable(name: "val", arg: 2, scope: !17807, file: !1949, line: 1511, type: !17746)
!17811 = !DILocation(line: 1511, column: 68, scope: !17807)
!17812 = !DILocalVariable(name: "p_arg", arg: 3, scope: !17807, file: !1949, line: 1512, type: !80)
!17813 = !DILocation(line: 1512, column: 47, scope: !17807)
!17814 = !DILocation(line: 1514, column: 10, scope: !17807)
!17815 = !DILocation(line: 1515, column: 10, scope: !17807)
!17816 = !DILocation(line: 1516, column: 10, scope: !17807)
!17817 = !DILocation(line: 1517, column: 1, scope: !17807)
!17818 = distinct !DISubprogram(name: "ptrace_sandbox_permit_getsockopt", scope: !1949, file: !1949, line: 1520, type: !17466, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17819 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17818, file: !1949, line: 1520, type: !13414)
!17820 = !DILocation(line: 1520, column: 53, scope: !17818)
!17821 = !DILocation(line: 1522, column: 10, scope: !17818)
!17822 = !DILocation(line: 1523, column: 1, scope: !17818)
!17823 = distinct !DISubprogram(name: "ptrace_sandbox_set_getsockopt_validator", scope: !1949, file: !1949, line: 1526, type: !17744, scopeLine: 1529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17824 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17823, file: !1949, line: 1526, type: !13414)
!17825 = !DILocation(line: 1526, column: 60, scope: !17823)
!17826 = !DILocalVariable(name: "val", arg: 2, scope: !17823, file: !1949, line: 1527, type: !17746)
!17827 = !DILocation(line: 1527, column: 68, scope: !17823)
!17828 = !DILocalVariable(name: "p_arg", arg: 3, scope: !17823, file: !1949, line: 1528, type: !80)
!17829 = !DILocation(line: 1528, column: 47, scope: !17823)
!17830 = !DILocation(line: 1530, column: 10, scope: !17823)
!17831 = !DILocation(line: 1531, column: 10, scope: !17823)
!17832 = !DILocation(line: 1532, column: 10, scope: !17823)
!17833 = !DILocation(line: 1533, column: 1, scope: !17823)
!17834 = distinct !DISubprogram(name: "ptrace_sandbox_permit_shutdown", scope: !1949, file: !1949, line: 1536, type: !17466, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !128)
!17835 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17834, file: !1949, line: 1536, type: !13414)
!17836 = !DILocation(line: 1536, column: 51, scope: !17834)
!17837 = !DILocation(line: 1538, column: 10, scope: !17834)
!17838 = !DILocation(line: 1539, column: 1, scope: !17834)
!17839 = distinct !DISubprogram(name: "policy_setup", scope: !1152, file: !1152, line: 30, type: !17840, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1158, retainedNodes: !128)
!17840 = !DISubroutineType(types: !17841)
!17841 = !{null, !1155, !17842}
!17842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17843, size: 64)
!17843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!17844 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !17839, file: !1152, line: 30, type: !1155)
!17845 = !DILocation(line: 30, column: 33, scope: !17839)
!17846 = !DILocalVariable(name: "p_sess", arg: 2, scope: !17839, file: !1152, line: 30, type: !17842)
!17847 = !DILocation(line: 30, column: 70, scope: !17839)
!17848 = !DILocalVariable(name: "is_anon", scope: !17839, file: !1152, line: 32, type: !19)
!17849 = !DILocation(line: 32, column: 7, scope: !17839)
!17850 = !DILocation(line: 32, column: 17, scope: !17839)
!17851 = !DILocation(line: 32, column: 25, scope: !17839)
!17852 = !DILocation(line: 34, column: 30, scope: !17839)
!17853 = !DILocation(line: 34, column: 3, scope: !17839)
!17854 = !DILocation(line: 36, column: 30, scope: !17839)
!17855 = !DILocation(line: 36, column: 3, scope: !17839)
!17856 = !DILocation(line: 37, column: 34, scope: !17839)
!17857 = !DILocation(line: 37, column: 3, scope: !17839)
!17858 = !DILocation(line: 38, column: 29, scope: !17839)
!17859 = !DILocation(line: 38, column: 3, scope: !17839)
!17860 = !DILocation(line: 42, column: 30, scope: !17839)
!17861 = !DILocation(line: 42, column: 3, scope: !17839)
!17862 = !DILocation(line: 43, column: 31, scope: !17839)
!17863 = !DILocation(line: 43, column: 3, scope: !17839)
!17864 = !DILocation(line: 45, column: 30, scope: !17839)
!17865 = !DILocation(line: 45, column: 3, scope: !17839)
!17866 = !DILocation(line: 49, column: 36, scope: !17839)
!17867 = !DILocation(line: 49, column: 3, scope: !17839)
!17868 = !DILocation(line: 55, column: 30, scope: !17839)
!17869 = !DILocation(line: 55, column: 3, scope: !17839)
!17870 = !DILocation(line: 56, column: 31, scope: !17839)
!17871 = !DILocation(line: 56, column: 3, scope: !17839)
!17872 = !DILocation(line: 58, column: 36, scope: !17839)
!17873 = !DILocation(line: 58, column: 3, scope: !17839)
!17874 = !DILocation(line: 59, column: 34, scope: !17839)
!17875 = !DILocation(line: 59, column: 3, scope: !17839)
!17876 = !DILocation(line: 61, column: 32, scope: !17839)
!17877 = !DILocation(line: 61, column: 3, scope: !17839)
!17878 = !DILocation(line: 62, column: 31, scope: !17839)
!17879 = !DILocation(line: 62, column: 3, scope: !17839)
!17880 = !DILocation(line: 63, column: 34, scope: !17839)
!17881 = !DILocation(line: 63, column: 3, scope: !17839)
!17882 = !DILocation(line: 65, column: 34, scope: !17839)
!17883 = !DILocation(line: 65, column: 3, scope: !17839)
!17884 = !DILocation(line: 66, column: 30, scope: !17839)
!17885 = !DILocation(line: 66, column: 3, scope: !17839)
!17886 = !DILocation(line: 67, column: 34, scope: !17839)
!17887 = !DILocation(line: 67, column: 3, scope: !17839)
!17888 = !DILocation(line: 68, column: 31, scope: !17839)
!17889 = !DILocation(line: 68, column: 3, scope: !17839)
!17890 = !DILocation(line: 69, column: 36, scope: !17839)
!17891 = !DILocation(line: 69, column: 3, scope: !17839)
!17892 = !DILocation(line: 70, column: 43, scope: !17839)
!17893 = !DILocation(line: 70, column: 3, scope: !17839)
!17894 = !DILocation(line: 73, column: 31, scope: !17839)
!17895 = !DILocation(line: 73, column: 3, scope: !17839)
!17896 = !DILocation(line: 75, column: 32, scope: !17839)
!17897 = !DILocation(line: 75, column: 3, scope: !17839)
!17898 = !DILocation(line: 77, column: 35, scope: !17839)
!17899 = !DILocation(line: 77, column: 3, scope: !17839)
!17900 = !DILocation(line: 79, column: 31, scope: !17839)
!17901 = !DILocation(line: 79, column: 3, scope: !17839)
!17902 = !DILocation(line: 81, column: 34, scope: !17839)
!17903 = !DILocation(line: 81, column: 3, scope: !17839)
!17904 = !DILocation(line: 86, column: 7, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17839, file: !1152, line: 86, column: 7)
!17906 = !DILocation(line: 86, column: 7, scope: !17839)
!17907 = !DILocation(line: 88, column: 34, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17905, file: !1152, line: 87, column: 3)
!17909 = !DILocation(line: 88, column: 5, scope: !17908)
!17910 = !DILocation(line: 89, column: 3, scope: !17908)
!17911 = !DILocation(line: 91, column: 7, scope: !17912)
!17912 = distinct !DILexicalBlock(scope: !17839, file: !1152, line: 91, column: 7)
!17913 = !DILocation(line: 91, column: 33, scope: !17912)
!17914 = !DILocation(line: 92, column: 7, scope: !17912)
!17915 = !DILocation(line: 92, column: 36, scope: !17912)
!17916 = !DILocation(line: 92, column: 40, scope: !17912)
!17917 = !DILocation(line: 93, column: 7, scope: !17912)
!17918 = !DILocation(line: 93, column: 39, scope: !17912)
!17919 = !DILocation(line: 91, column: 7, scope: !17839)
!17920 = !DILocation(line: 95, column: 37, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17912, file: !1152, line: 94, column: 3)
!17922 = !DILocation(line: 95, column: 5, scope: !17921)
!17923 = !DILocation(line: 96, column: 3, scope: !17921)
!17924 = !DILocation(line: 98, column: 7, scope: !17925)
!17925 = distinct !DILexicalBlock(scope: !17839, file: !1152, line: 98, column: 7)
!17926 = !DILocation(line: 98, column: 36, scope: !17925)
!17927 = !DILocation(line: 98, column: 40, scope: !17925)
!17928 = !DILocation(line: 98, column: 43, scope: !17925)
!17929 = !DILocation(line: 98, column: 75, scope: !17925)
!17930 = !DILocation(line: 98, column: 7, scope: !17839)
!17931 = !DILocation(line: 100, column: 33, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17925, file: !1152, line: 99, column: 3)
!17933 = !DILocation(line: 100, column: 5, scope: !17932)
!17934 = !DILocation(line: 101, column: 3, scope: !17932)
!17935 = !DILocation(line: 103, column: 32, scope: !17839)
!17936 = !DILocation(line: 103, column: 3, scope: !17839)
!17937 = !DILocation(line: 104, column: 39, scope: !17839)
!17938 = !DILocation(line: 106, column: 47, scope: !17839)
!17939 = !DILocation(line: 106, column: 39, scope: !17839)
!17940 = !DILocation(line: 104, column: 3, scope: !17839)
!17941 = !DILocation(line: 107, column: 30, scope: !17839)
!17942 = !DILocation(line: 107, column: 3, scope: !17839)
!17943 = !DILocation(line: 109, column: 37, scope: !17839)
!17944 = !DILocation(line: 111, column: 45, scope: !17839)
!17945 = !DILocation(line: 111, column: 37, scope: !17839)
!17946 = !DILocation(line: 109, column: 3, scope: !17839)
!17947 = !DILocation(line: 112, column: 7, scope: !17948)
!17948 = distinct !DILexicalBlock(scope: !17839, file: !1152, line: 112, column: 7)
!17949 = !DILocation(line: 112, column: 7, scope: !17839)
!17950 = !DILocation(line: 114, column: 35, scope: !17951)
!17951 = distinct !DILexicalBlock(scope: !17948, file: !1152, line: 113, column: 3)
!17952 = !DILocation(line: 114, column: 5, scope: !17951)
!17953 = !DILocation(line: 115, column: 42, scope: !17951)
!17954 = !DILocation(line: 117, column: 50, scope: !17951)
!17955 = !DILocation(line: 117, column: 42, scope: !17951)
!17956 = !DILocation(line: 115, column: 5, scope: !17951)
!17957 = !DILocation(line: 118, column: 38, scope: !17951)
!17958 = !DILocation(line: 118, column: 5, scope: !17951)
!17959 = !DILocation(line: 119, column: 45, scope: !17951)
!17960 = !DILocation(line: 119, column: 5, scope: !17951)
!17961 = !DILocation(line: 120, column: 3, scope: !17951)
!17962 = !DILocation(line: 121, column: 7, scope: !17963)
!17963 = distinct !DILexicalBlock(scope: !17839, file: !1152, line: 121, column: 7)
!17964 = !DILocation(line: 121, column: 7, scope: !17839)
!17965 = !DILocation(line: 123, column: 34, scope: !17966)
!17966 = distinct !DILexicalBlock(scope: !17963, file: !1152, line: 122, column: 3)
!17967 = !DILocation(line: 123, column: 5, scope: !17966)
!17968 = !DILocation(line: 124, column: 34, scope: !17966)
!17969 = !DILocation(line: 124, column: 5, scope: !17966)
!17970 = !DILocation(line: 125, column: 3, scope: !17966)
!17971 = !DILocation(line: 127, column: 7, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17839, file: !1152, line: 127, column: 7)
!17973 = !DILocation(line: 127, column: 7, scope: !17839)
!17974 = !DILocation(line: 129, column: 10, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17976, file: !1152, line: 129, column: 9)
!17976 = distinct !DILexicalBlock(scope: !17972, file: !1152, line: 128, column: 3)
!17977 = !DILocation(line: 129, column: 18, scope: !17975)
!17978 = !DILocation(line: 129, column: 21, scope: !17975)
!17979 = !DILocation(line: 129, column: 9, scope: !17976)
!17980 = !DILocation(line: 131, column: 34, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17975, file: !1152, line: 130, column: 5)
!17982 = !DILocation(line: 131, column: 7, scope: !17981)
!17983 = !DILocation(line: 132, column: 5, scope: !17981)
!17984 = !DILocation(line: 133, column: 10, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17976, file: !1152, line: 133, column: 9)
!17986 = !DILocation(line: 133, column: 18, scope: !17985)
!17987 = !DILocation(line: 133, column: 21, scope: !17985)
!17988 = !DILocation(line: 133, column: 9, scope: !17976)
!17989 = !DILocation(line: 135, column: 35, scope: !17990)
!17990 = distinct !DILexicalBlock(scope: !17985, file: !1152, line: 134, column: 5)
!17991 = !DILocation(line: 135, column: 7, scope: !17990)
!17992 = !DILocation(line: 136, column: 5, scope: !17990)
!17993 = !DILocation(line: 137, column: 10, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17976, file: !1152, line: 137, column: 9)
!17995 = !DILocation(line: 137, column: 18, scope: !17994)
!17996 = !DILocation(line: 137, column: 21, scope: !17994)
!17997 = !DILocation(line: 137, column: 9, scope: !17976)
!17998 = !DILocation(line: 139, column: 36, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17994, file: !1152, line: 138, column: 5)
!18000 = !DILocation(line: 139, column: 7, scope: !17999)
!18001 = !DILocation(line: 140, column: 35, scope: !17999)
!18002 = !DILocation(line: 140, column: 7, scope: !17999)
!18003 = !DILocation(line: 141, column: 36, scope: !17999)
!18004 = !DILocation(line: 141, column: 7, scope: !17999)
!18005 = !DILocation(line: 142, column: 39, scope: !17999)
!18006 = !DILocation(line: 142, column: 7, scope: !17999)
!18007 = !DILocation(line: 143, column: 11, scope: !18008)
!18008 = distinct !DILexicalBlock(scope: !17999, file: !1152, line: 143, column: 11)
!18009 = !DILocation(line: 143, column: 11, scope: !17999)
!18010 = !DILocation(line: 145, column: 37, scope: !18011)
!18011 = distinct !DILexicalBlock(scope: !18008, file: !1152, line: 144, column: 7)
!18012 = !DILocation(line: 145, column: 9, scope: !18011)
!18013 = !DILocation(line: 146, column: 7, scope: !18011)
!18014 = !DILocation(line: 147, column: 5, scope: !17999)
!18015 = !DILocation(line: 148, column: 10, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !17976, file: !1152, line: 148, column: 9)
!18017 = !DILocation(line: 148, column: 18, scope: !18016)
!18018 = !DILocation(line: 148, column: 21, scope: !18016)
!18019 = !DILocation(line: 148, column: 9, scope: !17976)
!18020 = !DILocation(line: 150, column: 35, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !18016, file: !1152, line: 149, column: 5)
!18022 = !DILocation(line: 150, column: 7, scope: !18021)
!18023 = !DILocation(line: 151, column: 5, scope: !18021)
!18024 = !DILocation(line: 152, column: 9, scope: !18025)
!18025 = distinct !DILexicalBlock(scope: !17976, file: !1152, line: 152, column: 9)
!18026 = !DILocation(line: 152, column: 17, scope: !18025)
!18027 = !DILocation(line: 152, column: 20, scope: !18025)
!18028 = !DILocation(line: 152, column: 9, scope: !17976)
!18029 = !DILocation(line: 154, column: 36, scope: !18030)
!18030 = distinct !DILexicalBlock(scope: !18025, file: !1152, line: 153, column: 5)
!18031 = !DILocation(line: 154, column: 7, scope: !18030)
!18032 = !DILocation(line: 155, column: 36, scope: !18030)
!18033 = !DILocation(line: 155, column: 7, scope: !18030)
!18034 = !DILocation(line: 156, column: 5, scope: !18030)
!18035 = !DILocation(line: 157, column: 3, scope: !17976)
!18036 = !DILocation(line: 158, column: 1, scope: !17839)
!18037 = distinct !DISubprogram(name: "setsockopt_validator", scope: !1152, file: !1152, line: 283, type: !1153, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1158, retainedNodes: !128)
!18038 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !18037, file: !1152, line: 283, type: !1155)
!18039 = !DILocation(line: 283, column: 41, scope: !18037)
!18040 = !DILocalVariable(name: "p_arg", arg: 2, scope: !18037, file: !1152, line: 283, type: !80)
!18041 = !DILocation(line: 283, column: 58, scope: !18037)
!18042 = !DILocalVariable(name: "ret", scope: !18037, file: !1152, line: 285, type: !19)
!18043 = !DILocation(line: 285, column: 7, scope: !18037)
!18044 = !DILocalVariable(name: "arg2", scope: !18037, file: !1152, line: 286, type: !65)
!18045 = !DILocation(line: 286, column: 17, scope: !18037)
!18046 = !DILocalVariable(name: "arg3", scope: !18037, file: !1152, line: 287, type: !65)
!18047 = !DILocation(line: 287, column: 17, scope: !18037)
!18048 = !DILocation(line: 288, column: 10, scope: !18037)
!18049 = !DILocation(line: 289, column: 43, scope: !18037)
!18050 = !DILocation(line: 289, column: 9, scope: !18037)
!18051 = !DILocation(line: 289, column: 7, scope: !18037)
!18052 = !DILocation(line: 290, column: 7, scope: !18053)
!18053 = distinct !DILexicalBlock(scope: !18037, file: !1152, line: 290, column: 7)
!18054 = !DILocation(line: 290, column: 11, scope: !18053)
!18055 = !DILocation(line: 290, column: 7, scope: !18037)
!18056 = !DILocation(line: 292, column: 12, scope: !18057)
!18057 = distinct !DILexicalBlock(scope: !18053, file: !1152, line: 291, column: 3)
!18058 = !DILocation(line: 292, column: 5, scope: !18057)
!18059 = !DILocation(line: 294, column: 43, scope: !18037)
!18060 = !DILocation(line: 294, column: 9, scope: !18037)
!18061 = !DILocation(line: 294, column: 7, scope: !18037)
!18062 = !DILocation(line: 295, column: 7, scope: !18063)
!18063 = distinct !DILexicalBlock(scope: !18037, file: !1152, line: 295, column: 7)
!18064 = !DILocation(line: 295, column: 11, scope: !18063)
!18065 = !DILocation(line: 295, column: 7, scope: !18037)
!18066 = !DILocation(line: 297, column: 12, scope: !18067)
!18067 = distinct !DILexicalBlock(scope: !18063, file: !1152, line: 296, column: 3)
!18068 = !DILocation(line: 297, column: 5, scope: !18067)
!18069 = !DILocation(line: 299, column: 7, scope: !18070)
!18070 = distinct !DILexicalBlock(scope: !18037, file: !1152, line: 299, column: 7)
!18071 = !DILocation(line: 299, column: 12, scope: !18070)
!18072 = !DILocation(line: 299, column: 7, scope: !18037)
!18073 = !DILocation(line: 301, column: 9, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18075, file: !1152, line: 301, column: 9)
!18075 = distinct !DILexicalBlock(scope: !18070, file: !1152, line: 300, column: 3)
!18076 = !DILocation(line: 301, column: 14, scope: !18074)
!18077 = !DILocation(line: 301, column: 30, scope: !18074)
!18078 = !DILocation(line: 302, column: 9, scope: !18074)
!18079 = !DILocation(line: 302, column: 14, scope: !18074)
!18080 = !DILocation(line: 302, column: 30, scope: !18074)
!18081 = !DILocation(line: 303, column: 9, scope: !18074)
!18082 = !DILocation(line: 303, column: 14, scope: !18074)
!18083 = !DILocation(line: 303, column: 30, scope: !18074)
!18084 = !DILocation(line: 304, column: 9, scope: !18074)
!18085 = !DILocation(line: 304, column: 14, scope: !18074)
!18086 = !DILocation(line: 301, column: 9, scope: !18075)
!18087 = !DILocation(line: 306, column: 7, scope: !18088)
!18088 = distinct !DILexicalBlock(scope: !18074, file: !1152, line: 305, column: 5)
!18089 = !DILocation(line: 308, column: 3, scope: !18075)
!18090 = !DILocation(line: 309, column: 12, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18070, file: !1152, line: 309, column: 12)
!18092 = !DILocation(line: 309, column: 17, scope: !18091)
!18093 = !DILocation(line: 309, column: 12, scope: !18070)
!18094 = !DILocation(line: 311, column: 9, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18096, file: !1152, line: 311, column: 9)
!18096 = distinct !DILexicalBlock(scope: !18091, file: !1152, line: 310, column: 3)
!18097 = !DILocation(line: 311, column: 14, scope: !18095)
!18098 = !DILocation(line: 311, column: 9, scope: !18096)
!18099 = !DILocation(line: 313, column: 7, scope: !18100)
!18100 = distinct !DILexicalBlock(scope: !18095, file: !1152, line: 312, column: 5)
!18101 = !DILocation(line: 315, column: 3, scope: !18096)
!18102 = !DILocation(line: 316, column: 12, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18091, file: !1152, line: 316, column: 12)
!18104 = !DILocation(line: 316, column: 17, scope: !18103)
!18105 = !DILocation(line: 316, column: 12, scope: !18091)
!18106 = !DILocation(line: 318, column: 9, scope: !18107)
!18107 = distinct !DILexicalBlock(scope: !18108, file: !1152, line: 318, column: 9)
!18108 = distinct !DILexicalBlock(scope: !18103, file: !1152, line: 317, column: 3)
!18109 = !DILocation(line: 318, column: 14, scope: !18107)
!18110 = !DILocation(line: 318, column: 9, scope: !18108)
!18111 = !DILocation(line: 320, column: 7, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !18107, file: !1152, line: 319, column: 5)
!18113 = !DILocation(line: 322, column: 3, scope: !18108)
!18114 = !DILocation(line: 325, column: 5, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18103, file: !1152, line: 324, column: 3)
!18116 = !DILocation(line: 327, column: 3, scope: !18037)
!18117 = !DILocation(line: 328, column: 1, scope: !18037)
!18118 = distinct !DISubprogram(name: "socket_validator", scope: !1152, file: !1152, line: 161, type: !1153, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1158, retainedNodes: !128)
!18119 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !18118, file: !1152, line: 161, type: !1155)
!18120 = !DILocation(line: 161, column: 37, scope: !18118)
!18121 = !DILocalVariable(name: "p_arg", arg: 2, scope: !18118, file: !1152, line: 161, type: !80)
!18122 = !DILocation(line: 161, column: 54, scope: !18118)
!18123 = !DILocalVariable(name: "ret", scope: !18118, file: !1152, line: 163, type: !19)
!18124 = !DILocation(line: 163, column: 7, scope: !18118)
!18125 = !DILocalVariable(name: "p_sess", scope: !18118, file: !1152, line: 164, type: !1202)
!18126 = !DILocation(line: 164, column: 23, scope: !18118)
!18127 = !DILocation(line: 164, column: 54, scope: !18118)
!18128 = !DILocation(line: 164, column: 32, scope: !18118)
!18129 = !DILocalVariable(name: "arg1", scope: !18118, file: !1152, line: 165, type: !65)
!18130 = !DILocation(line: 165, column: 17, scope: !18118)
!18131 = !DILocalVariable(name: "arg2", scope: !18118, file: !1152, line: 166, type: !65)
!18132 = !DILocation(line: 166, column: 17, scope: !18118)
!18133 = !DILocalVariable(name: "expected_family", scope: !18118, file: !1152, line: 167, type: !65)
!18134 = !DILocation(line: 167, column: 17, scope: !18118)
!18135 = !DILocation(line: 168, column: 36, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18118, file: !1152, line: 168, column: 7)
!18137 = !DILocation(line: 168, column: 44, scope: !18136)
!18138 = !DILocation(line: 168, column: 7, scope: !18136)
!18139 = !DILocation(line: 168, column: 7, scope: !18118)
!18140 = !DILocation(line: 170, column: 21, scope: !18141)
!18141 = distinct !DILexicalBlock(scope: !18136, file: !1152, line: 169, column: 3)
!18142 = !DILocation(line: 171, column: 3, scope: !18141)
!18143 = !DILocation(line: 172, column: 43, scope: !18118)
!18144 = !DILocation(line: 172, column: 9, scope: !18118)
!18145 = !DILocation(line: 172, column: 7, scope: !18118)
!18146 = !DILocation(line: 173, column: 7, scope: !18147)
!18147 = distinct !DILexicalBlock(scope: !18118, file: !1152, line: 173, column: 7)
!18148 = !DILocation(line: 173, column: 11, scope: !18147)
!18149 = !DILocation(line: 173, column: 7, scope: !18118)
!18150 = !DILocation(line: 175, column: 12, scope: !18151)
!18151 = distinct !DILexicalBlock(scope: !18147, file: !1152, line: 174, column: 3)
!18152 = !DILocation(line: 175, column: 5, scope: !18151)
!18153 = !DILocation(line: 177, column: 43, scope: !18118)
!18154 = !DILocation(line: 177, column: 9, scope: !18118)
!18155 = !DILocation(line: 177, column: 7, scope: !18118)
!18156 = !DILocation(line: 178, column: 7, scope: !18157)
!18157 = distinct !DILexicalBlock(scope: !18118, file: !1152, line: 178, column: 7)
!18158 = !DILocation(line: 178, column: 11, scope: !18157)
!18159 = !DILocation(line: 178, column: 7, scope: !18118)
!18160 = !DILocation(line: 180, column: 12, scope: !18161)
!18161 = distinct !DILexicalBlock(scope: !18157, file: !1152, line: 179, column: 3)
!18162 = !DILocation(line: 180, column: 5, scope: !18161)
!18163 = !DILocation(line: 182, column: 7, scope: !18164)
!18164 = distinct !DILexicalBlock(scope: !18118, file: !1152, line: 182, column: 7)
!18165 = !DILocation(line: 182, column: 15, scope: !18164)
!18166 = !DILocation(line: 182, column: 12, scope: !18164)
!18167 = !DILocation(line: 182, column: 31, scope: !18164)
!18168 = !DILocation(line: 182, column: 34, scope: !18164)
!18169 = !DILocation(line: 182, column: 39, scope: !18164)
!18170 = !DILocation(line: 182, column: 7, scope: !18118)
!18171 = !DILocation(line: 184, column: 5, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18164, file: !1152, line: 183, column: 3)
!18173 = !DILocation(line: 186, column: 3, scope: !18118)
!18174 = !DILocation(line: 187, column: 1, scope: !18118)
!18175 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !1151, file: !1152, line: 190, type: !1155)
!18176 = !DILocation(line: 190, column: 38, scope: !1151)
!18177 = !DILocalVariable(name: "p_arg", arg: 2, scope: !1151, file: !1152, line: 190, type: !80)
!18178 = !DILocation(line: 190, column: 55, scope: !1151)
!18179 = !DILocalVariable(name: "ret", scope: !1151, file: !1152, line: 192, type: !19)
!18180 = !DILocation(line: 192, column: 7, scope: !1151)
!18181 = !DILocalVariable(name: "p_sess", scope: !1151, file: !1152, line: 193, type: !1202)
!18182 = !DILocation(line: 193, column: 23, scope: !1151)
!18183 = !DILocation(line: 193, column: 54, scope: !1151)
!18184 = !DILocation(line: 193, column: 32, scope: !1151)
!18185 = !DILocalVariable(name: "arg2", scope: !1151, file: !1152, line: 194, type: !65)
!18186 = !DILocation(line: 194, column: 17, scope: !1151)
!18187 = !DILocalVariable(name: "arg3", scope: !1151, file: !1152, line: 195, type: !65)
!18188 = !DILocation(line: 195, column: 17, scope: !1151)
!18189 = !DILocalVariable(name: "expected_family", scope: !1151, file: !1152, line: 196, type: !65)
!18190 = !DILocation(line: 196, column: 17, scope: !1151)
!18191 = !DILocalVariable(name: "expected_len", scope: !1151, file: !1152, line: 197, type: !65)
!18192 = !DILocation(line: 197, column: 17, scope: !1151)
!18193 = !DILocalVariable(name: "p_buf", scope: !1151, file: !1152, line: 198, type: !80)
!18194 = !DILocation(line: 198, column: 9, scope: !1151)
!18195 = !DILocalVariable(name: "p_sockaddr", scope: !1151, file: !1152, line: 199, type: !1267)
!18196 = !DILocation(line: 199, column: 20, scope: !1151)
!18197 = !DILocation(line: 201, column: 36, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 201, column: 7)
!18199 = !DILocation(line: 201, column: 44, scope: !18198)
!18200 = !DILocation(line: 201, column: 7, scope: !18198)
!18201 = !DILocation(line: 201, column: 7, scope: !1151)
!18202 = !DILocation(line: 203, column: 21, scope: !18203)
!18203 = distinct !DILexicalBlock(scope: !18198, file: !1152, line: 202, column: 3)
!18204 = !DILocation(line: 204, column: 18, scope: !18203)
!18205 = !DILocation(line: 205, column: 3, scope: !18203)
!18206 = !DILocation(line: 206, column: 43, scope: !1151)
!18207 = !DILocation(line: 206, column: 9, scope: !1151)
!18208 = !DILocation(line: 206, column: 7, scope: !1151)
!18209 = !DILocation(line: 207, column: 7, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 207, column: 7)
!18211 = !DILocation(line: 207, column: 11, scope: !18210)
!18212 = !DILocation(line: 207, column: 7, scope: !1151)
!18213 = !DILocation(line: 209, column: 12, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18210, file: !1152, line: 208, column: 3)
!18215 = !DILocation(line: 209, column: 5, scope: !18214)
!18216 = !DILocation(line: 211, column: 43, scope: !1151)
!18217 = !DILocation(line: 211, column: 9, scope: !1151)
!18218 = !DILocation(line: 211, column: 7, scope: !1151)
!18219 = !DILocation(line: 212, column: 7, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 212, column: 7)
!18221 = !DILocation(line: 212, column: 11, scope: !18220)
!18222 = !DILocation(line: 212, column: 7, scope: !1151)
!18223 = !DILocation(line: 214, column: 12, scope: !18224)
!18224 = distinct !DILexicalBlock(scope: !18220, file: !1152, line: 213, column: 3)
!18225 = !DILocation(line: 214, column: 5, scope: !18224)
!18226 = !DILocation(line: 216, column: 7, scope: !18227)
!18227 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 216, column: 7)
!18228 = !DILocation(line: 216, column: 15, scope: !18227)
!18229 = !DILocation(line: 216, column: 12, scope: !18227)
!18230 = !DILocation(line: 216, column: 7, scope: !1151)
!18231 = !DILocation(line: 218, column: 5, scope: !18232)
!18232 = distinct !DILexicalBlock(scope: !18227, file: !1152, line: 217, column: 3)
!18233 = !DILocation(line: 220, column: 36, scope: !1151)
!18234 = !DILocation(line: 220, column: 30, scope: !1151)
!18235 = !DILocation(line: 220, column: 11, scope: !1151)
!18236 = !DILocation(line: 220, column: 9, scope: !1151)
!18237 = !DILocation(line: 221, column: 32, scope: !1151)
!18238 = !DILocation(line: 221, column: 43, scope: !1151)
!18239 = !DILocation(line: 221, column: 49, scope: !1151)
!18240 = !DILocation(line: 221, column: 63, scope: !1151)
!18241 = !DILocation(line: 221, column: 9, scope: !1151)
!18242 = !DILocation(line: 221, column: 7, scope: !1151)
!18243 = !DILocation(line: 222, column: 7, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 222, column: 7)
!18245 = !DILocation(line: 222, column: 11, scope: !18244)
!18246 = !DILocation(line: 222, column: 7, scope: !1151)
!18247 = !DILocation(line: 224, column: 22, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18244, file: !1152, line: 223, column: 3)
!18249 = !DILocation(line: 224, column: 5, scope: !18248)
!18250 = !DILocation(line: 225, column: 5, scope: !18248)
!18251 = !DILocation(line: 227, column: 35, scope: !1151)
!18252 = !DILocation(line: 227, column: 16, scope: !1151)
!18253 = !DILocation(line: 227, column: 14, scope: !1151)
!18254 = !DILocation(line: 228, column: 7, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 228, column: 7)
!18256 = !DILocation(line: 228, column: 19, scope: !18255)
!18257 = !DILocation(line: 228, column: 32, scope: !18255)
!18258 = !DILocation(line: 228, column: 29, scope: !18255)
!18259 = !DILocation(line: 228, column: 7, scope: !1151)
!18260 = !DILocation(line: 230, column: 22, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18255, file: !1152, line: 229, column: 3)
!18262 = !DILocation(line: 230, column: 5, scope: !18261)
!18263 = !DILocation(line: 231, column: 5, scope: !18261)
!18264 = !DILocation(line: 233, column: 7, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 233, column: 7)
!18266 = !DILocation(line: 233, column: 23, scope: !18265)
!18267 = !DILocation(line: 233, column: 7, scope: !1151)
!18268 = !DILocalVariable(name: "p_sockaddr_in", scope: !18269, file: !1152, line: 235, type: !1278)
!18269 = distinct !DILexicalBlock(scope: !18265, file: !1152, line: 234, column: 3)
!18270 = !DILocation(line: 235, column: 25, scope: !18269)
!18271 = !DILocation(line: 235, column: 63, scope: !18269)
!18272 = !DILocation(line: 235, column: 41, scope: !18269)
!18273 = !DILocation(line: 236, column: 5, scope: !18269)
!18274 = !DILocation(line: 237, column: 39, scope: !18269)
!18275 = !DILocation(line: 239, column: 44, scope: !18269)
!18276 = !DILocation(line: 239, column: 59, scope: !18269)
!18277 = !DILocation(line: 238, column: 39, scope: !18269)
!18278 = !DILocation(line: 237, column: 5, scope: !18269)
!18279 = !DILocation(line: 240, column: 3, scope: !18269)
!18280 = !DILocalVariable(name: "p_sockaddr_in6", scope: !18281, file: !1152, line: 243, type: !1299)
!18281 = distinct !DILexicalBlock(scope: !18265, file: !1152, line: 242, column: 3)
!18282 = !DILocation(line: 243, column: 26, scope: !18281)
!18283 = !DILocation(line: 243, column: 66, scope: !18281)
!18284 = !DILocation(line: 243, column: 43, scope: !18281)
!18285 = !DILocation(line: 244, column: 5, scope: !18281)
!18286 = !DILocation(line: 245, column: 39, scope: !18281)
!18287 = !DILocation(line: 247, column: 44, scope: !18281)
!18288 = !DILocation(line: 247, column: 60, scope: !18281)
!18289 = !DILocation(line: 246, column: 39, scope: !18281)
!18290 = !DILocation(line: 245, column: 5, scope: !18281)
!18291 = !DILocation(line: 249, column: 40, scope: !18292)
!18292 = distinct !DILexicalBlock(scope: !1151, file: !1152, line: 249, column: 7)
!18293 = !DILocation(line: 249, column: 48, scope: !18292)
!18294 = !DILocation(line: 249, column: 63, scope: !18292)
!18295 = !DILocation(line: 249, column: 8, scope: !18292)
!18296 = !DILocation(line: 249, column: 7, scope: !1151)
!18297 = !DILocation(line: 251, column: 22, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18292, file: !1152, line: 250, column: 3)
!18299 = !DILocation(line: 251, column: 5, scope: !18298)
!18300 = !DILocation(line: 252, column: 5, scope: !18298)
!18301 = !DILocation(line: 254, column: 20, scope: !1151)
!18302 = !DILocation(line: 254, column: 3, scope: !1151)
!18303 = !DILocation(line: 255, column: 3, scope: !1151)
!18304 = !DILocation(line: 256, column: 1, scope: !1151)
!18305 = distinct !DISubprogram(name: "getsockopt_validator", scope: !1152, file: !1152, line: 259, type: !1153, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1158, retainedNodes: !128)
!18306 = !DILocalVariable(name: "p_sandbox", arg: 1, scope: !18305, file: !1152, line: 259, type: !1155)
!18307 = !DILocation(line: 259, column: 41, scope: !18305)
!18308 = !DILocalVariable(name: "p_arg", arg: 2, scope: !18305, file: !1152, line: 259, type: !80)
!18309 = !DILocation(line: 259, column: 58, scope: !18305)
!18310 = !DILocalVariable(name: "ret", scope: !18305, file: !1152, line: 261, type: !19)
!18311 = !DILocation(line: 261, column: 7, scope: !18305)
!18312 = !DILocalVariable(name: "arg2", scope: !18305, file: !1152, line: 262, type: !65)
!18313 = !DILocation(line: 262, column: 17, scope: !18305)
!18314 = !DILocalVariable(name: "arg3", scope: !18305, file: !1152, line: 263, type: !65)
!18315 = !DILocation(line: 263, column: 17, scope: !18305)
!18316 = !DILocation(line: 264, column: 10, scope: !18305)
!18317 = !DILocation(line: 265, column: 43, scope: !18305)
!18318 = !DILocation(line: 265, column: 9, scope: !18305)
!18319 = !DILocation(line: 265, column: 7, scope: !18305)
!18320 = !DILocation(line: 266, column: 7, scope: !18321)
!18321 = distinct !DILexicalBlock(scope: !18305, file: !1152, line: 266, column: 7)
!18322 = !DILocation(line: 266, column: 11, scope: !18321)
!18323 = !DILocation(line: 266, column: 7, scope: !18305)
!18324 = !DILocation(line: 268, column: 12, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18321, file: !1152, line: 267, column: 3)
!18326 = !DILocation(line: 268, column: 5, scope: !18325)
!18327 = !DILocation(line: 270, column: 43, scope: !18305)
!18328 = !DILocation(line: 270, column: 9, scope: !18305)
!18329 = !DILocation(line: 270, column: 7, scope: !18305)
!18330 = !DILocation(line: 271, column: 7, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18305, file: !1152, line: 271, column: 7)
!18332 = !DILocation(line: 271, column: 11, scope: !18331)
!18333 = !DILocation(line: 271, column: 7, scope: !18305)
!18334 = !DILocation(line: 273, column: 12, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18331, file: !1152, line: 272, column: 3)
!18336 = !DILocation(line: 273, column: 5, scope: !18335)
!18337 = !DILocation(line: 275, column: 7, scope: !18338)
!18338 = distinct !DILexicalBlock(scope: !18305, file: !1152, line: 275, column: 7)
!18339 = !DILocation(line: 275, column: 12, scope: !18338)
!18340 = !DILocation(line: 275, column: 26, scope: !18338)
!18341 = !DILocation(line: 275, column: 29, scope: !18338)
!18342 = !DILocation(line: 275, column: 34, scope: !18338)
!18343 = !DILocation(line: 275, column: 7, scope: !18305)
!18344 = !DILocation(line: 277, column: 5, scope: !18345)
!18345 = distinct !DILexicalBlock(scope: !18338, file: !1152, line: 276, column: 3)
!18346 = !DILocation(line: 279, column: 3, scope: !18305)
!18347 = !DILocation(line: 280, column: 1, scope: !18305)
!18348 = distinct !DISubprogram(name: "vsf_sysutil_check_pending_actions", scope: !1326, file: !1326, line: 150, type: !18349, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18349 = !DISubroutineType(types: !18350)
!18350 = !{null, !18351, !19, !19}
!18351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!18352 = !DILocalVariable(name: "context", arg: 1, scope: !18348, file: !1326, line: 151, type: !18351)
!18353 = !DILocation(line: 151, column: 42, scope: !18348)
!18354 = !DILocalVariable(name: "retval", arg: 2, scope: !18348, file: !1326, line: 151, type: !19)
!18355 = !DILocation(line: 151, column: 55, scope: !18348)
!18356 = !DILocalVariable(name: "fd", arg: 3, scope: !18348, file: !1326, line: 151, type: !19)
!18357 = !DILocation(line: 151, column: 67, scope: !18348)
!18358 = !DILocalVariable(name: "i", scope: !18348, file: !1326, line: 153, type: !26)
!18359 = !DILocation(line: 153, column: 16, scope: !18348)
!18360 = !DILocation(line: 155, column: 7, scope: !18361)
!18361 = distinct !DILexicalBlock(scope: !18348, file: !1326, line: 155, column: 7)
!18362 = !DILocation(line: 155, column: 20, scope: !18361)
!18363 = !DILocation(line: 155, column: 24, scope: !18361)
!18364 = !DILocation(line: 155, column: 45, scope: !18361)
!18365 = !DILocation(line: 155, column: 48, scope: !18361)
!18366 = !DILocation(line: 155, column: 56, scope: !18361)
!18367 = !DILocation(line: 155, column: 7, scope: !18348)
!18368 = !DILocation(line: 157, column: 26, scope: !18369)
!18369 = distinct !DILexicalBlock(scope: !18361, file: !1326, line: 156, column: 3)
!18370 = !DILocation(line: 158, column: 7, scope: !18369)
!18371 = !DILocation(line: 158, column: 21, scope: !18369)
!18372 = !DILocation(line: 158, column: 29, scope: !18369)
!18373 = !DILocation(line: 158, column: 33, scope: !18369)
!18374 = !DILocation(line: 158, column: 5, scope: !18369)
!18375 = !DILocation(line: 159, column: 26, scope: !18369)
!18376 = !DILocation(line: 160, column: 3, scope: !18369)
!18377 = !DILocation(line: 161, column: 9, scope: !18378)
!18378 = distinct !DILexicalBlock(scope: !18348, file: !1326, line: 161, column: 3)
!18379 = !DILocation(line: 161, column: 8, scope: !18378)
!18380 = !DILocation(line: 161, column: 13, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18378, file: !1326, line: 161, column: 3)
!18382 = !DILocation(line: 161, column: 15, scope: !18381)
!18383 = !DILocation(line: 161, column: 3, scope: !18378)
!18384 = !DILocation(line: 163, column: 23, scope: !18385)
!18385 = distinct !DILexicalBlock(scope: !18386, file: !1326, line: 163, column: 9)
!18386 = distinct !DILexicalBlock(scope: !18381, file: !1326, line: 162, column: 3)
!18387 = !DILocation(line: 163, column: 9, scope: !18385)
!18388 = !DILocation(line: 163, column: 26, scope: !18385)
!18389 = !DILocation(line: 163, column: 34, scope: !18385)
!18390 = !DILocation(line: 163, column: 52, scope: !18385)
!18391 = !DILocation(line: 163, column: 38, scope: !18385)
!18392 = !DILocation(line: 163, column: 55, scope: !18385)
!18393 = !DILocation(line: 163, column: 9, scope: !18386)
!18394 = !DILocation(line: 165, column: 21, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18385, file: !1326, line: 164, column: 5)
!18396 = !DILocation(line: 165, column: 7, scope: !18395)
!18397 = !DILocation(line: 165, column: 24, scope: !18395)
!18398 = !DILocation(line: 165, column: 32, scope: !18395)
!18399 = !DILocation(line: 166, column: 25, scope: !18400)
!18400 = distinct !DILexicalBlock(scope: !18395, file: !1326, line: 166, column: 11)
!18401 = !DILocation(line: 166, column: 11, scope: !18400)
!18402 = !DILocation(line: 166, column: 28, scope: !18400)
!18403 = !DILocation(line: 166, column: 11, scope: !18395)
!18404 = !DILocation(line: 168, column: 9, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18400, file: !1326, line: 167, column: 7)
!18406 = !DILocation(line: 169, column: 7, scope: !18405)
!18407 = !DILocation(line: 170, column: 25, scope: !18408)
!18408 = distinct !DILexicalBlock(scope: !18395, file: !1326, line: 170, column: 11)
!18409 = !DILocation(line: 170, column: 11, scope: !18408)
!18410 = !DILocation(line: 170, column: 28, scope: !18408)
!18411 = !DILocation(line: 170, column: 11, scope: !18395)
!18412 = !DILocation(line: 172, column: 23, scope: !18413)
!18413 = distinct !DILexicalBlock(scope: !18408, file: !1326, line: 171, column: 7)
!18414 = !DILocation(line: 172, column: 9, scope: !18413)
!18415 = !DILocation(line: 172, column: 26, scope: !18413)
!18416 = !DILocation(line: 172, column: 34, scope: !18413)
!18417 = !DILocation(line: 173, column: 26, scope: !18413)
!18418 = !DILocation(line: 173, column: 12, scope: !18413)
!18419 = !DILocation(line: 173, column: 29, scope: !18413)
!18420 = !DILocation(line: 173, column: 62, scope: !18413)
!18421 = !DILocation(line: 173, column: 48, scope: !18413)
!18422 = !DILocation(line: 173, column: 65, scope: !18413)
!18423 = !DILocation(line: 173, column: 9, scope: !18413)
!18424 = !DILocation(line: 174, column: 7, scope: !18413)
!18425 = !DILocation(line: 175, column: 21, scope: !18395)
!18426 = !DILocation(line: 175, column: 7, scope: !18395)
!18427 = !DILocation(line: 175, column: 24, scope: !18395)
!18428 = !DILocation(line: 175, column: 32, scope: !18395)
!18429 = !DILocation(line: 176, column: 5, scope: !18395)
!18430 = !DILocation(line: 177, column: 3, scope: !18386)
!18431 = !DILocation(line: 161, column: 23, scope: !18381)
!18432 = !DILocation(line: 161, column: 3, scope: !18381)
!18433 = distinct !{!18433, !18383, !18434}
!18434 = !DILocation(line: 177, column: 3, scope: !18378)
!18435 = !DILocation(line: 178, column: 1, scope: !18348)
!18436 = distinct !DISubprogram(name: "vsf_sysutil_install_sighandler", scope: !1326, file: !1326, line: 216, type: !18437, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18437 = !DISubroutineType(types: !18438)
!18438 = !{null, !18439, !1651, !80, !19}
!18439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!18440 = !DILocalVariable(name: "sig", arg: 1, scope: !18436, file: !1326, line: 216, type: !18439)
!18441 = !DILocation(line: 216, column: 61, scope: !18436)
!18442 = !DILocalVariable(name: "handler", arg: 2, scope: !18436, file: !1326, line: 217, type: !1651)
!18443 = !DILocation(line: 217, column: 48, scope: !18436)
!18444 = !DILocalVariable(name: "p_private", arg: 3, scope: !18436, file: !1326, line: 218, type: !80)
!18445 = !DILocation(line: 218, column: 38, scope: !18436)
!18446 = !DILocalVariable(name: "use_alarm", arg: 4, scope: !18436, file: !1326, line: 219, type: !19)
!18447 = !DILocation(line: 219, column: 36, scope: !18436)
!18448 = !DILocalVariable(name: "realsig", scope: !18436, file: !1326, line: 221, type: !19)
!18449 = !DILocation(line: 221, column: 7, scope: !18436)
!18450 = !DILocation(line: 221, column: 43, scope: !18436)
!18451 = !DILocation(line: 221, column: 17, scope: !18436)
!18452 = !DILocation(line: 222, column: 38, scope: !18436)
!18453 = !DILocation(line: 222, column: 17, scope: !18436)
!18454 = !DILocation(line: 222, column: 3, scope: !18436)
!18455 = !DILocation(line: 222, column: 26, scope: !18436)
!18456 = !DILocation(line: 222, column: 36, scope: !18436)
!18457 = !DILocation(line: 223, column: 45, scope: !18436)
!18458 = !DILocation(line: 223, column: 17, scope: !18436)
!18459 = !DILocation(line: 223, column: 3, scope: !18436)
!18460 = !DILocation(line: 223, column: 26, scope: !18436)
!18461 = !DILocation(line: 223, column: 43, scope: !18436)
!18462 = !DILocation(line: 224, column: 38, scope: !18436)
!18463 = !DILocation(line: 224, column: 17, scope: !18436)
!18464 = !DILocation(line: 224, column: 3, scope: !18436)
!18465 = !DILocation(line: 224, column: 26, scope: !18436)
!18466 = !DILocation(line: 224, column: 36, scope: !18436)
!18467 = !DILocation(line: 225, column: 30, scope: !18436)
!18468 = !DILocation(line: 225, column: 3, scope: !18436)
!18469 = !DILocation(line: 226, column: 7, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18436, file: !1326, line: 226, column: 7)
!18471 = !DILocation(line: 226, column: 17, scope: !18470)
!18472 = !DILocation(line: 226, column: 20, scope: !18470)
!18473 = !DILocation(line: 226, column: 28, scope: !18470)
!18474 = !DILocation(line: 226, column: 7, scope: !18436)
!18475 = !DILocation(line: 228, column: 5, scope: !18476)
!18476 = distinct !DILexicalBlock(scope: !18470, file: !1326, line: 227, column: 3)
!18477 = !DILocation(line: 229, column: 3, scope: !18476)
!18478 = !DILocation(line: 230, column: 1, scope: !18436)
!18479 = distinct !DISubprogram(name: "vsf_sysutil_translate_sig", scope: !1326, file: !1326, line: 181, type: !18480, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18480 = !DISubroutineType(types: !18481)
!18481 = !{!19, !18439}
!18482 = !DILocalVariable(name: "sig", arg: 1, scope: !18479, file: !1326, line: 181, type: !18439)
!18483 = !DILocation(line: 181, column: 56, scope: !18479)
!18484 = !DILocalVariable(name: "realsig", scope: !18479, file: !1326, line: 183, type: !19)
!18485 = !DILocation(line: 183, column: 7, scope: !18479)
!18486 = !DILocation(line: 184, column: 11, scope: !18479)
!18487 = !DILocation(line: 184, column: 3, scope: !18479)
!18488 = !DILocation(line: 187, column: 15, scope: !18489)
!18489 = distinct !DILexicalBlock(scope: !18479, file: !1326, line: 185, column: 3)
!18490 = !DILocation(line: 188, column: 7, scope: !18489)
!18491 = !DILocation(line: 190, column: 15, scope: !18489)
!18492 = !DILocation(line: 191, column: 7, scope: !18489)
!18493 = !DILocation(line: 193, column: 15, scope: !18489)
!18494 = !DILocation(line: 194, column: 7, scope: !18489)
!18495 = !DILocation(line: 196, column: 15, scope: !18489)
!18496 = !DILocation(line: 197, column: 7, scope: !18489)
!18497 = !DILocation(line: 199, column: 15, scope: !18489)
!18498 = !DILocation(line: 200, column: 7, scope: !18489)
!18499 = !DILocation(line: 202, column: 15, scope: !18489)
!18500 = !DILocation(line: 203, column: 7, scope: !18489)
!18501 = !DILocation(line: 205, column: 7, scope: !18489)
!18502 = !DILocation(line: 206, column: 7, scope: !18489)
!18503 = !DILocation(line: 208, column: 7, scope: !18504)
!18504 = distinct !DILexicalBlock(scope: !18479, file: !1326, line: 208, column: 7)
!18505 = !DILocation(line: 208, column: 15, scope: !18504)
!18506 = !DILocation(line: 208, column: 19, scope: !18504)
!18507 = !DILocation(line: 208, column: 22, scope: !18504)
!18508 = !DILocation(line: 208, column: 30, scope: !18504)
!18509 = !DILocation(line: 208, column: 7, scope: !18479)
!18510 = !DILocation(line: 210, column: 5, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18504, file: !1326, line: 209, column: 3)
!18512 = !DILocation(line: 211, column: 3, scope: !18511)
!18513 = !DILocation(line: 212, column: 10, scope: !18479)
!18514 = !DILocation(line: 212, column: 3, scope: !18479)
!18515 = distinct !DISubprogram(name: "vsf_sysutil_common_sighandler", scope: !1326, file: !1326, line: 116, type: !1406, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18516 = !DILocalVariable(name: "signum", arg: 1, scope: !18515, file: !1326, line: 116, type: !19)
!18517 = !DILocation(line: 116, column: 35, scope: !18515)
!18518 = !DILocation(line: 118, column: 7, scope: !18519)
!18519 = distinct !DILexicalBlock(scope: !18515, file: !1326, line: 118, column: 7)
!18520 = !DILocation(line: 118, column: 14, scope: !18519)
!18521 = !DILocation(line: 118, column: 18, scope: !18519)
!18522 = !DILocation(line: 118, column: 21, scope: !18519)
!18523 = !DILocation(line: 118, column: 28, scope: !18519)
!18524 = !DILocation(line: 118, column: 7, scope: !18515)
!18525 = !DILocation(line: 121, column: 5, scope: !18526)
!18526 = distinct !DILexicalBlock(scope: !18519, file: !1326, line: 119, column: 3)
!18527 = !DILocation(line: 123, column: 21, scope: !18528)
!18528 = distinct !DILexicalBlock(scope: !18515, file: !1326, line: 123, column: 7)
!18529 = !DILocation(line: 123, column: 7, scope: !18528)
!18530 = !DILocation(line: 123, column: 29, scope: !18528)
!18531 = !DILocation(line: 123, column: 7, scope: !18515)
!18532 = !DILocation(line: 125, column: 19, scope: !18533)
!18533 = distinct !DILexicalBlock(scope: !18528, file: !1326, line: 124, column: 3)
!18534 = !DILocation(line: 125, column: 5, scope: !18533)
!18535 = !DILocation(line: 125, column: 27, scope: !18533)
!18536 = !DILocation(line: 125, column: 35, scope: !18533)
!18537 = !DILocation(line: 130, column: 23, scope: !18538)
!18538 = distinct !DILexicalBlock(scope: !18533, file: !1326, line: 130, column: 9)
!18539 = !DILocation(line: 130, column: 9, scope: !18538)
!18540 = !DILocation(line: 130, column: 31, scope: !18538)
!18541 = !DILocation(line: 130, column: 9, scope: !18533)
!18542 = !DILocation(line: 132, column: 7, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18538, file: !1326, line: 131, column: 5)
!18544 = !DILocation(line: 133, column: 5, scope: !18543)
!18545 = !DILocation(line: 134, column: 3, scope: !18533)
!18546 = !DILocation(line: 135, column: 1, scope: !18515)
!18547 = distinct !DISubprogram(name: "vsf_sysutil_set_sighandler", scope: !1326, file: !1326, line: 262, type: !18548, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18548 = !DISubroutineType(types: !18549)
!18549 = !{null, !19, !1405}
!18550 = !DILocalVariable(name: "sig", arg: 1, scope: !18547, file: !1326, line: 262, type: !19)
!18551 = !DILocation(line: 262, column: 32, scope: !18547)
!18552 = !DILocalVariable(name: "p_handlefunc", arg: 2, scope: !18547, file: !1326, line: 262, type: !1405)
!18553 = !DILocation(line: 262, column: 44, scope: !18547)
!18554 = !DILocalVariable(name: "retval", scope: !18547, file: !1326, line: 264, type: !19)
!18555 = !DILocation(line: 264, column: 7, scope: !18547)
!18556 = !DILocalVariable(name: "sigact", scope: !18547, file: !1326, line: 265, type: !18557)
!18557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !18558, line: 24, size: 1216, elements: !18559)
!18558 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!18559 = !{!18560, !18641, !18648, !18649}
!18560 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !18557, file: !18558, line: 35, baseType: !18561, size: 64)
!18561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18557, file: !18558, line: 28, size: 64, elements: !18562)
!18562 = !{!18563, !18564}
!18563 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !18561, file: !18558, line: 31, baseType: !1403, size: 64)
!18564 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !18561, file: !18558, line: 33, baseType: !18565, size: 64)
!18565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18566, size: 64)
!18566 = !DISubroutineType(types: !18567)
!18567 = !{null, !19, !18568, !80}
!18568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18569, size: 64)
!18569 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !18570, line: 124, baseType: !18571)
!18570 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!18571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !18570, line: 36, size: 1024, elements: !18572)
!18572 = !{!18573, !18574, !18575, !18576, !18577}
!18573 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !18571, file: !18570, line: 38, baseType: !19, size: 32)
!18574 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !18571, file: !18570, line: 40, baseType: !19, size: 32, offset: 32)
!18575 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !18571, file: !18570, line: 42, baseType: !19, size: 32, offset: 64)
!18576 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !18571, file: !18570, line: 48, baseType: !19, size: 32, offset: 96)
!18577 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !18571, file: !18570, line: 123, baseType: !18578, size: 896, offset: 128)
!18578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18571, file: !18570, line: 51, size: 896, elements: !18579)
!18579 = !{!18580, !18584, !18589, !18601, !18607, !18616, !18630, !18635}
!18580 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !18578, file: !18570, line: 53, baseType: !18581, size: 896)
!18581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 896, elements: !18582)
!18582 = !{!18583}
!18583 = !DISubrange(count: 28)
!18584 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !18578, file: !18570, line: 60, baseType: !18585, size: 64)
!18585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18578, file: !18570, line: 56, size: 64, elements: !18586)
!18586 = !{!18587, !18588}
!18587 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !18585, file: !18570, line: 58, baseType: !1750, size: 32)
!18588 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !18585, file: !18570, line: 59, baseType: !1432, size: 32, offset: 32)
!18589 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !18578, file: !18570, line: 68, baseType: !18590, size: 128)
!18590 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18578, file: !18570, line: 63, size: 128, elements: !18591)
!18591 = !{!18592, !18593, !18594}
!18592 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !18590, file: !18570, line: 65, baseType: !19, size: 32)
!18593 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !18590, file: !18570, line: 66, baseType: !19, size: 32, offset: 32)
!18594 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !18590, file: !18570, line: 67, baseType: !18595, size: 64, offset: 64)
!18595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !18596, line: 30, baseType: !18597)
!18596 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!18597 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !18596, line: 24, size: 64, elements: !18598)
!18598 = !{!18599, !18600}
!18599 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !18597, file: !18596, line: 26, baseType: !19, size: 32)
!18600 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !18597, file: !18596, line: 27, baseType: !80, size: 64)
!18601 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !18578, file: !18570, line: 76, baseType: !18602, size: 128)
!18602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18578, file: !18570, line: 71, size: 128, elements: !18603)
!18603 = !{!18604, !18605, !18606}
!18604 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !18602, file: !18570, line: 73, baseType: !1750, size: 32)
!18605 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !18602, file: !18570, line: 74, baseType: !1432, size: 32, offset: 32)
!18606 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !18602, file: !18570, line: 75, baseType: !18595, size: 64, offset: 64)
!18607 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !18578, file: !18570, line: 86, baseType: !18608, size: 256)
!18608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18578, file: !18570, line: 79, size: 256, elements: !18609)
!18609 = !{!18610, !18611, !18612, !18613, !18615}
!18610 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !18608, file: !18570, line: 81, baseType: !1750, size: 32)
!18611 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !18608, file: !18570, line: 82, baseType: !1432, size: 32, offset: 32)
!18612 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !18608, file: !18570, line: 83, baseType: !19, size: 32, offset: 64)
!18613 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !18608, file: !18570, line: 84, baseType: !18614, size: 64, offset: 128)
!18614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !1287, line: 144, baseType: !28)
!18615 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !18608, file: !18570, line: 85, baseType: !18614, size: 64, offset: 192)
!18616 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !18578, file: !18570, line: 105, baseType: !18617, size: 256)
!18617 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18578, file: !18570, line: 89, size: 256, elements: !18618)
!18618 = !{!18619, !18620, !18621}
!18619 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !18617, file: !18570, line: 91, baseType: !80, size: 64)
!18620 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !18617, file: !18570, line: 93, baseType: !1748, size: 16, offset: 64)
!18621 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !18617, file: !18570, line: 104, baseType: !18622, size: 128, offset: 128)
!18622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18617, file: !18570, line: 94, size: 128, elements: !18623)
!18623 = !{!18624, !18629}
!18624 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !18622, file: !18570, line: 101, baseType: !18625, size: 128)
!18625 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18622, file: !18570, line: 97, size: 128, elements: !18626)
!18626 = !{!18627, !18628}
!18627 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !18625, file: !18570, line: 99, baseType: !80, size: 64)
!18628 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !18625, file: !18570, line: 100, baseType: !80, size: 64, offset: 64)
!18629 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !18622, file: !18570, line: 103, baseType: !1294, size: 32)
!18630 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !18578, file: !18570, line: 112, baseType: !18631, size: 128)
!18631 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18578, file: !18570, line: 108, size: 128, elements: !18632)
!18632 = !{!18633, !18634}
!18633 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !18631, file: !18570, line: 110, baseType: !28, size: 64)
!18634 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !18631, file: !18570, line: 111, baseType: !19, size: 32, offset: 64)
!18635 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !18578, file: !18570, line: 121, baseType: !18636, size: 128)
!18636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18578, file: !18570, line: 116, size: 128, elements: !18637)
!18637 = !{!18638, !18639, !18640}
!18638 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !18636, file: !18570, line: 118, baseType: !80, size: 64)
!18639 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !18636, file: !18570, line: 119, baseType: !19, size: 32, offset: 64)
!18640 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !18636, file: !18570, line: 120, baseType: !26, size: 32, offset: 96)
!18641 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !18557, file: !18558, line: 43, baseType: !18642, size: 1024, offset: 64)
!18642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !18643, line: 8, baseType: !18644)
!18643 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!18644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !18643, line: 5, size: 1024, elements: !18645)
!18645 = !{!18646}
!18646 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !18644, file: !18643, line: 7, baseType: !18647, size: 1024)
!18647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !65, size: 1024, elements: !1315)
!18648 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !18557, file: !18558, line: 46, baseType: !19, size: 32, offset: 1088)
!18649 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !18557, file: !18558, line: 49, baseType: !1642, size: 64, offset: 1152)
!18650 = !DILocation(line: 265, column: 20, scope: !18547)
!18651 = !DILocation(line: 266, column: 22, scope: !18547)
!18652 = !DILocation(line: 266, column: 3, scope: !18547)
!18653 = !DILocation(line: 267, column: 23, scope: !18547)
!18654 = !DILocation(line: 267, column: 10, scope: !18547)
!18655 = !DILocation(line: 267, column: 21, scope: !18547)
!18656 = !DILocation(line: 268, column: 31, scope: !18547)
!18657 = !DILocation(line: 268, column: 12, scope: !18547)
!18658 = !DILocation(line: 268, column: 10, scope: !18547)
!18659 = !DILocation(line: 269, column: 7, scope: !18660)
!18660 = distinct !DILexicalBlock(scope: !18547, file: !1326, line: 269, column: 7)
!18661 = !DILocation(line: 269, column: 14, scope: !18660)
!18662 = !DILocation(line: 269, column: 7, scope: !18547)
!18663 = !DILocation(line: 271, column: 5, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18660, file: !1326, line: 270, column: 3)
!18665 = !DILocation(line: 272, column: 3, scope: !18664)
!18666 = !DILocation(line: 273, column: 22, scope: !18547)
!18667 = !DILocation(line: 273, column: 12, scope: !18547)
!18668 = !DILocation(line: 273, column: 10, scope: !18547)
!18669 = !DILocation(line: 274, column: 7, scope: !18670)
!18670 = distinct !DILexicalBlock(scope: !18547, file: !1326, line: 274, column: 7)
!18671 = !DILocation(line: 274, column: 14, scope: !18670)
!18672 = !DILocation(line: 274, column: 7, scope: !18547)
!18673 = !DILocation(line: 276, column: 5, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18670, file: !1326, line: 275, column: 3)
!18675 = !DILocation(line: 277, column: 3, scope: !18674)
!18676 = !DILocation(line: 278, column: 1, scope: !18547)
!18677 = distinct !DISubprogram(name: "vsf_sysutil_alrm_sighandler", scope: !1326, file: !1326, line: 109, type: !1406, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18678 = !DILocalVariable(name: "signum", arg: 1, scope: !18677, file: !1326, line: 109, type: !19)
!18679 = !DILocation(line: 109, column: 33, scope: !18677)
!18680 = !DILocation(line: 111, column: 10, scope: !18677)
!18681 = !DILocation(line: 112, column: 3, scope: !18677)
!18682 = !DILocation(line: 113, column: 1, scope: !18677)
!18683 = distinct !DISubprogram(name: "vsf_sysutil_memclr", scope: !1326, file: !1326, line: 1039, type: !18684, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18684 = !DISubroutineType(types: !18685)
!18685 = !{null, !80, !26}
!18686 = !DILocalVariable(name: "p_dest", arg: 1, scope: !18683, file: !1326, line: 1039, type: !80)
!18687 = !DILocation(line: 1039, column: 26, scope: !18683)
!18688 = !DILocalVariable(name: "size", arg: 2, scope: !18683, file: !1326, line: 1039, type: !26)
!18689 = !DILocation(line: 1039, column: 47, scope: !18683)
!18690 = !DILocation(line: 1042, column: 7, scope: !18691)
!18691 = distinct !DILexicalBlock(scope: !18683, file: !1326, line: 1042, column: 7)
!18692 = !DILocation(line: 1042, column: 12, scope: !18691)
!18693 = !DILocation(line: 1042, column: 7, scope: !18683)
!18694 = !DILocation(line: 1044, column: 5, scope: !18695)
!18695 = distinct !DILexicalBlock(scope: !18691, file: !1326, line: 1043, column: 3)
!18696 = !DILocation(line: 1046, column: 10, scope: !18683)
!18697 = !DILocation(line: 1046, column: 24, scope: !18683)
!18698 = !DILocation(line: 1046, column: 3, scope: !18683)
!18699 = !DILocation(line: 1047, column: 1, scope: !18683)
!18700 = distinct !DISubprogram(name: "vsf_sysutil_default_sig", scope: !1326, file: !1326, line: 233, type: !18701, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18701 = !DISubroutineType(types: !18702)
!18702 = !{null, !18439}
!18703 = !DILocalVariable(name: "sig", arg: 1, scope: !18700, file: !1326, line: 233, type: !18439)
!18704 = !DILocation(line: 233, column: 54, scope: !18700)
!18705 = !DILocalVariable(name: "realsig", scope: !18700, file: !1326, line: 235, type: !19)
!18706 = !DILocation(line: 235, column: 7, scope: !18700)
!18707 = !DILocation(line: 235, column: 43, scope: !18700)
!18708 = !DILocation(line: 235, column: 17, scope: !18700)
!18709 = !DILocation(line: 236, column: 30, scope: !18700)
!18710 = !DILocation(line: 236, column: 3, scope: !18700)
!18711 = !DILocation(line: 237, column: 17, scope: !18700)
!18712 = !DILocation(line: 237, column: 3, scope: !18700)
!18713 = !DILocation(line: 237, column: 26, scope: !18700)
!18714 = !DILocation(line: 237, column: 36, scope: !18700)
!18715 = !DILocation(line: 238, column: 17, scope: !18700)
!18716 = !DILocation(line: 238, column: 3, scope: !18700)
!18717 = !DILocation(line: 238, column: 26, scope: !18700)
!18718 = !DILocation(line: 238, column: 43, scope: !18700)
!18719 = !DILocation(line: 239, column: 1, scope: !18700)
!18720 = distinct !DISubprogram(name: "vsf_sysutil_install_null_sighandler", scope: !1326, file: !1326, line: 242, type: !18701, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18721 = !DILocalVariable(name: "sig", arg: 1, scope: !18720, file: !1326, line: 242, type: !18439)
!18722 = !DILocation(line: 242, column: 66, scope: !18720)
!18723 = !DILocalVariable(name: "realsig", scope: !18720, file: !1326, line: 244, type: !19)
!18724 = !DILocation(line: 244, column: 7, scope: !18720)
!18725 = !DILocation(line: 244, column: 43, scope: !18720)
!18726 = !DILocation(line: 244, column: 17, scope: !18720)
!18727 = !DILocation(line: 245, column: 17, scope: !18720)
!18728 = !DILocation(line: 245, column: 3, scope: !18720)
!18729 = !DILocation(line: 245, column: 26, scope: !18720)
!18730 = !DILocation(line: 245, column: 36, scope: !18720)
!18731 = !DILocation(line: 246, column: 17, scope: !18720)
!18732 = !DILocation(line: 246, column: 3, scope: !18720)
!18733 = !DILocation(line: 246, column: 26, scope: !18720)
!18734 = !DILocation(line: 246, column: 43, scope: !18720)
!18735 = !DILocation(line: 247, column: 30, scope: !18720)
!18736 = !DILocation(line: 247, column: 3, scope: !18720)
!18737 = !DILocation(line: 248, column: 1, scope: !18720)
!18738 = distinct !DISubprogram(name: "vsf_sysutil_install_async_sighandler", scope: !1326, file: !1326, line: 251, type: !18739, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18739 = !DISubroutineType(types: !18740)
!18740 = !{null, !18439, !18741}
!18741 = !DIDerivedType(tag: DW_TAG_typedef, name: "vsf_async_sighandle_t", file: !13, line: 41, baseType: !1405)
!18742 = !DILocalVariable(name: "sig", arg: 1, scope: !18738, file: !1326, line: 251, type: !18439)
!18743 = !DILocation(line: 251, column: 67, scope: !18738)
!18744 = !DILocalVariable(name: "handler", arg: 2, scope: !18738, file: !1326, line: 252, type: !18741)
!18745 = !DILocation(line: 252, column: 60, scope: !18738)
!18746 = !DILocalVariable(name: "realsig", scope: !18738, file: !1326, line: 254, type: !19)
!18747 = !DILocation(line: 254, column: 7, scope: !18738)
!18748 = !DILocation(line: 254, column: 43, scope: !18738)
!18749 = !DILocation(line: 254, column: 17, scope: !18738)
!18750 = !DILocation(line: 255, column: 17, scope: !18738)
!18751 = !DILocation(line: 255, column: 3, scope: !18738)
!18752 = !DILocation(line: 255, column: 26, scope: !18738)
!18753 = !DILocation(line: 255, column: 36, scope: !18738)
!18754 = !DILocation(line: 256, column: 17, scope: !18738)
!18755 = !DILocation(line: 256, column: 3, scope: !18738)
!18756 = !DILocation(line: 256, column: 26, scope: !18738)
!18757 = !DILocation(line: 256, column: 43, scope: !18738)
!18758 = !DILocation(line: 257, column: 25, scope: !18738)
!18759 = !DILocation(line: 257, column: 3, scope: !18738)
!18760 = !DILocation(line: 258, column: 30, scope: !18738)
!18761 = !DILocation(line: 258, column: 39, scope: !18738)
!18762 = !DILocation(line: 258, column: 3, scope: !18738)
!18763 = !DILocation(line: 259, column: 1, scope: !18738)
!18764 = distinct !DISubprogram(name: "vsf_sysutil_block_sig", scope: !1326, file: !1326, line: 281, type: !18701, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18765 = !DILocalVariable(name: "sig", arg: 1, scope: !18764, file: !1326, line: 281, type: !18439)
!18766 = !DILocation(line: 281, column: 52, scope: !18764)
!18767 = !DILocalVariable(name: "sset", scope: !18764, file: !1326, line: 283, type: !18768)
!18768 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !18769, line: 7, baseType: !18642)
!18769 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!18770 = !DILocation(line: 283, column: 12, scope: !18764)
!18771 = !DILocalVariable(name: "retval", scope: !18764, file: !1326, line: 284, type: !19)
!18772 = !DILocation(line: 284, column: 7, scope: !18764)
!18773 = !DILocalVariable(name: "realsig", scope: !18764, file: !1326, line: 285, type: !19)
!18774 = !DILocation(line: 285, column: 7, scope: !18764)
!18775 = !DILocation(line: 285, column: 43, scope: !18764)
!18776 = !DILocation(line: 285, column: 17, scope: !18764)
!18777 = !DILocation(line: 286, column: 12, scope: !18764)
!18778 = !DILocation(line: 286, column: 10, scope: !18764)
!18779 = !DILocation(line: 287, column: 7, scope: !18780)
!18780 = distinct !DILexicalBlock(scope: !18764, file: !1326, line: 287, column: 7)
!18781 = !DILocation(line: 287, column: 14, scope: !18780)
!18782 = !DILocation(line: 287, column: 7, scope: !18764)
!18783 = !DILocation(line: 289, column: 5, scope: !18784)
!18784 = distinct !DILexicalBlock(scope: !18780, file: !1326, line: 288, column: 3)
!18785 = !DILocation(line: 290, column: 3, scope: !18784)
!18786 = !DILocation(line: 291, column: 29, scope: !18764)
!18787 = !DILocation(line: 291, column: 12, scope: !18764)
!18788 = !DILocation(line: 291, column: 10, scope: !18764)
!18789 = !DILocation(line: 292, column: 7, scope: !18790)
!18790 = distinct !DILexicalBlock(scope: !18764, file: !1326, line: 292, column: 7)
!18791 = !DILocation(line: 292, column: 14, scope: !18790)
!18792 = !DILocation(line: 292, column: 7, scope: !18764)
!18793 = !DILocation(line: 294, column: 5, scope: !18794)
!18794 = distinct !DILexicalBlock(scope: !18790, file: !1326, line: 293, column: 3)
!18795 = !DILocation(line: 295, column: 3, scope: !18794)
!18796 = !DILocation(line: 296, column: 12, scope: !18764)
!18797 = !DILocation(line: 296, column: 10, scope: !18764)
!18798 = !DILocation(line: 297, column: 7, scope: !18799)
!18799 = distinct !DILexicalBlock(scope: !18764, file: !1326, line: 297, column: 7)
!18800 = !DILocation(line: 297, column: 14, scope: !18799)
!18801 = !DILocation(line: 297, column: 7, scope: !18764)
!18802 = !DILocation(line: 299, column: 5, scope: !18803)
!18803 = distinct !DILexicalBlock(scope: !18799, file: !1326, line: 298, column: 3)
!18804 = !DILocation(line: 300, column: 3, scope: !18803)
!18805 = !DILocation(line: 301, column: 1, scope: !18764)
!18806 = distinct !DISubprogram(name: "vsf_sysutil_unblock_sig", scope: !1326, file: !1326, line: 304, type: !18701, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18807 = !DILocalVariable(name: "sig", arg: 1, scope: !18806, file: !1326, line: 304, type: !18439)
!18808 = !DILocation(line: 304, column: 54, scope: !18806)
!18809 = !DILocalVariable(name: "sset", scope: !18806, file: !1326, line: 306, type: !18768)
!18810 = !DILocation(line: 306, column: 12, scope: !18806)
!18811 = !DILocalVariable(name: "retval", scope: !18806, file: !1326, line: 307, type: !19)
!18812 = !DILocation(line: 307, column: 7, scope: !18806)
!18813 = !DILocalVariable(name: "realsig", scope: !18806, file: !1326, line: 308, type: !19)
!18814 = !DILocation(line: 308, column: 7, scope: !18806)
!18815 = !DILocation(line: 308, column: 43, scope: !18806)
!18816 = !DILocation(line: 308, column: 17, scope: !18806)
!18817 = !DILocation(line: 309, column: 12, scope: !18806)
!18818 = !DILocation(line: 309, column: 10, scope: !18806)
!18819 = !DILocation(line: 310, column: 7, scope: !18820)
!18820 = distinct !DILexicalBlock(scope: !18806, file: !1326, line: 310, column: 7)
!18821 = !DILocation(line: 310, column: 14, scope: !18820)
!18822 = !DILocation(line: 310, column: 7, scope: !18806)
!18823 = !DILocation(line: 312, column: 5, scope: !18824)
!18824 = distinct !DILexicalBlock(scope: !18820, file: !1326, line: 311, column: 3)
!18825 = !DILocation(line: 313, column: 3, scope: !18824)
!18826 = !DILocation(line: 314, column: 29, scope: !18806)
!18827 = !DILocation(line: 314, column: 12, scope: !18806)
!18828 = !DILocation(line: 314, column: 10, scope: !18806)
!18829 = !DILocation(line: 315, column: 7, scope: !18830)
!18830 = distinct !DILexicalBlock(scope: !18806, file: !1326, line: 315, column: 7)
!18831 = !DILocation(line: 315, column: 14, scope: !18830)
!18832 = !DILocation(line: 315, column: 7, scope: !18806)
!18833 = !DILocation(line: 317, column: 5, scope: !18834)
!18834 = distinct !DILexicalBlock(scope: !18830, file: !1326, line: 316, column: 3)
!18835 = !DILocation(line: 318, column: 3, scope: !18834)
!18836 = !DILocation(line: 319, column: 12, scope: !18806)
!18837 = !DILocation(line: 319, column: 10, scope: !18806)
!18838 = !DILocation(line: 320, column: 7, scope: !18839)
!18839 = distinct !DILexicalBlock(scope: !18806, file: !1326, line: 320, column: 7)
!18840 = !DILocation(line: 320, column: 14, scope: !18839)
!18841 = !DILocation(line: 320, column: 7, scope: !18806)
!18842 = !DILocation(line: 322, column: 5, scope: !18843)
!18843 = distinct !DILexicalBlock(scope: !18839, file: !1326, line: 321, column: 3)
!18844 = !DILocation(line: 323, column: 3, scope: !18843)
!18845 = !DILocation(line: 324, column: 1, scope: !18806)
!18846 = distinct !DISubprogram(name: "vsf_sysutil_install_io_handler", scope: !1326, file: !1326, line: 326, type: !18847, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18847 = !DISubroutineType(types: !18848)
!18848 = !{null, !1669, !80}
!18849 = !DILocalVariable(name: "handler", arg: 1, scope: !18846, file: !1326, line: 326, type: !1669)
!18850 = !DILocation(line: 326, column: 49, scope: !18846)
!18851 = !DILocalVariable(name: "p_private", arg: 2, scope: !18846, file: !1326, line: 326, type: !80)
!18852 = !DILocation(line: 326, column: 64, scope: !18846)
!18853 = !DILocation(line: 328, column: 7, scope: !18854)
!18854 = distinct !DILexicalBlock(scope: !18846, file: !1326, line: 328, column: 7)
!18855 = !DILocation(line: 328, column: 20, scope: !18854)
!18856 = !DILocation(line: 328, column: 7, scope: !18846)
!18857 = !DILocation(line: 330, column: 5, scope: !18858)
!18858 = distinct !DILexicalBlock(scope: !18854, file: !1326, line: 329, column: 3)
!18859 = !DILocation(line: 331, column: 3, scope: !18858)
!18860 = !DILocation(line: 332, column: 18, scope: !18846)
!18861 = !DILocation(line: 332, column: 16, scope: !18846)
!18862 = !DILocation(line: 333, column: 28, scope: !18846)
!18863 = !DILocation(line: 333, column: 26, scope: !18846)
!18864 = !DILocation(line: 334, column: 1, scope: !18846)
!18865 = distinct !DISubprogram(name: "vsf_sysutil_uninstall_io_handler", scope: !1326, file: !1326, line: 337, type: !1619, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18866 = !DILocation(line: 339, column: 7, scope: !18867)
!18867 = distinct !DILexicalBlock(scope: !18865, file: !1326, line: 339, column: 7)
!18868 = !DILocation(line: 339, column: 20, scope: !18867)
!18869 = !DILocation(line: 339, column: 7, scope: !18865)
!18870 = !DILocation(line: 341, column: 5, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18867, file: !1326, line: 340, column: 3)
!18872 = !DILocation(line: 342, column: 3, scope: !18871)
!18873 = !DILocation(line: 343, column: 16, scope: !18865)
!18874 = !DILocation(line: 344, column: 26, scope: !18865)
!18875 = !DILocation(line: 345, column: 1, scope: !18865)
!18876 = distinct !DISubprogram(name: "vsf_sysutil_set_alarm", scope: !1326, file: !1326, line: 348, type: !18877, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18877 = !DISubroutineType(types: !18878)
!18878 = !{null, !850}
!18879 = !DILocalVariable(name: "trigger_seconds", arg: 1, scope: !18876, file: !1326, line: 348, type: !850)
!18880 = !DILocation(line: 348, column: 42, scope: !18876)
!18881 = !DILocation(line: 350, column: 16, scope: !18876)
!18882 = !DILocation(line: 350, column: 10, scope: !18876)
!18883 = !DILocation(line: 351, column: 1, scope: !18876)
!18884 = distinct !DISubprogram(name: "vsf_sysutil_clear_alarm", scope: !1326, file: !1326, line: 354, type: !1619, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18885 = !DILocation(line: 356, column: 3, scope: !18884)
!18886 = !DILocation(line: 357, column: 1, scope: !18884)
!18887 = distinct !DISubprogram(name: "vsf_sysutil_read", scope: !1326, file: !1326, line: 360, type: !18888, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18888 = !DISubroutineType(types: !18889)
!18889 = !{!19, !1782, !80, !850}
!18890 = !DILocalVariable(name: "fd", arg: 1, scope: !18887, file: !1326, line: 360, type: !1782)
!18891 = !DILocation(line: 360, column: 28, scope: !18887)
!18892 = !DILocalVariable(name: "p_buf", arg: 2, scope: !18887, file: !1326, line: 360, type: !80)
!18893 = !DILocation(line: 360, column: 38, scope: !18887)
!18894 = !DILocalVariable(name: "size", arg: 3, scope: !18887, file: !1326, line: 360, type: !850)
!18895 = !DILocation(line: 360, column: 64, scope: !18887)
!18896 = !DILocation(line: 362, column: 3, scope: !18887)
!18897 = !DILocalVariable(name: "retval", scope: !18898, file: !1326, line: 364, type: !19)
!18898 = distinct !DILexicalBlock(scope: !18887, file: !1326, line: 363, column: 3)
!18899 = !DILocation(line: 364, column: 9, scope: !18898)
!18900 = !DILocation(line: 364, column: 23, scope: !18898)
!18901 = !DILocation(line: 364, column: 27, scope: !18898)
!18902 = !DILocation(line: 364, column: 34, scope: !18898)
!18903 = !DILocation(line: 364, column: 18, scope: !18898)
!18904 = !DILocalVariable(name: "saved_errno", scope: !18898, file: !1326, line: 365, type: !19)
!18905 = !DILocation(line: 365, column: 9, scope: !18898)
!18906 = !DILocation(line: 365, column: 23, scope: !18898)
!18907 = !DILocation(line: 366, column: 54, scope: !18898)
!18908 = !DILocation(line: 366, column: 62, scope: !18898)
!18909 = !DILocation(line: 366, column: 5, scope: !18898)
!18910 = !DILocation(line: 367, column: 9, scope: !18911)
!18911 = distinct !DILexicalBlock(scope: !18898, file: !1326, line: 367, column: 9)
!18912 = !DILocation(line: 367, column: 16, scope: !18911)
!18913 = !DILocation(line: 367, column: 20, scope: !18911)
!18914 = !DILocation(line: 367, column: 23, scope: !18911)
!18915 = !DILocation(line: 367, column: 35, scope: !18911)
!18916 = !DILocation(line: 367, column: 9, scope: !18898)
!18917 = !DILocation(line: 369, column: 7, scope: !18918)
!18918 = distinct !DILexicalBlock(scope: !18911, file: !1326, line: 368, column: 5)
!18919 = distinct !{!18919, !18896, !18920}
!18920 = !DILocation(line: 372, column: 3, scope: !18887)
!18921 = !DILocation(line: 371, column: 12, scope: !18898)
!18922 = !DILocation(line: 371, column: 5, scope: !18898)
!18923 = distinct !DISubprogram(name: "vsf_sysutil_write", scope: !1326, file: !1326, line: 376, type: !18924, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18924 = !DISubroutineType(types: !18925)
!18925 = !{!19, !1782, !1595, !850}
!18926 = !DILocalVariable(name: "fd", arg: 1, scope: !18923, file: !1326, line: 376, type: !1782)
!18927 = !DILocation(line: 376, column: 29, scope: !18923)
!18928 = !DILocalVariable(name: "p_buf", arg: 2, scope: !18923, file: !1326, line: 376, type: !1595)
!18929 = !DILocation(line: 376, column: 45, scope: !18923)
!18930 = !DILocalVariable(name: "size", arg: 3, scope: !18923, file: !1326, line: 376, type: !850)
!18931 = !DILocation(line: 376, column: 71, scope: !18923)
!18932 = !DILocation(line: 378, column: 3, scope: !18923)
!18933 = !DILocalVariable(name: "retval", scope: !18934, file: !1326, line: 380, type: !19)
!18934 = distinct !DILexicalBlock(scope: !18923, file: !1326, line: 379, column: 3)
!18935 = !DILocation(line: 380, column: 9, scope: !18934)
!18936 = !DILocation(line: 380, column: 24, scope: !18934)
!18937 = !DILocation(line: 380, column: 28, scope: !18934)
!18938 = !DILocation(line: 380, column: 35, scope: !18934)
!18939 = !DILocation(line: 380, column: 18, scope: !18934)
!18940 = !DILocalVariable(name: "saved_errno", scope: !18934, file: !1326, line: 381, type: !19)
!18941 = !DILocation(line: 381, column: 9, scope: !18934)
!18942 = !DILocation(line: 381, column: 23, scope: !18934)
!18943 = !DILocation(line: 382, column: 54, scope: !18934)
!18944 = !DILocation(line: 382, column: 62, scope: !18934)
!18945 = !DILocation(line: 382, column: 5, scope: !18934)
!18946 = !DILocation(line: 383, column: 9, scope: !18947)
!18947 = distinct !DILexicalBlock(scope: !18934, file: !1326, line: 383, column: 9)
!18948 = !DILocation(line: 383, column: 16, scope: !18947)
!18949 = !DILocation(line: 383, column: 20, scope: !18947)
!18950 = !DILocation(line: 383, column: 23, scope: !18947)
!18951 = !DILocation(line: 383, column: 35, scope: !18947)
!18952 = !DILocation(line: 383, column: 9, scope: !18934)
!18953 = !DILocation(line: 385, column: 7, scope: !18954)
!18954 = distinct !DILexicalBlock(scope: !18947, file: !1326, line: 384, column: 5)
!18955 = distinct !{!18955, !18932, !18956}
!18956 = !DILocation(line: 388, column: 3, scope: !18923)
!18957 = !DILocation(line: 387, column: 12, scope: !18934)
!18958 = !DILocation(line: 387, column: 5, scope: !18934)
!18959 = distinct !DISubprogram(name: "vsf_sysutil_read_loop", scope: !1326, file: !1326, line: 392, type: !18960, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!18960 = !DISubroutineType(types: !18961)
!18961 = !{!19, !1782, !80, !26}
!18962 = !DILocalVariable(name: "fd", arg: 1, scope: !18959, file: !1326, line: 392, type: !1782)
!18963 = !DILocation(line: 392, column: 33, scope: !18959)
!18964 = !DILocalVariable(name: "p_buf", arg: 2, scope: !18959, file: !1326, line: 392, type: !80)
!18965 = !DILocation(line: 392, column: 43, scope: !18959)
!18966 = !DILocalVariable(name: "size", arg: 3, scope: !18959, file: !1326, line: 392, type: !26)
!18967 = !DILocation(line: 392, column: 63, scope: !18959)
!18968 = !DILocalVariable(name: "retval", scope: !18959, file: !1326, line: 394, type: !19)
!18969 = !DILocation(line: 394, column: 7, scope: !18959)
!18970 = !DILocalVariable(name: "num_read", scope: !18959, file: !1326, line: 395, type: !19)
!18971 = !DILocation(line: 395, column: 7, scope: !18959)
!18972 = !DILocation(line: 396, column: 7, scope: !18973)
!18973 = distinct !DILexicalBlock(scope: !18959, file: !1326, line: 396, column: 7)
!18974 = !DILocation(line: 396, column: 12, scope: !18973)
!18975 = !DILocation(line: 396, column: 7, scope: !18959)
!18976 = !DILocation(line: 398, column: 5, scope: !18977)
!18977 = distinct !DILexicalBlock(scope: !18973, file: !1326, line: 397, column: 3)
!18978 = !DILocation(line: 399, column: 3, scope: !18977)
!18979 = !DILocation(line: 400, column: 3, scope: !18959)
!18980 = !DILocation(line: 402, column: 31, scope: !18981)
!18981 = distinct !DILexicalBlock(scope: !18959, file: !1326, line: 401, column: 3)
!18982 = !DILocation(line: 402, column: 42, scope: !18981)
!18983 = !DILocation(line: 402, column: 50, scope: !18981)
!18984 = !DILocation(line: 402, column: 48, scope: !18981)
!18985 = !DILocation(line: 402, column: 60, scope: !18981)
!18986 = !DILocation(line: 402, column: 14, scope: !18981)
!18987 = !DILocation(line: 402, column: 12, scope: !18981)
!18988 = !DILocation(line: 403, column: 9, scope: !18989)
!18989 = distinct !DILexicalBlock(scope: !18981, file: !1326, line: 403, column: 9)
!18990 = !DILocation(line: 403, column: 16, scope: !18989)
!18991 = !DILocation(line: 403, column: 9, scope: !18981)
!18992 = !DILocation(line: 405, column: 14, scope: !18993)
!18993 = distinct !DILexicalBlock(scope: !18989, file: !1326, line: 404, column: 5)
!18994 = !DILocation(line: 405, column: 7, scope: !18993)
!18995 = !DILocation(line: 407, column: 14, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18989, file: !1326, line: 407, column: 14)
!18997 = !DILocation(line: 407, column: 21, scope: !18996)
!18998 = !DILocation(line: 407, column: 14, scope: !18989)
!18999 = !DILocation(line: 410, column: 14, scope: !19000)
!19000 = distinct !DILexicalBlock(scope: !18996, file: !1326, line: 408, column: 5)
!19001 = !DILocation(line: 410, column: 7, scope: !19000)
!19002 = !DILocation(line: 412, column: 24, scope: !19003)
!19003 = distinct !DILexicalBlock(scope: !18981, file: !1326, line: 412, column: 9)
!19004 = !DILocation(line: 412, column: 33, scope: !19003)
!19005 = !DILocation(line: 412, column: 31, scope: !19003)
!19006 = !DILocation(line: 412, column: 9, scope: !18981)
!19007 = !DILocation(line: 414, column: 7, scope: !19008)
!19008 = distinct !DILexicalBlock(scope: !19003, file: !1326, line: 413, column: 5)
!19009 = !DILocation(line: 415, column: 5, scope: !19008)
!19010 = !DILocation(line: 416, column: 17, scope: !18981)
!19011 = !DILocation(line: 416, column: 14, scope: !18981)
!19012 = !DILocation(line: 417, column: 28, scope: !18981)
!19013 = !DILocation(line: 417, column: 10, scope: !18981)
!19014 = !DILocation(line: 418, column: 9, scope: !19015)
!19015 = distinct !DILexicalBlock(scope: !18981, file: !1326, line: 418, column: 9)
!19016 = !DILocation(line: 418, column: 14, scope: !19015)
!19017 = !DILocation(line: 418, column: 9, scope: !18981)
!19018 = !DILocation(line: 421, column: 14, scope: !19019)
!19019 = distinct !DILexicalBlock(scope: !19015, file: !1326, line: 419, column: 5)
!19020 = !DILocation(line: 421, column: 7, scope: !19019)
!19021 = distinct !{!19021, !18979, !19022}
!19022 = !DILocation(line: 423, column: 3, scope: !18959)
!19023 = !DILocation(line: 424, column: 1, scope: !18959)
!19024 = distinct !DISubprogram(name: "vsf_sysutil_write_loop", scope: !1326, file: !1326, line: 427, type: !19025, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19025 = !DISubroutineType(types: !19026)
!19026 = !{!19, !1782, !1595, !26}
!19027 = !DILocalVariable(name: "fd", arg: 1, scope: !19024, file: !1326, line: 427, type: !1782)
!19028 = !DILocation(line: 427, column: 34, scope: !19024)
!19029 = !DILocalVariable(name: "p_buf", arg: 2, scope: !19024, file: !1326, line: 427, type: !1595)
!19030 = !DILocation(line: 427, column: 50, scope: !19024)
!19031 = !DILocalVariable(name: "size", arg: 3, scope: !19024, file: !1326, line: 427, type: !26)
!19032 = !DILocation(line: 427, column: 70, scope: !19024)
!19033 = !DILocalVariable(name: "retval", scope: !19024, file: !1326, line: 429, type: !19)
!19034 = !DILocation(line: 429, column: 7, scope: !19024)
!19035 = !DILocalVariable(name: "num_written", scope: !19024, file: !1326, line: 430, type: !19)
!19036 = !DILocation(line: 430, column: 7, scope: !19024)
!19037 = !DILocation(line: 431, column: 7, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19024, file: !1326, line: 431, column: 7)
!19039 = !DILocation(line: 431, column: 12, scope: !19038)
!19040 = !DILocation(line: 431, column: 7, scope: !19024)
!19041 = !DILocation(line: 433, column: 5, scope: !19042)
!19042 = distinct !DILexicalBlock(scope: !19038, file: !1326, line: 432, column: 3)
!19043 = !DILocation(line: 434, column: 3, scope: !19042)
!19044 = !DILocation(line: 435, column: 3, scope: !19024)
!19045 = !DILocation(line: 437, column: 32, scope: !19046)
!19046 = distinct !DILexicalBlock(scope: !19024, file: !1326, line: 436, column: 3)
!19047 = !DILocation(line: 437, column: 49, scope: !19046)
!19048 = !DILocation(line: 437, column: 57, scope: !19046)
!19049 = !DILocation(line: 437, column: 55, scope: !19046)
!19050 = !DILocation(line: 437, column: 70, scope: !19046)
!19051 = !DILocation(line: 437, column: 14, scope: !19046)
!19052 = !DILocation(line: 437, column: 12, scope: !19046)
!19053 = !DILocation(line: 438, column: 9, scope: !19054)
!19054 = distinct !DILexicalBlock(scope: !19046, file: !1326, line: 438, column: 9)
!19055 = !DILocation(line: 438, column: 16, scope: !19054)
!19056 = !DILocation(line: 438, column: 9, scope: !19046)
!19057 = !DILocation(line: 441, column: 14, scope: !19058)
!19058 = distinct !DILexicalBlock(scope: !19054, file: !1326, line: 439, column: 5)
!19059 = !DILocation(line: 441, column: 7, scope: !19058)
!19060 = !DILocation(line: 443, column: 14, scope: !19061)
!19061 = distinct !DILexicalBlock(scope: !19054, file: !1326, line: 443, column: 14)
!19062 = !DILocation(line: 443, column: 21, scope: !19061)
!19063 = !DILocation(line: 443, column: 14, scope: !19054)
!19064 = !DILocation(line: 446, column: 14, scope: !19065)
!19065 = distinct !DILexicalBlock(scope: !19061, file: !1326, line: 444, column: 5)
!19066 = !DILocation(line: 446, column: 7, scope: !19065)
!19067 = !DILocation(line: 448, column: 24, scope: !19068)
!19068 = distinct !DILexicalBlock(scope: !19046, file: !1326, line: 448, column: 9)
!19069 = !DILocation(line: 448, column: 33, scope: !19068)
!19070 = !DILocation(line: 448, column: 31, scope: !19068)
!19071 = !DILocation(line: 448, column: 9, scope: !19046)
!19072 = !DILocation(line: 450, column: 7, scope: !19073)
!19073 = distinct !DILexicalBlock(scope: !19068, file: !1326, line: 449, column: 5)
!19074 = !DILocation(line: 451, column: 5, scope: !19073)
!19075 = !DILocation(line: 452, column: 20, scope: !19046)
!19076 = !DILocation(line: 452, column: 17, scope: !19046)
!19077 = !DILocation(line: 453, column: 28, scope: !19046)
!19078 = !DILocation(line: 453, column: 10, scope: !19046)
!19079 = !DILocation(line: 454, column: 9, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !19046, file: !1326, line: 454, column: 9)
!19081 = !DILocation(line: 454, column: 14, scope: !19080)
!19082 = !DILocation(line: 454, column: 9, scope: !19046)
!19083 = !DILocation(line: 457, column: 14, scope: !19084)
!19084 = distinct !DILexicalBlock(scope: !19080, file: !1326, line: 455, column: 5)
!19085 = !DILocation(line: 457, column: 7, scope: !19084)
!19086 = distinct !{!19086, !19044, !19087}
!19087 = !DILocation(line: 459, column: 3, scope: !19024)
!19088 = !DILocation(line: 460, column: 1, scope: !19024)
!19089 = distinct !DISubprogram(name: "vsf_sysutil_get_file_offset", scope: !1326, file: !1326, line: 463, type: !19090, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19090 = !DISubroutineType(types: !19091)
!19091 = !{!41, !1782}
!19092 = !DILocalVariable(name: "file_fd", arg: 1, scope: !19089, file: !1326, line: 463, type: !1782)
!19093 = !DILocation(line: 463, column: 39, scope: !19089)
!19094 = !DILocalVariable(name: "retval", scope: !19089, file: !1326, line: 465, type: !41)
!19095 = !DILocation(line: 465, column: 14, scope: !19089)
!19096 = !DILocation(line: 465, column: 29, scope: !19089)
!19097 = !DILocation(line: 465, column: 23, scope: !19089)
!19098 = !DILocation(line: 466, column: 7, scope: !19099)
!19099 = distinct !DILexicalBlock(scope: !19089, file: !1326, line: 466, column: 7)
!19100 = !DILocation(line: 466, column: 14, scope: !19099)
!19101 = !DILocation(line: 466, column: 7, scope: !19089)
!19102 = !DILocation(line: 468, column: 5, scope: !19103)
!19103 = distinct !DILexicalBlock(scope: !19099, file: !1326, line: 467, column: 3)
!19104 = !DILocation(line: 469, column: 3, scope: !19103)
!19105 = !DILocation(line: 470, column: 10, scope: !19089)
!19106 = !DILocation(line: 470, column: 3, scope: !19089)
!19107 = distinct !DISubprogram(name: "vsf_sysutil_lseek_to", scope: !1326, file: !1326, line: 474, type: !19108, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19108 = !DISubroutineType(types: !19109)
!19109 = !{null, !1782, !41}
!19110 = !DILocalVariable(name: "fd", arg: 1, scope: !19107, file: !1326, line: 474, type: !1782)
!19111 = !DILocation(line: 474, column: 32, scope: !19107)
!19112 = !DILocalVariable(name: "seek_pos", arg: 2, scope: !19107, file: !1326, line: 474, type: !41)
!19113 = !DILocation(line: 474, column: 47, scope: !19107)
!19114 = !DILocalVariable(name: "retval", scope: !19107, file: !1326, line: 476, type: !41)
!19115 = !DILocation(line: 476, column: 14, scope: !19107)
!19116 = !DILocation(line: 477, column: 7, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19107, file: !1326, line: 477, column: 7)
!19118 = !DILocation(line: 477, column: 16, scope: !19117)
!19119 = !DILocation(line: 477, column: 7, scope: !19107)
!19120 = !DILocation(line: 479, column: 5, scope: !19121)
!19121 = distinct !DILexicalBlock(scope: !19117, file: !1326, line: 478, column: 3)
!19122 = !DILocation(line: 480, column: 3, scope: !19121)
!19123 = !DILocation(line: 481, column: 18, scope: !19107)
!19124 = !DILocation(line: 481, column: 22, scope: !19107)
!19125 = !DILocation(line: 481, column: 12, scope: !19107)
!19126 = !DILocation(line: 481, column: 10, scope: !19107)
!19127 = !DILocation(line: 482, column: 7, scope: !19128)
!19128 = distinct !DILexicalBlock(scope: !19107, file: !1326, line: 482, column: 7)
!19129 = !DILocation(line: 482, column: 14, scope: !19128)
!19130 = !DILocation(line: 482, column: 7, scope: !19107)
!19131 = !DILocation(line: 484, column: 5, scope: !19132)
!19132 = distinct !DILexicalBlock(scope: !19128, file: !1326, line: 483, column: 3)
!19133 = !DILocation(line: 485, column: 3, scope: !19132)
!19134 = !DILocation(line: 486, column: 1, scope: !19107)
!19135 = distinct !DISubprogram(name: "vsf_sysutil_lseek_end", scope: !1326, file: !1326, line: 489, type: !19136, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19136 = !DISubroutineType(types: !19137)
!19137 = !{null, !1782}
!19138 = !DILocalVariable(name: "fd", arg: 1, scope: !19135, file: !1326, line: 489, type: !1782)
!19139 = !DILocation(line: 489, column: 33, scope: !19135)
!19140 = !DILocalVariable(name: "retval", scope: !19135, file: !1326, line: 491, type: !41)
!19141 = !DILocation(line: 491, column: 14, scope: !19135)
!19142 = !DILocation(line: 492, column: 18, scope: !19135)
!19143 = !DILocation(line: 492, column: 12, scope: !19135)
!19144 = !DILocation(line: 492, column: 10, scope: !19135)
!19145 = !DILocation(line: 493, column: 7, scope: !19146)
!19146 = distinct !DILexicalBlock(scope: !19135, file: !1326, line: 493, column: 7)
!19147 = !DILocation(line: 493, column: 14, scope: !19146)
!19148 = !DILocation(line: 493, column: 7, scope: !19135)
!19149 = !DILocation(line: 495, column: 5, scope: !19150)
!19150 = distinct !DILexicalBlock(scope: !19146, file: !1326, line: 494, column: 3)
!19151 = !DILocation(line: 496, column: 3, scope: !19150)
!19152 = !DILocation(line: 497, column: 1, scope: !19135)
!19153 = distinct !DISubprogram(name: "vsf_sysutil_malloc", scope: !1326, file: !1326, line: 500, type: !19154, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19154 = !DISubroutineType(types: !19155)
!19155 = !{!80, !26}
!19156 = !DILocalVariable(name: "size", arg: 1, scope: !19153, file: !1326, line: 500, type: !26)
!19157 = !DILocation(line: 500, column: 33, scope: !19153)
!19158 = !DILocalVariable(name: "p_ret", scope: !19153, file: !1326, line: 502, type: !80)
!19159 = !DILocation(line: 502, column: 9, scope: !19153)
!19160 = !DILocation(line: 504, column: 7, scope: !19161)
!19161 = distinct !DILexicalBlock(scope: !19153, file: !1326, line: 504, column: 7)
!19162 = !DILocation(line: 504, column: 12, scope: !19161)
!19163 = !DILocation(line: 504, column: 17, scope: !19161)
!19164 = !DILocation(line: 504, column: 20, scope: !19161)
!19165 = !DILocation(line: 504, column: 25, scope: !19161)
!19166 = !DILocation(line: 504, column: 7, scope: !19153)
!19167 = !DILocation(line: 506, column: 5, scope: !19168)
!19168 = distinct !DILexicalBlock(scope: !19161, file: !1326, line: 505, column: 3)
!19169 = !DILocation(line: 507, column: 3, scope: !19168)
!19170 = !DILocation(line: 508, column: 18, scope: !19153)
!19171 = !DILocation(line: 508, column: 11, scope: !19153)
!19172 = !DILocation(line: 508, column: 9, scope: !19153)
!19173 = !DILocation(line: 509, column: 7, scope: !19174)
!19174 = distinct !DILexicalBlock(scope: !19153, file: !1326, line: 509, column: 7)
!19175 = !DILocation(line: 509, column: 13, scope: !19174)
!19176 = !DILocation(line: 509, column: 7, scope: !19153)
!19177 = !DILocation(line: 511, column: 5, scope: !19178)
!19178 = distinct !DILexicalBlock(scope: !19174, file: !1326, line: 510, column: 3)
!19179 = !DILocation(line: 512, column: 3, scope: !19178)
!19180 = !DILocation(line: 513, column: 10, scope: !19153)
!19181 = !DILocation(line: 513, column: 3, scope: !19153)
!19182 = distinct !DISubprogram(name: "vsf_sysutil_realloc", scope: !1326, file: !1326, line: 517, type: !19183, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19183 = !DISubroutineType(types: !19184)
!19184 = !{!80, !80, !26}
!19185 = !DILocalVariable(name: "p_ptr", arg: 1, scope: !19182, file: !1326, line: 517, type: !80)
!19186 = !DILocation(line: 517, column: 27, scope: !19182)
!19187 = !DILocalVariable(name: "size", arg: 2, scope: !19182, file: !1326, line: 517, type: !26)
!19188 = !DILocation(line: 517, column: 47, scope: !19182)
!19189 = !DILocalVariable(name: "p_ret", scope: !19182, file: !1326, line: 519, type: !80)
!19190 = !DILocation(line: 519, column: 9, scope: !19182)
!19191 = !DILocation(line: 520, column: 7, scope: !19192)
!19192 = distinct !DILexicalBlock(scope: !19182, file: !1326, line: 520, column: 7)
!19193 = !DILocation(line: 520, column: 12, scope: !19192)
!19194 = !DILocation(line: 520, column: 17, scope: !19192)
!19195 = !DILocation(line: 520, column: 20, scope: !19192)
!19196 = !DILocation(line: 520, column: 25, scope: !19192)
!19197 = !DILocation(line: 520, column: 7, scope: !19182)
!19198 = !DILocation(line: 522, column: 5, scope: !19199)
!19199 = distinct !DILexicalBlock(scope: !19192, file: !1326, line: 521, column: 3)
!19200 = !DILocation(line: 523, column: 3, scope: !19199)
!19201 = !DILocation(line: 524, column: 19, scope: !19182)
!19202 = !DILocation(line: 524, column: 26, scope: !19182)
!19203 = !DILocation(line: 524, column: 11, scope: !19182)
!19204 = !DILocation(line: 524, column: 9, scope: !19182)
!19205 = !DILocation(line: 525, column: 7, scope: !19206)
!19206 = distinct !DILexicalBlock(scope: !19182, file: !1326, line: 525, column: 7)
!19207 = !DILocation(line: 525, column: 13, scope: !19206)
!19208 = !DILocation(line: 525, column: 7, scope: !19182)
!19209 = !DILocation(line: 527, column: 5, scope: !19210)
!19210 = distinct !DILexicalBlock(scope: !19206, file: !1326, line: 526, column: 3)
!19211 = !DILocation(line: 528, column: 3, scope: !19210)
!19212 = !DILocation(line: 529, column: 10, scope: !19182)
!19213 = !DILocation(line: 529, column: 3, scope: !19182)
!19214 = distinct !DISubprogram(name: "vsf_sysutil_free", scope: !1326, file: !1326, line: 533, type: !1072, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19215 = !DILocalVariable(name: "p_ptr", arg: 1, scope: !19214, file: !1326, line: 533, type: !80)
!19216 = !DILocation(line: 533, column: 24, scope: !19214)
!19217 = !DILocation(line: 535, column: 7, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19214, file: !1326, line: 535, column: 7)
!19219 = !DILocation(line: 535, column: 13, scope: !19218)
!19220 = !DILocation(line: 535, column: 7, scope: !19214)
!19221 = !DILocation(line: 537, column: 5, scope: !19222)
!19222 = distinct !DILexicalBlock(scope: !19218, file: !1326, line: 536, column: 3)
!19223 = !DILocation(line: 538, column: 3, scope: !19222)
!19224 = !DILocation(line: 539, column: 8, scope: !19214)
!19225 = !DILocation(line: 539, column: 3, scope: !19214)
!19226 = !DILocation(line: 540, column: 1, scope: !19214)
!19227 = distinct !DISubprogram(name: "vsf_sysutil_getpid", scope: !1326, file: !1326, line: 543, type: !1520, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19228 = !DILocation(line: 545, column: 7, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19227, file: !1326, line: 545, column: 7)
!19230 = !DILocation(line: 545, column: 21, scope: !19229)
!19231 = !DILocation(line: 545, column: 7, scope: !19227)
!19232 = !DILocation(line: 547, column: 21, scope: !19233)
!19233 = distinct !DILexicalBlock(scope: !19229, file: !1326, line: 546, column: 3)
!19234 = !DILocation(line: 547, column: 19, scope: !19233)
!19235 = !DILocation(line: 548, column: 3, scope: !19233)
!19236 = !DILocation(line: 549, column: 25, scope: !19227)
!19237 = !DILocation(line: 549, column: 3, scope: !19227)
!19238 = distinct !DISubprogram(name: "vsf_sysutil_fork", scope: !1326, file: !1326, line: 553, type: !1713, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19239 = !DILocalVariable(name: "retval", scope: !19238, file: !1326, line: 555, type: !19)
!19240 = !DILocation(line: 555, column: 7, scope: !19238)
!19241 = !DILocation(line: 555, column: 16, scope: !19238)
!19242 = !DILocation(line: 556, column: 7, scope: !19243)
!19243 = distinct !DILexicalBlock(scope: !19238, file: !1326, line: 556, column: 7)
!19244 = !DILocation(line: 556, column: 14, scope: !19243)
!19245 = !DILocation(line: 556, column: 7, scope: !19238)
!19246 = !DILocation(line: 558, column: 5, scope: !19247)
!19247 = distinct !DILexicalBlock(scope: !19243, file: !1326, line: 557, column: 3)
!19248 = !DILocation(line: 559, column: 3, scope: !19247)
!19249 = !DILocation(line: 560, column: 10, scope: !19238)
!19250 = !DILocation(line: 560, column: 3, scope: !19238)
!19251 = distinct !DISubprogram(name: "vsf_sysutil_fork_failok", scope: !1326, file: !1326, line: 564, type: !1713, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19252 = !DILocalVariable(name: "retval", scope: !19251, file: !1326, line: 566, type: !19)
!19253 = !DILocation(line: 566, column: 7, scope: !19251)
!19254 = !DILocation(line: 567, column: 12, scope: !19251)
!19255 = !DILocation(line: 567, column: 10, scope: !19251)
!19256 = !DILocation(line: 568, column: 7, scope: !19257)
!19257 = distinct !DILexicalBlock(scope: !19251, file: !1326, line: 568, column: 7)
!19258 = !DILocation(line: 568, column: 14, scope: !19257)
!19259 = !DILocation(line: 568, column: 7, scope: !19251)
!19260 = !DILocation(line: 570, column: 5, scope: !19261)
!19261 = distinct !DILexicalBlock(scope: !19257, file: !1326, line: 569, column: 3)
!19262 = !DILocation(line: 571, column: 3, scope: !19261)
!19263 = !DILocation(line: 572, column: 10, scope: !19251)
!19264 = !DILocation(line: 572, column: 3, scope: !19251)
!19265 = distinct !DISubprogram(name: "vsf_sysutil_post_fork", scope: !1326, file: !1326, line: 2844, type: !1619, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19266 = !DILocalVariable(name: "i", scope: !19265, file: !1326, line: 2846, type: !19)
!19267 = !DILocation(line: 2846, column: 7, scope: !19265)
!19268 = !DILocation(line: 2848, column: 15, scope: !19265)
!19269 = !DILocation(line: 2850, column: 17, scope: !19265)
!19270 = !DILocation(line: 2852, column: 16, scope: !19265)
!19271 = !DILocation(line: 2853, column: 9, scope: !19272)
!19272 = distinct !DILexicalBlock(scope: !19265, file: !1326, line: 2853, column: 3)
!19273 = !DILocation(line: 2853, column: 8, scope: !19272)
!19274 = !DILocation(line: 2853, column: 13, scope: !19275)
!19275 = distinct !DILexicalBlock(scope: !19272, file: !1326, line: 2853, column: 3)
!19276 = !DILocation(line: 2853, column: 15, scope: !19275)
!19277 = !DILocation(line: 2853, column: 3, scope: !19272)
!19278 = !DILocation(line: 2855, column: 19, scope: !19279)
!19279 = distinct !DILexicalBlock(scope: !19275, file: !1326, line: 2854, column: 3)
!19280 = !DILocation(line: 2855, column: 5, scope: !19279)
!19281 = !DILocation(line: 2855, column: 22, scope: !19279)
!19282 = !DILocation(line: 2855, column: 39, scope: !19279)
!19283 = !DILocation(line: 2856, column: 3, scope: !19279)
!19284 = !DILocation(line: 2853, column: 23, scope: !19275)
!19285 = !DILocation(line: 2853, column: 3, scope: !19275)
!19286 = distinct !{!19286, !19277, !19287}
!19287 = !DILocation(line: 2856, column: 3, scope: !19272)
!19288 = !DILocation(line: 2857, column: 9, scope: !19289)
!19289 = distinct !DILexicalBlock(scope: !19265, file: !1326, line: 2857, column: 3)
!19290 = !DILocation(line: 2857, column: 8, scope: !19289)
!19291 = !DILocation(line: 2857, column: 13, scope: !19292)
!19292 = distinct !DILexicalBlock(scope: !19289, file: !1326, line: 2857, column: 3)
!19293 = !DILocation(line: 2857, column: 15, scope: !19292)
!19294 = !DILocation(line: 2857, column: 3, scope: !19289)
!19295 = !DILocation(line: 2859, column: 19, scope: !19296)
!19296 = distinct !DILexicalBlock(scope: !19292, file: !1326, line: 2858, column: 3)
!19297 = !DILocation(line: 2859, column: 5, scope: !19296)
!19298 = !DILocation(line: 2859, column: 22, scope: !19296)
!19299 = !DILocation(line: 2859, column: 30, scope: !19296)
!19300 = !DILocation(line: 2860, column: 3, scope: !19296)
!19301 = !DILocation(line: 2857, column: 23, scope: !19292)
!19302 = !DILocation(line: 2857, column: 3, scope: !19292)
!19303 = distinct !{!19303, !19294, !19304}
!19304 = !DILocation(line: 2860, column: 3, scope: !19289)
!19305 = !DILocation(line: 2861, column: 1, scope: !19265)
!19306 = distinct !DISubprogram(name: "vsf_sysutil_set_exit_func", scope: !1326, file: !1326, line: 576, type: !19307, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19307 = !DISubroutineType(types: !19308)
!19308 = !{null, !1641}
!19309 = !DILocalVariable(name: "exitfunc", arg: 1, scope: !19306, file: !1326, line: 576, type: !1641)
!19310 = !DILocation(line: 576, column: 38, scope: !19306)
!19311 = !DILocation(line: 578, column: 17, scope: !19306)
!19312 = !DILocation(line: 578, column: 15, scope: !19306)
!19313 = !DILocation(line: 579, column: 1, scope: !19306)
!19314 = distinct !DISubprogram(name: "vsf_sysutil_exit", scope: !1326, file: !1326, line: 582, type: !1406, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19315 = !DILocalVariable(name: "exit_code", arg: 1, scope: !19314, file: !1326, line: 582, type: !19)
!19316 = !DILocation(line: 582, column: 22, scope: !19314)
!19317 = !DILocation(line: 584, column: 7, scope: !19318)
!19318 = distinct !DILexicalBlock(scope: !19314, file: !1326, line: 584, column: 7)
!19319 = !DILocation(line: 584, column: 7, scope: !19314)
!19320 = !DILocalVariable(name: "curr_func", scope: !19321, file: !1326, line: 586, type: !1641)
!19321 = distinct !DILexicalBlock(scope: !19318, file: !1326, line: 585, column: 3)
!19322 = !DILocation(line: 586, column: 16, scope: !19321)
!19323 = !DILocation(line: 586, column: 28, scope: !19321)
!19324 = !DILocation(line: 588, column: 17, scope: !19321)
!19325 = !DILocation(line: 589, column: 7, scope: !19321)
!19326 = !DILocation(line: 589, column: 5, scope: !19321)
!19327 = !DILocation(line: 590, column: 3, scope: !19321)
!19328 = !DILocation(line: 591, column: 9, scope: !19314)
!19329 = !DILocation(line: 591, column: 3, scope: !19314)
!19330 = !DILocation(line: 592, column: 1, scope: !19314)
!19331 = distinct !DISubprogram(name: "vsf_sysutil_wait", scope: !1326, file: !1326, line: 595, type: !19332, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19332 = !DISubroutineType(types: !19333)
!19333 = !{!1409}
!19334 = !DILocalVariable(name: "retval", scope: !19331, file: !1326, line: 597, type: !1409)
!19335 = !DILocation(line: 597, column: 34, scope: !19331)
!19336 = !DILocation(line: 598, column: 22, scope: !19331)
!19337 = !DILocation(line: 598, column: 3, scope: !19331)
!19338 = !DILocation(line: 599, column: 3, scope: !19331)
!19339 = !DILocalVariable(name: "sys_ret", scope: !19340, file: !1326, line: 601, type: !19)
!19340 = distinct !DILexicalBlock(scope: !19331, file: !1326, line: 600, column: 3)
!19341 = !DILocation(line: 601, column: 9, scope: !19340)
!19342 = !DILocation(line: 601, column: 32, scope: !19340)
!19343 = !DILocation(line: 601, column: 19, scope: !19340)
!19344 = !DILocation(line: 602, column: 9, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19340, file: !1326, line: 602, column: 9)
!19346 = !DILocation(line: 602, column: 17, scope: !19345)
!19347 = !DILocation(line: 602, column: 21, scope: !19345)
!19348 = !DILocation(line: 602, column: 24, scope: !19345)
!19349 = !DILocation(line: 602, column: 30, scope: !19345)
!19350 = !DILocation(line: 602, column: 9, scope: !19340)
!19351 = !DILocation(line: 604, column: 7, scope: !19352)
!19352 = distinct !DILexicalBlock(scope: !19345, file: !1326, line: 603, column: 5)
!19353 = !DILocation(line: 605, column: 7, scope: !19352)
!19354 = distinct !{!19354, !19338, !19355}
!19355 = !DILocation(line: 609, column: 3, scope: !19331)
!19356 = !DILocation(line: 607, column: 29, scope: !19340)
!19357 = !DILocation(line: 607, column: 12, scope: !19340)
!19358 = !DILocation(line: 607, column: 27, scope: !19340)
!19359 = !DILocation(line: 608, column: 12, scope: !19340)
!19360 = !DILocation(line: 608, column: 5, scope: !19340)
!19361 = distinct !DISubprogram(name: "vsf_sysutil_wait_reap_one", scope: !1326, file: !1326, line: 613, type: !1713, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19362 = !DILocalVariable(name: "retval", scope: !19361, file: !1326, line: 615, type: !19)
!19363 = !DILocation(line: 615, column: 7, scope: !19361)
!19364 = !DILocation(line: 615, column: 16, scope: !19361)
!19365 = !DILocation(line: 616, column: 7, scope: !19366)
!19366 = distinct !DILexicalBlock(scope: !19361, file: !1326, line: 616, column: 7)
!19367 = !DILocation(line: 616, column: 14, scope: !19366)
!19368 = !DILocation(line: 616, column: 19, scope: !19366)
!19369 = !DILocation(line: 616, column: 23, scope: !19366)
!19370 = !DILocation(line: 616, column: 30, scope: !19366)
!19371 = !DILocation(line: 616, column: 34, scope: !19366)
!19372 = !DILocation(line: 616, column: 37, scope: !19366)
!19373 = !DILocation(line: 616, column: 43, scope: !19366)
!19374 = !DILocation(line: 616, column: 7, scope: !19361)
!19375 = !DILocation(line: 619, column: 5, scope: !19376)
!19376 = distinct !DILexicalBlock(scope: !19366, file: !1326, line: 617, column: 3)
!19377 = !DILocation(line: 621, column: 7, scope: !19378)
!19378 = distinct !DILexicalBlock(scope: !19361, file: !1326, line: 621, column: 7)
!19379 = !DILocation(line: 621, column: 14, scope: !19378)
!19380 = !DILocation(line: 621, column: 7, scope: !19361)
!19381 = !DILocation(line: 623, column: 5, scope: !19382)
!19382 = distinct !DILexicalBlock(scope: !19378, file: !1326, line: 622, column: 3)
!19383 = !DILocation(line: 624, column: 3, scope: !19382)
!19384 = !DILocation(line: 626, column: 10, scope: !19361)
!19385 = !DILocation(line: 626, column: 3, scope: !19361)
!19386 = !DILocation(line: 627, column: 1, scope: !19361)
!19387 = distinct !DISubprogram(name: "vsf_sysutil_wait_get_retval", scope: !1326, file: !1326, line: 630, type: !19388, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19388 = !DISubroutineType(types: !19389)
!19389 = !{!19, !19390}
!19390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19391, size: 64)
!19391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!19392 = !DILocalVariable(name: "p_waitret", arg: 1, scope: !19387, file: !1326, line: 630, type: !19390)
!19393 = !DILocation(line: 630, column: 67, scope: !19387)
!19394 = !DILocation(line: 632, column: 10, scope: !19387)
!19395 = !DILocation(line: 632, column: 21, scope: !19387)
!19396 = !DILocation(line: 632, column: 3, scope: !19387)
!19397 = distinct !DISubprogram(name: "vsf_sysutil_wait_exited_normally", scope: !1326, file: !1326, line: 636, type: !19388, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19398 = !DILocalVariable(name: "p_waitret", arg: 1, scope: !19397, file: !1326, line: 637, type: !19390)
!19399 = !DILocation(line: 637, column: 41, scope: !19397)
!19400 = !DILocalVariable(name: "status", scope: !19397, file: !1326, line: 639, type: !19)
!19401 = !DILocation(line: 639, column: 7, scope: !19397)
!19402 = !DILocation(line: 639, column: 51, scope: !19397)
!19403 = !DILocation(line: 639, column: 63, scope: !19397)
!19404 = !DILocation(line: 640, column: 10, scope: !19397)
!19405 = !DILocation(line: 640, column: 3, scope: !19397)
!19406 = distinct !DISubprogram(name: "vsf_sysutil_wait_get_exitcode", scope: !1326, file: !1326, line: 644, type: !19388, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19407 = !DILocalVariable(name: "p_waitret", arg: 1, scope: !19406, file: !1326, line: 644, type: !19390)
!19408 = !DILocation(line: 644, column: 69, scope: !19406)
!19409 = !DILocalVariable(name: "status", scope: !19406, file: !1326, line: 646, type: !19)
!19410 = !DILocation(line: 646, column: 7, scope: !19406)
!19411 = !DILocation(line: 647, column: 41, scope: !19412)
!19412 = distinct !DILexicalBlock(scope: !19406, file: !1326, line: 647, column: 7)
!19413 = !DILocation(line: 647, column: 8, scope: !19412)
!19414 = !DILocation(line: 647, column: 7, scope: !19406)
!19415 = !DILocation(line: 649, column: 5, scope: !19416)
!19416 = distinct !DILexicalBlock(scope: !19412, file: !1326, line: 648, column: 3)
!19417 = !DILocation(line: 650, column: 3, scope: !19416)
!19418 = !DILocation(line: 651, column: 47, scope: !19406)
!19419 = !DILocation(line: 651, column: 59, scope: !19406)
!19420 = !DILocation(line: 651, column: 10, scope: !19406)
!19421 = !DILocation(line: 652, column: 10, scope: !19406)
!19422 = !DILocation(line: 652, column: 3, scope: !19406)
!19423 = distinct !DISubprogram(name: "vsf_sysutil_activate_keepalive", scope: !1326, file: !1326, line: 656, type: !1406, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19424 = !DILocalVariable(name: "fd", arg: 1, scope: !19423, file: !1326, line: 656, type: !19)
!19425 = !DILocation(line: 656, column: 36, scope: !19423)
!19426 = !DILocalVariable(name: "keepalive", scope: !19423, file: !1326, line: 658, type: !19)
!19427 = !DILocation(line: 658, column: 7, scope: !19423)
!19428 = !DILocalVariable(name: "retval", scope: !19423, file: !1326, line: 659, type: !19)
!19429 = !DILocation(line: 659, column: 7, scope: !19423)
!19430 = !DILocation(line: 659, column: 27, scope: !19423)
!19431 = !DILocation(line: 659, column: 57, scope: !19423)
!19432 = !DILocation(line: 659, column: 16, scope: !19423)
!19433 = !DILocation(line: 661, column: 7, scope: !19434)
!19434 = distinct !DILexicalBlock(scope: !19423, file: !1326, line: 661, column: 7)
!19435 = !DILocation(line: 661, column: 14, scope: !19434)
!19436 = !DILocation(line: 661, column: 7, scope: !19423)
!19437 = !DILocation(line: 663, column: 5, scope: !19438)
!19438 = distinct !DILexicalBlock(scope: !19434, file: !1326, line: 662, column: 3)
!19439 = !DILocation(line: 664, column: 3, scope: !19438)
!19440 = !DILocation(line: 665, column: 1, scope: !19423)
!19441 = distinct !DISubprogram(name: "vsf_sysutil_activate_reuseaddr", scope: !1326, file: !1326, line: 668, type: !1406, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19442 = !DILocalVariable(name: "fd", arg: 1, scope: !19441, file: !1326, line: 668, type: !19)
!19443 = !DILocation(line: 668, column: 36, scope: !19441)
!19444 = !DILocalVariable(name: "reuseaddr", scope: !19441, file: !1326, line: 670, type: !19)
!19445 = !DILocation(line: 670, column: 7, scope: !19441)
!19446 = !DILocalVariable(name: "retval", scope: !19441, file: !1326, line: 671, type: !19)
!19447 = !DILocation(line: 671, column: 7, scope: !19441)
!19448 = !DILocation(line: 671, column: 27, scope: !19441)
!19449 = !DILocation(line: 671, column: 57, scope: !19441)
!19450 = !DILocation(line: 671, column: 16, scope: !19441)
!19451 = !DILocation(line: 673, column: 7, scope: !19452)
!19452 = distinct !DILexicalBlock(scope: !19441, file: !1326, line: 673, column: 7)
!19453 = !DILocation(line: 673, column: 14, scope: !19452)
!19454 = !DILocation(line: 673, column: 7, scope: !19441)
!19455 = !DILocation(line: 675, column: 5, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19452, file: !1326, line: 674, column: 3)
!19457 = !DILocation(line: 676, column: 3, scope: !19456)
!19458 = !DILocation(line: 677, column: 1, scope: !19441)
!19459 = distinct !DISubprogram(name: "vsf_sysutil_set_nodelay", scope: !1326, file: !1326, line: 680, type: !1406, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19460 = !DILocalVariable(name: "fd", arg: 1, scope: !19459, file: !1326, line: 680, type: !19)
!19461 = !DILocation(line: 680, column: 29, scope: !19459)
!19462 = !DILocalVariable(name: "nodelay", scope: !19459, file: !1326, line: 682, type: !19)
!19463 = !DILocation(line: 682, column: 7, scope: !19459)
!19464 = !DILocalVariable(name: "retval", scope: !19459, file: !1326, line: 683, type: !19)
!19465 = !DILocation(line: 683, column: 7, scope: !19459)
!19466 = !DILocation(line: 683, column: 27, scope: !19459)
!19467 = !DILocation(line: 683, column: 57, scope: !19459)
!19468 = !DILocation(line: 683, column: 16, scope: !19459)
!19469 = !DILocation(line: 685, column: 7, scope: !19470)
!19470 = distinct !DILexicalBlock(scope: !19459, file: !1326, line: 685, column: 7)
!19471 = !DILocation(line: 685, column: 14, scope: !19470)
!19472 = !DILocation(line: 685, column: 7, scope: !19459)
!19473 = !DILocation(line: 687, column: 5, scope: !19474)
!19474 = distinct !DILexicalBlock(scope: !19470, file: !1326, line: 686, column: 3)
!19475 = !DILocation(line: 688, column: 3, scope: !19474)
!19476 = !DILocation(line: 689, column: 1, scope: !19459)
!19477 = distinct !DISubprogram(name: "vsf_sysutil_activate_sigurg", scope: !1326, file: !1326, line: 692, type: !1406, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19478 = !DILocalVariable(name: "fd", arg: 1, scope: !19477, file: !1326, line: 692, type: !19)
!19479 = !DILocation(line: 692, column: 33, scope: !19477)
!19480 = !DILocalVariable(name: "retval", scope: !19477, file: !1326, line: 694, type: !19)
!19481 = !DILocation(line: 694, column: 7, scope: !19477)
!19482 = !DILocation(line: 694, column: 22, scope: !19477)
!19483 = !DILocation(line: 694, column: 36, scope: !19477)
!19484 = !DILocation(line: 694, column: 16, scope: !19477)
!19485 = !DILocation(line: 695, column: 7, scope: !19486)
!19486 = distinct !DILexicalBlock(scope: !19477, file: !1326, line: 695, column: 7)
!19487 = !DILocation(line: 695, column: 14, scope: !19486)
!19488 = !DILocation(line: 695, column: 7, scope: !19477)
!19489 = !DILocation(line: 697, column: 5, scope: !19490)
!19490 = distinct !DILexicalBlock(scope: !19486, file: !1326, line: 696, column: 3)
!19491 = !DILocation(line: 698, column: 3, scope: !19490)
!19492 = !DILocation(line: 699, column: 1, scope: !19477)
!19493 = distinct !DISubprogram(name: "vsf_sysutil_activate_oobinline", scope: !1326, file: !1326, line: 702, type: !1406, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19494 = !DILocalVariable(name: "fd", arg: 1, scope: !19493, file: !1326, line: 702, type: !19)
!19495 = !DILocation(line: 702, column: 36, scope: !19493)
!19496 = !DILocalVariable(name: "oob_inline", scope: !19493, file: !1326, line: 704, type: !19)
!19497 = !DILocation(line: 704, column: 7, scope: !19493)
!19498 = !DILocalVariable(name: "retval", scope: !19493, file: !1326, line: 705, type: !19)
!19499 = !DILocation(line: 705, column: 7, scope: !19493)
!19500 = !DILocation(line: 705, column: 27, scope: !19493)
!19501 = !DILocation(line: 705, column: 57, scope: !19493)
!19502 = !DILocation(line: 705, column: 16, scope: !19493)
!19503 = !DILocation(line: 707, column: 7, scope: !19504)
!19504 = distinct !DILexicalBlock(scope: !19493, file: !1326, line: 707, column: 7)
!19505 = !DILocation(line: 707, column: 14, scope: !19504)
!19506 = !DILocation(line: 707, column: 7, scope: !19493)
!19507 = !DILocation(line: 709, column: 5, scope: !19508)
!19508 = distinct !DILexicalBlock(scope: !19504, file: !1326, line: 708, column: 3)
!19509 = !DILocation(line: 710, column: 3, scope: !19508)
!19510 = !DILocation(line: 711, column: 1, scope: !19493)
!19511 = distinct !DISubprogram(name: "vsf_sysutil_set_iptos_throughput", scope: !1326, file: !1326, line: 714, type: !1406, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19512 = !DILocalVariable(name: "fd", arg: 1, scope: !19511, file: !1326, line: 714, type: !19)
!19513 = !DILocation(line: 714, column: 38, scope: !19511)
!19514 = !DILocalVariable(name: "tos", scope: !19511, file: !1326, line: 716, type: !19)
!19515 = !DILocation(line: 716, column: 7, scope: !19511)
!19516 = !DILocation(line: 718, column: 21, scope: !19511)
!19517 = !DILocation(line: 718, column: 45, scope: !19511)
!19518 = !DILocation(line: 718, column: 10, scope: !19511)
!19519 = !DILocation(line: 719, column: 1, scope: !19511)
!19520 = distinct !DISubprogram(name: "vsf_sysutil_activate_linger", scope: !1326, file: !1326, line: 722, type: !1406, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19521 = !DILocalVariable(name: "fd", arg: 1, scope: !19520, file: !1326, line: 722, type: !19)
!19522 = !DILocation(line: 722, column: 33, scope: !19520)
!19523 = !DILocalVariable(name: "retval", scope: !19520, file: !1326, line: 724, type: !19)
!19524 = !DILocation(line: 724, column: 7, scope: !19520)
!19525 = !DILocalVariable(name: "the_linger", scope: !19520, file: !1326, line: 725, type: !19526)
!19526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linger", file: !1269, line: 444, size: 64, elements: !19527)
!19527 = !{!19528, !19529}
!19528 = !DIDerivedType(tag: DW_TAG_member, name: "l_onoff", scope: !19526, file: !1269, line: 446, baseType: !19, size: 32)
!19529 = !DIDerivedType(tag: DW_TAG_member, name: "l_linger", scope: !19526, file: !1269, line: 447, baseType: !19, size: 32, offset: 32)
!19530 = !DILocation(line: 725, column: 17, scope: !19520)
!19531 = !DILocation(line: 726, column: 22, scope: !19520)
!19532 = !DILocation(line: 726, column: 3, scope: !19520)
!19533 = !DILocation(line: 727, column: 14, scope: !19520)
!19534 = !DILocation(line: 727, column: 22, scope: !19520)
!19535 = !DILocation(line: 728, column: 14, scope: !19520)
!19536 = !DILocation(line: 728, column: 23, scope: !19520)
!19537 = !DILocation(line: 729, column: 23, scope: !19520)
!19538 = !DILocation(line: 729, column: 50, scope: !19520)
!19539 = !DILocation(line: 729, column: 12, scope: !19520)
!19540 = !DILocation(line: 729, column: 10, scope: !19520)
!19541 = !DILocation(line: 731, column: 7, scope: !19542)
!19542 = distinct !DILexicalBlock(scope: !19520, file: !1326, line: 731, column: 7)
!19543 = !DILocation(line: 731, column: 14, scope: !19542)
!19544 = !DILocation(line: 731, column: 7, scope: !19520)
!19545 = !DILocation(line: 733, column: 5, scope: !19546)
!19546 = distinct !DILexicalBlock(scope: !19542, file: !1326, line: 732, column: 3)
!19547 = !DILocation(line: 734, column: 3, scope: !19546)
!19548 = !DILocation(line: 735, column: 1, scope: !19520)
!19549 = distinct !DISubprogram(name: "vsf_sysutil_deactivate_linger_failok", scope: !1326, file: !1326, line: 738, type: !1406, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19550 = !DILocalVariable(name: "fd", arg: 1, scope: !19549, file: !1326, line: 738, type: !19)
!19551 = !DILocation(line: 738, column: 42, scope: !19549)
!19552 = !DILocalVariable(name: "the_linger", scope: !19549, file: !1326, line: 740, type: !19526)
!19553 = !DILocation(line: 740, column: 17, scope: !19549)
!19554 = !DILocation(line: 741, column: 14, scope: !19549)
!19555 = !DILocation(line: 741, column: 22, scope: !19549)
!19556 = !DILocation(line: 742, column: 14, scope: !19549)
!19557 = !DILocation(line: 742, column: 23, scope: !19549)
!19558 = !DILocation(line: 743, column: 21, scope: !19549)
!19559 = !DILocation(line: 743, column: 48, scope: !19549)
!19560 = !DILocation(line: 743, column: 10, scope: !19549)
!19561 = !DILocation(line: 744, column: 1, scope: !19549)
!19562 = distinct !DISubprogram(name: "vsf_sysutil_activate_noblock", scope: !1326, file: !1326, line: 747, type: !1406, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19563 = !DILocalVariable(name: "fd", arg: 1, scope: !19562, file: !1326, line: 747, type: !19)
!19564 = !DILocation(line: 747, column: 34, scope: !19562)
!19565 = !DILocalVariable(name: "retval", scope: !19562, file: !1326, line: 749, type: !19)
!19566 = !DILocation(line: 749, column: 7, scope: !19562)
!19567 = !DILocalVariable(name: "curr_flags", scope: !19562, file: !1326, line: 750, type: !19)
!19568 = !DILocation(line: 750, column: 7, scope: !19562)
!19569 = !DILocation(line: 750, column: 26, scope: !19562)
!19570 = !DILocation(line: 750, column: 20, scope: !19562)
!19571 = !DILocation(line: 751, column: 35, scope: !19572)
!19572 = distinct !DILexicalBlock(scope: !19562, file: !1326, line: 751, column: 7)
!19573 = !DILocation(line: 751, column: 7, scope: !19572)
!19574 = !DILocation(line: 751, column: 7, scope: !19562)
!19575 = !DILocation(line: 753, column: 5, scope: !19576)
!19576 = distinct !DILexicalBlock(scope: !19572, file: !1326, line: 752, column: 3)
!19577 = !DILocation(line: 754, column: 3, scope: !19576)
!19578 = !DILocation(line: 755, column: 14, scope: !19562)
!19579 = !DILocation(line: 756, column: 18, scope: !19562)
!19580 = !DILocation(line: 756, column: 31, scope: !19562)
!19581 = !DILocation(line: 756, column: 12, scope: !19562)
!19582 = !DILocation(line: 756, column: 10, scope: !19562)
!19583 = !DILocation(line: 757, column: 7, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19562, file: !1326, line: 757, column: 7)
!19585 = !DILocation(line: 757, column: 14, scope: !19584)
!19586 = !DILocation(line: 757, column: 7, scope: !19562)
!19587 = !DILocation(line: 759, column: 5, scope: !19588)
!19588 = distinct !DILexicalBlock(scope: !19584, file: !1326, line: 758, column: 3)
!19589 = !DILocation(line: 760, column: 3, scope: !19588)
!19590 = !DILocation(line: 761, column: 1, scope: !19562)
!19591 = distinct !DISubprogram(name: "vsf_sysutil_retval_is_error", scope: !1326, file: !1326, line: 1571, type: !7062, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19592 = !DILocalVariable(name: "retval", arg: 1, scope: !19591, file: !1326, line: 1571, type: !19)
!19593 = !DILocation(line: 1571, column: 33, scope: !19591)
!19594 = !DILocation(line: 1573, column: 7, scope: !19595)
!19595 = distinct !DILexicalBlock(scope: !19591, file: !1326, line: 1573, column: 7)
!19596 = !DILocation(line: 1573, column: 14, scope: !19595)
!19597 = !DILocation(line: 1573, column: 7, scope: !19591)
!19598 = !DILocation(line: 1575, column: 5, scope: !19599)
!19599 = distinct !DILexicalBlock(scope: !19595, file: !1326, line: 1574, column: 3)
!19600 = !DILocation(line: 1577, column: 3, scope: !19591)
!19601 = !DILocation(line: 1578, column: 1, scope: !19591)
!19602 = distinct !DISubprogram(name: "vsf_sysutil_deactivate_noblock", scope: !1326, file: !1326, line: 764, type: !1406, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19603 = !DILocalVariable(name: "fd", arg: 1, scope: !19602, file: !1326, line: 764, type: !19)
!19604 = !DILocation(line: 764, column: 36, scope: !19602)
!19605 = !DILocalVariable(name: "retval", scope: !19602, file: !1326, line: 766, type: !19)
!19606 = !DILocation(line: 766, column: 7, scope: !19602)
!19607 = !DILocalVariable(name: "curr_flags", scope: !19602, file: !1326, line: 767, type: !19)
!19608 = !DILocation(line: 767, column: 7, scope: !19602)
!19609 = !DILocation(line: 767, column: 26, scope: !19602)
!19610 = !DILocation(line: 767, column: 20, scope: !19602)
!19611 = !DILocation(line: 768, column: 35, scope: !19612)
!19612 = distinct !DILexicalBlock(scope: !19602, file: !1326, line: 768, column: 7)
!19613 = !DILocation(line: 768, column: 7, scope: !19612)
!19614 = !DILocation(line: 768, column: 7, scope: !19602)
!19615 = !DILocation(line: 770, column: 5, scope: !19616)
!19616 = distinct !DILexicalBlock(scope: !19612, file: !1326, line: 769, column: 3)
!19617 = !DILocation(line: 771, column: 3, scope: !19616)
!19618 = !DILocation(line: 772, column: 14, scope: !19602)
!19619 = !DILocation(line: 773, column: 18, scope: !19602)
!19620 = !DILocation(line: 773, column: 31, scope: !19602)
!19621 = !DILocation(line: 773, column: 12, scope: !19602)
!19622 = !DILocation(line: 773, column: 10, scope: !19602)
!19623 = !DILocation(line: 774, column: 7, scope: !19624)
!19624 = distinct !DILexicalBlock(scope: !19602, file: !1326, line: 774, column: 7)
!19625 = !DILocation(line: 774, column: 14, scope: !19624)
!19626 = !DILocation(line: 774, column: 7, scope: !19602)
!19627 = !DILocation(line: 776, column: 5, scope: !19628)
!19628 = distinct !DILexicalBlock(scope: !19624, file: !1326, line: 775, column: 3)
!19629 = !DILocation(line: 777, column: 3, scope: !19628)
!19630 = !DILocation(line: 778, column: 1, scope: !19602)
!19631 = distinct !DISubprogram(name: "vsf_sysutil_recv_peek", scope: !1326, file: !1326, line: 781, type: !18960, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19632 = !DILocalVariable(name: "fd", arg: 1, scope: !19631, file: !1326, line: 781, type: !1782)
!19633 = !DILocation(line: 781, column: 33, scope: !19631)
!19634 = !DILocalVariable(name: "p_buf", arg: 2, scope: !19631, file: !1326, line: 781, type: !80)
!19635 = !DILocation(line: 781, column: 43, scope: !19631)
!19636 = !DILocalVariable(name: "len", arg: 3, scope: !19631, file: !1326, line: 781, type: !26)
!19637 = !DILocation(line: 781, column: 63, scope: !19631)
!19638 = !DILocation(line: 783, column: 3, scope: !19631)
!19639 = !DILocalVariable(name: "retval", scope: !19640, file: !1326, line: 785, type: !19)
!19640 = distinct !DILexicalBlock(scope: !19631, file: !1326, line: 784, column: 3)
!19641 = !DILocation(line: 785, column: 9, scope: !19640)
!19642 = !DILocation(line: 785, column: 23, scope: !19640)
!19643 = !DILocation(line: 785, column: 27, scope: !19640)
!19644 = !DILocation(line: 785, column: 34, scope: !19640)
!19645 = !DILocation(line: 785, column: 18, scope: !19640)
!19646 = !DILocalVariable(name: "saved_errno", scope: !19640, file: !1326, line: 786, type: !19)
!19647 = !DILocation(line: 786, column: 9, scope: !19640)
!19648 = !DILocation(line: 786, column: 23, scope: !19640)
!19649 = !DILocation(line: 787, column: 54, scope: !19640)
!19650 = !DILocation(line: 787, column: 62, scope: !19640)
!19651 = !DILocation(line: 787, column: 5, scope: !19640)
!19652 = !DILocation(line: 788, column: 9, scope: !19653)
!19653 = distinct !DILexicalBlock(scope: !19640, file: !1326, line: 788, column: 9)
!19654 = !DILocation(line: 788, column: 16, scope: !19653)
!19655 = !DILocation(line: 788, column: 20, scope: !19653)
!19656 = !DILocation(line: 788, column: 23, scope: !19653)
!19657 = !DILocation(line: 788, column: 35, scope: !19653)
!19658 = !DILocation(line: 788, column: 9, scope: !19640)
!19659 = !DILocation(line: 790, column: 7, scope: !19660)
!19660 = distinct !DILexicalBlock(scope: !19653, file: !1326, line: 789, column: 5)
!19661 = distinct !{!19661, !19638, !19662}
!19662 = !DILocation(line: 793, column: 3, scope: !19631)
!19663 = !DILocation(line: 792, column: 12, scope: !19640)
!19664 = !DILocation(line: 792, column: 5, scope: !19640)
!19665 = distinct !DISubprogram(name: "vsf_sysutil_atoi", scope: !1326, file: !1326, line: 797, type: !19666, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19666 = !DISubroutineType(types: !19667)
!19667 = !{!19, !88}
!19668 = !DILocalVariable(name: "p_str", arg: 1, scope: !19665, file: !1326, line: 797, type: !88)
!19669 = !DILocation(line: 797, column: 30, scope: !19665)
!19670 = !DILocation(line: 799, column: 15, scope: !19665)
!19671 = !DILocation(line: 799, column: 10, scope: !19665)
!19672 = !DILocation(line: 799, column: 3, scope: !19665)
!19673 = distinct !DISubprogram(name: "vsf_sysutil_a_to_filesize_t", scope: !1326, file: !1326, line: 803, type: !19674, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19674 = !DISubroutineType(types: !19675)
!19675 = !{!41, !88}
!19676 = !DILocalVariable(name: "p_str", arg: 1, scope: !19673, file: !1326, line: 803, type: !88)
!19677 = !DILocation(line: 803, column: 41, scope: !19673)
!19678 = !DILocalVariable(name: "result", scope: !19673, file: !1326, line: 808, type: !41)
!19679 = !DILocation(line: 808, column: 14, scope: !19673)
!19680 = !DILocalVariable(name: "mult", scope: !19673, file: !1326, line: 809, type: !41)
!19681 = !DILocation(line: 809, column: 14, scope: !19673)
!19682 = !DILocalVariable(name: "len", scope: !19673, file: !1326, line: 810, type: !26)
!19683 = !DILocation(line: 810, column: 16, scope: !19673)
!19684 = !DILocation(line: 810, column: 41, scope: !19673)
!19685 = !DILocation(line: 810, column: 22, scope: !19673)
!19686 = !DILocalVariable(name: "i", scope: !19673, file: !1326, line: 811, type: !26)
!19687 = !DILocation(line: 811, column: 16, scope: !19673)
!19688 = !DILocation(line: 813, column: 7, scope: !19689)
!19689 = distinct !DILexicalBlock(scope: !19673, file: !1326, line: 813, column: 7)
!19690 = !DILocation(line: 813, column: 11, scope: !19689)
!19691 = !DILocation(line: 813, column: 7, scope: !19673)
!19692 = !DILocation(line: 815, column: 5, scope: !19693)
!19693 = distinct !DILexicalBlock(scope: !19689, file: !1326, line: 814, column: 3)
!19694 = !DILocation(line: 817, column: 9, scope: !19695)
!19695 = distinct !DILexicalBlock(scope: !19673, file: !1326, line: 817, column: 3)
!19696 = !DILocation(line: 817, column: 8, scope: !19695)
!19697 = !DILocation(line: 817, column: 13, scope: !19698)
!19698 = distinct !DILexicalBlock(scope: !19695, file: !1326, line: 817, column: 3)
!19699 = !DILocation(line: 817, column: 15, scope: !19698)
!19700 = !DILocation(line: 817, column: 14, scope: !19698)
!19701 = !DILocation(line: 817, column: 3, scope: !19695)
!19702 = !DILocalVariable(name: "the_char", scope: !19703, file: !1326, line: 819, type: !17)
!19703 = distinct !DILexicalBlock(scope: !19698, file: !1326, line: 818, column: 3)
!19704 = !DILocation(line: 819, column: 10, scope: !19703)
!19705 = !DILocation(line: 819, column: 21, scope: !19703)
!19706 = !DILocation(line: 819, column: 27, scope: !19703)
!19707 = !DILocation(line: 819, column: 32, scope: !19703)
!19708 = !DILocation(line: 819, column: 33, scope: !19703)
!19709 = !DILocation(line: 819, column: 30, scope: !19703)
!19710 = !DILocalVariable(name: "val", scope: !19703, file: !1326, line: 820, type: !41)
!19711 = !DILocation(line: 820, column: 16, scope: !19703)
!19712 = !DILocation(line: 821, column: 9, scope: !19713)
!19713 = distinct !DILexicalBlock(scope: !19703, file: !1326, line: 821, column: 9)
!19714 = !DILocation(line: 821, column: 18, scope: !19713)
!19715 = !DILocation(line: 821, column: 24, scope: !19713)
!19716 = !DILocation(line: 821, column: 27, scope: !19713)
!19717 = !DILocation(line: 821, column: 36, scope: !19713)
!19718 = !DILocation(line: 821, column: 9, scope: !19703)
!19719 = !DILocation(line: 823, column: 7, scope: !19720)
!19720 = distinct !DILexicalBlock(scope: !19713, file: !1326, line: 822, column: 5)
!19721 = !DILocation(line: 825, column: 11, scope: !19703)
!19722 = !DILocation(line: 825, column: 20, scope: !19703)
!19723 = !DILocation(line: 825, column: 9, scope: !19703)
!19724 = !DILocation(line: 826, column: 12, scope: !19703)
!19725 = !DILocation(line: 826, column: 9, scope: !19703)
!19726 = !DILocation(line: 827, column: 15, scope: !19703)
!19727 = !DILocation(line: 827, column: 12, scope: !19703)
!19728 = !DILocation(line: 828, column: 10, scope: !19703)
!19729 = !DILocation(line: 829, column: 3, scope: !19703)
!19730 = !DILocation(line: 817, column: 20, scope: !19698)
!19731 = !DILocation(line: 817, column: 3, scope: !19698)
!19732 = distinct !{!19732, !19701, !19733}
!19733 = !DILocation(line: 829, column: 3, scope: !19695)
!19734 = !DILocation(line: 830, column: 10, scope: !19673)
!19735 = !DILocation(line: 830, column: 3, scope: !19673)
!19736 = !DILocation(line: 831, column: 1, scope: !19673)
!19737 = distinct !DISubprogram(name: "vsf_sysutil_strlen", scope: !1326, file: !1326, line: 1021, type: !19738, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19738 = !DISubroutineType(types: !19739)
!19739 = !{!26, !88}
!19740 = !DILocalVariable(name: "p_text", arg: 1, scope: !19737, file: !1326, line: 1021, type: !88)
!19741 = !DILocation(line: 1021, column: 32, scope: !19737)
!19742 = !DILocalVariable(name: "ret", scope: !19737, file: !1326, line: 1023, type: !1697)
!19743 = !DILocation(line: 1023, column: 10, scope: !19737)
!19744 = !DILocation(line: 1023, column: 23, scope: !19737)
!19745 = !DILocation(line: 1023, column: 16, scope: !19737)
!19746 = !DILocation(line: 1025, column: 7, scope: !19747)
!19747 = distinct !DILexicalBlock(scope: !19737, file: !1326, line: 1025, column: 7)
!19748 = !DILocation(line: 1025, column: 11, scope: !19747)
!19749 = !DILocation(line: 1025, column: 7, scope: !19737)
!19750 = !DILocation(line: 1027, column: 5, scope: !19751)
!19751 = distinct !DILexicalBlock(scope: !19747, file: !1326, line: 1026, column: 3)
!19752 = !DILocation(line: 1028, column: 3, scope: !19751)
!19753 = !DILocation(line: 1029, column: 25, scope: !19737)
!19754 = !DILocation(line: 1029, column: 10, scope: !19737)
!19755 = !DILocation(line: 1029, column: 3, scope: !19737)
!19756 = !DILocalVariable(name: "the_ulong", arg: 1, scope: !1496, file: !1326, line: 834, type: !65)
!19757 = !DILocation(line: 834, column: 40, scope: !1496)
!19758 = !DILocation(line: 837, column: 56, scope: !1496)
!19759 = !DILocation(line: 837, column: 10, scope: !1496)
!19760 = !DILocation(line: 838, column: 3, scope: !1496)
!19761 = !DILocalVariable(name: "the_filesize", arg: 1, scope: !1504, file: !1326, line: 842, type: !41)
!19762 = !DILocation(line: 842, column: 42, scope: !1504)
!19763 = !DILocation(line: 849, column: 28, scope: !19764)
!19764 = distinct !DILexicalBlock(scope: !19765, file: !1326, line: 846, column: 3)
!19765 = distinct !DILexicalBlock(scope: !1504, file: !1326, line: 845, column: 7)
!19766 = !DILocation(line: 848, column: 12, scope: !19764)
!19767 = !DILocation(line: 855, column: 3, scope: !1504)
!19768 = !DILocalVariable(name: "the_double", arg: 1, scope: !1509, file: !1326, line: 859, type: !692)
!19769 = !DILocation(line: 859, column: 34, scope: !1509)
!19770 = !DILocation(line: 862, column: 59, scope: !1509)
!19771 = !DILocation(line: 862, column: 10, scope: !1509)
!19772 = !DILocation(line: 863, column: 3, scope: !1509)
!19773 = !DILocalVariable(name: "the_uint", arg: 1, scope: !1514, file: !1326, line: 867, type: !26)
!19774 = !DILocation(line: 867, column: 40, scope: !1514)
!19775 = !DILocation(line: 870, column: 7, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !1514, file: !1326, line: 870, column: 7)
!19777 = !DILocation(line: 870, column: 16, scope: !19776)
!19778 = !DILocation(line: 870, column: 7, scope: !1514)
!19779 = !DILocation(line: 872, column: 18, scope: !19780)
!19780 = distinct !DILexicalBlock(scope: !19776, file: !1326, line: 871, column: 3)
!19781 = !DILocation(line: 873, column: 18, scope: !19780)
!19782 = !DILocation(line: 874, column: 3, scope: !19780)
!19783 = !DILocation(line: 877, column: 58, scope: !19784)
!19784 = distinct !DILexicalBlock(scope: !19776, file: !1326, line: 876, column: 3)
!19785 = !DILocation(line: 877, column: 12, scope: !19784)
!19786 = !DILocation(line: 879, column: 3, scope: !1514)
!19787 = distinct !DISubprogram(name: "vsf_sysutil_octal_to_uint", scope: !1326, file: !1326, line: 883, type: !19738, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19788 = !DILocalVariable(name: "p_str", arg: 1, scope: !19787, file: !1326, line: 883, type: !88)
!19789 = !DILocation(line: 883, column: 39, scope: !19787)
!19790 = !DILocalVariable(name: "result", scope: !19787, file: !1326, line: 886, type: !26)
!19791 = !DILocation(line: 886, column: 16, scope: !19787)
!19792 = !DILocalVariable(name: "seen_non_zero_digit", scope: !19787, file: !1326, line: 887, type: !19)
!19793 = !DILocation(line: 887, column: 7, scope: !19787)
!19794 = !DILocation(line: 888, column: 3, scope: !19787)
!19795 = !DILocation(line: 888, column: 11, scope: !19787)
!19796 = !DILocation(line: 888, column: 10, scope: !19787)
!19797 = !DILocation(line: 888, column: 17, scope: !19787)
!19798 = !DILocalVariable(name: "digit", scope: !19799, file: !1326, line: 890, type: !19)
!19799 = distinct !DILexicalBlock(scope: !19787, file: !1326, line: 889, column: 3)
!19800 = !DILocation(line: 890, column: 9, scope: !19799)
!19801 = !DILocation(line: 890, column: 18, scope: !19799)
!19802 = !DILocation(line: 890, column: 17, scope: !19799)
!19803 = !DILocation(line: 891, column: 10, scope: !19804)
!19804 = distinct !DILexicalBlock(scope: !19799, file: !1326, line: 891, column: 9)
!19805 = !DILocation(line: 891, column: 25, scope: !19804)
!19806 = !DILocation(line: 891, column: 28, scope: !19804)
!19807 = !DILocation(line: 891, column: 34, scope: !19804)
!19808 = !DILocation(line: 891, column: 9, scope: !19799)
!19809 = !DILocation(line: 893, column: 7, scope: !19810)
!19810 = distinct !DILexicalBlock(scope: !19804, file: !1326, line: 892, column: 5)
!19811 = !DILocation(line: 895, column: 9, scope: !19812)
!19812 = distinct !DILexicalBlock(scope: !19799, file: !1326, line: 895, column: 9)
!19813 = !DILocation(line: 895, column: 15, scope: !19812)
!19814 = !DILocation(line: 895, column: 9, scope: !19799)
!19815 = !DILocation(line: 897, column: 27, scope: !19816)
!19816 = distinct !DILexicalBlock(scope: !19812, file: !1326, line: 896, column: 5)
!19817 = !DILocation(line: 898, column: 5, scope: !19816)
!19818 = !DILocation(line: 899, column: 9, scope: !19819)
!19819 = distinct !DILexicalBlock(scope: !19799, file: !1326, line: 899, column: 9)
!19820 = !DILocation(line: 899, column: 9, scope: !19799)
!19821 = !DILocation(line: 901, column: 14, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19819, file: !1326, line: 900, column: 5)
!19823 = !DILocation(line: 902, column: 18, scope: !19822)
!19824 = !DILocation(line: 902, column: 24, scope: !19822)
!19825 = !DILocation(line: 902, column: 14, scope: !19822)
!19826 = !DILocation(line: 903, column: 5, scope: !19822)
!19827 = !DILocation(line: 904, column: 10, scope: !19799)
!19828 = distinct !{!19828, !19794, !19829}
!19829 = !DILocation(line: 905, column: 3, scope: !19787)
!19830 = !DILocation(line: 906, column: 10, scope: !19787)
!19831 = !DILocation(line: 906, column: 3, scope: !19787)
!19832 = distinct !DISubprogram(name: "vsf_sysutil_toupper", scope: !1326, file: !1326, line: 910, type: !7062, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19833 = !DILocalVariable(name: "the_char", arg: 1, scope: !19832, file: !1326, line: 910, type: !19)
!19834 = !DILocation(line: 910, column: 25, scope: !19832)
!19835 = !DILocation(line: 912, column: 34, scope: !19832)
!19836 = !DILocation(line: 912, column: 18, scope: !19832)
!19837 = !DILocation(line: 912, column: 10, scope: !19832)
!19838 = !DILocation(line: 912, column: 3, scope: !19832)
!19839 = distinct !DISubprogram(name: "vsf_sysutil_isspace", scope: !1326, file: !1326, line: 916, type: !7062, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19840 = !DILocalVariable(name: "the_char", arg: 1, scope: !19839, file: !1326, line: 916, type: !19)
!19841 = !DILocation(line: 916, column: 25, scope: !19839)
!19842 = !DILocation(line: 918, column: 10, scope: !19839)
!19843 = !DILocation(line: 918, column: 3, scope: !19839)
!19844 = distinct !DISubprogram(name: "vsf_sysutil_isprint", scope: !1326, file: !1326, line: 922, type: !7062, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19845 = !DILocalVariable(name: "the_char", arg: 1, scope: !19844, file: !1326, line: 922, type: !19)
!19846 = !DILocation(line: 922, column: 25, scope: !19844)
!19847 = !DILocalVariable(name: "uc", scope: !19844, file: !1326, line: 927, type: !1076)
!19848 = !DILocation(line: 927, column: 17, scope: !19844)
!19849 = !DILocation(line: 927, column: 38, scope: !19844)
!19850 = !DILocation(line: 927, column: 22, scope: !19844)
!19851 = !DILocation(line: 928, column: 7, scope: !19852)
!19852 = distinct !DILexicalBlock(scope: !19844, file: !1326, line: 928, column: 7)
!19853 = !DILocation(line: 928, column: 10, scope: !19852)
!19854 = !DILocation(line: 928, column: 7, scope: !19844)
!19855 = !DILocation(line: 930, column: 5, scope: !19856)
!19856 = distinct !DILexicalBlock(scope: !19852, file: !1326, line: 929, column: 3)
!19857 = !DILocation(line: 932, column: 7, scope: !19858)
!19858 = distinct !DILexicalBlock(scope: !19844, file: !1326, line: 932, column: 7)
!19859 = !DILocation(line: 932, column: 10, scope: !19858)
!19860 = !DILocation(line: 932, column: 7, scope: !19844)
!19861 = !DILocation(line: 934, column: 5, scope: !19862)
!19862 = distinct !DILexicalBlock(scope: !19858, file: !1326, line: 933, column: 3)
!19863 = !DILocation(line: 936, column: 7, scope: !19864)
!19864 = distinct !DILexicalBlock(scope: !19844, file: !1326, line: 936, column: 7)
!19865 = !DILocation(line: 936, column: 10, scope: !19864)
!19866 = !DILocation(line: 936, column: 17, scope: !19864)
!19867 = !DILocation(line: 936, column: 20, scope: !19864)
!19868 = !DILocation(line: 936, column: 23, scope: !19864)
!19869 = !DILocation(line: 936, column: 7, scope: !19844)
!19870 = !DILocation(line: 938, column: 5, scope: !19871)
!19871 = distinct !DILexicalBlock(scope: !19864, file: !1326, line: 937, column: 3)
!19872 = !DILocation(line: 940, column: 10, scope: !19844)
!19873 = !DILocation(line: 940, column: 3, scope: !19844)
!19874 = !DILocation(line: 941, column: 1, scope: !19844)
!19875 = distinct !DISubprogram(name: "vsf_sysutil_isalnum", scope: !1326, file: !1326, line: 944, type: !7062, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19876 = !DILocalVariable(name: "the_char", arg: 1, scope: !19875, file: !1326, line: 944, type: !19)
!19877 = !DILocation(line: 944, column: 25, scope: !19875)
!19878 = !DILocation(line: 946, column: 10, scope: !19875)
!19879 = !DILocation(line: 946, column: 3, scope: !19875)
!19880 = distinct !DISubprogram(name: "vsf_sysutil_isdigit", scope: !1326, file: !1326, line: 950, type: !7062, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19881 = !DILocalVariable(name: "the_char", arg: 1, scope: !19880, file: !1326, line: 950, type: !19)
!19882 = !DILocation(line: 950, column: 25, scope: !19880)
!19883 = !DILocation(line: 952, column: 10, scope: !19880)
!19884 = !DILocation(line: 952, column: 3, scope: !19880)
!19885 = distinct !DISubprogram(name: "vsf_sysutil_getcwd", scope: !1326, file: !1326, line: 956, type: !19886, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19886 = !DISubroutineType(types: !19887)
!19887 = !{!16, !16, !850}
!19888 = !DILocalVariable(name: "p_dest", arg: 1, scope: !19885, file: !1326, line: 956, type: !16)
!19889 = !DILocation(line: 956, column: 26, scope: !19885)
!19890 = !DILocalVariable(name: "buf_size", arg: 2, scope: !19885, file: !1326, line: 956, type: !850)
!19891 = !DILocation(line: 956, column: 53, scope: !19885)
!19892 = !DILocalVariable(name: "p_retval", scope: !19885, file: !1326, line: 958, type: !16)
!19893 = !DILocation(line: 958, column: 9, scope: !19885)
!19894 = !DILocation(line: 959, column: 7, scope: !19895)
!19895 = distinct !DILexicalBlock(scope: !19885, file: !1326, line: 959, column: 7)
!19896 = !DILocation(line: 959, column: 16, scope: !19895)
!19897 = !DILocation(line: 959, column: 7, scope: !19885)
!19898 = !DILocation(line: 960, column: 12, scope: !19899)
!19899 = distinct !DILexicalBlock(scope: !19895, file: !1326, line: 959, column: 22)
!19900 = !DILocation(line: 960, column: 5, scope: !19899)
!19901 = !DILocation(line: 962, column: 21, scope: !19885)
!19902 = !DILocation(line: 962, column: 29, scope: !19885)
!19903 = !DILocation(line: 962, column: 14, scope: !19885)
!19904 = !DILocation(line: 962, column: 12, scope: !19885)
!19905 = !DILocation(line: 963, column: 3, scope: !19885)
!19906 = !DILocation(line: 963, column: 10, scope: !19885)
!19907 = !DILocation(line: 963, column: 19, scope: !19885)
!19908 = !DILocation(line: 963, column: 24, scope: !19885)
!19909 = !DILocation(line: 964, column: 10, scope: !19885)
!19910 = !DILocation(line: 964, column: 3, scope: !19885)
!19911 = !DILocation(line: 965, column: 1, scope: !19885)
!19912 = distinct !DISubprogram(name: "vsf_sysutil_mkdir", scope: !1326, file: !1326, line: 968, type: !19913, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19913 = !DISubroutineType(types: !19914)
!19914 = !{!19, !88, !850}
!19915 = !DILocalVariable(name: "p_dirname", arg: 1, scope: !19912, file: !1326, line: 968, type: !88)
!19916 = !DILocation(line: 968, column: 31, scope: !19912)
!19917 = !DILocalVariable(name: "mode", arg: 2, scope: !19912, file: !1326, line: 968, type: !850)
!19918 = !DILocation(line: 968, column: 61, scope: !19912)
!19919 = !DILocation(line: 970, column: 16, scope: !19912)
!19920 = !DILocation(line: 970, column: 27, scope: !19912)
!19921 = !DILocation(line: 970, column: 10, scope: !19912)
!19922 = !DILocation(line: 970, column: 3, scope: !19912)
!19923 = distinct !DISubprogram(name: "vsf_sysutil_rmdir", scope: !1326, file: !1326, line: 974, type: !19666, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19924 = !DILocalVariable(name: "p_dirname", arg: 1, scope: !19923, file: !1326, line: 974, type: !88)
!19925 = !DILocation(line: 974, column: 31, scope: !19923)
!19926 = !DILocation(line: 976, column: 16, scope: !19923)
!19927 = !DILocation(line: 976, column: 10, scope: !19923)
!19928 = !DILocation(line: 976, column: 3, scope: !19923)
!19929 = distinct !DISubprogram(name: "vsf_sysutil_chdir", scope: !1326, file: !1326, line: 980, type: !19666, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19930 = !DILocalVariable(name: "p_dirname", arg: 1, scope: !19929, file: !1326, line: 980, type: !88)
!19931 = !DILocation(line: 980, column: 31, scope: !19929)
!19932 = !DILocation(line: 982, column: 16, scope: !19929)
!19933 = !DILocation(line: 982, column: 10, scope: !19929)
!19934 = !DILocation(line: 982, column: 3, scope: !19929)
!19935 = distinct !DISubprogram(name: "vsf_sysutil_rename", scope: !1326, file: !1326, line: 986, type: !19936, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19936 = !DISubroutineType(types: !19937)
!19937 = !{!19, !88, !88}
!19938 = !DILocalVariable(name: "p_from", arg: 1, scope: !19935, file: !1326, line: 986, type: !88)
!19939 = !DILocation(line: 986, column: 32, scope: !19935)
!19940 = !DILocalVariable(name: "p_to", arg: 2, scope: !19935, file: !1326, line: 986, type: !88)
!19941 = !DILocation(line: 986, column: 52, scope: !19935)
!19942 = !DILocation(line: 988, column: 17, scope: !19935)
!19943 = !DILocation(line: 988, column: 25, scope: !19935)
!19944 = !DILocation(line: 988, column: 10, scope: !19935)
!19945 = !DILocation(line: 988, column: 3, scope: !19935)
!19946 = distinct !DISubprogram(name: "vsf_sysutil_opendir", scope: !1326, file: !1326, line: 992, type: !19947, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19947 = !DISubroutineType(types: !19948)
!19948 = !{!1413, !88}
!19949 = !DILocalVariable(name: "p_dirname", arg: 1, scope: !19946, file: !1326, line: 992, type: !88)
!19950 = !DILocation(line: 992, column: 33, scope: !19946)
!19951 = !DILocation(line: 994, column: 44, scope: !19946)
!19952 = !DILocation(line: 994, column: 36, scope: !19946)
!19953 = !DILocation(line: 994, column: 10, scope: !19946)
!19954 = !DILocation(line: 994, column: 3, scope: !19946)
!19955 = distinct !DISubprogram(name: "vsf_sysutil_closedir", scope: !1326, file: !1326, line: 998, type: !19956, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19956 = !DISubroutineType(types: !19957)
!19957 = !{null, !1413}
!19958 = !DILocalVariable(name: "p_dir", arg: 1, scope: !19955, file: !1326, line: 998, type: !1413)
!19959 = !DILocation(line: 998, column: 46, scope: !19955)
!19960 = !DILocalVariable(name: "p_real_dir", scope: !19955, file: !1326, line: 1000, type: !1415)
!19961 = !DILocation(line: 1000, column: 8, scope: !19955)
!19962 = !DILocation(line: 1000, column: 28, scope: !19955)
!19963 = !DILocation(line: 1000, column: 21, scope: !19955)
!19964 = !DILocalVariable(name: "retval", scope: !19955, file: !1326, line: 1001, type: !19)
!19965 = !DILocation(line: 1001, column: 7, scope: !19955)
!19966 = !DILocation(line: 1001, column: 25, scope: !19955)
!19967 = !DILocation(line: 1001, column: 16, scope: !19955)
!19968 = !DILocation(line: 1002, column: 7, scope: !19969)
!19969 = distinct !DILexicalBlock(scope: !19955, file: !1326, line: 1002, column: 7)
!19970 = !DILocation(line: 1002, column: 14, scope: !19969)
!19971 = !DILocation(line: 1002, column: 7, scope: !19955)
!19972 = !DILocation(line: 1004, column: 5, scope: !19973)
!19973 = distinct !DILexicalBlock(scope: !19969, file: !1326, line: 1003, column: 3)
!19974 = !DILocation(line: 1005, column: 3, scope: !19973)
!19975 = !DILocation(line: 1006, column: 1, scope: !19955)
!19976 = distinct !DISubprogram(name: "vsf_sysutil_next_dirent", scope: !1326, file: !1326, line: 1009, type: !19977, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!19977 = !DISubroutineType(types: !19978)
!19978 = !{!88, !1413}
!19979 = !DILocalVariable(name: "p_dir", arg: 1, scope: !19976, file: !1326, line: 1009, type: !1413)
!19980 = !DILocation(line: 1009, column: 49, scope: !19976)
!19981 = !DILocalVariable(name: "p_real_dir", scope: !19976, file: !1326, line: 1011, type: !1415)
!19982 = !DILocation(line: 1011, column: 8, scope: !19976)
!19983 = !DILocation(line: 1011, column: 28, scope: !19976)
!19984 = !DILocation(line: 1011, column: 21, scope: !19976)
!19985 = !DILocalVariable(name: "p_dirent", scope: !19976, file: !1326, line: 1012, type: !19986)
!19986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19987, size: 64)
!19987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !19988, line: 22, size: 2240, elements: !19989)
!19988 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!19989 = !{!19990, !19992, !19994, !19995, !19996}
!19990 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !19987, file: !19988, line: 28, baseType: !19991, size: 64)
!19991 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1287, line: 137, baseType: !65)
!19992 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !19987, file: !19988, line: 29, baseType: !19993, size: 64, offset: 64)
!19993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1287, line: 141, baseType: !28)
!19994 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !19987, file: !19988, line: 31, baseType: !225, size: 16, offset: 128)
!19995 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !19987, file: !19988, line: 32, baseType: !1076, size: 8, offset: 144)
!19996 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !19987, file: !19988, line: 33, baseType: !1756, size: 2048, offset: 152)
!19997 = !DILocation(line: 1012, column: 18, scope: !19976)
!19998 = !DILocation(line: 1012, column: 37, scope: !19976)
!19999 = !DILocation(line: 1012, column: 29, scope: !19976)
!20000 = !DILocation(line: 1013, column: 7, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19976, file: !1326, line: 1013, column: 7)
!20002 = !DILocation(line: 1013, column: 16, scope: !20001)
!20003 = !DILocation(line: 1013, column: 7, scope: !19976)
!20004 = !DILocation(line: 1015, column: 5, scope: !20005)
!20005 = distinct !DILexicalBlock(scope: !20001, file: !1326, line: 1014, column: 3)
!20006 = !DILocation(line: 1017, column: 10, scope: !19976)
!20007 = !DILocation(line: 1017, column: 20, scope: !19976)
!20008 = !DILocation(line: 1017, column: 3, scope: !19976)
!20009 = !DILocation(line: 1018, column: 1, scope: !19976)
!20010 = distinct !DISubprogram(name: "vsf_sysutil_strdup", scope: !1326, file: !1326, line: 1033, type: !20011, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20011 = !DISubroutineType(types: !20012)
!20012 = !{!16, !88}
!20013 = !DILocalVariable(name: "p_str", arg: 1, scope: !20010, file: !1326, line: 1033, type: !88)
!20014 = !DILocation(line: 1033, column: 32, scope: !20010)
!20015 = !DILocation(line: 1035, column: 17, scope: !20010)
!20016 = !DILocation(line: 1035, column: 10, scope: !20010)
!20017 = !DILocation(line: 1035, column: 3, scope: !20010)
!20018 = distinct !DISubprogram(name: "vsf_sysutil_memcpy", scope: !1326, file: !1326, line: 1050, type: !20019, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20019 = !DISubroutineType(types: !20020)
!20020 = !{null, !80, !1595, !850}
!20021 = !DILocalVariable(name: "p_dest", arg: 1, scope: !20018, file: !1326, line: 1050, type: !80)
!20022 = !DILocation(line: 1050, column: 26, scope: !20018)
!20023 = !DILocalVariable(name: "p_src", arg: 2, scope: !20018, file: !1326, line: 1050, type: !1595)
!20024 = !DILocation(line: 1050, column: 46, scope: !20018)
!20025 = !DILocalVariable(name: "size", arg: 3, scope: !20018, file: !1326, line: 1050, type: !850)
!20026 = !DILocation(line: 1050, column: 72, scope: !20018)
!20027 = !DILocation(line: 1053, column: 7, scope: !20028)
!20028 = distinct !DILexicalBlock(scope: !20018, file: !1326, line: 1053, column: 7)
!20029 = !DILocation(line: 1053, column: 12, scope: !20028)
!20030 = !DILocation(line: 1053, column: 7, scope: !20018)
!20031 = !DILocation(line: 1055, column: 5, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20028, file: !1326, line: 1054, column: 3)
!20033 = !DILocation(line: 1058, column: 7, scope: !20034)
!20034 = distinct !DILexicalBlock(scope: !20018, file: !1326, line: 1058, column: 7)
!20035 = !DILocation(line: 1058, column: 12, scope: !20034)
!20036 = !DILocation(line: 1058, column: 7, scope: !20018)
!20037 = !DILocation(line: 1060, column: 5, scope: !20038)
!20038 = distinct !DILexicalBlock(scope: !20034, file: !1326, line: 1059, column: 3)
!20039 = !DILocation(line: 1061, column: 3, scope: !20038)
!20040 = !DILocation(line: 1062, column: 10, scope: !20018)
!20041 = !DILocation(line: 1062, column: 18, scope: !20018)
!20042 = !DILocation(line: 1062, column: 25, scope: !20018)
!20043 = !DILocation(line: 1062, column: 3, scope: !20018)
!20044 = !DILocation(line: 1063, column: 1, scope: !20018)
!20045 = distinct !DISubprogram(name: "vsf_sysutil_strcpy", scope: !1326, file: !1326, line: 1066, type: !20046, scopeLine: 1067, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20046 = !DISubroutineType(types: !20047)
!20047 = !{null, !16, !88, !26}
!20048 = !DILocalVariable(name: "p_dest", arg: 1, scope: !20045, file: !1326, line: 1066, type: !16)
!20049 = !DILocation(line: 1066, column: 26, scope: !20045)
!20050 = !DILocalVariable(name: "p_src", arg: 2, scope: !20045, file: !1326, line: 1066, type: !88)
!20051 = !DILocation(line: 1066, column: 46, scope: !20045)
!20052 = !DILocalVariable(name: "maxsize", arg: 3, scope: !20045, file: !1326, line: 1066, type: !26)
!20053 = !DILocation(line: 1066, column: 66, scope: !20045)
!20054 = !DILocation(line: 1068, column: 7, scope: !20055)
!20055 = distinct !DILexicalBlock(scope: !20045, file: !1326, line: 1068, column: 7)
!20056 = !DILocation(line: 1068, column: 15, scope: !20055)
!20057 = !DILocation(line: 1068, column: 7, scope: !20045)
!20058 = !DILocation(line: 1070, column: 5, scope: !20059)
!20059 = distinct !DILexicalBlock(scope: !20055, file: !1326, line: 1069, column: 3)
!20060 = !DILocation(line: 1072, column: 11, scope: !20045)
!20061 = !DILocation(line: 1072, column: 19, scope: !20045)
!20062 = !DILocation(line: 1072, column: 26, scope: !20045)
!20063 = !DILocation(line: 1072, column: 3, scope: !20045)
!20064 = !DILocation(line: 1073, column: 3, scope: !20045)
!20065 = !DILocation(line: 1073, column: 10, scope: !20045)
!20066 = !DILocation(line: 1073, column: 18, scope: !20045)
!20067 = !DILocation(line: 1073, column: 23, scope: !20045)
!20068 = !DILocation(line: 1074, column: 1, scope: !20045)
!20069 = distinct !DISubprogram(name: "vsf_sysutil_memcmp", scope: !1326, file: !1326, line: 1077, type: !20070, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20070 = !DISubroutineType(types: !20071)
!20071 = !{!19, !1595, !1595, !26}
!20072 = !DILocalVariable(name: "p_src1", arg: 1, scope: !20069, file: !1326, line: 1077, type: !1595)
!20073 = !DILocation(line: 1077, column: 32, scope: !20069)
!20074 = !DILocalVariable(name: "p_src2", arg: 2, scope: !20069, file: !1326, line: 1077, type: !1595)
!20075 = !DILocation(line: 1077, column: 52, scope: !20069)
!20076 = !DILocalVariable(name: "size", arg: 3, scope: !20069, file: !1326, line: 1077, type: !26)
!20077 = !DILocation(line: 1077, column: 73, scope: !20069)
!20078 = !DILocation(line: 1080, column: 7, scope: !20079)
!20079 = distinct !DILexicalBlock(scope: !20069, file: !1326, line: 1080, column: 7)
!20080 = !DILocation(line: 1080, column: 12, scope: !20079)
!20081 = !DILocation(line: 1080, column: 7, scope: !20069)
!20082 = !DILocation(line: 1082, column: 5, scope: !20083)
!20083 = distinct !DILexicalBlock(scope: !20079, file: !1326, line: 1081, column: 3)
!20084 = !DILocation(line: 1084, column: 17, scope: !20069)
!20085 = !DILocation(line: 1084, column: 25, scope: !20069)
!20086 = !DILocation(line: 1084, column: 33, scope: !20069)
!20087 = !DILocation(line: 1084, column: 10, scope: !20069)
!20088 = !DILocation(line: 1084, column: 3, scope: !20069)
!20089 = !DILocation(line: 1085, column: 1, scope: !20069)
!20090 = distinct !DISubprogram(name: "vsf_sysutil_strcmp", scope: !1326, file: !1326, line: 1088, type: !19936, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20091 = !DILocalVariable(name: "p_src1", arg: 1, scope: !20090, file: !1326, line: 1088, type: !88)
!20092 = !DILocation(line: 1088, column: 32, scope: !20090)
!20093 = !DILocalVariable(name: "p_src2", arg: 2, scope: !20090, file: !1326, line: 1088, type: !88)
!20094 = !DILocation(line: 1088, column: 52, scope: !20090)
!20095 = !DILocation(line: 1090, column: 17, scope: !20090)
!20096 = !DILocation(line: 1090, column: 25, scope: !20090)
!20097 = !DILocation(line: 1090, column: 10, scope: !20090)
!20098 = !DILocation(line: 1090, column: 3, scope: !20090)
!20099 = !DILocation(line: 1097, column: 7, scope: !20100)
!20100 = distinct !DILexicalBlock(scope: !1519, file: !1326, line: 1097, column: 7)
!20101 = !DILocation(line: 1097, column: 19, scope: !20100)
!20102 = !DILocation(line: 1097, column: 7, scope: !1519)
!20103 = !DILocation(line: 1099, column: 19, scope: !20104)
!20104 = distinct !DILexicalBlock(scope: !20100, file: !1326, line: 1098, column: 3)
!20105 = !DILocation(line: 1099, column: 17, scope: !20104)
!20106 = !DILocation(line: 1100, column: 9, scope: !20107)
!20107 = distinct !DILexicalBlock(scope: !20104, file: !1326, line: 1100, column: 9)
!20108 = !DILocation(line: 1100, column: 21, scope: !20107)
!20109 = !DILocation(line: 1100, column: 9, scope: !20104)
!20110 = !DILocation(line: 1102, column: 7, scope: !20111)
!20111 = distinct !DILexicalBlock(scope: !20107, file: !1326, line: 1101, column: 5)
!20112 = !DILocation(line: 1103, column: 5, scope: !20111)
!20113 = !DILocation(line: 1104, column: 3, scope: !20104)
!20114 = !DILocation(line: 1105, column: 10, scope: !1519)
!20115 = !DILocation(line: 1105, column: 3, scope: !1519)
!20116 = distinct !DISubprogram(name: "vsf_sysutil_memprotect", scope: !1326, file: !1326, line: 1128, type: !20117, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20117 = !DISubroutineType(types: !20118)
!20118 = !{null, !80, !26, !20119}
!20119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!20120 = !DILocalVariable(name: "p_addr", arg: 1, scope: !20116, file: !1326, line: 1128, type: !80)
!20121 = !DILocation(line: 1128, column: 30, scope: !20116)
!20122 = !DILocalVariable(name: "len", arg: 2, scope: !20116, file: !1326, line: 1128, type: !26)
!20123 = !DILocation(line: 1128, column: 51, scope: !20116)
!20124 = !DILocalVariable(name: "perm", arg: 3, scope: !20116, file: !1326, line: 1129, type: !20119)
!20125 = !DILocation(line: 1129, column: 60, scope: !20116)
!20126 = !DILocalVariable(name: "prot", scope: !20116, file: !1326, line: 1131, type: !19)
!20127 = !DILocation(line: 1131, column: 7, scope: !20116)
!20128 = !DILocation(line: 1131, column: 44, scope: !20116)
!20129 = !DILocation(line: 1131, column: 14, scope: !20116)
!20130 = !DILocalVariable(name: "retval", scope: !20116, file: !1326, line: 1132, type: !19)
!20131 = !DILocation(line: 1132, column: 7, scope: !20116)
!20132 = !DILocation(line: 1132, column: 25, scope: !20116)
!20133 = !DILocation(line: 1132, column: 33, scope: !20116)
!20134 = !DILocation(line: 1132, column: 38, scope: !20116)
!20135 = !DILocation(line: 1132, column: 16, scope: !20116)
!20136 = !DILocation(line: 1133, column: 7, scope: !20137)
!20137 = distinct !DILexicalBlock(scope: !20116, file: !1326, line: 1133, column: 7)
!20138 = !DILocation(line: 1133, column: 14, scope: !20137)
!20139 = !DILocation(line: 1133, column: 7, scope: !20116)
!20140 = !DILocation(line: 1135, column: 5, scope: !20141)
!20141 = distinct !DILexicalBlock(scope: !20137, file: !1326, line: 1134, column: 3)
!20142 = !DILocation(line: 1136, column: 3, scope: !20141)
!20143 = !DILocation(line: 1137, column: 1, scope: !20116)
!20144 = distinct !DISubprogram(name: "vsf_sysutil_translate_memprot", scope: !1326, file: !1326, line: 1109, type: !20145, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20145 = !DISubroutineType(types: !20146)
!20146 = !{!19, !20119}
!20147 = !DILocalVariable(name: "perm", arg: 1, scope: !20144, file: !1326, line: 1109, type: !20119)
!20148 = !DILocation(line: 1109, column: 67, scope: !20144)
!20149 = !DILocalVariable(name: "retval", scope: !20144, file: !1326, line: 1111, type: !19)
!20150 = !DILocation(line: 1111, column: 7, scope: !20144)
!20151 = !DILocation(line: 1112, column: 11, scope: !20144)
!20152 = !DILocation(line: 1112, column: 3, scope: !20144)
!20153 = !DILocation(line: 1115, column: 14, scope: !20154)
!20154 = distinct !DILexicalBlock(scope: !20144, file: !1326, line: 1113, column: 3)
!20155 = !DILocation(line: 1116, column: 7, scope: !20154)
!20156 = !DILocation(line: 1118, column: 14, scope: !20154)
!20157 = !DILocation(line: 1119, column: 7, scope: !20154)
!20158 = !DILocation(line: 1121, column: 7, scope: !20154)
!20159 = !DILocation(line: 1122, column: 7, scope: !20154)
!20160 = !DILocation(line: 1124, column: 10, scope: !20144)
!20161 = !DILocation(line: 1124, column: 3, scope: !20144)
!20162 = distinct !DISubprogram(name: "vsf_sysutil_memunmap", scope: !1326, file: !1326, line: 1140, type: !18684, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20163 = !DILocalVariable(name: "p_start", arg: 1, scope: !20162, file: !1326, line: 1140, type: !80)
!20164 = !DILocation(line: 1140, column: 28, scope: !20162)
!20165 = !DILocalVariable(name: "length", arg: 2, scope: !20162, file: !1326, line: 1140, type: !26)
!20166 = !DILocation(line: 1140, column: 50, scope: !20162)
!20167 = !DILocalVariable(name: "retval", scope: !20162, file: !1326, line: 1142, type: !19)
!20168 = !DILocation(line: 1142, column: 7, scope: !20162)
!20169 = !DILocation(line: 1142, column: 23, scope: !20162)
!20170 = !DILocation(line: 1142, column: 32, scope: !20162)
!20171 = !DILocation(line: 1142, column: 16, scope: !20162)
!20172 = !DILocation(line: 1143, column: 7, scope: !20173)
!20173 = distinct !DILexicalBlock(scope: !20162, file: !1326, line: 1143, column: 7)
!20174 = !DILocation(line: 1143, column: 14, scope: !20173)
!20175 = !DILocation(line: 1143, column: 7, scope: !20162)
!20176 = !DILocation(line: 1145, column: 5, scope: !20177)
!20177 = distinct !DILexicalBlock(scope: !20173, file: !1326, line: 1144, column: 3)
!20178 = !DILocation(line: 1146, column: 3, scope: !20177)
!20179 = !DILocation(line: 1147, column: 1, scope: !20162)
!20180 = distinct !DISubprogram(name: "vsf_sysutil_open_file", scope: !1326, file: !1326, line: 1172, type: !20181, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20181 = !DISubroutineType(types: !20182)
!20182 = !{!19, !88, !20183}
!20183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!20184 = !DILocalVariable(name: "p_filename", arg: 1, scope: !20180, file: !1326, line: 1172, type: !88)
!20185 = !DILocation(line: 1172, column: 35, scope: !20180)
!20186 = !DILocalVariable(name: "mode", arg: 2, scope: !20180, file: !1326, line: 1173, type: !20183)
!20187 = !DILocation(line: 1173, column: 54, scope: !20180)
!20188 = !DILocation(line: 1175, column: 15, scope: !20180)
!20189 = !DILocation(line: 1175, column: 58, scope: !20180)
!20190 = !DILocation(line: 1175, column: 27, scope: !20180)
!20191 = !DILocation(line: 1175, column: 64, scope: !20180)
!20192 = !DILocation(line: 1175, column: 10, scope: !20180)
!20193 = !DILocation(line: 1175, column: 3, scope: !20180)
!20194 = distinct !DISubprogram(name: "vsf_sysutil_translate_openmode", scope: !1326, file: !1326, line: 1150, type: !20195, scopeLine: 1151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20195 = !DISubroutineType(types: !20196)
!20196 = !{!19, !20183}
!20197 = !DILocalVariable(name: "mode", arg: 1, scope: !20194, file: !1326, line: 1150, type: !20183)
!20198 = !DILocation(line: 1150, column: 63, scope: !20194)
!20199 = !DILocalVariable(name: "retval", scope: !20194, file: !1326, line: 1152, type: !19)
!20200 = !DILocation(line: 1152, column: 7, scope: !20194)
!20201 = !DILocation(line: 1153, column: 11, scope: !20194)
!20202 = !DILocation(line: 1153, column: 3, scope: !20194)
!20203 = !DILocation(line: 1156, column: 14, scope: !20204)
!20204 = distinct !DILexicalBlock(scope: !20194, file: !1326, line: 1154, column: 3)
!20205 = !DILocation(line: 1157, column: 7, scope: !20204)
!20206 = !DILocation(line: 1159, column: 14, scope: !20204)
!20207 = !DILocation(line: 1160, column: 7, scope: !20204)
!20208 = !DILocation(line: 1162, column: 14, scope: !20204)
!20209 = !DILocation(line: 1163, column: 7, scope: !20204)
!20210 = !DILocation(line: 1165, column: 7, scope: !20204)
!20211 = !DILocation(line: 1166, column: 7, scope: !20204)
!20212 = !DILocation(line: 1168, column: 10, scope: !20194)
!20213 = !DILocation(line: 1168, column: 3, scope: !20194)
!20214 = distinct !DISubprogram(name: "vsf_sysutil_create_file_exclusive", scope: !1326, file: !1326, line: 1179, type: !19666, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20215 = !DILocalVariable(name: "p_filename", arg: 1, scope: !20214, file: !1326, line: 1179, type: !88)
!20216 = !DILocation(line: 1179, column: 47, scope: !20214)
!20217 = !DILocation(line: 1182, column: 15, scope: !20214)
!20218 = !DILocation(line: 1183, column: 15, scope: !20214)
!20219 = !DILocation(line: 1182, column: 10, scope: !20214)
!20220 = !DILocation(line: 1182, column: 3, scope: !20214)
!20221 = distinct !DISubprogram(name: "vsf_sysutil_create_or_open_file", scope: !1326, file: !1326, line: 1187, type: !20222, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20222 = !DISubroutineType(types: !20223)
!20223 = !{!19, !88, !26}
!20224 = !DILocalVariable(name: "p_filename", arg: 1, scope: !20221, file: !1326, line: 1187, type: !88)
!20225 = !DILocation(line: 1187, column: 45, scope: !20221)
!20226 = !DILocalVariable(name: "mode", arg: 2, scope: !20221, file: !1326, line: 1187, type: !26)
!20227 = !DILocation(line: 1187, column: 70, scope: !20221)
!20228 = !DILocation(line: 1189, column: 15, scope: !20221)
!20229 = !DILocation(line: 1189, column: 60, scope: !20221)
!20230 = !DILocation(line: 1189, column: 10, scope: !20221)
!20231 = !DILocation(line: 1189, column: 3, scope: !20221)
!20232 = distinct !DISubprogram(name: "vsf_sysutil_create_or_open_file_append", scope: !1326, file: !1326, line: 1193, type: !20222, scopeLine: 1195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20233 = !DILocalVariable(name: "p_filename", arg: 1, scope: !20232, file: !1326, line: 1193, type: !88)
!20234 = !DILocation(line: 1193, column: 52, scope: !20232)
!20235 = !DILocalVariable(name: "mode", arg: 2, scope: !20232, file: !1326, line: 1194, type: !26)
!20236 = !DILocation(line: 1194, column: 53, scope: !20232)
!20237 = !DILocation(line: 1196, column: 15, scope: !20232)
!20238 = !DILocation(line: 1196, column: 71, scope: !20232)
!20239 = !DILocation(line: 1196, column: 10, scope: !20232)
!20240 = !DILocation(line: 1196, column: 3, scope: !20232)
!20241 = distinct !DISubprogram(name: "vsf_sysutil_dupfd2", scope: !1326, file: !1326, line: 1200, type: !6973, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20242 = !DILocalVariable(name: "old_fd", arg: 1, scope: !20241, file: !1326, line: 1200, type: !19)
!20243 = !DILocation(line: 1200, column: 24, scope: !20241)
!20244 = !DILocalVariable(name: "new_fd", arg: 2, scope: !20241, file: !1326, line: 1200, type: !19)
!20245 = !DILocation(line: 1200, column: 36, scope: !20241)
!20246 = !DILocalVariable(name: "retval", scope: !20241, file: !1326, line: 1202, type: !19)
!20247 = !DILocation(line: 1202, column: 7, scope: !20241)
!20248 = !DILocation(line: 1203, column: 7, scope: !20249)
!20249 = distinct !DILexicalBlock(scope: !20241, file: !1326, line: 1203, column: 7)
!20250 = !DILocation(line: 1203, column: 17, scope: !20249)
!20251 = !DILocation(line: 1203, column: 14, scope: !20249)
!20252 = !DILocation(line: 1203, column: 7, scope: !20241)
!20253 = !DILocation(line: 1205, column: 5, scope: !20254)
!20254 = distinct !DILexicalBlock(scope: !20249, file: !1326, line: 1204, column: 3)
!20255 = !DILocation(line: 1207, column: 17, scope: !20241)
!20256 = !DILocation(line: 1207, column: 25, scope: !20241)
!20257 = !DILocation(line: 1207, column: 12, scope: !20241)
!20258 = !DILocation(line: 1207, column: 10, scope: !20241)
!20259 = !DILocation(line: 1208, column: 7, scope: !20260)
!20260 = distinct !DILexicalBlock(scope: !20241, file: !1326, line: 1208, column: 7)
!20261 = !DILocation(line: 1208, column: 17, scope: !20260)
!20262 = !DILocation(line: 1208, column: 14, scope: !20260)
!20263 = !DILocation(line: 1208, column: 7, scope: !20241)
!20264 = !DILocation(line: 1210, column: 5, scope: !20265)
!20265 = distinct !DILexicalBlock(scope: !20260, file: !1326, line: 1209, column: 3)
!20266 = !DILocation(line: 1211, column: 3, scope: !20265)
!20267 = !DILocation(line: 1212, column: 1, scope: !20241)
!20268 = distinct !DISubprogram(name: "vsf_sysutil_close", scope: !1326, file: !1326, line: 1215, type: !1406, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20269 = !DILocalVariable(name: "fd", arg: 1, scope: !20268, file: !1326, line: 1215, type: !19)
!20270 = !DILocation(line: 1215, column: 23, scope: !20268)
!20271 = !DILocation(line: 1217, column: 3, scope: !20268)
!20272 = !DILocalVariable(name: "retval", scope: !20273, file: !1326, line: 1219, type: !19)
!20273 = distinct !DILexicalBlock(scope: !20268, file: !1326, line: 1218, column: 3)
!20274 = !DILocation(line: 1219, column: 9, scope: !20273)
!20275 = !DILocation(line: 1219, column: 24, scope: !20273)
!20276 = !DILocation(line: 1219, column: 18, scope: !20273)
!20277 = !DILocation(line: 1220, column: 9, scope: !20278)
!20278 = distinct !DILexicalBlock(scope: !20273, file: !1326, line: 1220, column: 9)
!20279 = !DILocation(line: 1220, column: 16, scope: !20278)
!20280 = !DILocation(line: 1220, column: 9, scope: !20273)
!20281 = !DILocation(line: 1222, column: 11, scope: !20282)
!20282 = distinct !DILexicalBlock(scope: !20283, file: !1326, line: 1222, column: 11)
!20283 = distinct !DILexicalBlock(scope: !20278, file: !1326, line: 1221, column: 5)
!20284 = !DILocation(line: 1222, column: 17, scope: !20282)
!20285 = !DILocation(line: 1222, column: 11, scope: !20283)
!20286 = !DILocation(line: 1224, column: 9, scope: !20287)
!20287 = distinct !DILexicalBlock(scope: !20282, file: !1326, line: 1223, column: 7)
!20288 = !DILocation(line: 1225, column: 9, scope: !20287)
!20289 = distinct !{!20289, !20271, !20290}
!20290 = !DILocation(line: 1230, column: 3, scope: !20268)
!20291 = !DILocation(line: 1227, column: 7, scope: !20283)
!20292 = !DILocation(line: 1228, column: 5, scope: !20283)
!20293 = !DILocation(line: 1229, column: 5, scope: !20273)
!20294 = distinct !DISubprogram(name: "vsf_sysutil_close_failok", scope: !1326, file: !1326, line: 1234, type: !7062, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20295 = !DILocalVariable(name: "fd", arg: 1, scope: !20294, file: !1326, line: 1234, type: !19)
!20296 = !DILocation(line: 1234, column: 30, scope: !20294)
!20297 = !DILocation(line: 1236, column: 16, scope: !20294)
!20298 = !DILocation(line: 1236, column: 10, scope: !20294)
!20299 = !DILocation(line: 1236, column: 3, scope: !20294)
!20300 = distinct !DISubprogram(name: "vsf_sysutil_unlink", scope: !1326, file: !1326, line: 1240, type: !19666, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20301 = !DILocalVariable(name: "p_dead", arg: 1, scope: !20300, file: !1326, line: 1240, type: !88)
!20302 = !DILocation(line: 1240, column: 32, scope: !20300)
!20303 = !DILocation(line: 1242, column: 17, scope: !20300)
!20304 = !DILocation(line: 1242, column: 10, scope: !20300)
!20305 = !DILocation(line: 1242, column: 3, scope: !20300)
!20306 = distinct !DISubprogram(name: "vsf_sysutil_write_access", scope: !1326, file: !1326, line: 1246, type: !19666, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20307 = !DILocalVariable(name: "p_filename", arg: 1, scope: !20306, file: !1326, line: 1246, type: !88)
!20308 = !DILocation(line: 1246, column: 38, scope: !20306)
!20309 = !DILocalVariable(name: "retval", scope: !20306, file: !1326, line: 1248, type: !19)
!20310 = !DILocation(line: 1248, column: 7, scope: !20306)
!20311 = !DILocation(line: 1248, column: 23, scope: !20306)
!20312 = !DILocation(line: 1248, column: 16, scope: !20306)
!20313 = !DILocation(line: 1249, column: 11, scope: !20306)
!20314 = !DILocation(line: 1249, column: 18, scope: !20306)
!20315 = !DILocation(line: 1249, column: 3, scope: !20306)
!20316 = distinct !DISubprogram(name: "vsf_sysutil_fstat", scope: !1326, file: !1326, line: 1262, type: !20317, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20317 = !DISubroutineType(types: !20318)
!20318 = !{null, !19, !20319}
!20319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!20320 = !DILocalVariable(name: "fd", arg: 1, scope: !20316, file: !1326, line: 1262, type: !19)
!20321 = !DILocation(line: 1262, column: 23, scope: !20316)
!20322 = !DILocalVariable(name: "p_ptr", arg: 2, scope: !20316, file: !1326, line: 1262, type: !20319)
!20323 = !DILocation(line: 1262, column: 56, scope: !20316)
!20324 = !DILocalVariable(name: "retval", scope: !20316, file: !1326, line: 1264, type: !19)
!20325 = !DILocation(line: 1264, column: 7, scope: !20316)
!20326 = !DILocation(line: 1265, column: 29, scope: !20316)
!20327 = !DILocation(line: 1265, column: 3, scope: !20316)
!20328 = !DILocation(line: 1266, column: 18, scope: !20316)
!20329 = !DILocation(line: 1266, column: 39, scope: !20316)
!20330 = !DILocation(line: 1266, column: 38, scope: !20316)
!20331 = !DILocation(line: 1266, column: 22, scope: !20316)
!20332 = !DILocation(line: 1266, column: 12, scope: !20316)
!20333 = !DILocation(line: 1266, column: 10, scope: !20316)
!20334 = !DILocation(line: 1267, column: 7, scope: !20335)
!20335 = distinct !DILexicalBlock(scope: !20316, file: !1326, line: 1267, column: 7)
!20336 = !DILocation(line: 1267, column: 14, scope: !20335)
!20337 = !DILocation(line: 1267, column: 7, scope: !20316)
!20338 = !DILocation(line: 1269, column: 5, scope: !20339)
!20339 = distinct !DILexicalBlock(scope: !20335, file: !1326, line: 1268, column: 3)
!20340 = !DILocation(line: 1270, column: 3, scope: !20339)
!20341 = !DILocation(line: 1271, column: 1, scope: !20316)
!20342 = distinct !DISubprogram(name: "vsf_sysutil_alloc_statbuf", scope: !1326, file: !1326, line: 1253, type: !20343, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20343 = !DISubroutineType(types: !20344)
!20344 = !{null, !20319}
!20345 = !DILocalVariable(name: "p_ptr", arg: 1, scope: !20342, file: !1326, line: 1253, type: !20319)
!20346 = !DILocation(line: 1253, column: 56, scope: !20342)
!20347 = !DILocation(line: 1255, column: 8, scope: !20348)
!20348 = distinct !DILexicalBlock(scope: !20342, file: !1326, line: 1255, column: 7)
!20349 = !DILocation(line: 1255, column: 7, scope: !20348)
!20350 = !DILocation(line: 1255, column: 14, scope: !20348)
!20351 = !DILocation(line: 1255, column: 7, scope: !20342)
!20352 = !DILocation(line: 1257, column: 14, scope: !20353)
!20353 = distinct !DILexicalBlock(scope: !20348, file: !1326, line: 1256, column: 3)
!20354 = !DILocation(line: 1257, column: 6, scope: !20353)
!20355 = !DILocation(line: 1257, column: 12, scope: !20353)
!20356 = !DILocation(line: 1258, column: 3, scope: !20353)
!20357 = !DILocation(line: 1259, column: 1, scope: !20342)
!20358 = distinct !DISubprogram(name: "vsf_sysutil_stat", scope: !1326, file: !1326, line: 1274, type: !20359, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20359 = !DISubroutineType(types: !20360)
!20360 = !{!19, !88, !20319}
!20361 = !DILocalVariable(name: "p_name", arg: 1, scope: !20358, file: !1326, line: 1274, type: !88)
!20362 = !DILocation(line: 1274, column: 30, scope: !20358)
!20363 = !DILocalVariable(name: "p_ptr", arg: 2, scope: !20358, file: !1326, line: 1274, type: !20319)
!20364 = !DILocation(line: 1274, column: 67, scope: !20358)
!20365 = !DILocation(line: 1276, column: 29, scope: !20358)
!20366 = !DILocation(line: 1276, column: 3, scope: !20358)
!20367 = !DILocation(line: 1277, column: 15, scope: !20358)
!20368 = !DILocation(line: 1277, column: 40, scope: !20358)
!20369 = !DILocation(line: 1277, column: 39, scope: !20358)
!20370 = !DILocation(line: 1277, column: 23, scope: !20358)
!20371 = !DILocation(line: 1277, column: 10, scope: !20358)
!20372 = !DILocation(line: 1277, column: 3, scope: !20358)
!20373 = distinct !DISubprogram(name: "vsf_sysutil_lstat", scope: !1326, file: !1326, line: 1281, type: !20359, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20374 = !DILocalVariable(name: "p_name", arg: 1, scope: !20373, file: !1326, line: 1281, type: !88)
!20375 = !DILocation(line: 1281, column: 31, scope: !20373)
!20376 = !DILocalVariable(name: "p_ptr", arg: 2, scope: !20373, file: !1326, line: 1281, type: !20319)
!20377 = !DILocation(line: 1281, column: 68, scope: !20373)
!20378 = !DILocation(line: 1283, column: 29, scope: !20373)
!20379 = !DILocation(line: 1283, column: 3, scope: !20373)
!20380 = !DILocation(line: 1284, column: 16, scope: !20373)
!20381 = !DILocation(line: 1284, column: 41, scope: !20373)
!20382 = !DILocation(line: 1284, column: 40, scope: !20373)
!20383 = !DILocation(line: 1284, column: 24, scope: !20373)
!20384 = !DILocation(line: 1284, column: 10, scope: !20373)
!20385 = !DILocation(line: 1284, column: 3, scope: !20373)
!20386 = distinct !DISubprogram(name: "vsf_sysutil_dir_stat", scope: !1326, file: !1326, line: 1288, type: !20387, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20387 = !DISubroutineType(types: !20388)
!20388 = !{null, !20389, !20319}
!20389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20390, size: 64)
!20390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!20391 = !DILocalVariable(name: "p_dir", arg: 1, scope: !20386, file: !1326, line: 1288, type: !20389)
!20392 = !DILocation(line: 1288, column: 52, scope: !20386)
!20393 = !DILocalVariable(name: "p_ptr", arg: 2, scope: !20386, file: !1326, line: 1289, type: !20319)
!20394 = !DILocation(line: 1289, column: 51, scope: !20386)
!20395 = !DILocalVariable(name: "fd", scope: !20386, file: !1326, line: 1291, type: !19)
!20396 = !DILocation(line: 1291, column: 7, scope: !20386)
!20397 = !DILocation(line: 1291, column: 25, scope: !20386)
!20398 = !DILocation(line: 1291, column: 18, scope: !20386)
!20399 = !DILocation(line: 1291, column: 12, scope: !20386)
!20400 = !DILocation(line: 1292, column: 21, scope: !20386)
!20401 = !DILocation(line: 1292, column: 25, scope: !20386)
!20402 = !DILocation(line: 1292, column: 3, scope: !20386)
!20403 = !DILocation(line: 1293, column: 1, scope: !20386)
!20404 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_is_regfile", scope: !1326, file: !1326, line: 1296, type: !20405, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20405 = !DISubroutineType(types: !20406)
!20406 = !{!19, !1527}
!20407 = !DILocalVariable(name: "p_stat", arg: 1, scope: !20404, file: !1326, line: 1296, type: !1527)
!20408 = !DILocation(line: 1296, column: 66, scope: !20404)
!20409 = !DILocalVariable(name: "p_realstat", scope: !20404, file: !1326, line: 1298, type: !1457)
!20410 = !DILocation(line: 1298, column: 22, scope: !20404)
!20411 = !DILocation(line: 1298, column: 56, scope: !20404)
!20412 = !DILocation(line: 1298, column: 35, scope: !20404)
!20413 = !DILocation(line: 1299, column: 10, scope: !20404)
!20414 = !DILocation(line: 1299, column: 3, scope: !20404)
!20415 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_is_symlink", scope: !1326, file: !1326, line: 1303, type: !20405, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20416 = !DILocalVariable(name: "p_stat", arg: 1, scope: !20415, file: !1326, line: 1303, type: !1527)
!20417 = !DILocation(line: 1303, column: 66, scope: !20415)
!20418 = !DILocalVariable(name: "p_realstat", scope: !20415, file: !1326, line: 1305, type: !1457)
!20419 = !DILocation(line: 1305, column: 22, scope: !20415)
!20420 = !DILocation(line: 1305, column: 56, scope: !20415)
!20421 = !DILocation(line: 1305, column: 35, scope: !20415)
!20422 = !DILocation(line: 1306, column: 10, scope: !20415)
!20423 = !DILocation(line: 1306, column: 3, scope: !20415)
!20424 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_is_socket", scope: !1326, file: !1326, line: 1310, type: !20405, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20425 = !DILocalVariable(name: "p_stat", arg: 1, scope: !20424, file: !1326, line: 1310, type: !1527)
!20426 = !DILocation(line: 1310, column: 65, scope: !20424)
!20427 = !DILocalVariable(name: "p_realstat", scope: !20424, file: !1326, line: 1312, type: !1457)
!20428 = !DILocation(line: 1312, column: 22, scope: !20424)
!20429 = !DILocation(line: 1312, column: 56, scope: !20424)
!20430 = !DILocation(line: 1312, column: 35, scope: !20424)
!20431 = !DILocation(line: 1313, column: 10, scope: !20424)
!20432 = !DILocation(line: 1313, column: 3, scope: !20424)
!20433 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_is_dir", scope: !1326, file: !1326, line: 1317, type: !20405, scopeLine: 1318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20434 = !DILocalVariable(name: "p_stat", arg: 1, scope: !20433, file: !1326, line: 1317, type: !1527)
!20435 = !DILocation(line: 1317, column: 62, scope: !20433)
!20436 = !DILocalVariable(name: "p_realstat", scope: !20433, file: !1326, line: 1319, type: !1457)
!20437 = !DILocation(line: 1319, column: 22, scope: !20433)
!20438 = !DILocation(line: 1319, column: 56, scope: !20433)
!20439 = !DILocation(line: 1319, column: 35, scope: !20433)
!20440 = !DILocation(line: 1320, column: 10, scope: !20433)
!20441 = !DILocation(line: 1320, column: 3, scope: !20433)
!20442 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !1524, file: !1326, line: 1324, type: !1527)
!20443 = !DILocation(line: 1324, column: 65, scope: !1524)
!20444 = !DILocalVariable(name: "i", scope: !1524, file: !1326, line: 1327, type: !19)
!20445 = !DILocation(line: 1327, column: 7, scope: !1524)
!20446 = !DILocalVariable(name: "p_stat", scope: !1524, file: !1326, line: 1328, type: !1457)
!20447 = !DILocation(line: 1328, column: 22, scope: !1524)
!20448 = !DILocation(line: 1328, column: 52, scope: !1524)
!20449 = !DILocation(line: 1328, column: 31, scope: !1524)
!20450 = !DILocation(line: 1329, column: 9, scope: !20451)
!20451 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1329, column: 3)
!20452 = !DILocation(line: 1329, column: 8, scope: !20451)
!20453 = !DILocation(line: 1329, column: 13, scope: !20454)
!20454 = distinct !DILexicalBlock(scope: !20451, file: !1326, line: 1329, column: 3)
!20455 = !DILocation(line: 1329, column: 14, scope: !20454)
!20456 = !DILocation(line: 1329, column: 3, scope: !20451)
!20457 = !DILocation(line: 1331, column: 11, scope: !20458)
!20458 = distinct !DILexicalBlock(scope: !20454, file: !1326, line: 1330, column: 3)
!20459 = !DILocation(line: 1331, column: 5, scope: !20458)
!20460 = !DILocation(line: 1331, column: 14, scope: !20458)
!20461 = !DILocation(line: 1332, column: 3, scope: !20458)
!20462 = !DILocation(line: 1329, column: 20, scope: !20454)
!20463 = !DILocation(line: 1329, column: 3, scope: !20454)
!20464 = distinct !{!20464, !20456, !20465}
!20465 = !DILocation(line: 1332, column: 3, scope: !20451)
!20466 = !DILocation(line: 1333, column: 12, scope: !1524)
!20467 = !DILocation(line: 1334, column: 11, scope: !1524)
!20468 = !DILocation(line: 1334, column: 19, scope: !1524)
!20469 = !DILocation(line: 1334, column: 27, scope: !1524)
!20470 = !DILocation(line: 1334, column: 3, scope: !1524)
!20471 = !DILocation(line: 1336, column: 28, scope: !20472)
!20472 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1335, column: 3)
!20473 = !DILocation(line: 1336, column: 35, scope: !20472)
!20474 = !DILocation(line: 1337, column: 28, scope: !20472)
!20475 = !DILocation(line: 1337, column: 35, scope: !20472)
!20476 = !DILocation(line: 1338, column: 28, scope: !20472)
!20477 = !DILocation(line: 1338, column: 35, scope: !20472)
!20478 = !DILocation(line: 1339, column: 28, scope: !20472)
!20479 = !DILocation(line: 1339, column: 35, scope: !20472)
!20480 = !DILocation(line: 1340, column: 29, scope: !20472)
!20481 = !DILocation(line: 1340, column: 36, scope: !20472)
!20482 = !DILocation(line: 1341, column: 28, scope: !20472)
!20483 = !DILocation(line: 1341, column: 35, scope: !20472)
!20484 = !DILocation(line: 1342, column: 28, scope: !20472)
!20485 = !DILocation(line: 1342, column: 35, scope: !20472)
!20486 = !DILocation(line: 1343, column: 14, scope: !20472)
!20487 = !DILocation(line: 1345, column: 7, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1345, column: 7)
!20489 = !DILocation(line: 1345, column: 15, scope: !20488)
!20490 = !DILocation(line: 1345, column: 23, scope: !20488)
!20491 = !DILocation(line: 1345, column: 7, scope: !1524)
!20492 = !DILocation(line: 1345, column: 43, scope: !20488)
!20493 = !DILocation(line: 1345, column: 34, scope: !20488)
!20494 = !DILocation(line: 1346, column: 7, scope: !20495)
!20495 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1346, column: 7)
!20496 = !DILocation(line: 1346, column: 15, scope: !20495)
!20497 = !DILocation(line: 1346, column: 23, scope: !20495)
!20498 = !DILocation(line: 1346, column: 7, scope: !1524)
!20499 = !DILocation(line: 1346, column: 43, scope: !20495)
!20500 = !DILocation(line: 1346, column: 34, scope: !20495)
!20501 = !DILocation(line: 1347, column: 7, scope: !20502)
!20502 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1347, column: 7)
!20503 = !DILocation(line: 1347, column: 15, scope: !20502)
!20504 = !DILocation(line: 1347, column: 23, scope: !20502)
!20505 = !DILocation(line: 1347, column: 7, scope: !1524)
!20506 = !DILocation(line: 1347, column: 43, scope: !20502)
!20507 = !DILocation(line: 1347, column: 34, scope: !20502)
!20508 = !DILocation(line: 1348, column: 7, scope: !20509)
!20509 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1348, column: 7)
!20510 = !DILocation(line: 1348, column: 15, scope: !20509)
!20511 = !DILocation(line: 1348, column: 23, scope: !20509)
!20512 = !DILocation(line: 1348, column: 7, scope: !1524)
!20513 = !DILocation(line: 1348, column: 43, scope: !20509)
!20514 = !DILocation(line: 1348, column: 34, scope: !20509)
!20515 = !DILocation(line: 1349, column: 7, scope: !20516)
!20516 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1349, column: 7)
!20517 = !DILocation(line: 1349, column: 15, scope: !20516)
!20518 = !DILocation(line: 1349, column: 23, scope: !20516)
!20519 = !DILocation(line: 1349, column: 7, scope: !1524)
!20520 = !DILocation(line: 1349, column: 43, scope: !20516)
!20521 = !DILocation(line: 1349, column: 34, scope: !20516)
!20522 = !DILocation(line: 1350, column: 7, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1350, column: 7)
!20524 = !DILocation(line: 1350, column: 15, scope: !20523)
!20525 = !DILocation(line: 1350, column: 23, scope: !20523)
!20526 = !DILocation(line: 1350, column: 7, scope: !1524)
!20527 = !DILocation(line: 1350, column: 43, scope: !20523)
!20528 = !DILocation(line: 1350, column: 34, scope: !20523)
!20529 = !DILocation(line: 1351, column: 7, scope: !20530)
!20530 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1351, column: 7)
!20531 = !DILocation(line: 1351, column: 15, scope: !20530)
!20532 = !DILocation(line: 1351, column: 23, scope: !20530)
!20533 = !DILocation(line: 1351, column: 7, scope: !1524)
!20534 = !DILocation(line: 1351, column: 43, scope: !20530)
!20535 = !DILocation(line: 1351, column: 34, scope: !20530)
!20536 = !DILocation(line: 1352, column: 7, scope: !20537)
!20537 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1352, column: 7)
!20538 = !DILocation(line: 1352, column: 15, scope: !20537)
!20539 = !DILocation(line: 1352, column: 23, scope: !20537)
!20540 = !DILocation(line: 1352, column: 7, scope: !1524)
!20541 = !DILocation(line: 1352, column: 43, scope: !20537)
!20542 = !DILocation(line: 1352, column: 34, scope: !20537)
!20543 = !DILocation(line: 1353, column: 7, scope: !20544)
!20544 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1353, column: 7)
!20545 = !DILocation(line: 1353, column: 15, scope: !20544)
!20546 = !DILocation(line: 1353, column: 23, scope: !20544)
!20547 = !DILocation(line: 1353, column: 7, scope: !1524)
!20548 = !DILocation(line: 1353, column: 43, scope: !20544)
!20549 = !DILocation(line: 1353, column: 34, scope: !20544)
!20550 = !DILocation(line: 1354, column: 7, scope: !20551)
!20551 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1354, column: 7)
!20552 = !DILocation(line: 1354, column: 15, scope: !20551)
!20553 = !DILocation(line: 1354, column: 23, scope: !20551)
!20554 = !DILocation(line: 1354, column: 7, scope: !1524)
!20555 = !DILocation(line: 1354, column: 46, scope: !20551)
!20556 = !DILocation(line: 1354, column: 55, scope: !20551)
!20557 = !DILocation(line: 1354, column: 45, scope: !20551)
!20558 = !DILocation(line: 1354, column: 43, scope: !20551)
!20559 = !DILocation(line: 1354, column: 34, scope: !20551)
!20560 = !DILocation(line: 1355, column: 7, scope: !20561)
!20561 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1355, column: 7)
!20562 = !DILocation(line: 1355, column: 15, scope: !20561)
!20563 = !DILocation(line: 1355, column: 23, scope: !20561)
!20564 = !DILocation(line: 1355, column: 7, scope: !1524)
!20565 = !DILocation(line: 1355, column: 46, scope: !20561)
!20566 = !DILocation(line: 1355, column: 55, scope: !20561)
!20567 = !DILocation(line: 1355, column: 45, scope: !20561)
!20568 = !DILocation(line: 1355, column: 43, scope: !20561)
!20569 = !DILocation(line: 1355, column: 34, scope: !20561)
!20570 = !DILocation(line: 1356, column: 7, scope: !20571)
!20571 = distinct !DILexicalBlock(scope: !1524, file: !1326, line: 1356, column: 7)
!20572 = !DILocation(line: 1356, column: 15, scope: !20571)
!20573 = !DILocation(line: 1356, column: 23, scope: !20571)
!20574 = !DILocation(line: 1356, column: 7, scope: !1524)
!20575 = !DILocation(line: 1356, column: 46, scope: !20571)
!20576 = !DILocation(line: 1356, column: 55, scope: !20571)
!20577 = !DILocation(line: 1356, column: 45, scope: !20571)
!20578 = !DILocation(line: 1356, column: 43, scope: !20571)
!20579 = !DILocation(line: 1356, column: 34, scope: !20571)
!20580 = !DILocation(line: 1357, column: 13, scope: !1524)
!20581 = !DILocation(line: 1358, column: 3, scope: !1524)
!20582 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !1534, file: !1326, line: 1362, type: !1527)
!20583 = !DILocation(line: 1362, column: 64, scope: !1534)
!20584 = !DILocalVariable(name: "use_localtime", arg: 2, scope: !1534, file: !1326, line: 1363, type: !19)
!20585 = !DILocation(line: 1363, column: 34, scope: !1534)
!20586 = !DILocalVariable(name: "curr_time", arg: 3, scope: !1534, file: !1326, line: 1363, type: !28)
!20587 = !DILocation(line: 1363, column: 54, scope: !1534)
!20588 = !DILocalVariable(name: "retval", scope: !1534, file: !1326, line: 1366, type: !19)
!20589 = !DILocation(line: 1366, column: 7, scope: !1534)
!20590 = !DILocalVariable(name: "p_tm", scope: !1534, file: !1326, line: 1367, type: !20591)
!20591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20592, size: 64)
!20592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !20593, line: 7, size: 448, elements: !20594)
!20593 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!20594 = !{!20595, !20596, !20597, !20598, !20599, !20600, !20601, !20602, !20603, !20604, !20605}
!20595 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !20592, file: !20593, line: 9, baseType: !19, size: 32)
!20596 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !20592, file: !20593, line: 10, baseType: !19, size: 32, offset: 32)
!20597 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !20592, file: !20593, line: 11, baseType: !19, size: 32, offset: 64)
!20598 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !20592, file: !20593, line: 12, baseType: !19, size: 32, offset: 96)
!20599 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !20592, file: !20593, line: 13, baseType: !19, size: 32, offset: 128)
!20600 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !20592, file: !20593, line: 14, baseType: !19, size: 32, offset: 160)
!20601 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !20592, file: !20593, line: 15, baseType: !19, size: 32, offset: 192)
!20602 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !20592, file: !20593, line: 16, baseType: !19, size: 32, offset: 224)
!20603 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !20592, file: !20593, line: 17, baseType: !19, size: 32, offset: 256)
!20604 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !20592, file: !20593, line: 20, baseType: !28, size: 64, offset: 320)
!20605 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !20592, file: !20593, line: 21, baseType: !88, size: 64, offset: 384)
!20606 = !DILocation(line: 1367, column: 14, scope: !1534)
!20607 = !DILocalVariable(name: "p_stat", scope: !1534, file: !1326, line: 1368, type: !1457)
!20608 = !DILocation(line: 1368, column: 22, scope: !1534)
!20609 = !DILocation(line: 1368, column: 52, scope: !1534)
!20610 = !DILocation(line: 1368, column: 31, scope: !1534)
!20611 = !DILocalVariable(name: "p_date_format", scope: !1534, file: !1326, line: 1369, type: !88)
!20612 = !DILocation(line: 1369, column: 15, scope: !1534)
!20613 = !DILocation(line: 1370, column: 8, scope: !20614)
!20614 = distinct !DILexicalBlock(scope: !1534, file: !1326, line: 1370, column: 7)
!20615 = !DILocation(line: 1370, column: 7, scope: !1534)
!20616 = !DILocation(line: 1372, column: 20, scope: !20617)
!20617 = distinct !DILexicalBlock(scope: !20614, file: !1326, line: 1371, column: 3)
!20618 = !DILocation(line: 1372, column: 28, scope: !20617)
!20619 = !DILocation(line: 1372, column: 12, scope: !20617)
!20620 = !DILocation(line: 1372, column: 10, scope: !20617)
!20621 = !DILocation(line: 1373, column: 3, scope: !20617)
!20622 = !DILocation(line: 1376, column: 23, scope: !20623)
!20623 = distinct !DILexicalBlock(scope: !20614, file: !1326, line: 1375, column: 3)
!20624 = !DILocation(line: 1376, column: 31, scope: !20623)
!20625 = !DILocation(line: 1376, column: 12, scope: !20623)
!20626 = !DILocation(line: 1376, column: 10, scope: !20623)
!20627 = !DILocation(line: 1379, column: 7, scope: !20628)
!20628 = distinct !DILexicalBlock(scope: !1534, file: !1326, line: 1379, column: 7)
!20629 = !DILocation(line: 1379, column: 15, scope: !20628)
!20630 = !DILocation(line: 1379, column: 26, scope: !20628)
!20631 = !DILocation(line: 1379, column: 24, scope: !20628)
!20632 = !DILocation(line: 1379, column: 36, scope: !20628)
!20633 = !DILocation(line: 1380, column: 8, scope: !20628)
!20634 = !DILocation(line: 1380, column: 20, scope: !20628)
!20635 = !DILocation(line: 1380, column: 28, scope: !20628)
!20636 = !DILocation(line: 1380, column: 18, scope: !20628)
!20637 = !DILocation(line: 1380, column: 38, scope: !20628)
!20638 = !DILocation(line: 1379, column: 7, scope: !1534)
!20639 = !DILocation(line: 1382, column: 19, scope: !20640)
!20640 = distinct !DILexicalBlock(scope: !20628, file: !1326, line: 1381, column: 3)
!20641 = !DILocation(line: 1383, column: 3, scope: !20640)
!20642 = !DILocation(line: 1384, column: 47, scope: !1534)
!20643 = !DILocation(line: 1384, column: 62, scope: !1534)
!20644 = !DILocation(line: 1384, column: 12, scope: !1534)
!20645 = !DILocation(line: 1384, column: 10, scope: !1534)
!20646 = !DILocation(line: 1385, column: 30, scope: !1534)
!20647 = !DILocation(line: 1386, column: 7, scope: !20648)
!20648 = distinct !DILexicalBlock(scope: !1534, file: !1326, line: 1386, column: 7)
!20649 = !DILocation(line: 1386, column: 14, scope: !20648)
!20650 = !DILocation(line: 1386, column: 7, scope: !1534)
!20651 = !DILocation(line: 1388, column: 5, scope: !20652)
!20652 = distinct !DILexicalBlock(scope: !20648, file: !1326, line: 1387, column: 3)
!20653 = !DILocation(line: 1389, column: 3, scope: !20652)
!20654 = !DILocation(line: 1390, column: 3, scope: !1534)
!20655 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !1542, file: !1326, line: 1395, type: !1527)
!20656 = !DILocation(line: 1395, column: 37, scope: !1542)
!20657 = !DILocalVariable(name: "use_localtime", arg: 2, scope: !1542, file: !1326, line: 1396, type: !19)
!20658 = !DILocation(line: 1396, column: 7, scope: !1542)
!20659 = !DILocalVariable(name: "p_stat", scope: !1542, file: !1326, line: 1399, type: !1457)
!20660 = !DILocation(line: 1399, column: 22, scope: !1542)
!20661 = !DILocation(line: 1399, column: 52, scope: !1542)
!20662 = !DILocation(line: 1399, column: 31, scope: !1542)
!20663 = !DILocalVariable(name: "p_tm", scope: !1542, file: !1326, line: 1400, type: !20591)
!20664 = !DILocation(line: 1400, column: 14, scope: !1542)
!20665 = !DILocalVariable(name: "retval", scope: !1542, file: !1326, line: 1401, type: !19)
!20666 = !DILocation(line: 1401, column: 7, scope: !1542)
!20667 = !DILocation(line: 1402, column: 8, scope: !20668)
!20668 = distinct !DILexicalBlock(scope: !1542, file: !1326, line: 1402, column: 7)
!20669 = !DILocation(line: 1402, column: 7, scope: !1542)
!20670 = !DILocation(line: 1404, column: 20, scope: !20671)
!20671 = distinct !DILexicalBlock(scope: !20668, file: !1326, line: 1403, column: 3)
!20672 = !DILocation(line: 1404, column: 28, scope: !20671)
!20673 = !DILocation(line: 1404, column: 12, scope: !20671)
!20674 = !DILocation(line: 1404, column: 10, scope: !20671)
!20675 = !DILocation(line: 1405, column: 3, scope: !20671)
!20676 = !DILocation(line: 1408, column: 23, scope: !20677)
!20677 = distinct !DILexicalBlock(scope: !20668, file: !1326, line: 1407, column: 3)
!20678 = !DILocation(line: 1408, column: 31, scope: !20677)
!20679 = !DILocation(line: 1408, column: 12, scope: !20677)
!20680 = !DILocation(line: 1408, column: 10, scope: !20677)
!20681 = !DILocation(line: 1410, column: 63, scope: !1542)
!20682 = !DILocation(line: 1410, column: 12, scope: !1542)
!20683 = !DILocation(line: 1410, column: 10, scope: !1542)
!20684 = !DILocation(line: 1411, column: 7, scope: !20685)
!20685 = distinct !DILexicalBlock(scope: !1542, file: !1326, line: 1411, column: 7)
!20686 = !DILocation(line: 1411, column: 14, scope: !20685)
!20687 = !DILocation(line: 1411, column: 7, scope: !1542)
!20688 = !DILocation(line: 1413, column: 5, scope: !20689)
!20689 = distinct !DILexicalBlock(scope: !20685, file: !1326, line: 1412, column: 3)
!20690 = !DILocation(line: 1414, column: 3, scope: !20689)
!20691 = !DILocation(line: 1415, column: 3, scope: !1542)
!20692 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_size", scope: !1326, file: !1326, line: 1419, type: !20693, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20693 = !DISubroutineType(types: !20694)
!20694 = !{!41, !1527}
!20695 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !20692, file: !1326, line: 1419, type: !1527)
!20696 = !DILocation(line: 1419, column: 64, scope: !20692)
!20697 = !DILocalVariable(name: "p_stat", scope: !20692, file: !1326, line: 1421, type: !1457)
!20698 = !DILocation(line: 1421, column: 22, scope: !20692)
!20699 = !DILocation(line: 1421, column: 52, scope: !20692)
!20700 = !DILocation(line: 1421, column: 31, scope: !20692)
!20701 = !DILocation(line: 1422, column: 7, scope: !20702)
!20702 = distinct !DILexicalBlock(scope: !20692, file: !1326, line: 1422, column: 7)
!20703 = !DILocation(line: 1422, column: 15, scope: !20702)
!20704 = !DILocation(line: 1422, column: 23, scope: !20702)
!20705 = !DILocation(line: 1422, column: 7, scope: !20692)
!20706 = !DILocation(line: 1424, column: 5, scope: !20707)
!20707 = distinct !DILexicalBlock(scope: !20702, file: !1326, line: 1423, column: 3)
!20708 = !DILocation(line: 1425, column: 3, scope: !20707)
!20709 = !DILocation(line: 1426, column: 10, scope: !20692)
!20710 = !DILocation(line: 1426, column: 18, scope: !20692)
!20711 = !DILocation(line: 1426, column: 3, scope: !20692)
!20712 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_uid", scope: !1326, file: !1326, line: 1430, type: !20405, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20713 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !20712, file: !1326, line: 1430, type: !1527)
!20714 = !DILocation(line: 1430, column: 63, scope: !20712)
!20715 = !DILocalVariable(name: "p_stat", scope: !20712, file: !1326, line: 1432, type: !1457)
!20716 = !DILocation(line: 1432, column: 22, scope: !20712)
!20717 = !DILocation(line: 1432, column: 52, scope: !20712)
!20718 = !DILocation(line: 1432, column: 31, scope: !20712)
!20719 = !DILocation(line: 1433, column: 10, scope: !20712)
!20720 = !DILocation(line: 1433, column: 18, scope: !20712)
!20721 = !DILocation(line: 1433, column: 3, scope: !20712)
!20722 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_gid", scope: !1326, file: !1326, line: 1437, type: !20405, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20723 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !20722, file: !1326, line: 1437, type: !1527)
!20724 = !DILocation(line: 1437, column: 63, scope: !20722)
!20725 = !DILocalVariable(name: "p_stat", scope: !20722, file: !1326, line: 1439, type: !1457)
!20726 = !DILocation(line: 1439, column: 22, scope: !20722)
!20727 = !DILocation(line: 1439, column: 52, scope: !20722)
!20728 = !DILocation(line: 1439, column: 31, scope: !20722)
!20729 = !DILocation(line: 1440, column: 10, scope: !20722)
!20730 = !DILocation(line: 1440, column: 18, scope: !20722)
!20731 = !DILocation(line: 1440, column: 3, scope: !20722)
!20732 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_get_links", scope: !1326, file: !1326, line: 1444, type: !20733, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20733 = !DISubroutineType(types: !20734)
!20734 = !{!26, !1527}
!20735 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !20732, file: !1326, line: 1444, type: !1527)
!20736 = !DILocation(line: 1444, column: 65, scope: !20732)
!20737 = !DILocalVariable(name: "p_stat", scope: !20732, file: !1326, line: 1446, type: !1457)
!20738 = !DILocation(line: 1446, column: 22, scope: !20732)
!20739 = !DILocation(line: 1446, column: 52, scope: !20732)
!20740 = !DILocation(line: 1446, column: 31, scope: !20732)
!20741 = !DILocation(line: 1447, column: 10, scope: !20732)
!20742 = !DILocation(line: 1447, column: 18, scope: !20732)
!20743 = !DILocation(line: 1447, column: 3, scope: !20732)
!20744 = distinct !DISubprogram(name: "vsf_sysutil_statbuf_is_readable_other", scope: !1326, file: !1326, line: 1451, type: !20405, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20745 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !20744, file: !1326, line: 1452, type: !1527)
!20746 = !DILocation(line: 1452, column: 37, scope: !20744)
!20747 = !DILocalVariable(name: "p_stat", scope: !20744, file: !1326, line: 1454, type: !1457)
!20748 = !DILocation(line: 1454, column: 22, scope: !20744)
!20749 = !DILocation(line: 1454, column: 52, scope: !20744)
!20750 = !DILocation(line: 1454, column: 31, scope: !20744)
!20751 = !DILocation(line: 1455, column: 7, scope: !20752)
!20752 = distinct !DILexicalBlock(scope: !20744, file: !1326, line: 1455, column: 7)
!20753 = !DILocation(line: 1455, column: 15, scope: !20752)
!20754 = !DILocation(line: 1455, column: 23, scope: !20752)
!20755 = !DILocation(line: 1455, column: 7, scope: !20744)
!20756 = !DILocation(line: 1457, column: 5, scope: !20757)
!20757 = distinct !DILexicalBlock(scope: !20752, file: !1326, line: 1456, column: 3)
!20758 = !DILocation(line: 1459, column: 3, scope: !20744)
!20759 = !DILocation(line: 1460, column: 1, scope: !20744)
!20760 = !DILocalVariable(name: "p_statbuf", arg: 1, scope: !1550, file: !1326, line: 1464, type: !1527)
!20761 = !DILocation(line: 1464, column: 37, scope: !1550)
!20762 = !DILocalVariable(name: "p_stat", scope: !1550, file: !1326, line: 1467, type: !1457)
!20763 = !DILocation(line: 1467, column: 22, scope: !1550)
!20764 = !DILocation(line: 1467, column: 52, scope: !1550)
!20765 = !DILocation(line: 1467, column: 31, scope: !1550)
!20766 = !DILocation(line: 1472, column: 53, scope: !1550)
!20767 = !DILocation(line: 1472, column: 61, scope: !1550)
!20768 = !DILocation(line: 1472, column: 3, scope: !1550)
!20769 = !DILocation(line: 1473, column: 3, scope: !1550)
!20770 = distinct !DISubprogram(name: "vsf_sysutil_fchown", scope: !1326, file: !1326, line: 1477, type: !20771, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20771 = !DISubroutineType(types: !20772)
!20772 = !{null, !1782, !1782, !1782}
!20773 = !DILocalVariable(name: "fd", arg: 1, scope: !20770, file: !1326, line: 1477, type: !1782)
!20774 = !DILocation(line: 1477, column: 30, scope: !20770)
!20775 = !DILocalVariable(name: "uid", arg: 2, scope: !20770, file: !1326, line: 1477, type: !1782)
!20776 = !DILocation(line: 1477, column: 44, scope: !20770)
!20777 = !DILocalVariable(name: "gid", arg: 3, scope: !20770, file: !1326, line: 1477, type: !1782)
!20778 = !DILocation(line: 1477, column: 59, scope: !20770)
!20779 = !DILocation(line: 1479, column: 14, scope: !20780)
!20780 = distinct !DILexicalBlock(scope: !20770, file: !1326, line: 1479, column: 7)
!20781 = !DILocation(line: 1479, column: 18, scope: !20780)
!20782 = !DILocation(line: 1479, column: 23, scope: !20780)
!20783 = !DILocation(line: 1479, column: 7, scope: !20780)
!20784 = !DILocation(line: 1479, column: 28, scope: !20780)
!20785 = !DILocation(line: 1479, column: 7, scope: !20770)
!20786 = !DILocation(line: 1481, column: 5, scope: !20787)
!20787 = distinct !DILexicalBlock(scope: !20780, file: !1326, line: 1480, column: 3)
!20788 = !DILocation(line: 1482, column: 3, scope: !20787)
!20789 = !DILocation(line: 1483, column: 1, scope: !20770)
!20790 = distinct !DISubprogram(name: "vsf_sysutil_fchmod", scope: !1326, file: !1326, line: 1486, type: !20791, scopeLine: 1487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20791 = !DISubroutineType(types: !20792)
!20792 = !{null, !1782, !26}
!20793 = !DILocalVariable(name: "fd", arg: 1, scope: !20790, file: !1326, line: 1486, type: !1782)
!20794 = !DILocation(line: 1486, column: 30, scope: !20790)
!20795 = !DILocalVariable(name: "mode", arg: 2, scope: !20790, file: !1326, line: 1486, type: !26)
!20796 = !DILocation(line: 1486, column: 47, scope: !20790)
!20797 = !DILocation(line: 1488, column: 10, scope: !20790)
!20798 = !DILocation(line: 1488, column: 15, scope: !20790)
!20799 = !DILocation(line: 1488, column: 8, scope: !20790)
!20800 = !DILocation(line: 1489, column: 14, scope: !20801)
!20801 = distinct !DILexicalBlock(scope: !20790, file: !1326, line: 1489, column: 7)
!20802 = !DILocation(line: 1489, column: 18, scope: !20801)
!20803 = !DILocation(line: 1489, column: 7, scope: !20801)
!20804 = !DILocation(line: 1489, column: 7, scope: !20790)
!20805 = !DILocation(line: 1491, column: 5, scope: !20806)
!20806 = distinct !DILexicalBlock(scope: !20801, file: !1326, line: 1490, column: 3)
!20807 = !DILocation(line: 1492, column: 3, scope: !20806)
!20808 = !DILocation(line: 1493, column: 1, scope: !20790)
!20809 = distinct !DISubprogram(name: "vsf_sysutil_chmod", scope: !1326, file: !1326, line: 1496, type: !20222, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20810 = !DILocalVariable(name: "p_filename", arg: 1, scope: !20809, file: !1326, line: 1496, type: !88)
!20811 = !DILocation(line: 1496, column: 31, scope: !20809)
!20812 = !DILocalVariable(name: "mode", arg: 2, scope: !20809, file: !1326, line: 1496, type: !26)
!20813 = !DILocation(line: 1496, column: 56, scope: !20809)
!20814 = !DILocation(line: 1499, column: 10, scope: !20809)
!20815 = !DILocation(line: 1499, column: 15, scope: !20809)
!20816 = !DILocation(line: 1499, column: 8, scope: !20809)
!20817 = !DILocation(line: 1500, column: 16, scope: !20809)
!20818 = !DILocation(line: 1500, column: 28, scope: !20809)
!20819 = !DILocation(line: 1500, column: 10, scope: !20809)
!20820 = !DILocation(line: 1500, column: 3, scope: !20809)
!20821 = distinct !DISubprogram(name: "vsf_sysutil_lock_file_write", scope: !1326, file: !1326, line: 1504, type: !7062, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20822 = !DILocalVariable(name: "fd", arg: 1, scope: !20821, file: !1326, line: 1504, type: !19)
!20823 = !DILocation(line: 1504, column: 33, scope: !20821)
!20824 = !DILocation(line: 1506, column: 24, scope: !20821)
!20825 = !DILocation(line: 1506, column: 10, scope: !20821)
!20826 = !DILocation(line: 1506, column: 3, scope: !20821)
!20827 = distinct !DISubprogram(name: "lock_internal", scope: !1326, file: !1326, line: 1516, type: !20828, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20828 = !DISubroutineType(types: !20829)
!20829 = !{!19, !19, !19}
!20830 = !DILocalVariable(name: "fd", arg: 1, scope: !20827, file: !1326, line: 1516, type: !19)
!20831 = !DILocation(line: 1516, column: 19, scope: !20827)
!20832 = !DILocalVariable(name: "lock_type", arg: 2, scope: !20827, file: !1326, line: 1516, type: !19)
!20833 = !DILocation(line: 1516, column: 27, scope: !20827)
!20834 = !DILocalVariable(name: "the_lock", scope: !20827, file: !1326, line: 1518, type: !20835)
!20835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flock", file: !20836, line: 35, size: 256, elements: !20837)
!20836 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fcntl.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!20837 = !{!20838, !20839, !20840, !20841, !20842}
!20838 = !DIDerivedType(tag: DW_TAG_member, name: "l_type", scope: !20835, file: !20836, line: 37, baseType: !1748, size: 16)
!20839 = !DIDerivedType(tag: DW_TAG_member, name: "l_whence", scope: !20835, file: !20836, line: 38, baseType: !1748, size: 16, offset: 16)
!20840 = !DIDerivedType(tag: DW_TAG_member, name: "l_start", scope: !20835, file: !20836, line: 43, baseType: !19993, size: 64, offset: 64)
!20841 = !DIDerivedType(tag: DW_TAG_member, name: "l_len", scope: !20835, file: !20836, line: 44, baseType: !19993, size: 64, offset: 128)
!20842 = !DIDerivedType(tag: DW_TAG_member, name: "l_pid", scope: !20835, file: !20836, line: 46, baseType: !1750, size: 32, offset: 192)
!20843 = !DILocation(line: 1518, column: 16, scope: !20827)
!20844 = !DILocalVariable(name: "retval", scope: !20827, file: !1326, line: 1519, type: !19)
!20845 = !DILocation(line: 1519, column: 7, scope: !20827)
!20846 = !DILocalVariable(name: "saved_errno", scope: !20827, file: !1326, line: 1520, type: !19)
!20847 = !DILocation(line: 1520, column: 7, scope: !20827)
!20848 = !DILocation(line: 1521, column: 22, scope: !20827)
!20849 = !DILocation(line: 1521, column: 3, scope: !20827)
!20850 = !DILocation(line: 1522, column: 21, scope: !20827)
!20851 = !DILocation(line: 1522, column: 12, scope: !20827)
!20852 = !DILocation(line: 1522, column: 19, scope: !20827)
!20853 = !DILocation(line: 1523, column: 12, scope: !20827)
!20854 = !DILocation(line: 1523, column: 21, scope: !20827)
!20855 = !DILocation(line: 1524, column: 12, scope: !20827)
!20856 = !DILocation(line: 1524, column: 20, scope: !20827)
!20857 = !DILocation(line: 1525, column: 12, scope: !20827)
!20858 = !DILocation(line: 1525, column: 18, scope: !20827)
!20859 = !DILocation(line: 1526, column: 3, scope: !20827)
!20860 = distinct !{!20860, !20859, !20861}
!20861 = !DILocation(line: 1532, column: 44, scope: !20827)
!20862 = !DILocation(line: 1528, column: 20, scope: !20863)
!20863 = distinct !DILexicalBlock(scope: !20827, file: !1326, line: 1527, column: 3)
!20864 = !DILocation(line: 1528, column: 14, scope: !20863)
!20865 = !DILocation(line: 1528, column: 12, scope: !20863)
!20866 = !DILocation(line: 1529, column: 19, scope: !20863)
!20867 = !DILocation(line: 1529, column: 17, scope: !20863)
!20868 = !DILocation(line: 1530, column: 5, scope: !20863)
!20869 = !DILocation(line: 1531, column: 3, scope: !20863)
!20870 = !DILocation(line: 1532, column: 10, scope: !20827)
!20871 = !DILocation(line: 1532, column: 17, scope: !20827)
!20872 = !DILocation(line: 1532, column: 21, scope: !20827)
!20873 = !DILocation(line: 1532, column: 24, scope: !20827)
!20874 = !DILocation(line: 1532, column: 36, scope: !20827)
!20875 = !DILocation(line: 1533, column: 10, scope: !20827)
!20876 = !DILocation(line: 1533, column: 3, scope: !20827)
!20877 = distinct !DISubprogram(name: "vsf_sysutil_lock_file_read", scope: !1326, file: !1326, line: 1510, type: !7062, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20878 = !DILocalVariable(name: "fd", arg: 1, scope: !20877, file: !1326, line: 1510, type: !19)
!20879 = !DILocation(line: 1510, column: 32, scope: !20877)
!20880 = !DILocation(line: 1512, column: 24, scope: !20877)
!20881 = !DILocation(line: 1512, column: 10, scope: !20877)
!20882 = !DILocation(line: 1512, column: 3, scope: !20877)
!20883 = distinct !DISubprogram(name: "vsf_sysutil_unlock_file", scope: !1326, file: !1326, line: 1537, type: !1406, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20884 = !DILocalVariable(name: "fd", arg: 1, scope: !20883, file: !1326, line: 1537, type: !19)
!20885 = !DILocation(line: 1537, column: 29, scope: !20883)
!20886 = !DILocalVariable(name: "retval", scope: !20883, file: !1326, line: 1539, type: !19)
!20887 = !DILocation(line: 1539, column: 7, scope: !20883)
!20888 = !DILocalVariable(name: "the_lock", scope: !20883, file: !1326, line: 1540, type: !20835)
!20889 = !DILocation(line: 1540, column: 16, scope: !20883)
!20890 = !DILocation(line: 1541, column: 22, scope: !20883)
!20891 = !DILocation(line: 1541, column: 3, scope: !20883)
!20892 = !DILocation(line: 1542, column: 12, scope: !20883)
!20893 = !DILocation(line: 1542, column: 19, scope: !20883)
!20894 = !DILocation(line: 1543, column: 12, scope: !20883)
!20895 = !DILocation(line: 1543, column: 21, scope: !20883)
!20896 = !DILocation(line: 1544, column: 12, scope: !20883)
!20897 = !DILocation(line: 1544, column: 20, scope: !20883)
!20898 = !DILocation(line: 1545, column: 12, scope: !20883)
!20899 = !DILocation(line: 1545, column: 18, scope: !20883)
!20900 = !DILocation(line: 1546, column: 18, scope: !20883)
!20901 = !DILocation(line: 1546, column: 12, scope: !20883)
!20902 = !DILocation(line: 1546, column: 10, scope: !20883)
!20903 = !DILocation(line: 1547, column: 7, scope: !20904)
!20904 = distinct !DILexicalBlock(scope: !20883, file: !1326, line: 1547, column: 7)
!20905 = !DILocation(line: 1547, column: 14, scope: !20904)
!20906 = !DILocation(line: 1547, column: 7, scope: !20883)
!20907 = !DILocation(line: 1549, column: 5, scope: !20908)
!20908 = distinct !DILexicalBlock(scope: !20904, file: !1326, line: 1548, column: 3)
!20909 = !DILocation(line: 1550, column: 3, scope: !20908)
!20910 = !DILocation(line: 1551, column: 1, scope: !20883)
!20911 = distinct !DISubprogram(name: "vsf_sysutil_readlink", scope: !1326, file: !1326, line: 1554, type: !20912, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20912 = !DISubroutineType(types: !20913)
!20913 = !{!19, !88, !16, !26}
!20914 = !DILocalVariable(name: "p_filename", arg: 1, scope: !20911, file: !1326, line: 1554, type: !88)
!20915 = !DILocation(line: 1554, column: 34, scope: !20911)
!20916 = !DILocalVariable(name: "p_dest", arg: 2, scope: !20911, file: !1326, line: 1554, type: !16)
!20917 = !DILocation(line: 1554, column: 52, scope: !20911)
!20918 = !DILocalVariable(name: "bufsiz", arg: 3, scope: !20911, file: !1326, line: 1554, type: !26)
!20919 = !DILocation(line: 1554, column: 73, scope: !20911)
!20920 = !DILocalVariable(name: "retval", scope: !20911, file: !1326, line: 1556, type: !19)
!20921 = !DILocation(line: 1556, column: 7, scope: !20911)
!20922 = !DILocation(line: 1557, column: 7, scope: !20923)
!20923 = distinct !DILexicalBlock(scope: !20911, file: !1326, line: 1557, column: 7)
!20924 = !DILocation(line: 1557, column: 14, scope: !20923)
!20925 = !DILocation(line: 1557, column: 7, scope: !20911)
!20926 = !DILocation(line: 1558, column: 5, scope: !20927)
!20927 = distinct !DILexicalBlock(scope: !20923, file: !1326, line: 1557, column: 20)
!20928 = !DILocation(line: 1560, column: 21, scope: !20911)
!20929 = !DILocation(line: 1560, column: 33, scope: !20911)
!20930 = !DILocation(line: 1560, column: 41, scope: !20911)
!20931 = !DILocation(line: 1560, column: 48, scope: !20911)
!20932 = !DILocation(line: 1560, column: 12, scope: !20911)
!20933 = !DILocation(line: 1560, column: 10, scope: !20911)
!20934 = !DILocation(line: 1561, column: 7, scope: !20935)
!20935 = distinct !DILexicalBlock(scope: !20911, file: !1326, line: 1561, column: 7)
!20936 = !DILocation(line: 1561, column: 14, scope: !20935)
!20937 = !DILocation(line: 1561, column: 7, scope: !20911)
!20938 = !DILocation(line: 1563, column: 12, scope: !20939)
!20939 = distinct !DILexicalBlock(scope: !20935, file: !1326, line: 1562, column: 3)
!20940 = !DILocation(line: 1563, column: 5, scope: !20939)
!20941 = !DILocation(line: 1566, column: 3, scope: !20911)
!20942 = !DILocation(line: 1566, column: 10, scope: !20911)
!20943 = !DILocation(line: 1566, column: 18, scope: !20911)
!20944 = !DILocation(line: 1567, column: 10, scope: !20911)
!20945 = !DILocation(line: 1567, column: 3, scope: !20911)
!20946 = !DILocation(line: 1568, column: 1, scope: !20911)
!20947 = distinct !DISubprogram(name: "vsf_sysutil_get_error", scope: !1326, file: !1326, line: 1581, type: !20948, scopeLine: 1582, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20948 = !DISubroutineType(types: !20949)
!20949 = !{!1034}
!20950 = !DILocalVariable(name: "retval", scope: !20947, file: !1326, line: 1583, type: !1034)
!20951 = !DILocation(line: 1583, column: 25, scope: !20947)
!20952 = !DILocation(line: 1584, column: 11, scope: !20947)
!20953 = !DILocation(line: 1584, column: 3, scope: !20947)
!20954 = !DILocation(line: 1587, column: 14, scope: !20955)
!20955 = distinct !DILexicalBlock(scope: !20947, file: !1326, line: 1585, column: 3)
!20956 = !DILocation(line: 1588, column: 7, scope: !20955)
!20957 = !DILocation(line: 1590, column: 14, scope: !20955)
!20958 = !DILocation(line: 1591, column: 7, scope: !20955)
!20959 = !DILocation(line: 1593, column: 14, scope: !20955)
!20960 = !DILocation(line: 1594, column: 7, scope: !20955)
!20961 = !DILocation(line: 1596, column: 14, scope: !20955)
!20962 = !DILocation(line: 1597, column: 7, scope: !20955)
!20963 = !DILocation(line: 1599, column: 14, scope: !20955)
!20964 = !DILocation(line: 1600, column: 7, scope: !20955)
!20965 = !DILocation(line: 1602, column: 14, scope: !20955)
!20966 = !DILocation(line: 1603, column: 7, scope: !20955)
!20967 = !DILocation(line: 1605, column: 14, scope: !20955)
!20968 = !DILocation(line: 1606, column: 7, scope: !20955)
!20969 = !DILocation(line: 1608, column: 7, scope: !20955)
!20970 = !DILocation(line: 1610, column: 10, scope: !20947)
!20971 = !DILocation(line: 1610, column: 3, scope: !20947)
!20972 = distinct !DISubprogram(name: "vsf_sysutil_get_ipv4_sock", scope: !1326, file: !1326, line: 1614, type: !1713, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20973 = !DILocalVariable(name: "retval", scope: !20972, file: !1326, line: 1616, type: !19)
!20974 = !DILocation(line: 1616, column: 7, scope: !20972)
!20975 = !DILocation(line: 1616, column: 16, scope: !20972)
!20976 = !DILocation(line: 1617, column: 7, scope: !20977)
!20977 = distinct !DILexicalBlock(scope: !20972, file: !1326, line: 1617, column: 7)
!20978 = !DILocation(line: 1617, column: 14, scope: !20977)
!20979 = !DILocation(line: 1617, column: 7, scope: !20972)
!20980 = !DILocation(line: 1619, column: 5, scope: !20981)
!20981 = distinct !DILexicalBlock(scope: !20977, file: !1326, line: 1618, column: 3)
!20982 = !DILocation(line: 1620, column: 3, scope: !20981)
!20983 = !DILocation(line: 1621, column: 10, scope: !20972)
!20984 = !DILocation(line: 1621, column: 3, scope: !20972)
!20985 = distinct !DISubprogram(name: "vsf_sysutil_get_ipv6_sock", scope: !1326, file: !1326, line: 1625, type: !1713, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20986 = !DILocalVariable(name: "retval", scope: !20985, file: !1326, line: 1627, type: !19)
!20987 = !DILocation(line: 1627, column: 7, scope: !20985)
!20988 = !DILocation(line: 1627, column: 16, scope: !20985)
!20989 = !DILocation(line: 1628, column: 7, scope: !20990)
!20990 = distinct !DILexicalBlock(scope: !20985, file: !1326, line: 1628, column: 7)
!20991 = !DILocation(line: 1628, column: 14, scope: !20990)
!20992 = !DILocation(line: 1628, column: 7, scope: !20985)
!20993 = !DILocation(line: 1630, column: 5, scope: !20994)
!20994 = distinct !DILexicalBlock(scope: !20990, file: !1326, line: 1629, column: 3)
!20995 = !DILocation(line: 1631, column: 3, scope: !20994)
!20996 = !DILocation(line: 1632, column: 10, scope: !20985)
!20997 = !DILocation(line: 1632, column: 3, scope: !20985)
!20998 = distinct !DISubprogram(name: "vsf_sysutil_unix_stream_socketpair", scope: !1326, file: !1326, line: 1636, type: !20999, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!20999 = !DISubroutineType(types: !21000)
!21000 = !{!21001}
!21001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_sysutil_socketpair_retval", file: !13, line: 211, size: 64, elements: !21002)
!21002 = !{!21003, !21004}
!21003 = !DIDerivedType(tag: DW_TAG_member, name: "socket_one", scope: !21001, file: !13, line: 213, baseType: !19, size: 32)
!21004 = !DIDerivedType(tag: DW_TAG_member, name: "socket_two", scope: !21001, file: !13, line: 214, baseType: !19, size: 32, offset: 32)
!21005 = !DILocalVariable(name: "retval", scope: !20998, file: !1326, line: 1638, type: !21001)
!21006 = !DILocation(line: 1638, column: 40, scope: !20998)
!21007 = !DILocalVariable(name: "the_sockets", scope: !20998, file: !1326, line: 1639, type: !21008)
!21008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 64, elements: !11144)
!21009 = !DILocation(line: 1639, column: 7, scope: !20998)
!21010 = !DILocalVariable(name: "sys_retval", scope: !20998, file: !1326, line: 1640, type: !19)
!21011 = !DILocation(line: 1640, column: 7, scope: !20998)
!21012 = !DILocation(line: 1640, column: 56, scope: !20998)
!21013 = !DILocation(line: 1640, column: 20, scope: !20998)
!21014 = !DILocation(line: 1641, column: 7, scope: !21015)
!21015 = distinct !DILexicalBlock(scope: !20998, file: !1326, line: 1641, column: 7)
!21016 = !DILocation(line: 1641, column: 18, scope: !21015)
!21017 = !DILocation(line: 1641, column: 7, scope: !20998)
!21018 = !DILocation(line: 1643, column: 5, scope: !21019)
!21019 = distinct !DILexicalBlock(scope: !21015, file: !1326, line: 1642, column: 3)
!21020 = !DILocation(line: 1644, column: 3, scope: !21019)
!21021 = !DILocation(line: 1645, column: 23, scope: !20998)
!21022 = !DILocation(line: 1645, column: 10, scope: !20998)
!21023 = !DILocation(line: 1645, column: 21, scope: !20998)
!21024 = !DILocation(line: 1646, column: 23, scope: !20998)
!21025 = !DILocation(line: 1646, column: 10, scope: !20998)
!21026 = !DILocation(line: 1646, column: 21, scope: !20998)
!21027 = !DILocation(line: 1647, column: 10, scope: !20998)
!21028 = !DILocation(line: 1647, column: 3, scope: !20998)
!21029 = distinct !DISubprogram(name: "vsf_sysutil_bind", scope: !1326, file: !1326, line: 1651, type: !21030, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21030 = !DISubroutineType(types: !21031)
!21031 = !{!19, !19, !1597}
!21032 = !DILocalVariable(name: "fd", arg: 1, scope: !21029, file: !1326, line: 1651, type: !19)
!21033 = !DILocation(line: 1651, column: 22, scope: !21029)
!21034 = !DILocalVariable(name: "p_sockptr", arg: 2, scope: !21029, file: !1326, line: 1651, type: !1597)
!21035 = !DILocation(line: 1651, column: 61, scope: !21029)
!21036 = !DILocalVariable(name: "p_sockaddr", scope: !21029, file: !1326, line: 1653, type: !21037)
!21037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21038, size: 64)
!21038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1563)
!21039 = !DILocation(line: 1653, column: 26, scope: !21029)
!21040 = !DILocation(line: 1653, column: 40, scope: !21029)
!21041 = !DILocation(line: 1653, column: 51, scope: !21029)
!21042 = !DILocation(line: 1653, column: 53, scope: !21029)
!21043 = !DILocalVariable(name: "len", scope: !21029, file: !1326, line: 1654, type: !19)
!21044 = !DILocation(line: 1654, column: 7, scope: !21029)
!21045 = !DILocation(line: 1655, column: 7, scope: !21046)
!21046 = distinct !DILexicalBlock(scope: !21029, file: !1326, line: 1655, column: 7)
!21047 = !DILocation(line: 1655, column: 19, scope: !21046)
!21048 = !DILocation(line: 1655, column: 29, scope: !21046)
!21049 = !DILocation(line: 1655, column: 7, scope: !21029)
!21050 = !DILocation(line: 1657, column: 9, scope: !21051)
!21051 = distinct !DILexicalBlock(scope: !21046, file: !1326, line: 1656, column: 3)
!21052 = !DILocation(line: 1658, column: 3, scope: !21051)
!21053 = !DILocation(line: 1659, column: 12, scope: !21054)
!21054 = distinct !DILexicalBlock(scope: !21046, file: !1326, line: 1659, column: 12)
!21055 = !DILocation(line: 1659, column: 24, scope: !21054)
!21056 = !DILocation(line: 1659, column: 34, scope: !21054)
!21057 = !DILocation(line: 1659, column: 12, scope: !21046)
!21058 = !DILocation(line: 1661, column: 9, scope: !21059)
!21059 = distinct !DILexicalBlock(scope: !21054, file: !1326, line: 1660, column: 3)
!21060 = !DILocation(line: 1662, column: 3, scope: !21059)
!21061 = !DILocation(line: 1665, column: 5, scope: !21062)
!21062 = distinct !DILexicalBlock(scope: !21054, file: !1326, line: 1664, column: 3)
!21063 = !DILocation(line: 1667, column: 15, scope: !21029)
!21064 = !DILocation(line: 1667, column: 19, scope: !21029)
!21065 = !DILocation(line: 1667, column: 31, scope: !21029)
!21066 = !DILocation(line: 1667, column: 10, scope: !21029)
!21067 = !DILocation(line: 1667, column: 3, scope: !21029)
!21068 = distinct !DISubprogram(name: "vsf_sysutil_listen", scope: !1326, file: !1326, line: 1671, type: !21069, scopeLine: 1672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21069 = !DISubroutineType(types: !21070)
!21070 = !{!19, !19, !850}
!21071 = !DILocalVariable(name: "fd", arg: 1, scope: !21068, file: !1326, line: 1671, type: !19)
!21072 = !DILocation(line: 1671, column: 24, scope: !21068)
!21073 = !DILocalVariable(name: "backlog", arg: 2, scope: !21068, file: !1326, line: 1671, type: !850)
!21074 = !DILocation(line: 1671, column: 47, scope: !21068)
!21075 = !DILocalVariable(name: "retval", scope: !21068, file: !1326, line: 1673, type: !19)
!21076 = !DILocation(line: 1673, column: 7, scope: !21068)
!21077 = !DILocation(line: 1673, column: 23, scope: !21068)
!21078 = !DILocation(line: 1673, column: 27, scope: !21068)
!21079 = !DILocation(line: 1673, column: 16, scope: !21068)
!21080 = !DILocation(line: 1674, column: 35, scope: !21081)
!21081 = distinct !DILexicalBlock(scope: !21068, file: !1326, line: 1674, column: 7)
!21082 = !DILocation(line: 1674, column: 7, scope: !21081)
!21083 = !DILocation(line: 1674, column: 43, scope: !21081)
!21084 = !DILocation(line: 1675, column: 7, scope: !21081)
!21085 = !DILocation(line: 1675, column: 31, scope: !21081)
!21086 = !DILocation(line: 1674, column: 7, scope: !21068)
!21087 = !DILocation(line: 1677, column: 5, scope: !21088)
!21088 = distinct !DILexicalBlock(scope: !21081, file: !1326, line: 1676, column: 3)
!21089 = !DILocation(line: 1678, column: 3, scope: !21088)
!21090 = !DILocation(line: 1679, column: 10, scope: !21068)
!21091 = !DILocation(line: 1679, column: 3, scope: !21068)
!21092 = distinct !DISubprogram(name: "vsf_sysutil_accept_timeout", scope: !1326, file: !1326, line: 1686, type: !21093, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21093 = !DISubroutineType(types: !21094)
!21094 = !{!19, !19, !1556, !26}
!21095 = !DILocalVariable(name: "fd", arg: 1, scope: !21092, file: !1326, line: 1686, type: !19)
!21096 = !DILocation(line: 1686, column: 32, scope: !21092)
!21097 = !DILocalVariable(name: "p_sockaddr", arg: 2, scope: !21092, file: !1326, line: 1686, type: !1556)
!21098 = !DILocation(line: 1686, column: 65, scope: !21092)
!21099 = !DILocalVariable(name: "wait_seconds", arg: 3, scope: !21092, file: !1326, line: 1687, type: !26)
!21100 = !DILocation(line: 1687, column: 41, scope: !21092)
!21101 = !DILocalVariable(name: "remote_addr", scope: !21092, file: !1326, line: 1689, type: !1557)
!21102 = !DILocation(line: 1689, column: 31, scope: !21092)
!21103 = !DILocalVariable(name: "retval", scope: !21092, file: !1326, line: 1690, type: !19)
!21104 = !DILocation(line: 1690, column: 7, scope: !21092)
!21105 = !DILocalVariable(name: "saved_errno", scope: !21092, file: !1326, line: 1691, type: !19)
!21106 = !DILocation(line: 1691, column: 7, scope: !21092)
!21107 = !DILocalVariable(name: "accept_fdset", scope: !21092, file: !1326, line: 1692, type: !21108)
!21108 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !1460, line: 70, baseType: !21109)
!21109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 59, size: 1024, elements: !21110)
!21110 = !{!21111}
!21111 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !21109, file: !1460, line: 67, baseType: !21112, size: 1024)
!21112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1459, size: 1024, elements: !1315)
!21113 = !DILocation(line: 1692, column: 10, scope: !21092)
!21114 = !DILocalVariable(name: "timeout", scope: !21092, file: !1326, line: 1693, type: !1633)
!21115 = !DILocation(line: 1693, column: 18, scope: !21092)
!21116 = !DILocalVariable(name: "socklen", scope: !21092, file: !1326, line: 1694, type: !21117)
!21117 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !1269, line: 33, baseType: !21118)
!21118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !1287, line: 197, baseType: !26)
!21119 = !DILocation(line: 1694, column: 13, scope: !21092)
!21120 = !DILocation(line: 1695, column: 7, scope: !21121)
!21121 = distinct !DILexicalBlock(scope: !21092, file: !1326, line: 1695, column: 7)
!21122 = !DILocation(line: 1695, column: 7, scope: !21092)
!21123 = !DILocation(line: 1697, column: 24, scope: !21124)
!21124 = distinct !DILexicalBlock(scope: !21121, file: !1326, line: 1696, column: 3)
!21125 = !DILocation(line: 1697, column: 5, scope: !21124)
!21126 = !DILocation(line: 1698, column: 3, scope: !21124)
!21127 = !DILocation(line: 1699, column: 7, scope: !21128)
!21128 = distinct !DILexicalBlock(scope: !21092, file: !1326, line: 1699, column: 7)
!21129 = !DILocation(line: 1699, column: 20, scope: !21128)
!21130 = !DILocation(line: 1699, column: 7, scope: !21092)
!21131 = !DILocation(line: 1701, column: 5, scope: !21132)
!21132 = distinct !DILexicalBlock(scope: !21128, file: !1326, line: 1700, column: 3)
!21133 = distinct !{!21133, !21131, !21131}
!21134 = !DILocalVariable(name: "__d0", scope: !21135, file: !1326, line: 1701, type: !19)
!21135 = distinct !DILexicalBlock(scope: !21132, file: !1326, line: 1701, column: 5)
!21136 = !DILocation(line: 1701, column: 5, scope: !21135)
!21137 = !DILocalVariable(name: "__d1", scope: !21135, file: !1326, line: 1701, type: !19)
!21138 = !{i32 -2146471384}
!21139 = !DILocation(line: 1702, column: 5, scope: !21132)
!21140 = !DILocation(line: 1703, column: 22, scope: !21132)
!21141 = !DILocation(line: 1703, column: 13, scope: !21132)
!21142 = !DILocation(line: 1703, column: 20, scope: !21132)
!21143 = !DILocation(line: 1704, column: 13, scope: !21132)
!21144 = !DILocation(line: 1704, column: 21, scope: !21132)
!21145 = !DILocation(line: 1705, column: 5, scope: !21132)
!21146 = distinct !{!21146, !21145, !21147}
!21147 = !DILocation(line: 1711, column: 46, scope: !21132)
!21148 = !DILocation(line: 1707, column: 23, scope: !21149)
!21149 = distinct !DILexicalBlock(scope: !21132, file: !1326, line: 1706, column: 5)
!21150 = !DILocation(line: 1707, column: 26, scope: !21149)
!21151 = !DILocation(line: 1707, column: 16, scope: !21149)
!21152 = !DILocation(line: 1707, column: 14, scope: !21149)
!21153 = !DILocation(line: 1708, column: 21, scope: !21149)
!21154 = !DILocation(line: 1708, column: 19, scope: !21149)
!21155 = !DILocation(line: 1709, column: 7, scope: !21149)
!21156 = !DILocation(line: 1710, column: 5, scope: !21149)
!21157 = !DILocation(line: 1711, column: 12, scope: !21132)
!21158 = !DILocation(line: 1711, column: 19, scope: !21132)
!21159 = !DILocation(line: 1711, column: 23, scope: !21132)
!21160 = !DILocation(line: 1711, column: 26, scope: !21132)
!21161 = !DILocation(line: 1711, column: 38, scope: !21132)
!21162 = !DILocation(line: 1712, column: 9, scope: !21163)
!21163 = distinct !DILexicalBlock(scope: !21132, file: !1326, line: 1712, column: 9)
!21164 = !DILocation(line: 1712, column: 16, scope: !21163)
!21165 = !DILocation(line: 1712, column: 9, scope: !21132)
!21166 = !DILocation(line: 1714, column: 11, scope: !21167)
!21167 = distinct !DILexicalBlock(scope: !21168, file: !1326, line: 1714, column: 11)
!21168 = distinct !DILexicalBlock(scope: !21163, file: !1326, line: 1713, column: 5)
!21169 = !DILocation(line: 1714, column: 18, scope: !21167)
!21170 = !DILocation(line: 1714, column: 11, scope: !21168)
!21171 = !DILocation(line: 1716, column: 9, scope: !21172)
!21172 = distinct !DILexicalBlock(scope: !21167, file: !1326, line: 1715, column: 7)
!21173 = !DILocation(line: 1716, column: 15, scope: !21172)
!21174 = !DILocation(line: 1717, column: 7, scope: !21172)
!21175 = !DILocation(line: 1718, column: 7, scope: !21168)
!21176 = !DILocation(line: 1720, column: 3, scope: !21132)
!21177 = !DILocation(line: 1721, column: 19, scope: !21092)
!21178 = !DILocation(line: 1721, column: 36, scope: !21092)
!21179 = !DILocation(line: 1721, column: 38, scope: !21092)
!21180 = !DILocation(line: 1721, column: 12, scope: !21092)
!21181 = !DILocation(line: 1721, column: 10, scope: !21092)
!21182 = !DILocation(line: 1722, column: 3, scope: !21092)
!21183 = !DILocation(line: 1723, column: 7, scope: !21184)
!21184 = distinct !DILexicalBlock(scope: !21092, file: !1326, line: 1723, column: 7)
!21185 = !DILocation(line: 1723, column: 14, scope: !21184)
!21186 = !DILocation(line: 1723, column: 7, scope: !21092)
!21187 = !DILocation(line: 1725, column: 12, scope: !21188)
!21188 = distinct !DILexicalBlock(scope: !21184, file: !1326, line: 1724, column: 3)
!21189 = !DILocation(line: 1725, column: 5, scope: !21188)
!21190 = !DILocation(line: 1728, column: 7, scope: !21191)
!21191 = distinct !DILexicalBlock(scope: !21092, file: !1326, line: 1728, column: 7)
!21192 = !DILocation(line: 1728, column: 15, scope: !21191)
!21193 = !DILocation(line: 1728, column: 7, scope: !21092)
!21194 = !DILocation(line: 1730, column: 5, scope: !21195)
!21195 = distinct !DILexicalBlock(scope: !21191, file: !1326, line: 1729, column: 3)
!21196 = !DILocation(line: 1732, column: 19, scope: !21197)
!21197 = distinct !DILexicalBlock(scope: !21092, file: !1326, line: 1732, column: 7)
!21198 = !DILocation(line: 1732, column: 21, scope: !21197)
!21199 = !DILocation(line: 1732, column: 32, scope: !21197)
!21200 = !DILocation(line: 1732, column: 7, scope: !21197)
!21201 = !DILocation(line: 1732, column: 42, scope: !21197)
!21202 = !DILocation(line: 1732, column: 53, scope: !21197)
!21203 = !DILocation(line: 1733, column: 19, scope: !21197)
!21204 = !DILocation(line: 1733, column: 21, scope: !21197)
!21205 = !DILocation(line: 1733, column: 32, scope: !21197)
!21206 = !DILocation(line: 1733, column: 7, scope: !21197)
!21207 = !DILocation(line: 1733, column: 42, scope: !21197)
!21208 = !DILocation(line: 1732, column: 7, scope: !21092)
!21209 = !DILocation(line: 1735, column: 5, scope: !21210)
!21210 = distinct !DILexicalBlock(scope: !21197, file: !1326, line: 1734, column: 3)
!21211 = !DILocation(line: 1736, column: 3, scope: !21210)
!21212 = !DILocation(line: 1737, column: 7, scope: !21213)
!21213 = distinct !DILexicalBlock(scope: !21092, file: !1326, line: 1737, column: 7)
!21214 = !DILocation(line: 1737, column: 7, scope: !21092)
!21215 = !DILocation(line: 1739, column: 21, scope: !21216)
!21216 = distinct !DILexicalBlock(scope: !21217, file: !1326, line: 1739, column: 9)
!21217 = distinct !DILexicalBlock(scope: !21213, file: !1326, line: 1738, column: 3)
!21218 = !DILocation(line: 1739, column: 23, scope: !21216)
!21219 = !DILocation(line: 1739, column: 34, scope: !21216)
!21220 = !DILocation(line: 1739, column: 9, scope: !21216)
!21221 = !DILocation(line: 1739, column: 44, scope: !21216)
!21222 = !DILocation(line: 1739, column: 9, scope: !21217)
!21223 = !DILocation(line: 1741, column: 39, scope: !21224)
!21224 = distinct !DILexicalBlock(scope: !21216, file: !1326, line: 1740, column: 5)
!21225 = !DILocation(line: 1741, column: 41, scope: !21224)
!21226 = !DILocation(line: 1741, column: 55, scope: !21224)
!21227 = !DILocation(line: 1741, column: 26, scope: !21224)
!21228 = !DILocation(line: 1741, column: 7, scope: !21224)
!21229 = !DILocation(line: 1743, column: 26, scope: !21224)
!21230 = !DILocation(line: 1743, column: 51, scope: !21224)
!21231 = !DILocation(line: 1743, column: 53, scope: !21224)
!21232 = !DILocation(line: 1743, column: 38, scope: !21224)
!21233 = !DILocation(line: 1743, column: 7, scope: !21224)
!21234 = !DILocation(line: 1745, column: 5, scope: !21224)
!21235 = !DILocation(line: 1748, column: 26, scope: !21236)
!21236 = distinct !DILexicalBlock(scope: !21216, file: !1326, line: 1747, column: 5)
!21237 = !DILocation(line: 1748, column: 51, scope: !21236)
!21238 = !DILocation(line: 1748, column: 53, scope: !21236)
!21239 = !DILocation(line: 1748, column: 38, scope: !21236)
!21240 = !DILocation(line: 1748, column: 7, scope: !21236)
!21241 = !DILocation(line: 1751, column: 3, scope: !21217)
!21242 = !DILocation(line: 1752, column: 10, scope: !21092)
!21243 = !DILocation(line: 1752, column: 3, scope: !21092)
!21244 = !DILocation(line: 1753, column: 1, scope: !21092)
!21245 = distinct !DISubprogram(name: "vsf_sysutil_connect_timeout", scope: !1326, file: !1326, line: 1756, type: !21246, scopeLine: 1758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21246 = !DISubroutineType(types: !21247)
!21247 = !{!19, !19, !1597, !26}
!21248 = !DILocalVariable(name: "fd", arg: 1, scope: !21245, file: !1326, line: 1756, type: !19)
!21249 = !DILocation(line: 1756, column: 33, scope: !21245)
!21250 = !DILocalVariable(name: "p_addr", arg: 2, scope: !21245, file: !1326, line: 1756, type: !1597)
!21251 = !DILocation(line: 1756, column: 72, scope: !21245)
!21252 = !DILocalVariable(name: "wait_seconds", arg: 3, scope: !21245, file: !1326, line: 1757, type: !26)
!21253 = !DILocation(line: 1757, column: 42, scope: !21245)
!21254 = !DILocalVariable(name: "p_sockaddr", scope: !21245, file: !1326, line: 1759, type: !21037)
!21255 = !DILocation(line: 1759, column: 26, scope: !21245)
!21256 = !DILocation(line: 1759, column: 40, scope: !21245)
!21257 = !DILocation(line: 1759, column: 48, scope: !21245)
!21258 = !DILocation(line: 1759, column: 50, scope: !21245)
!21259 = !DILocalVariable(name: "addrlen", scope: !21245, file: !1326, line: 1760, type: !26)
!21260 = !DILocation(line: 1760, column: 16, scope: !21245)
!21261 = !DILocalVariable(name: "retval", scope: !21245, file: !1326, line: 1761, type: !19)
!21262 = !DILocation(line: 1761, column: 7, scope: !21245)
!21263 = !DILocalVariable(name: "saved_errno", scope: !21245, file: !1326, line: 1762, type: !19)
!21264 = !DILocation(line: 1762, column: 7, scope: !21245)
!21265 = !DILocation(line: 1763, column: 7, scope: !21266)
!21266 = distinct !DILexicalBlock(scope: !21245, file: !1326, line: 1763, column: 7)
!21267 = !DILocation(line: 1763, column: 19, scope: !21266)
!21268 = !DILocation(line: 1763, column: 29, scope: !21266)
!21269 = !DILocation(line: 1763, column: 7, scope: !21245)
!21270 = !DILocation(line: 1765, column: 13, scope: !21271)
!21271 = distinct !DILexicalBlock(scope: !21266, file: !1326, line: 1764, column: 3)
!21272 = !DILocation(line: 1766, column: 3, scope: !21271)
!21273 = !DILocation(line: 1767, column: 12, scope: !21274)
!21274 = distinct !DILexicalBlock(scope: !21266, file: !1326, line: 1767, column: 12)
!21275 = !DILocation(line: 1767, column: 24, scope: !21274)
!21276 = !DILocation(line: 1767, column: 34, scope: !21274)
!21277 = !DILocation(line: 1767, column: 12, scope: !21266)
!21278 = !DILocation(line: 1769, column: 13, scope: !21279)
!21279 = distinct !DILexicalBlock(scope: !21274, file: !1326, line: 1768, column: 3)
!21280 = !DILocation(line: 1770, column: 3, scope: !21279)
!21281 = !DILocation(line: 1773, column: 5, scope: !21282)
!21282 = distinct !DILexicalBlock(scope: !21274, file: !1326, line: 1772, column: 3)
!21283 = !DILocation(line: 1775, column: 7, scope: !21284)
!21284 = distinct !DILexicalBlock(scope: !21245, file: !1326, line: 1775, column: 7)
!21285 = !DILocation(line: 1775, column: 20, scope: !21284)
!21286 = !DILocation(line: 1775, column: 7, scope: !21245)
!21287 = !DILocation(line: 1777, column: 34, scope: !21288)
!21288 = distinct !DILexicalBlock(scope: !21284, file: !1326, line: 1776, column: 3)
!21289 = !DILocation(line: 1777, column: 5, scope: !21288)
!21290 = !DILocation(line: 1778, column: 3, scope: !21288)
!21291 = !DILocation(line: 1779, column: 20, scope: !21245)
!21292 = !DILocation(line: 1779, column: 24, scope: !21245)
!21293 = !DILocation(line: 1779, column: 36, scope: !21245)
!21294 = !DILocation(line: 1779, column: 12, scope: !21245)
!21295 = !DILocation(line: 1779, column: 10, scope: !21245)
!21296 = !DILocation(line: 1780, column: 7, scope: !21297)
!21297 = distinct !DILexicalBlock(scope: !21245, file: !1326, line: 1780, column: 7)
!21298 = !DILocation(line: 1780, column: 14, scope: !21297)
!21299 = !DILocation(line: 1780, column: 18, scope: !21297)
!21300 = !DILocation(line: 1780, column: 21, scope: !21297)
!21301 = !DILocation(line: 1780, column: 27, scope: !21297)
!21302 = !DILocation(line: 1780, column: 7, scope: !21245)
!21303 = !DILocalVariable(name: "connect_fdset", scope: !21304, file: !1326, line: 1782, type: !21108)
!21304 = distinct !DILexicalBlock(scope: !21297, file: !1326, line: 1781, column: 3)
!21305 = !DILocation(line: 1782, column: 12, scope: !21304)
!21306 = !DILocalVariable(name: "timeout", scope: !21304, file: !1326, line: 1783, type: !1633)
!21307 = !DILocation(line: 1783, column: 20, scope: !21304)
!21308 = !DILocation(line: 1784, column: 5, scope: !21304)
!21309 = distinct !{!21309, !21308, !21308}
!21310 = !DILocalVariable(name: "__d0", scope: !21311, file: !1326, line: 1784, type: !19)
!21311 = distinct !DILexicalBlock(scope: !21304, file: !1326, line: 1784, column: 5)
!21312 = !DILocation(line: 1784, column: 5, scope: !21311)
!21313 = !DILocalVariable(name: "__d1", scope: !21311, file: !1326, line: 1784, type: !19)
!21314 = !{i32 -2146470527}
!21315 = !DILocation(line: 1785, column: 5, scope: !21304)
!21316 = !DILocation(line: 1786, column: 22, scope: !21304)
!21317 = !DILocation(line: 1786, column: 13, scope: !21304)
!21318 = !DILocation(line: 1786, column: 20, scope: !21304)
!21319 = !DILocation(line: 1787, column: 13, scope: !21304)
!21320 = !DILocation(line: 1787, column: 21, scope: !21304)
!21321 = !DILocation(line: 1788, column: 5, scope: !21304)
!21322 = distinct !{!21322, !21321, !21323}
!21323 = !DILocation(line: 1794, column: 46, scope: !21304)
!21324 = !DILocation(line: 1790, column: 23, scope: !21325)
!21325 = distinct !DILexicalBlock(scope: !21304, file: !1326, line: 1789, column: 5)
!21326 = !DILocation(line: 1790, column: 26, scope: !21325)
!21327 = !DILocation(line: 1790, column: 16, scope: !21325)
!21328 = !DILocation(line: 1790, column: 14, scope: !21325)
!21329 = !DILocation(line: 1791, column: 21, scope: !21325)
!21330 = !DILocation(line: 1791, column: 19, scope: !21325)
!21331 = !DILocation(line: 1792, column: 7, scope: !21325)
!21332 = !DILocation(line: 1793, column: 5, scope: !21325)
!21333 = !DILocation(line: 1794, column: 12, scope: !21304)
!21334 = !DILocation(line: 1794, column: 19, scope: !21304)
!21335 = !DILocation(line: 1794, column: 23, scope: !21304)
!21336 = !DILocation(line: 1794, column: 26, scope: !21304)
!21337 = !DILocation(line: 1794, column: 38, scope: !21304)
!21338 = !DILocation(line: 1795, column: 9, scope: !21339)
!21339 = distinct !DILexicalBlock(scope: !21304, file: !1326, line: 1795, column: 9)
!21340 = !DILocation(line: 1795, column: 16, scope: !21339)
!21341 = !DILocation(line: 1795, column: 9, scope: !21304)
!21342 = !DILocation(line: 1797, column: 11, scope: !21343)
!21343 = distinct !DILexicalBlock(scope: !21344, file: !1326, line: 1797, column: 11)
!21344 = distinct !DILexicalBlock(scope: !21339, file: !1326, line: 1796, column: 5)
!21345 = !DILocation(line: 1797, column: 18, scope: !21343)
!21346 = !DILocation(line: 1797, column: 11, scope: !21344)
!21347 = !DILocation(line: 1799, column: 9, scope: !21348)
!21348 = distinct !DILexicalBlock(scope: !21343, file: !1326, line: 1798, column: 7)
!21349 = !DILocation(line: 1799, column: 15, scope: !21348)
!21350 = !DILocation(line: 1800, column: 7, scope: !21348)
!21351 = !DILocation(line: 1801, column: 14, scope: !21344)
!21352 = !DILocation(line: 1802, column: 5, scope: !21344)
!21353 = !DILocalVariable(name: "socklen", scope: !21354, file: !1326, line: 1805, type: !21117)
!21354 = distinct !DILexicalBlock(scope: !21339, file: !1326, line: 1804, column: 5)
!21355 = !DILocation(line: 1805, column: 17, scope: !21354)
!21356 = !DILocalVariable(name: "sockoptret", scope: !21354, file: !1326, line: 1806, type: !19)
!21357 = !DILocation(line: 1806, column: 11, scope: !21354)
!21358 = !DILocation(line: 1806, column: 35, scope: !21354)
!21359 = !DILocation(line: 1806, column: 61, scope: !21354)
!21360 = !DILocation(line: 1806, column: 24, scope: !21354)
!21361 = !DILocation(line: 1807, column: 11, scope: !21362)
!21362 = distinct !DILexicalBlock(scope: !21354, file: !1326, line: 1807, column: 11)
!21363 = !DILocation(line: 1807, column: 22, scope: !21362)
!21364 = !DILocation(line: 1807, column: 11, scope: !21354)
!21365 = !DILocation(line: 1809, column: 9, scope: !21366)
!21366 = distinct !DILexicalBlock(scope: !21362, file: !1326, line: 1808, column: 7)
!21367 = !DILocation(line: 1810, column: 7, scope: !21366)
!21368 = !DILocation(line: 1811, column: 11, scope: !21369)
!21369 = distinct !DILexicalBlock(scope: !21354, file: !1326, line: 1811, column: 11)
!21370 = !DILocation(line: 1811, column: 18, scope: !21369)
!21371 = !DILocation(line: 1811, column: 11, scope: !21354)
!21372 = !DILocation(line: 1813, column: 17, scope: !21373)
!21373 = distinct !DILexicalBlock(scope: !21369, file: !1326, line: 1812, column: 7)
!21374 = !DILocation(line: 1813, column: 9, scope: !21373)
!21375 = !DILocation(line: 1813, column: 15, scope: !21373)
!21376 = !DILocation(line: 1814, column: 16, scope: !21373)
!21377 = !DILocation(line: 1815, column: 7, scope: !21373)
!21378 = !DILocation(line: 1817, column: 3, scope: !21304)
!21379 = !DILocation(line: 1818, column: 7, scope: !21380)
!21380 = distinct !DILexicalBlock(scope: !21245, file: !1326, line: 1818, column: 7)
!21381 = !DILocation(line: 1818, column: 20, scope: !21380)
!21382 = !DILocation(line: 1818, column: 7, scope: !21245)
!21383 = !DILocation(line: 1820, column: 36, scope: !21384)
!21384 = distinct !DILexicalBlock(scope: !21380, file: !1326, line: 1819, column: 3)
!21385 = !DILocation(line: 1820, column: 5, scope: !21384)
!21386 = !DILocation(line: 1821, column: 3, scope: !21384)
!21387 = !DILocation(line: 1822, column: 10, scope: !21245)
!21388 = !DILocation(line: 1822, column: 3, scope: !21245)
!21389 = distinct !DISubprogram(name: "vsf_sysutil_getsockname", scope: !1326, file: !1326, line: 1826, type: !21390, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21390 = !DISubroutineType(types: !21391)
!21391 = !{null, !19, !21392}
!21392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!21393 = !DILocalVariable(name: "fd", arg: 1, scope: !21389, file: !1326, line: 1826, type: !19)
!21394 = !DILocation(line: 1826, column: 29, scope: !21389)
!21395 = !DILocalVariable(name: "p_sockptr", arg: 2, scope: !21389, file: !1326, line: 1826, type: !21392)
!21396 = !DILocation(line: 1826, column: 63, scope: !21389)
!21397 = !DILocalVariable(name: "the_addr", scope: !21389, file: !1326, line: 1828, type: !1557)
!21398 = !DILocation(line: 1828, column: 31, scope: !21389)
!21399 = !DILocalVariable(name: "retval", scope: !21389, file: !1326, line: 1829, type: !19)
!21400 = !DILocation(line: 1829, column: 7, scope: !21389)
!21401 = !DILocalVariable(name: "socklen", scope: !21389, file: !1326, line: 1830, type: !21117)
!21402 = !DILocation(line: 1830, column: 13, scope: !21389)
!21403 = !DILocation(line: 1831, column: 30, scope: !21389)
!21404 = !DILocation(line: 1831, column: 3, scope: !21389)
!21405 = !DILocation(line: 1832, column: 24, scope: !21389)
!21406 = !DILocation(line: 1832, column: 38, scope: !21389)
!21407 = !DILocation(line: 1832, column: 40, scope: !21389)
!21408 = !DILocation(line: 1832, column: 12, scope: !21389)
!21409 = !DILocation(line: 1832, column: 10, scope: !21389)
!21410 = !DILocation(line: 1833, column: 7, scope: !21411)
!21411 = distinct !DILexicalBlock(scope: !21389, file: !1326, line: 1833, column: 7)
!21412 = !DILocation(line: 1833, column: 14, scope: !21411)
!21413 = !DILocation(line: 1833, column: 7, scope: !21389)
!21414 = !DILocation(line: 1835, column: 5, scope: !21415)
!21415 = distinct !DILexicalBlock(scope: !21411, file: !1326, line: 1834, column: 3)
!21416 = !DILocation(line: 1836, column: 3, scope: !21415)
!21417 = !DILocation(line: 1837, column: 16, scope: !21418)
!21418 = distinct !DILexicalBlock(scope: !21389, file: !1326, line: 1837, column: 7)
!21419 = !DILocation(line: 1837, column: 18, scope: !21418)
!21420 = !DILocation(line: 1837, column: 29, scope: !21418)
!21421 = !DILocation(line: 1837, column: 7, scope: !21418)
!21422 = !DILocation(line: 1837, column: 39, scope: !21418)
!21423 = !DILocation(line: 1837, column: 50, scope: !21418)
!21424 = !DILocation(line: 1838, column: 16, scope: !21418)
!21425 = !DILocation(line: 1838, column: 18, scope: !21418)
!21426 = !DILocation(line: 1838, column: 29, scope: !21418)
!21427 = !DILocation(line: 1838, column: 7, scope: !21418)
!21428 = !DILocation(line: 1838, column: 39, scope: !21418)
!21429 = !DILocation(line: 1837, column: 7, scope: !21389)
!21430 = !DILocation(line: 1840, column: 5, scope: !21431)
!21431 = distinct !DILexicalBlock(scope: !21418, file: !1326, line: 1839, column: 3)
!21432 = !DILocation(line: 1841, column: 3, scope: !21431)
!21433 = !DILocation(line: 1842, column: 30, scope: !21389)
!21434 = !DILocation(line: 1842, column: 3, scope: !21389)
!21435 = !DILocation(line: 1843, column: 7, scope: !21436)
!21436 = distinct !DILexicalBlock(scope: !21389, file: !1326, line: 1843, column: 7)
!21437 = !DILocation(line: 1843, column: 15, scope: !21436)
!21438 = !DILocation(line: 1843, column: 7, scope: !21389)
!21439 = !DILocation(line: 1845, column: 13, scope: !21440)
!21440 = distinct !DILexicalBlock(scope: !21436, file: !1326, line: 1844, column: 3)
!21441 = !DILocation(line: 1846, column: 3, scope: !21440)
!21442 = !DILocation(line: 1847, column: 23, scope: !21389)
!21443 = !DILocation(line: 1847, column: 22, scope: !21389)
!21444 = !DILocation(line: 1847, column: 34, scope: !21389)
!21445 = !DILocation(line: 1847, column: 45, scope: !21389)
!21446 = !DILocation(line: 1847, column: 3, scope: !21389)
!21447 = !DILocation(line: 1848, column: 1, scope: !21389)
!21448 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_clear", scope: !1326, file: !1326, line: 1896, type: !21449, scopeLine: 1897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21449 = !DISubroutineType(types: !21450)
!21450 = !{null, !21392}
!21451 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !21448, file: !1326, line: 1896, type: !21392)
!21452 = !DILocation(line: 1896, column: 58, scope: !21448)
!21453 = !DILocation(line: 1898, column: 8, scope: !21454)
!21454 = distinct !DILexicalBlock(scope: !21448, file: !1326, line: 1898, column: 7)
!21455 = !DILocation(line: 1898, column: 7, scope: !21454)
!21456 = !DILocation(line: 1898, column: 18, scope: !21454)
!21457 = !DILocation(line: 1898, column: 7, scope: !21448)
!21458 = !DILocation(line: 1900, column: 23, scope: !21459)
!21459 = distinct !DILexicalBlock(scope: !21454, file: !1326, line: 1899, column: 3)
!21460 = !DILocation(line: 1900, column: 22, scope: !21459)
!21461 = !DILocation(line: 1900, column: 5, scope: !21459)
!21462 = !DILocation(line: 1901, column: 6, scope: !21459)
!21463 = !DILocation(line: 1901, column: 16, scope: !21459)
!21464 = !DILocation(line: 1902, column: 3, scope: !21459)
!21465 = !DILocation(line: 1903, column: 1, scope: !21448)
!21466 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_alloc", scope: !1326, file: !1326, line: 1906, type: !21449, scopeLine: 1907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21467 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !21466, file: !1326, line: 1906, type: !21392)
!21468 = !DILocation(line: 1906, column: 58, scope: !21466)
!21469 = !DILocation(line: 1908, column: 30, scope: !21466)
!21470 = !DILocation(line: 1908, column: 3, scope: !21466)
!21471 = !DILocation(line: 1909, column: 16, scope: !21466)
!21472 = !DILocation(line: 1909, column: 4, scope: !21466)
!21473 = !DILocation(line: 1909, column: 14, scope: !21466)
!21474 = !DILocation(line: 1910, column: 23, scope: !21466)
!21475 = !DILocation(line: 1910, column: 22, scope: !21466)
!21476 = !DILocation(line: 1910, column: 3, scope: !21466)
!21477 = !DILocation(line: 1911, column: 1, scope: !21466)
!21478 = distinct !DISubprogram(name: "vsf_sysutil_getpeername", scope: !1326, file: !1326, line: 1851, type: !21390, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21479 = !DILocalVariable(name: "fd", arg: 1, scope: !21478, file: !1326, line: 1851, type: !19)
!21480 = !DILocation(line: 1851, column: 29, scope: !21478)
!21481 = !DILocalVariable(name: "p_sockptr", arg: 2, scope: !21478, file: !1326, line: 1851, type: !21392)
!21482 = !DILocation(line: 1851, column: 63, scope: !21478)
!21483 = !DILocalVariable(name: "the_addr", scope: !21478, file: !1326, line: 1853, type: !1557)
!21484 = !DILocation(line: 1853, column: 31, scope: !21478)
!21485 = !DILocalVariable(name: "retval", scope: !21478, file: !1326, line: 1854, type: !19)
!21486 = !DILocation(line: 1854, column: 7, scope: !21478)
!21487 = !DILocalVariable(name: "socklen", scope: !21478, file: !1326, line: 1855, type: !21117)
!21488 = !DILocation(line: 1855, column: 13, scope: !21478)
!21489 = !DILocation(line: 1856, column: 30, scope: !21478)
!21490 = !DILocation(line: 1856, column: 3, scope: !21478)
!21491 = !DILocation(line: 1857, column: 24, scope: !21478)
!21492 = !DILocation(line: 1857, column: 38, scope: !21478)
!21493 = !DILocation(line: 1857, column: 40, scope: !21478)
!21494 = !DILocation(line: 1857, column: 12, scope: !21478)
!21495 = !DILocation(line: 1857, column: 10, scope: !21478)
!21496 = !DILocation(line: 1858, column: 7, scope: !21497)
!21497 = distinct !DILexicalBlock(scope: !21478, file: !1326, line: 1858, column: 7)
!21498 = !DILocation(line: 1858, column: 14, scope: !21497)
!21499 = !DILocation(line: 1858, column: 7, scope: !21478)
!21500 = !DILocation(line: 1860, column: 5, scope: !21501)
!21501 = distinct !DILexicalBlock(scope: !21497, file: !1326, line: 1859, column: 3)
!21502 = !DILocation(line: 1861, column: 3, scope: !21501)
!21503 = !DILocation(line: 1862, column: 16, scope: !21504)
!21504 = distinct !DILexicalBlock(scope: !21478, file: !1326, line: 1862, column: 7)
!21505 = !DILocation(line: 1862, column: 18, scope: !21504)
!21506 = !DILocation(line: 1862, column: 29, scope: !21504)
!21507 = !DILocation(line: 1862, column: 7, scope: !21504)
!21508 = !DILocation(line: 1862, column: 39, scope: !21504)
!21509 = !DILocation(line: 1862, column: 50, scope: !21504)
!21510 = !DILocation(line: 1863, column: 16, scope: !21504)
!21511 = !DILocation(line: 1863, column: 18, scope: !21504)
!21512 = !DILocation(line: 1863, column: 29, scope: !21504)
!21513 = !DILocation(line: 1863, column: 7, scope: !21504)
!21514 = !DILocation(line: 1863, column: 39, scope: !21504)
!21515 = !DILocation(line: 1862, column: 7, scope: !21478)
!21516 = !DILocation(line: 1865, column: 5, scope: !21517)
!21517 = distinct !DILexicalBlock(scope: !21504, file: !1326, line: 1864, column: 3)
!21518 = !DILocation(line: 1866, column: 3, scope: !21517)
!21519 = !DILocation(line: 1867, column: 30, scope: !21478)
!21520 = !DILocation(line: 1867, column: 3, scope: !21478)
!21521 = !DILocation(line: 1868, column: 7, scope: !21522)
!21522 = distinct !DILexicalBlock(scope: !21478, file: !1326, line: 1868, column: 7)
!21523 = !DILocation(line: 1868, column: 15, scope: !21522)
!21524 = !DILocation(line: 1868, column: 7, scope: !21478)
!21525 = !DILocation(line: 1870, column: 13, scope: !21526)
!21526 = distinct !DILexicalBlock(scope: !21522, file: !1326, line: 1869, column: 3)
!21527 = !DILocation(line: 1871, column: 3, scope: !21526)
!21528 = !DILocation(line: 1872, column: 23, scope: !21478)
!21529 = !DILocation(line: 1872, column: 22, scope: !21478)
!21530 = !DILocation(line: 1872, column: 34, scope: !21478)
!21531 = !DILocation(line: 1872, column: 45, scope: !21478)
!21532 = !DILocation(line: 1872, column: 3, scope: !21478)
!21533 = !DILocation(line: 1873, column: 1, scope: !21478)
!21534 = distinct !DISubprogram(name: "vsf_sysutil_shutdown_failok", scope: !1326, file: !1326, line: 1876, type: !1406, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21535 = !DILocalVariable(name: "fd", arg: 1, scope: !21534, file: !1326, line: 1876, type: !19)
!21536 = !DILocation(line: 1876, column: 33, scope: !21534)
!21537 = !DILocation(line: 1882, column: 19, scope: !21534)
!21538 = !DILocation(line: 1882, column: 10, scope: !21534)
!21539 = !DILocation(line: 1883, column: 1, scope: !21534)
!21540 = distinct !DISubprogram(name: "vsf_sysutil_shutdown_read_failok", scope: !1326, file: !1326, line: 1886, type: !1406, scopeLine: 1887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21541 = !DILocalVariable(name: "fd", arg: 1, scope: !21540, file: !1326, line: 1886, type: !19)
!21542 = !DILocation(line: 1886, column: 38, scope: !21540)
!21543 = !DILocation(line: 1892, column: 19, scope: !21540)
!21544 = !DILocation(line: 1892, column: 10, scope: !21540)
!21545 = !DILocation(line: 1893, column: 1, scope: !21540)
!21546 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_alloc_ipv4", scope: !1326, file: !1326, line: 1914, type: !21449, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21547 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !21546, file: !1326, line: 1914, type: !21392)
!21548 = !DILocation(line: 1914, column: 63, scope: !21546)
!21549 = !DILocation(line: 1916, column: 30, scope: !21546)
!21550 = !DILocation(line: 1916, column: 3, scope: !21546)
!21551 = !DILocation(line: 1917, column: 5, scope: !21546)
!21552 = !DILocation(line: 1917, column: 4, scope: !21546)
!21553 = !DILocation(line: 1917, column: 17, scope: !21546)
!21554 = !DILocation(line: 1917, column: 19, scope: !21546)
!21555 = !DILocation(line: 1917, column: 30, scope: !21546)
!21556 = !DILocation(line: 1917, column: 40, scope: !21546)
!21557 = !DILocation(line: 1918, column: 1, scope: !21546)
!21558 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_alloc_ipv6", scope: !1326, file: !1326, line: 1921, type: !21449, scopeLine: 1922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21559 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !21558, file: !1326, line: 1921, type: !21392)
!21560 = !DILocation(line: 1921, column: 63, scope: !21558)
!21561 = !DILocation(line: 1923, column: 30, scope: !21558)
!21562 = !DILocation(line: 1923, column: 3, scope: !21558)
!21563 = !DILocation(line: 1924, column: 5, scope: !21558)
!21564 = !DILocation(line: 1924, column: 4, scope: !21558)
!21565 = !DILocation(line: 1924, column: 17, scope: !21558)
!21566 = !DILocation(line: 1924, column: 19, scope: !21558)
!21567 = !DILocation(line: 1924, column: 30, scope: !21558)
!21568 = !DILocation(line: 1924, column: 40, scope: !21558)
!21569 = !DILocation(line: 1925, column: 1, scope: !21558)
!21570 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_clone", scope: !1326, file: !1326, line: 1928, type: !21571, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21571 = !DISubroutineType(types: !21572)
!21572 = !{null, !21392, !1597}
!21573 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !21570, file: !1326, line: 1928, type: !21392)
!21574 = !DILocation(line: 1928, column: 58, scope: !21570)
!21575 = !DILocalVariable(name: "p_src", arg: 2, scope: !21570, file: !1326, line: 1929, type: !1597)
!21576 = !DILocation(line: 1929, column: 63, scope: !21570)
!21577 = !DILocalVariable(name: "p_sockaddr", scope: !21570, file: !1326, line: 1931, type: !1556)
!21578 = !DILocation(line: 1931, column: 32, scope: !21570)
!21579 = !DILocation(line: 1932, column: 30, scope: !21570)
!21580 = !DILocation(line: 1932, column: 3, scope: !21570)
!21581 = !DILocation(line: 1933, column: 17, scope: !21570)
!21582 = !DILocation(line: 1933, column: 16, scope: !21570)
!21583 = !DILocation(line: 1933, column: 14, scope: !21570)
!21584 = !DILocation(line: 1934, column: 7, scope: !21585)
!21585 = distinct !DILexicalBlock(scope: !21570, file: !1326, line: 1934, column: 7)
!21586 = !DILocation(line: 1934, column: 14, scope: !21585)
!21587 = !DILocation(line: 1934, column: 16, scope: !21585)
!21588 = !DILocation(line: 1934, column: 27, scope: !21585)
!21589 = !DILocation(line: 1934, column: 37, scope: !21585)
!21590 = !DILocation(line: 1934, column: 7, scope: !21570)
!21591 = !DILocation(line: 1936, column: 5, scope: !21592)
!21592 = distinct !DILexicalBlock(scope: !21585, file: !1326, line: 1935, column: 3)
!21593 = !DILocation(line: 1936, column: 17, scope: !21592)
!21594 = !DILocation(line: 1936, column: 19, scope: !21592)
!21595 = !DILocation(line: 1936, column: 30, scope: !21592)
!21596 = !DILocation(line: 1936, column: 40, scope: !21592)
!21597 = !DILocation(line: 1937, column: 25, scope: !21592)
!21598 = !DILocation(line: 1937, column: 37, scope: !21592)
!21599 = !DILocation(line: 1937, column: 39, scope: !21592)
!21600 = !DILocation(line: 1937, column: 53, scope: !21592)
!21601 = !DILocation(line: 1937, column: 24, scope: !21592)
!21602 = !DILocation(line: 1938, column: 25, scope: !21592)
!21603 = !DILocation(line: 1938, column: 32, scope: !21592)
!21604 = !DILocation(line: 1938, column: 34, scope: !21592)
!21605 = !DILocation(line: 1938, column: 48, scope: !21592)
!21606 = !DILocation(line: 1938, column: 24, scope: !21592)
!21607 = !DILocation(line: 1937, column: 5, scope: !21592)
!21608 = !DILocation(line: 1940, column: 3, scope: !21592)
!21609 = !DILocation(line: 1941, column: 12, scope: !21610)
!21610 = distinct !DILexicalBlock(scope: !21585, file: !1326, line: 1941, column: 12)
!21611 = !DILocation(line: 1941, column: 19, scope: !21610)
!21612 = !DILocation(line: 1941, column: 21, scope: !21610)
!21613 = !DILocation(line: 1941, column: 32, scope: !21610)
!21614 = !DILocation(line: 1941, column: 42, scope: !21610)
!21615 = !DILocation(line: 1941, column: 12, scope: !21585)
!21616 = !DILocation(line: 1943, column: 5, scope: !21617)
!21617 = distinct !DILexicalBlock(scope: !21610, file: !1326, line: 1942, column: 3)
!21618 = !DILocation(line: 1943, column: 17, scope: !21617)
!21619 = !DILocation(line: 1943, column: 19, scope: !21617)
!21620 = !DILocation(line: 1943, column: 30, scope: !21617)
!21621 = !DILocation(line: 1943, column: 40, scope: !21617)
!21622 = !DILocation(line: 1944, column: 25, scope: !21617)
!21623 = !DILocation(line: 1944, column: 37, scope: !21617)
!21624 = !DILocation(line: 1944, column: 39, scope: !21617)
!21625 = !DILocation(line: 1944, column: 54, scope: !21617)
!21626 = !DILocation(line: 1944, column: 24, scope: !21617)
!21627 = !DILocation(line: 1945, column: 25, scope: !21617)
!21628 = !DILocation(line: 1945, column: 32, scope: !21617)
!21629 = !DILocation(line: 1945, column: 34, scope: !21617)
!21630 = !DILocation(line: 1945, column: 49, scope: !21617)
!21631 = !DILocation(line: 1945, column: 24, scope: !21617)
!21632 = !DILocation(line: 1944, column: 5, scope: !21617)
!21633 = !DILocation(line: 1948, column: 9, scope: !21617)
!21634 = !DILocation(line: 1948, column: 16, scope: !21617)
!21635 = !DILocation(line: 1948, column: 18, scope: !21617)
!21636 = !DILocation(line: 1948, column: 33, scope: !21617)
!21637 = !DILocation(line: 1947, column: 5, scope: !21617)
!21638 = !DILocation(line: 1947, column: 17, scope: !21617)
!21639 = !DILocation(line: 1947, column: 19, scope: !21617)
!21640 = !DILocation(line: 1947, column: 34, scope: !21617)
!21641 = !DILocation(line: 1947, column: 48, scope: !21617)
!21642 = !DILocation(line: 1949, column: 3, scope: !21617)
!21643 = !DILocation(line: 1952, column: 5, scope: !21644)
!21644 = distinct !DILexicalBlock(scope: !21610, file: !1326, line: 1951, column: 3)
!21645 = !DILocation(line: 1954, column: 1, scope: !21570)
!21646 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_addr_equal", scope: !1326, file: !1326, line: 1957, type: !21647, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21647 = !DISubroutineType(types: !21648)
!21648 = !{!19, !1597, !1597}
!21649 = !DILocalVariable(name: "p1", arg: 1, scope: !21646, file: !1326, line: 1957, type: !1597)
!21650 = !DILocation(line: 1957, column: 68, scope: !21646)
!21651 = !DILocalVariable(name: "p2", arg: 2, scope: !21646, file: !1326, line: 1958, type: !1597)
!21652 = !DILocation(line: 1958, column: 68, scope: !21646)
!21653 = !DILocalVariable(name: "family1", scope: !21646, file: !1326, line: 1960, type: !19)
!21654 = !DILocation(line: 1960, column: 7, scope: !21646)
!21655 = !DILocation(line: 1960, column: 17, scope: !21646)
!21656 = !DILocation(line: 1960, column: 21, scope: !21646)
!21657 = !DILocation(line: 1960, column: 23, scope: !21646)
!21658 = !DILocation(line: 1960, column: 34, scope: !21646)
!21659 = !DILocalVariable(name: "family2", scope: !21646, file: !1326, line: 1961, type: !19)
!21660 = !DILocation(line: 1961, column: 7, scope: !21646)
!21661 = !DILocation(line: 1961, column: 17, scope: !21646)
!21662 = !DILocation(line: 1961, column: 21, scope: !21646)
!21663 = !DILocation(line: 1961, column: 23, scope: !21646)
!21664 = !DILocation(line: 1961, column: 34, scope: !21646)
!21665 = !DILocation(line: 1962, column: 7, scope: !21666)
!21666 = distinct !DILexicalBlock(scope: !21646, file: !1326, line: 1962, column: 7)
!21667 = !DILocation(line: 1962, column: 18, scope: !21666)
!21668 = !DILocation(line: 1962, column: 15, scope: !21666)
!21669 = !DILocation(line: 1962, column: 7, scope: !21646)
!21670 = !DILocation(line: 1964, column: 9, scope: !21671)
!21671 = distinct !DILexicalBlock(scope: !21672, file: !1326, line: 1964, column: 9)
!21672 = distinct !DILexicalBlock(scope: !21666, file: !1326, line: 1963, column: 3)
!21673 = !DILocation(line: 1964, column: 17, scope: !21671)
!21674 = !DILocation(line: 1964, column: 28, scope: !21671)
!21675 = !DILocation(line: 1964, column: 31, scope: !21671)
!21676 = !DILocation(line: 1964, column: 39, scope: !21671)
!21677 = !DILocation(line: 1964, column: 9, scope: !21672)
!21678 = !DILocalVariable(name: "p_ipv4_addr", scope: !21679, file: !1326, line: 1966, type: !1595)
!21679 = distinct !DILexicalBlock(scope: !21671, file: !1326, line: 1965, column: 5)
!21680 = !DILocation(line: 1966, column: 19, scope: !21679)
!21681 = !DILocation(line: 1966, column: 62, scope: !21679)
!21682 = !DILocation(line: 1966, column: 33, scope: !21679)
!21683 = !DILocation(line: 1967, column: 11, scope: !21684)
!21684 = distinct !DILexicalBlock(scope: !21679, file: !1326, line: 1967, column: 11)
!21685 = !DILocation(line: 1967, column: 23, scope: !21684)
!21686 = !DILocation(line: 1968, column: 31, scope: !21684)
!21687 = !DILocation(line: 1968, column: 45, scope: !21684)
!21688 = !DILocation(line: 1968, column: 49, scope: !21684)
!21689 = !DILocation(line: 1968, column: 51, scope: !21684)
!21690 = !DILocation(line: 1968, column: 65, scope: !21684)
!21691 = !DILocation(line: 1968, column: 44, scope: !21684)
!21692 = !DILocation(line: 1968, column: 12, scope: !21684)
!21693 = !DILocation(line: 1967, column: 11, scope: !21679)
!21694 = !DILocation(line: 1971, column: 9, scope: !21695)
!21695 = distinct !DILexicalBlock(scope: !21684, file: !1326, line: 1970, column: 7)
!21696 = !DILocation(line: 1973, column: 5, scope: !21679)
!21697 = !DILocation(line: 1974, column: 14, scope: !21698)
!21698 = distinct !DILexicalBlock(scope: !21671, file: !1326, line: 1974, column: 14)
!21699 = !DILocation(line: 1974, column: 22, scope: !21698)
!21700 = !DILocation(line: 1974, column: 34, scope: !21698)
!21701 = !DILocation(line: 1974, column: 37, scope: !21698)
!21702 = !DILocation(line: 1974, column: 45, scope: !21698)
!21703 = !DILocation(line: 1974, column: 14, scope: !21671)
!21704 = !DILocalVariable(name: "p_ipv4_addr", scope: !21705, file: !1326, line: 1976, type: !1595)
!21705 = distinct !DILexicalBlock(scope: !21698, file: !1326, line: 1975, column: 5)
!21706 = !DILocation(line: 1976, column: 19, scope: !21705)
!21707 = !DILocation(line: 1976, column: 62, scope: !21705)
!21708 = !DILocation(line: 1976, column: 33, scope: !21705)
!21709 = !DILocation(line: 1977, column: 11, scope: !21710)
!21710 = distinct !DILexicalBlock(scope: !21705, file: !1326, line: 1977, column: 11)
!21711 = !DILocation(line: 1977, column: 23, scope: !21710)
!21712 = !DILocation(line: 1978, column: 31, scope: !21710)
!21713 = !DILocation(line: 1978, column: 45, scope: !21710)
!21714 = !DILocation(line: 1978, column: 49, scope: !21710)
!21715 = !DILocation(line: 1978, column: 51, scope: !21710)
!21716 = !DILocation(line: 1978, column: 65, scope: !21710)
!21717 = !DILocation(line: 1978, column: 44, scope: !21710)
!21718 = !DILocation(line: 1978, column: 12, scope: !21710)
!21719 = !DILocation(line: 1977, column: 11, scope: !21705)
!21720 = !DILocation(line: 1981, column: 9, scope: !21721)
!21721 = distinct !DILexicalBlock(scope: !21710, file: !1326, line: 1980, column: 7)
!21722 = !DILocation(line: 1983, column: 5, scope: !21705)
!21723 = !DILocation(line: 1984, column: 5, scope: !21672)
!21724 = !DILocation(line: 1986, column: 7, scope: !21725)
!21725 = distinct !DILexicalBlock(scope: !21646, file: !1326, line: 1986, column: 7)
!21726 = !DILocation(line: 1986, column: 15, scope: !21725)
!21727 = !DILocation(line: 1986, column: 7, scope: !21646)
!21728 = !DILocation(line: 1988, column: 29, scope: !21729)
!21729 = distinct !DILexicalBlock(scope: !21730, file: !1326, line: 1988, column: 9)
!21730 = distinct !DILexicalBlock(scope: !21725, file: !1326, line: 1987, column: 3)
!21731 = !DILocation(line: 1988, column: 33, scope: !21729)
!21732 = !DILocation(line: 1988, column: 35, scope: !21729)
!21733 = !DILocation(line: 1988, column: 49, scope: !21729)
!21734 = !DILocation(line: 1988, column: 28, scope: !21729)
!21735 = !DILocation(line: 1989, column: 29, scope: !21729)
!21736 = !DILocation(line: 1989, column: 33, scope: !21729)
!21737 = !DILocation(line: 1989, column: 35, scope: !21729)
!21738 = !DILocation(line: 1989, column: 49, scope: !21729)
!21739 = !DILocation(line: 1989, column: 28, scope: !21729)
!21740 = !DILocation(line: 1988, column: 9, scope: !21729)
!21741 = !DILocation(line: 1990, column: 66, scope: !21729)
!21742 = !DILocation(line: 1988, column: 9, scope: !21730)
!21743 = !DILocation(line: 1992, column: 7, scope: !21744)
!21744 = distinct !DILexicalBlock(scope: !21729, file: !1326, line: 1991, column: 5)
!21745 = !DILocation(line: 1994, column: 3, scope: !21730)
!21746 = !DILocation(line: 1995, column: 12, scope: !21747)
!21747 = distinct !DILexicalBlock(scope: !21725, file: !1326, line: 1995, column: 12)
!21748 = !DILocation(line: 1995, column: 20, scope: !21747)
!21749 = !DILocation(line: 1995, column: 12, scope: !21725)
!21750 = !DILocation(line: 1997, column: 29, scope: !21751)
!21751 = distinct !DILexicalBlock(scope: !21752, file: !1326, line: 1997, column: 9)
!21752 = distinct !DILexicalBlock(scope: !21747, file: !1326, line: 1996, column: 3)
!21753 = !DILocation(line: 1997, column: 33, scope: !21751)
!21754 = !DILocation(line: 1997, column: 35, scope: !21751)
!21755 = !DILocation(line: 1997, column: 50, scope: !21751)
!21756 = !DILocation(line: 1997, column: 28, scope: !21751)
!21757 = !DILocation(line: 1998, column: 29, scope: !21751)
!21758 = !DILocation(line: 1998, column: 33, scope: !21751)
!21759 = !DILocation(line: 1998, column: 35, scope: !21751)
!21760 = !DILocation(line: 1998, column: 50, scope: !21751)
!21761 = !DILocation(line: 1998, column: 28, scope: !21751)
!21762 = !DILocation(line: 1997, column: 9, scope: !21751)
!21763 = !DILocation(line: 1999, column: 68, scope: !21751)
!21764 = !DILocation(line: 1997, column: 9, scope: !21752)
!21765 = !DILocation(line: 2001, column: 7, scope: !21766)
!21766 = distinct !DILexicalBlock(scope: !21751, file: !1326, line: 2000, column: 5)
!21767 = !DILocation(line: 2003, column: 3, scope: !21752)
!21768 = !DILocation(line: 2004, column: 3, scope: !21646)
!21769 = !DILocation(line: 2005, column: 1, scope: !21646)
!21770 = !DILocalVariable(name: "p_addr", arg: 1, scope: !1592, file: !1326, line: 2058, type: !1597)
!21771 = !DILocation(line: 2058, column: 65, scope: !1592)
!21772 = !DILocalVariable(name: "p_addr_start", scope: !1592, file: !1326, line: 2062, type: !1074)
!21773 = !DILocation(line: 2062, column: 24, scope: !1592)
!21774 = !DILocation(line: 2063, column: 7, scope: !21775)
!21775 = distinct !DILexicalBlock(scope: !1592, file: !1326, line: 2063, column: 7)
!21776 = !DILocation(line: 2063, column: 15, scope: !21775)
!21777 = !DILocation(line: 2063, column: 17, scope: !21775)
!21778 = !DILocation(line: 2063, column: 28, scope: !21775)
!21779 = !DILocation(line: 2063, column: 38, scope: !21775)
!21780 = !DILocation(line: 2063, column: 7, scope: !1592)
!21781 = !DILocation(line: 2065, column: 5, scope: !21782)
!21782 = distinct !DILexicalBlock(scope: !21775, file: !1326, line: 2064, column: 3)
!21783 = !DILocation(line: 2067, column: 36, scope: !21784)
!21784 = distinct !DILexicalBlock(scope: !1592, file: !1326, line: 2067, column: 7)
!21785 = !DILocation(line: 2067, column: 44, scope: !21784)
!21786 = !DILocation(line: 2067, column: 46, scope: !21784)
!21787 = !DILocation(line: 2067, column: 61, scope: !21784)
!21788 = !DILocation(line: 2067, column: 35, scope: !21784)
!21789 = !DILocation(line: 2067, column: 7, scope: !21784)
!21790 = !DILocation(line: 2067, column: 7, scope: !1592)
!21791 = !DILocation(line: 2069, column: 5, scope: !21792)
!21792 = distinct !DILexicalBlock(scope: !21784, file: !1326, line: 2068, column: 3)
!21793 = !DILocation(line: 2071, column: 41, scope: !1592)
!21794 = !DILocation(line: 2071, column: 49, scope: !1592)
!21795 = !DILocation(line: 2071, column: 51, scope: !1592)
!21796 = !DILocation(line: 2071, column: 66, scope: !1592)
!21797 = !DILocation(line: 2071, column: 18, scope: !1592)
!21798 = !DILocation(line: 2071, column: 16, scope: !1592)
!21799 = !DILocation(line: 2072, column: 11, scope: !1592)
!21800 = !DILocation(line: 2072, column: 3, scope: !1592)
!21801 = !DILocation(line: 2073, column: 1, scope: !1592)
!21802 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_is_ipv6", scope: !1326, file: !1326, line: 2008, type: !21803, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21803 = !DISubroutineType(types: !21804)
!21804 = !{!19, !1597}
!21805 = !DILocalVariable(name: "p_sockaddr", arg: 1, scope: !21802, file: !1326, line: 2008, type: !1597)
!21806 = !DILocation(line: 2008, column: 65, scope: !21802)
!21807 = !DILocation(line: 2010, column: 7, scope: !21808)
!21808 = distinct !DILexicalBlock(scope: !21802, file: !1326, line: 2010, column: 7)
!21809 = !DILocation(line: 2010, column: 19, scope: !21808)
!21810 = !DILocation(line: 2010, column: 21, scope: !21808)
!21811 = !DILocation(line: 2010, column: 32, scope: !21808)
!21812 = !DILocation(line: 2010, column: 42, scope: !21808)
!21813 = !DILocation(line: 2010, column: 7, scope: !21802)
!21814 = !DILocation(line: 2012, column: 5, scope: !21815)
!21815 = distinct !DILexicalBlock(scope: !21808, file: !1326, line: 2011, column: 3)
!21816 = !DILocation(line: 2014, column: 3, scope: !21802)
!21817 = !DILocation(line: 2015, column: 1, scope: !21802)
!21818 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !1553, file: !1326, line: 2018, type: !1556)
!21819 = !DILocation(line: 2018, column: 64, scope: !1553)
!21820 = !DILocalVariable(name: "p_raw", arg: 2, scope: !1553, file: !1326, line: 2019, type: !1074)
!21821 = !DILocation(line: 2019, column: 56, scope: !1553)
!21822 = !DILocation(line: 2021, column: 7, scope: !21823)
!21823 = distinct !DILexicalBlock(scope: !1553, file: !1326, line: 2021, column: 7)
!21824 = !DILocation(line: 2021, column: 18, scope: !21823)
!21825 = !DILocation(line: 2021, column: 20, scope: !21823)
!21826 = !DILocation(line: 2021, column: 31, scope: !21823)
!21827 = !DILocation(line: 2021, column: 41, scope: !21823)
!21828 = !DILocation(line: 2021, column: 7, scope: !1553)
!21829 = !DILocation(line: 2023, column: 25, scope: !21830)
!21830 = distinct !DILexicalBlock(scope: !21823, file: !1326, line: 2022, column: 3)
!21831 = !DILocation(line: 2023, column: 36, scope: !21830)
!21832 = !DILocation(line: 2023, column: 38, scope: !21830)
!21833 = !DILocation(line: 2023, column: 52, scope: !21830)
!21834 = !DILocation(line: 2023, column: 24, scope: !21830)
!21835 = !DILocation(line: 2023, column: 62, scope: !21830)
!21836 = !DILocation(line: 2023, column: 5, scope: !21830)
!21837 = !DILocation(line: 2025, column: 3, scope: !21830)
!21838 = !DILocation(line: 2026, column: 12, scope: !21839)
!21839 = distinct !DILexicalBlock(scope: !21823, file: !1326, line: 2026, column: 12)
!21840 = !DILocation(line: 2026, column: 23, scope: !21839)
!21841 = !DILocation(line: 2026, column: 25, scope: !21839)
!21842 = !DILocation(line: 2026, column: 36, scope: !21839)
!21843 = !DILocation(line: 2026, column: 46, scope: !21839)
!21844 = !DILocation(line: 2026, column: 12, scope: !21823)
!21845 = !DILocation(line: 2029, column: 5, scope: !21846)
!21846 = distinct !DILexicalBlock(scope: !21839, file: !1326, line: 2027, column: 3)
!21847 = !DILocation(line: 2030, column: 25, scope: !21846)
!21848 = !DILocation(line: 2030, column: 39, scope: !21846)
!21849 = !DILocation(line: 2030, column: 41, scope: !21846)
!21850 = !DILocation(line: 2030, column: 55, scope: !21846)
!21851 = !DILocation(line: 2030, column: 24, scope: !21846)
!21852 = !DILocation(line: 2030, column: 65, scope: !21846)
!21853 = !DILocation(line: 2030, column: 5, scope: !21846)
!21854 = !DILocation(line: 2032, column: 25, scope: !21846)
!21855 = !DILocation(line: 2032, column: 36, scope: !21846)
!21856 = !DILocation(line: 2032, column: 38, scope: !21846)
!21857 = !DILocation(line: 2032, column: 53, scope: !21846)
!21858 = !DILocation(line: 2032, column: 24, scope: !21846)
!21859 = !DILocation(line: 2033, column: 53, scope: !21846)
!21860 = !DILocation(line: 2033, column: 24, scope: !21846)
!21861 = !DILocation(line: 2032, column: 5, scope: !21846)
!21862 = !DILocation(line: 2035, column: 3, scope: !21846)
!21863 = !DILocation(line: 2038, column: 5, scope: !21864)
!21864 = distinct !DILexicalBlock(scope: !21839, file: !1326, line: 2037, column: 3)
!21865 = !DILocation(line: 2040, column: 1, scope: !1553)
!21866 = !DILocalVariable(name: "p_addr", arg: 1, scope: !1604, file: !1326, line: 2076, type: !1597)
!21867 = !DILocation(line: 2076, column: 65, scope: !1604)
!21868 = !DILocation(line: 2079, column: 7, scope: !21869)
!21869 = distinct !DILexicalBlock(scope: !1604, file: !1326, line: 2079, column: 7)
!21870 = !DILocation(line: 2079, column: 15, scope: !21869)
!21871 = !DILocation(line: 2079, column: 17, scope: !21869)
!21872 = !DILocation(line: 2079, column: 28, scope: !21869)
!21873 = !DILocation(line: 2079, column: 38, scope: !21869)
!21874 = !DILocation(line: 2079, column: 7, scope: !1604)
!21875 = !DILocation(line: 2081, column: 5, scope: !21876)
!21876 = distinct !DILexicalBlock(scope: !21869, file: !1326, line: 2080, column: 3)
!21877 = !DILocation(line: 2083, column: 33, scope: !1604)
!21878 = !DILocation(line: 2083, column: 41, scope: !1604)
!21879 = !DILocation(line: 2083, column: 43, scope: !1604)
!21880 = !DILocation(line: 2083, column: 57, scope: !1604)
!21881 = !DILocation(line: 2083, column: 32, scope: !1604)
!21882 = !DILocation(line: 2083, column: 3, scope: !1604)
!21883 = !DILocation(line: 2084, column: 3, scope: !1604)
!21884 = !DILocation(line: 2085, column: 1, scope: !1604)
!21885 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_set_ipv6addr", scope: !1326, file: !1326, line: 2043, type: !1554, scopeLine: 2045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21886 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !21885, file: !1326, line: 2043, type: !1556)
!21887 = !DILocation(line: 2043, column: 64, scope: !21885)
!21888 = !DILocalVariable(name: "p_raw", arg: 2, scope: !21885, file: !1326, line: 2044, type: !1074)
!21889 = !DILocation(line: 2044, column: 56, scope: !21885)
!21890 = !DILocation(line: 2046, column: 7, scope: !21891)
!21891 = distinct !DILexicalBlock(scope: !21885, file: !1326, line: 2046, column: 7)
!21892 = !DILocation(line: 2046, column: 18, scope: !21891)
!21893 = !DILocation(line: 2046, column: 20, scope: !21891)
!21894 = !DILocation(line: 2046, column: 31, scope: !21891)
!21895 = !DILocation(line: 2046, column: 41, scope: !21891)
!21896 = !DILocation(line: 2046, column: 7, scope: !21885)
!21897 = !DILocation(line: 2048, column: 25, scope: !21898)
!21898 = distinct !DILexicalBlock(scope: !21891, file: !1326, line: 2047, column: 3)
!21899 = !DILocation(line: 2048, column: 36, scope: !21898)
!21900 = !DILocation(line: 2048, column: 38, scope: !21898)
!21901 = !DILocation(line: 2048, column: 53, scope: !21898)
!21902 = !DILocation(line: 2048, column: 24, scope: !21898)
!21903 = !DILocation(line: 2048, column: 64, scope: !21898)
!21904 = !DILocation(line: 2048, column: 5, scope: !21898)
!21905 = !DILocation(line: 2050, column: 3, scope: !21898)
!21906 = !DILocation(line: 2053, column: 5, scope: !21907)
!21907 = distinct !DILexicalBlock(scope: !21891, file: !1326, line: 2052, column: 3)
!21908 = !DILocation(line: 2055, column: 1, scope: !21885)
!21909 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_get_raw_addr", scope: !1326, file: !1326, line: 2088, type: !21910, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21910 = !DISubroutineType(types: !21911)
!21911 = !{!80, !1556}
!21912 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !21909, file: !1326, line: 2088, type: !1556)
!21913 = !DILocation(line: 2088, column: 64, scope: !21909)
!21914 = !DILocation(line: 2090, column: 7, scope: !21915)
!21915 = distinct !DILexicalBlock(scope: !21909, file: !1326, line: 2090, column: 7)
!21916 = !DILocation(line: 2090, column: 18, scope: !21915)
!21917 = !DILocation(line: 2090, column: 20, scope: !21915)
!21918 = !DILocation(line: 2090, column: 31, scope: !21915)
!21919 = !DILocation(line: 2090, column: 41, scope: !21915)
!21920 = !DILocation(line: 2090, column: 7, scope: !21909)
!21921 = !DILocation(line: 2092, column: 13, scope: !21922)
!21922 = distinct !DILexicalBlock(scope: !21915, file: !1326, line: 2091, column: 3)
!21923 = !DILocation(line: 2092, column: 24, scope: !21922)
!21924 = !DILocation(line: 2092, column: 26, scope: !21922)
!21925 = !DILocation(line: 2092, column: 40, scope: !21922)
!21926 = !DILocation(line: 2092, column: 12, scope: !21922)
!21927 = !DILocation(line: 2092, column: 5, scope: !21922)
!21928 = !DILocation(line: 2094, column: 12, scope: !21929)
!21929 = distinct !DILexicalBlock(scope: !21915, file: !1326, line: 2094, column: 12)
!21930 = !DILocation(line: 2094, column: 23, scope: !21929)
!21931 = !DILocation(line: 2094, column: 25, scope: !21929)
!21932 = !DILocation(line: 2094, column: 36, scope: !21929)
!21933 = !DILocation(line: 2094, column: 46, scope: !21929)
!21934 = !DILocation(line: 2094, column: 12, scope: !21915)
!21935 = !DILocation(line: 2096, column: 13, scope: !21936)
!21936 = distinct !DILexicalBlock(scope: !21929, file: !1326, line: 2095, column: 3)
!21937 = !DILocation(line: 2096, column: 24, scope: !21936)
!21938 = !DILocation(line: 2096, column: 26, scope: !21936)
!21939 = !DILocation(line: 2096, column: 41, scope: !21936)
!21940 = !DILocation(line: 2096, column: 12, scope: !21936)
!21941 = !DILocation(line: 2096, column: 5, scope: !21936)
!21942 = !DILocation(line: 2100, column: 5, scope: !21943)
!21943 = distinct !DILexicalBlock(scope: !21929, file: !1326, line: 2099, column: 3)
!21944 = !DILocation(line: 2102, column: 3, scope: !21909)
!21945 = !DILocation(line: 2103, column: 1, scope: !21909)
!21946 = distinct !DISubprogram(name: "vsf_sysutil_get_ipaddr_size", scope: !1326, file: !1326, line: 2106, type: !1520, scopeLine: 2107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21947 = !DILocalVariable(name: "addr", scope: !21946, file: !1326, line: 2108, type: !1557)
!21948 = !DILocation(line: 2108, column: 31, scope: !21946)
!21949 = !DILocalVariable(name: "size", scope: !21946, file: !1326, line: 2109, type: !26)
!21950 = !DILocation(line: 2109, column: 16, scope: !21946)
!21951 = !DILocalVariable(name: "size2", scope: !21946, file: !1326, line: 2110, type: !26)
!21952 = !DILocation(line: 2110, column: 16, scope: !21946)
!21953 = !DILocation(line: 2111, column: 7, scope: !21954)
!21954 = distinct !DILexicalBlock(scope: !21946, file: !1326, line: 2111, column: 7)
!21955 = !DILocation(line: 2111, column: 15, scope: !21954)
!21956 = !DILocation(line: 2111, column: 13, scope: !21954)
!21957 = !DILocation(line: 2111, column: 7, scope: !21946)
!21958 = !DILocation(line: 2113, column: 12, scope: !21959)
!21959 = distinct !DILexicalBlock(scope: !21954, file: !1326, line: 2112, column: 3)
!21960 = !DILocation(line: 2113, column: 10, scope: !21959)
!21961 = !DILocation(line: 2114, column: 3, scope: !21959)
!21962 = !DILocation(line: 2115, column: 10, scope: !21946)
!21963 = !DILocation(line: 2115, column: 3, scope: !21946)
!21964 = distinct !DISubprogram(name: "vsf_sysutil_get_ipsock", scope: !1326, file: !1326, line: 2119, type: !21803, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21965 = !DILocalVariable(name: "p_addr", arg: 1, scope: !21964, file: !1326, line: 2119, type: !1597)
!21966 = !DILocation(line: 2119, column: 59, scope: !21964)
!21967 = !DILocation(line: 2121, column: 7, scope: !21968)
!21968 = distinct !DILexicalBlock(scope: !21964, file: !1326, line: 2121, column: 7)
!21969 = !DILocation(line: 2121, column: 15, scope: !21968)
!21970 = !DILocation(line: 2121, column: 17, scope: !21968)
!21971 = !DILocation(line: 2121, column: 28, scope: !21968)
!21972 = !DILocation(line: 2121, column: 38, scope: !21968)
!21973 = !DILocation(line: 2121, column: 7, scope: !21964)
!21974 = !DILocation(line: 2123, column: 12, scope: !21975)
!21975 = distinct !DILexicalBlock(scope: !21968, file: !1326, line: 2122, column: 3)
!21976 = !DILocation(line: 2123, column: 5, scope: !21975)
!21977 = !DILocation(line: 2125, column: 12, scope: !21978)
!21978 = distinct !DILexicalBlock(scope: !21968, file: !1326, line: 2125, column: 12)
!21979 = !DILocation(line: 2125, column: 20, scope: !21978)
!21980 = !DILocation(line: 2125, column: 22, scope: !21978)
!21981 = !DILocation(line: 2125, column: 33, scope: !21978)
!21982 = !DILocation(line: 2125, column: 43, scope: !21978)
!21983 = !DILocation(line: 2125, column: 12, scope: !21968)
!21984 = !DILocation(line: 2127, column: 12, scope: !21985)
!21985 = distinct !DILexicalBlock(scope: !21978, file: !1326, line: 2126, column: 3)
!21986 = !DILocation(line: 2127, column: 5, scope: !21985)
!21987 = !DILocation(line: 2131, column: 5, scope: !21988)
!21988 = distinct !DILexicalBlock(scope: !21978, file: !1326, line: 2130, column: 3)
!21989 = !DILocation(line: 2133, column: 3, scope: !21964)
!21990 = !DILocation(line: 2134, column: 1, scope: !21964)
!21991 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_set_any", scope: !1326, file: !1326, line: 2137, type: !21992, scopeLine: 2138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!21992 = !DISubroutineType(types: !21993)
!21993 = !{null, !1556}
!21994 = !DILocalVariable(name: "p_sockaddr", arg: 1, scope: !21991, file: !1326, line: 2137, type: !1556)
!21995 = !DILocation(line: 2137, column: 59, scope: !21991)
!21996 = !DILocation(line: 2139, column: 7, scope: !21997)
!21997 = distinct !DILexicalBlock(scope: !21991, file: !1326, line: 2139, column: 7)
!21998 = !DILocation(line: 2139, column: 19, scope: !21997)
!21999 = !DILocation(line: 2139, column: 21, scope: !21997)
!22000 = !DILocation(line: 2139, column: 32, scope: !21997)
!22001 = !DILocation(line: 2139, column: 42, scope: !21997)
!22002 = !DILocation(line: 2139, column: 7, scope: !21991)
!22003 = !DILocation(line: 2141, column: 25, scope: !22004)
!22004 = distinct !DILexicalBlock(scope: !21997, file: !1326, line: 2140, column: 3)
!22005 = !DILocation(line: 2141, column: 37, scope: !22004)
!22006 = !DILocation(line: 2141, column: 39, scope: !22004)
!22007 = !DILocation(line: 2141, column: 53, scope: !22004)
!22008 = !DILocation(line: 2141, column: 24, scope: !22004)
!22009 = !DILocation(line: 2141, column: 5, scope: !22004)
!22010 = !DILocation(line: 2143, column: 3, scope: !22004)
!22011 = !DILocation(line: 2144, column: 12, scope: !22012)
!22012 = distinct !DILexicalBlock(scope: !21997, file: !1326, line: 2144, column: 12)
!22013 = !DILocation(line: 2144, column: 24, scope: !22012)
!22014 = !DILocation(line: 2144, column: 26, scope: !22012)
!22015 = !DILocation(line: 2144, column: 37, scope: !22012)
!22016 = !DILocation(line: 2144, column: 47, scope: !22012)
!22017 = !DILocation(line: 2144, column: 12, scope: !21997)
!22018 = !DILocation(line: 2146, column: 25, scope: !22019)
!22019 = distinct !DILexicalBlock(scope: !22012, file: !1326, line: 2145, column: 3)
!22020 = !DILocation(line: 2146, column: 37, scope: !22019)
!22021 = !DILocation(line: 2146, column: 39, scope: !22019)
!22022 = !DILocation(line: 2146, column: 54, scope: !22019)
!22023 = !DILocation(line: 2146, column: 24, scope: !22019)
!22024 = !DILocation(line: 2146, column: 5, scope: !22019)
!22025 = !DILocation(line: 2148, column: 3, scope: !22019)
!22026 = !DILocation(line: 2151, column: 5, scope: !22027)
!22027 = distinct !DILexicalBlock(scope: !22012, file: !1326, line: 2150, column: 3)
!22028 = !DILocation(line: 2153, column: 1, scope: !21991)
!22029 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_get_port", scope: !1326, file: !1326, line: 2156, type: !22030, scopeLine: 2157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22030 = !DISubroutineType(types: !22031)
!22031 = !{!225, !1597}
!22032 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !22029, file: !1326, line: 2156, type: !1597)
!22033 = !DILocation(line: 2156, column: 66, scope: !22029)
!22034 = !DILocation(line: 2158, column: 7, scope: !22035)
!22035 = distinct !DILexicalBlock(scope: !22029, file: !1326, line: 2158, column: 7)
!22036 = !DILocation(line: 2158, column: 18, scope: !22035)
!22037 = !DILocation(line: 2158, column: 20, scope: !22035)
!22038 = !DILocation(line: 2158, column: 31, scope: !22035)
!22039 = !DILocation(line: 2158, column: 41, scope: !22035)
!22040 = !DILocation(line: 2158, column: 7, scope: !22029)
!22041 = !DILocation(line: 2160, column: 18, scope: !22042)
!22042 = distinct !DILexicalBlock(scope: !22035, file: !1326, line: 2159, column: 3)
!22043 = !DILocation(line: 2160, column: 29, scope: !22042)
!22044 = !DILocation(line: 2160, column: 31, scope: !22042)
!22045 = !DILocation(line: 2160, column: 45, scope: !22042)
!22046 = !DILocation(line: 2160, column: 12, scope: !22042)
!22047 = !DILocation(line: 2160, column: 5, scope: !22042)
!22048 = !DILocation(line: 2162, column: 12, scope: !22049)
!22049 = distinct !DILexicalBlock(scope: !22035, file: !1326, line: 2162, column: 12)
!22050 = !DILocation(line: 2162, column: 23, scope: !22049)
!22051 = !DILocation(line: 2162, column: 25, scope: !22049)
!22052 = !DILocation(line: 2162, column: 36, scope: !22049)
!22053 = !DILocation(line: 2162, column: 46, scope: !22049)
!22054 = !DILocation(line: 2162, column: 12, scope: !22035)
!22055 = !DILocation(line: 2164, column: 18, scope: !22056)
!22056 = distinct !DILexicalBlock(scope: !22049, file: !1326, line: 2163, column: 3)
!22057 = !DILocation(line: 2164, column: 29, scope: !22056)
!22058 = !DILocation(line: 2164, column: 31, scope: !22056)
!22059 = !DILocation(line: 2164, column: 46, scope: !22056)
!22060 = !DILocation(line: 2164, column: 12, scope: !22056)
!22061 = !DILocation(line: 2164, column: 5, scope: !22056)
!22062 = !DILocation(line: 2168, column: 5, scope: !22063)
!22063 = distinct !DILexicalBlock(scope: !22049, file: !1326, line: 2167, column: 3)
!22064 = !DILocation(line: 2171, column: 3, scope: !22029)
!22065 = !DILocation(line: 2172, column: 1, scope: !22029)
!22066 = distinct !DISubprogram(name: "vsf_sysutil_sockaddr_set_port", scope: !1326, file: !1326, line: 2175, type: !22067, scopeLine: 2177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22067 = !DISubroutineType(types: !22068)
!22068 = !{null, !1556, !225}
!22069 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !22066, file: !1326, line: 2175, type: !1556)
!22070 = !DILocation(line: 2175, column: 60, scope: !22066)
!22071 = !DILocalVariable(name: "the_port", arg: 2, scope: !22066, file: !1326, line: 2176, type: !225)
!22072 = !DILocation(line: 2176, column: 46, scope: !22066)
!22073 = !DILocation(line: 2178, column: 7, scope: !22074)
!22074 = distinct !DILexicalBlock(scope: !22066, file: !1326, line: 2178, column: 7)
!22075 = !DILocation(line: 2178, column: 18, scope: !22074)
!22076 = !DILocation(line: 2178, column: 20, scope: !22074)
!22077 = !DILocation(line: 2178, column: 31, scope: !22074)
!22078 = !DILocation(line: 2178, column: 41, scope: !22074)
!22079 = !DILocation(line: 2178, column: 7, scope: !22066)
!22080 = !DILocation(line: 2180, column: 49, scope: !22081)
!22081 = distinct !DILexicalBlock(scope: !22074, file: !1326, line: 2179, column: 3)
!22082 = !DILocation(line: 2180, column: 43, scope: !22081)
!22083 = !DILocation(line: 2180, column: 5, scope: !22081)
!22084 = !DILocation(line: 2180, column: 16, scope: !22081)
!22085 = !DILocation(line: 2180, column: 18, scope: !22081)
!22086 = !DILocation(line: 2180, column: 32, scope: !22081)
!22087 = !DILocation(line: 2180, column: 41, scope: !22081)
!22088 = !DILocation(line: 2181, column: 3, scope: !22081)
!22089 = !DILocation(line: 2182, column: 12, scope: !22090)
!22090 = distinct !DILexicalBlock(scope: !22074, file: !1326, line: 2182, column: 12)
!22091 = !DILocation(line: 2182, column: 23, scope: !22090)
!22092 = !DILocation(line: 2182, column: 25, scope: !22090)
!22093 = !DILocation(line: 2182, column: 36, scope: !22090)
!22094 = !DILocation(line: 2182, column: 46, scope: !22090)
!22095 = !DILocation(line: 2182, column: 12, scope: !22074)
!22096 = !DILocation(line: 2184, column: 51, scope: !22097)
!22097 = distinct !DILexicalBlock(scope: !22090, file: !1326, line: 2183, column: 3)
!22098 = !DILocation(line: 2184, column: 45, scope: !22097)
!22099 = !DILocation(line: 2184, column: 5, scope: !22097)
!22100 = !DILocation(line: 2184, column: 16, scope: !22097)
!22101 = !DILocation(line: 2184, column: 18, scope: !22097)
!22102 = !DILocation(line: 2184, column: 33, scope: !22097)
!22103 = !DILocation(line: 2184, column: 43, scope: !22097)
!22104 = !DILocation(line: 2185, column: 3, scope: !22097)
!22105 = !DILocation(line: 2188, column: 5, scope: !22106)
!22106 = distinct !DILexicalBlock(scope: !22090, file: !1326, line: 2187, column: 3)
!22107 = !DILocation(line: 2190, column: 1, scope: !22066)
!22108 = distinct !DISubprogram(name: "vsf_sysutil_is_port_reserved", scope: !1326, file: !1326, line: 2193, type: !22109, scopeLine: 2194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22109 = !DISubroutineType(types: !22110)
!22110 = !{!19, !225}
!22111 = !DILocalVariable(name: "the_port", arg: 1, scope: !22108, file: !1326, line: 2193, type: !225)
!22112 = !DILocation(line: 2193, column: 45, scope: !22108)
!22113 = !DILocation(line: 2195, column: 7, scope: !22114)
!22114 = distinct !DILexicalBlock(scope: !22108, file: !1326, line: 2195, column: 7)
!22115 = !DILocation(line: 2195, column: 16, scope: !22114)
!22116 = !DILocation(line: 2195, column: 7, scope: !22108)
!22117 = !DILocation(line: 2197, column: 5, scope: !22118)
!22118 = distinct !DILexicalBlock(scope: !22114, file: !1326, line: 2196, column: 3)
!22119 = !DILocation(line: 2199, column: 3, scope: !22108)
!22120 = !DILocation(line: 2200, column: 1, scope: !22108)
!22121 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !1608, file: !1326, line: 2203, type: !1597)
!22122 = !DILocation(line: 2203, column: 58, scope: !1608)
!22123 = !DILocalVariable(name: "p_sockaddr", scope: !1608, file: !1326, line: 2205, type: !21037)
!22124 = !DILocation(line: 2205, column: 26, scope: !1608)
!22125 = !DILocation(line: 2205, column: 40, scope: !1608)
!22126 = !DILocation(line: 2205, column: 51, scope: !1608)
!22127 = !DILocation(line: 2205, column: 53, scope: !1608)
!22128 = !DILocation(line: 2206, column: 7, scope: !22129)
!22129 = distinct !DILexicalBlock(scope: !1608, file: !1326, line: 2206, column: 7)
!22130 = !DILocation(line: 2206, column: 19, scope: !22129)
!22131 = !DILocation(line: 2206, column: 29, scope: !22129)
!22132 = !DILocation(line: 2206, column: 7, scope: !1608)
!22133 = !DILocation(line: 2208, column: 22, scope: !22134)
!22134 = distinct !DILexicalBlock(scope: !22129, file: !1326, line: 2207, column: 3)
!22135 = !DILocation(line: 2208, column: 33, scope: !22134)
!22136 = !DILocation(line: 2208, column: 35, scope: !22134)
!22137 = !DILocation(line: 2208, column: 49, scope: !22134)
!22138 = !DILocation(line: 2208, column: 12, scope: !22134)
!22139 = !DILocation(line: 2208, column: 5, scope: !22134)
!22140 = !DILocation(line: 2210, column: 12, scope: !22141)
!22141 = distinct !DILexicalBlock(scope: !22129, file: !1326, line: 2210, column: 12)
!22142 = !DILocation(line: 2210, column: 24, scope: !22141)
!22143 = !DILocation(line: 2210, column: 34, scope: !22141)
!22144 = !DILocation(line: 2210, column: 12, scope: !22129)
!22145 = !DILocalVariable(name: "p_ret", scope: !22146, file: !1326, line: 2213, type: !88)
!22146 = distinct !DILexicalBlock(scope: !22141, file: !1326, line: 2211, column: 3)
!22147 = !DILocation(line: 2213, column: 17, scope: !22146)
!22148 = !DILocation(line: 2214, column: 36, scope: !22146)
!22149 = !DILocation(line: 2214, column: 47, scope: !22146)
!22150 = !DILocation(line: 2214, column: 49, scope: !22146)
!22151 = !DILocation(line: 2214, column: 64, scope: !22146)
!22152 = !DILocation(line: 2214, column: 35, scope: !22146)
!22153 = !DILocation(line: 2213, column: 25, scope: !22146)
!22154 = !DILocation(line: 2216, column: 40, scope: !22146)
!22155 = !DILocation(line: 2217, column: 9, scope: !22156)
!22156 = distinct !DILexicalBlock(scope: !22146, file: !1326, line: 2217, column: 9)
!22157 = !DILocation(line: 2217, column: 15, scope: !22156)
!22158 = !DILocation(line: 2217, column: 9, scope: !22146)
!22159 = !DILocation(line: 2219, column: 21, scope: !22160)
!22160 = distinct !DILexicalBlock(scope: !22156, file: !1326, line: 2218, column: 5)
!22161 = !DILocation(line: 2220, column: 5, scope: !22160)
!22162 = !DILocation(line: 2221, column: 5, scope: !22146)
!22163 = !DILocation(line: 2225, column: 5, scope: !22164)
!22164 = distinct !DILexicalBlock(scope: !22141, file: !1326, line: 2224, column: 3)
!22165 = !DILocation(line: 2226, column: 5, scope: !22164)
!22166 = !DILocation(line: 2228, column: 1, scope: !1608)
!22167 = distinct !DISubprogram(name: "vsf_sysutil_inet_ntoa", scope: !1326, file: !1326, line: 2231, type: !22168, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22168 = !DISubroutineType(types: !22169)
!22169 = !{!88, !1595}
!22170 = !DILocalVariable(name: "p_raw_addr", arg: 1, scope: !22167, file: !1326, line: 2231, type: !1595)
!22171 = !DILocation(line: 2231, column: 35, scope: !22167)
!22172 = !DILocation(line: 2233, column: 39, scope: !22167)
!22173 = !DILocation(line: 2233, column: 22, scope: !22167)
!22174 = !DILocation(line: 2233, column: 10, scope: !22167)
!22175 = !DILocation(line: 2233, column: 3, scope: !22167)
!22176 = distinct !DISubprogram(name: "vsf_sysutil_inet_aton", scope: !1326, file: !1326, line: 2237, type: !22177, scopeLine: 2238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22177 = !DISubroutineType(types: !22178)
!22178 = !{!19, !88, !1556}
!22179 = !DILocalVariable(name: "p_text", arg: 1, scope: !22176, file: !1326, line: 2237, type: !88)
!22180 = !DILocation(line: 2237, column: 35, scope: !22176)
!22181 = !DILocalVariable(name: "p_addr", arg: 2, scope: !22176, file: !1326, line: 2237, type: !1556)
!22182 = !DILocation(line: 2237, column: 72, scope: !22176)
!22183 = !DILocalVariable(name: "sin_addr", scope: !22176, file: !1326, line: 2239, type: !1462)
!22184 = !DILocation(line: 2239, column: 18, scope: !22176)
!22185 = !DILocation(line: 2240, column: 7, scope: !22186)
!22186 = distinct !DILexicalBlock(scope: !22176, file: !1326, line: 2240, column: 7)
!22187 = !DILocation(line: 2240, column: 15, scope: !22186)
!22188 = !DILocation(line: 2240, column: 17, scope: !22186)
!22189 = !DILocation(line: 2240, column: 28, scope: !22186)
!22190 = !DILocation(line: 2240, column: 38, scope: !22186)
!22191 = !DILocation(line: 2240, column: 7, scope: !22176)
!22192 = !DILocation(line: 2242, column: 5, scope: !22193)
!22193 = distinct !DILexicalBlock(scope: !22186, file: !1326, line: 2241, column: 3)
!22194 = !DILocation(line: 2243, column: 3, scope: !22193)
!22195 = !DILocation(line: 2244, column: 17, scope: !22196)
!22196 = distinct !DILexicalBlock(scope: !22176, file: !1326, line: 2244, column: 7)
!22197 = !DILocation(line: 2244, column: 7, scope: !22196)
!22198 = !DILocation(line: 2244, column: 7, scope: !22176)
!22199 = !DILocation(line: 2246, column: 25, scope: !22200)
!22200 = distinct !DILexicalBlock(scope: !22196, file: !1326, line: 2245, column: 3)
!22201 = !DILocation(line: 2246, column: 33, scope: !22200)
!22202 = !DILocation(line: 2246, column: 35, scope: !22200)
!22203 = !DILocation(line: 2246, column: 49, scope: !22200)
!22204 = !DILocation(line: 2246, column: 24, scope: !22200)
!22205 = !DILocation(line: 2247, column: 24, scope: !22200)
!22206 = !DILocation(line: 2246, column: 5, scope: !22200)
!22207 = !DILocation(line: 2248, column: 5, scope: !22200)
!22208 = !DILocation(line: 2252, column: 5, scope: !22209)
!22209 = distinct !DILexicalBlock(scope: !22196, file: !1326, line: 2251, column: 3)
!22210 = !DILocation(line: 2254, column: 1, scope: !22176)
!22211 = distinct !DISubprogram(name: "vsf_sysutil_dns_resolve", scope: !1326, file: !1326, line: 2257, type: !22212, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22212 = !DISubroutineType(types: !22213)
!22213 = !{null, !21392, !88}
!22214 = !DILocalVariable(name: "p_sockptr", arg: 1, scope: !22211, file: !1326, line: 2257, type: !21392)
!22215 = !DILocation(line: 2257, column: 55, scope: !22211)
!22216 = !DILocalVariable(name: "p_name", arg: 2, scope: !22211, file: !1326, line: 2258, type: !88)
!22217 = !DILocation(line: 2258, column: 37, scope: !22211)
!22218 = !DILocalVariable(name: "hent", scope: !22211, file: !1326, line: 2260, type: !22219)
!22219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22220, size: 64)
!22220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hostent", file: !22221, line: 98, size: 256, elements: !22222)
!22221 = !DIFile(filename: "/usr/include/netdb.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!22222 = !{!22223, !22224, !22225, !22226, !22227}
!22223 = !DIDerivedType(tag: DW_TAG_member, name: "h_name", scope: !22220, file: !22221, line: 100, baseType: !16, size: 64)
!22224 = !DIDerivedType(tag: DW_TAG_member, name: "h_aliases", scope: !22220, file: !22221, line: 101, baseType: !1490, size: 64, offset: 64)
!22225 = !DIDerivedType(tag: DW_TAG_member, name: "h_addrtype", scope: !22220, file: !22221, line: 102, baseType: !19, size: 32, offset: 128)
!22226 = !DIDerivedType(tag: DW_TAG_member, name: "h_length", scope: !22220, file: !22221, line: 103, baseType: !19, size: 32, offset: 160)
!22227 = !DIDerivedType(tag: DW_TAG_member, name: "h_addr_list", scope: !22220, file: !22221, line: 104, baseType: !1490, size: 64, offset: 192)
!22228 = !DILocation(line: 2260, column: 19, scope: !22211)
!22229 = !DILocation(line: 2260, column: 40, scope: !22211)
!22230 = !DILocation(line: 2260, column: 26, scope: !22211)
!22231 = !DILocation(line: 2261, column: 7, scope: !22232)
!22232 = distinct !DILexicalBlock(scope: !22211, file: !1326, line: 2261, column: 7)
!22233 = !DILocation(line: 2261, column: 12, scope: !22232)
!22234 = !DILocation(line: 2261, column: 7, scope: !22211)
!22235 = !DILocation(line: 2263, column: 34, scope: !22236)
!22236 = distinct !DILexicalBlock(scope: !22232, file: !1326, line: 2262, column: 3)
!22237 = !DILocation(line: 2263, column: 5, scope: !22236)
!22238 = !DILocation(line: 2264, column: 3, scope: !22236)
!22239 = !DILocation(line: 2265, column: 30, scope: !22211)
!22240 = !DILocation(line: 2265, column: 3, scope: !22211)
!22241 = !DILocation(line: 2266, column: 7, scope: !22242)
!22242 = distinct !DILexicalBlock(scope: !22211, file: !1326, line: 2266, column: 7)
!22243 = !DILocation(line: 2266, column: 13, scope: !22242)
!22244 = !DILocation(line: 2266, column: 24, scope: !22242)
!22245 = !DILocation(line: 2266, column: 7, scope: !22211)
!22246 = !DILocalVariable(name: "len", scope: !22247, file: !1326, line: 2268, type: !26)
!22247 = distinct !DILexicalBlock(scope: !22242, file: !1326, line: 2267, column: 3)
!22248 = !DILocation(line: 2268, column: 18, scope: !22247)
!22249 = !DILocation(line: 2268, column: 24, scope: !22247)
!22250 = !DILocation(line: 2268, column: 30, scope: !22247)
!22251 = !DILocation(line: 2269, column: 9, scope: !22252)
!22252 = distinct !DILexicalBlock(scope: !22247, file: !1326, line: 2269, column: 9)
!22253 = !DILocation(line: 2269, column: 13, scope: !22252)
!22254 = !DILocation(line: 2269, column: 9, scope: !22247)
!22255 = !DILocation(line: 2271, column: 11, scope: !22256)
!22256 = distinct !DILexicalBlock(scope: !22252, file: !1326, line: 2270, column: 5)
!22257 = !DILocation(line: 2272, column: 5, scope: !22256)
!22258 = !DILocation(line: 2273, column: 37, scope: !22247)
!22259 = !DILocation(line: 2273, column: 5, scope: !22247)
!22260 = !DILocation(line: 2274, column: 27, scope: !22247)
!22261 = !DILocation(line: 2274, column: 26, scope: !22247)
!22262 = !DILocation(line: 2274, column: 39, scope: !22247)
!22263 = !DILocation(line: 2274, column: 41, scope: !22247)
!22264 = !DILocation(line: 2274, column: 55, scope: !22247)
!22265 = !DILocation(line: 2274, column: 24, scope: !22247)
!22266 = !DILocation(line: 2275, column: 24, scope: !22247)
!22267 = !DILocation(line: 2275, column: 30, scope: !22247)
!22268 = !DILocation(line: 2275, column: 46, scope: !22247)
!22269 = !DILocation(line: 2274, column: 5, scope: !22247)
!22270 = !DILocation(line: 2276, column: 3, scope: !22247)
!22271 = !DILocation(line: 2277, column: 12, scope: !22272)
!22272 = distinct !DILexicalBlock(scope: !22242, file: !1326, line: 2277, column: 12)
!22273 = !DILocation(line: 2277, column: 18, scope: !22272)
!22274 = !DILocation(line: 2277, column: 29, scope: !22272)
!22275 = !DILocation(line: 2277, column: 12, scope: !22242)
!22276 = !DILocalVariable(name: "len", scope: !22277, file: !1326, line: 2279, type: !26)
!22277 = distinct !DILexicalBlock(scope: !22272, file: !1326, line: 2278, column: 3)
!22278 = !DILocation(line: 2279, column: 18, scope: !22277)
!22279 = !DILocation(line: 2279, column: 24, scope: !22277)
!22280 = !DILocation(line: 2279, column: 30, scope: !22277)
!22281 = !DILocation(line: 2280, column: 9, scope: !22282)
!22282 = distinct !DILexicalBlock(scope: !22277, file: !1326, line: 2280, column: 9)
!22283 = !DILocation(line: 2280, column: 13, scope: !22282)
!22284 = !DILocation(line: 2280, column: 9, scope: !22277)
!22285 = !DILocation(line: 2282, column: 11, scope: !22286)
!22286 = distinct !DILexicalBlock(scope: !22282, file: !1326, line: 2281, column: 5)
!22287 = !DILocation(line: 2283, column: 5, scope: !22286)
!22288 = !DILocation(line: 2284, column: 37, scope: !22277)
!22289 = !DILocation(line: 2284, column: 5, scope: !22277)
!22290 = !DILocation(line: 2285, column: 27, scope: !22277)
!22291 = !DILocation(line: 2285, column: 26, scope: !22277)
!22292 = !DILocation(line: 2285, column: 39, scope: !22277)
!22293 = !DILocation(line: 2285, column: 41, scope: !22277)
!22294 = !DILocation(line: 2285, column: 56, scope: !22277)
!22295 = !DILocation(line: 2285, column: 24, scope: !22277)
!22296 = !DILocation(line: 2286, column: 24, scope: !22277)
!22297 = !DILocation(line: 2286, column: 30, scope: !22277)
!22298 = !DILocation(line: 2286, column: 46, scope: !22277)
!22299 = !DILocation(line: 2285, column: 5, scope: !22277)
!22300 = !DILocation(line: 2287, column: 3, scope: !22277)
!22301 = !DILocation(line: 2290, column: 5, scope: !22302)
!22302 = distinct !DILexicalBlock(scope: !22272, file: !1326, line: 2289, column: 3)
!22303 = !DILocation(line: 2292, column: 1, scope: !22211)
!22304 = distinct !DISubprogram(name: "vsf_sysutil_getpwuid", scope: !1326, file: !1326, line: 2295, type: !22305, scopeLine: 2296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22305 = !DISubroutineType(types: !22306)
!22306 = !{!1465, !1782}
!22307 = !DILocalVariable(name: "uid", arg: 1, scope: !22304, file: !1326, line: 2295, type: !1782)
!22308 = !DILocation(line: 2295, column: 32, scope: !22304)
!22309 = !DILocation(line: 2297, column: 7, scope: !22310)
!22310 = distinct !DILexicalBlock(scope: !22304, file: !1326, line: 2297, column: 7)
!22311 = !DILocation(line: 2297, column: 11, scope: !22310)
!22312 = !DILocation(line: 2297, column: 7, scope: !22304)
!22313 = !DILocation(line: 2299, column: 5, scope: !22314)
!22314 = distinct !DILexicalBlock(scope: !22310, file: !1326, line: 2298, column: 3)
!22315 = !DILocation(line: 2300, column: 3, scope: !22314)
!22316 = !DILocation(line: 2301, column: 61, scope: !22304)
!22317 = !DILocation(line: 2301, column: 37, scope: !22304)
!22318 = !DILocation(line: 2301, column: 10, scope: !22304)
!22319 = !DILocation(line: 2301, column: 3, scope: !22304)
!22320 = distinct !DISubprogram(name: "vsf_sysutil_getpwnam", scope: !1326, file: !1326, line: 2305, type: !22321, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22321 = !DISubroutineType(types: !22322)
!22322 = !{!1465, !88}
!22323 = !DILocalVariable(name: "p_user", arg: 1, scope: !22320, file: !1326, line: 2305, type: !88)
!22324 = !DILocation(line: 2305, column: 34, scope: !22320)
!22325 = !DILocation(line: 2307, column: 46, scope: !22320)
!22326 = !DILocation(line: 2307, column: 37, scope: !22320)
!22327 = !DILocation(line: 2307, column: 10, scope: !22320)
!22328 = !DILocation(line: 2307, column: 3, scope: !22320)
!22329 = distinct !DISubprogram(name: "vsf_sysutil_user_getname", scope: !1326, file: !1326, line: 2311, type: !22330, scopeLine: 2312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22330 = !DISubroutineType(types: !22331)
!22331 = !{!88, !2385}
!22332 = !DILocalVariable(name: "p_user", arg: 1, scope: !22329, file: !1326, line: 2311, type: !2385)
!22333 = !DILocation(line: 2311, column: 57, scope: !22329)
!22334 = !DILocalVariable(name: "p_passwd", scope: !22329, file: !1326, line: 2313, type: !1467)
!22335 = !DILocation(line: 2313, column: 24, scope: !22329)
!22336 = !DILocation(line: 2313, column: 58, scope: !22329)
!22337 = !DILocation(line: 2313, column: 35, scope: !22329)
!22338 = !DILocation(line: 2314, column: 10, scope: !22329)
!22339 = !DILocation(line: 2314, column: 20, scope: !22329)
!22340 = !DILocation(line: 2314, column: 3, scope: !22329)
!22341 = distinct !DISubprogram(name: "vsf_sysutil_user_get_homedir", scope: !1326, file: !1326, line: 2318, type: !22330, scopeLine: 2319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22342 = !DILocalVariable(name: "p_user", arg: 1, scope: !22341, file: !1326, line: 2318, type: !2385)
!22343 = !DILocation(line: 2318, column: 61, scope: !22341)
!22344 = !DILocalVariable(name: "p_passwd", scope: !22341, file: !1326, line: 2320, type: !1467)
!22345 = !DILocation(line: 2320, column: 24, scope: !22341)
!22346 = !DILocation(line: 2320, column: 58, scope: !22341)
!22347 = !DILocation(line: 2320, column: 35, scope: !22341)
!22348 = !DILocation(line: 2321, column: 10, scope: !22341)
!22349 = !DILocation(line: 2321, column: 20, scope: !22341)
!22350 = !DILocation(line: 2321, column: 3, scope: !22341)
!22351 = distinct !DISubprogram(name: "vsf_sysutil_user_getuid", scope: !1326, file: !1326, line: 2325, type: !22352, scopeLine: 2326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22352 = !DISubroutineType(types: !22353)
!22353 = !{!19, !2385}
!22354 = !DILocalVariable(name: "p_user", arg: 1, scope: !22351, file: !1326, line: 2325, type: !2385)
!22355 = !DILocation(line: 2325, column: 56, scope: !22351)
!22356 = !DILocalVariable(name: "p_passwd", scope: !22351, file: !1326, line: 2327, type: !1467)
!22357 = !DILocation(line: 2327, column: 24, scope: !22351)
!22358 = !DILocation(line: 2327, column: 58, scope: !22351)
!22359 = !DILocation(line: 2327, column: 35, scope: !22351)
!22360 = !DILocation(line: 2328, column: 10, scope: !22351)
!22361 = !DILocation(line: 2328, column: 20, scope: !22351)
!22362 = !DILocation(line: 2328, column: 3, scope: !22351)
!22363 = distinct !DISubprogram(name: "vsf_sysutil_user_getgid", scope: !1326, file: !1326, line: 2332, type: !22352, scopeLine: 2333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22364 = !DILocalVariable(name: "p_user", arg: 1, scope: !22363, file: !1326, line: 2332, type: !2385)
!22365 = !DILocation(line: 2332, column: 56, scope: !22363)
!22366 = !DILocalVariable(name: "p_passwd", scope: !22363, file: !1326, line: 2334, type: !1467)
!22367 = !DILocation(line: 2334, column: 24, scope: !22363)
!22368 = !DILocation(line: 2334, column: 58, scope: !22363)
!22369 = !DILocation(line: 2334, column: 35, scope: !22363)
!22370 = !DILocation(line: 2335, column: 10, scope: !22363)
!22371 = !DILocation(line: 2335, column: 20, scope: !22363)
!22372 = !DILocation(line: 2335, column: 3, scope: !22363)
!22373 = distinct !DISubprogram(name: "vsf_sysutil_getgrgid", scope: !1326, file: !1326, line: 2339, type: !22374, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22374 = !DISubroutineType(types: !22375)
!22375 = !{!1479, !1782}
!22376 = !DILocalVariable(name: "gid", arg: 1, scope: !22373, file: !1326, line: 2339, type: !1782)
!22377 = !DILocation(line: 2339, column: 32, scope: !22373)
!22378 = !DILocation(line: 2341, column: 7, scope: !22379)
!22379 = distinct !DILexicalBlock(scope: !22373, file: !1326, line: 2341, column: 7)
!22380 = !DILocation(line: 2341, column: 11, scope: !22379)
!22381 = !DILocation(line: 2341, column: 7, scope: !22373)
!22382 = !DILocation(line: 2343, column: 5, scope: !22383)
!22383 = distinct !DILexicalBlock(scope: !22379, file: !1326, line: 2342, column: 3)
!22384 = !DILocation(line: 2344, column: 3, scope: !22383)
!22385 = !DILocation(line: 2345, column: 62, scope: !22373)
!22386 = !DILocation(line: 2345, column: 38, scope: !22373)
!22387 = !DILocation(line: 2345, column: 10, scope: !22373)
!22388 = !DILocation(line: 2345, column: 3, scope: !22373)
!22389 = distinct !DISubprogram(name: "vsf_sysutil_group_getname", scope: !1326, file: !1326, line: 2349, type: !22390, scopeLine: 2350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22390 = !DISubroutineType(types: !22391)
!22391 = !{!88, !22392}
!22392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22393, size: 64)
!22393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1480)
!22394 = !DILocalVariable(name: "p_group", arg: 1, scope: !22389, file: !1326, line: 2349, type: !22392)
!22395 = !DILocation(line: 2349, column: 59, scope: !22389)
!22396 = !DILocalVariable(name: "p_grp", scope: !22389, file: !1326, line: 2351, type: !1481)
!22397 = !DILocation(line: 2351, column: 23, scope: !22389)
!22398 = !DILocation(line: 2351, column: 53, scope: !22389)
!22399 = !DILocation(line: 2351, column: 31, scope: !22389)
!22400 = !DILocation(line: 2352, column: 10, scope: !22389)
!22401 = !DILocation(line: 2352, column: 17, scope: !22389)
!22402 = !DILocation(line: 2352, column: 3, scope: !22389)
!22403 = !DILocalVariable(name: "uint_res", scope: !1613, file: !1326, line: 2359, type: !26)
!22404 = !DILocation(line: 2359, column: 16, scope: !1613)
!22405 = !DILocalVariable(name: "c1", scope: !1613, file: !1326, line: 2360, type: !1076)
!22406 = !DILocation(line: 2360, column: 17, scope: !1613)
!22407 = !DILocalVariable(name: "c2", scope: !1613, file: !1326, line: 2360, type: !1076)
!22408 = !DILocation(line: 2360, column: 21, scope: !1613)
!22409 = !DILocalVariable(name: "c3", scope: !1613, file: !1326, line: 2360, type: !1076)
!22410 = !DILocation(line: 2360, column: 25, scope: !1613)
!22411 = !DILocalVariable(name: "c4", scope: !1613, file: !1326, line: 2360, type: !1076)
!22412 = !DILocation(line: 2360, column: 29, scope: !1613)
!22413 = !DILocation(line: 2361, column: 8, scope: !22414)
!22414 = distinct !DILexicalBlock(scope: !1613, file: !1326, line: 2361, column: 7)
!22415 = !DILocation(line: 2361, column: 7, scope: !1613)
!22416 = !DILocalVariable(name: "tv", scope: !22417, file: !1326, line: 2363, type: !1633)
!22417 = distinct !DILexicalBlock(scope: !22414, file: !1326, line: 2362, column: 3)
!22418 = !DILocation(line: 2363, column: 20, scope: !22417)
!22419 = !DILocalVariable(name: "retval", scope: !22417, file: !1326, line: 2364, type: !19)
!22420 = !DILocation(line: 2364, column: 9, scope: !22417)
!22421 = !DILocation(line: 2364, column: 18, scope: !22417)
!22422 = !DILocation(line: 2365, column: 9, scope: !22423)
!22423 = distinct !DILexicalBlock(scope: !22417, file: !1326, line: 2365, column: 9)
!22424 = !DILocation(line: 2365, column: 16, scope: !22423)
!22425 = !DILocation(line: 2365, column: 9, scope: !22417)
!22426 = !DILocation(line: 2367, column: 7, scope: !22427)
!22427 = distinct !DILexicalBlock(scope: !22423, file: !1326, line: 2366, column: 5)
!22428 = !DILocation(line: 2368, column: 5, scope: !22427)
!22429 = !DILocation(line: 2369, column: 24, scope: !22417)
!22430 = !DILocation(line: 2369, column: 11, scope: !22417)
!22431 = !DILocation(line: 2369, column: 5, scope: !22417)
!22432 = !DILocation(line: 2370, column: 12, scope: !22417)
!22433 = !DILocation(line: 2371, column: 3, scope: !22417)
!22434 = !DILocation(line: 2372, column: 14, scope: !1613)
!22435 = !DILocation(line: 2372, column: 12, scope: !1613)
!22436 = !DILocation(line: 2373, column: 8, scope: !1613)
!22437 = !DILocation(line: 2373, column: 17, scope: !1613)
!22438 = !DILocation(line: 2373, column: 6, scope: !1613)
!22439 = !DILocation(line: 2374, column: 9, scope: !1613)
!22440 = !DILocation(line: 2374, column: 18, scope: !1613)
!22441 = !DILocation(line: 2374, column: 24, scope: !1613)
!22442 = !DILocation(line: 2374, column: 8, scope: !1613)
!22443 = !DILocation(line: 2374, column: 6, scope: !1613)
!22444 = !DILocation(line: 2375, column: 9, scope: !1613)
!22445 = !DILocation(line: 2375, column: 18, scope: !1613)
!22446 = !DILocation(line: 2375, column: 25, scope: !1613)
!22447 = !DILocation(line: 2375, column: 8, scope: !1613)
!22448 = !DILocation(line: 2375, column: 6, scope: !1613)
!22449 = !DILocation(line: 2376, column: 9, scope: !1613)
!22450 = !DILocation(line: 2376, column: 18, scope: !1613)
!22451 = !DILocation(line: 2376, column: 25, scope: !1613)
!22452 = !DILocation(line: 2376, column: 8, scope: !1613)
!22453 = !DILocation(line: 2376, column: 6, scope: !1613)
!22454 = !DILocation(line: 2377, column: 10, scope: !1613)
!22455 = !DILocation(line: 2377, column: 15, scope: !1613)
!22456 = !DILocation(line: 2377, column: 13, scope: !1613)
!22457 = !DILocation(line: 2377, column: 20, scope: !1613)
!22458 = !DILocation(line: 2377, column: 18, scope: !1613)
!22459 = !DILocation(line: 2377, column: 25, scope: !1613)
!22460 = !DILocation(line: 2377, column: 23, scope: !1613)
!22461 = !DILocation(line: 2377, column: 3, scope: !1613)
!22462 = distinct !DISubprogram(name: "vsf_sysutil_running_as_root", scope: !1326, file: !1326, line: 2381, type: !1713, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22463 = !DILocation(line: 2383, column: 11, scope: !22462)
!22464 = !DILocation(line: 2383, column: 20, scope: !22462)
!22465 = !DILocation(line: 2383, column: 3, scope: !22462)
!22466 = distinct !DISubprogram(name: "vsf_sysutil_setuid", scope: !1326, file: !1326, line: 2387, type: !22467, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22467 = !DISubroutineType(types: !22468)
!22468 = !{null, !2385}
!22469 = !DILocalVariable(name: "p_user", arg: 1, scope: !22466, file: !1326, line: 2387, type: !2385)
!22470 = !DILocation(line: 2387, column: 51, scope: !22466)
!22471 = !DILocalVariable(name: "p_passwd", scope: !22466, file: !1326, line: 2389, type: !1467)
!22472 = !DILocation(line: 2389, column: 24, scope: !22466)
!22473 = !DILocation(line: 2389, column: 58, scope: !22466)
!22474 = !DILocation(line: 2389, column: 35, scope: !22466)
!22475 = !DILocation(line: 2390, column: 30, scope: !22466)
!22476 = !DILocation(line: 2390, column: 40, scope: !22466)
!22477 = !DILocation(line: 2390, column: 3, scope: !22466)
!22478 = !DILocation(line: 2391, column: 1, scope: !22466)
!22479 = distinct !DISubprogram(name: "vsf_sysutil_setuid_numeric", scope: !1326, file: !1326, line: 2394, type: !1406, scopeLine: 2395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22480 = !DILocalVariable(name: "uid", arg: 1, scope: !22479, file: !1326, line: 2394, type: !19)
!22481 = !DILocation(line: 2394, column: 32, scope: !22479)
!22482 = !DILocalVariable(name: "retval", scope: !22479, file: !1326, line: 2396, type: !19)
!22483 = !DILocation(line: 2396, column: 7, scope: !22479)
!22484 = !DILocation(line: 2396, column: 23, scope: !22479)
!22485 = !DILocation(line: 2396, column: 16, scope: !22479)
!22486 = !DILocation(line: 2397, column: 7, scope: !22487)
!22487 = distinct !DILexicalBlock(scope: !22479, file: !1326, line: 2397, column: 7)
!22488 = !DILocation(line: 2397, column: 14, scope: !22487)
!22489 = !DILocation(line: 2397, column: 7, scope: !22479)
!22490 = !DILocation(line: 2399, column: 5, scope: !22491)
!22491 = distinct !DILexicalBlock(scope: !22487, file: !1326, line: 2398, column: 3)
!22492 = !DILocation(line: 2400, column: 3, scope: !22491)
!22493 = !DILocation(line: 2401, column: 1, scope: !22479)
!22494 = distinct !DISubprogram(name: "vsf_sysutil_setgid", scope: !1326, file: !1326, line: 2404, type: !22467, scopeLine: 2405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22495 = !DILocalVariable(name: "p_user", arg: 1, scope: !22494, file: !1326, line: 2404, type: !2385)
!22496 = !DILocation(line: 2404, column: 51, scope: !22494)
!22497 = !DILocalVariable(name: "p_passwd", scope: !22494, file: !1326, line: 2406, type: !1467)
!22498 = !DILocation(line: 2406, column: 24, scope: !22494)
!22499 = !DILocation(line: 2406, column: 58, scope: !22494)
!22500 = !DILocation(line: 2406, column: 35, scope: !22494)
!22501 = !DILocation(line: 2407, column: 30, scope: !22494)
!22502 = !DILocation(line: 2407, column: 40, scope: !22494)
!22503 = !DILocation(line: 2407, column: 3, scope: !22494)
!22504 = !DILocation(line: 2408, column: 1, scope: !22494)
!22505 = distinct !DISubprogram(name: "vsf_sysutil_setgid_numeric", scope: !1326, file: !1326, line: 2411, type: !1406, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22506 = !DILocalVariable(name: "gid", arg: 1, scope: !22505, file: !1326, line: 2411, type: !19)
!22507 = !DILocation(line: 2411, column: 32, scope: !22505)
!22508 = !DILocalVariable(name: "retval", scope: !22505, file: !1326, line: 2413, type: !19)
!22509 = !DILocation(line: 2413, column: 7, scope: !22505)
!22510 = !DILocation(line: 2413, column: 23, scope: !22505)
!22511 = !DILocation(line: 2413, column: 16, scope: !22505)
!22512 = !DILocation(line: 2414, column: 7, scope: !22513)
!22513 = distinct !DILexicalBlock(scope: !22505, file: !1326, line: 2414, column: 7)
!22514 = !DILocation(line: 2414, column: 14, scope: !22513)
!22515 = !DILocation(line: 2414, column: 7, scope: !22505)
!22516 = !DILocation(line: 2416, column: 5, scope: !22517)
!22517 = distinct !DILexicalBlock(scope: !22513, file: !1326, line: 2415, column: 3)
!22518 = !DILocation(line: 2417, column: 3, scope: !22517)
!22519 = !DILocation(line: 2418, column: 1, scope: !22505)
!22520 = distinct !DISubprogram(name: "vsf_sysutil_geteuid", scope: !1326, file: !1326, line: 2421, type: !1713, scopeLine: 2422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22521 = !DILocalVariable(name: "retval", scope: !22520, file: !1326, line: 2423, type: !19)
!22522 = !DILocation(line: 2423, column: 7, scope: !22520)
!22523 = !DILocation(line: 2423, column: 16, scope: !22520)
!22524 = !DILocation(line: 2424, column: 7, scope: !22525)
!22525 = distinct !DILexicalBlock(scope: !22520, file: !1326, line: 2424, column: 7)
!22526 = !DILocation(line: 2424, column: 14, scope: !22525)
!22527 = !DILocation(line: 2424, column: 7, scope: !22520)
!22528 = !DILocation(line: 2426, column: 5, scope: !22529)
!22529 = distinct !DILexicalBlock(scope: !22525, file: !1326, line: 2425, column: 3)
!22530 = !DILocation(line: 2427, column: 3, scope: !22529)
!22531 = !DILocation(line: 2428, column: 10, scope: !22520)
!22532 = !DILocation(line: 2428, column: 3, scope: !22520)
!22533 = distinct !DISubprogram(name: "vsf_sysutil_getegid", scope: !1326, file: !1326, line: 2432, type: !1713, scopeLine: 2433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22534 = !DILocalVariable(name: "retval", scope: !22533, file: !1326, line: 2434, type: !19)
!22535 = !DILocation(line: 2434, column: 7, scope: !22533)
!22536 = !DILocation(line: 2434, column: 16, scope: !22533)
!22537 = !DILocation(line: 2435, column: 7, scope: !22538)
!22538 = distinct !DILexicalBlock(scope: !22533, file: !1326, line: 2435, column: 7)
!22539 = !DILocation(line: 2435, column: 14, scope: !22538)
!22540 = !DILocation(line: 2435, column: 7, scope: !22533)
!22541 = !DILocation(line: 2437, column: 5, scope: !22542)
!22542 = distinct !DILexicalBlock(scope: !22538, file: !1326, line: 2436, column: 3)
!22543 = !DILocation(line: 2438, column: 3, scope: !22542)
!22544 = !DILocation(line: 2439, column: 10, scope: !22533)
!22545 = !DILocation(line: 2439, column: 3, scope: !22533)
!22546 = distinct !DISubprogram(name: "vsf_sysutil_seteuid", scope: !1326, file: !1326, line: 2443, type: !22467, scopeLine: 2444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22547 = !DILocalVariable(name: "p_user", arg: 1, scope: !22546, file: !1326, line: 2443, type: !2385)
!22548 = !DILocation(line: 2443, column: 52, scope: !22546)
!22549 = !DILocalVariable(name: "p_passwd", scope: !22546, file: !1326, line: 2445, type: !1467)
!22550 = !DILocation(line: 2445, column: 24, scope: !22546)
!22551 = !DILocation(line: 2445, column: 58, scope: !22546)
!22552 = !DILocation(line: 2445, column: 35, scope: !22546)
!22553 = !DILocation(line: 2446, column: 31, scope: !22546)
!22554 = !DILocation(line: 2446, column: 41, scope: !22546)
!22555 = !DILocation(line: 2446, column: 3, scope: !22546)
!22556 = !DILocation(line: 2447, column: 1, scope: !22546)
!22557 = distinct !DISubprogram(name: "vsf_sysutil_seteuid_numeric", scope: !1326, file: !1326, line: 2457, type: !1406, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22558 = !DILocalVariable(name: "uid", arg: 1, scope: !22557, file: !1326, line: 2457, type: !19)
!22559 = !DILocation(line: 2457, column: 33, scope: !22557)
!22560 = !DILocalVariable(name: "retval", scope: !22557, file: !1326, line: 2460, type: !19)
!22561 = !DILocation(line: 2460, column: 7, scope: !22557)
!22562 = !DILocation(line: 2460, column: 29, scope: !22557)
!22563 = !DILocation(line: 2460, column: 16, scope: !22557)
!22564 = !DILocation(line: 2461, column: 7, scope: !22565)
!22565 = distinct !DILexicalBlock(scope: !22557, file: !1326, line: 2461, column: 7)
!22566 = !DILocation(line: 2461, column: 14, scope: !22565)
!22567 = !DILocation(line: 2461, column: 7, scope: !22557)
!22568 = !DILocation(line: 2463, column: 5, scope: !22569)
!22569 = distinct !DILexicalBlock(scope: !22565, file: !1326, line: 2462, column: 3)
!22570 = !DILocation(line: 2464, column: 3, scope: !22569)
!22571 = !DILocation(line: 2465, column: 1, scope: !22557)
!22572 = distinct !DISubprogram(name: "vsf_sysutil_setegid", scope: !1326, file: !1326, line: 2450, type: !22467, scopeLine: 2451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22573 = !DILocalVariable(name: "p_user", arg: 1, scope: !22572, file: !1326, line: 2450, type: !2385)
!22574 = !DILocation(line: 2450, column: 52, scope: !22572)
!22575 = !DILocalVariable(name: "p_passwd", scope: !22572, file: !1326, line: 2452, type: !1467)
!22576 = !DILocation(line: 2452, column: 24, scope: !22572)
!22577 = !DILocation(line: 2452, column: 58, scope: !22572)
!22578 = !DILocation(line: 2452, column: 35, scope: !22572)
!22579 = !DILocation(line: 2453, column: 31, scope: !22572)
!22580 = !DILocation(line: 2453, column: 41, scope: !22572)
!22581 = !DILocation(line: 2453, column: 3, scope: !22572)
!22582 = !DILocation(line: 2454, column: 1, scope: !22572)
!22583 = distinct !DISubprogram(name: "vsf_sysutil_setegid_numeric", scope: !1326, file: !1326, line: 2468, type: !1406, scopeLine: 2469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22584 = !DILocalVariable(name: "gid", arg: 1, scope: !22583, file: !1326, line: 2468, type: !19)
!22585 = !DILocation(line: 2468, column: 33, scope: !22583)
!22586 = !DILocalVariable(name: "retval", scope: !22583, file: !1326, line: 2471, type: !19)
!22587 = !DILocation(line: 2471, column: 7, scope: !22583)
!22588 = !DILocation(line: 2471, column: 29, scope: !22583)
!22589 = !DILocation(line: 2471, column: 16, scope: !22583)
!22590 = !DILocation(line: 2472, column: 7, scope: !22591)
!22591 = distinct !DILexicalBlock(scope: !22583, file: !1326, line: 2472, column: 7)
!22592 = !DILocation(line: 2472, column: 14, scope: !22591)
!22593 = !DILocation(line: 2472, column: 7, scope: !22583)
!22594 = !DILocation(line: 2474, column: 5, scope: !22595)
!22595 = distinct !DILexicalBlock(scope: !22591, file: !1326, line: 2473, column: 3)
!22596 = !DILocation(line: 2475, column: 3, scope: !22595)
!22597 = !DILocation(line: 2476, column: 1, scope: !22583)
!22598 = distinct !DISubprogram(name: "vsf_sysutil_clear_supp_groups", scope: !1326, file: !1326, line: 2479, type: !1619, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22599 = !DILocalVariable(name: "retval", scope: !22598, file: !1326, line: 2481, type: !19)
!22600 = !DILocation(line: 2481, column: 7, scope: !22598)
!22601 = !DILocation(line: 2481, column: 16, scope: !22598)
!22602 = !DILocation(line: 2482, column: 7, scope: !22603)
!22603 = distinct !DILexicalBlock(scope: !22598, file: !1326, line: 2482, column: 7)
!22604 = !DILocation(line: 2482, column: 14, scope: !22603)
!22605 = !DILocation(line: 2482, column: 7, scope: !22598)
!22606 = !DILocation(line: 2484, column: 5, scope: !22607)
!22607 = distinct !DILexicalBlock(scope: !22603, file: !1326, line: 2483, column: 3)
!22608 = !DILocation(line: 2485, column: 3, scope: !22607)
!22609 = !DILocation(line: 2486, column: 1, scope: !22598)
!22610 = distinct !DISubprogram(name: "vsf_sysutil_initgroups", scope: !1326, file: !1326, line: 2489, type: !22467, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22611 = !DILocalVariable(name: "p_user", arg: 1, scope: !22610, file: !1326, line: 2489, type: !2385)
!22612 = !DILocation(line: 2489, column: 55, scope: !22610)
!22613 = !DILocalVariable(name: "p_passwd", scope: !22610, file: !1326, line: 2491, type: !1467)
!22614 = !DILocation(line: 2491, column: 24, scope: !22610)
!22615 = !DILocation(line: 2491, column: 58, scope: !22610)
!22616 = !DILocation(line: 2491, column: 35, scope: !22610)
!22617 = !DILocalVariable(name: "retval", scope: !22610, file: !1326, line: 2492, type: !19)
!22618 = !DILocation(line: 2492, column: 7, scope: !22610)
!22619 = !DILocation(line: 2492, column: 27, scope: !22610)
!22620 = !DILocation(line: 2492, column: 37, scope: !22610)
!22621 = !DILocation(line: 2492, column: 46, scope: !22610)
!22622 = !DILocation(line: 2492, column: 56, scope: !22610)
!22623 = !DILocation(line: 2492, column: 16, scope: !22610)
!22624 = !DILocation(line: 2493, column: 7, scope: !22625)
!22625 = distinct !DILexicalBlock(scope: !22610, file: !1326, line: 2493, column: 7)
!22626 = !DILocation(line: 2493, column: 14, scope: !22625)
!22627 = !DILocation(line: 2493, column: 7, scope: !22610)
!22628 = !DILocation(line: 2495, column: 5, scope: !22629)
!22629 = distinct !DILexicalBlock(scope: !22625, file: !1326, line: 2494, column: 3)
!22630 = !DILocation(line: 2496, column: 3, scope: !22629)
!22631 = !DILocation(line: 2497, column: 1, scope: !22610)
!22632 = distinct !DISubprogram(name: "vsf_sysutil_chroot", scope: !1326, file: !1326, line: 2500, type: !2486, scopeLine: 2501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22633 = !DILocalVariable(name: "p_root_path", arg: 1, scope: !22632, file: !1326, line: 2500, type: !88)
!22634 = !DILocation(line: 2500, column: 32, scope: !22632)
!22635 = !DILocalVariable(name: "retval", scope: !22632, file: !1326, line: 2502, type: !19)
!22636 = !DILocation(line: 2502, column: 7, scope: !22632)
!22637 = !DILocation(line: 2502, column: 23, scope: !22632)
!22638 = !DILocation(line: 2502, column: 16, scope: !22632)
!22639 = !DILocation(line: 2503, column: 7, scope: !22640)
!22640 = distinct !DILexicalBlock(scope: !22632, file: !1326, line: 2503, column: 7)
!22641 = !DILocation(line: 2503, column: 14, scope: !22640)
!22642 = !DILocation(line: 2503, column: 7, scope: !22632)
!22643 = !DILocation(line: 2505, column: 5, scope: !22644)
!22644 = distinct !DILexicalBlock(scope: !22640, file: !1326, line: 2504, column: 3)
!22645 = !DILocation(line: 2506, column: 3, scope: !22644)
!22646 = !DILocation(line: 2507, column: 1, scope: !22632)
!22647 = distinct !DISubprogram(name: "vsf_sysutil_get_umask", scope: !1326, file: !1326, line: 2510, type: !1520, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22648 = !DILocation(line: 2512, column: 10, scope: !22647)
!22649 = !DILocation(line: 2512, column: 3, scope: !22647)
!22650 = distinct !DISubprogram(name: "vsf_sysutil_set_umask", scope: !1326, file: !1326, line: 2516, type: !22651, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22651 = !DISubroutineType(types: !22652)
!22652 = !{null, !26}
!22653 = !DILocalVariable(name: "new_umask", arg: 1, scope: !22650, file: !1326, line: 2516, type: !26)
!22654 = !DILocation(line: 2516, column: 36, scope: !22650)
!22655 = !DILocation(line: 2518, column: 22, scope: !22650)
!22656 = !DILocation(line: 2518, column: 32, scope: !22650)
!22657 = !DILocation(line: 2518, column: 19, scope: !22650)
!22658 = !DILocation(line: 2519, column: 16, scope: !22650)
!22659 = !DILocation(line: 2519, column: 10, scope: !22650)
!22660 = !DILocation(line: 2520, column: 1, scope: !22650)
!22661 = distinct !DISubprogram(name: "vsf_sysutil_make_session_leader", scope: !1326, file: !1326, line: 2523, type: !1619, scopeLine: 2524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22662 = !DILocation(line: 2526, column: 10, scope: !22661)
!22663 = !DILocation(line: 2528, column: 13, scope: !22664)
!22664 = distinct !DILexicalBlock(scope: !22661, file: !1326, line: 2528, column: 7)
!22665 = !DILocation(line: 2528, column: 37, scope: !22664)
!22666 = !DILocation(line: 2528, column: 34, scope: !22664)
!22667 = !DILocation(line: 2528, column: 7, scope: !22661)
!22668 = !DILocation(line: 2530, column: 5, scope: !22669)
!22669 = distinct !DILexicalBlock(scope: !22664, file: !1326, line: 2529, column: 3)
!22670 = !DILocation(line: 2531, column: 3, scope: !22669)
!22671 = !DILocation(line: 2532, column: 1, scope: !22661)
!22672 = distinct !DISubprogram(name: "vsf_sysutil_reopen_standard_fds", scope: !1326, file: !1326, line: 2535, type: !1619, scopeLine: 2536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22673 = !DILocalVariable(name: "fd", scope: !22672, file: !1326, line: 2538, type: !19)
!22674 = !DILocation(line: 2538, column: 7, scope: !22672)
!22675 = !DILocation(line: 2539, column: 13, scope: !22676)
!22676 = distinct !DILexicalBlock(scope: !22672, file: !1326, line: 2539, column: 7)
!22677 = !DILocation(line: 2539, column: 11, scope: !22676)
!22678 = !DILocation(line: 2539, column: 43, scope: !22676)
!22679 = !DILocation(line: 2539, column: 7, scope: !22672)
!22680 = !DILocation(line: 2541, column: 5, scope: !22681)
!22681 = distinct !DILexicalBlock(scope: !22676, file: !1326, line: 2540, column: 3)
!22682 = !DILocation(line: 2543, column: 22, scope: !22672)
!22683 = !DILocation(line: 2543, column: 3, scope: !22672)
!22684 = !DILocation(line: 2544, column: 22, scope: !22672)
!22685 = !DILocation(line: 2544, column: 3, scope: !22672)
!22686 = !DILocation(line: 2545, column: 22, scope: !22672)
!22687 = !DILocation(line: 2545, column: 3, scope: !22672)
!22688 = !DILocation(line: 2546, column: 8, scope: !22689)
!22689 = distinct !DILexicalBlock(scope: !22672, file: !1326, line: 2546, column: 8)
!22690 = !DILocation(line: 2546, column: 11, scope: !22689)
!22691 = !DILocation(line: 2546, column: 8, scope: !22672)
!22692 = !DILocation(line: 2548, column: 23, scope: !22693)
!22693 = distinct !DILexicalBlock(scope: !22689, file: !1326, line: 2547, column: 3)
!22694 = !DILocation(line: 2548, column: 5, scope: !22693)
!22695 = !DILocation(line: 2549, column: 3, scope: !22693)
!22696 = !DILocation(line: 2550, column: 3, scope: !22672)
!22697 = !DILocation(line: 2553, column: 3, scope: !22672)
!22698 = !DILocation(line: 2554, column: 1, scope: !22672)
!22699 = !DILocalVariable(name: "retval", scope: !1618, file: !1326, line: 2559, type: !19)
!22700 = !DILocation(line: 2559, column: 7, scope: !1618)
!22701 = !DILocalVariable(name: "tzbuf", scope: !1618, file: !1326, line: 2560, type: !22702)
!22702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 56, elements: !22703)
!22703 = !{!22704}
!22704 = !DISubrange(count: 7)
!22705 = !DILocation(line: 2560, column: 8, scope: !1618)
!22706 = !DILocalVariable(name: "the_time", scope: !1618, file: !1326, line: 2561, type: !1491)
!22707 = !DILocation(line: 2561, column: 10, scope: !1618)
!22708 = !DILocation(line: 2561, column: 21, scope: !1618)
!22709 = !DILocalVariable(name: "p_tm", scope: !1618, file: !1326, line: 2562, type: !20591)
!22710 = !DILocation(line: 2562, column: 14, scope: !1618)
!22711 = !DILocation(line: 2563, column: 3, scope: !1618)
!22712 = !DILocation(line: 2564, column: 10, scope: !1618)
!22713 = !DILocation(line: 2564, column: 8, scope: !1618)
!22714 = !DILocation(line: 2565, column: 7, scope: !22715)
!22715 = distinct !DILexicalBlock(scope: !1618, file: !1326, line: 2565, column: 7)
!22716 = !DILocation(line: 2565, column: 12, scope: !22715)
!22717 = !DILocation(line: 2565, column: 7, scope: !1618)
!22718 = !DILocation(line: 2567, column: 5, scope: !22719)
!22719 = distinct !DILexicalBlock(scope: !22715, file: !1326, line: 2566, column: 3)
!22720 = !DILocation(line: 2568, column: 3, scope: !22719)
!22721 = !DILocation(line: 2573, column: 21, scope: !1618)
!22722 = !DILocation(line: 2573, column: 49, scope: !1618)
!22723 = !DILocation(line: 2573, column: 12, scope: !1618)
!22724 = !DILocation(line: 2573, column: 10, scope: !1618)
!22725 = !DILocation(line: 2574, column: 3, scope: !1618)
!22726 = !DILocation(line: 2574, column: 28, scope: !1618)
!22727 = !DILocation(line: 2575, column: 7, scope: !22728)
!22728 = distinct !DILexicalBlock(scope: !1618, file: !1326, line: 2575, column: 7)
!22729 = !DILocation(line: 2575, column: 14, scope: !22728)
!22730 = !DILocation(line: 2575, column: 7, scope: !1618)
!22731 = !DILocation(line: 2580, column: 16, scope: !22732)
!22732 = distinct !DILexicalBlock(scope: !22728, file: !1326, line: 2576, column: 3)
!22733 = !DILocation(line: 2580, column: 5, scope: !22732)
!22734 = !DILocation(line: 2580, column: 14, scope: !22732)
!22735 = !DILocation(line: 2581, column: 16, scope: !22732)
!22736 = !DILocation(line: 2581, column: 5, scope: !22732)
!22737 = !DILocation(line: 2581, column: 14, scope: !22732)
!22738 = !DILocation(line: 2582, column: 5, scope: !22732)
!22739 = !DILocation(line: 2582, column: 14, scope: !22732)
!22740 = !DILocation(line: 2586, column: 9, scope: !22741)
!22741 = distinct !DILexicalBlock(scope: !22732, file: !1326, line: 2586, column: 9)
!22742 = !DILocation(line: 2586, column: 18, scope: !22741)
!22743 = !DILocation(line: 2586, column: 9, scope: !22732)
!22744 = !DILocation(line: 2588, column: 7, scope: !22745)
!22745 = distinct !DILexicalBlock(scope: !22741, file: !1326, line: 2587, column: 5)
!22746 = !DILocation(line: 2588, column: 16, scope: !22745)
!22747 = !DILocation(line: 2589, column: 5, scope: !22745)
!22748 = !DILocation(line: 2592, column: 7, scope: !22749)
!22749 = distinct !DILexicalBlock(scope: !22741, file: !1326, line: 2591, column: 5)
!22750 = !DILocation(line: 2592, column: 16, scope: !22749)
!22751 = !DILocation(line: 2594, column: 48, scope: !22732)
!22752 = !DILocation(line: 2594, column: 5, scope: !22732)
!22753 = !DILocation(line: 2595, column: 5, scope: !22732)
!22754 = !DILocation(line: 2596, column: 20, scope: !22732)
!22755 = !DILocation(line: 2596, column: 29, scope: !22732)
!22756 = !DILocation(line: 2596, column: 36, scope: !22732)
!22757 = !DILocation(line: 2596, column: 44, scope: !22732)
!22758 = !DILocation(line: 2596, column: 53, scope: !22732)
!22759 = !DILocation(line: 2596, column: 41, scope: !22732)
!22760 = !DILocation(line: 2596, column: 61, scope: !22732)
!22761 = !DILocation(line: 2596, column: 66, scope: !22732)
!22762 = !DILocation(line: 2596, column: 18, scope: !22732)
!22763 = !DILocation(line: 2596, column: 16, scope: !22732)
!22764 = !DILocation(line: 2597, column: 21, scope: !22732)
!22765 = !DILocation(line: 2597, column: 30, scope: !22732)
!22766 = !DILocation(line: 2597, column: 37, scope: !22732)
!22767 = !DILocation(line: 2597, column: 45, scope: !22732)
!22768 = !DILocation(line: 2597, column: 54, scope: !22732)
!22769 = !DILocation(line: 2597, column: 42, scope: !22732)
!22770 = !DILocation(line: 2597, column: 62, scope: !22732)
!22771 = !DILocation(line: 2597, column: 19, scope: !22732)
!22772 = !DILocation(line: 2597, column: 16, scope: !22732)
!22773 = !DILocation(line: 2598, column: 9, scope: !22774)
!22774 = distinct !DILexicalBlock(scope: !22732, file: !1326, line: 2598, column: 9)
!22775 = !DILocation(line: 2598, column: 18, scope: !22774)
!22776 = !DILocation(line: 2598, column: 9, scope: !22732)
!22777 = !DILocation(line: 2600, column: 18, scope: !22778)
!22778 = distinct !DILexicalBlock(scope: !22774, file: !1326, line: 2599, column: 5)
!22779 = !DILocation(line: 2601, column: 5, scope: !22778)
!22780 = !DILocation(line: 2602, column: 3, scope: !22732)
!22781 = !DILocation(line: 2606, column: 10, scope: !1618)
!22782 = !DILocation(line: 2606, column: 8, scope: !1618)
!22783 = !DILocation(line: 2607, column: 7, scope: !22784)
!22784 = distinct !DILexicalBlock(scope: !1618, file: !1326, line: 2607, column: 7)
!22785 = !DILocation(line: 2607, column: 12, scope: !22784)
!22786 = !DILocation(line: 2607, column: 7, scope: !1618)
!22787 = !DILocation(line: 2609, column: 5, scope: !22788)
!22788 = distinct !DILexicalBlock(scope: !22784, file: !1326, line: 2608, column: 3)
!22789 = !DILocation(line: 2610, column: 3, scope: !22788)
!22790 = !DILocation(line: 2611, column: 10, scope: !1618)
!22791 = !DILocation(line: 2611, column: 8, scope: !1618)
!22792 = !DILocation(line: 2612, column: 7, scope: !22793)
!22793 = distinct !DILexicalBlock(scope: !1618, file: !1326, line: 2612, column: 7)
!22794 = !DILocation(line: 2612, column: 12, scope: !22793)
!22795 = !DILocation(line: 2612, column: 7, scope: !1618)
!22796 = !DILocation(line: 2614, column: 5, scope: !22797)
!22797 = distinct !DILexicalBlock(scope: !22793, file: !1326, line: 2613, column: 3)
!22798 = !DILocation(line: 2615, column: 3, scope: !22797)
!22799 = !DILocation(line: 2616, column: 1, scope: !1618)
!22800 = !DILocalVariable(name: "curr_time", scope: !1626, file: !1326, line: 2622, type: !1491)
!22801 = !DILocation(line: 2622, column: 10, scope: !1626)
!22802 = !DILocalVariable(name: "p_tm", scope: !1626, file: !1326, line: 2623, type: !22803)
!22803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22804, size: 64)
!22804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20592)
!22805 = !DILocation(line: 2623, column: 20, scope: !1626)
!22806 = !DILocalVariable(name: "i", scope: !1626, file: !1326, line: 2624, type: !19)
!22807 = !DILocation(line: 2624, column: 7, scope: !1626)
!22808 = !DILocation(line: 2625, column: 15, scope: !1626)
!22809 = !DILocation(line: 2625, column: 13, scope: !1626)
!22810 = !DILocation(line: 2626, column: 10, scope: !1626)
!22811 = !DILocation(line: 2626, column: 8, scope: !1626)
!22812 = !DILocation(line: 2627, column: 66, scope: !22813)
!22813 = distinct !DILexicalBlock(scope: !1626, file: !1326, line: 2627, column: 7)
!22814 = !DILocation(line: 2627, column: 7, scope: !22813)
!22815 = !DILocation(line: 2627, column: 72, scope: !22813)
!22816 = !DILocation(line: 2627, column: 7, scope: !1626)
!22817 = !DILocation(line: 2629, column: 5, scope: !22818)
!22818 = distinct !DILexicalBlock(scope: !22813, file: !1326, line: 2628, column: 3)
!22819 = !DILocation(line: 2630, column: 3, scope: !22818)
!22820 = !DILocation(line: 2631, column: 32, scope: !1626)
!22821 = !DILocation(line: 2633, column: 3, scope: !1626)
!22822 = !DILocation(line: 2633, column: 18, scope: !1626)
!22823 = !DILocation(line: 2633, column: 10, scope: !1626)
!22824 = !DILocation(line: 2633, column: 21, scope: !1626)
!22825 = !DILocation(line: 2633, column: 28, scope: !1626)
!22826 = !DILocation(line: 2633, column: 39, scope: !1626)
!22827 = !DILocation(line: 2633, column: 31, scope: !1626)
!22828 = !DILocation(line: 2633, column: 42, scope: !1626)
!22829 = !DILocation(line: 2635, column: 5, scope: !22830)
!22830 = distinct !DILexicalBlock(scope: !1626, file: !1326, line: 2634, column: 3)
!22831 = distinct !{!22831, !22821, !22832}
!22832 = !DILocation(line: 2636, column: 3, scope: !1626)
!22833 = !DILocation(line: 2637, column: 15, scope: !22834)
!22834 = distinct !DILexicalBlock(scope: !1626, file: !1326, line: 2637, column: 7)
!22835 = !DILocation(line: 2637, column: 7, scope: !22834)
!22836 = !DILocation(line: 2637, column: 18, scope: !22834)
!22837 = !DILocation(line: 2637, column: 7, scope: !1626)
!22838 = !DILocation(line: 2639, column: 13, scope: !22839)
!22839 = distinct !DILexicalBlock(scope: !22834, file: !1326, line: 2638, column: 3)
!22840 = !DILocation(line: 2639, column: 5, scope: !22839)
!22841 = !DILocation(line: 2639, column: 16, scope: !22839)
!22842 = !DILocation(line: 2640, column: 17, scope: !22843)
!22843 = distinct !DILexicalBlock(scope: !22839, file: !1326, line: 2640, column: 9)
!22844 = !DILocation(line: 2640, column: 18, scope: !22843)
!22845 = !DILocation(line: 2640, column: 9, scope: !22843)
!22846 = !DILocation(line: 2640, column: 22, scope: !22843)
!22847 = !DILocation(line: 2640, column: 9, scope: !22839)
!22848 = !DILocation(line: 2642, column: 15, scope: !22849)
!22849 = distinct !DILexicalBlock(scope: !22843, file: !1326, line: 2641, column: 5)
!22850 = !DILocation(line: 2642, column: 16, scope: !22849)
!22851 = !DILocation(line: 2642, column: 7, scope: !22849)
!22852 = !DILocation(line: 2642, column: 20, scope: !22849)
!22853 = !DILocation(line: 2643, column: 5, scope: !22849)
!22854 = !DILocation(line: 2644, column: 3, scope: !22839)
!22855 = !DILocation(line: 2645, column: 3, scope: !1626)
!22856 = distinct !DISubprogram(name: "vsf_sysutil_get_time_sec", scope: !1326, file: !1326, line: 2649, type: !22857, scopeLine: 2650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22857 = !DISubroutineType(types: !22858)
!22858 = !{!28}
!22859 = !DILocation(line: 2651, column: 7, scope: !22860)
!22860 = distinct !DILexicalBlock(scope: !22856, file: !1326, line: 2651, column: 7)
!22861 = !DILocation(line: 2651, column: 43, scope: !22860)
!22862 = !DILocation(line: 2651, column: 7, scope: !22856)
!22863 = !DILocation(line: 2653, column: 5, scope: !22864)
!22864 = distinct !DILexicalBlock(scope: !22860, file: !1326, line: 2652, column: 3)
!22865 = !DILocation(line: 2654, column: 3, scope: !22864)
!22866 = !DILocation(line: 2655, column: 25, scope: !22856)
!22867 = !DILocation(line: 2655, column: 3, scope: !22856)
!22868 = distinct !DISubprogram(name: "vsf_sysutil_get_time_usec", scope: !1326, file: !1326, line: 2659, type: !22857, scopeLine: 2660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22869 = !DILocation(line: 2661, column: 25, scope: !22868)
!22870 = !DILocation(line: 2661, column: 3, scope: !22868)
!22871 = distinct !DISubprogram(name: "vsf_sysutil_qsort", scope: !1326, file: !1326, line: 2665, type: !22872, scopeLine: 2667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22872 = !DISubroutineType(types: !22873)
!22873 = !{null, !80, !26, !26, !22874}
!22874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12393, size: 64)
!22875 = !DILocalVariable(name: "p_base", arg: 1, scope: !22871, file: !1326, line: 2665, type: !80)
!22876 = !DILocation(line: 2665, column: 25, scope: !22871)
!22877 = !DILocalVariable(name: "num_elem", arg: 2, scope: !22871, file: !1326, line: 2665, type: !26)
!22878 = !DILocation(line: 2665, column: 46, scope: !22871)
!22879 = !DILocalVariable(name: "elem_size", arg: 3, scope: !22871, file: !1326, line: 2665, type: !26)
!22880 = !DILocation(line: 2665, column: 69, scope: !22871)
!22881 = !DILocalVariable(name: "p_compar", arg: 4, scope: !22871, file: !1326, line: 2666, type: !22874)
!22882 = !DILocation(line: 2666, column: 25, scope: !22871)
!22883 = !DILocation(line: 2668, column: 9, scope: !22871)
!22884 = !DILocation(line: 2668, column: 17, scope: !22871)
!22885 = !DILocation(line: 2668, column: 27, scope: !22871)
!22886 = !DILocation(line: 2668, column: 38, scope: !22871)
!22887 = !DILocation(line: 2668, column: 3, scope: !22871)
!22888 = !DILocation(line: 2669, column: 1, scope: !22871)
!22889 = distinct !DISubprogram(name: "vsf_sysutil_sleep", scope: !1326, file: !1326, line: 2672, type: !22890, scopeLine: 2673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22890 = !DISubroutineType(types: !22891)
!22891 = !{null, !692}
!22892 = !DILocalVariable(name: "seconds", arg: 1, scope: !22889, file: !1326, line: 2672, type: !692)
!22893 = !DILocation(line: 2672, column: 26, scope: !22889)
!22894 = !DILocalVariable(name: "retval", scope: !22889, file: !1326, line: 2674, type: !19)
!22895 = !DILocation(line: 2674, column: 7, scope: !22889)
!22896 = !DILocalVariable(name: "saved_errno", scope: !22889, file: !1326, line: 2675, type: !19)
!22897 = !DILocation(line: 2675, column: 7, scope: !22889)
!22898 = !DILocalVariable(name: "fractional", scope: !22889, file: !1326, line: 2676, type: !692)
!22899 = !DILocation(line: 2676, column: 10, scope: !22889)
!22900 = !DILocalVariable(name: "secs", scope: !22889, file: !1326, line: 2677, type: !1491)
!22901 = !DILocation(line: 2677, column: 10, scope: !22889)
!22902 = !DILocalVariable(name: "ts", scope: !22889, file: !1326, line: 2678, type: !1444)
!22903 = !DILocation(line: 2678, column: 19, scope: !22889)
!22904 = !DILocation(line: 2679, column: 19, scope: !22889)
!22905 = !DILocation(line: 2679, column: 10, scope: !22889)
!22906 = !DILocation(line: 2679, column: 8, scope: !22889)
!22907 = !DILocation(line: 2680, column: 16, scope: !22889)
!22908 = !DILocation(line: 2680, column: 35, scope: !22889)
!22909 = !DILocation(line: 2680, column: 26, scope: !22889)
!22910 = !DILocation(line: 2680, column: 24, scope: !22889)
!22911 = !DILocation(line: 2680, column: 14, scope: !22889)
!22912 = !DILocation(line: 2681, column: 15, scope: !22889)
!22913 = !DILocation(line: 2681, column: 6, scope: !22889)
!22914 = !DILocation(line: 2681, column: 13, scope: !22889)
!22915 = !DILocation(line: 2682, column: 24, scope: !22889)
!22916 = !DILocation(line: 2682, column: 35, scope: !22889)
!22917 = !DILocation(line: 2682, column: 16, scope: !22889)
!22918 = !DILocation(line: 2682, column: 6, scope: !22889)
!22919 = !DILocation(line: 2682, column: 14, scope: !22889)
!22920 = !DILocation(line: 2683, column: 3, scope: !22889)
!22921 = distinct !{!22921, !22920, !22922}
!22922 = !DILocation(line: 2688, column: 48, scope: !22889)
!22923 = !DILocation(line: 2685, column: 14, scope: !22924)
!22924 = distinct !DILexicalBlock(scope: !22889, file: !1326, line: 2684, column: 3)
!22925 = !DILocation(line: 2685, column: 12, scope: !22924)
!22926 = !DILocation(line: 2686, column: 19, scope: !22924)
!22927 = !DILocation(line: 2686, column: 17, scope: !22924)
!22928 = !DILocation(line: 2687, column: 5, scope: !22924)
!22929 = !DILocation(line: 2688, column: 3, scope: !22924)
!22930 = !DILocation(line: 2688, column: 12, scope: !22889)
!22931 = !DILocation(line: 2688, column: 19, scope: !22889)
!22932 = !DILocation(line: 2688, column: 25, scope: !22889)
!22933 = !DILocation(line: 2688, column: 28, scope: !22889)
!22934 = !DILocation(line: 2688, column: 40, scope: !22889)
!22935 = !DILocation(line: 2689, column: 1, scope: !22889)
!22936 = distinct !DISubprogram(name: "vsf_sysutil_getenv", scope: !1326, file: !1326, line: 2692, type: !20011, scopeLine: 2693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22937 = !DILocalVariable(name: "p_var", arg: 1, scope: !22936, file: !1326, line: 2692, type: !88)
!22938 = !DILocation(line: 2692, column: 32, scope: !22936)
!22939 = !DILocation(line: 2694, column: 17, scope: !22936)
!22940 = !DILocation(line: 2694, column: 10, scope: !22936)
!22941 = !DILocation(line: 2694, column: 3, scope: !22936)
!22942 = distinct !DISubprogram(name: "vsf_sysutil_openlog", scope: !1326, file: !1326, line: 2698, type: !1406, scopeLine: 2699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22943 = !DILocalVariable(name: "force", arg: 1, scope: !22942, file: !1326, line: 2698, type: !19)
!22944 = !DILocation(line: 2698, column: 25, scope: !22942)
!22945 = !DILocalVariable(name: "facility", scope: !22942, file: !1326, line: 2700, type: !19)
!22946 = !DILocation(line: 2700, column: 7, scope: !22942)
!22947 = !DILocalVariable(name: "option", scope: !22942, file: !1326, line: 2701, type: !19)
!22948 = !DILocation(line: 2701, column: 7, scope: !22942)
!22949 = !DILocation(line: 2702, column: 8, scope: !22950)
!22950 = distinct !DILexicalBlock(scope: !22942, file: !1326, line: 2702, column: 7)
!22951 = !DILocation(line: 2702, column: 7, scope: !22942)
!22952 = !DILocation(line: 2704, column: 12, scope: !22953)
!22953 = distinct !DILexicalBlock(scope: !22950, file: !1326, line: 2703, column: 3)
!22954 = !DILocation(line: 2705, column: 3, scope: !22953)
!22955 = !DILocation(line: 2707, column: 12, scope: !22942)
!22956 = !DILocation(line: 2709, column: 21, scope: !22942)
!22957 = !DILocation(line: 2709, column: 29, scope: !22942)
!22958 = !DILocation(line: 2709, column: 3, scope: !22942)
!22959 = !DILocation(line: 2710, column: 1, scope: !22942)
!22960 = distinct !DISubprogram(name: "vsf_sysutil_closelog", scope: !1326, file: !1326, line: 2713, type: !1619, scopeLine: 2714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22961 = !DILocation(line: 2715, column: 3, scope: !22960)
!22962 = !DILocation(line: 2716, column: 1, scope: !22960)
!22963 = distinct !DISubprogram(name: "vsf_sysutil_syslog", scope: !1326, file: !1326, line: 2719, type: !923, scopeLine: 2720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22964 = !DILocalVariable(name: "p_text", arg: 1, scope: !22963, file: !1326, line: 2719, type: !88)
!22965 = !DILocation(line: 2719, column: 32, scope: !22963)
!22966 = !DILocalVariable(name: "severe", arg: 2, scope: !22963, file: !1326, line: 2719, type: !19)
!22967 = !DILocation(line: 2719, column: 44, scope: !22963)
!22968 = !DILocalVariable(name: "prio", scope: !22963, file: !1326, line: 2721, type: !19)
!22969 = !DILocation(line: 2721, column: 7, scope: !22963)
!22970 = !DILocation(line: 2722, column: 7, scope: !22971)
!22971 = distinct !DILexicalBlock(scope: !22963, file: !1326, line: 2722, column: 7)
!22972 = !DILocation(line: 2722, column: 7, scope: !22963)
!22973 = !DILocation(line: 2724, column: 10, scope: !22974)
!22974 = distinct !DILexicalBlock(scope: !22971, file: !1326, line: 2723, column: 3)
!22975 = !DILocation(line: 2725, column: 3, scope: !22974)
!22976 = !DILocation(line: 2726, column: 10, scope: !22963)
!22977 = !DILocation(line: 2726, column: 22, scope: !22963)
!22978 = !DILocation(line: 2726, column: 3, scope: !22963)
!22979 = !DILocation(line: 2727, column: 1, scope: !22963)
!22980 = distinct !DISubprogram(name: "vsf_sysutil_parse_time", scope: !1326, file: !1326, line: 2730, type: !22981, scopeLine: 2731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!22981 = !DISubroutineType(types: !22982)
!22982 = !{!28, !88}
!22983 = !DILocalVariable(name: "p_text", arg: 1, scope: !22980, file: !1326, line: 2730, type: !88)
!22984 = !DILocation(line: 2730, column: 36, scope: !22980)
!22985 = !DILocalVariable(name: "the_time", scope: !22980, file: !1326, line: 2732, type: !20592)
!22986 = !DILocation(line: 2732, column: 13, scope: !22980)
!22987 = !DILocalVariable(name: "len", scope: !22980, file: !1326, line: 2733, type: !26)
!22988 = !DILocation(line: 2733, column: 16, scope: !22980)
!22989 = !DILocation(line: 2733, column: 41, scope: !22980)
!22990 = !DILocation(line: 2733, column: 22, scope: !22980)
!22991 = !DILocation(line: 2734, column: 22, scope: !22980)
!22992 = !DILocation(line: 2734, column: 3, scope: !22980)
!22993 = !DILocation(line: 2735, column: 7, scope: !22994)
!22994 = distinct !DILexicalBlock(scope: !22980, file: !1326, line: 2735, column: 7)
!22995 = !DILocation(line: 2735, column: 11, scope: !22994)
!22996 = !DILocation(line: 2735, column: 7, scope: !22980)
!22997 = !DILocalVariable(name: "yr", scope: !22998, file: !1326, line: 2737, type: !22999)
!22998 = distinct !DILexicalBlock(scope: !22994, file: !1326, line: 2736, column: 3)
!22999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 40, elements: !23000)
!23000 = !{!23001}
!23001 = !DISubrange(count: 5)
!23002 = !DILocation(line: 2737, column: 10, scope: !22998)
!23003 = !DILocalVariable(name: "mon", scope: !22998, file: !1326, line: 2738, type: !23004)
!23004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 24, elements: !1455)
!23005 = !DILocation(line: 2738, column: 10, scope: !22998)
!23006 = !DILocalVariable(name: "day", scope: !22998, file: !1326, line: 2739, type: !23004)
!23007 = !DILocation(line: 2739, column: 10, scope: !22998)
!23008 = !DILocation(line: 2740, column: 24, scope: !22998)
!23009 = !DILocation(line: 2740, column: 28, scope: !22998)
!23010 = !DILocation(line: 2740, column: 5, scope: !22998)
!23011 = !DILocation(line: 2741, column: 24, scope: !22998)
!23012 = !DILocation(line: 2741, column: 29, scope: !22998)
!23013 = !DILocation(line: 2741, column: 36, scope: !22998)
!23014 = !DILocation(line: 2741, column: 5, scope: !22998)
!23015 = !DILocation(line: 2742, column: 24, scope: !22998)
!23016 = !DILocation(line: 2742, column: 29, scope: !22998)
!23017 = !DILocation(line: 2742, column: 36, scope: !22998)
!23018 = !DILocation(line: 2742, column: 5, scope: !22998)
!23019 = !DILocation(line: 2743, column: 41, scope: !22998)
!23020 = !DILocation(line: 2743, column: 24, scope: !22998)
!23021 = !DILocation(line: 2743, column: 45, scope: !22998)
!23022 = !DILocation(line: 2743, column: 14, scope: !22998)
!23023 = !DILocation(line: 2743, column: 22, scope: !22998)
!23024 = !DILocation(line: 2744, column: 40, scope: !22998)
!23025 = !DILocation(line: 2744, column: 23, scope: !22998)
!23026 = !DILocation(line: 2744, column: 45, scope: !22998)
!23027 = !DILocation(line: 2744, column: 14, scope: !22998)
!23028 = !DILocation(line: 2744, column: 21, scope: !22998)
!23029 = !DILocation(line: 2745, column: 41, scope: !22998)
!23030 = !DILocation(line: 2745, column: 24, scope: !22998)
!23031 = !DILocation(line: 2745, column: 14, scope: !22998)
!23032 = !DILocation(line: 2745, column: 22, scope: !22998)
!23033 = !DILocation(line: 2746, column: 3, scope: !22998)
!23034 = !DILocation(line: 2747, column: 7, scope: !23035)
!23035 = distinct !DILexicalBlock(scope: !22980, file: !1326, line: 2747, column: 7)
!23036 = !DILocation(line: 2747, column: 11, scope: !23035)
!23037 = !DILocation(line: 2747, column: 7, scope: !22980)
!23038 = !DILocalVariable(name: "hr", scope: !23039, file: !1326, line: 2749, type: !23004)
!23039 = distinct !DILexicalBlock(scope: !23035, file: !1326, line: 2748, column: 3)
!23040 = !DILocation(line: 2749, column: 10, scope: !23039)
!23041 = !DILocalVariable(name: "mins", scope: !23039, file: !1326, line: 2750, type: !23004)
!23042 = !DILocation(line: 2750, column: 10, scope: !23039)
!23043 = !DILocalVariable(name: "sec", scope: !23039, file: !1326, line: 2751, type: !23004)
!23044 = !DILocation(line: 2751, column: 10, scope: !23039)
!23045 = !DILocation(line: 2752, column: 24, scope: !23039)
!23046 = !DILocation(line: 2752, column: 28, scope: !23039)
!23047 = !DILocation(line: 2752, column: 35, scope: !23039)
!23048 = !DILocation(line: 2752, column: 5, scope: !23039)
!23049 = !DILocation(line: 2753, column: 24, scope: !23039)
!23050 = !DILocation(line: 2753, column: 30, scope: !23039)
!23051 = !DILocation(line: 2753, column: 37, scope: !23039)
!23052 = !DILocation(line: 2753, column: 5, scope: !23039)
!23053 = !DILocation(line: 2754, column: 24, scope: !23039)
!23054 = !DILocation(line: 2754, column: 29, scope: !23039)
!23055 = !DILocation(line: 2754, column: 36, scope: !23039)
!23056 = !DILocation(line: 2754, column: 5, scope: !23039)
!23057 = !DILocation(line: 2755, column: 41, scope: !23039)
!23058 = !DILocation(line: 2755, column: 24, scope: !23039)
!23059 = !DILocation(line: 2755, column: 14, scope: !23039)
!23060 = !DILocation(line: 2755, column: 22, scope: !23039)
!23061 = !DILocation(line: 2756, column: 40, scope: !23039)
!23062 = !DILocation(line: 2756, column: 23, scope: !23039)
!23063 = !DILocation(line: 2756, column: 14, scope: !23039)
!23064 = !DILocation(line: 2756, column: 21, scope: !23039)
!23065 = !DILocation(line: 2757, column: 40, scope: !23039)
!23066 = !DILocation(line: 2757, column: 23, scope: !23039)
!23067 = !DILocation(line: 2757, column: 14, scope: !23039)
!23068 = !DILocation(line: 2757, column: 21, scope: !23039)
!23069 = !DILocation(line: 2758, column: 3, scope: !23039)
!23070 = !DILocation(line: 2759, column: 10, scope: !22980)
!23071 = !DILocation(line: 2759, column: 3, scope: !22980)
!23072 = distinct !DISubprogram(name: "vsf_sysutil_setmodtime", scope: !1326, file: !1326, line: 2763, type: !23073, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!23073 = !DISubroutineType(types: !23074)
!23074 = !{!19, !88, !28, !19}
!23075 = !DILocalVariable(name: "p_file", arg: 1, scope: !23072, file: !1326, line: 2763, type: !88)
!23076 = !DILocation(line: 2763, column: 36, scope: !23072)
!23077 = !DILocalVariable(name: "the_time", arg: 2, scope: !23072, file: !1326, line: 2763, type: !28)
!23078 = !DILocation(line: 2763, column: 49, scope: !23072)
!23079 = !DILocalVariable(name: "is_localtime", arg: 3, scope: !23072, file: !1326, line: 2763, type: !19)
!23080 = !DILocation(line: 2763, column: 63, scope: !23072)
!23081 = !DILocalVariable(name: "new_times", scope: !23072, file: !1326, line: 2765, type: !23082)
!23082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utimbuf", file: !23083, line: 36, size: 128, elements: !23084)
!23083 = !DIFile(filename: "/usr/include/utime.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!23084 = !{!23085, !23086}
!23085 = !DIDerivedType(tag: DW_TAG_member, name: "actime", scope: !23082, file: !23083, line: 38, baseType: !1448, size: 64)
!23086 = !DIDerivedType(tag: DW_TAG_member, name: "modtime", scope: !23082, file: !23083, line: 39, baseType: !1448, size: 64, offset: 64)
!23087 = !DILocation(line: 2765, column: 18, scope: !23072)
!23088 = !DILocation(line: 2766, column: 8, scope: !23089)
!23089 = distinct !DILexicalBlock(scope: !23072, file: !1326, line: 2766, column: 7)
!23090 = !DILocation(line: 2766, column: 7, scope: !23072)
!23091 = !DILocation(line: 2768, column: 17, scope: !23092)
!23092 = distinct !DILexicalBlock(scope: !23089, file: !1326, line: 2767, column: 3)
!23093 = !DILocation(line: 2768, column: 14, scope: !23092)
!23094 = !DILocation(line: 2769, column: 3, scope: !23092)
!23095 = !DILocation(line: 2770, column: 22, scope: !23072)
!23096 = !DILocation(line: 2770, column: 3, scope: !23072)
!23097 = !DILocation(line: 2771, column: 22, scope: !23072)
!23098 = !DILocation(line: 2771, column: 13, scope: !23072)
!23099 = !DILocation(line: 2771, column: 20, scope: !23072)
!23100 = !DILocation(line: 2772, column: 23, scope: !23072)
!23101 = !DILocation(line: 2772, column: 13, scope: !23072)
!23102 = !DILocation(line: 2772, column: 21, scope: !23072)
!23103 = !DILocation(line: 2773, column: 16, scope: !23072)
!23104 = !DILocation(line: 2773, column: 10, scope: !23072)
!23105 = !DILocation(line: 2773, column: 3, scope: !23072)
!23106 = distinct !DISubprogram(name: "vsf_sysutil_ftruncate", scope: !1326, file: !1326, line: 2777, type: !1406, scopeLine: 2778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!23107 = !DILocalVariable(name: "fd", arg: 1, scope: !23106, file: !1326, line: 2777, type: !19)
!23108 = !DILocation(line: 2777, column: 27, scope: !23106)
!23109 = !DILocalVariable(name: "ret", scope: !23106, file: !1326, line: 2779, type: !19)
!23110 = !DILocation(line: 2779, column: 7, scope: !23106)
!23111 = !DILocation(line: 2779, column: 23, scope: !23106)
!23112 = !DILocation(line: 2779, column: 13, scope: !23106)
!23113 = !DILocation(line: 2780, column: 7, scope: !23114)
!23114 = distinct !DILexicalBlock(scope: !23106, file: !1326, line: 2780, column: 7)
!23115 = !DILocation(line: 2780, column: 11, scope: !23114)
!23116 = !DILocation(line: 2780, column: 7, scope: !23106)
!23117 = !DILocation(line: 2782, column: 5, scope: !23118)
!23118 = distinct !DILexicalBlock(scope: !23114, file: !1326, line: 2781, column: 3)
!23119 = !DILocation(line: 2783, column: 3, scope: !23118)
!23120 = !DILocation(line: 2784, column: 1, scope: !23106)
!23121 = distinct !DISubprogram(name: "vsf_sysutil_getuid", scope: !1326, file: !1326, line: 2787, type: !1713, scopeLine: 2788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!23122 = !DILocation(line: 2789, column: 10, scope: !23121)
!23123 = !DILocation(line: 2789, column: 3, scope: !23121)
!23124 = distinct !DISubprogram(name: "vsf_sysutil_set_address_space_limit", scope: !1326, file: !1326, line: 2793, type: !23125, scopeLine: 2794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!23125 = !DISubroutineType(types: !23126)
!23126 = !{null, !65}
!23127 = !DILocalVariable(name: "bytes", arg: 1, scope: !23124, file: !1326, line: 2793, type: !65)
!23128 = !DILocation(line: 2793, column: 51, scope: !23124)
!23129 = !DILocalVariable(name: "ret", scope: !23124, file: !1326, line: 2797, type: !19)
!23130 = !DILocation(line: 2797, column: 7, scope: !23124)
!23131 = !DILocalVariable(name: "rlim", scope: !23124, file: !1326, line: 2798, type: !23132)
!23132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1381, line: 139, size: 128, elements: !23133)
!23133 = !{!23134, !23137}
!23134 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !23132, file: !1381, line: 142, baseType: !23135, size: 64)
!23135 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !1381, line: 133, baseType: !23136)
!23136 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim64_t", file: !1287, line: 146, baseType: !65)
!23137 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !23132, file: !1381, line: 144, baseType: !23135, size: 64, offset: 64)
!23138 = !DILocation(line: 2798, column: 17, scope: !23124)
!23139 = !DILocation(line: 2799, column: 19, scope: !23124)
!23140 = !DILocation(line: 2799, column: 8, scope: !23124)
!23141 = !DILocation(line: 2799, column: 17, scope: !23124)
!23142 = !DILocation(line: 2800, column: 19, scope: !23124)
!23143 = !DILocation(line: 2800, column: 8, scope: !23124)
!23144 = !DILocation(line: 2800, column: 17, scope: !23124)
!23145 = !DILocation(line: 2801, column: 9, scope: !23124)
!23146 = !DILocation(line: 2801, column: 7, scope: !23124)
!23147 = !DILocation(line: 2805, column: 7, scope: !23148)
!23148 = distinct !DILexicalBlock(scope: !23124, file: !1326, line: 2805, column: 7)
!23149 = !DILocation(line: 2805, column: 11, scope: !23148)
!23150 = !DILocation(line: 2805, column: 16, scope: !23148)
!23151 = !DILocation(line: 2805, column: 19, scope: !23148)
!23152 = !DILocation(line: 2805, column: 25, scope: !23148)
!23153 = !DILocation(line: 2805, column: 7, scope: !23124)
!23154 = !DILocation(line: 2807, column: 5, scope: !23155)
!23155 = distinct !DILexicalBlock(scope: !23148, file: !1326, line: 2806, column: 3)
!23156 = !DILocation(line: 2808, column: 3, scope: !23155)
!23157 = !DILocation(line: 2810, column: 10, scope: !23124)
!23158 = !DILocation(line: 2811, column: 1, scope: !23124)
!23159 = distinct !DISubprogram(name: "vsf_sysutil_set_no_fds", scope: !1326, file: !1326, line: 2814, type: !1619, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!23160 = !DILocalVariable(name: "ret", scope: !23159, file: !1326, line: 2816, type: !19)
!23161 = !DILocation(line: 2816, column: 7, scope: !23159)
!23162 = !DILocalVariable(name: "rlim", scope: !23159, file: !1326, line: 2817, type: !23132)
!23163 = !DILocation(line: 2817, column: 17, scope: !23159)
!23164 = !DILocation(line: 2818, column: 8, scope: !23159)
!23165 = !DILocation(line: 2818, column: 17, scope: !23159)
!23166 = !DILocation(line: 2819, column: 8, scope: !23159)
!23167 = !DILocation(line: 2819, column: 17, scope: !23159)
!23168 = !DILocation(line: 2820, column: 9, scope: !23159)
!23169 = !DILocation(line: 2820, column: 7, scope: !23159)
!23170 = !DILocation(line: 2821, column: 7, scope: !23171)
!23171 = distinct !DILexicalBlock(scope: !23159, file: !1326, line: 2821, column: 7)
!23172 = !DILocation(line: 2821, column: 11, scope: !23171)
!23173 = !DILocation(line: 2821, column: 7, scope: !23159)
!23174 = !DILocation(line: 2823, column: 5, scope: !23175)
!23175 = distinct !DILexicalBlock(scope: !23171, file: !1326, line: 2822, column: 3)
!23176 = !DILocation(line: 2824, column: 3, scope: !23175)
!23177 = !DILocation(line: 2825, column: 1, scope: !23159)
!23178 = distinct !DISubprogram(name: "vsf_sysutil_set_no_procs", scope: !1326, file: !1326, line: 2828, type: !1619, scopeLine: 2829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1325, retainedNodes: !128)
!23179 = !DILocalVariable(name: "ret", scope: !23178, file: !1326, line: 2831, type: !19)
!23180 = !DILocation(line: 2831, column: 7, scope: !23178)
!23181 = !DILocalVariable(name: "rlim", scope: !23178, file: !1326, line: 2832, type: !23132)
!23182 = !DILocation(line: 2832, column: 17, scope: !23178)
!23183 = !DILocation(line: 2833, column: 8, scope: !23178)
!23184 = !DILocation(line: 2833, column: 17, scope: !23178)
!23185 = !DILocation(line: 2834, column: 8, scope: !23178)
!23186 = !DILocation(line: 2834, column: 17, scope: !23178)
!23187 = !DILocation(line: 2835, column: 9, scope: !23178)
!23188 = !DILocation(line: 2835, column: 7, scope: !23178)
!23189 = !DILocation(line: 2836, column: 7, scope: !23190)
!23190 = distinct !DILexicalBlock(scope: !23178, file: !1326, line: 2836, column: 7)
!23191 = !DILocation(line: 2836, column: 11, scope: !23190)
!23192 = !DILocation(line: 2836, column: 7, scope: !23178)
!23193 = !DILocation(line: 2838, column: 5, scope: !23194)
!23194 = distinct !DILexicalBlock(scope: !23190, file: !1326, line: 2837, column: 3)
!23195 = !DILocation(line: 2839, column: 3, scope: !23194)
!23196 = !DILocation(line: 2841, column: 1, scope: !23178)
!23197 = distinct !DISubprogram(name: "vsf_sysdep_check_auth", scope: !1676, file: !1676, line: 321, type: !23198, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23198 = !DISubroutineType(types: !23199)
!23199 = !{!19, !23200, !23201, !23201}
!23200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!23201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23202, size: 64)
!23202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1733)
!23203 = !DILocalVariable(name: "p_user_str", arg: 1, scope: !23197, file: !1676, line: 321, type: !23200)
!23204 = !DILocation(line: 321, column: 37, scope: !23197)
!23205 = !DILocalVariable(name: "p_pass_str", arg: 2, scope: !23197, file: !1676, line: 322, type: !23201)
!23206 = !DILocation(line: 322, column: 43, scope: !23197)
!23207 = !DILocalVariable(name: "p_remote_host", arg: 3, scope: !23197, file: !1676, line: 323, type: !23201)
!23208 = !DILocation(line: 323, column: 43, scope: !23197)
!23209 = !DILocalVariable(name: "retval", scope: !23197, file: !1676, line: 325, type: !19)
!23210 = !DILocation(line: 325, column: 7, scope: !23197)
!23211 = !DILocalVariable(name: "item", scope: !23197, file: !1676, line: 326, type: !23212)
!23212 = !DIDerivedType(tag: DW_TAG_typedef, name: "pam_item_t", file: !1676, line: 312, baseType: !1595)
!23213 = !DILocation(line: 326, column: 14, scope: !23197)
!23214 = !DILocalVariable(name: "pam_user_name", scope: !23197, file: !1676, line: 327, type: !88)
!23215 = !DILocation(line: 327, column: 15, scope: !23197)
!23216 = !DILocalVariable(name: "the_conv", scope: !23197, file: !1676, line: 328, type: !23217)
!23217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pam_conv", file: !1795, line: 280, size: 128, elements: !23218)
!23218 = !{!23219, !23236}
!23219 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !23217, file: !1795, line: 281, baseType: !23220, size: 64)
!23220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23221, size: 64)
!23221 = !DISubroutineType(types: !23222)
!23222 = !{!19, !19, !23223, !23230, !80}
!23223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23224, size: 64)
!23224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23225, size: 64)
!23225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23226)
!23226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pam_message", file: !1795, line: 248, size: 128, elements: !23227)
!23227 = !{!23228, !23229}
!23228 = !DIDerivedType(tag: DW_TAG_member, name: "msg_style", scope: !23226, file: !1795, line: 249, baseType: !19, size: 32)
!23229 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !23226, file: !1795, line: 250, baseType: !88, size: 64, offset: 64)
!23230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23231, size: 64)
!23231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23232, size: 64)
!23232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pam_response", file: !1795, line: 273, size: 128, elements: !23233)
!23233 = !{!23234, !23235}
!23234 = !DIDerivedType(tag: DW_TAG_member, name: "resp", scope: !23232, file: !1795, line: 274, baseType: !16, size: 64)
!23235 = !DIDerivedType(tag: DW_TAG_member, name: "resp_retcode", scope: !23232, file: !1795, line: 275, baseType: !19, size: 32, offset: 64)
!23236 = !DIDerivedType(tag: DW_TAG_member, name: "appdata_ptr", scope: !23217, file: !1795, line: 283, baseType: !80, size: 64, offset: 64)
!23237 = !DILocation(line: 328, column: 19, scope: !23197)
!23238 = !DILocation(line: 333, column: 7, scope: !23239)
!23239 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 333, column: 7)
!23240 = !DILocation(line: 333, column: 14, scope: !23239)
!23241 = !DILocation(line: 333, column: 7, scope: !23197)
!23242 = !DILocation(line: 335, column: 5, scope: !23243)
!23243 = distinct !DILexicalBlock(scope: !23239, file: !1676, line: 334, column: 3)
!23244 = !DILocation(line: 336, column: 3, scope: !23243)
!23245 = !DILocation(line: 337, column: 26, scope: !23197)
!23246 = !DILocation(line: 337, column: 3, scope: !23197)
!23247 = !DILocation(line: 338, column: 7, scope: !23248)
!23248 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 338, column: 7)
!23249 = !DILocation(line: 338, column: 7, scope: !23197)
!23250 = !DILocation(line: 340, column: 24, scope: !23251)
!23251 = distinct !DILexicalBlock(scope: !23248, file: !1676, line: 339, column: 3)
!23252 = !DILocation(line: 341, column: 35, scope: !23251)
!23253 = !DILocation(line: 341, column: 24, scope: !23251)
!23254 = !DILocation(line: 340, column: 14, scope: !23251)
!23255 = !DILocation(line: 340, column: 12, scope: !23251)
!23256 = !DILocation(line: 342, column: 3, scope: !23251)
!23257 = !DILocation(line: 343, column: 7, scope: !23258)
!23258 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 343, column: 7)
!23259 = !DILocation(line: 343, column: 14, scope: !23258)
!23260 = !DILocation(line: 343, column: 7, scope: !23197)
!23261 = !DILocation(line: 345, column: 12, scope: !23262)
!23262 = distinct !DILexicalBlock(scope: !23258, file: !1676, line: 344, column: 3)
!23263 = !DILocation(line: 346, column: 5, scope: !23262)
!23264 = !DILocation(line: 349, column: 25, scope: !23197)
!23265 = !DILocation(line: 349, column: 55, scope: !23197)
!23266 = !DILocation(line: 349, column: 44, scope: !23197)
!23267 = !DILocation(line: 349, column: 12, scope: !23197)
!23268 = !DILocation(line: 349, column: 10, scope: !23197)
!23269 = !DILocation(line: 350, column: 7, scope: !23270)
!23270 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 350, column: 7)
!23271 = !DILocation(line: 350, column: 14, scope: !23270)
!23272 = !DILocation(line: 350, column: 7, scope: !23197)
!23273 = !DILocation(line: 352, column: 20, scope: !23274)
!23274 = distinct !DILexicalBlock(scope: !23270, file: !1676, line: 351, column: 3)
!23275 = !DILocation(line: 352, column: 28, scope: !23274)
!23276 = !DILocation(line: 352, column: 12, scope: !23274)
!23277 = !DILocation(line: 353, column: 12, scope: !23274)
!23278 = !DILocation(line: 354, column: 5, scope: !23274)
!23279 = !DILocation(line: 358, column: 25, scope: !23197)
!23280 = !DILocation(line: 358, column: 12, scope: !23197)
!23281 = !DILocation(line: 358, column: 10, scope: !23197)
!23282 = !DILocation(line: 359, column: 7, scope: !23283)
!23283 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 359, column: 7)
!23284 = !DILocation(line: 359, column: 14, scope: !23283)
!23285 = !DILocation(line: 359, column: 7, scope: !23197)
!23286 = !DILocation(line: 361, column: 20, scope: !23287)
!23287 = distinct !DILexicalBlock(scope: !23283, file: !1676, line: 360, column: 3)
!23288 = !DILocation(line: 361, column: 28, scope: !23287)
!23289 = !DILocation(line: 361, column: 12, scope: !23287)
!23290 = !DILocation(line: 362, column: 12, scope: !23287)
!23291 = !DILocation(line: 363, column: 5, scope: !23287)
!23292 = !DILocation(line: 367, column: 25, scope: !23197)
!23293 = !DILocation(line: 367, column: 55, scope: !23197)
!23294 = !DILocation(line: 367, column: 44, scope: !23197)
!23295 = !DILocation(line: 367, column: 12, scope: !23197)
!23296 = !DILocation(line: 367, column: 10, scope: !23197)
!23297 = !DILocation(line: 368, column: 7, scope: !23298)
!23298 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 368, column: 7)
!23299 = !DILocation(line: 368, column: 14, scope: !23298)
!23300 = !DILocation(line: 368, column: 7, scope: !23197)
!23301 = !DILocation(line: 370, column: 20, scope: !23302)
!23302 = distinct !DILexicalBlock(scope: !23298, file: !1676, line: 369, column: 3)
!23303 = !DILocation(line: 370, column: 28, scope: !23302)
!23304 = !DILocation(line: 370, column: 12, scope: !23302)
!23305 = !DILocation(line: 371, column: 12, scope: !23302)
!23306 = !DILocation(line: 372, column: 5, scope: !23302)
!23307 = !DILocation(line: 375, column: 29, scope: !23197)
!23308 = !DILocation(line: 375, column: 12, scope: !23197)
!23309 = !DILocation(line: 375, column: 10, scope: !23197)
!23310 = !DILocation(line: 376, column: 7, scope: !23311)
!23311 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 376, column: 7)
!23312 = !DILocation(line: 376, column: 14, scope: !23311)
!23313 = !DILocation(line: 376, column: 7, scope: !23197)
!23314 = !DILocation(line: 378, column: 20, scope: !23315)
!23315 = distinct !DILexicalBlock(scope: !23311, file: !1676, line: 377, column: 3)
!23316 = !DILocation(line: 378, column: 28, scope: !23315)
!23317 = !DILocation(line: 378, column: 12, scope: !23315)
!23318 = !DILocation(line: 379, column: 12, scope: !23315)
!23319 = !DILocation(line: 380, column: 5, scope: !23315)
!23320 = !DILocation(line: 383, column: 25, scope: !23197)
!23321 = !DILocation(line: 383, column: 12, scope: !23197)
!23322 = !DILocation(line: 383, column: 10, scope: !23197)
!23323 = !DILocation(line: 384, column: 7, scope: !23324)
!23324 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 384, column: 7)
!23325 = !DILocation(line: 384, column: 14, scope: !23324)
!23326 = !DILocation(line: 384, column: 7, scope: !23197)
!23327 = !DILocation(line: 386, column: 20, scope: !23328)
!23328 = distinct !DILexicalBlock(scope: !23324, file: !1676, line: 385, column: 3)
!23329 = !DILocation(line: 386, column: 28, scope: !23328)
!23330 = !DILocation(line: 386, column: 12, scope: !23328)
!23331 = !DILocation(line: 387, column: 12, scope: !23328)
!23332 = !DILocation(line: 388, column: 5, scope: !23328)
!23333 = !DILocation(line: 390, column: 19, scope: !23197)
!23334 = !DILocation(line: 390, column: 17, scope: !23197)
!23335 = !DILocation(line: 391, column: 18, scope: !23197)
!23336 = !DILocation(line: 391, column: 30, scope: !23197)
!23337 = !DILocation(line: 391, column: 3, scope: !23197)
!23338 = !DILocation(line: 393, column: 26, scope: !23197)
!23339 = !DILocation(line: 393, column: 12, scope: !23197)
!23340 = !DILocation(line: 393, column: 10, scope: !23197)
!23341 = !DILocation(line: 394, column: 7, scope: !23342)
!23342 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 394, column: 7)
!23343 = !DILocation(line: 394, column: 14, scope: !23342)
!23344 = !DILocation(line: 394, column: 7, scope: !23197)
!23345 = !DILocation(line: 396, column: 20, scope: !23346)
!23346 = distinct !DILexicalBlock(scope: !23342, file: !1676, line: 395, column: 3)
!23347 = !DILocation(line: 396, column: 28, scope: !23346)
!23348 = !DILocation(line: 396, column: 12, scope: !23346)
!23349 = !DILocation(line: 397, column: 12, scope: !23346)
!23350 = !DILocation(line: 398, column: 5, scope: !23346)
!23351 = !DILocation(line: 400, column: 24, scope: !23197)
!23352 = !DILocation(line: 400, column: 12, scope: !23197)
!23353 = !DILocation(line: 400, column: 10, scope: !23197)
!23354 = !DILocation(line: 401, column: 7, scope: !23355)
!23355 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 401, column: 7)
!23356 = !DILocation(line: 401, column: 14, scope: !23355)
!23357 = !DILocation(line: 401, column: 7, scope: !23197)
!23358 = !DILocation(line: 403, column: 20, scope: !23359)
!23359 = distinct !DILexicalBlock(scope: !23355, file: !1676, line: 402, column: 3)
!23360 = !DILocation(line: 403, column: 28, scope: !23359)
!23361 = !DILocation(line: 403, column: 12, scope: !23359)
!23362 = !DILocation(line: 404, column: 12, scope: !23359)
!23363 = !DILocation(line: 405, column: 5, scope: !23359)
!23364 = !DILocation(line: 407, column: 8, scope: !23365)
!23365 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 407, column: 7)
!23366 = !DILocation(line: 407, column: 7, scope: !23197)
!23367 = !DILocation(line: 410, column: 20, scope: !23368)
!23368 = distinct !DILexicalBlock(scope: !23365, file: !1676, line: 408, column: 3)
!23369 = !DILocation(line: 410, column: 28, scope: !23368)
!23370 = !DILocation(line: 410, column: 12, scope: !23368)
!23371 = !DILocation(line: 411, column: 12, scope: !23368)
!23372 = !DILocation(line: 412, column: 5, scope: !23368)
!23373 = !DILocation(line: 415, column: 20, scope: !23197)
!23374 = !DILocation(line: 415, column: 32, scope: !23197)
!23375 = !DILocation(line: 415, column: 3, scope: !23197)
!23376 = !DILocation(line: 416, column: 29, scope: !23197)
!23377 = !DILocation(line: 416, column: 12, scope: !23197)
!23378 = !DILocation(line: 416, column: 10, scope: !23197)
!23379 = !DILocation(line: 417, column: 7, scope: !23380)
!23380 = distinct !DILexicalBlock(scope: !23197, file: !1676, line: 417, column: 7)
!23381 = !DILocation(line: 417, column: 14, scope: !23380)
!23382 = !DILocation(line: 417, column: 7, scope: !23197)
!23383 = !DILocation(line: 419, column: 5, scope: !23384)
!23384 = distinct !DILexicalBlock(scope: !23380, file: !1676, line: 418, column: 3)
!23385 = !DILocation(line: 420, column: 24, scope: !23384)
!23386 = !DILocation(line: 420, column: 12, scope: !23384)
!23387 = !DILocation(line: 421, column: 20, scope: !23384)
!23388 = !DILocation(line: 421, column: 28, scope: !23384)
!23389 = !DILocation(line: 421, column: 12, scope: !23384)
!23390 = !DILocation(line: 422, column: 12, scope: !23384)
!23391 = !DILocation(line: 423, column: 5, scope: !23384)
!23392 = !DILocation(line: 428, column: 3, scope: !23197)
!23393 = !DILocation(line: 430, column: 3, scope: !23197)
!23394 = !DILocation(line: 431, column: 1, scope: !23197)
!23395 = distinct !DISubprogram(name: "vsf_insert_uwtmp", scope: !1676, file: !1676, line: 1184, type: !23396, scopeLine: 1186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23396 = !DISubroutineType(types: !23397)
!23397 = !{null, !23201, !23201}
!23398 = !DILocalVariable(name: "p_user_str", arg: 1, scope: !23395, file: !1676, line: 1184, type: !23201)
!23399 = !DILocation(line: 1184, column: 38, scope: !23395)
!23400 = !DILocalVariable(name: "p_host_str", arg: 2, scope: !23395, file: !1676, line: 1185, type: !23201)
!23401 = !DILocation(line: 1185, column: 38, scope: !23395)
!23402 = !DILocation(line: 1191, column: 7, scope: !23403)
!23403 = distinct !DILexicalBlock(scope: !23395, file: !1676, line: 1191, column: 7)
!23404 = !DILocation(line: 1191, column: 7, scope: !23395)
!23405 = !DILocation(line: 1193, column: 5, scope: !23406)
!23406 = distinct !DILexicalBlock(scope: !23403, file: !1676, line: 1192, column: 3)
!23407 = !DILocation(line: 1194, column: 3, scope: !23406)
!23408 = !DILocalVariable(name: "line_str", scope: !23409, file: !1676, line: 1196, type: !1733)
!23409 = distinct !DILexicalBlock(scope: !23395, file: !1676, line: 1195, column: 3)
!23410 = !DILocation(line: 1196, column: 18, scope: !23409)
!23411 = !DILocation(line: 1197, column: 5, scope: !23409)
!23412 = !DILocation(line: 1198, column: 33, scope: !23409)
!23413 = !DILocation(line: 1198, column: 5, scope: !23409)
!23414 = !DILocation(line: 1199, column: 9, scope: !23415)
!23415 = distinct !DILexicalBlock(scope: !23409, file: !1676, line: 1199, column: 9)
!23416 = !DILocation(line: 1199, column: 31, scope: !23415)
!23417 = !DILocation(line: 1199, column: 9, scope: !23409)
!23418 = !DILocation(line: 1201, column: 7, scope: !23419)
!23419 = distinct !DILexicalBlock(scope: !23415, file: !1676, line: 1200, column: 5)
!23420 = !DILocation(line: 1202, column: 7, scope: !23419)
!23421 = !DILocation(line: 1204, column: 41, scope: !23409)
!23422 = !DILocation(line: 1204, column: 5, scope: !23409)
!23423 = !DILocation(line: 1206, column: 5, scope: !23409)
!23424 = !DILocation(line: 1208, column: 20, scope: !23395)
!23425 = !DILocation(line: 1209, column: 19, scope: !23395)
!23426 = !DILocation(line: 1210, column: 20, scope: !23395)
!23427 = !DILocation(line: 1210, column: 18, scope: !23395)
!23428 = !DILocation(line: 1211, column: 50, scope: !23395)
!23429 = !DILocation(line: 1211, column: 39, scope: !23395)
!23430 = !DILocation(line: 1211, column: 3, scope: !23395)
!23431 = !DILocation(line: 1213, column: 50, scope: !23395)
!23432 = !DILocation(line: 1213, column: 39, scope: !23395)
!23433 = !DILocation(line: 1213, column: 3, scope: !23395)
!23434 = !DILocation(line: 1215, column: 26, scope: !23395)
!23435 = !DILocation(line: 1215, column: 24, scope: !23395)
!23436 = !DILocation(line: 1216, column: 3, scope: !23395)
!23437 = !DILocation(line: 1217, column: 10, scope: !23395)
!23438 = !DILocation(line: 1218, column: 3, scope: !23395)
!23439 = !DILocation(line: 1219, column: 3, scope: !23395)
!23440 = !DILocation(line: 1220, column: 1, scope: !23395)
!23441 = distinct !DISubprogram(name: "vsf_remove_uwtmp", scope: !1676, file: !1676, line: 1223, type: !1619, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23442 = !DILocation(line: 1225, column: 8, scope: !23443)
!23443 = distinct !DILexicalBlock(scope: !23441, file: !1676, line: 1225, column: 7)
!23444 = !DILocation(line: 1225, column: 7, scope: !23441)
!23445 = !DILocation(line: 1227, column: 5, scope: !23446)
!23446 = distinct !DILexicalBlock(scope: !23443, file: !1676, line: 1226, column: 3)
!23447 = !DILocation(line: 1229, column: 20, scope: !23441)
!23448 = !DILocation(line: 1230, column: 19, scope: !23441)
!23449 = !DILocation(line: 1231, column: 3, scope: !23441)
!23450 = !DILocation(line: 1232, column: 3, scope: !23441)
!23451 = !DILocation(line: 1233, column: 24, scope: !23441)
!23452 = !DILocation(line: 1234, column: 3, scope: !23441)
!23453 = !DILocation(line: 1235, column: 10, scope: !23441)
!23454 = !DILocation(line: 1236, column: 3, scope: !23441)
!23455 = !DILocation(line: 1237, column: 26, scope: !23441)
!23456 = !DILocation(line: 1237, column: 24, scope: !23441)
!23457 = !DILocation(line: 1238, column: 3, scope: !23441)
!23458 = !DILocation(line: 1239, column: 1, scope: !23441)
!23459 = distinct !DISubprogram(name: "vsf_auth_shutdown", scope: !1676, file: !1676, line: 434, type: !1619, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23460 = !DILocation(line: 436, column: 7, scope: !23461)
!23461 = distinct !DILexicalBlock(scope: !23459, file: !1676, line: 436, column: 7)
!23462 = !DILocation(line: 436, column: 14, scope: !23461)
!23463 = !DILocation(line: 436, column: 7, scope: !23459)
!23464 = !DILocation(line: 438, column: 5, scope: !23465)
!23465 = distinct !DILexicalBlock(scope: !23461, file: !1676, line: 437, column: 3)
!23466 = !DILocation(line: 439, column: 3, scope: !23465)
!23467 = !DILocation(line: 440, column: 28, scope: !23459)
!23468 = !DILocation(line: 440, column: 10, scope: !23459)
!23469 = !DILocation(line: 441, column: 22, scope: !23459)
!23470 = !DILocation(line: 441, column: 10, scope: !23459)
!23471 = !DILocation(line: 442, column: 18, scope: !23459)
!23472 = !DILocation(line: 442, column: 10, scope: !23459)
!23473 = !DILocation(line: 443, column: 10, scope: !23459)
!23474 = !DILocation(line: 444, column: 3, scope: !23459)
!23475 = !DILocation(line: 445, column: 1, scope: !23459)
!23476 = distinct !DISubprogram(name: "pam_conv_func", scope: !1676, file: !1676, line: 448, type: !23221, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23477 = !DILocalVariable(name: "nmsg", arg: 1, scope: !23476, file: !1676, line: 448, type: !19)
!23478 = !DILocation(line: 448, column: 19, scope: !23476)
!23479 = !DILocalVariable(name: "p_msg", arg: 2, scope: !23476, file: !1676, line: 448, type: !23223)
!23480 = !DILocation(line: 448, column: 52, scope: !23476)
!23481 = !DILocalVariable(name: "p_reply", arg: 3, scope: !23476, file: !1676, line: 449, type: !23230)
!23482 = !DILocation(line: 449, column: 37, scope: !23476)
!23483 = !DILocalVariable(name: "p_addata", arg: 4, scope: !23476, file: !1676, line: 449, type: !80)
!23484 = !DILocation(line: 449, column: 52, scope: !23476)
!23485 = !DILocalVariable(name: "i", scope: !23476, file: !1676, line: 451, type: !19)
!23486 = !DILocation(line: 451, column: 7, scope: !23476)
!23487 = !DILocalVariable(name: "p_resps", scope: !23476, file: !1676, line: 452, type: !23231)
!23488 = !DILocation(line: 452, column: 24, scope: !23476)
!23489 = !DILocation(line: 453, column: 10, scope: !23476)
!23490 = !DILocation(line: 454, column: 7, scope: !23491)
!23491 = distinct !DILexicalBlock(scope: !23476, file: !1676, line: 454, column: 7)
!23492 = !DILocation(line: 454, column: 12, scope: !23491)
!23493 = !DILocation(line: 454, column: 7, scope: !23476)
!23494 = !DILocation(line: 456, column: 5, scope: !23495)
!23495 = distinct !DILexicalBlock(scope: !23491, file: !1676, line: 455, column: 3)
!23496 = !DILocation(line: 457, column: 3, scope: !23495)
!23497 = !DILocation(line: 458, column: 62, scope: !23476)
!23498 = !DILocation(line: 458, column: 60, scope: !23476)
!23499 = !DILocation(line: 458, column: 32, scope: !23476)
!23500 = !DILocation(line: 458, column: 13, scope: !23476)
!23501 = !DILocation(line: 458, column: 11, scope: !23476)
!23502 = !DILocation(line: 459, column: 9, scope: !23503)
!23503 = distinct !DILexicalBlock(scope: !23476, file: !1676, line: 459, column: 3)
!23504 = !DILocation(line: 459, column: 8, scope: !23503)
!23505 = !DILocation(line: 459, column: 13, scope: !23506)
!23506 = distinct !DILexicalBlock(scope: !23503, file: !1676, line: 459, column: 3)
!23507 = !DILocation(line: 459, column: 15, scope: !23506)
!23508 = !DILocation(line: 459, column: 14, scope: !23506)
!23509 = !DILocation(line: 459, column: 3, scope: !23503)
!23510 = !DILocation(line: 461, column: 13, scope: !23511)
!23511 = distinct !DILexicalBlock(scope: !23506, file: !1676, line: 460, column: 3)
!23512 = !DILocation(line: 461, column: 19, scope: !23511)
!23513 = !DILocation(line: 461, column: 23, scope: !23511)
!23514 = !DILocation(line: 461, column: 5, scope: !23511)
!23515 = !DILocation(line: 464, column: 9, scope: !23516)
!23516 = distinct !DILexicalBlock(scope: !23511, file: !1676, line: 462, column: 5)
!23517 = !DILocation(line: 464, column: 17, scope: !23516)
!23518 = !DILocation(line: 464, column: 20, scope: !23516)
!23519 = !DILocation(line: 464, column: 33, scope: !23516)
!23520 = !DILocation(line: 465, column: 35, scope: !23516)
!23521 = !DILocation(line: 465, column: 9, scope: !23516)
!23522 = !DILocation(line: 465, column: 17, scope: !23516)
!23523 = !DILocation(line: 465, column: 20, scope: !23516)
!23524 = !DILocation(line: 465, column: 25, scope: !23516)
!23525 = !DILocation(line: 466, column: 9, scope: !23516)
!23526 = !DILocation(line: 469, column: 9, scope: !23516)
!23527 = !DILocation(line: 469, column: 17, scope: !23516)
!23528 = !DILocation(line: 469, column: 20, scope: !23516)
!23529 = !DILocation(line: 469, column: 33, scope: !23516)
!23530 = !DILocation(line: 470, column: 9, scope: !23516)
!23531 = !DILocation(line: 470, column: 17, scope: !23516)
!23532 = !DILocation(line: 470, column: 20, scope: !23516)
!23533 = !DILocation(line: 470, column: 25, scope: !23516)
!23534 = !DILocation(line: 471, column: 9, scope: !23516)
!23535 = !DILocation(line: 474, column: 26, scope: !23516)
!23536 = !DILocation(line: 474, column: 9, scope: !23516)
!23537 = !DILocation(line: 475, column: 9, scope: !23516)
!23538 = !DILocation(line: 478, column: 3, scope: !23511)
!23539 = !DILocation(line: 459, column: 22, scope: !23506)
!23540 = !DILocation(line: 459, column: 3, scope: !23506)
!23541 = distinct !{!23541, !23509, !23542}
!23542 = !DILocation(line: 478, column: 3, scope: !23503)
!23543 = !DILocation(line: 479, column: 14, scope: !23476)
!23544 = !DILocation(line: 479, column: 4, scope: !23476)
!23545 = !DILocation(line: 479, column: 12, scope: !23476)
!23546 = !DILocation(line: 480, column: 3, scope: !23476)
!23547 = !DILocation(line: 481, column: 1, scope: !23476)
!23548 = distinct !DISubprogram(name: "vsf_sysdep_keep_capabilities", scope: !1676, file: !1676, line: 487, type: !1619, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23549 = !DILocation(line: 489, column: 8, scope: !23550)
!23550 = distinct !DILexicalBlock(scope: !23548, file: !1676, line: 489, column: 7)
!23551 = !DILocation(line: 489, column: 7, scope: !23548)
!23552 = !DILocation(line: 491, column: 5, scope: !23553)
!23553 = distinct !DILexicalBlock(scope: !23550, file: !1676, line: 490, column: 3)
!23554 = !DILocation(line: 492, column: 3, scope: !23553)
!23555 = !DILocalVariable(name: "retval", scope: !23556, file: !1676, line: 495, type: !19)
!23556 = distinct !DILexicalBlock(scope: !23548, file: !1676, line: 494, column: 3)
!23557 = !DILocation(line: 495, column: 9, scope: !23556)
!23558 = !DILocation(line: 495, column: 18, scope: !23556)
!23559 = !DILocation(line: 496, column: 37, scope: !23560)
!23560 = distinct !DILexicalBlock(scope: !23556, file: !1676, line: 496, column: 9)
!23561 = !DILocation(line: 496, column: 9, scope: !23560)
!23562 = !DILocation(line: 496, column: 9, scope: !23556)
!23563 = !DILocation(line: 498, column: 7, scope: !23564)
!23564 = distinct !DILexicalBlock(scope: !23560, file: !1676, line: 497, column: 5)
!23565 = !DILocation(line: 499, column: 5, scope: !23564)
!23566 = !DILocation(line: 502, column: 1, scope: !23548)
!23567 = !DILocation(line: 533, column: 8, scope: !23568)
!23568 = distinct !DILexicalBlock(scope: !1712, file: !1676, line: 533, column: 7)
!23569 = !DILocation(line: 533, column: 7, scope: !1712)
!23570 = !DILocation(line: 537, column: 38, scope: !23571)
!23571 = distinct !DILexicalBlock(scope: !23572, file: !1676, line: 537, column: 9)
!23572 = distinct !DILexicalBlock(scope: !23568, file: !1676, line: 534, column: 3)
!23573 = !DILocation(line: 537, column: 10, scope: !23571)
!23574 = !DILocation(line: 537, column: 9, scope: !23572)
!23575 = !DILocation(line: 539, column: 29, scope: !23576)
!23576 = distinct !DILexicalBlock(scope: !23571, file: !1676, line: 538, column: 5)
!23577 = !DILocation(line: 540, column: 5, scope: !23576)
!23578 = !DILocation(line: 542, column: 21, scope: !23572)
!23579 = !DILocation(line: 543, column: 3, scope: !23572)
!23580 = !DILocation(line: 544, column: 10, scope: !1712)
!23581 = !DILocation(line: 544, column: 3, scope: !1712)
!23582 = !DILocation(line: 555, column: 8, scope: !23583)
!23583 = distinct !DILexicalBlock(scope: !1719, file: !1676, line: 555, column: 7)
!23584 = !DILocation(line: 555, column: 7, scope: !1719)
!23585 = !DILocation(line: 557, column: 26, scope: !23586)
!23586 = distinct !DILexicalBlock(scope: !23583, file: !1676, line: 556, column: 3)
!23587 = !DILocation(line: 557, column: 24, scope: !23586)
!23588 = !DILocation(line: 558, column: 20, scope: !23586)
!23589 = !DILocation(line: 559, column: 3, scope: !23586)
!23590 = !DILocation(line: 560, column: 10, scope: !1719)
!23591 = !DILocation(line: 560, column: 3, scope: !1719)
!23592 = distinct !DISubprogram(name: "do_checkcap", scope: !1676, file: !1676, line: 612, type: !1713, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23593 = !DILocalVariable(name: "current_caps", scope: !23592, file: !1676, line: 614, type: !23594)
!23594 = !DIDerivedType(tag: DW_TAG_typedef, name: "cap_t", file: !1684, line: 39, baseType: !23595)
!23595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23596, size: 64)
!23596 = !DICompositeType(tag: DW_TAG_structure_type, name: "_cap_struct", file: !1684, line: 39, flags: DIFlagFwdDecl)
!23597 = !DILocation(line: 614, column: 9, scope: !23592)
!23598 = !DILocation(line: 614, column: 24, scope: !23592)
!23599 = !DILocation(line: 615, column: 12, scope: !23592)
!23600 = !DILocation(line: 615, column: 3, scope: !23592)
!23601 = !DILocation(line: 616, column: 7, scope: !23602)
!23602 = distinct !DILexicalBlock(scope: !23592, file: !1676, line: 616, column: 7)
!23603 = !DILocation(line: 616, column: 20, scope: !23602)
!23604 = !DILocation(line: 616, column: 7, scope: !23592)
!23605 = !DILocation(line: 618, column: 5, scope: !23606)
!23606 = distinct !DILexicalBlock(scope: !23602, file: !1676, line: 617, column: 3)
!23607 = !DILocation(line: 620, column: 3, scope: !23592)
!23608 = !DILocation(line: 621, column: 1, scope: !23592)
!23609 = distinct !DISubprogram(name: "vsf_sysdep_adopt_capabilities", scope: !1676, file: !1676, line: 624, type: !22651, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23610 = !DILocalVariable(name: "caps", arg: 1, scope: !23609, file: !1676, line: 624, type: !26)
!23611 = !DILocation(line: 624, column: 44, scope: !23609)
!23612 = !DILocalVariable(name: "retval", scope: !23609, file: !1676, line: 626, type: !19)
!23613 = !DILocation(line: 626, column: 7, scope: !23609)
!23614 = !DILocalVariable(name: "cap_value", scope: !23609, file: !1676, line: 627, type: !23615)
!23615 = !DIDerivedType(tag: DW_TAG_typedef, name: "cap_value_t", file: !1684, line: 47, baseType: !19)
!23616 = !DILocation(line: 627, column: 15, scope: !23609)
!23617 = !DILocalVariable(name: "adopt_caps", scope: !23609, file: !1676, line: 628, type: !23594)
!23618 = !DILocation(line: 628, column: 9, scope: !23609)
!23619 = !DILocation(line: 628, column: 22, scope: !23609)
!23620 = !DILocation(line: 629, column: 7, scope: !23621)
!23621 = distinct !DILexicalBlock(scope: !23609, file: !1676, line: 629, column: 7)
!23622 = !DILocation(line: 629, column: 12, scope: !23621)
!23623 = !DILocation(line: 629, column: 7, scope: !23609)
!23624 = !DILocation(line: 631, column: 15, scope: !23625)
!23625 = distinct !DILexicalBlock(scope: !23621, file: !1676, line: 630, column: 3)
!23626 = !DILocation(line: 632, column: 18, scope: !23625)
!23627 = !DILocation(line: 632, column: 5, scope: !23625)
!23628 = !DILocation(line: 633, column: 18, scope: !23625)
!23629 = !DILocation(line: 633, column: 5, scope: !23625)
!23630 = !DILocation(line: 634, column: 3, scope: !23625)
!23631 = !DILocation(line: 635, column: 7, scope: !23632)
!23632 = distinct !DILexicalBlock(scope: !23609, file: !1676, line: 635, column: 7)
!23633 = !DILocation(line: 635, column: 12, scope: !23632)
!23634 = !DILocation(line: 635, column: 7, scope: !23609)
!23635 = !DILocation(line: 637, column: 15, scope: !23636)
!23636 = distinct !DILexicalBlock(scope: !23632, file: !1676, line: 636, column: 3)
!23637 = !DILocation(line: 638, column: 18, scope: !23636)
!23638 = !DILocation(line: 638, column: 5, scope: !23636)
!23639 = !DILocation(line: 639, column: 18, scope: !23636)
!23640 = !DILocation(line: 639, column: 5, scope: !23636)
!23641 = !DILocation(line: 640, column: 3, scope: !23636)
!23642 = !DILocation(line: 641, column: 25, scope: !23609)
!23643 = !DILocation(line: 641, column: 12, scope: !23609)
!23644 = !DILocation(line: 641, column: 10, scope: !23609)
!23645 = !DILocation(line: 642, column: 7, scope: !23646)
!23646 = distinct !DILexicalBlock(scope: !23609, file: !1676, line: 642, column: 7)
!23647 = !DILocation(line: 642, column: 14, scope: !23646)
!23648 = !DILocation(line: 642, column: 7, scope: !23609)
!23649 = !DILocation(line: 644, column: 5, scope: !23650)
!23650 = distinct !DILexicalBlock(scope: !23646, file: !1676, line: 643, column: 3)
!23651 = !DILocation(line: 645, column: 3, scope: !23650)
!23652 = !DILocation(line: 646, column: 12, scope: !23609)
!23653 = !DILocation(line: 646, column: 3, scope: !23609)
!23654 = !DILocation(line: 647, column: 1, scope: !23609)
!23655 = distinct !DISubprogram(name: "vsf_sysutil_sendfile", scope: !1676, file: !1676, line: 653, type: !23656, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23656 = !DISubroutineType(types: !23657)
!23657 = !{!19, !1782, !1782, !23658, !41, !26}
!23658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!23659 = !DILocalVariable(name: "out_fd", arg: 1, scope: !23655, file: !1676, line: 653, type: !1782)
!23660 = !DILocation(line: 653, column: 32, scope: !23655)
!23661 = !DILocalVariable(name: "in_fd", arg: 2, scope: !23655, file: !1676, line: 653, type: !1782)
!23662 = !DILocation(line: 653, column: 50, scope: !23655)
!23663 = !DILocalVariable(name: "p_offset", arg: 3, scope: !23655, file: !1676, line: 654, type: !23658)
!23664 = !DILocation(line: 654, column: 34, scope: !23655)
!23665 = !DILocalVariable(name: "num_send", arg: 4, scope: !23655, file: !1676, line: 654, type: !41)
!23666 = !DILocation(line: 654, column: 55, scope: !23655)
!23667 = !DILocalVariable(name: "max_chunk", arg: 5, scope: !23655, file: !1676, line: 655, type: !26)
!23668 = !DILocation(line: 655, column: 35, scope: !23655)
!23669 = !DILocation(line: 658, column: 8, scope: !23670)
!23670 = distinct !DILexicalBlock(scope: !23655, file: !1676, line: 658, column: 7)
!23671 = !DILocation(line: 658, column: 7, scope: !23670)
!23672 = !DILocation(line: 658, column: 17, scope: !23670)
!23673 = !DILocation(line: 658, column: 21, scope: !23670)
!23674 = !DILocation(line: 658, column: 24, scope: !23670)
!23675 = !DILocation(line: 658, column: 33, scope: !23670)
!23676 = !DILocation(line: 658, column: 7, scope: !23655)
!23677 = !DILocation(line: 660, column: 5, scope: !23678)
!23678 = distinct !DILexicalBlock(scope: !23670, file: !1676, line: 659, column: 3)
!23679 = !DILocation(line: 661, column: 3, scope: !23678)
!23680 = !DILocation(line: 662, column: 7, scope: !23681)
!23681 = distinct !DILexicalBlock(scope: !23655, file: !1676, line: 662, column: 7)
!23682 = !DILocation(line: 662, column: 17, scope: !23681)
!23683 = !DILocation(line: 662, column: 7, scope: !23655)
!23684 = !DILocation(line: 664, column: 15, scope: !23685)
!23685 = distinct !DILexicalBlock(scope: !23681, file: !1676, line: 663, column: 3)
!23686 = !DILocation(line: 665, column: 3, scope: !23685)
!23687 = !DILocation(line: 666, column: 3, scope: !23655)
!23688 = !DILocation(line: 666, column: 10, scope: !23655)
!23689 = !DILocation(line: 666, column: 19, scope: !23655)
!23690 = !DILocalVariable(name: "retval", scope: !23691, file: !1676, line: 668, type: !19)
!23691 = distinct !DILexicalBlock(scope: !23655, file: !1676, line: 667, column: 3)
!23692 = !DILocation(line: 668, column: 9, scope: !23691)
!23693 = !DILocalVariable(name: "send_this_time", scope: !23691, file: !1676, line: 669, type: !26)
!23694 = !DILocation(line: 669, column: 18, scope: !23691)
!23695 = !DILocation(line: 670, column: 9, scope: !23696)
!23696 = distinct !DILexicalBlock(scope: !23691, file: !1676, line: 670, column: 9)
!23697 = !DILocation(line: 670, column: 20, scope: !23696)
!23698 = !DILocation(line: 670, column: 18, scope: !23696)
!23699 = !DILocation(line: 670, column: 9, scope: !23691)
!23700 = !DILocation(line: 672, column: 24, scope: !23701)
!23701 = distinct !DILexicalBlock(scope: !23696, file: !1676, line: 671, column: 5)
!23702 = !DILocation(line: 672, column: 22, scope: !23701)
!23703 = !DILocation(line: 673, column: 5, scope: !23701)
!23704 = !DILocation(line: 676, column: 39, scope: !23705)
!23705 = distinct !DILexicalBlock(scope: !23696, file: !1676, line: 675, column: 5)
!23706 = !DILocation(line: 676, column: 24, scope: !23705)
!23707 = !DILocation(line: 676, column: 22, scope: !23705)
!23708 = !DILocation(line: 679, column: 26, scope: !23691)
!23709 = !DILocation(line: 679, column: 34, scope: !23691)
!23710 = !DILocation(line: 679, column: 33, scope: !23691)
!23711 = !DILocation(line: 679, column: 5, scope: !23691)
!23712 = !DILocation(line: 680, column: 26, scope: !23691)
!23713 = !DILocation(line: 680, column: 34, scope: !23691)
!23714 = !DILocation(line: 680, column: 41, scope: !23691)
!23715 = !DILocation(line: 680, column: 58, scope: !23691)
!23716 = !DILocation(line: 680, column: 57, scope: !23691)
!23717 = !DILocation(line: 680, column: 14, scope: !23691)
!23718 = !DILocation(line: 680, column: 12, scope: !23691)
!23719 = !DILocation(line: 681, column: 37, scope: !23720)
!23720 = distinct !DILexicalBlock(scope: !23691, file: !1676, line: 681, column: 9)
!23721 = !DILocation(line: 681, column: 9, scope: !23720)
!23722 = !DILocation(line: 681, column: 45, scope: !23720)
!23723 = !DILocation(line: 681, column: 48, scope: !23720)
!23724 = !DILocation(line: 681, column: 55, scope: !23720)
!23725 = !DILocation(line: 681, column: 9, scope: !23691)
!23726 = !DILocation(line: 683, column: 14, scope: !23727)
!23727 = distinct !DILexicalBlock(scope: !23720, file: !1676, line: 682, column: 5)
!23728 = !DILocation(line: 683, column: 7, scope: !23727)
!23729 = !DILocation(line: 685, column: 17, scope: !23691)
!23730 = !DILocation(line: 685, column: 14, scope: !23691)
!23731 = !DILocation(line: 686, column: 18, scope: !23691)
!23732 = !DILocation(line: 686, column: 6, scope: !23691)
!23733 = !DILocation(line: 686, column: 15, scope: !23691)
!23734 = distinct !{!23734, !23687, !23735}
!23735 = !DILocation(line: 687, column: 3, scope: !23655)
!23736 = !DILocation(line: 688, column: 3, scope: !23655)
!23737 = !DILocation(line: 689, column: 1, scope: !23655)
!23738 = !DILocalVariable(name: "out_fd", arg: 1, scope: !1779, file: !1676, line: 691, type: !1782)
!23739 = !DILocation(line: 691, column: 34, scope: !1779)
!23740 = !DILocalVariable(name: "in_fd", arg: 2, scope: !1779, file: !1676, line: 691, type: !1782)
!23741 = !DILocation(line: 691, column: 52, scope: !1779)
!23742 = !DILocalVariable(name: "num_send", arg: 3, scope: !1779, file: !1676, line: 692, type: !26)
!23743 = !DILocation(line: 692, column: 37, scope: !1779)
!23744 = !DILocalVariable(name: "start_pos", arg: 4, scope: !1779, file: !1676, line: 692, type: !41)
!23745 = !DILocation(line: 692, column: 58, scope: !1779)
!23746 = !DILocalVariable(name: "total_written", scope: !1779, file: !1676, line: 696, type: !26)
!23747 = !DILocation(line: 696, column: 16, scope: !1779)
!23748 = !DILocalVariable(name: "retval", scope: !1779, file: !1676, line: 697, type: !19)
!23749 = !DILocation(line: 697, column: 7, scope: !1779)
!23750 = !DILocalVariable(name: "error", scope: !1779, file: !1676, line: 698, type: !1034)
!23751 = !DILocation(line: 698, column: 25, scope: !1779)
!23752 = !DILocation(line: 699, column: 10, scope: !1779)
!23753 = !DILocation(line: 700, column: 10, scope: !1779)
!23754 = !DILocation(line: 706, column: 7, scope: !23755)
!23755 = distinct !DILexicalBlock(scope: !1779, file: !1676, line: 706, column: 7)
!23756 = !DILocation(line: 706, column: 7, scope: !1779)
!23757 = !DILocation(line: 710, column: 10, scope: !23758)
!23758 = distinct !DILexicalBlock(scope: !23759, file: !1676, line: 710, column: 9)
!23759 = distinct !DILexicalBlock(scope: !23755, file: !1676, line: 707, column: 3)
!23760 = !DILocation(line: 710, column: 29, scope: !23758)
!23761 = !DILocation(line: 710, column: 32, scope: !23758)
!23762 = !DILocation(line: 710, column: 9, scope: !23759)
!23763 = !DILocation(line: 712, column: 7, scope: !23764)
!23764 = distinct !DILexicalBlock(scope: !23758, file: !1676, line: 711, column: 5)
!23765 = distinct !{!23765, !23763, !23766}
!23766 = !DILocation(line: 772, column: 41, scope: !23764)
!23767 = !DILocation(line: 715, column: 27, scope: !23768)
!23768 = distinct !DILexicalBlock(scope: !23764, file: !1676, line: 713, column: 7)
!23769 = !DILocation(line: 715, column: 35, scope: !23768)
!23770 = !DILocation(line: 715, column: 48, scope: !23768)
!23771 = !DILocation(line: 715, column: 18, scope: !23768)
!23772 = !DILocation(line: 715, column: 16, scope: !23768)
!23773 = !DILocation(line: 768, column: 17, scope: !23768)
!23774 = !DILocation(line: 768, column: 15, scope: !23768)
!23775 = !DILocation(line: 769, column: 58, scope: !23768)
!23776 = !DILocation(line: 769, column: 66, scope: !23768)
!23777 = !DILocation(line: 769, column: 9, scope: !23768)
!23778 = !DILocation(line: 770, column: 7, scope: !23768)
!23779 = !DILocation(line: 771, column: 42, scope: !23764)
!23780 = !DILocation(line: 771, column: 14, scope: !23764)
!23781 = !DILocation(line: 771, column: 50, scope: !23764)
!23782 = !DILocation(line: 772, column: 14, scope: !23764)
!23783 = !DILocation(line: 772, column: 20, scope: !23764)
!23784 = !DILocation(line: 773, column: 12, scope: !23785)
!23785 = distinct !DILexicalBlock(scope: !23764, file: !1676, line: 773, column: 11)
!23786 = !DILocation(line: 773, column: 11, scope: !23764)
!23787 = !DILocation(line: 775, column: 28, scope: !23788)
!23788 = distinct !DILexicalBlock(scope: !23785, file: !1676, line: 774, column: 7)
!23789 = !DILocation(line: 776, column: 42, scope: !23790)
!23790 = distinct !DILexicalBlock(scope: !23788, file: !1676, line: 776, column: 13)
!23791 = !DILocation(line: 776, column: 14, scope: !23790)
!23792 = !DILocation(line: 776, column: 50, scope: !23790)
!23793 = !DILocation(line: 777, column: 13, scope: !23790)
!23794 = !DILocation(line: 777, column: 19, scope: !23790)
!23795 = !DILocation(line: 776, column: 13, scope: !23788)
!23796 = !DILocation(line: 779, column: 36, scope: !23797)
!23797 = distinct !DILexicalBlock(scope: !23790, file: !1676, line: 778, column: 9)
!23798 = !DILocation(line: 780, column: 9, scope: !23797)
!23799 = !DILocation(line: 781, column: 7, scope: !23788)
!23800 = !DILocation(line: 782, column: 40, scope: !23801)
!23801 = distinct !DILexicalBlock(scope: !23764, file: !1676, line: 782, column: 11)
!23802 = !DILocation(line: 782, column: 12, scope: !23801)
!23803 = !DILocation(line: 782, column: 11, scope: !23764)
!23804 = !DILocation(line: 784, column: 16, scope: !23805)
!23805 = distinct !DILexicalBlock(scope: !23801, file: !1676, line: 783, column: 7)
!23806 = !DILocation(line: 784, column: 9, scope: !23805)
!23807 = !DILocation(line: 786, column: 11, scope: !23808)
!23808 = distinct !DILexicalBlock(scope: !23764, file: !1676, line: 786, column: 11)
!23809 = !DILocation(line: 786, column: 36, scope: !23808)
!23810 = !DILocation(line: 786, column: 39, scope: !23808)
!23811 = !DILocation(line: 786, column: 45, scope: !23808)
!23812 = !DILocation(line: 786, column: 68, scope: !23808)
!23813 = !DILocation(line: 787, column: 11, scope: !23808)
!23814 = !DILocation(line: 787, column: 17, scope: !23808)
!23815 = !DILocation(line: 786, column: 11, scope: !23764)
!23816 = !DILocation(line: 789, column: 16, scope: !23817)
!23817 = distinct !DILexicalBlock(scope: !23808, file: !1676, line: 788, column: 7)
!23818 = !DILocation(line: 789, column: 9, scope: !23817)
!23819 = !DILocation(line: 796, column: 5, scope: !23764)
!23820 = !DILocation(line: 797, column: 3, scope: !23759)
!23821 = !DILocation(line: 799, column: 7, scope: !23822)
!23822 = distinct !DILexicalBlock(scope: !1779, file: !1676, line: 799, column: 7)
!23823 = !DILocation(line: 799, column: 17, scope: !23822)
!23824 = !DILocation(line: 799, column: 7, scope: !1779)
!23825 = !DILocation(line: 801, column: 5, scope: !23826)
!23826 = distinct !DILexicalBlock(scope: !23822, file: !1676, line: 800, column: 3)
!23827 = !DILocation(line: 802, column: 3, scope: !23826)
!23828 = !DILocation(line: 803, column: 3, scope: !1779)
!23829 = !DILocalVariable(name: "num_read", scope: !23830, file: !1676, line: 805, type: !26)
!23830 = distinct !DILexicalBlock(scope: !1779, file: !1676, line: 804, column: 3)
!23831 = !DILocation(line: 805, column: 18, scope: !23830)
!23832 = !DILocalVariable(name: "num_written", scope: !23830, file: !1676, line: 806, type: !26)
!23833 = !DILocation(line: 806, column: 18, scope: !23830)
!23834 = !DILocalVariable(name: "num_read_this_time", scope: !23830, file: !1676, line: 807, type: !26)
!23835 = !DILocation(line: 807, column: 18, scope: !23830)
!23836 = !DILocation(line: 808, column: 9, scope: !23837)
!23837 = distinct !DILexicalBlock(scope: !23830, file: !1676, line: 808, column: 9)
!23838 = !DILocation(line: 808, column: 30, scope: !23837)
!23839 = !DILocation(line: 808, column: 28, scope: !23837)
!23840 = !DILocation(line: 808, column: 9, scope: !23830)
!23841 = !DILocation(line: 810, column: 28, scope: !23842)
!23842 = distinct !DILexicalBlock(scope: !23837, file: !1676, line: 809, column: 5)
!23843 = !DILocation(line: 810, column: 26, scope: !23842)
!23844 = !DILocation(line: 811, column: 5, scope: !23842)
!23845 = !DILocation(line: 812, column: 31, scope: !23830)
!23846 = !DILocation(line: 812, column: 38, scope: !23830)
!23847 = !DILocation(line: 812, column: 49, scope: !23830)
!23848 = !DILocation(line: 812, column: 14, scope: !23830)
!23849 = !DILocation(line: 812, column: 12, scope: !23830)
!23850 = !DILocation(line: 813, column: 9, scope: !23851)
!23851 = distinct !DILexicalBlock(scope: !23830, file: !1676, line: 813, column: 9)
!23852 = !DILocation(line: 813, column: 16, scope: !23851)
!23853 = !DILocation(line: 813, column: 9, scope: !23830)
!23854 = !DILocation(line: 815, column: 14, scope: !23855)
!23855 = distinct !DILexicalBlock(scope: !23851, file: !1676, line: 814, column: 5)
!23856 = !DILocation(line: 815, column: 7, scope: !23855)
!23857 = !DILocation(line: 817, column: 14, scope: !23858)
!23858 = distinct !DILexicalBlock(scope: !23851, file: !1676, line: 817, column: 14)
!23859 = !DILocation(line: 817, column: 21, scope: !23858)
!23860 = !DILocation(line: 817, column: 14, scope: !23851)
!23861 = !DILocation(line: 819, column: 7, scope: !23862)
!23862 = distinct !DILexicalBlock(scope: !23858, file: !1676, line: 818, column: 5)
!23863 = !DILocation(line: 821, column: 31, scope: !23830)
!23864 = !DILocation(line: 821, column: 14, scope: !23830)
!23865 = !DILocation(line: 822, column: 37, scope: !23830)
!23866 = !DILocation(line: 822, column: 45, scope: !23830)
!23867 = !DILocation(line: 822, column: 56, scope: !23830)
!23868 = !DILocation(line: 822, column: 14, scope: !23830)
!23869 = !DILocation(line: 822, column: 12, scope: !23830)
!23870 = !DILocation(line: 823, column: 9, scope: !23871)
!23871 = distinct !DILexicalBlock(scope: !23830, file: !1676, line: 823, column: 9)
!23872 = !DILocation(line: 823, column: 16, scope: !23871)
!23873 = !DILocation(line: 823, column: 9, scope: !23830)
!23874 = !DILocation(line: 825, column: 14, scope: !23875)
!23875 = distinct !DILexicalBlock(scope: !23871, file: !1676, line: 824, column: 5)
!23876 = !DILocation(line: 825, column: 7, scope: !23875)
!23877 = !DILocation(line: 827, column: 34, scope: !23830)
!23878 = !DILocation(line: 827, column: 17, scope: !23830)
!23879 = !DILocation(line: 828, column: 22, scope: !23830)
!23880 = !DILocation(line: 828, column: 19, scope: !23830)
!23881 = !DILocation(line: 829, column: 9, scope: !23882)
!23882 = distinct !DILexicalBlock(scope: !23830, file: !1676, line: 829, column: 9)
!23883 = !DILocation(line: 829, column: 24, scope: !23882)
!23884 = !DILocation(line: 829, column: 21, scope: !23882)
!23885 = !DILocation(line: 829, column: 9, scope: !23830)
!23886 = !DILocation(line: 831, column: 14, scope: !23887)
!23887 = distinct !DILexicalBlock(scope: !23882, file: !1676, line: 830, column: 5)
!23888 = !DILocation(line: 831, column: 7, scope: !23887)
!23889 = !DILocation(line: 833, column: 9, scope: !23890)
!23890 = distinct !DILexicalBlock(scope: !23830, file: !1676, line: 833, column: 9)
!23891 = !DILocation(line: 833, column: 23, scope: !23890)
!23892 = !DILocation(line: 833, column: 21, scope: !23890)
!23893 = !DILocation(line: 833, column: 9, scope: !23830)
!23894 = !DILocation(line: 835, column: 7, scope: !23895)
!23895 = distinct !DILexicalBlock(scope: !23890, file: !1676, line: 834, column: 5)
!23896 = !DILocation(line: 836, column: 5, scope: !23895)
!23897 = !DILocation(line: 837, column: 17, scope: !23830)
!23898 = !DILocation(line: 837, column: 14, scope: !23830)
!23899 = !DILocation(line: 838, column: 9, scope: !23900)
!23900 = distinct !DILexicalBlock(scope: !23830, file: !1676, line: 838, column: 9)
!23901 = !DILocation(line: 838, column: 18, scope: !23900)
!23902 = !DILocation(line: 838, column: 9, scope: !23830)
!23903 = !DILocation(line: 841, column: 14, scope: !23904)
!23904 = distinct !DILexicalBlock(scope: !23900, file: !1676, line: 839, column: 5)
!23905 = !DILocation(line: 841, column: 7, scope: !23904)
!23906 = distinct !{!23906, !23828, !23907}
!23907 = !DILocation(line: 843, column: 3, scope: !1779)
!23908 = !DILocation(line: 844, column: 1, scope: !1779)
!23909 = distinct !DISubprogram(name: "vsf_sysutil_set_proctitle_prefix", scope: !1676, file: !1676, line: 847, type: !23910, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23910 = !DISubroutineType(types: !23911)
!23911 = !{null, !23201}
!23912 = !DILocalVariable(name: "p_str", arg: 1, scope: !23909, file: !1676, line: 847, type: !23201)
!23913 = !DILocation(line: 847, column: 54, scope: !23909)
!23914 = !DILocation(line: 849, column: 37, scope: !23909)
!23915 = !DILocation(line: 849, column: 3, scope: !23909)
!23916 = !DILocation(line: 850, column: 1, scope: !23909)
!23917 = distinct !DISubprogram(name: "vsf_sysutil_setproctitle_str", scope: !1676, file: !1676, line: 854, type: !23910, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23918 = !DILocalVariable(name: "p_str", arg: 1, scope: !23917, file: !1676, line: 854, type: !23201)
!23919 = !DILocation(line: 854, column: 50, scope: !23917)
!23920 = !DILocation(line: 856, column: 39, scope: !23917)
!23921 = !DILocation(line: 856, column: 28, scope: !23917)
!23922 = !DILocation(line: 856, column: 3, scope: !23917)
!23923 = !DILocation(line: 857, column: 1, scope: !23917)
!23924 = distinct !DISubprogram(name: "vsf_sysutil_setproctitle", scope: !1676, file: !1676, line: 860, type: !2486, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23925 = !DILocalVariable(name: "p_text", arg: 1, scope: !23924, file: !1676, line: 860, type: !88)
!23926 = !DILocation(line: 860, column: 38, scope: !23924)
!23927 = !DILocalVariable(name: "proctitle_str", scope: !23924, file: !1676, line: 862, type: !1733)
!23928 = !DILocation(line: 862, column: 16, scope: !23924)
!23929 = !DILocation(line: 863, column: 3, scope: !23924)
!23930 = !DILocation(line: 864, column: 8, scope: !23931)
!23931 = distinct !DILexicalBlock(scope: !23924, file: !1676, line: 864, column: 7)
!23932 = !DILocation(line: 864, column: 7, scope: !23924)
!23933 = !DILocation(line: 866, column: 5, scope: !23934)
!23934 = distinct !DILexicalBlock(scope: !23931, file: !1676, line: 865, column: 3)
!23935 = !DILocation(line: 867, column: 3, scope: !23934)
!23936 = !DILocation(line: 868, column: 35, scope: !23924)
!23937 = !DILocation(line: 868, column: 3, scope: !23924)
!23938 = !DILocation(line: 869, column: 37, scope: !23924)
!23939 = !DILocation(line: 869, column: 3, scope: !23924)
!23940 = !DILocation(line: 870, column: 3, scope: !23924)
!23941 = !DILocation(line: 871, column: 1, scope: !23924)
!23942 = distinct !DISubprogram(name: "vsf_sysutil_setproctitle_internal", scope: !1676, file: !1676, line: 940, type: !2486, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23943 = !DILocalVariable(name: "p_buf", arg: 1, scope: !23942, file: !1676, line: 940, type: !88)
!23944 = !DILocation(line: 940, column: 47, scope: !23942)
!23945 = !DILocalVariable(name: "proctitle_str", scope: !23942, file: !1676, line: 942, type: !1733)
!23946 = !DILocation(line: 942, column: 16, scope: !23942)
!23947 = !DILocalVariable(name: "to_copy", scope: !23942, file: !1676, line: 943, type: !26)
!23948 = !DILocation(line: 943, column: 16, scope: !23942)
!23949 = !DILocation(line: 944, column: 8, scope: !23950)
!23950 = distinct !DILexicalBlock(scope: !23942, file: !1676, line: 944, column: 7)
!23951 = !DILocation(line: 944, column: 7, scope: !23942)
!23952 = !DILocation(line: 946, column: 5, scope: !23953)
!23953 = distinct !DILexicalBlock(scope: !23950, file: !1676, line: 945, column: 3)
!23954 = !DILocation(line: 947, column: 3, scope: !23953)
!23955 = !DILocation(line: 948, column: 22, scope: !23942)
!23956 = !DILocation(line: 948, column: 37, scope: !23942)
!23957 = !DILocation(line: 948, column: 3, scope: !23942)
!23958 = !DILocation(line: 949, column: 7, scope: !23959)
!23959 = distinct !DILexicalBlock(scope: !23942, file: !1676, line: 949, column: 7)
!23960 = !DILocation(line: 949, column: 25, scope: !23959)
!23961 = !DILocation(line: 949, column: 7, scope: !23942)
!23962 = !DILocation(line: 951, column: 5, scope: !23963)
!23963 = distinct !DILexicalBlock(scope: !23959, file: !1676, line: 950, column: 3)
!23964 = !DILocation(line: 953, column: 3, scope: !23942)
!23965 = !DILocation(line: 954, column: 35, scope: !23942)
!23966 = !DILocation(line: 954, column: 3, scope: !23942)
!23967 = !DILocation(line: 955, column: 13, scope: !23942)
!23968 = !DILocation(line: 955, column: 11, scope: !23942)
!23969 = !DILocation(line: 956, column: 7, scope: !23970)
!23970 = distinct !DILexicalBlock(scope: !23942, file: !1676, line: 956, column: 7)
!23971 = !DILocation(line: 956, column: 17, scope: !23970)
!23972 = !DILocation(line: 956, column: 35, scope: !23970)
!23973 = !DILocation(line: 956, column: 15, scope: !23970)
!23974 = !DILocation(line: 956, column: 7, scope: !23942)
!23975 = !DILocation(line: 958, column: 15, scope: !23976)
!23976 = distinct !DILexicalBlock(scope: !23970, file: !1676, line: 957, column: 3)
!23977 = !DILocation(line: 958, column: 33, scope: !23976)
!23978 = !DILocation(line: 958, column: 13, scope: !23976)
!23979 = !DILocation(line: 959, column: 3, scope: !23976)
!23980 = !DILocation(line: 960, column: 22, scope: !23942)
!23981 = !DILocation(line: 960, column: 37, scope: !23942)
!23982 = !DILocation(line: 960, column: 65, scope: !23942)
!23983 = !DILocation(line: 960, column: 3, scope: !23942)
!23984 = !DILocation(line: 961, column: 3, scope: !23942)
!23985 = !DILocation(line: 962, column: 3, scope: !23942)
!23986 = !DILocation(line: 962, column: 17, scope: !23942)
!23987 = !DILocation(line: 962, column: 26, scope: !23942)
!23988 = !DILocation(line: 963, column: 1, scope: !23942)
!23989 = distinct !DISubprogram(name: "vsf_sysutil_setproctitle_init", scope: !1676, file: !1676, line: 907, type: !23990, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!23990 = !DISubroutineType(types: !23991)
!23991 = !{null, !19, !939}
!23992 = !DILocalVariable(name: "argc", arg: 1, scope: !23989, file: !1676, line: 907, type: !19)
!23993 = !DILocation(line: 907, column: 35, scope: !23989)
!23994 = !DILocalVariable(name: "argv", arg: 2, scope: !23989, file: !1676, line: 907, type: !939)
!23995 = !DILocation(line: 907, column: 53, scope: !23989)
!23996 = !DILocalVariable(name: "i", scope: !23989, file: !1676, line: 909, type: !19)
!23997 = !DILocation(line: 909, column: 7, scope: !23989)
!23998 = !DILocalVariable(name: "p_env", scope: !23989, file: !1676, line: 910, type: !1490)
!23999 = !DILocation(line: 910, column: 10, scope: !23989)
!24000 = !DILocation(line: 910, column: 18, scope: !23989)
!24001 = !DILocation(line: 911, column: 7, scope: !24002)
!24002 = distinct !DILexicalBlock(scope: !23989, file: !1676, line: 911, column: 7)
!24003 = !DILocation(line: 911, column: 7, scope: !23989)
!24004 = !DILocation(line: 913, column: 5, scope: !24005)
!24005 = distinct !DILexicalBlock(scope: !24002, file: !1676, line: 912, column: 3)
!24006 = !DILocation(line: 914, column: 3, scope: !24005)
!24007 = !DILocation(line: 915, column: 22, scope: !23989)
!24008 = !DILocation(line: 916, column: 7, scope: !24009)
!24009 = distinct !DILexicalBlock(scope: !23989, file: !1676, line: 916, column: 7)
!24010 = !DILocation(line: 916, column: 15, scope: !24009)
!24011 = !DILocation(line: 916, column: 7, scope: !23989)
!24012 = !DILocation(line: 918, column: 5, scope: !24013)
!24013 = distinct !DILexicalBlock(scope: !24009, file: !1676, line: 917, column: 3)
!24014 = !DILocation(line: 919, column: 3, scope: !24013)
!24015 = !DILocation(line: 920, column: 9, scope: !24016)
!24016 = distinct !DILexicalBlock(scope: !23989, file: !1676, line: 920, column: 3)
!24017 = !DILocation(line: 920, column: 8, scope: !24016)
!24018 = !DILocation(line: 920, column: 13, scope: !24019)
!24019 = distinct !DILexicalBlock(scope: !24016, file: !1676, line: 920, column: 3)
!24020 = !DILocation(line: 920, column: 15, scope: !24019)
!24021 = !DILocation(line: 920, column: 14, scope: !24019)
!24022 = !DILocation(line: 920, column: 3, scope: !24016)
!24023 = !DILocation(line: 922, column: 45, scope: !24024)
!24024 = distinct !DILexicalBlock(scope: !24019, file: !1676, line: 921, column: 3)
!24025 = !DILocation(line: 922, column: 50, scope: !24024)
!24026 = !DILocation(line: 922, column: 26, scope: !24024)
!24027 = !DILocation(line: 922, column: 54, scope: !24024)
!24028 = !DILocation(line: 922, column: 23, scope: !24024)
!24029 = !DILocation(line: 923, column: 9, scope: !24030)
!24030 = distinct !DILexicalBlock(scope: !24024, file: !1676, line: 923, column: 9)
!24031 = !DILocation(line: 923, column: 11, scope: !24030)
!24032 = !DILocation(line: 923, column: 9, scope: !24024)
!24033 = !DILocation(line: 925, column: 7, scope: !24034)
!24034 = distinct !DILexicalBlock(scope: !24030, file: !1676, line: 924, column: 5)
!24035 = !DILocation(line: 925, column: 12, scope: !24034)
!24036 = !DILocation(line: 925, column: 15, scope: !24034)
!24037 = !DILocation(line: 926, column: 5, scope: !24034)
!24038 = !DILocation(line: 927, column: 3, scope: !24024)
!24039 = !DILocation(line: 920, column: 22, scope: !24019)
!24040 = !DILocation(line: 920, column: 3, scope: !24019)
!24041 = distinct !{!24041, !24022, !24042}
!24042 = !DILocation(line: 927, column: 3, scope: !24016)
!24043 = !DILocation(line: 928, column: 3, scope: !23989)
!24044 = !DILocation(line: 928, column: 11, scope: !23989)
!24045 = !DILocation(line: 928, column: 10, scope: !23989)
!24046 = !DILocation(line: 928, column: 17, scope: !23989)
!24047 = !DILocation(line: 930, column: 46, scope: !24048)
!24048 = distinct !DILexicalBlock(scope: !23989, file: !1676, line: 929, column: 3)
!24049 = !DILocation(line: 930, column: 45, scope: !24048)
!24050 = !DILocation(line: 930, column: 26, scope: !24048)
!24051 = !DILocation(line: 930, column: 53, scope: !24048)
!24052 = !DILocation(line: 930, column: 23, scope: !24048)
!24053 = !DILocation(line: 931, column: 10, scope: !24048)
!24054 = distinct !{!24054, !24043, !24055}
!24055 = !DILocation(line: 932, column: 3, scope: !23989)
!24056 = !DILocation(line: 934, column: 11, scope: !23989)
!24057 = !DILocation(line: 935, column: 27, scope: !23989)
!24058 = !DILocation(line: 935, column: 17, scope: !23989)
!24059 = !DILocation(line: 936, column: 22, scope: !23989)
!24060 = !DILocation(line: 936, column: 37, scope: !23989)
!24061 = !DILocation(line: 936, column: 3, scope: !23989)
!24062 = !DILocation(line: 937, column: 1, scope: !23989)
!24063 = distinct !DISubprogram(name: "vsf_sysutil_map_anon_pages_init", scope: !1676, file: !1676, line: 981, type: !1619, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!24064 = !DILocation(line: 983, column: 1, scope: !24063)
!24065 = distinct !DISubprogram(name: "vsf_sysutil_map_anon_pages", scope: !1676, file: !1676, line: 986, type: !19154, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!24066 = !DILocalVariable(name: "length", arg: 1, scope: !24065, file: !1676, line: 986, type: !26)
!24067 = !DILocation(line: 986, column: 41, scope: !24065)
!24068 = !DILocalVariable(name: "retval", scope: !24065, file: !1676, line: 988, type: !16)
!24069 = !DILocation(line: 988, column: 9, scope: !24065)
!24070 = !DILocation(line: 988, column: 26, scope: !24065)
!24071 = !DILocation(line: 988, column: 18, scope: !24065)
!24072 = !DILocation(line: 990, column: 7, scope: !24073)
!24073 = distinct !DILexicalBlock(scope: !24065, file: !1676, line: 990, column: 7)
!24074 = !DILocation(line: 990, column: 14, scope: !24073)
!24075 = !DILocation(line: 990, column: 7, scope: !24065)
!24076 = !DILocation(line: 992, column: 5, scope: !24077)
!24077 = distinct !DILexicalBlock(scope: !24073, file: !1676, line: 991, column: 3)
!24078 = !DILocation(line: 993, column: 3, scope: !24077)
!24079 = !DILocation(line: 994, column: 10, scope: !24065)
!24080 = !DILocation(line: 994, column: 3, scope: !24065)
!24081 = distinct !DISubprogram(name: "vsf_sysutil_send_fd", scope: !1676, file: !1676, line: 1027, type: !6973, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!24082 = !DILocalVariable(name: "sock_fd", arg: 1, scope: !24081, file: !1676, line: 1027, type: !19)
!24083 = !DILocation(line: 1027, column: 25, scope: !24081)
!24084 = !DILocalVariable(name: "send_fd", arg: 2, scope: !24081, file: !1676, line: 1027, type: !19)
!24085 = !DILocation(line: 1027, column: 38, scope: !24081)
!24086 = !DILocalVariable(name: "retval", scope: !24081, file: !1676, line: 1029, type: !19)
!24087 = !DILocation(line: 1029, column: 7, scope: !24081)
!24088 = !DILocalVariable(name: "msg", scope: !24081, file: !1676, line: 1030, type: !24089)
!24089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !1269, line: 254, size: 448, elements: !24090)
!24090 = !{!24091, !24092, !24093, !24100, !24101, !24102, !24103}
!24091 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !24089, file: !1269, line: 256, baseType: !80, size: 64)
!24092 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !24089, file: !1269, line: 257, baseType: !21117, size: 32, offset: 64)
!24093 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !24089, file: !1269, line: 259, baseType: !24094, size: 64, offset: 128)
!24094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24095, size: 64)
!24095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !24096, line: 26, size: 128, elements: !24097)
!24096 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!24097 = !{!24098, !24099}
!24098 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !24095, file: !24096, line: 28, baseType: !80, size: 64)
!24099 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !24095, file: !24096, line: 29, baseType: !1697, size: 64, offset: 64)
!24100 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !24089, file: !1269, line: 260, baseType: !1697, size: 64, offset: 192)
!24101 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !24089, file: !1269, line: 262, baseType: !80, size: 64, offset: 256)
!24102 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !24089, file: !1269, line: 263, baseType: !1697, size: 64, offset: 320)
!24103 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !24089, file: !1269, line: 268, baseType: !19, size: 32, offset: 384)
!24104 = !DILocation(line: 1030, column: 17, scope: !24081)
!24105 = !DILocalVariable(name: "p_cmsg", scope: !24081, file: !1676, line: 1031, type: !1699)
!24106 = !DILocation(line: 1031, column: 19, scope: !24081)
!24107 = !DILocalVariable(name: "vec", scope: !24081, file: !1676, line: 1032, type: !24095)
!24108 = !DILocation(line: 1032, column: 16, scope: !24081)
!24109 = !DILocalVariable(name: "cmsgbuf", scope: !24081, file: !1676, line: 1033, type: !24110)
!24110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 192, elements: !24111)
!24111 = !{!24112}
!24112 = !DISubrange(count: 24)
!24113 = !DILocation(line: 1033, column: 8, scope: !24081)
!24114 = !DILocalVariable(name: "p_fds", scope: !24081, file: !1676, line: 1034, type: !949)
!24115 = !DILocation(line: 1034, column: 8, scope: !24081)
!24116 = !DILocalVariable(name: "sendchar", scope: !24081, file: !1676, line: 1035, type: !17)
!24117 = !DILocation(line: 1035, column: 8, scope: !24081)
!24118 = !DILocation(line: 1036, column: 21, scope: !24081)
!24119 = !DILocation(line: 1036, column: 7, scope: !24081)
!24120 = !DILocation(line: 1036, column: 19, scope: !24081)
!24121 = !DILocation(line: 1037, column: 7, scope: !24081)
!24122 = !DILocation(line: 1037, column: 22, scope: !24081)
!24123 = !DILocation(line: 1038, column: 12, scope: !24081)
!24124 = !DILocation(line: 1038, column: 10, scope: !24081)
!24125 = !DILocation(line: 1039, column: 3, scope: !24081)
!24126 = !DILocation(line: 1039, column: 11, scope: !24081)
!24127 = !DILocation(line: 1039, column: 22, scope: !24081)
!24128 = !DILocation(line: 1040, column: 3, scope: !24081)
!24129 = !DILocation(line: 1040, column: 11, scope: !24081)
!24130 = !DILocation(line: 1040, column: 21, scope: !24081)
!24131 = !DILocation(line: 1041, column: 3, scope: !24081)
!24132 = !DILocation(line: 1041, column: 11, scope: !24081)
!24133 = !DILocation(line: 1041, column: 20, scope: !24081)
!24134 = !DILocation(line: 1042, column: 17, scope: !24081)
!24135 = !DILocation(line: 1042, column: 11, scope: !24081)
!24136 = !DILocation(line: 1042, column: 9, scope: !24081)
!24137 = !DILocation(line: 1043, column: 12, scope: !24081)
!24138 = !DILocation(line: 1043, column: 4, scope: !24081)
!24139 = !DILocation(line: 1043, column: 10, scope: !24081)
!24140 = !DILocation(line: 1044, column: 24, scope: !24081)
!24141 = !DILocation(line: 1044, column: 32, scope: !24081)
!24142 = !DILocation(line: 1044, column: 7, scope: !24081)
!24143 = !DILocation(line: 1044, column: 22, scope: !24081)
!24144 = !DILocation(line: 1045, column: 7, scope: !24081)
!24145 = !DILocation(line: 1045, column: 16, scope: !24081)
!24146 = !DILocation(line: 1046, column: 7, scope: !24081)
!24147 = !DILocation(line: 1046, column: 19, scope: !24081)
!24148 = !DILocation(line: 1047, column: 7, scope: !24081)
!24149 = !DILocation(line: 1047, column: 15, scope: !24081)
!24150 = !DILocation(line: 1048, column: 7, scope: !24081)
!24151 = !DILocation(line: 1048, column: 18, scope: !24081)
!24152 = !DILocation(line: 1049, column: 7, scope: !24081)
!24153 = !DILocation(line: 1049, column: 17, scope: !24081)
!24154 = !DILocation(line: 1053, column: 7, scope: !24081)
!24155 = !DILocation(line: 1053, column: 16, scope: !24081)
!24156 = !DILocation(line: 1054, column: 7, scope: !24081)
!24157 = !DILocation(line: 1054, column: 15, scope: !24081)
!24158 = !DILocation(line: 1055, column: 20, scope: !24081)
!24159 = !DILocation(line: 1055, column: 12, scope: !24081)
!24160 = !DILocation(line: 1055, column: 10, scope: !24081)
!24161 = !DILocation(line: 1056, column: 7, scope: !24162)
!24162 = distinct !DILexicalBlock(scope: !24081, file: !1676, line: 1056, column: 7)
!24163 = !DILocation(line: 1056, column: 14, scope: !24162)
!24164 = !DILocation(line: 1056, column: 7, scope: !24081)
!24165 = !DILocation(line: 1058, column: 5, scope: !24166)
!24166 = distinct !DILexicalBlock(scope: !24162, file: !1676, line: 1057, column: 3)
!24167 = !DILocation(line: 1059, column: 3, scope: !24166)
!24168 = !DILocation(line: 1060, column: 1, scope: !24081)
!24169 = distinct !DISubprogram(name: "vsf_sysutil_recv_fd", scope: !1676, file: !1676, line: 1063, type: !24170, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!24170 = !DISubroutineType(types: !24171)
!24171 = !{!19, !1782}
!24172 = !DILocalVariable(name: "sock_fd", arg: 1, scope: !24169, file: !1676, line: 1063, type: !1782)
!24173 = !DILocation(line: 1063, column: 31, scope: !24169)
!24174 = !DILocalVariable(name: "retval", scope: !24169, file: !1676, line: 1065, type: !19)
!24175 = !DILocation(line: 1065, column: 7, scope: !24169)
!24176 = !DILocalVariable(name: "msg", scope: !24169, file: !1676, line: 1066, type: !24089)
!24177 = !DILocation(line: 1066, column: 17, scope: !24169)
!24178 = !DILocalVariable(name: "recvchar", scope: !24169, file: !1676, line: 1067, type: !17)
!24179 = !DILocation(line: 1067, column: 8, scope: !24169)
!24180 = !DILocalVariable(name: "vec", scope: !24169, file: !1676, line: 1068, type: !24095)
!24181 = !DILocation(line: 1068, column: 16, scope: !24169)
!24182 = !DILocalVariable(name: "recv_fd", scope: !24169, file: !1676, line: 1069, type: !19)
!24183 = !DILocation(line: 1069, column: 7, scope: !24169)
!24184 = !DILocalVariable(name: "cmsgbuf", scope: !24169, file: !1676, line: 1070, type: !24110)
!24185 = !DILocation(line: 1070, column: 8, scope: !24169)
!24186 = !DILocalVariable(name: "p_cmsg", scope: !24169, file: !1676, line: 1071, type: !1699)
!24187 = !DILocation(line: 1071, column: 19, scope: !24169)
!24188 = !DILocalVariable(name: "p_fd", scope: !24169, file: !1676, line: 1072, type: !949)
!24189 = !DILocation(line: 1072, column: 8, scope: !24169)
!24190 = !DILocation(line: 1073, column: 7, scope: !24169)
!24191 = !DILocation(line: 1073, column: 16, scope: !24169)
!24192 = !DILocation(line: 1074, column: 7, scope: !24169)
!24193 = !DILocation(line: 1074, column: 15, scope: !24169)
!24194 = !DILocation(line: 1075, column: 7, scope: !24169)
!24195 = !DILocation(line: 1075, column: 16, scope: !24169)
!24196 = !DILocation(line: 1076, column: 7, scope: !24169)
!24197 = !DILocation(line: 1076, column: 19, scope: !24169)
!24198 = !DILocation(line: 1077, column: 7, scope: !24169)
!24199 = !DILocation(line: 1077, column: 15, scope: !24169)
!24200 = !DILocation(line: 1078, column: 7, scope: !24169)
!24201 = !DILocation(line: 1078, column: 18, scope: !24169)
!24202 = !DILocation(line: 1079, column: 21, scope: !24169)
!24203 = !DILocation(line: 1079, column: 7, scope: !24169)
!24204 = !DILocation(line: 1079, column: 19, scope: !24169)
!24205 = !DILocation(line: 1080, column: 7, scope: !24169)
!24206 = !DILocation(line: 1080, column: 22, scope: !24169)
!24207 = !DILocation(line: 1081, column: 7, scope: !24169)
!24208 = !DILocation(line: 1081, column: 17, scope: !24169)
!24209 = !DILocation(line: 1083, column: 16, scope: !24169)
!24210 = !DILocation(line: 1083, column: 10, scope: !24169)
!24211 = !DILocation(line: 1083, column: 8, scope: !24169)
!24212 = !DILocation(line: 1084, column: 4, scope: !24169)
!24213 = !DILocation(line: 1084, column: 9, scope: !24169)
!24214 = !DILocation(line: 1085, column: 20, scope: !24169)
!24215 = !DILocation(line: 1085, column: 12, scope: !24169)
!24216 = !DILocation(line: 1085, column: 10, scope: !24169)
!24217 = !DILocation(line: 1086, column: 7, scope: !24218)
!24218 = distinct !DILexicalBlock(scope: !24169, file: !1676, line: 1086, column: 7)
!24219 = !DILocation(line: 1086, column: 14, scope: !24218)
!24220 = !DILocation(line: 1086, column: 7, scope: !24169)
!24221 = !DILocation(line: 1088, column: 5, scope: !24222)
!24222 = distinct !DILexicalBlock(scope: !24218, file: !1676, line: 1087, column: 3)
!24223 = !DILocation(line: 1089, column: 3, scope: !24222)
!24224 = !DILocation(line: 1090, column: 12, scope: !24169)
!24225 = !DILocation(line: 1090, column: 10, scope: !24169)
!24226 = !DILocation(line: 1091, column: 7, scope: !24227)
!24227 = distinct !DILexicalBlock(scope: !24169, file: !1676, line: 1091, column: 7)
!24228 = !DILocation(line: 1091, column: 14, scope: !24227)
!24229 = !DILocation(line: 1091, column: 7, scope: !24169)
!24230 = !DILocation(line: 1093, column: 5, scope: !24231)
!24231 = distinct !DILexicalBlock(scope: !24227, file: !1676, line: 1092, column: 3)
!24232 = !DILocation(line: 1094, column: 3, scope: !24231)
!24233 = !DILocation(line: 1098, column: 16, scope: !24169)
!24234 = !DILocation(line: 1098, column: 10, scope: !24169)
!24235 = !DILocation(line: 1098, column: 8, scope: !24169)
!24236 = !DILocation(line: 1099, column: 14, scope: !24169)
!24237 = !DILocation(line: 1099, column: 13, scope: !24169)
!24238 = !DILocation(line: 1099, column: 11, scope: !24169)
!24239 = !DILocation(line: 1100, column: 7, scope: !24240)
!24240 = distinct !DILexicalBlock(scope: !24169, file: !1676, line: 1100, column: 7)
!24241 = !DILocation(line: 1100, column: 15, scope: !24240)
!24242 = !DILocation(line: 1100, column: 7, scope: !24169)
!24243 = !DILocation(line: 1102, column: 5, scope: !24244)
!24244 = distinct !DILexicalBlock(scope: !24240, file: !1676, line: 1101, column: 3)
!24245 = !DILocation(line: 1103, column: 3, scope: !24244)
!24246 = !DILocation(line: 1104, column: 10, scope: !24169)
!24247 = !DILocation(line: 1104, column: 3, scope: !24169)
!24248 = distinct !DISubprogram(name: "vsf_set_die_if_parent_dies", scope: !1676, file: !1676, line: 1244, type: !1619, scopeLine: 1245, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!24249 = !DILocation(line: 1247, column: 7, scope: !24250)
!24250 = distinct !DILexicalBlock(scope: !24248, file: !1676, line: 1247, column: 7)
!24251 = !DILocation(line: 1247, column: 49, scope: !24250)
!24252 = !DILocation(line: 1247, column: 7, scope: !24248)
!24253 = !DILocation(line: 1249, column: 5, scope: !24254)
!24254 = distinct !DILexicalBlock(scope: !24250, file: !1676, line: 1248, column: 3)
!24255 = !DILocation(line: 1250, column: 3, scope: !24254)
!24256 = !DILocation(line: 1252, column: 1, scope: !24248)
!24257 = distinct !DISubprogram(name: "vsf_set_term_if_parent_dies", scope: !1676, file: !1676, line: 1255, type: !1619, scopeLine: 1256, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!24258 = !DILocation(line: 1258, column: 7, scope: !24259)
!24259 = distinct !DILexicalBlock(scope: !24257, file: !1676, line: 1258, column: 7)
!24260 = !DILocation(line: 1258, column: 49, scope: !24259)
!24261 = !DILocation(line: 1258, column: 7, scope: !24257)
!24262 = !DILocation(line: 1260, column: 5, scope: !24263)
!24263 = distinct !DILexicalBlock(scope: !24259, file: !1676, line: 1259, column: 3)
!24264 = !DILocation(line: 1261, column: 3, scope: !24263)
!24265 = !DILocation(line: 1263, column: 1, scope: !24257)
!24266 = !DILocation(line: 1270, column: 7, scope: !24267)
!24267 = distinct !DILexicalBlock(scope: !1724, file: !1676, line: 1270, column: 7)
!24268 = !DILocation(line: 1270, column: 7, scope: !1724)
!24269 = !DILocalVariable(name: "ret", scope: !24270, file: !1676, line: 1272, type: !19)
!24270 = distinct !DILexicalBlock(scope: !24267, file: !1676, line: 1271, column: 3)
!24271 = !DILocation(line: 1272, column: 9, scope: !24270)
!24272 = !DILocation(line: 1272, column: 15, scope: !24270)
!24273 = !DILocation(line: 1275, column: 9, scope: !24274)
!24274 = distinct !DILexicalBlock(scope: !24270, file: !1676, line: 1275, column: 9)
!24275 = !DILocation(line: 1275, column: 13, scope: !24274)
!24276 = !DILocation(line: 1275, column: 19, scope: !24274)
!24277 = !DILocation(line: 1275, column: 23, scope: !24274)
!24278 = !DILocation(line: 1275, column: 29, scope: !24274)
!24279 = !DILocation(line: 1275, column: 39, scope: !24274)
!24280 = !DILocation(line: 1275, column: 42, scope: !24274)
!24281 = !DILocation(line: 1275, column: 48, scope: !24274)
!24282 = !DILocation(line: 1275, column: 9, scope: !24270)
!24283 = !DILocation(line: 1277, column: 11, scope: !24284)
!24284 = distinct !DILexicalBlock(scope: !24285, file: !1676, line: 1277, column: 11)
!24285 = distinct !DILexicalBlock(scope: !24274, file: !1676, line: 1276, column: 5)
!24286 = !DILocation(line: 1277, column: 15, scope: !24284)
!24287 = !DILocation(line: 1277, column: 11, scope: !24285)
!24288 = !DILocation(line: 1279, column: 9, scope: !24289)
!24289 = distinct !DILexicalBlock(scope: !24284, file: !1676, line: 1278, column: 7)
!24290 = !DILocation(line: 1280, column: 7, scope: !24289)
!24291 = !DILocation(line: 1281, column: 14, scope: !24285)
!24292 = !DILocation(line: 1281, column: 7, scope: !24285)
!24293 = !DILocation(line: 1283, column: 21, scope: !24270)
!24294 = !DILocation(line: 1284, column: 3, scope: !24270)
!24295 = !DILocation(line: 1286, column: 10, scope: !1724)
!24296 = !DILocation(line: 1286, column: 3, scope: !1724)
!24297 = !DILocation(line: 1287, column: 1, scope: !1724)
!24298 = !DILocation(line: 1294, column: 7, scope: !24299)
!24299 = distinct !DILexicalBlock(scope: !1727, file: !1676, line: 1294, column: 7)
!24300 = !DILocation(line: 1294, column: 7, scope: !1727)
!24301 = !DILocalVariable(name: "ret", scope: !24302, file: !1676, line: 1296, type: !19)
!24302 = distinct !DILexicalBlock(scope: !24299, file: !1676, line: 1295, column: 3)
!24303 = !DILocation(line: 1296, column: 9, scope: !24302)
!24304 = !DILocation(line: 1296, column: 15, scope: !24302)
!24305 = !DILocation(line: 1297, column: 9, scope: !24306)
!24306 = distinct !DILexicalBlock(scope: !24302, file: !1676, line: 1297, column: 9)
!24307 = !DILocation(line: 1297, column: 13, scope: !24306)
!24308 = !DILocation(line: 1297, column: 19, scope: !24306)
!24309 = !DILocation(line: 1297, column: 23, scope: !24306)
!24310 = !DILocation(line: 1297, column: 29, scope: !24306)
!24311 = !DILocation(line: 1297, column: 39, scope: !24306)
!24312 = !DILocation(line: 1297, column: 42, scope: !24306)
!24313 = !DILocation(line: 1297, column: 48, scope: !24306)
!24314 = !DILocation(line: 1297, column: 9, scope: !24302)
!24315 = !DILocation(line: 1299, column: 11, scope: !24316)
!24316 = distinct !DILexicalBlock(scope: !24317, file: !1676, line: 1299, column: 11)
!24317 = distinct !DILexicalBlock(scope: !24306, file: !1676, line: 1298, column: 5)
!24318 = !DILocation(line: 1299, column: 15, scope: !24316)
!24319 = !DILocation(line: 1299, column: 11, scope: !24317)
!24320 = !DILocation(line: 1301, column: 9, scope: !24321)
!24321 = distinct !DILexicalBlock(scope: !24316, file: !1676, line: 1300, column: 7)
!24322 = !DILocation(line: 1302, column: 7, scope: !24321)
!24323 = !DILocation(line: 1303, column: 14, scope: !24317)
!24324 = !DILocation(line: 1303, column: 7, scope: !24317)
!24325 = !DILocation(line: 1305, column: 21, scope: !24302)
!24326 = !DILocation(line: 1306, column: 3, scope: !24302)
!24327 = !DILocation(line: 1308, column: 10, scope: !1727)
!24328 = !DILocation(line: 1308, column: 3, scope: !1727)
!24329 = !DILocation(line: 1309, column: 1, scope: !1727)
!24330 = !DILocation(line: 1316, column: 7, scope: !24331)
!24331 = distinct !DILexicalBlock(scope: !1730, file: !1676, line: 1316, column: 7)
!24332 = !DILocation(line: 1316, column: 7, scope: !1730)
!24333 = !DILocalVariable(name: "ret", scope: !24334, file: !1676, line: 1318, type: !19)
!24334 = distinct !DILexicalBlock(scope: !24331, file: !1676, line: 1317, column: 3)
!24335 = !DILocation(line: 1318, column: 9, scope: !24334)
!24336 = !DILocation(line: 1318, column: 15, scope: !24334)
!24337 = !DILocation(line: 1319, column: 9, scope: !24338)
!24338 = distinct !DILexicalBlock(scope: !24334, file: !1676, line: 1319, column: 9)
!24339 = !DILocation(line: 1319, column: 13, scope: !24338)
!24340 = !DILocation(line: 1319, column: 19, scope: !24338)
!24341 = !DILocation(line: 1319, column: 23, scope: !24338)
!24342 = !DILocation(line: 1319, column: 29, scope: !24338)
!24343 = !DILocation(line: 1319, column: 39, scope: !24338)
!24344 = !DILocation(line: 1319, column: 42, scope: !24338)
!24345 = !DILocation(line: 1319, column: 48, scope: !24338)
!24346 = !DILocation(line: 1319, column: 9, scope: !24334)
!24347 = !DILocation(line: 1321, column: 11, scope: !24348)
!24348 = distinct !DILexicalBlock(scope: !24349, file: !1676, line: 1321, column: 11)
!24349 = distinct !DILexicalBlock(scope: !24338, file: !1676, line: 1320, column: 5)
!24350 = !DILocation(line: 1321, column: 15, scope: !24348)
!24351 = !DILocation(line: 1321, column: 11, scope: !24349)
!24352 = !DILocation(line: 1323, column: 9, scope: !24353)
!24353 = distinct !DILexicalBlock(scope: !24348, file: !1676, line: 1322, column: 7)
!24354 = !DILocation(line: 1324, column: 7, scope: !24353)
!24355 = !DILocation(line: 1325, column: 14, scope: !24349)
!24356 = !DILocation(line: 1325, column: 7, scope: !24349)
!24357 = !DILocation(line: 1327, column: 21, scope: !24334)
!24358 = !DILocation(line: 1328, column: 3, scope: !24334)
!24359 = !DILocation(line: 1330, column: 10, scope: !1730)
!24360 = !DILocation(line: 1330, column: 3, scope: !1730)
!24361 = !DILocation(line: 1331, column: 1, scope: !1730)
!24362 = distinct !DISubprogram(name: "vsf_sysutil_getpid_nocache", scope: !1676, file: !1676, line: 1334, type: !1713, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1675, retainedNodes: !128)
!24363 = !DILocation(line: 1340, column: 10, scope: !24362)
!24364 = !DILocation(line: 1340, column: 3, scope: !24362)
!24365 = distinct !DISubprogram(name: "seccomp_sandbox_init", scope: !1800, file: !1800, line: 314, type: !1619, scopeLine: 315, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24366 = !DILocation(line: 316, column: 7, scope: !24367)
!24367 = distinct !DILexicalBlock(scope: !24365, file: !1800, line: 316, column: 7)
!24368 = !DILocation(line: 316, column: 23, scope: !24367)
!24369 = !DILocation(line: 316, column: 7, scope: !24365)
!24370 = !DILocation(line: 318, column: 5, scope: !24371)
!24371 = distinct !DILexicalBlock(scope: !24367, file: !1800, line: 317, column: 3)
!24372 = !DILocation(line: 319, column: 3, scope: !24371)
!24373 = !DILocation(line: 320, column: 1, scope: !24365)
!24374 = distinct !DISubprogram(name: "seccomp_sandbox_setup_prelogin", scope: !1800, file: !1800, line: 323, type: !24375, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24375 = !DISubroutineType(types: !24376)
!24376 = !{null, !24377}
!24377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24378, size: 64)
!24378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24379)
!24379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vsf_session", file: !8, line: 18, size: 3840, elements: !24380)
!24380 = !{!24381, !24382, !24383, !24384, !24385, !24386, !24387, !24388, !24389, !24390, !24391, !24392, !24393, !24394, !24395, !24401, !24402, !24403, !24404, !24405, !24406, !24407, !24408, !24409, !24410, !24411, !24412, !24413, !24414, !24415, !24416, !24417, !24418, !24419, !24420, !24421, !24422, !24423, !24424, !24425, !24426, !24427, !24428, !24429, !24430, !24431, !24432, !24433, !24434, !24435, !24436, !24437, !24438, !24439, !24440, !24441, !24442}
!24381 = !DIDerivedType(tag: DW_TAG_member, name: "p_local_addr", scope: !24379, file: !8, line: 21, baseType: !154, size: 64)
!24382 = !DIDerivedType(tag: DW_TAG_member, name: "p_remote_addr", scope: !24379, file: !8, line: 22, baseType: !154, size: 64, offset: 64)
!24383 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_line_buf", scope: !24379, file: !8, line: 23, baseType: !16, size: 64, offset: 128)
!24384 = !DIDerivedType(tag: DW_TAG_member, name: "idle_timeout", scope: !24379, file: !8, line: 24, baseType: !19, size: 32, offset: 192)
!24385 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout", scope: !24379, file: !8, line: 25, baseType: !19, size: 32, offset: 224)
!24386 = !DIDerivedType(tag: DW_TAG_member, name: "pasv_listen_fd", scope: !24379, file: !8, line: 28, baseType: !19, size: 32, offset: 256)
!24387 = !DIDerivedType(tag: DW_TAG_member, name: "p_port_sockaddr", scope: !24379, file: !8, line: 29, baseType: !154, size: 64, offset: 320)
!24388 = !DIDerivedType(tag: DW_TAG_member, name: "data_fd", scope: !24379, file: !8, line: 30, baseType: !19, size: 32, offset: 384)
!24389 = !DIDerivedType(tag: DW_TAG_member, name: "data_progress", scope: !24379, file: !8, line: 31, baseType: !19, size: 32, offset: 416)
!24390 = !DIDerivedType(tag: DW_TAG_member, name: "bw_rate_max", scope: !24379, file: !8, line: 32, baseType: !26, size: 32, offset: 448)
!24391 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_sec", scope: !24379, file: !8, line: 33, baseType: !28, size: 64, offset: 512)
!24392 = !DIDerivedType(tag: DW_TAG_member, name: "bw_send_start_usec", scope: !24379, file: !8, line: 34, baseType: !28, size: 64, offset: 576)
!24393 = !DIDerivedType(tag: DW_TAG_member, name: "is_anonymous", scope: !24379, file: !8, line: 37, baseType: !19, size: 32, offset: 640)
!24394 = !DIDerivedType(tag: DW_TAG_member, name: "is_guest", scope: !24379, file: !8, line: 38, baseType: !19, size: 32, offset: 672)
!24395 = !DIDerivedType(tag: DW_TAG_member, name: "user_str", scope: !24379, file: !8, line: 39, baseType: !24396, size: 128, offset: 704)
!24396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mystr", file: !34, line: 10, size: 128, elements: !24397)
!24397 = !{!24398, !24399, !24400}
!24398 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_p_buf", scope: !24396, file: !34, line: 12, baseType: !16, size: 64)
!24399 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_len", scope: !24396, file: !34, line: 14, baseType: !26, size: 32, offset: 64)
!24400 = !DIDerivedType(tag: DW_TAG_member, name: "PRIVATE_HANDS_OFF_alloc_bytes", scope: !24396, file: !34, line: 15, baseType: !26, size: 32, offset: 96)
!24401 = !DIDerivedType(tag: DW_TAG_member, name: "anon_pass_str", scope: !24379, file: !8, line: 40, baseType: !24396, size: 128, offset: 832)
!24402 = !DIDerivedType(tag: DW_TAG_member, name: "restart_pos", scope: !24379, file: !8, line: 43, baseType: !41, size: 64, offset: 960)
!24403 = !DIDerivedType(tag: DW_TAG_member, name: "is_ascii", scope: !24379, file: !8, line: 44, baseType: !19, size: 32, offset: 1024)
!24404 = !DIDerivedType(tag: DW_TAG_member, name: "rnfr_filename_str", scope: !24379, file: !8, line: 45, baseType: !24396, size: 128, offset: 1088)
!24405 = !DIDerivedType(tag: DW_TAG_member, name: "abor_received", scope: !24379, file: !8, line: 46, baseType: !19, size: 32, offset: 1216)
!24406 = !DIDerivedType(tag: DW_TAG_member, name: "epsv_all", scope: !24379, file: !8, line: 47, baseType: !19, size: 32, offset: 1248)
!24407 = !DIDerivedType(tag: DW_TAG_member, name: "is_http", scope: !24379, file: !8, line: 50, baseType: !19, size: 32, offset: 1280)
!24408 = !DIDerivedType(tag: DW_TAG_member, name: "http_get_arg", scope: !24379, file: !8, line: 51, baseType: !24396, size: 128, offset: 1344)
!24409 = !DIDerivedType(tag: DW_TAG_member, name: "p_visited_dir_list", scope: !24379, file: !8, line: 54, baseType: !51, size: 64, offset: 1472)
!24410 = !DIDerivedType(tag: DW_TAG_member, name: "anon_ftp_uid", scope: !24379, file: !8, line: 57, baseType: !19, size: 32, offset: 1536)
!24411 = !DIDerivedType(tag: DW_TAG_member, name: "guest_user_uid", scope: !24379, file: !8, line: 58, baseType: !19, size: 32, offset: 1568)
!24412 = !DIDerivedType(tag: DW_TAG_member, name: "anon_upload_chown_uid", scope: !24379, file: !8, line: 59, baseType: !19, size: 32, offset: 1600)
!24413 = !DIDerivedType(tag: DW_TAG_member, name: "banned_email_str", scope: !24379, file: !8, line: 62, baseType: !24396, size: 128, offset: 1664)
!24414 = !DIDerivedType(tag: DW_TAG_member, name: "email_passwords_str", scope: !24379, file: !8, line: 63, baseType: !24396, size: 128, offset: 1792)
!24415 = !DIDerivedType(tag: DW_TAG_member, name: "userlist_str", scope: !24379, file: !8, line: 64, baseType: !24396, size: 128, offset: 1920)
!24416 = !DIDerivedType(tag: DW_TAG_member, name: "banner_str", scope: !24379, file: !8, line: 65, baseType: !24396, size: 128, offset: 2048)
!24417 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_wrapper_ok", scope: !24379, file: !8, line: 66, baseType: !19, size: 32, offset: 2176)
!24418 = !DIDerivedType(tag: DW_TAG_member, name: "xferlog_fd", scope: !24379, file: !8, line: 69, baseType: !19, size: 32, offset: 2208)
!24419 = !DIDerivedType(tag: DW_TAG_member, name: "vsftpd_log_fd", scope: !24379, file: !8, line: 70, baseType: !19, size: 32, offset: 2240)
!24420 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip_str", scope: !24379, file: !8, line: 71, baseType: !24396, size: 128, offset: 2304)
!24421 = !DIDerivedType(tag: DW_TAG_member, name: "log_type", scope: !24379, file: !8, line: 72, baseType: !65, size: 64, offset: 2432)
!24422 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_sec", scope: !24379, file: !8, line: 73, baseType: !28, size: 64, offset: 2496)
!24423 = !DIDerivedType(tag: DW_TAG_member, name: "log_start_usec", scope: !24379, file: !8, line: 74, baseType: !28, size: 64, offset: 2560)
!24424 = !DIDerivedType(tag: DW_TAG_member, name: "log_str", scope: !24379, file: !8, line: 75, baseType: !24396, size: 128, offset: 2624)
!24425 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !24379, file: !8, line: 76, baseType: !41, size: 64, offset: 2752)
!24426 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_cmd_str", scope: !24379, file: !8, line: 79, baseType: !24396, size: 128, offset: 2816)
!24427 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_arg_str", scope: !24379, file: !8, line: 80, baseType: !24396, size: 128, offset: 2944)
!24428 = !DIDerivedType(tag: DW_TAG_member, name: "parent_fd", scope: !24379, file: !8, line: 83, baseType: !19, size: 32, offset: 3072)
!24429 = !DIDerivedType(tag: DW_TAG_member, name: "child_fd", scope: !24379, file: !8, line: 84, baseType: !19, size: 32, offset: 3104)
!24430 = !DIDerivedType(tag: DW_TAG_member, name: "num_clients", scope: !24379, file: !8, line: 87, baseType: !26, size: 32, offset: 3136)
!24431 = !DIDerivedType(tag: DW_TAG_member, name: "num_this_ip", scope: !24379, file: !8, line: 88, baseType: !26, size: 32, offset: 3168)
!24432 = !DIDerivedType(tag: DW_TAG_member, name: "home_str", scope: !24379, file: !8, line: 89, baseType: !24396, size: 128, offset: 3200)
!24433 = !DIDerivedType(tag: DW_TAG_member, name: "control_use_ssl", scope: !24379, file: !8, line: 92, baseType: !19, size: 32, offset: 3328)
!24434 = !DIDerivedType(tag: DW_TAG_member, name: "data_use_ssl", scope: !24379, file: !8, line: 93, baseType: !19, size: 32, offset: 3360)
!24435 = !DIDerivedType(tag: DW_TAG_member, name: "p_ssl_ctx", scope: !24379, file: !8, line: 94, baseType: !80, size: 64, offset: 3392)
!24436 = !DIDerivedType(tag: DW_TAG_member, name: "p_control_ssl", scope: !24379, file: !8, line: 95, baseType: !80, size: 64, offset: 3456)
!24437 = !DIDerivedType(tag: DW_TAG_member, name: "p_data_ssl", scope: !24379, file: !8, line: 96, baseType: !80, size: 64, offset: 3520)
!24438 = !DIDerivedType(tag: DW_TAG_member, name: "control_cert_digest", scope: !24379, file: !8, line: 97, baseType: !24396, size: 128, offset: 3584)
!24439 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_active", scope: !24379, file: !8, line: 98, baseType: !19, size: 32, offset: 3712)
!24440 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_slave_fd", scope: !24379, file: !8, line: 99, baseType: !19, size: 32, offset: 3744)
!24441 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_consumer_fd", scope: !24379, file: !8, line: 100, baseType: !19, size: 32, offset: 3776)
!24442 = !DIDerivedType(tag: DW_TAG_member, name: "login_fails", scope: !24379, file: !8, line: 101, baseType: !26, size: 32, offset: 3808)
!24443 = !DILocalVariable(name: "p_sess", arg: 1, scope: !24374, file: !1800, line: 323, type: !24377)
!24444 = !DILocation(line: 323, column: 58, scope: !24374)
!24445 = !DILocation(line: 325, column: 10, scope: !24374)
!24446 = !DILocation(line: 327, column: 3, scope: !24374)
!24447 = !DILocation(line: 330, column: 3, scope: !24374)
!24448 = !DILocation(line: 333, column: 3, scope: !24374)
!24449 = !DILocation(line: 334, column: 3, scope: !24374)
!24450 = !DILocation(line: 335, column: 3, scope: !24374)
!24451 = !DILocation(line: 336, column: 3, scope: !24374)
!24452 = !DILocation(line: 340, column: 3, scope: !24374)
!24453 = !DILocation(line: 343, column: 7, scope: !24454)
!24454 = distinct !DILexicalBlock(scope: !24374, file: !1800, line: 343, column: 7)
!24455 = !DILocation(line: 343, column: 36, scope: !24454)
!24456 = !DILocation(line: 343, column: 7, scope: !24374)
!24457 = !DILocation(line: 345, column: 5, scope: !24458)
!24458 = distinct !DILexicalBlock(scope: !24454, file: !1800, line: 344, column: 3)
!24459 = !DILocation(line: 346, column: 5, scope: !24458)
!24460 = !DILocation(line: 347, column: 3, scope: !24458)
!24461 = !DILocation(line: 348, column: 7, scope: !24462)
!24462 = distinct !DILexicalBlock(scope: !24374, file: !1800, line: 348, column: 7)
!24463 = !DILocation(line: 348, column: 30, scope: !24462)
!24464 = !DILocation(line: 348, column: 33, scope: !24462)
!24465 = !DILocation(line: 348, column: 7, scope: !24374)
!24466 = !DILocation(line: 351, column: 5, scope: !24467)
!24467 = distinct !DILexicalBlock(scope: !24462, file: !1800, line: 349, column: 3)
!24468 = !DILocation(line: 352, column: 5, scope: !24467)
!24469 = !DILocation(line: 353, column: 3, scope: !24467)
!24470 = !DILocation(line: 354, column: 7, scope: !24471)
!24471 = distinct !DILexicalBlock(scope: !24374, file: !1800, line: 354, column: 7)
!24472 = !DILocation(line: 354, column: 7, scope: !24374)
!24473 = !DILocation(line: 356, column: 5, scope: !24474)
!24474 = distinct !DILexicalBlock(scope: !24471, file: !1800, line: 355, column: 3)
!24475 = !DILocation(line: 357, column: 5, scope: !24474)
!24476 = !DILocation(line: 358, column: 3, scope: !24474)
!24477 = !DILocation(line: 359, column: 7, scope: !24478)
!24478 = distinct !DILexicalBlock(scope: !24374, file: !1800, line: 359, column: 7)
!24479 = !DILocation(line: 359, column: 7, scope: !24374)
!24480 = !DILocation(line: 361, column: 5, scope: !24481)
!24481 = distinct !DILexicalBlock(scope: !24478, file: !1800, line: 360, column: 3)
!24482 = !DILocation(line: 362, column: 3, scope: !24481)
!24483 = !DILocation(line: 363, column: 1, scope: !24374)
!24484 = distinct !DISubprogram(name: "seccomp_sandbox_setup_base", scope: !1800, file: !1800, line: 287, type: !1619, scopeLine: 288, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24485 = !DILocation(line: 290, column: 3, scope: !24484)
!24486 = !DILocation(line: 291, column: 3, scope: !24484)
!24487 = !DILocation(line: 294, column: 3, scope: !24484)
!24488 = !DILocation(line: 297, column: 3, scope: !24484)
!24489 = !DILocation(line: 298, column: 3, scope: !24484)
!24490 = !DILocation(line: 299, column: 3, scope: !24484)
!24491 = !DILocation(line: 301, column: 3, scope: !24484)
!24492 = !DILocation(line: 304, column: 3, scope: !24484)
!24493 = !DILocation(line: 305, column: 3, scope: !24484)
!24494 = !DILocation(line: 306, column: 3, scope: !24484)
!24495 = !DILocation(line: 307, column: 3, scope: !24484)
!24496 = !DILocation(line: 310, column: 3, scope: !24484)
!24497 = !DILocation(line: 311, column: 1, scope: !24484)
!24498 = distinct !DISubprogram(name: "allow_nr_1_arg_match", scope: !1800, file: !1800, line: 126, type: !24499, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24499 = !DISubroutineType(types: !24500)
!24500 = !{null, !19, !19, !19}
!24501 = !DILocalVariable(name: "nr", arg: 1, scope: !24498, file: !1800, line: 126, type: !19)
!24502 = !DILocation(line: 126, column: 26, scope: !24498)
!24503 = !DILocalVariable(name: "arg", arg: 2, scope: !24498, file: !1800, line: 126, type: !19)
!24504 = !DILocation(line: 126, column: 34, scope: !24498)
!24505 = !DILocalVariable(name: "val", arg: 3, scope: !24498, file: !1800, line: 126, type: !19)
!24506 = !DILocation(line: 126, column: 43, scope: !24498)
!24507 = !DILocation(line: 128, column: 7, scope: !24508)
!24508 = distinct !DILexicalBlock(scope: !24498, file: !1800, line: 128, column: 7)
!24509 = !DILocation(line: 128, column: 23, scope: !24508)
!24510 = !DILocation(line: 128, column: 7, scope: !24498)
!24511 = !DILocation(line: 130, column: 5, scope: !24512)
!24512 = distinct !DILexicalBlock(scope: !24508, file: !1800, line: 129, column: 3)
!24513 = !DILocation(line: 131, column: 3, scope: !24512)
!24514 = !DILocation(line: 132, column: 7, scope: !24515)
!24515 = distinct !DILexicalBlock(scope: !24498, file: !1800, line: 132, column: 7)
!24516 = !DILocation(line: 132, column: 10, scope: !24515)
!24517 = !DILocation(line: 132, column: 7, scope: !24498)
!24518 = !DILocation(line: 134, column: 5, scope: !24519)
!24519 = distinct !DILexicalBlock(scope: !24515, file: !1800, line: 133, column: 3)
!24520 = !DILocation(line: 135, column: 3, scope: !24519)
!24521 = !DILocation(line: 136, column: 7, scope: !24522)
!24522 = distinct !DILexicalBlock(scope: !24498, file: !1800, line: 136, column: 7)
!24523 = !DILocation(line: 136, column: 11, scope: !24522)
!24524 = !DILocation(line: 136, column: 15, scope: !24522)
!24525 = !DILocation(line: 136, column: 18, scope: !24522)
!24526 = !DILocation(line: 136, column: 22, scope: !24522)
!24527 = !DILocation(line: 136, column: 7, scope: !24498)
!24528 = !DILocation(line: 138, column: 5, scope: !24529)
!24529 = distinct !DILexicalBlock(scope: !24522, file: !1800, line: 137, column: 3)
!24530 = !DILocation(line: 139, column: 3, scope: !24529)
!24531 = !DILocation(line: 140, column: 31, scope: !24498)
!24532 = !DILocation(line: 140, column: 12, scope: !24498)
!24533 = !DILocation(line: 140, column: 3, scope: !24498)
!24534 = !DILocation(line: 140, column: 29, scope: !24498)
!24535 = !DILocation(line: 141, column: 31, scope: !24498)
!24536 = !DILocation(line: 141, column: 12, scope: !24498)
!24537 = !DILocation(line: 141, column: 3, scope: !24498)
!24538 = !DILocation(line: 141, column: 29, scope: !24498)
!24539 = !DILocation(line: 142, column: 12, scope: !24498)
!24540 = !DILocation(line: 142, column: 3, scope: !24498)
!24541 = !DILocation(line: 142, column: 29, scope: !24498)
!24542 = !DILocation(line: 143, column: 35, scope: !24498)
!24543 = !DILocation(line: 143, column: 29, scope: !24498)
!24544 = !DILocation(line: 143, column: 3, scope: !24498)
!24545 = !DILocation(line: 143, column: 33, scope: !24498)
!24546 = !DILocation(line: 144, column: 22, scope: !24498)
!24547 = !DILocation(line: 145, column: 1, scope: !24498)
!24548 = distinct !DISubprogram(name: "allow_nr", scope: !1800, file: !1800, line: 92, type: !1406, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24549 = !DILocalVariable(name: "nr", arg: 1, scope: !24548, file: !1800, line: 92, type: !19)
!24550 = !DILocation(line: 92, column: 14, scope: !24548)
!24551 = !DILocation(line: 94, column: 7, scope: !24552)
!24552 = distinct !DILexicalBlock(scope: !24548, file: !1800, line: 94, column: 7)
!24553 = !DILocation(line: 94, column: 23, scope: !24552)
!24554 = !DILocation(line: 94, column: 7, scope: !24548)
!24555 = !DILocation(line: 96, column: 5, scope: !24556)
!24556 = distinct !DILexicalBlock(scope: !24552, file: !1800, line: 95, column: 3)
!24557 = !DILocation(line: 97, column: 3, scope: !24556)
!24558 = !DILocation(line: 98, column: 7, scope: !24559)
!24559 = distinct !DILexicalBlock(scope: !24548, file: !1800, line: 98, column: 7)
!24560 = !DILocation(line: 98, column: 10, scope: !24559)
!24561 = !DILocation(line: 98, column: 7, scope: !24548)
!24562 = !DILocation(line: 100, column: 5, scope: !24563)
!24563 = distinct !DILexicalBlock(scope: !24559, file: !1800, line: 99, column: 3)
!24564 = !DILocation(line: 101, column: 3, scope: !24563)
!24565 = !DILocation(line: 102, column: 12, scope: !24548)
!24566 = !DILocation(line: 102, column: 3, scope: !24548)
!24567 = !DILocation(line: 102, column: 29, scope: !24548)
!24568 = !DILocation(line: 103, column: 35, scope: !24548)
!24569 = !DILocation(line: 103, column: 29, scope: !24548)
!24570 = !DILocation(line: 103, column: 3, scope: !24548)
!24571 = !DILocation(line: 103, column: 33, scope: !24548)
!24572 = !DILocation(line: 104, column: 1, scope: !24548)
!24573 = distinct !DISubprogram(name: "allow_nr_2_arg_mask_match", scope: !1800, file: !1800, line: 198, type: !24574, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24574 = !DISubroutineType(types: !24575)
!24575 = !{null, !19, !19, !19, !19, !19}
!24576 = !DILocalVariable(name: "nr", arg: 1, scope: !24573, file: !1800, line: 198, type: !19)
!24577 = !DILocation(line: 198, column: 31, scope: !24573)
!24578 = !DILocalVariable(name: "arg1", arg: 2, scope: !24573, file: !1800, line: 198, type: !19)
!24579 = !DILocation(line: 198, column: 39, scope: !24573)
!24580 = !DILocalVariable(name: "val1", arg: 3, scope: !24573, file: !1800, line: 198, type: !19)
!24581 = !DILocation(line: 198, column: 49, scope: !24573)
!24582 = !DILocalVariable(name: "arg2", arg: 4, scope: !24573, file: !1800, line: 198, type: !19)
!24583 = !DILocation(line: 198, column: 59, scope: !24573)
!24584 = !DILocalVariable(name: "val2", arg: 5, scope: !24573, file: !1800, line: 198, type: !19)
!24585 = !DILocation(line: 198, column: 69, scope: !24573)
!24586 = !DILocation(line: 200, column: 7, scope: !24587)
!24587 = distinct !DILexicalBlock(scope: !24573, file: !1800, line: 200, column: 7)
!24588 = !DILocation(line: 200, column: 23, scope: !24587)
!24589 = !DILocation(line: 200, column: 7, scope: !24573)
!24590 = !DILocation(line: 202, column: 5, scope: !24591)
!24591 = distinct !DILexicalBlock(scope: !24587, file: !1800, line: 201, column: 3)
!24592 = !DILocation(line: 203, column: 3, scope: !24591)
!24593 = !DILocation(line: 204, column: 7, scope: !24594)
!24594 = distinct !DILexicalBlock(scope: !24573, file: !1800, line: 204, column: 7)
!24595 = !DILocation(line: 204, column: 10, scope: !24594)
!24596 = !DILocation(line: 204, column: 7, scope: !24573)
!24597 = !DILocation(line: 206, column: 5, scope: !24598)
!24598 = distinct !DILexicalBlock(scope: !24594, file: !1800, line: 205, column: 3)
!24599 = !DILocation(line: 207, column: 3, scope: !24598)
!24600 = !DILocation(line: 208, column: 7, scope: !24601)
!24601 = distinct !DILexicalBlock(scope: !24573, file: !1800, line: 208, column: 7)
!24602 = !DILocation(line: 208, column: 12, scope: !24601)
!24603 = !DILocation(line: 208, column: 16, scope: !24601)
!24604 = !DILocation(line: 208, column: 19, scope: !24601)
!24605 = !DILocation(line: 208, column: 24, scope: !24601)
!24606 = !DILocation(line: 208, column: 7, scope: !24573)
!24607 = !DILocation(line: 210, column: 5, scope: !24608)
!24608 = distinct !DILexicalBlock(scope: !24601, file: !1800, line: 209, column: 3)
!24609 = !DILocation(line: 211, column: 3, scope: !24608)
!24610 = !DILocation(line: 212, column: 7, scope: !24611)
!24611 = distinct !DILexicalBlock(scope: !24573, file: !1800, line: 212, column: 7)
!24612 = !DILocation(line: 212, column: 12, scope: !24611)
!24613 = !DILocation(line: 212, column: 16, scope: !24611)
!24614 = !DILocation(line: 212, column: 19, scope: !24611)
!24615 = !DILocation(line: 212, column: 24, scope: !24611)
!24616 = !DILocation(line: 212, column: 7, scope: !24573)
!24617 = !DILocation(line: 214, column: 5, scope: !24618)
!24618 = distinct !DILexicalBlock(scope: !24611, file: !1800, line: 213, column: 3)
!24619 = !DILocation(line: 215, column: 3, scope: !24618)
!24620 = !DILocation(line: 216, column: 37, scope: !24573)
!24621 = !DILocation(line: 216, column: 35, scope: !24573)
!24622 = !DILocation(line: 216, column: 12, scope: !24573)
!24623 = !DILocation(line: 216, column: 3, scope: !24573)
!24624 = !DILocation(line: 216, column: 29, scope: !24573)
!24625 = !DILocation(line: 217, column: 31, scope: !24573)
!24626 = !DILocation(line: 217, column: 12, scope: !24573)
!24627 = !DILocation(line: 217, column: 3, scope: !24573)
!24628 = !DILocation(line: 217, column: 29, scope: !24573)
!24629 = !DILocation(line: 218, column: 31, scope: !24573)
!24630 = !DILocation(line: 218, column: 12, scope: !24573)
!24631 = !DILocation(line: 218, column: 3, scope: !24573)
!24632 = !DILocation(line: 218, column: 29, scope: !24573)
!24633 = !DILocation(line: 219, column: 31, scope: !24573)
!24634 = !DILocation(line: 219, column: 12, scope: !24573)
!24635 = !DILocation(line: 219, column: 3, scope: !24573)
!24636 = !DILocation(line: 219, column: 29, scope: !24573)
!24637 = !DILocation(line: 220, column: 12, scope: !24573)
!24638 = !DILocation(line: 220, column: 3, scope: !24573)
!24639 = !DILocation(line: 220, column: 29, scope: !24573)
!24640 = !DILocation(line: 221, column: 35, scope: !24573)
!24641 = !DILocation(line: 221, column: 29, scope: !24573)
!24642 = !DILocation(line: 221, column: 3, scope: !24573)
!24643 = !DILocation(line: 221, column: 33, scope: !24573)
!24644 = !DILocation(line: 222, column: 22, scope: !24573)
!24645 = !DILocation(line: 223, column: 1, scope: !24573)
!24646 = distinct !DISubprogram(name: "allow_nr_2_arg_match", scope: !1800, file: !1800, line: 170, type: !24574, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24647 = !DILocalVariable(name: "nr", arg: 1, scope: !24646, file: !1800, line: 170, type: !19)
!24648 = !DILocation(line: 170, column: 26, scope: !24646)
!24649 = !DILocalVariable(name: "arg1", arg: 2, scope: !24646, file: !1800, line: 170, type: !19)
!24650 = !DILocation(line: 170, column: 34, scope: !24646)
!24651 = !DILocalVariable(name: "val1", arg: 3, scope: !24646, file: !1800, line: 170, type: !19)
!24652 = !DILocation(line: 170, column: 44, scope: !24646)
!24653 = !DILocalVariable(name: "arg2", arg: 4, scope: !24646, file: !1800, line: 170, type: !19)
!24654 = !DILocation(line: 170, column: 54, scope: !24646)
!24655 = !DILocalVariable(name: "val2", arg: 5, scope: !24646, file: !1800, line: 170, type: !19)
!24656 = !DILocation(line: 170, column: 64, scope: !24646)
!24657 = !DILocation(line: 172, column: 7, scope: !24658)
!24658 = distinct !DILexicalBlock(scope: !24646, file: !1800, line: 172, column: 7)
!24659 = !DILocation(line: 172, column: 23, scope: !24658)
!24660 = !DILocation(line: 172, column: 7, scope: !24646)
!24661 = !DILocation(line: 174, column: 5, scope: !24662)
!24662 = distinct !DILexicalBlock(scope: !24658, file: !1800, line: 173, column: 3)
!24663 = !DILocation(line: 175, column: 3, scope: !24662)
!24664 = !DILocation(line: 176, column: 7, scope: !24665)
!24665 = distinct !DILexicalBlock(scope: !24646, file: !1800, line: 176, column: 7)
!24666 = !DILocation(line: 176, column: 10, scope: !24665)
!24667 = !DILocation(line: 176, column: 7, scope: !24646)
!24668 = !DILocation(line: 178, column: 5, scope: !24669)
!24669 = distinct !DILexicalBlock(scope: !24665, file: !1800, line: 177, column: 3)
!24670 = !DILocation(line: 179, column: 3, scope: !24669)
!24671 = !DILocation(line: 180, column: 7, scope: !24672)
!24672 = distinct !DILexicalBlock(scope: !24646, file: !1800, line: 180, column: 7)
!24673 = !DILocation(line: 180, column: 12, scope: !24672)
!24674 = !DILocation(line: 180, column: 16, scope: !24672)
!24675 = !DILocation(line: 180, column: 19, scope: !24672)
!24676 = !DILocation(line: 180, column: 24, scope: !24672)
!24677 = !DILocation(line: 180, column: 7, scope: !24646)
!24678 = !DILocation(line: 182, column: 5, scope: !24679)
!24679 = distinct !DILexicalBlock(scope: !24672, file: !1800, line: 181, column: 3)
!24680 = !DILocation(line: 183, column: 3, scope: !24679)
!24681 = !DILocation(line: 184, column: 7, scope: !24682)
!24682 = distinct !DILexicalBlock(scope: !24646, file: !1800, line: 184, column: 7)
!24683 = !DILocation(line: 184, column: 12, scope: !24682)
!24684 = !DILocation(line: 184, column: 16, scope: !24682)
!24685 = !DILocation(line: 184, column: 19, scope: !24682)
!24686 = !DILocation(line: 184, column: 24, scope: !24682)
!24687 = !DILocation(line: 184, column: 7, scope: !24646)
!24688 = !DILocation(line: 186, column: 5, scope: !24689)
!24689 = distinct !DILexicalBlock(scope: !24682, file: !1800, line: 185, column: 3)
!24690 = !DILocation(line: 187, column: 3, scope: !24689)
!24691 = !DILocation(line: 188, column: 31, scope: !24646)
!24692 = !DILocation(line: 188, column: 12, scope: !24646)
!24693 = !DILocation(line: 188, column: 3, scope: !24646)
!24694 = !DILocation(line: 188, column: 29, scope: !24646)
!24695 = !DILocation(line: 189, column: 31, scope: !24646)
!24696 = !DILocation(line: 189, column: 12, scope: !24646)
!24697 = !DILocation(line: 189, column: 3, scope: !24646)
!24698 = !DILocation(line: 189, column: 29, scope: !24646)
!24699 = !DILocation(line: 190, column: 31, scope: !24646)
!24700 = !DILocation(line: 190, column: 12, scope: !24646)
!24701 = !DILocation(line: 190, column: 3, scope: !24646)
!24702 = !DILocation(line: 190, column: 29, scope: !24646)
!24703 = !DILocation(line: 191, column: 31, scope: !24646)
!24704 = !DILocation(line: 191, column: 12, scope: !24646)
!24705 = !DILocation(line: 191, column: 3, scope: !24646)
!24706 = !DILocation(line: 191, column: 29, scope: !24646)
!24707 = !DILocation(line: 192, column: 12, scope: !24646)
!24708 = !DILocation(line: 192, column: 3, scope: !24646)
!24709 = !DILocation(line: 192, column: 29, scope: !24646)
!24710 = !DILocation(line: 193, column: 35, scope: !24646)
!24711 = !DILocation(line: 193, column: 29, scope: !24646)
!24712 = !DILocation(line: 193, column: 3, scope: !24646)
!24713 = !DILocation(line: 193, column: 33, scope: !24646)
!24714 = !DILocation(line: 194, column: 22, scope: !24646)
!24715 = !DILocation(line: 195, column: 1, scope: !24646)
!24716 = distinct !DISubprogram(name: "reject_nr", scope: !1800, file: !1800, line: 107, type: !6973, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24717 = !DILocalVariable(name: "nr", arg: 1, scope: !24716, file: !1800, line: 107, type: !19)
!24718 = !DILocation(line: 107, column: 15, scope: !24716)
!24719 = !DILocalVariable(name: "errcode", arg: 2, scope: !24716, file: !1800, line: 107, type: !19)
!24720 = !DILocation(line: 107, column: 23, scope: !24716)
!24721 = !DILocation(line: 109, column: 7, scope: !24722)
!24722 = distinct !DILexicalBlock(scope: !24716, file: !1800, line: 109, column: 7)
!24723 = !DILocation(line: 109, column: 23, scope: !24722)
!24724 = !DILocation(line: 109, column: 7, scope: !24716)
!24725 = !DILocation(line: 111, column: 5, scope: !24726)
!24726 = distinct !DILexicalBlock(scope: !24722, file: !1800, line: 110, column: 3)
!24727 = !DILocation(line: 112, column: 3, scope: !24726)
!24728 = !DILocation(line: 113, column: 7, scope: !24729)
!24729 = distinct !DILexicalBlock(scope: !24716, file: !1800, line: 113, column: 7)
!24730 = !DILocation(line: 113, column: 10, scope: !24729)
!24731 = !DILocation(line: 113, column: 7, scope: !24716)
!24732 = !DILocation(line: 115, column: 5, scope: !24733)
!24733 = distinct !DILexicalBlock(scope: !24729, file: !1800, line: 114, column: 3)
!24734 = !DILocation(line: 116, column: 3, scope: !24733)
!24735 = !DILocation(line: 117, column: 7, scope: !24736)
!24736 = distinct !DILexicalBlock(scope: !24716, file: !1800, line: 117, column: 7)
!24737 = !DILocation(line: 117, column: 15, scope: !24736)
!24738 = !DILocation(line: 117, column: 19, scope: !24736)
!24739 = !DILocation(line: 117, column: 22, scope: !24736)
!24740 = !DILocation(line: 117, column: 30, scope: !24736)
!24741 = !DILocation(line: 117, column: 7, scope: !24716)
!24742 = !DILocation(line: 119, column: 5, scope: !24743)
!24743 = distinct !DILexicalBlock(scope: !24736, file: !1800, line: 118, column: 3)
!24744 = !DILocation(line: 120, column: 3, scope: !24743)
!24745 = !DILocation(line: 121, column: 31, scope: !24716)
!24746 = !DILocation(line: 121, column: 12, scope: !24716)
!24747 = !DILocation(line: 121, column: 3, scope: !24716)
!24748 = !DILocation(line: 121, column: 29, scope: !24716)
!24749 = !DILocation(line: 122, column: 35, scope: !24716)
!24750 = !DILocation(line: 122, column: 29, scope: !24716)
!24751 = !DILocation(line: 122, column: 3, scope: !24716)
!24752 = !DILocation(line: 122, column: 33, scope: !24716)
!24753 = !DILocation(line: 123, column: 1, scope: !24716)
!24754 = distinct !DISubprogram(name: "allow_nr_1_arg_mask", scope: !1800, file: !1800, line: 148, type: !24499, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24755 = !DILocalVariable(name: "nr", arg: 1, scope: !24754, file: !1800, line: 148, type: !19)
!24756 = !DILocation(line: 148, column: 25, scope: !24754)
!24757 = !DILocalVariable(name: "arg", arg: 2, scope: !24754, file: !1800, line: 148, type: !19)
!24758 = !DILocation(line: 148, column: 33, scope: !24754)
!24759 = !DILocalVariable(name: "val", arg: 3, scope: !24754, file: !1800, line: 148, type: !19)
!24760 = !DILocation(line: 148, column: 42, scope: !24754)
!24761 = !DILocation(line: 150, column: 7, scope: !24762)
!24762 = distinct !DILexicalBlock(scope: !24754, file: !1800, line: 150, column: 7)
!24763 = !DILocation(line: 150, column: 23, scope: !24762)
!24764 = !DILocation(line: 150, column: 7, scope: !24754)
!24765 = !DILocation(line: 152, column: 5, scope: !24766)
!24766 = distinct !DILexicalBlock(scope: !24762, file: !1800, line: 151, column: 3)
!24767 = !DILocation(line: 153, column: 3, scope: !24766)
!24768 = !DILocation(line: 154, column: 7, scope: !24769)
!24769 = distinct !DILexicalBlock(scope: !24754, file: !1800, line: 154, column: 7)
!24770 = !DILocation(line: 154, column: 10, scope: !24769)
!24771 = !DILocation(line: 154, column: 7, scope: !24754)
!24772 = !DILocation(line: 156, column: 5, scope: !24773)
!24773 = distinct !DILexicalBlock(scope: !24769, file: !1800, line: 155, column: 3)
!24774 = !DILocation(line: 157, column: 3, scope: !24773)
!24775 = !DILocation(line: 158, column: 7, scope: !24776)
!24776 = distinct !DILexicalBlock(scope: !24754, file: !1800, line: 158, column: 7)
!24777 = !DILocation(line: 158, column: 11, scope: !24776)
!24778 = !DILocation(line: 158, column: 15, scope: !24776)
!24779 = !DILocation(line: 158, column: 18, scope: !24776)
!24780 = !DILocation(line: 158, column: 22, scope: !24776)
!24781 = !DILocation(line: 158, column: 7, scope: !24754)
!24782 = !DILocation(line: 160, column: 5, scope: !24783)
!24783 = distinct !DILexicalBlock(scope: !24776, file: !1800, line: 159, column: 3)
!24784 = !DILocation(line: 161, column: 3, scope: !24783)
!24785 = !DILocation(line: 162, column: 37, scope: !24754)
!24786 = !DILocation(line: 162, column: 35, scope: !24754)
!24787 = !DILocation(line: 162, column: 12, scope: !24754)
!24788 = !DILocation(line: 162, column: 3, scope: !24754)
!24789 = !DILocation(line: 162, column: 29, scope: !24754)
!24790 = !DILocation(line: 163, column: 31, scope: !24754)
!24791 = !DILocation(line: 163, column: 12, scope: !24754)
!24792 = !DILocation(line: 163, column: 3, scope: !24754)
!24793 = !DILocation(line: 163, column: 29, scope: !24754)
!24794 = !DILocation(line: 164, column: 12, scope: !24754)
!24795 = !DILocation(line: 164, column: 3, scope: !24754)
!24796 = !DILocation(line: 164, column: 29, scope: !24754)
!24797 = !DILocation(line: 165, column: 35, scope: !24754)
!24798 = !DILocation(line: 165, column: 29, scope: !24754)
!24799 = !DILocation(line: 165, column: 3, scope: !24754)
!24800 = !DILocation(line: 165, column: 33, scope: !24754)
!24801 = !DILocation(line: 166, column: 22, scope: !24754)
!24802 = !DILocation(line: 167, column: 1, scope: !24754)
!24803 = distinct !DISubprogram(name: "seccomp_sandbox_setup_postlogin", scope: !1800, file: !1800, line: 366, type: !24375, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24804 = !DILocalVariable(name: "p_sess", arg: 1, scope: !24803, file: !1800, line: 366, type: !24377)
!24805 = !DILocation(line: 366, column: 59, scope: !24803)
!24806 = !DILocalVariable(name: "is_anon", scope: !24803, file: !1800, line: 368, type: !19)
!24807 = !DILocation(line: 368, column: 7, scope: !24803)
!24808 = !DILocation(line: 368, column: 17, scope: !24803)
!24809 = !DILocation(line: 368, column: 25, scope: !24803)
!24810 = !DILocalVariable(name: "open_flag", scope: !24803, file: !1800, line: 369, type: !19)
!24811 = !DILocation(line: 369, column: 7, scope: !24803)
!24812 = !DILocation(line: 370, column: 7, scope: !24813)
!24813 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 370, column: 7)
!24814 = !DILocation(line: 370, column: 7, scope: !24803)
!24815 = !DILocation(line: 372, column: 15, scope: !24816)
!24816 = distinct !DILexicalBlock(scope: !24813, file: !1800, line: 371, column: 3)
!24817 = !DILocation(line: 373, column: 3, scope: !24816)
!24818 = !DILocation(line: 379, column: 3, scope: !24803)
!24819 = !DILocation(line: 382, column: 34, scope: !24803)
!24820 = !DILocation(line: 382, column: 3, scope: !24803)
!24821 = !DILocation(line: 385, column: 7, scope: !24822)
!24822 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 385, column: 7)
!24823 = !DILocation(line: 385, column: 30, scope: !24822)
!24824 = !DILocation(line: 385, column: 33, scope: !24822)
!24825 = !DILocation(line: 385, column: 57, scope: !24822)
!24826 = !DILocation(line: 386, column: 7, scope: !24822)
!24827 = !DILocation(line: 385, column: 7, scope: !24803)
!24828 = !DILocation(line: 388, column: 5, scope: !24829)
!24829 = distinct !DILexicalBlock(scope: !24822, file: !1800, line: 387, column: 3)
!24830 = !DILocation(line: 389, column: 5, scope: !24829)
!24831 = !DILocation(line: 390, column: 3, scope: !24829)
!24832 = !DILocation(line: 391, column: 7, scope: !24833)
!24833 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 391, column: 7)
!24834 = !DILocation(line: 391, column: 7, scope: !24803)
!24835 = !DILocation(line: 393, column: 54, scope: !24836)
!24836 = distinct !DILexicalBlock(scope: !24833, file: !1800, line: 392, column: 3)
!24837 = !DILocation(line: 393, column: 5, scope: !24836)
!24838 = !DILocation(line: 394, column: 3, scope: !24836)
!24839 = !DILocation(line: 395, column: 3, scope: !24803)
!24840 = !DILocation(line: 396, column: 3, scope: !24803)
!24841 = !DILocation(line: 397, column: 3, scope: !24803)
!24842 = !DILocation(line: 398, column: 3, scope: !24803)
!24843 = !DILocation(line: 399, column: 3, scope: !24803)
!24844 = !DILocation(line: 403, column: 37, scope: !24803)
!24845 = !DILocation(line: 403, column: 3, scope: !24803)
!24846 = !DILocation(line: 404, column: 39, scope: !24803)
!24847 = !DILocation(line: 404, column: 3, scope: !24803)
!24848 = !DILocation(line: 406, column: 3, scope: !24803)
!24849 = !DILocation(line: 407, column: 3, scope: !24803)
!24850 = !DILocation(line: 409, column: 3, scope: !24803)
!24851 = !DILocation(line: 410, column: 3, scope: !24803)
!24852 = !DILocation(line: 411, column: 3, scope: !24803)
!24853 = !DILocation(line: 413, column: 3, scope: !24803)
!24854 = !DILocation(line: 416, column: 7, scope: !24855)
!24855 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 416, column: 7)
!24856 = !DILocation(line: 416, column: 7, scope: !24803)
!24857 = !DILocation(line: 418, column: 5, scope: !24858)
!24858 = distinct !DILexicalBlock(scope: !24855, file: !1800, line: 417, column: 3)
!24859 = !DILocation(line: 419, column: 3, scope: !24858)
!24860 = !DILocation(line: 420, column: 7, scope: !24861)
!24861 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 420, column: 7)
!24862 = !DILocation(line: 420, column: 36, scope: !24861)
!24863 = !DILocation(line: 420, column: 40, scope: !24861)
!24864 = !DILocation(line: 421, column: 7, scope: !24861)
!24865 = !DILocation(line: 421, column: 39, scope: !24861)
!24866 = !DILocation(line: 421, column: 43, scope: !24861)
!24867 = !DILocation(line: 422, column: 7, scope: !24861)
!24868 = !DILocation(line: 420, column: 7, scope: !24803)
!24869 = !DILocation(line: 424, column: 5, scope: !24870)
!24870 = distinct !DILexicalBlock(scope: !24861, file: !1800, line: 423, column: 3)
!24871 = !DILocation(line: 425, column: 3, scope: !24870)
!24872 = !DILocation(line: 426, column: 7, scope: !24873)
!24873 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 426, column: 7)
!24874 = !DILocation(line: 426, column: 36, scope: !24873)
!24875 = !DILocation(line: 426, column: 40, scope: !24873)
!24876 = !DILocation(line: 426, column: 43, scope: !24873)
!24877 = !DILocation(line: 426, column: 75, scope: !24873)
!24878 = !DILocation(line: 426, column: 7, scope: !24803)
!24879 = !DILocation(line: 428, column: 5, scope: !24880)
!24880 = distinct !DILexicalBlock(scope: !24873, file: !1800, line: 427, column: 3)
!24881 = !DILocation(line: 429, column: 3, scope: !24880)
!24882 = !DILocation(line: 431, column: 7, scope: !24883)
!24883 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 431, column: 7)
!24884 = !DILocation(line: 431, column: 7, scope: !24803)
!24885 = !DILocation(line: 433, column: 5, scope: !24886)
!24886 = distinct !DILexicalBlock(scope: !24883, file: !1800, line: 432, column: 3)
!24887 = !DILocation(line: 434, column: 9, scope: !24888)
!24888 = distinct !DILexicalBlock(scope: !24886, file: !1800, line: 434, column: 9)
!24889 = !DILocation(line: 434, column: 17, scope: !24888)
!24890 = !DILocation(line: 434, column: 20, scope: !24888)
!24891 = !DILocation(line: 434, column: 9, scope: !24886)
!24892 = !DILocation(line: 436, column: 7, scope: !24893)
!24893 = distinct !DILexicalBlock(scope: !24888, file: !1800, line: 435, column: 5)
!24894 = !DILocation(line: 437, column: 7, scope: !24893)
!24895 = !DILocation(line: 438, column: 5, scope: !24893)
!24896 = !DILocation(line: 439, column: 3, scope: !24886)
!24897 = !DILocation(line: 443, column: 5, scope: !24898)
!24898 = distinct !DILexicalBlock(scope: !24883, file: !1800, line: 441, column: 3)
!24899 = !DILocation(line: 444, column: 10, scope: !24900)
!24900 = distinct !DILexicalBlock(scope: !24898, file: !1800, line: 444, column: 9)
!24901 = !DILocation(line: 444, column: 18, scope: !24900)
!24902 = !DILocation(line: 444, column: 21, scope: !24900)
!24903 = !DILocation(line: 444, column: 44, scope: !24900)
!24904 = !DILocation(line: 444, column: 47, scope: !24900)
!24905 = !DILocation(line: 444, column: 9, scope: !24898)
!24906 = !DILocation(line: 447, column: 7, scope: !24907)
!24907 = distinct !DILexicalBlock(scope: !24900, file: !1800, line: 445, column: 5)
!24908 = !DILocation(line: 448, column: 5, scope: !24907)
!24909 = !DILocation(line: 451, column: 7, scope: !24910)
!24910 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 451, column: 7)
!24911 = !DILocation(line: 451, column: 7, scope: !24803)
!24912 = !DILocation(line: 458, column: 5, scope: !24913)
!24913 = distinct !DILexicalBlock(scope: !24910, file: !1800, line: 452, column: 3)
!24914 = !DILocation(line: 459, column: 3, scope: !24913)
!24915 = !DILocation(line: 461, column: 7, scope: !24916)
!24916 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 461, column: 7)
!24917 = !DILocation(line: 461, column: 7, scope: !24803)
!24918 = !DILocation(line: 463, column: 5, scope: !24919)
!24919 = distinct !DILexicalBlock(scope: !24916, file: !1800, line: 462, column: 3)
!24920 = !DILocation(line: 464, column: 5, scope: !24919)
!24921 = !DILocation(line: 465, column: 3, scope: !24919)
!24922 = !DILocation(line: 467, column: 7, scope: !24923)
!24923 = distinct !DILexicalBlock(scope: !24803, file: !1800, line: 467, column: 7)
!24924 = !DILocation(line: 467, column: 7, scope: !24803)
!24925 = !DILocation(line: 469, column: 10, scope: !24926)
!24926 = distinct !DILexicalBlock(scope: !24927, file: !1800, line: 469, column: 9)
!24927 = distinct !DILexicalBlock(scope: !24923, file: !1800, line: 468, column: 3)
!24928 = !DILocation(line: 469, column: 18, scope: !24926)
!24929 = !DILocation(line: 469, column: 21, scope: !24926)
!24930 = !DILocation(line: 469, column: 9, scope: !24927)
!24931 = !DILocation(line: 471, column: 7, scope: !24932)
!24932 = distinct !DILexicalBlock(scope: !24926, file: !1800, line: 470, column: 5)
!24933 = !DILocation(line: 472, column: 5, scope: !24932)
!24934 = !DILocation(line: 473, column: 10, scope: !24935)
!24935 = distinct !DILexicalBlock(scope: !24927, file: !1800, line: 473, column: 9)
!24936 = !DILocation(line: 473, column: 18, scope: !24935)
!24937 = !DILocation(line: 474, column: 9, scope: !24935)
!24938 = !DILocation(line: 474, column: 41, scope: !24935)
!24939 = !DILocation(line: 475, column: 9, scope: !24935)
!24940 = !DILocation(line: 473, column: 9, scope: !24927)
!24941 = !DILocation(line: 477, column: 7, scope: !24942)
!24942 = distinct !DILexicalBlock(scope: !24935, file: !1800, line: 476, column: 5)
!24943 = !DILocation(line: 478, column: 5, scope: !24942)
!24944 = !DILocation(line: 479, column: 10, scope: !24945)
!24945 = distinct !DILexicalBlock(scope: !24927, file: !1800, line: 479, column: 9)
!24946 = !DILocation(line: 479, column: 18, scope: !24945)
!24947 = !DILocation(line: 479, column: 21, scope: !24945)
!24948 = !DILocation(line: 479, column: 9, scope: !24927)
!24949 = !DILocation(line: 481, column: 7, scope: !24950)
!24950 = distinct !DILexicalBlock(scope: !24945, file: !1800, line: 480, column: 5)
!24951 = !DILocation(line: 482, column: 7, scope: !24950)
!24952 = !DILocation(line: 483, column: 7, scope: !24950)
!24953 = !DILocation(line: 484, column: 11, scope: !24954)
!24954 = distinct !DILexicalBlock(scope: !24950, file: !1800, line: 484, column: 11)
!24955 = !DILocation(line: 484, column: 11, scope: !24950)
!24956 = !DILocation(line: 486, column: 9, scope: !24957)
!24957 = distinct !DILexicalBlock(scope: !24954, file: !1800, line: 485, column: 7)
!24958 = !DILocation(line: 487, column: 9, scope: !24957)
!24959 = !DILocation(line: 488, column: 7, scope: !24957)
!24960 = !DILocation(line: 489, column: 5, scope: !24950)
!24961 = !DILocation(line: 490, column: 10, scope: !24962)
!24962 = distinct !DILexicalBlock(scope: !24927, file: !1800, line: 490, column: 9)
!24963 = !DILocation(line: 490, column: 18, scope: !24962)
!24964 = !DILocation(line: 490, column: 21, scope: !24962)
!24965 = !DILocation(line: 490, column: 9, scope: !24927)
!24966 = !DILocation(line: 492, column: 7, scope: !24967)
!24967 = distinct !DILexicalBlock(scope: !24962, file: !1800, line: 491, column: 5)
!24968 = !DILocation(line: 493, column: 5, scope: !24967)
!24969 = !DILocation(line: 494, column: 3, scope: !24927)
!24970 = !DILocation(line: 495, column: 1, scope: !24803)
!24971 = distinct !DISubprogram(name: "seccomp_sandbox_setup_data_connections", scope: !1800, file: !1800, line: 261, type: !1619, scopeLine: 262, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24972 = !DILocation(line: 263, column: 3, scope: !24971)
!24973 = !DILocation(line: 264, column: 3, scope: !24971)
!24974 = !DILocation(line: 268, column: 3, scope: !24971)
!24975 = !DILocation(line: 269, column: 3, scope: !24971)
!24976 = !DILocation(line: 270, column: 7, scope: !24977)
!24977 = distinct !DILexicalBlock(scope: !24971, file: !1800, line: 270, column: 7)
!24978 = !DILocation(line: 270, column: 7, scope: !24971)
!24979 = !DILocation(line: 272, column: 5, scope: !24980)
!24980 = distinct !DILexicalBlock(scope: !24977, file: !1800, line: 271, column: 3)
!24981 = !DILocation(line: 273, column: 5, scope: !24980)
!24982 = !DILocation(line: 274, column: 5, scope: !24980)
!24983 = !DILocation(line: 275, column: 5, scope: !24980)
!24984 = !DILocation(line: 276, column: 5, scope: !24980)
!24985 = !DILocation(line: 277, column: 5, scope: !24980)
!24986 = !DILocation(line: 278, column: 3, scope: !24980)
!24987 = !DILocation(line: 279, column: 7, scope: !24988)
!24988 = distinct !DILexicalBlock(scope: !24971, file: !1800, line: 279, column: 7)
!24989 = !DILocation(line: 279, column: 7, scope: !24971)
!24990 = !DILocation(line: 281, column: 5, scope: !24991)
!24991 = distinct !DILexicalBlock(scope: !24988, file: !1800, line: 280, column: 3)
!24992 = !DILocation(line: 282, column: 5, scope: !24991)
!24993 = !DILocation(line: 283, column: 3, scope: !24991)
!24994 = !DILocation(line: 284, column: 1, scope: !24971)
!24995 = distinct !DISubprogram(name: "allow_nr_3_arg_match", scope: !1800, file: !1800, line: 226, type: !24996, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!24996 = !DISubroutineType(types: !24997)
!24997 = !{null, !19, !19, !19, !19, !19, !19, !19}
!24998 = !DILocalVariable(name: "nr", arg: 1, scope: !24995, file: !1800, line: 226, type: !19)
!24999 = !DILocation(line: 226, column: 26, scope: !24995)
!25000 = !DILocalVariable(name: "arg1", arg: 2, scope: !24995, file: !1800, line: 226, type: !19)
!25001 = !DILocation(line: 226, column: 34, scope: !24995)
!25002 = !DILocalVariable(name: "val1", arg: 3, scope: !24995, file: !1800, line: 226, type: !19)
!25003 = !DILocation(line: 226, column: 44, scope: !24995)
!25004 = !DILocalVariable(name: "arg2", arg: 4, scope: !24995, file: !1800, line: 226, type: !19)
!25005 = !DILocation(line: 226, column: 54, scope: !24995)
!25006 = !DILocalVariable(name: "val2", arg: 5, scope: !24995, file: !1800, line: 226, type: !19)
!25007 = !DILocation(line: 226, column: 64, scope: !24995)
!25008 = !DILocalVariable(name: "arg3", arg: 6, scope: !24995, file: !1800, line: 226, type: !19)
!25009 = !DILocation(line: 226, column: 74, scope: !24995)
!25010 = !DILocalVariable(name: "val3", arg: 7, scope: !24995, file: !1800, line: 227, type: !19)
!25011 = !DILocation(line: 227, column: 26, scope: !24995)
!25012 = !DILocation(line: 229, column: 7, scope: !25013)
!25013 = distinct !DILexicalBlock(scope: !24995, file: !1800, line: 229, column: 7)
!25014 = !DILocation(line: 229, column: 23, scope: !25013)
!25015 = !DILocation(line: 229, column: 7, scope: !24995)
!25016 = !DILocation(line: 231, column: 5, scope: !25017)
!25017 = distinct !DILexicalBlock(scope: !25013, file: !1800, line: 230, column: 3)
!25018 = !DILocation(line: 232, column: 3, scope: !25017)
!25019 = !DILocation(line: 233, column: 7, scope: !25020)
!25020 = distinct !DILexicalBlock(scope: !24995, file: !1800, line: 233, column: 7)
!25021 = !DILocation(line: 233, column: 10, scope: !25020)
!25022 = !DILocation(line: 233, column: 7, scope: !24995)
!25023 = !DILocation(line: 235, column: 5, scope: !25024)
!25024 = distinct !DILexicalBlock(scope: !25020, file: !1800, line: 234, column: 3)
!25025 = !DILocation(line: 236, column: 3, scope: !25024)
!25026 = !DILocation(line: 237, column: 7, scope: !25027)
!25027 = distinct !DILexicalBlock(scope: !24995, file: !1800, line: 237, column: 7)
!25028 = !DILocation(line: 237, column: 12, scope: !25027)
!25029 = !DILocation(line: 237, column: 16, scope: !25027)
!25030 = !DILocation(line: 237, column: 19, scope: !25027)
!25031 = !DILocation(line: 237, column: 24, scope: !25027)
!25032 = !DILocation(line: 237, column: 7, scope: !24995)
!25033 = !DILocation(line: 239, column: 5, scope: !25034)
!25034 = distinct !DILexicalBlock(scope: !25027, file: !1800, line: 238, column: 3)
!25035 = !DILocation(line: 240, column: 3, scope: !25034)
!25036 = !DILocation(line: 241, column: 7, scope: !25037)
!25037 = distinct !DILexicalBlock(scope: !24995, file: !1800, line: 241, column: 7)
!25038 = !DILocation(line: 241, column: 12, scope: !25037)
!25039 = !DILocation(line: 241, column: 16, scope: !25037)
!25040 = !DILocation(line: 241, column: 19, scope: !25037)
!25041 = !DILocation(line: 241, column: 24, scope: !25037)
!25042 = !DILocation(line: 241, column: 7, scope: !24995)
!25043 = !DILocation(line: 243, column: 5, scope: !25044)
!25044 = distinct !DILexicalBlock(scope: !25037, file: !1800, line: 242, column: 3)
!25045 = !DILocation(line: 244, column: 3, scope: !25044)
!25046 = !DILocation(line: 245, column: 7, scope: !25047)
!25047 = distinct !DILexicalBlock(scope: !24995, file: !1800, line: 245, column: 7)
!25048 = !DILocation(line: 245, column: 12, scope: !25047)
!25049 = !DILocation(line: 245, column: 16, scope: !25047)
!25050 = !DILocation(line: 245, column: 19, scope: !25047)
!25051 = !DILocation(line: 245, column: 24, scope: !25047)
!25052 = !DILocation(line: 245, column: 7, scope: !24995)
!25053 = !DILocation(line: 247, column: 5, scope: !25054)
!25054 = distinct !DILexicalBlock(scope: !25047, file: !1800, line: 246, column: 3)
!25055 = !DILocation(line: 248, column: 3, scope: !25054)
!25056 = !DILocation(line: 249, column: 31, scope: !24995)
!25057 = !DILocation(line: 249, column: 12, scope: !24995)
!25058 = !DILocation(line: 249, column: 3, scope: !24995)
!25059 = !DILocation(line: 249, column: 29, scope: !24995)
!25060 = !DILocation(line: 250, column: 31, scope: !24995)
!25061 = !DILocation(line: 250, column: 12, scope: !24995)
!25062 = !DILocation(line: 250, column: 3, scope: !24995)
!25063 = !DILocation(line: 250, column: 29, scope: !24995)
!25064 = !DILocation(line: 251, column: 31, scope: !24995)
!25065 = !DILocation(line: 251, column: 12, scope: !24995)
!25066 = !DILocation(line: 251, column: 3, scope: !24995)
!25067 = !DILocation(line: 251, column: 29, scope: !24995)
!25068 = !DILocation(line: 252, column: 31, scope: !24995)
!25069 = !DILocation(line: 252, column: 12, scope: !24995)
!25070 = !DILocation(line: 252, column: 3, scope: !24995)
!25071 = !DILocation(line: 252, column: 29, scope: !24995)
!25072 = !DILocation(line: 253, column: 31, scope: !24995)
!25073 = !DILocation(line: 253, column: 12, scope: !24995)
!25074 = !DILocation(line: 253, column: 3, scope: !24995)
!25075 = !DILocation(line: 253, column: 29, scope: !24995)
!25076 = !DILocation(line: 254, column: 31, scope: !24995)
!25077 = !DILocation(line: 254, column: 12, scope: !24995)
!25078 = !DILocation(line: 254, column: 3, scope: !24995)
!25079 = !DILocation(line: 254, column: 29, scope: !24995)
!25080 = !DILocation(line: 255, column: 12, scope: !24995)
!25081 = !DILocation(line: 255, column: 3, scope: !24995)
!25082 = !DILocation(line: 255, column: 29, scope: !24995)
!25083 = !DILocation(line: 256, column: 35, scope: !24995)
!25084 = !DILocation(line: 256, column: 29, scope: !24995)
!25085 = !DILocation(line: 256, column: 3, scope: !24995)
!25086 = !DILocation(line: 256, column: 33, scope: !24995)
!25087 = !DILocation(line: 257, column: 22, scope: !24995)
!25088 = !DILocation(line: 258, column: 1, scope: !24995)
!25089 = distinct !DISubprogram(name: "seccomp_sandbox_setup_postlogin_broker", scope: !1800, file: !1800, line: 498, type: !1619, scopeLine: 499, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!25090 = !DILocation(line: 500, column: 3, scope: !25089)
!25091 = !DILocation(line: 501, column: 3, scope: !25089)
!25092 = !DILocation(line: 502, column: 3, scope: !25089)
!25093 = !DILocation(line: 503, column: 1, scope: !25089)
!25094 = distinct !DISubprogram(name: "seccomp_sandbox_lockdown", scope: !1800, file: !1800, line: 506, type: !1619, scopeLine: 507, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !128)
!25095 = !DILocalVariable(name: "len", scope: !25094, file: !1800, line: 508, type: !1697)
!25096 = !DILocation(line: 508, column: 10, scope: !25094)
!25097 = !DILocation(line: 508, column: 17, scope: !25094)
!25098 = !DILocation(line: 508, column: 33, scope: !25094)
!25099 = !DILocation(line: 509, column: 17, scope: !25094)
!25100 = !DILocation(line: 509, column: 37, scope: !25094)
!25101 = !DILocation(line: 508, column: 38, scope: !25094)
!25102 = !DILocation(line: 510, column: 17, scope: !25094)
!25103 = !DILocation(line: 510, column: 37, scope: !25094)
!25104 = !DILocation(line: 509, column: 42, scope: !25094)
!25105 = !DILocation(line: 511, column: 17, scope: !25094)
!25106 = !DILocation(line: 511, column: 37, scope: !25094)
!25107 = !DILocation(line: 510, column: 42, scope: !25094)
!25108 = !DILocation(line: 511, column: 42, scope: !25094)
!25109 = !DILocation(line: 513, column: 30, scope: !25094)
!25110 = !DILocation(line: 513, column: 3, scope: !25094)
!25111 = !DILocalVariable(name: "filters", scope: !25094, file: !1800, line: 513, type: !25112)
!25112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25113, elements: !1707)
!25113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !25114, line: 24, size: 64, elements: !25115)
!25114 = !DIFile(filename: "/usr/include/linux/filter.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!25115 = !{!25116, !25119, !25121, !25122}
!25116 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !25113, file: !25114, line: 25, baseType: !25117, size: 16)
!25117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !25118, line: 24, baseType: !225)
!25118 = !DIFile(filename: "/usr/include/asm-generic/int-ll64.h", directory: "/home/byshen/clang_files/llvm-9.0.0.src/lib/Transforms/AceInstrument/software/vsftpd/vsftpd-3.0.3")
!25119 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !25113, file: !25114, line: 26, baseType: !25120, size: 8, offset: 16)
!25120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !25118, line: 21, baseType: !1076)
!25121 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !25113, file: !25114, line: 27, baseType: !25120, size: 8, offset: 24)
!25122 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !25113, file: !25114, line: 28, baseType: !25123, size: 32, offset: 32)
!25123 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !25118, line: 27, baseType: !26)
!25124 = !DILocation(line: 513, column: 22, scope: !25094)
!25125 = !DILocalVariable(name: "p_filter", scope: !25094, file: !1800, line: 514, type: !25126)
!25126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25113, size: 64)
!25127 = !DILocation(line: 514, column: 23, scope: !25094)
!25128 = !DILocalVariable(name: "prog", scope: !25094, file: !1800, line: 515, type: !25129)
!25129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog", file: !25114, line: 31, size: 128, elements: !25130)
!25130 = !{!25131, !25132}
!25131 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !25129, file: !25114, line: 32, baseType: !225, size: 16)
!25132 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !25129, file: !25114, line: 33, baseType: !25126, size: 64, offset: 64)
!25133 = !DILocation(line: 515, column: 21, scope: !25094)
!25134 = !DILocalVariable(name: "i", scope: !25094, file: !1800, line: 516, type: !1697)
!25135 = !DILocation(line: 516, column: 10, scope: !25094)
!25136 = !DILocalVariable(name: "ret", scope: !25094, file: !1800, line: 517, type: !19)
!25137 = !DILocation(line: 517, column: 7, scope: !25094)
!25138 = !DILocation(line: 519, column: 14, scope: !25094)
!25139 = !DILocation(line: 519, column: 8, scope: !25094)
!25140 = !DILocation(line: 519, column: 12, scope: !25094)
!25141 = !DILocation(line: 520, column: 8, scope: !25094)
!25142 = !DILocation(line: 520, column: 15, scope: !25094)
!25143 = !DILocation(line: 522, column: 3, scope: !25094)
!25144 = !DILocation(line: 522, column: 13, scope: !25094)
!25145 = !DILocation(line: 522, column: 18, scope: !25094)
!25146 = !DILocation(line: 523, column: 3, scope: !25094)
!25147 = !DILocation(line: 523, column: 13, scope: !25094)
!25148 = !DILocation(line: 523, column: 16, scope: !25094)
!25149 = !DILocation(line: 524, column: 3, scope: !25094)
!25150 = !DILocation(line: 524, column: 13, scope: !25094)
!25151 = !DILocation(line: 524, column: 16, scope: !25094)
!25152 = !DILocation(line: 526, column: 3, scope: !25094)
!25153 = !DILocation(line: 526, column: 13, scope: !25094)
!25154 = !DILocation(line: 526, column: 15, scope: !25094)
!25155 = !DILocation(line: 527, column: 11, scope: !25094)
!25156 = !DILocation(line: 528, column: 3, scope: !25094)
!25157 = !DILocation(line: 528, column: 13, scope: !25094)
!25158 = !DILocation(line: 528, column: 18, scope: !25094)
!25159 = !DILocation(line: 529, column: 3, scope: !25094)
!25160 = !DILocation(line: 529, column: 13, scope: !25094)
!25161 = !DILocation(line: 529, column: 16, scope: !25094)
!25162 = !DILocation(line: 530, column: 3, scope: !25094)
!25163 = !DILocation(line: 530, column: 13, scope: !25094)
!25164 = !DILocation(line: 530, column: 16, scope: !25094)
!25165 = !DILocation(line: 532, column: 3, scope: !25094)
!25166 = !DILocation(line: 532, column: 13, scope: !25094)
!25167 = !DILocation(line: 532, column: 15, scope: !25094)
!25168 = !DILocation(line: 533, column: 11, scope: !25094)
!25169 = !DILocation(line: 534, column: 3, scope: !25094)
!25170 = !DILocation(line: 534, column: 13, scope: !25094)
!25171 = !DILocation(line: 534, column: 18, scope: !25094)
!25172 = !DILocation(line: 535, column: 3, scope: !25094)
!25173 = !DILocation(line: 535, column: 13, scope: !25094)
!25174 = !DILocation(line: 535, column: 16, scope: !25094)
!25175 = !DILocation(line: 536, column: 3, scope: !25094)
!25176 = !DILocation(line: 536, column: 13, scope: !25094)
!25177 = !DILocation(line: 536, column: 16, scope: !25094)
!25178 = !DILocation(line: 538, column: 3, scope: !25094)
!25179 = !DILocation(line: 538, column: 13, scope: !25094)
!25180 = !DILocation(line: 538, column: 15, scope: !25094)
!25181 = !DILocation(line: 539, column: 11, scope: !25094)
!25182 = !DILocation(line: 542, column: 3, scope: !25094)
!25183 = !DILocation(line: 542, column: 13, scope: !25094)
!25184 = !DILocation(line: 542, column: 18, scope: !25094)
!25185 = !DILocation(line: 543, column: 3, scope: !25094)
!25186 = !DILocation(line: 543, column: 13, scope: !25094)
!25187 = !DILocation(line: 543, column: 16, scope: !25094)
!25188 = !DILocation(line: 544, column: 3, scope: !25094)
!25189 = !DILocation(line: 544, column: 13, scope: !25094)
!25190 = !DILocation(line: 544, column: 16, scope: !25094)
!25191 = !DILocation(line: 546, column: 3, scope: !25094)
!25192 = !DILocation(line: 546, column: 13, scope: !25094)
!25193 = !DILocation(line: 546, column: 15, scope: !25094)
!25194 = !DILocation(line: 547, column: 11, scope: !25094)
!25195 = !DILocation(line: 549, column: 10, scope: !25196)
!25196 = distinct !DILexicalBlock(scope: !25094, file: !1800, line: 549, column: 3)
!25197 = !DILocation(line: 549, column: 8, scope: !25196)
!25198 = !DILocation(line: 549, column: 15, scope: !25199)
!25199 = distinct !DILexicalBlock(scope: !25196, file: !1800, line: 549, column: 3)
!25200 = !DILocation(line: 549, column: 19, scope: !25199)
!25201 = !DILocation(line: 549, column: 17, scope: !25199)
!25202 = !DILocation(line: 549, column: 3, scope: !25196)
!25203 = !DILocalVariable(name: "block_size", scope: !25204, file: !1800, line: 551, type: !19)
!25204 = distinct !DILexicalBlock(scope: !25199, file: !1800, line: 550, column: 3)
!25205 = !DILocation(line: 551, column: 9, scope: !25204)
!25206 = !DILocation(line: 552, column: 18, scope: !25207)
!25207 = distinct !DILexicalBlock(scope: !25204, file: !1800, line: 552, column: 9)
!25208 = !DILocation(line: 552, column: 9, scope: !25207)
!25209 = !DILocation(line: 552, column: 9, scope: !25204)
!25210 = !DILocation(line: 554, column: 18, scope: !25211)
!25211 = distinct !DILexicalBlock(scope: !25207, file: !1800, line: 553, column: 5)
!25212 = !DILocation(line: 555, column: 5, scope: !25211)
!25213 = !DILocation(line: 556, column: 23, scope: !25214)
!25214 = distinct !DILexicalBlock(scope: !25207, file: !1800, line: 556, column: 14)
!25215 = !DILocation(line: 556, column: 14, scope: !25214)
!25216 = !DILocation(line: 556, column: 14, scope: !25207)
!25217 = !DILocation(line: 558, column: 18, scope: !25218)
!25218 = distinct !DILexicalBlock(scope: !25214, file: !1800, line: 557, column: 5)
!25219 = !DILocation(line: 559, column: 5, scope: !25218)
!25220 = !DILocation(line: 560, column: 23, scope: !25221)
!25221 = distinct !DILexicalBlock(scope: !25214, file: !1800, line: 560, column: 14)
!25222 = !DILocation(line: 560, column: 14, scope: !25221)
!25223 = !DILocation(line: 560, column: 14, scope: !25214)
!25224 = !DILocation(line: 562, column: 18, scope: !25225)
!25225 = distinct !DILexicalBlock(scope: !25221, file: !1800, line: 561, column: 5)
!25226 = !DILocation(line: 563, column: 5, scope: !25225)
!25227 = !DILocation(line: 565, column: 5, scope: !25204)
!25228 = !DILocation(line: 565, column: 15, scope: !25204)
!25229 = !DILocation(line: 565, column: 20, scope: !25204)
!25230 = !DILocation(line: 566, column: 5, scope: !25204)
!25231 = !DILocation(line: 566, column: 15, scope: !25204)
!25232 = !DILocation(line: 566, column: 18, scope: !25204)
!25233 = !DILocation(line: 567, column: 20, scope: !25204)
!25234 = !DILocation(line: 567, column: 5, scope: !25204)
!25235 = !DILocation(line: 567, column: 15, scope: !25204)
!25236 = !DILocation(line: 567, column: 18, scope: !25204)
!25237 = !DILocation(line: 568, column: 30, scope: !25204)
!25238 = !DILocation(line: 568, column: 19, scope: !25204)
!25239 = !DILocation(line: 568, column: 5, scope: !25204)
!25240 = !DILocation(line: 568, column: 15, scope: !25204)
!25241 = !DILocation(line: 568, column: 17, scope: !25204)
!25242 = !DILocation(line: 569, column: 13, scope: !25204)
!25243 = !DILocation(line: 571, column: 18, scope: !25244)
!25244 = distinct !DILexicalBlock(scope: !25204, file: !1800, line: 571, column: 9)
!25245 = !DILocation(line: 571, column: 9, scope: !25244)
!25246 = !DILocation(line: 571, column: 9, scope: !25204)
!25247 = !DILocation(line: 573, column: 7, scope: !25248)
!25248 = distinct !DILexicalBlock(scope: !25244, file: !1800, line: 572, column: 5)
!25249 = !DILocation(line: 573, column: 17, scope: !25248)
!25250 = !DILocation(line: 573, column: 22, scope: !25248)
!25251 = !DILocation(line: 574, column: 7, scope: !25248)
!25252 = !DILocation(line: 574, column: 17, scope: !25248)
!25253 = !DILocation(line: 574, column: 20, scope: !25248)
!25254 = !DILocation(line: 575, column: 7, scope: !25248)
!25255 = !DILocation(line: 575, column: 17, scope: !25248)
!25256 = !DILocation(line: 575, column: 20, scope: !25248)
!25257 = !DILocation(line: 576, column: 37, scope: !25248)
!25258 = !DILocation(line: 576, column: 28, scope: !25248)
!25259 = !DILocation(line: 576, column: 40, scope: !25248)
!25260 = !DILocation(line: 576, column: 45, scope: !25248)
!25261 = !DILocation(line: 576, column: 24, scope: !25248)
!25262 = !DILocation(line: 576, column: 7, scope: !25248)
!25263 = !DILocation(line: 576, column: 17, scope: !25248)
!25264 = !DILocation(line: 576, column: 19, scope: !25248)
!25265 = !DILocation(line: 577, column: 15, scope: !25248)
!25266 = !DILocation(line: 578, column: 7, scope: !25248)
!25267 = !DILocation(line: 578, column: 17, scope: !25248)
!25268 = !DILocation(line: 578, column: 22, scope: !25248)
!25269 = !DILocation(line: 579, column: 7, scope: !25248)
!25270 = !DILocation(line: 579, column: 17, scope: !25248)
!25271 = !DILocation(line: 579, column: 20, scope: !25248)
!25272 = !DILocation(line: 580, column: 7, scope: !25248)
!25273 = !DILocation(line: 580, column: 17, scope: !25248)
!25274 = !DILocation(line: 580, column: 20, scope: !25248)
!25275 = !DILocation(line: 581, column: 30, scope: !25248)
!25276 = !DILocation(line: 581, column: 21, scope: !25248)
!25277 = !DILocation(line: 581, column: 7, scope: !25248)
!25278 = !DILocation(line: 581, column: 17, scope: !25248)
!25279 = !DILocation(line: 581, column: 19, scope: !25248)
!25280 = !DILocation(line: 582, column: 15, scope: !25248)
!25281 = !DILocation(line: 583, column: 5, scope: !25248)
!25282 = !DILocation(line: 584, column: 18, scope: !25283)
!25283 = distinct !DILexicalBlock(scope: !25204, file: !1800, line: 584, column: 9)
!25284 = !DILocation(line: 584, column: 9, scope: !25283)
!25285 = !DILocation(line: 584, column: 9, scope: !25204)
!25286 = !DILocation(line: 586, column: 7, scope: !25287)
!25287 = distinct !DILexicalBlock(scope: !25283, file: !1800, line: 585, column: 5)
!25288 = !DILocation(line: 586, column: 17, scope: !25287)
!25289 = !DILocation(line: 586, column: 22, scope: !25287)
!25290 = !DILocation(line: 587, column: 7, scope: !25287)
!25291 = !DILocation(line: 587, column: 17, scope: !25287)
!25292 = !DILocation(line: 587, column: 20, scope: !25287)
!25293 = !DILocation(line: 588, column: 7, scope: !25287)
!25294 = !DILocation(line: 588, column: 17, scope: !25287)
!25295 = !DILocation(line: 588, column: 20, scope: !25287)
!25296 = !DILocation(line: 589, column: 37, scope: !25287)
!25297 = !DILocation(line: 589, column: 28, scope: !25287)
!25298 = !DILocation(line: 589, column: 40, scope: !25287)
!25299 = !DILocation(line: 589, column: 45, scope: !25287)
!25300 = !DILocation(line: 589, column: 24, scope: !25287)
!25301 = !DILocation(line: 589, column: 7, scope: !25287)
!25302 = !DILocation(line: 589, column: 17, scope: !25287)
!25303 = !DILocation(line: 589, column: 19, scope: !25287)
!25304 = !DILocation(line: 590, column: 15, scope: !25287)
!25305 = !DILocation(line: 591, column: 7, scope: !25287)
!25306 = !DILocation(line: 591, column: 17, scope: !25287)
!25307 = !DILocation(line: 591, column: 22, scope: !25287)
!25308 = !DILocation(line: 592, column: 7, scope: !25287)
!25309 = !DILocation(line: 592, column: 17, scope: !25287)
!25310 = !DILocation(line: 592, column: 20, scope: !25287)
!25311 = !DILocation(line: 593, column: 7, scope: !25287)
!25312 = !DILocation(line: 593, column: 17, scope: !25287)
!25313 = !DILocation(line: 593, column: 20, scope: !25287)
!25314 = !DILocation(line: 594, column: 30, scope: !25287)
!25315 = !DILocation(line: 594, column: 21, scope: !25287)
!25316 = !DILocation(line: 594, column: 7, scope: !25287)
!25317 = !DILocation(line: 594, column: 17, scope: !25287)
!25318 = !DILocation(line: 594, column: 19, scope: !25287)
!25319 = !DILocation(line: 595, column: 15, scope: !25287)
!25320 = !DILocation(line: 596, column: 5, scope: !25287)
!25321 = !DILocation(line: 597, column: 18, scope: !25322)
!25322 = distinct !DILexicalBlock(scope: !25204, file: !1800, line: 597, column: 9)
!25323 = !DILocation(line: 597, column: 9, scope: !25322)
!25324 = !DILocation(line: 597, column: 9, scope: !25204)
!25325 = !DILocalVariable(name: "arg", scope: !25326, file: !1800, line: 599, type: !19)
!25326 = distinct !DILexicalBlock(scope: !25322, file: !1800, line: 598, column: 5)
!25327 = !DILocation(line: 599, column: 11, scope: !25326)
!25328 = !DILocation(line: 599, column: 26, scope: !25326)
!25329 = !DILocation(line: 599, column: 17, scope: !25326)
!25330 = !DILocalVariable(name: "code", scope: !25326, file: !1800, line: 600, type: !19)
!25331 = !DILocation(line: 600, column: 11, scope: !25326)
!25332 = !DILocalVariable(name: "val", scope: !25326, file: !1800, line: 601, type: !19)
!25333 = !DILocation(line: 601, column: 11, scope: !25326)
!25334 = !DILocation(line: 601, column: 26, scope: !25326)
!25335 = !DILocation(line: 601, column: 17, scope: !25326)
!25336 = !DILocalVariable(name: "jt", scope: !25326, file: !1800, line: 602, type: !19)
!25337 = !DILocation(line: 602, column: 11, scope: !25326)
!25338 = !DILocalVariable(name: "jf", scope: !25326, file: !1800, line: 603, type: !19)
!25339 = !DILocation(line: 603, column: 11, scope: !25326)
!25340 = !DILocation(line: 604, column: 11, scope: !25341)
!25341 = distinct !DILexicalBlock(scope: !25326, file: !1800, line: 604, column: 11)
!25342 = !DILocation(line: 604, column: 15, scope: !25341)
!25343 = !DILocation(line: 604, column: 11, scope: !25326)
!25344 = !DILocation(line: 606, column: 13, scope: !25345)
!25345 = distinct !DILexicalBlock(scope: !25341, file: !1800, line: 605, column: 7)
!25346 = !DILocation(line: 607, column: 14, scope: !25345)
!25347 = !DILocation(line: 608, column: 16, scope: !25345)
!25348 = !DILocation(line: 608, column: 15, scope: !25345)
!25349 = !DILocation(line: 608, column: 13, scope: !25345)
!25350 = !DILocation(line: 609, column: 12, scope: !25345)
!25351 = !DILocation(line: 610, column: 12, scope: !25345)
!25352 = !DILocation(line: 611, column: 7, scope: !25345)
!25353 = !DILocation(line: 612, column: 7, scope: !25326)
!25354 = !DILocation(line: 612, column: 17, scope: !25326)
!25355 = !DILocation(line: 612, column: 22, scope: !25326)
!25356 = !DILocation(line: 613, column: 7, scope: !25326)
!25357 = !DILocation(line: 613, column: 17, scope: !25326)
!25358 = !DILocation(line: 613, column: 20, scope: !25326)
!25359 = !DILocation(line: 614, column: 7, scope: !25326)
!25360 = !DILocation(line: 614, column: 17, scope: !25326)
!25361 = !DILocation(line: 614, column: 20, scope: !25326)
!25362 = !DILocation(line: 615, column: 28, scope: !25326)
!25363 = !DILocation(line: 615, column: 32, scope: !25326)
!25364 = !DILocation(line: 615, column: 37, scope: !25326)
!25365 = !DILocation(line: 615, column: 24, scope: !25326)
!25366 = !DILocation(line: 615, column: 7, scope: !25326)
!25367 = !DILocation(line: 615, column: 17, scope: !25326)
!25368 = !DILocation(line: 615, column: 19, scope: !25326)
!25369 = !DILocation(line: 616, column: 15, scope: !25326)
!25370 = !DILocation(line: 617, column: 24, scope: !25326)
!25371 = !DILocation(line: 617, column: 7, scope: !25326)
!25372 = !DILocation(line: 617, column: 17, scope: !25326)
!25373 = !DILocation(line: 617, column: 22, scope: !25326)
!25374 = !DILocation(line: 618, column: 22, scope: !25326)
!25375 = !DILocation(line: 618, column: 7, scope: !25326)
!25376 = !DILocation(line: 618, column: 17, scope: !25326)
!25377 = !DILocation(line: 618, column: 20, scope: !25326)
!25378 = !DILocation(line: 619, column: 22, scope: !25326)
!25379 = !DILocation(line: 619, column: 7, scope: !25326)
!25380 = !DILocation(line: 619, column: 17, scope: !25326)
!25381 = !DILocation(line: 619, column: 20, scope: !25326)
!25382 = !DILocation(line: 620, column: 21, scope: !25326)
!25383 = !DILocation(line: 620, column: 7, scope: !25326)
!25384 = !DILocation(line: 620, column: 17, scope: !25326)
!25385 = !DILocation(line: 620, column: 19, scope: !25326)
!25386 = !DILocation(line: 621, column: 15, scope: !25326)
!25387 = !DILocation(line: 622, column: 5, scope: !25326)
!25388 = !DILocation(line: 623, column: 5, scope: !25204)
!25389 = !DILocation(line: 623, column: 15, scope: !25204)
!25390 = !DILocation(line: 623, column: 20, scope: !25204)
!25391 = !DILocation(line: 624, column: 5, scope: !25204)
!25392 = !DILocation(line: 624, column: 15, scope: !25204)
!25393 = !DILocation(line: 624, column: 18, scope: !25204)
!25394 = !DILocation(line: 625, column: 5, scope: !25204)
!25395 = !DILocation(line: 625, column: 15, scope: !25204)
!25396 = !DILocation(line: 625, column: 18, scope: !25204)
!25397 = !DILocation(line: 626, column: 19, scope: !25398)
!25398 = distinct !DILexicalBlock(scope: !25204, file: !1800, line: 626, column: 9)
!25399 = !DILocation(line: 626, column: 10, scope: !25398)
!25400 = !DILocation(line: 626, column: 9, scope: !25204)
!25401 = !DILocation(line: 629, column: 7, scope: !25402)
!25402 = distinct !DILexicalBlock(scope: !25398, file: !1800, line: 627, column: 5)
!25403 = !DILocation(line: 629, column: 17, scope: !25402)
!25404 = !DILocation(line: 629, column: 19, scope: !25402)
!25405 = !DILocation(line: 630, column: 5, scope: !25402)
!25406 = !DILocation(line: 634, column: 43, scope: !25407)
!25407 = distinct !DILexicalBlock(scope: !25398, file: !1800, line: 632, column: 5)
!25408 = !DILocation(line: 634, column: 34, scope: !25407)
!25409 = !DILocation(line: 634, column: 32, scope: !25407)
!25410 = !DILocation(line: 634, column: 7, scope: !25407)
!25411 = !DILocation(line: 634, column: 17, scope: !25407)
!25412 = !DILocation(line: 634, column: 19, scope: !25407)
!25413 = !DILocation(line: 636, column: 13, scope: !25204)
!25414 = !DILocation(line: 637, column: 18, scope: !25415)
!25415 = distinct !DILexicalBlock(scope: !25204, file: !1800, line: 637, column: 9)
!25416 = !DILocation(line: 637, column: 9, scope: !25415)
!25417 = !DILocation(line: 637, column: 9, scope: !25204)
!25418 = !DILocation(line: 640, column: 7, scope: !25419)
!25419 = distinct !DILexicalBlock(scope: !25415, file: !1800, line: 638, column: 5)
!25420 = !DILocation(line: 640, column: 17, scope: !25419)
!25421 = !DILocation(line: 640, column: 22, scope: !25419)
!25422 = !DILocation(line: 641, column: 7, scope: !25419)
!25423 = !DILocation(line: 641, column: 17, scope: !25419)
!25424 = !DILocation(line: 641, column: 20, scope: !25419)
!25425 = !DILocation(line: 642, column: 7, scope: !25419)
!25426 = !DILocation(line: 642, column: 17, scope: !25419)
!25427 = !DILocation(line: 642, column: 20, scope: !25419)
!25428 = !DILocation(line: 643, column: 7, scope: !25419)
!25429 = !DILocation(line: 643, column: 17, scope: !25419)
!25430 = !DILocation(line: 643, column: 19, scope: !25419)
!25431 = !DILocation(line: 644, column: 15, scope: !25419)
!25432 = !DILocation(line: 645, column: 5, scope: !25419)
!25433 = !DILocation(line: 646, column: 3, scope: !25204)
!25434 = !DILocation(line: 549, column: 36, scope: !25199)
!25435 = !DILocation(line: 549, column: 3, scope: !25199)
!25436 = distinct !{!25436, !25202, !25437}
!25437 = !DILocation(line: 646, column: 3, scope: !25196)
!25438 = !DILocation(line: 648, column: 3, scope: !25094)
!25439 = !DILocation(line: 648, column: 13, scope: !25094)
!25440 = !DILocation(line: 648, column: 18, scope: !25094)
!25441 = !DILocation(line: 649, column: 3, scope: !25094)
!25442 = !DILocation(line: 649, column: 13, scope: !25094)
!25443 = !DILocation(line: 649, column: 16, scope: !25094)
!25444 = !DILocation(line: 650, column: 3, scope: !25094)
!25445 = !DILocation(line: 650, column: 13, scope: !25094)
!25446 = !DILocation(line: 650, column: 16, scope: !25094)
!25447 = !DILocation(line: 656, column: 3, scope: !25094)
!25448 = !DILocation(line: 656, column: 13, scope: !25094)
!25449 = !DILocation(line: 656, column: 15, scope: !25094)
!25450 = !DILocation(line: 659, column: 9, scope: !25094)
!25451 = !DILocation(line: 659, column: 7, scope: !25094)
!25452 = !DILocation(line: 660, column: 7, scope: !25453)
!25453 = distinct !DILexicalBlock(scope: !25094, file: !1800, line: 660, column: 7)
!25454 = !DILocation(line: 660, column: 11, scope: !25453)
!25455 = !DILocation(line: 660, column: 7, scope: !25094)
!25456 = !DILocation(line: 662, column: 9, scope: !25457)
!25457 = distinct !DILexicalBlock(scope: !25458, file: !1800, line: 662, column: 9)
!25458 = distinct !DILexicalBlock(scope: !25453, file: !1800, line: 661, column: 3)
!25459 = !DILocation(line: 662, column: 15, scope: !25457)
!25460 = !DILocation(line: 662, column: 9, scope: !25458)
!25461 = !DILocation(line: 665, column: 7, scope: !25462)
!25462 = distinct !DILexicalBlock(scope: !25457, file: !1800, line: 663, column: 5)
!25463 = !DILocation(line: 667, column: 5, scope: !25458)
!25464 = !DILocation(line: 668, column: 3, scope: !25458)
!25465 = !DILocation(line: 670, column: 8, scope: !25466)
!25466 = distinct !DILexicalBlock(scope: !25094, file: !1800, line: 670, column: 7)
!25467 = !DILocation(line: 670, column: 7, scope: !25094)
!25468 = !DILocation(line: 672, column: 5, scope: !25469)
!25469 = distinct !DILexicalBlock(scope: !25466, file: !1800, line: 671, column: 3)
!25470 = !DILocation(line: 684, column: 9, scope: !25094)
!25471 = !DILocation(line: 684, column: 7, scope: !25094)
!25472 = !DILocation(line: 685, column: 7, scope: !25473)
!25473 = distinct !DILexicalBlock(scope: !25094, file: !1800, line: 685, column: 7)
!25474 = !DILocation(line: 685, column: 11, scope: !25473)
!25475 = !DILocation(line: 685, column: 7, scope: !25094)
!25476 = !DILocation(line: 687, column: 9, scope: !25477)
!25477 = distinct !DILexicalBlock(scope: !25478, file: !1800, line: 687, column: 9)
!25478 = distinct !DILexicalBlock(scope: !25473, file: !1800, line: 686, column: 3)
!25479 = !DILocation(line: 687, column: 15, scope: !25477)
!25480 = !DILocation(line: 687, column: 9, scope: !25478)
!25481 = !DILocation(line: 690, column: 7, scope: !25482)
!25482 = distinct !DILexicalBlock(scope: !25477, file: !1800, line: 688, column: 5)
!25483 = !DILocation(line: 692, column: 5, scope: !25478)
!25484 = !DILocation(line: 693, column: 3, scope: !25478)
!25485 = !DILocation(line: 694, column: 1, scope: !25094)
